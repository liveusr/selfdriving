
lpc1758_freertos_newCAN_demo.elf:     file format elf32-littlearm
lpc1758_freertos_newCAN_demo.elf
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00010000

Program Header:
0x70000001 off    0x0001f430 vaddr 0x00027430 paddr 0x00027430 align 2**2
         filesz 0x00000008 memsz 0x00000008 flags r--
    LOAD off    0x00008000 vaddr 0x00010000 paddr 0x00010000 align 2**15
         filesz 0x00017438 memsz 0x00017438 flags r-x
    LOAD off    0x00024000 vaddr 0x2007c000 paddr 0x00027438 align 2**15
         filesz 0x000001cc memsz 0x000001cc flags rw-
    LOAD off    0x000241d0 vaddr 0x2007c1d0 paddr 0x00027604 align 2**15
         filesz 0x00000000 memsz 0x00000954 flags rw-
private flags = 5000002: [Version5 EABI] [has entry point]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn  Flags
  0 .text         00017430  00010000  00010000  00008000  2**3  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000001cc  2007c000  00027438  00024000  2**2  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000954  2007c1d0  00027604  000241d0  2**3  ALLOC
  3 .comment      00000070  00000000  00000000  000241cc  2**0  CONTENTS, READONLY
  4 .ARM.attributes 00000031  00000000  00000000  0002423c  2**0  CONTENTS, READONLY
  5 .ARM.exidx    00000008  00027430  00027430  0001f430  2**2  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .debug_frame  00001e10  00000000  00000000  00024270  2**2  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
00010000 l    d  .text	00000000 .text
2007c000 l    d  .data	00000000 .data
2007c1d0 l    d  .bss	00000000 .bss
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00027430 l    d  .ARM.exidx	00000000 .ARM.exidx
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 startup.cpp
000100f2 l       .text	00000000 _MSP
0001c0c4 l     F .text	0000003c isr_forwarder_routine
00010190 l     F .text	0000006c isr_reset
2007c05c l     O .data	0000008c g_isr_array
00000000 l    df *ABS*	00000000 memory.cpp
2007c1d0 l     O .bss	00000004 g_last_sbrk_ptr
2007c1d4 l     O .bss	00000004 g_next_heap_ptr
2007c1d8 l     O .bss	00000004 g_last_sbrk_size
2007c1dc l     O .bss	00000004 g_sbrk_calls
00000000 l    df *ABS*	00000000 newlib_syscalls.c
2007c1e0 l     O .bss	00000004 g_input_dev_fptr
2007c1e4 l     O .bss	00000004 g_output_dev_fptr
00000000 l    df *ABS*	00000000 newlib_time.c
00000000 l    df *ABS*	00000000 printf_lib.c
00000000 l    df *ABS*	00000000 handlers.cpp
00024284 l     O .text	0000000b logHandler(str&, CharDev&, void*)::__FUNCTION__
00000000 l    df *ABS*	00000000 prog_handlers.cpp
2007c208 l     O .bss	00000004 getFileHandler(str&, CharDev&, void*)::spBuffer
2007c20c l     O .bss	00000004 guard variable for getFileHandler(str&, CharDev&, void*)::spBuffer
00000000 l    df *ABS*	00000000 wireless_handlers.cpp
000114a0 l     F .text	0000003c wirelessHandlerPrintStats(CharDev&, mesh_stats_t*, unsigned char)
000114dc l     F .text	0000001e wsStatsHandler(str&, CharDev&, void*)
000114fc l     F .text	00000118 wsTxHandler(str&, CharDev&, void*)
00011614 l     F .text	00000034 wsAddrHandler(str&, CharDev&, void*)
000116bc l     F .text	00000080 wsRxHandler(str&, CharDev&, void*)
00011adc l     F .text	00000120 wsStreamHandler(str&, CharDev&, void*)
000118bc l     F .text	00000220 wsFileTxHandler(str&, CharDev&, void*)
2007c214 l     O .bss	00000004 wirelessHandler(str&, CharDev&, void*)::pCmdProcessor
00000000 l    df *ABS*	00000000 can_common.cpp
00025261 l     O .text	00000009 can_controller::can_recv(controller_id_t*, msg_id_t*, unsigned char*, unsigned short*)::__FUNCTION__
0002526a l     O .text	00000009 can_controller::can_send(controller_id_t, msg_id_t, unsigned char*, unsigned short)::__FUNCTION__
00000000 l    df *ABS*	00000000 controller_motor.cpp
00012ab8 l     F .text	0000002c _GLOBAL__sub_I_curr_pwm
2007c728 l     O .bss	00000001 heartbeat_count
2007c740 l     O .bss	00000004 msg_queue
2007c000 l     O .data	00000010 filter_list
00025454 l     O .text	00000004 canRxBufferTask::run(void*)::__FUNCTION__
00000000 l    df *ABS*	00000000 encoder_dp.cpp
2007c768 l     O .bss	00000004 motorInit()::c
2007c770 l     O .bss	00000004 ext_callback()::led
00000000 l    df *ABS*	00000000 high_level_init.cpp
00012d84 l     F .text	0000000c hl_print_line()
00012d90 l     F .text	0000002c ssp_set_max_clock
00012dbc l     F .text	00000094 hl_mount_storage(FileSystemObject&, char const*)
00000000 l    df *ABS*	00000000 remote.cpp
00000000 l    df *ABS*	00000000 terminal.cpp
00013410 l     F .text	00000034 VECTOR<terminalTask::cmdChan_t>::changeCapacity(unsigned int) [clone .part.3]
00000000 l    df *ABS*	00000000 main.cpp
00000000 l    df *ABS*	00000000 mesh.c
00013b4c l     F .text	00000026 mesh_incr_soft_timers_for_arr
00013b74 l     F .text	0000004c mesh_update_soft_timers
00013bc0 l     F .text	0000003c mesh_send_packet
00013bfc l     F .text	00000034 mesh_send_retry_packet
00013c30 l     F .text	00000024 mesh_find_rte_tbl_entry
00013c54 l     F .text	00000028 mesh_update_rte_scores
00013c7c l     F .text	00000046 mesh_get_pnd_pkt_slot
00013cc4 l     F .text	0000008c mesh_pending_packets_add
00013d50 l     F .text	00000060 mesh_get_rte_to_modify
00013db0 l     F .text	00000184 mesh_handle_pnd_pkts_for_arr
000141f6 l     F .text	0000001a mesh_send_ack
2007c010 l     O .data	00000004 g_pkt_hist_wptr
2007c849 l     O .bss	0000000c g_pkt_hist
2007c77c l     O .bss	00000014 g_driver
2007c790 l     O .bss	00000090 g_mesh_pnd_pkts
2007c820 l     O .bss	00000018 g_our_name
2007c838 l     O .bss	0000000c g_mesh_stats
2007c844 l     O .bss	00000004 s_prev_time_ms.5015
2007c848 l     O .bss	00000001 g_rpt_node
2007c855 l     O .bss	00000010 g_rte_table
2007c865 l     O .bss	00000001 g_locked
2007c014 l     O .data	00000001 g_retry_count
2007c866 l     O .bss	00000001 g_error_mask
2007c015 l     O .data	00000001 g_our_node_id
2007c867 l     O .bss	00000001 s_next_packet_id.5001
2007c868 l     O .bss	00000048 g_our_pnd_pkts
00000000 l    df *ABS*	00000000 nrf24L01Plus.c
00014574 l     F .text	00000124 nordic_transfer
00014698 l     F .text	00000020 nordic_readRegister
000146b8 l     F .text	00000020 nordic_writeRegister
00000000 l    df *ABS*	00000000 wireless.c
00014a54 l     F .text	00000030 nrf_irq_callback
00014a84 l     F .text	00000070 nrf_driver_init
00014af4 l     F .text	0000004c nrf_driver_app_recv
00014b40 l     F .text	0000005c nrf_driver_send
00014b9c l     F .text	00000022 nrf_driver_receive
00014bbe l     F .text	00000062 wireless_get_queued_pkt
00014c20 l     F .text	00000028 nrf_driver_get_timer
2007c8b0 l     O .bss	00000004 g_ack_queue
2007c8b4 l     O .bss	00000004 g_rx_queue
2007c8b8 l     O .bss	00000004 g_nrf_activity_sem
00000000 l    df *ABS*	00000000 io_source.cpp
2007c8bc l     O .bss	00000004 g_last_decoded_signal
2007c8c0 l     O .bss	00000002 g_signal_count
00025f61 l     O .text	00000080 LED_DISPLAY_CHARMAP
2007c8c4 l     O .bss	00000080 g_ir_timings
00000000 l    df *ABS*	00000000 storage.cpp
00000000 l    df *ABS*	00000000 ccsbcs.c
00025fe2 l     O .text	00000100 Tbl
000260e2 l     O .text	000001e0 tbl_lower.5649
000262c2 l     O .text	000001e0 tbl_upper.5650
00000000 l    df *ABS*	00000000 reentrant.c
00000000 l    df *ABS*	00000000 diskio.c
00000000 l    df *ABS*	00000000 sd.c
00015352 l     F .text	00000012 sys_get_uptime_ms
00015364 l     F .text	00000030 ssp_set_max_clock.constprop.2
00015394 l     F .text	00000018 ssp1_exchange_byte
2007c944 l     O .bss	00000001 g_card_type
2007c016 l     O .data	00000001 g_disk_status
00000000 l    df *ABS*	00000000 spi_flash.cpp
00015ac4 l     F .text	00000020 flash_get_mem_size_bytes()
00015ae4 l     F .text	0000006c flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)
00015b50 l     F .text	000000e0 ssp1_exchange_data
00015c30 l     F .text	00000024 flash_send_op_addr(flash_opcode_t, unsigned long)
00015c54 l     F .text	00000044 flash_read_page(unsigned char*, unsigned long, unsigned long)
00015c98 l     F .text	00000044 flash_wait_for_ready()
00015ef0 l     F .text	0000008c flash_write_page(unsigned char*, unsigned long, unsigned long)
2007c946 l     O .bss	00000002 g_flash_pagesize
000264ac l     O .text	00000010 CSWTCH.72
2007c948 l     O .bss	00000001 g_flash_capacity
2007c94c l     O .bss	00000004 g_sector_count
00000000 l    df *ABS*	00000000 fatfs_time.c
00000000 l    df *ABS*	00000000 ff.c
0001604a l     F .text	0000002e mem_cpy
00016078 l     F .text	0000000e mem_set
00016086 l     F .text	0000001e sum_sfn
000160a4 l     F .text	00000040 get_ldnumber
000160e4 l     F .text	000000b0 get_fileinfo
00016194 l     F .text	0000004a sync_window
000161e0 l     F .text	00000078 sync_fs
00016258 l     F .text	00000032 move_window
0001628c l     F .text	0000004c check_fs
000162d8 l     F .text	0000021c find_volume
000164f4 l     F .text	0000003a validate
0001652e l     F .text	0000001a unlock_fs
00016604 l     F .text	0000007e dir_sdi
00016750 l     F .text	000000a2 create_chain
000167f2 l     F .text	000000ee dir_next
000168e0 l     F .text	00000128 dir_find.part.9
00016a08 l     F .text	0000026c follow_path
00016c74 l     F .text	0000020c dir_register
00016e80 l     F .text	0000005a dir_remove
00016edc l     F .text	000000e8 dir_read.constprop.11
00016fc4 l     F .text	00000058 remove_chain
000264bc l     O .text	00000016 cst.6222
2007c950 l     O .bss	00000002 Fsid
00026516 l     O .text	00000080 ExCvt
00026596 l     O .text	0000000d LfnOfs
000265a4 l     O .text	00000016 vst.6221
2007c954 l     O .bss	00000008 FatFs
00000000 l    df *ABS*	00000000 c_list.c
00000000 l    df *ABS*	00000000 command_handler.cpp
00000000 l    df *ABS*	00000000 file_logger.c
0001838c l     F .text	00000044 logger_get_buffer_ptr
000183d0 l     F .text	000000b4 logger_write_to_file
00018484 l     F .text	000000cc logger_task
00018550 l     F .text	0000004c logger_write_log_message
2007c95c l     O .bss	00000004 g_write_buffer_queue
2007c960 l     O .bss	00000002 g_highest_file_write_time
2007c962 l     O .bss	00000002 g_blocked_calls
2007c964 l     O .bss	0000000c g_logger_calls
2007c970 l     O .bss	00000004 gp_file_buffer
2007c974 l     O .bss	00000001 g_logger_printf_mask
2007c978 l     O .bss	00000004 g_empty_buffer_queue
2007c97c l     O .bss	00000002 g_buffer_watermark
00000000 l    df *ABS*	00000000 rtc_alarm.c
00018848 l     F .text	00000026 for_each_recur_alarm_callback
0001886e l     F .text	0000005e for_each_alarm_callback
2007c980 l     O .bss	00000010 g_list_recur_alarms
2007c990 l     O .bss	00000004 g_list_timed_alarms
00000000 l    df *ABS*	00000000 scheduler_task.cpp
00018970 l     F .text	000000b4 printline(char const*, char const*)
00018a24 l     F .text	00000078 dbg_print(char const*, char const*)
2007c994 l     O .bss	00000001 g_dbg_print
2007c998 l     O .bss	00000008 gEnumObjects
2007c9a0 l     O .bss	00000004 gRunTaskSemaphore
2007c9a4 l     O .bss	00000004 gTaskEntryTaskHandle
2007c9a8 l     O .bss	00000004 gpTaskList
00000000 l    df *ABS*	00000000 str.cpp
00000000 l    df *ABS*	00000000 utilities.c
00000000 l    df *ABS*	00000000 adc.c
000192ac l     F .text	00000024 adc0_start_conversion
00000000 l    df *ABS*	00000000 can.c
000193f8 l     F .text	00000032 CAN_tx_now
0001942c l     F .text	0000008c CAN_handle_isr
00000000 l    df *ABS*	00000000 eint.c
00019920 l     F .text	0000002c handle_eint_list
0001994c l     F .text	00000038 eint3_enable.isra.0
2007c9b4 l     O .bss	00000004 gp_port2_rising_list
2007c9b8 l     O .bss	00000004 gp_port2_falling_list
2007c9bc l     O .bss	00000004 gp_port0_rising_list
2007c9c0 l     O .bss	00000004 gp_port0_falling_list
00000000 l    df *ABS*	00000000 i2c2.cpp
00000000 l    df *ABS*	00000000 lpc_pwm.cpp
00000000 l    df *ABS*	00000000 lpc_rit.c
2007c9c8 l     O .bss	00000004 g_rit_callback
00000000 l    df *ABS*	00000000 lpc_timers.c
00019bf8 l     F .text	00000020 lpc_timer_get_struct
00000000 l    df *ABS*	00000000 nrf_stream.cpp
00000000 l    df *ABS*	00000000 rtc.c
00000000 l    df *ABS*	00000000 spi_dma.c
00000000 l    df *ABS*	00000000 spi_sem.c
2007c9cc l     O .bss	00000004 mSpi0Lock
00000000 l    df *ABS*	00000000 uart0.cpp
00000000 l    df *ABS*	00000000 uart2.cpp
00000000 l    df *ABS*	00000000 uart3.cpp
00000000 l    df *ABS*	00000000 char_dev.cpp
00000000 l    df *ABS*	00000000 i2c_base.cpp
00000000 l    df *ABS*	00000000 uart_dev.cpp
00000000 l    df *ABS*	00000000 list.c
00000000 l    df *ABS*	00000000 queue.c
0001aa14 l     F .text	00000066 prvCopyDataToQueue
0001aa7a l     F .text	00000034 prvNotifyQueueSetContainer
0001aaae l     F .text	00000026 prvCopyDataFromQueue
0001aad4 l     F .text	00000078 prvUnlockQueue
00000000 l    df *ABS*	00000000 tasks.c
0001af2a l     F .text	0000002e prvResetRunTimeStatsInList
0001af58 l     F .text	00000018 prvIdleTask
0001af70 l     F .text	0000008e prvListTaskWithinSingleList
0001b000 l     F .text	00000024 prvResetNextTaskUnblockTime
0001b024 l     F .text	00000050 prvAddCurrentTaskToDelayedList
2007c9d8 l     O .bss	00000004 ulTaskSwitchedInTime
2007c9dc l     O .bss	00000004 xNumOfOverflows
2007c9e0 l     O .bss	00000004 pxDelayedTaskList
2007c9e4 l     O .bss	00000004 xSchedulerRunning
2007c9e8 l     O .bss	00000014 xDelayedTaskList1
00026b94 l     O .text	00000014 ucExpectedStackBytes.6438
2007c9fc l     O .bss	00000014 xDelayedTaskList2
2007ca10 l     O .bss	00000004 uxPendedTicks
2007ca14 l     O .bss	00000064 pxReadyTasksLists
2007ca78 l     O .bss	00000004 uxSchedulerSuspended
2007ca7c l     O .bss	00000004 ulTotalRunTime
2007ca84 l     O .bss	00000014 xPendingReadyList
2007ca98 l     O .bss	00000004 xTickCount
2007ca9c l     O .bss	00000004 pxOverflowDelayedTaskList
2007caa0 l     O .bss	00000004 uxTaskNumber
2007caa4 l     O .bss	00000004 uxCurrentNumberOfTasks
2007c058 l     O .data	00000004 xNextTaskUnblockTime
2007caa8 l     O .bss	00000004 xIdleTaskHandle
2007caac l     O .bss	00000014 xSuspendedTaskList
2007cac0 l     O .bss	00000004 uxTopReadyPriority
2007cac4 l     O .bss	00000004 xYieldPending
00000000 l    df *ABS*	00000000 port.c
0001ba48 l     F .text	00000010 prvPortStartFirstTask
0001ba90 l       .text	00000000 pxCurrentTCBConst2
0001bb30 l       .text	00000000 pxCurrentTCBConst
2007cac8 l     O .bss	00000004 uxCriticalNesting
00000000 l    df *ABS*	00000000 run_time_stats.c
2007cad0 l     O .bss	00000008 g_freertos_runtime_timer_start
00000000 l    df *ABS*	00000000 hooks.c
00000000 l    df *ABS*	00000000 heap_3.c
00000000 l    df *ABS*	00000000 core_cm3.c
00000000 l    df *ABS*	00000000 low_level_init.cpp
2007cad8 l     O .bss	00000001 g_sys_boot_type
2007cad9 l     O .bss	0000000c g_rtc_boot_time
00000000 l    df *ABS*	00000000 lpc_peripherals.c
00000000 l    df *ABS*	00000000 lpc_sys.cpp
2007cae6 l     O .bss	00000002 g_timer_rollover_count
00000000 l    df *ABS*	00000000 sys_clock.cpp
0001c158 l     F .text	00000014 sys_clock_pll0_feed()
0001c16c l     F .text	00000078 sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]
00000000 l    df *ABS*	00000000 uart0_min.c
00000000 l    df *ABS*	00000000 vmi_class_type_info.cc
00000000 l    df *ABS*	00000000 pure.cc
00000000 l    df *ABS*	00000000 guard.cc
00000000 l    df *ABS*	00000000 tinfo.cc
00000000 l    df *ABS*	00000000 class_type_info.cc
00000000 l    df *ABS*	00000000 si_class_type_info.cc
00000000 l    df *ABS*	00000000 eh_terminate.cc
00000000 l    df *ABS*	00000000 _ashldi3.o
00000000 l    df *ABS*	00000000 _arm_addsubdf3.o
00000000 l    df *ABS*	00000000 _arm_fixunsdfsi.o
00000000 l    df *ABS*	00000000 _arm_truncdfsf2.o
00000000 l    df *ABS*	00000000 _arm_addsubsf3.o
00000000 l    df *ABS*	00000000 _arm_muldivsf3.o
00000000 l    df *ABS*	00000000 _arm_cmpsf2.o
00000000 l    df *ABS*	00000000 _arm_fixsfsi.o
00000000 l    df *ABS*	00000000 _arm_fixunssfsi.o
00000000 l    df *ABS*	00000000 _aeabi_uldivmod.o
00000000 l    df *ABS*	00000000 bpabi.c
00000000 l    df *ABS*	00000000 _dvmd_tls.o
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 abort.c
00000000 l    df *ABS*	00000000 atoi.c
00000000 l    df *ABS*	00000000 ctime.c
00000000 l    df *ABS*	00000000 findfp.c
0001db98 l     F .text	00000048 std.isra.0
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 init.c
00000000 l    df *ABS*	00000000 lcltime.c
00000000 l    df *ABS*	00000000 lcltime_r.c
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 memchr-stub.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 memcpy-stub.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mktime.c
0001de80 l     F .text	000001a4 validate_structure
00027134 l     O .text	00000030 _DAYS_BEFORE_MONTH
00027164 l     O .text	00000030 DAYS_IN_MONTH
00000000 l    df *ABS*	00000000 mktm_r.c
00027194 l     O .text	00000060 mon_lengths
000271f4 l     O .text	00000008 year_lengths
00000000 l    df *ABS*	00000000 mstats.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 rand.c
00000000 l    df *ABS*	00000000 realloc.c
00000000 l    df *ABS*	00000000 refill.c
0001ea58 l     F .text	00000012 lflush
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 scanf.c
00000000 l    df *ABS*	00000000 setvbuf.c
00000000 l    df *ABS*	00000000 signal.c
00000000 l    df *ABS*	00000000 signalr.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcasecmp.c
00000000 l    df *ABS*	00000000 strcat.c
00000000 l    df *ABS*	00000000 strchr.c
00000000 l    df *ABS*	00000000 lib_a-strcmp.o
00000000 l    df *ABS*	00000000 strcpy.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 strncasecmp.c
00000000 l    df *ABS*	00000000 strncmp.c
00000000 l    df *ABS*	00000000 strncpy.c
00000000 l    df *ABS*	00000000 strrchr.c
00000000 l    df *ABS*	00000000 strstr.c
00000000 l    df *ABS*	00000000 strtod.c
0001efc4 l     F .text	00000028 match
0001efec l     F .text	0000003e sulp
00027200 l     O .text	00000028 tinytens
00027228 l     O .text	00000014 fpi.5246
0002723c l     O .text	00000014 fpinan.5282
00000000 l    df *ABS*	00000000 strtok_r.c
00000000 l    df *ABS*	00000000 strtol.c
00000000 l    df *ABS*	00000000 vfprintf.c
00000000 l    df *ABS*	00000000 vfscanf.c
00000000 l    df *ABS*	00000000 syswrite.c
00000000 l    df *ABS*	00000000 time.c
00000000 l    df *ABS*	00000000 tolower.c
00000000 l    df *ABS*	00000000 toupper.c
00000000 l    df *ABS*	00000000 tzlock.c
00000000 l    df *ABS*	00000000 ungetc.c
00000000 l    df *ABS*	00000000 vfprintf.c
00020594 l     F .text	0000002c __sfputc_r
00000000 l    df *ABS*	00000000 vfprintf_float.c
00000000 l    df *ABS*	00000000 vfprintf_i.c
00000000 l    df *ABS*	00000000 vfscanf.c
00000000 l    df *ABS*	00000000 vfscanf_float.c
00000000 l    df *ABS*	00000000 vfscanf_i.c
00000000 l    df *ABS*	00000000 vsnprintf.c
00000000 l    df *ABS*	00000000 vsscanf.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 asctime.c
00000000 l    df *ABS*	00000000 asctime_r.c
000272df l     O .text	00000015 day_name.4594
000272f4 l     O .text	00000024 mon_name.4595
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 div.c
00000000 l    df *ABS*	00000000 dtoa.c
00021cec l     F .text	0000011e quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 gdtoa-gethex.c
00022b10 l     F .text	0000006a rshift
00000000 l    df *ABS*	00000000 gdtoa-hexnan.c
00023002 l     F .text	00000026 L_shift
00000000 l    df *ABS*	00000000 gettimeofdayr.c
00000000 l    df *ABS*	00000000 gettzinfo.c
2007c154 l     O .data	00000040 tzinfo
00000000 l    df *ABS*	00000000 locale.c
2007c194 l     O .data	00000038 lconv
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mprec.c
00027420 l     O .text	0000000c p05.5281
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sccl.c
00000000 l    df *ABS*	00000000 sf_nan.c
00000000 l    df *ABS*	00000000 strtoul.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 _arm_muldivdf3.o
00000000 l    df *ABS*	00000000 _arm_cmpdf2.o
00000000 l    df *ABS*	00000000 _arm_fixdfsi.o
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 impure.c
2007c0f0 l     O .data	00000060 impure_data
00000000 l    df *ABS*	00000000 eh_term_handler.cc
00000000 l    df *ABS*	00000000 reent.c
00000000 l    df *ABS*	00000000 
00027438 l       .ARM.exidx	00000000 __exidx_end
00027438 l       .ARM.exidx	00000000 _etext
20084000 l       *ABS*	00000000 __top_RamAHB32
00027430 l       .text	00000000 __exidx_start
00000000 l       *UND*	00000000 ResetISR
0001a1bc g     F .text	0000001c Uart3::Uart3()
00018cc8 g     F .text	00000044 scheduler_start(bool, bool)
00023ca4 g     F .text	00000012 _malloc_usable_size_r
00010f14 g     F .text	00000030 rebootHandler(str&, CharDev&, void*)
000207ec g     F .text	000000c0 __cvt
00018efc g     F .text	00000030 str::beginsWith(char const*) const
0001bf54 g     F .text	00000054 lpc_sys_setup_system_timer
00021700 g     F .text	000000c0 _scanf_chars
00025428 g     O .text	00000020 vtable for canRxBufferTask
0001c8a0 g     F .text	00000004 std::type_info::__is_function_p() const
00019e44 g     F .text	000000d0 rtc_init
000239ea g     F .text	00000048 __any_on
00023c84 g     F .text	00000020 _isatty_r
000241b0 g     F .text	00000012 .hidden __aeabi_dcmple
000190ee g     F .text	00000006 str::operator int() const
0001eeb8 g     F .text	00000010 strcpy
00021c2c g     F .text	0000002c asctime
0001d5dc g     F .text	00000030 .hidden __gnu_uldivmod_helper
0001cae4 g     F .text	00000018 .hidden __ashldi3
00012718  w    F .text	00000170 debugTask::run(void*)
00010368 g     F .text	00000004 _getpid
0001e8ac g     F .text	000000c0 _puts_r
0001014c  w    F .text	00000010 TIMER2_IRQHandler
00018ca8 g     F .text	00000020 scheduler_add_task(scheduler_task*)
000240ec g     F .text	0000007a .hidden __cmpdf2
0002317c g     F .text	00000024 _lseek_r
0001655e g     F .text	000000a6 get_fat
2007c76c g     O .bss	00000004 yield
00019bdc g     F .text	0000001c RIT_IRQHandler
00013f68 g     F .text	000000ec mesh_form_pkt
00018f98 g     F .text	00000028 str::eraseFirst(int)
000190e6 g     F .text	00000004 str::operator==(char const*) const
000240ec g     F .text	0000007a .hidden __eqdf2
0001d610 g     F .text	000002a0 .hidden __divdi3
00015ee0 g     F .text	00000010 flash_supports_metadata
00026b59 g     O .text	00000009 typeinfo name for UartDev
000100cc g       .text	00000000 __section_table_start
00023148 g     F .text	00000024 _gettimeofday_r
0001bae4 g     F .text	00000014 vPortExitCritical
0001fcbe g     F .text	00000006 strtok_r
0001ce10 g     F .text	0000005a .hidden __floatdidf
0001014c  w    F .text	00000010 I2C0_IRQHandler
00019cdc  w    F .text	00000012 NordicStream::~NordicStream()
2007c218  w    O .bss	00000004 SingletonTemplate<LED>::mpSingletonInstance
0001ed38 g     F .text	00000024 _kill_r
0001e87c g     F .text	00000030 printf
0001bfa8 g     F .text	00000028 sys_get_uptime_us
00013ab0  w    F .text	00000014 wirelessTask::~wirelessTask()
0001ee06 g     F .text	00000024 __sseek
0001dc0c g     F .text	00000060 __sinit
0001a194  w    F .text	00000014 Uart3::~Uart3()
00021a84 g     F .text	000000a8 __swbuf_r
0001a482 g     F .text	00000016 I2C_Base::checkDeviceResponse(char)
2007cb1c g     O .bss	00000004 _daylight
0001bab0 g     F .text	00000010 ulPortSetInterruptMask
0001064c g     F .text	00000022 memInfoHandler(str&, CharDev&, void*)
2007c1ec  w    O .bss	00000004 Storage::getFlashDrive()::pFlashDrive
0001c9d0 g     F .text	00000014 __cxxabiv1::__si_class_type_info::~__si_class_type_info()
00026fa4 g     O .text	00000025 typeinfo name for __cxxabiv1::__si_class_type_info
00026b08  w    O .text	0000001c vtable for Uart3
0001dbe0 g     F .text	0000002c __sfmoreglue
00021a20 g     F .text	00000048 _vsiscanf_r
000186c8 g     F .text	00000140 logger_log
00014f98 g     F .text	00000032 I2C_Temp::getCelsius()
0001233c  w    F .text	0000000c canRxBufferTask::~canRxBufferTask()
0001c730 g     F .text	00000126 __cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
00011648 g     F .text	00000074 wsRteHandler(str&, CharDev&, void*)
0001f030 g     F .text	00000c38 _strtod_r
0001d2d0 g     F .text	00000136 .hidden __divsf3
00012384  w    F .text	00000014 canRxProcessTask::~canRxProcessTask()
0001572c g     F .text	0000009c sd_read
00026ac0  w    O .text	0000001c typeinfo name for SingletonTemplate<Uart3>
00022b7a g     F .text	0000002a __hexdig_fun
00025464 g     O .text	0000000e typeinfo name for encoderTask
000252d0  w    O .text	00000020 vtable for scheduler_task
00012330  w    F .text	0000000c canRxProcessTask::~canRxProcessTask()
00013aa4  w    F .text	0000000c wirelessTask::~wirelessTask()
0001a74e g     F .text	00000078 UartDev::getChar(char*, unsigned int)
2007c758 g     O .bss	00000004 disp_dir
00026ab8  w    O .text	00000008 typeinfo for SingletonTemplate<Uart3>
00019c18 g     F .text	00000050 lpc_timer_enable
0001014c  w    F .text	00000010 PWM1_IRQHandler
0001de38 g     F .text	00000036 memmove
2007c9c4 g     O .bss	00000004 PWM::msTcMax
0001474c g     F .text	00000008 nordic_clear_packet_sent_flag
2007c1f8  w    O .bss	00000004 SingletonTemplate<I2C2>::mpSingletonInstance
0001ad36 g     F .text	00000072 xQueueGenericSendFromISR
00023238 g     F .text	0000006a _Balloc
00018dd4 g     F .text	0000004c str::tokenize(char const*, int, ...)
0001fc68 g     F .text	00000056 __strtok_r
00019d88 g     F .text	00000054 rtc_gettime
0001d4f4 g     F .text	0000004c .hidden __fixsfsi
000100d8 g       .text	00000000 __data_section_table_end
00013558 g     F .text	0000005c terminalTask::handleEchoAndBackspace(terminalTask::cmdChan_t*, char)
00019a04 g     F .text	00000030 eint3_enable_port0
0001014c  w    F .text	00000010 I2C1_IRQHandler
00012330  w    F .text	0000000c canRxProcessTask::~canRxProcessTask()
00025310  w    O .text	00000020 vtable for debugTask
00026960  w    O .text	00000024 typeinfo name for SingletonTemplate<NordicStream>
0001927a g     F .text	0000000e is_freertos_running
00012c50 g     F .text	00000024 pwm_dcmotor(float)
0001014c  w    F .text	00000010 EINT2_IRQHandler
2007c760 g     O .bss	00000004 extIntCount
0001014c  w    F .text	00000010 UART1_IRQHandler
000240dc g     F .text	0000008a .hidden __gtdf2
00018d0c g     F .text	00000034 scheduler_task::scheduler_task(char const*, unsigned long, unsigned char, void*)
00026b88 g     O .text	0000000c typeinfo for UartDev
0001c1e4 g     F .text	000000b0 sys_clock_configure()
000269b8 g     O .text	00000020 typeinfo for NordicStream
0001e778 g     F .text	0000005c _mallinfo_r
0001af12 g     F .text	00000018 xQueueSelectFromSet
0001ba38 g     F .text	00000010 vRunTimeStatIsrExit
00012ae8  w    F .text	0000000c encoderTask::~encoderTask()
00012e50  w    F .text	00000028 SingletonTemplate<TemperatureSensor>::getInstance()
00012ae4 g     F .text	00000004 encoderTask::run(void*)
2007ca80 g     O .bss	00000004 pxCurrentTCB
000153ac g     F .text	00000034 wait_ready
00010f44 g     F .text	00000034 learnIrHandler(str&, CharDev&, void*)
00019984 g     F .text	00000080 EINT3_IRQHandler
00014d90 g     F .text	00000068 IR_Sensor::decodeIrCode()
000146fe g     F .text	00000018 nordic_standby1_to_tx_mode1
0001a44a g     F .text	0000001a I2C_Base::readReg(char, char)
00018db0 g     F .text	00000008 str::clear()
0001a0a8 g     F .text	00000044 Uart0::init(unsigned int, int, int)
00013f4c g     F .text	0000000c mesh_get_node_address
00014df8 g     F .text	00000030 IR_Sensor::init()
00023c60 g     F .text	00000024 _fstat_r
0001906a g     F .text	00000040 str::trimStart(char const*)
00014210 g     F .text	0000002c mesh_get_routing_entry
2007cb20 g     O .bss	00000004 errno
000217c0 g     F .text	000001ec _scanf_i
0001edca g     F .text	00000004 __seofread
00010560 g     F .text	000000ec taskListHandler(str&, CharDev&, void*)
000147ee g     F .text	00000040 nordic_set_intr_signals
00024178 g     F .text	00000010 .hidden __aeabi_cdcmple
2007c9d0  w    O .bss	00000004 SingletonTemplate<Uart2>::mpSingletonInstance
0001a218 g     F .text	00000012 CharDev::~CharDev()
000146e6 g     F .text	00000008 nordic_clear_all_intr_flags
00018d40 g     F .text	00000018 scheduler_task::getSharedObject(unsigned char)
0001cf58 g     F .text	00000160 .hidden __aeabi_fadd
00018d82 g     F .text	00000024 str::~str()
0001cf54 g     F .text	00000164 .hidden __subsf3
000151fc g     F .text	00000024 ff_wtoupper
00025908 g     O .text	00000020 vtable for terminalTask
00026998 g     O .text	0000001c vtable for NordicStream
0001a442 g     F .text	00000008 I2C_Base::readRegisters(char, char, char*, unsigned int)
00019164 g     F .text	0000000c str::str(int)
00021a68 g     F .text	0000001c vsscanf
000212d8 g     F .text	00000050 _vfiscanf_r
00012314  w    F .text	00000004 scheduler_task::taskEntry()
0001bf0c g     F .text	00000048 lpc_pclk
00012bdc g     F .text	00000028 encoderTask::encoderTask()
00012b7c g     F .text	00000060 TIMER3_IRQHandler
00019aa0 g     F .text	00000014 I2C2::I2C2()
0001497c g     F .text	0000000e nordic_set_rx_pipe0_addr
0001a108 g     F .text	00000024 UART0_IRQHandler
00012c04 g     F .text	0000004c motorInit()
2007c748 g     O .bss	00000001 startup
0001bb6c g     F .text	00000030 xPortStartScheduler
2007c72c g     O .bss	00000004 base_speed
00010518  w    F .text	00000048 Storage::getSDDrive()
0001b250 g     F .text	00000018 vTaskEndScheduler
0001de26 g     F .text	00000012 memcpy
0001b728 g     F .text	0000005c vTaskPlaceOnEventList
00023028 g     F .text	00000120 __hexnan
00019f44 g     F .text	000000c4 ssp1_dma_transfer_block
00024168 g     F .text	00000020 .hidden __aeabi_cdrcmple
2007cae8 g     O .bss	00000004 gp_timer_ptr
0001b074 g     F .text	00000188 xTaskGenericCreate
0001297c g     F .text	00000088 canRxBufferTask::run(void*)
0001ebc8 g     F .text	00000110 setvbuf
000104d0  w    F .text	00000048 Storage::getFlashDrive()
00026a50  w    O .text	0000001c typeinfo name for SingletonTemplate<Uart2>
00011bfc g     F .text	00000198 can_controller::enum_to_string()
0001d4e0 g     F .text	00000012 .hidden __aeabi_fcmpgt
0001db64 g     F .text	00000032 _cleanup_r
0001c922 g     F .text	0000000c __cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
0001fe9c g     F .text	000001d8 _svfprintf_r
0001cda0 g     F .text	00000022 .hidden __floatsidf
0001bb58  w    F .text	00000014 vPortSetupTimerInterrupt
00026984 g     O .text	0000000f typeinfo name for NordicStream
000147e0 g     F .text	0000000e nordic_flush_rx_fifo
000240e4 g     F .text	00000082 .hidden __ltdf2
2007c729 g     O .bss	00000001 speed_flag
00025458 g     O .text	0000000c typeinfo for encoderTask
000100fc  w    F .text	00000010 isr_nmi
0001bb34 g     F .text	00000024 xPortSysTickHandler
00011e56 g     F .text	00000022 can_controller::can_controller(controller_id_t, can_msg_id_t*, unsigned int)
0001527c g     F .text	00000026 disk_initialize
00013f58 g     F .text	00000010 mesh_set_retry_count
0001c930 g     F .text	00000014 __cxxabiv1::__class_type_info::~__class_type_info()
0001d580 g     F .text	00000000 .hidden __aeabi_uldivmod
0001a580 g     F .text	00000122 I2C_Base::i2cStateMachine()
00012bdc g     F .text	00000028 encoderTask::encoderTask()
0001e96c g     F .text	00000010 puts
00026e2c g     O .text	0000000c typeinfo for __cxxabiv1::__vmi_class_type_info
00013aa4  w    F .text	0000000c wirelessTask::~wirelessTask()
0001233c  w    F .text	0000000c canRxBufferTask::~canRxBufferTask()
0001bc56 g     F .text	0000001a vPortFree
000112c4 g     F .text	000000ac flashProgHandler(str&, CharDev&, void*)
00023ac0 g     F .text	00000044 __fpclassifyd
00020408 g     F .text	00000018 tolower
000212d8 g     F .text	00000050 _vfscanf_r
00014f4a g     F .text	00000004 LED::getValues() const
0002396e g     F .text	0000004a __ratio
0001eb98 g     F .text	00000030 iscanf
00017ab4 g     F .text	00000120 f_rename
00014ed0 g     F .text	00000004 LED::init()
00015234 g     F .text	00000004 ff_del_syncobj
00013444  w    F .text	00000050 terminalTask::~terminalTask()
00026a1c  w    O .text	00000007 typeinfo name for Uart0
0001ddcc g     F .text	00000010 malloc
0001a1fc  w    F .text	00000004 CharDev::flush()
000197b0 g     F .text	0000000c CAN_bypass_filter_accept_all_msgs
000100e0  w    F .text	0000001c isr_hard_fault
00014e28 g     F .text	00000018 LED_Display::setLeftDigit(char)
0001ecd8 g     F .text	00000050 _raise_r
000103c6 g     F .text	00000004 _fstat
0001a008 g     F .text	00000030 spi1_lock
0001d0c0 g     F .text	0000001c .hidden __aeabi_i2f
00027330 g     O .text	000000c8 __mprec_tens
00011d94 g     F .text	000000c2 can_controller::can_setup(can_msg_id_t*, unsigned int)
0001b860 g     F .text	00000020 uxTaskGetStackHighWaterMark
00010c74 g     F .text	000000b0 newFileHandler(str&, CharDev&, void*)
0001baf8 g     F .text	0000003c xPortPendSVHandler
00010d24 g     F .text	0000013c dcpHandler(str&, CharDev&, void*)
00021a00 g     F .text	00000020 vsnprintf
0001d410 g     F .text	00000066 .hidden __lesf2
0001ce6c g     F .text	00000040 .hidden __fixunsdfsi
0001a9ac g     F .text	00000018 vListInsertEnd
000155a0 g     F .text	0000017c sd_initialize
00014958 g     F .text	00000016 nordic_set_addr_width
000200ee g     F .text	0000003a __ssrefill_r
0001498c g     F .text	000000c8 nordic_init
2007c73a g     O .bss	00000003 periodic_encoder_data
0001ed5c g     F .text	00000004 _getpid_r
000152a2 g     F .text	0000000e disk_status
00014c48 g     F .text	0000004c wireless_init
000196fc g     F .text	0000009c CAN_tx
0001cd80 g     F .text	0000001e .hidden __aeabi_ui2d
00019a34 g     F .text	0000006c I2C2::init(unsigned int)
00023174 g     F .text	00000008 _localeconv_r
00025f10  w    O .text	0000000c typeinfo for wirelessTask
0001c3f8 g     F .text	00000014 __cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()
00023462 g     F .text	00000012 __i2b
0001c970 g     F .text	00000026 __cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const
00014898 g     F .text	00000024 nordic_set_channel
0001cafc g     F .text	00000000 .hidden __aeabi_drsub
0001eb78 g     F .text	00000020 _sbrk_r
000123ac  w    F .text	00000024 periodicEncoderTask::run(void*)
00026ee8 g     O .text	00000020 vtable for std::type_info
000141b4 g     F .text	00000042 mesh_send
00012af4  w    F .text	00000014 encoderTask::~encoderTask()
00010734 g     F .text	00000110 logHandler(str&, CharDev&, void*)
00026a48  w    O .text	00000008 typeinfo for SingletonTemplate<Uart2>
2007c750 g     O .bss	00000004 disp_speed
00023a9c g     F .text	00000024 _read_r
00025f00 g     O .text	0000000f typeinfo name for terminalTask
0001a9a6 g     F .text	00000006 vListInitialiseItem
00015320 g     F .text	00000032 disk_ioctl
0001014c  w    F .text	00000010 PLL0_IRQHandler
0002419c g     F .text	00000012 .hidden __aeabi_dcmplt
00019d10 g     F .text	00000038 NordicStream::getChar(char*, unsigned int)
000194b8 g     F .text	00000028 CAN_IRQHandler
00022aec g     F .text	00000024 fflush
0001badc g     F .text	00000006 vPortClearInterruptMask
0001011c  w    F .text	00000010 isr_bus_fault
0001014c  w    F .text	00000010 PLL1_IRQHandler
00026b50 g     O .text	00000009 typeinfo name for CharDev
00014e58 g     F .text	0000003a LED_Display::init()
0001cdc4 g     F .text	0000003a .hidden __extendsfdf2
00020128 g     F .text	0000029c __ssvfscanf_r
00023f0c g     F .text	000001d0 .hidden __aeabi_ddiv
2007c754 g     O .bss	00000001 rev_flag
0001014c  w    F .text	00000010 SSP0_IRQHandler
000148bc g     F .text	0000002e nordic_set_air_data_rate
0001cb08 g     F .text	00000276 .hidden __adddf3
0001d418 g     F .text	0000005e .hidden __nesf2
00010ba0 g     F .text	0000003c mkdirHandler(str&, CharDev&, void*)
0001014c  w    F .text	00000010 CANAct_IRQHandler
00026f68 g     O .text	0000002c vtable for __cxxabiv1::__si_class_type_info
0001453c g     F .text	00000024 mesh_get_max_timeout_before_packet_fails
00018808 g     F .text	00000040 logger_log_raw
00023824 g     F .text	000000a6 __b2d
00019654 g     F .text	0000008c CAN_rx
00023cb8 g     F .text	00000254 .hidden __aeabi_dmul
0001bc84 g     F .text	0000000c sys_get_boot_type
000103cc g     F .text	00000024 _isatty
0001c956 g     F .text	0000001a __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
0001496e g     F .text	0000000e nordic_set_tx_address
00010274 g     F .text	00000004 operator delete(void*)
00027130 g     O .text	00000004 _global_impure_ptr
0001c40c g     F .text	00000012 __cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()
00023a4e g     F .text	0000004c _realloc_r
0001dd54 g     F .text	0000004c __libc_init_array
0001eed8 g     F .text	00000044 strncasecmp
00018250 g     F .text	0000013c CommandProcessor::handleCommand(str&, CharDev&)
00015492 g     F .text	00000052 xmit_datablock
0001a6d4 g     F .text	0000005a UartDev::putChar(char, unsigned int)
00011e88 g     F .text	00000020 can_controller::processReset()
0001d8b0 g     F .text	00000290 .hidden __udivdi3
000147ca g     F .text	00000016 nordic_read_rx_fifo
00010f98 g     F .text	00000188 i2cIoHandler(str&, CharDev&, void*)
000273f8 g     O .text	00000028 __mprec_bigtens
00023344 g     F .text	00000084 __s2b
0001db40 g     F .text	0000000e abort
0001cd80 g     F .text	0000001e .hidden __floatunsidf
00015cdc g     F .text	0000009c flash_initialize
000101fc g     F .text	00000074 _sbrk
00019cc8  w    F .text	00000014 NordicStream::~NordicStream()
000236e6 g     F .text	0000003a __mcmp
2007c75c g     O .bss	00000004 distance
0001bc38 g     F .text	0000001e pvPortMalloc
00011e7c g     F .text	00000004 can_controller::get_rx_bytes()
00026a8c  w    O .text	00000007 typeinfo name for Uart2
00019ad8 g     F .text	00000084 PWM::PWM(PWM::pwmType, unsigned int)
00025411 g     O .text	00000012 typeinfo name for canRxBufferTask
000178a4 g     F .text	000000ba f_unlink
0001a096  w    F .text	00000012 Uart0::~Uart0()
0001014c  w    F .text	00000010 I2S_IRQHandler
0001036c g     F .text	00000004 _init
000133f4  w    F .text	00000018 SingletonTemplate<IR_Sensor>::getInstance()
0001ba94 g     F .text	00000002 vPortEndScheduler
00019ab4 g     F .text	00000024 I2C2_IRQHandler
0001a990 g     F .text	00000016 vListInitialise
000103c4 g     F .text	00000002 syscalls_init
0001a194  w    F .text	00000014 Uart3::~Uart3()
000100cc g       .text	00000000 __data_section_table
0001fdc8 g     F .text	0000001c strtol
0001a12c  w    F .text	00000014 Uart2::~Uart2()
0001cad4 g     F .text	00000010 std::terminate()
0001ceac g     F .text	0000009e .hidden __aeabi_d2f
0001a2c2 g     F .text	0000007a CharDev::printf(char const*, ...)
0001b278 g     F .text	00000018 xTaskGetTickCount
0001ac08 g     F .text	000000e2 xQueueGenericSend
0001cf54 g     F .text	00000164 .hidden __aeabi_fsub
000188cc g     F .text	000000a4 RTC_IRQHandler
00025f30  w    O .text	00000020 vtable for wirelessTask
2007cb24 g       .bss	00000000 _ebss
00018a9c g     F .text	0000011c scheduler_c_task_private(void*)
0001c41e g     F .text	0000007a __cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
0001014c  w    F .text	00000010 TIMER0_IRQHandler
0001bc70 g     F .text	00000006 __set_PSP
000134a8 g     F .text	000000b0 terminalTask::terminalTask(unsigned char)
0001a270 g     F .text	00000052 CharDev::gets(char*, int, unsigned int)
2007c73d g     O .bss	00000003 speed_dir_cmd
0001a72e g     F .text	00000020 UartDev::flush()
00021a00 g     F .text	00000020 vsniprintf
00026f44 g     O .text	00000022 typeinfo name for __cxxabiv1::__class_type_info
0002043a g     F .text	00000002 __tz_unlock
0001014c  w    F .text	00000010 SPI_IRQHandler
0001ef6c g     F .text	00000026 strrchr
000233c8 g     F .text	00000040 __hi0bits
0001015c  w    F .text	00000012 isr_sys_tick
00014940 g     F .text	00000018 nordic_set_payload_for_pipe
0001b53c g     F .text	0000008c uxTaskGetSystemState
0001d4cc g     F .text	00000012 .hidden __aeabi_fcmpge
000241ec g     F .text	0000004e .hidden __fixdfsi
00010bdc g     F .text	0000003c rmHandler(str&, CharDev&, void*)
00019d48 g     F .text	00000040 NordicStream::NordicStream()
00015e4c g     F .text	00000040 flash_write_permanent_id
2007c9ac g     O .bss	00000004 g_adc_result_queue
0001d0ec g     F .text	0000007c .hidden __floatdisf
00026a98  w    O .text	0000001c vtable for Uart2
00012ea8 g     F .text	0000054c high_level_init()
0001a8b8 g     F .text	00000028 UartDev::UartDev(unsigned int*)
0001b9a8 g     F .text	00000068 vTaskResetRunTimeStats
00018d58 g     F .text	0000002a str::str(char*, int)
0001c890 g     F .text	0000000c std::type_info::~type_info()
000108c4 g     F .text	00000130 catHandler(str&, CharDev&, void*)
0001c294 g     F .text	000000b4 sys_get_cpu_clock
000203c4 g     F .text	0000001c write
00012494 g     F .text	0000022c canRxProcessTask::handle_speed_dir_command(msg_t)
00014d20  w    F .text	00000030 i2c2_device::get16BitRegister(unsigned char)
0001bca4 g     F .text	00000238 low_level_init()
0001c8a8 g     F .text	00000014 std::type_info::~type_info()
0001d408 g     F .text	0000006e .hidden __gtsf2
000126dc  w    F .text	0000003c SingletonTemplate<LED_Display>::getInstance()
000186ac g     F .text	0000001c logger_set_printf
0001bc14 g     F .text	00000024 vApplicationMallocFailedHook
0001b784 g     F .text	0000006c xTaskRemoveFromEventList
0001c100 g     F .text	00000058 isr_hard_fault_handler
0001a0ec g     F .text	0000001c Uart0::Uart0()
000190f4 g     F .text	00000014 str::operator[](int)
0001cb08 g     F .text	00000276 .hidden __aeabi_dadd
000240e4 g     F .text	00000082 .hidden __ledf2
0001db56 g     F .text	0000000e ctime
2007c778  w    O .bss	00000004 SingletonTemplate<Acceleration_Sensor>::mpSingletonInstance
00018058 g     F .text	00000032 c_list_for_each_elm
0001ee70 g     F .text	0000001a strcat
0001d4b8 g     F .text	00000012 .hidden __aeabi_fcmple
000235a4 g     F .text	0000009c __pow5mult
0001ce00 g     F .text	0000006a .hidden __aeabi_ul2d
00014728 g     F .text	00000024 nordic_standby1_to_rx
0001c8a4 g     F .text	00000004 std::type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
0001014c  w    F .text	00000010 EINT1_IRQHandler
0001c008 g     F .text	000000bc TIMER1_IRQHandler
00014f5c g     F .text	00000018 Switches::getSwitchValues()
0002710c g     O .text	00000020 __sf_fake_stderr
00026a6c  w    O .text	00000020 typeinfo for Uart2
0001808c g     F .text	00000078 CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)
00019204 g     F .text	0000001a str::operator+=(char)
00013804  w    F .text	00000022 Uart0::getcharIntrDriven(char)
00018f2c g     F .text	00000030 str::beginsWithIgnoreCase(char const*) const
00013ac4  w    F .text	0000000a wirelessTask::run(void*)
00014764 g     F .text	0000004c nordic_mode1_send_single_packet
00010e60 g     F .text	000000b4 storageHandler(str&, CharDev&, void*)
00015404 g     F .text	0000008e rcvr_datablock
0001a170 g     F .text	00000024 UART2_IRQHandler
0001a05c  w    F .text	00000014 UartDev::~UartDev()
0001bbb0 g     F .text	00000014 uxGetTimerForRunTimeStats
0001423c g     F .text	0000001c mesh_get_num_routing_entries
000126c0 g     F .text	0000001c canRxProcessTask::handle_drive_mode(msg_t)
0001fde4 g     F .text	000000b8 __ssputs_r
00013f34 g     F .text	00000018 mesh_set_node_address
0001a070  w    F .text	00000014 Uart0::~Uart0()
0001c996 g     F .text	00000038 __cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
0001c3f8 g     F .text	00000014 __cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()
0001230c  w    F .text	00000004 scheduler_task::init()
00018fc0 g     F .text	00000020 str::eraseLast(int)
000241d8 g     F .text	00000012 .hidden __aeabi_dcmpgt
0001c8ee g     F .text	00000034 __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
2007c1f0  w    O .bss	00000004 SingletonTemplate<TemperatureSensor>::mpSingletonInstance
000205c0 g     F .text	00000024 __sfputs_r
00014f52 g     F .text	00000006 Light_Sensor::getRawValue()
0001ddec g     F .text	0000001c memchr
00020914  w    F .text	0000041a _printf_float
0001a038 g     F .text	00000024 spi1_unlock
0001b808 g     F .text	0000004c xTaskCheckForTimeOut
0001e6f0 g     F .text	00000088 _free_r
00018104 g     F .text	0000009c CommandProcessor::getRegisteredCommandList(CharDev&)
000252b4  w    O .text	0000000c typeinfo for debugTask
000241c4 g     F .text	00000012 .hidden __aeabi_dcmpge
0001a154 g     F .text	0000001c Uart2::Uart2()
00018ee6 g     F .text	00000016 str::firstIndexOf(char const*) const
00010f78  w    F .text	00000020 SingletonTemplate<I2C2>::getInstance()
0001c348 g     F .text	00000060 uart0_init
2007c1d0 g       .bss	00000000 _bss
000191c0 g     F .text	00000022 str::ensureMemoryToInsertNChars(int)
00020074 g     F .text	0000007a _sungetc_r
00012e90  w    F .text	00000018 SingletonTemplate<Switches>::getInstance()
00017580 g     F .text	00000024 f_close
0001571c g     F .text	00000010 sd_status
0001cb04 g     F .text	0000027a .hidden __aeabi_dsub
0001e024 g     F .text	000002cc mktime
0001014c g     F .text	00000010 isr_default_handler
000147c2 g     F .text	00000008 nordic_clear_packet_available_flag
000269d8  w    O .text	00000008 typeinfo for SingletonTemplate<Uart0>
0001b268 g     F .text	00000010 vTaskSuspendAll
0001ef92 g     F .text	00000032 strstr
2007c9d4  w    O .bss	00000004 SingletonTemplate<Uart3>::mpSingletonInstance
00026ed4 g     O .text	0000000d typeinfo name for std::type_info
0001b290 g     F .text	00000018 xTaskGetTickCountFromISR
000123d0 g     F .text	00000028 canRxBufferTask::canRxBufferTask(unsigned char)
0001ce00 g     F .text	0000006a .hidden __floatundidf
00015ed4 g     F .text	0000000c flash_get_page_size
0001e9d0 g     F .text	00000074 rand
000103f0 g     F .text	00000004 _lseek
0001c858 g     F .text	00000014 __cxa_pure_virtual
00023640 g     F .text	000000a6 __lshift
00012c90 g     F .text	00000084 reverseInit()
000135b4 g     F .text	00000040 terminalTask::addCommandChannel(CharDev*, bool)
0001d0c0 g     F .text	0000001c .hidden __floatsisf
0001a9f4 g     F .text	00000020 uxListRemove
2007c21c g     O .bss	00000400 message_id_str
00014d08  w    F .text	00000018 i2c2_device::writeReg(unsigned char, unsigned char)
000150ec g     F .text	00000046 Storage::read(char const*, void*, unsigned int, unsigned int)
000171bc g     F .text	0000017c f_read
0001b940 g     F .text	00000068 vTaskPriorityDisinherit
00025448 g     O .text	0000000c typeinfo for canRxBufferTask
00019d48 g     F .text	00000040 NordicStream::NordicStream()
0001ef1c g     F .text	0000002c strncmp
000192d0 g     F .text	0000003c ADC_IRQHandler
0001ca2a g     F .text	0000007c __cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
0001c3a8 g     F .text	00000018 uart0_getchar
00014f40 g     F .text	0000000a LED::set(int, bool)
0001917e g     F .text	00000042 str::printf(char const*, ...)
00018e20 g     F .text	00000016 str::compareTo(char const*) const
000109f4 g     F .text	000001ac lsHandler(str&, CharDev&, void*)
00023474 g     F .text	00000130 __multiply
0001777c g     F .text	0000005e f_readdir
0001189c  w    F .text	00000020 SingletonTemplate<NordicStream>::getInstance()
00012a04 g     F .text	000000b4 canRxProcessTask::run(void*)
0001b8ac g     F .text	00000094 vTaskPriorityInherit
20083fe0 g       *ABS*	00000000 _vStackTop
00015220 g     F .text	00000014 ff_cre_syncobj
0001d4f4 g     F .text	0000004c .hidden __aeabi_f2iz
00018d82 g     F .text	00000024 str::~str()
0001ef48 g     F .text	00000024 strncpy
00018da6 g     F .text	00000006 str::getLen() const
2007caec g     O .bss	00000028 __malloc_current_mallinfo
000190aa g     F .text	0000003c str::trimEnd(char const*)
00012d18 g     F .text	0000004c ext_callback()
0001d418 g     F .text	0000005e .hidden __eqsf2
000238ca g     F .text	000000a4 __d2b
0001ee34 g     F .text	0000003c strcasecmp
00012324  w    F .text	0000000c periodicEncoderTask::~periodicEncoderTask()
2007c1e8  w    O .bss	00000004 Storage::getSDDrive()::pSDCardDrive
0001b5c8 g     F .text	000000c0 vTaskSwitchContext
0001c890 g     F .text	0000000c std::type_info::~type_info()
0001014c  w    F .text	00000010 SSP1_IRQHandler
0001a0ec g     F .text	0000001c Uart0::Uart0()
00026b28 g     O .text	0000001c vtable for CharDev
2007c74c g     O .bss	00000004 current_speed
0001caa6 g     F .text	00000024 __cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
00013494  w    F .text	00000012 terminalTask::~terminalTask()
000123f8 g     F .text	0000002c canRxProcessTask::canRxProcessTask(unsigned char)
0001ea44 g     F .text	00000014 realloc
0001a22a g     F .text	00000028 CharDev::put(char const*, unsigned int)
00026e38 g     O .text	00000026 typeinfo name for __cxxabiv1::__vmi_class_type_info
00014cbc g     F .text	0000004c wireless_service
00014ed4 g     F .text	00000040 LED::setAll(char)
00023b70 g     F .text	000000f0 _strtoul_r
2007c749 g     O .bss	00000001 drive_mode
00015d78 g     F .text	00000050 flash_read_sectors
000147b0 g     F .text	00000012 nordic_is_packet_available
000100e0 g       .text	00000000 __bss_section_table_end
2007c61c g     O .bss	00000001 error_flag
000253fe g     O .text	00000013 typeinfo name for canRxProcessTask
0001d2d0 g     F .text	00000136 .hidden __aeabi_fdiv
00018dac g     F .text	00000004 str::getCapacity() const
00021ca4 g     F .text	00000020 _close_r
2007c1fc  w    O .bss	00000004 SingletonTemplate<Uart0>::mpSingletonInstance
0001cda0 g     F .text	00000022 .hidden __aeabi_i2d
00010844 g     F .text	00000080 cpHandler(str&, CharDev&, void*)
00010180 g     F .text	00000010 bss_init(unsigned int, unsigned int)
000140b0 g     F .text	00000104 mesh_init
0001a6a4 g     F .text	00000030 I2C_Base::handleInterrupt()
00012398  w    F .text	00000014 canRxBufferTask::~canRxBufferTask()
00012348  w    F .text	00000014 scheduler_task::~scheduler_task()
0001de08 g     F .text	0000001e memcmp
2007c210  w    O .bss	00000004 SingletonTemplate<NordicStream>::mpSingletonInstance
0001925a g     F .text	00000004 str::operator=(char const*)
0001014c  w    F .text	00000010 USB_IRQHandler
0001d0dc g     F .text	0000008c .hidden __floatundisf
0001c9d0 g     F .text	00000014 __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0001a4f4 g     F .text	0000008c I2C_Base::init(unsigned int, unsigned int)
00021b50 g     F .text	000000dc __swsetup_r
000135f4 g     F .text	0000013a terminalTask::getCommand()
2007c9b0 g     O .bss	00000004 g_adc_mutex
0001bbdc g     F .text	00000038 vApplicationStackOverflowHook
0001d60c  w    F .text	00000002 .hidden __aeabi_ldiv0
0001b688 g     F .text	000000a0 vTaskSuspend
2007c730 g     O .bss	0000000a controller
00023f0c g     F .text	000001d0 .hidden __divdf3
0001dc6c g     F .text	00000074 __sfp
000239b8 g     F .text	00000032 __copybits
0001c89c g     F .text	00000004 std::type_info::__is_pointer_p() const
0001b2a8 g     F .text	0000000c uxTaskGetNumberOfTasks
00011370 g     F .text	00000130 getFileHandler(str&, CharDev&, void*)
00011ea8  w    F .text	0000001c SingletonTemplate<LED>::getInstance()
0001014c  w    F .text	00000010 BOD_IRQHandler
0001d0b8 g     F .text	00000024 .hidden __aeabi_ui2f
2007c018 g     O .data	00000040 g_can_structs
000219ac g     F .text	00000052 _vsnprintf_r
00023cb8 g     F .text	00000254 .hidden __muldf3
0001eda8 g     F .text	00000022 __sread
00018214 g     F .text	0000003c CommandProcessor::prepareCmdParam(str&, char const*)
00015ff8 g     F .text	00000052 get_fattime
0001925e g     F .text	0000001c delay_us
0001a084  w    F .text	00000012 UartDev::~UartDev()
0001482e g     F .text	0000003a nordic_set_crc
0001c3dc g     F .text	0000001c uart0_puts
0001ba98 g     F .text	00000018 vPortYield
0001a12c  w    F .text	00000014 Uart2::~Uart2()
0001a33c g     F .text	00000020 CharDev::CharDev()
00012424 g     F .text	00000070 canRxProcessTask::handle_heartbeat(msg_t)
00012324  w    F .text	0000000c periodicEncoderTask::~periodicEncoderTask()
00026f08 g     O .text	0000002c vtable for __cxxabiv1::__class_type_info
00022a98 g     F .text	00000054 _fflush_r
00014ca8 g     F .text	00000014 wireless_get_ack_pkt
000191e2 g     F .text	00000022 str::insertAtEnd(char const*)
00023a32 g     F .text	0000001c _calloc_r
00019b5c g     F .text	00000080 PWM::set(float)
0001bc90 g     F .text	00000014 sys_get_boot_time
000270cc g     O .text	00000020 __sf_fake_stdin
00020438 g     F .text	00000002 __tz_lock
0001d418 g     F .text	0000005e .hidden __cmpsf2
00014560 g     F .text	00000014 mesh_get_stats
00021c58 g     F .text	0000004c asctime_r
00014c94 g     F .text	00000014 wireless_get_rx_pkt
0001dda0 g     F .text	00000024 localtime
0001de6e g     F .text	00000010 memset
0001016e g     F .text	00000012 data_init(unsigned int, unsigned int, unsigned int)
00013ad0 g     F .text	0000007c main
000269e0  w    O .text	0000001c typeinfo name for SingletonTemplate<Uart0>
00019288 g     F .text	00000022 delay_ms
00019170 g     F .text	0000000e str::reserve(int)
000146d8 g     F .text	0000000e nordic_is_tx_fifo_empty
00014f58 g     F .text	00000004 Switches::init()
00014ff0 g     F .text	000000fc Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)
0001027c g     F .text	000000b0 sys_get_mem_info
2007c774  w    O .bss	00000004 SingletonTemplate<IR_Sensor>::mpSingletonInstance
00012318  w    F .text	0000000c debugTask::~debugTask()
000252f0  w    O .text	00000020 vtable for periodicEncoderTask
00014754 g     F .text	0000000e nordic_flush_tx_fifo
0001d0ec g     F .text	0000007c .hidden __aeabi_l2f
0001e97c g     F .text	00000054 srand
00018d0c g     F .text	00000034 scheduler_task::scheduler_task(char const*, unsigned long, unsigned char, void*)
0001a8b8 g     F .text	00000028 UartDev::UartDev(unsigned int*)
0001a498 g     F .text	0000005c I2C_Base::I2C_Base(LPC_I2C_TypeDef*)
000174f4 g     F .text	0000008c f_sync
000123d0 g     F .text	00000028 canRxBufferTask::canRxBufferTask(unsigned char)
0001014c  w    F .text	00000010 WDT_IRQHandler
00014e40 g     F .text	00000018 LED_Display::setRightDigit(char)
0001d410 g     F .text	00000066 .hidden __ltsf2
00014258 g     F .text	000002b0 mesh_service
0001a9c4 g     F .text	00000030 vListInsert
000120c4 g     F .text	000001c8 can_controller::can_recv(controller_id_t*, msg_id_t*, unsigned char*, unsigned short*)
000137cc  w    F .text	00000020 SingletonTemplate<Uart0>::getInstance()
0001ee2a g     F .text	00000008 __sclose
00010278 g     F .text	00000004 operator delete[](void*)
00018ed8 g     F .text	0000000e str::containsIgnoreCase(char const*) const
2007c200  w    O .bss	00000004 guard variable for Storage::getSDDrive()::pSDCardDrive
0001fcc4 g     F .text	00000104 _strtol_r
0001ceac g     F .text	0000009e .hidden __truncdfsf2
0001930c g     F .text	00000074 adc0_init
00027430 g       .text	00000000 __init_array_end
0001ba74 g     F .text	00000020 vPortSVCHandler
00021e10 g     F .text	00000b80 _dtoa_r
0001e7d4 g     F .text	000000a8 _malloc_r
000203e0 g     F .text	00000028 time
00014054 g     F .text	0000005c mesh_send_formed_pkt
00017bd4 g     F .text	00000484 f_mkfs
0001ce10 g     F .text	0000005a .hidden __aeabi_l2d
00018f5c g     F .text	0000003c str::beginsWithWholeWordIgnoreCase(char const*, char) const
0001701c g     F .text	0000007c f_mount
0001b470 g     F .text	00000078 vTaskDelayUntil
0002043c g     F .text	00000072 __submore
00026f38 g     O .text	0000000c typeinfo for __cxxabiv1::__class_type_info
00014d74 g     F .text	0000001c IR_Sensor::storeIrCode(unsigned long)
0001dce0 g     F .text	00000038 _fwalk
00013730 g     F .text	0000009c terminalTask::run(void*)
00025350 g     O .text	0000000c typeinfo for canRxProcessTask
000176fe g     F .text	0000007e f_opendir
0001aeaa g     F .text	00000052 xQueueReceiveFromISR
0001d0dc g     F .text	0000008c .hidden __aeabi_ul2f
0001b880 g     F .text	0000000c xTaskGetCurrentTaskHandle
000157c8 g     F .text	000000b8 sd_write
0001235c  w    F .text	00000014 debugTask::~debugTask()
0001d480 g     F .text	00000010 .hidden __aeabi_cfcmple
0001aba6 g     F .text	00000050 xQueueGenericCreate
00026adc  w    O .text	00000020 typeinfo for Uart3
0001d168 g     F .text	00000168 .hidden __mulsf3
0001859c g     F .text	00000034 logger_send_flush_request
0001010c  w    F .text	00000010 isr_mem_fault
0001eea4 g     F .text	00000000 strcmp
00019ad8 g     F .text	00000084 PWM::PWM(PWM::pwmType, unsigned int)
0001abf6 g     F .text	00000012 xQueueCreateCountingSemaphore
00011120 g     F .text	000001a4 healthHandler(str&, CharDev&, void*)
000134a8 g     F .text	000000b0 terminalTask::terminalTask(unsigned char)
000181a0 g     F .text	00000074 CommandProcessor::getHelpText(str&, CharDev&)
00014868 g     F .text	00000018 nordic_power_up
0001033c g     F .text	0000000c sys_set_inchar_func
00025f1c  w    O .text	0000000f typeinfo name for wirelessTask
00016682 g     F .text	000000ce put_fat
0001014c  w    F .text	00000010 QEI_IRQHandler
000100d8 g       .text	00000000 __bss_section_table
000240ec g     F .text	0000007a .hidden __nedf2
00026b48 g     O .text	00000008 typeinfo for CharDev
00013444  w    F .text	00000050 terminalTask::~terminalTask()
00012e78  w    F .text	00000018 SingletonTemplate<Light_Sensor>::getInstance()
0001e87c g     F .text	00000030 iprintf
0001525e g     F .text	0000001e ff_rel_grant
00012c74 g     F .text	0000001a pwm_servomotor(float)
0001a1bc g     F .text	0000001c Uart3::Uart3()
0001c9e4 g     F .text	00000012 __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0001b3b0 g     F .text	000000c0 xTaskResumeAll
00019798 g     F .text	00000018 CAN_reset_bus
0002103c g     F .text	0000029c __svfiscanf_r
000175a4 g     F .text	0000015a f_lseek
0001ed60 g     F .text	00000048 sprintf
0001a05c  w    F .text	00000014 UartDev::~UartDev()
0001b1fc g     F .text	00000054 vTaskStartScheduler
000208ac g     F .text	00000068 __exponent
00026afc  w    O .text	00000007 typeinfo name for Uart3
00014d50 g     F .text	00000022 Acceleration_Sensor::init()
0001a33c g     F .text	00000020 CharDev::CharDev()
0001c888 g     F .text	00000006 __cxa_guard_release
0001d408 g     F .text	0000006e .hidden __gesf2
00021b2c g     F .text	00000024 _write_r
00026b68 g     O .text	0000001c vtable for UartDev
0001a7c8 g     F .text	0000003c UartDev::setBaudRate(unsigned int)
0001bb9c g     F .text	00000014 vConfigureTimerForRunTimeStats
00025330 g     O .text	00000020 vtable for canRxProcessTask
0001eb98 g     F .text	00000030 scanf
2007c1f4  w    O .bss	00000004 SingletonTemplate<Light_Sensor>::mpSingletonInstance
0001cf4c g     F .text	0000016c .hidden __aeabi_frsub
00026e60 g     O .text	0000002c vtable for __cxxabiv1::__vmi_class_type_info
0001014c  w    F .text	00000010 EINT0_IRQHandler
00010330 g     F .text	0000000c sys_set_outchar_func
00015fd0 g     F .text	00000028 flash_chip_erase
00023b68 g     F .text	00000008 nanf
00020d30 g     F .text	000000e4 _printf_common
00019380 g     F .text	00000078 adc0_get_reading
2007c150 g     O .data	00000004 _impure_ptr
0001d490 g     F .text	00000012 .hidden __aeabi_fcmpeq
00010494 g     F .text	0000003c u0_dbg_printf
00022990 g     F .text	00000106 __sflush_r
000197bc g     F .text	00000034 CAN_gen_sid
0001d168 g     F .text	00000168 .hidden __aeabi_fmul
00026a28  w    O .text	0000001c vtable for Uart0
0002742c g       .text	00000000 __preinit_array_end
00011e80 g     F .text	00000004 can_controller::get_tx_count()
00012b18 g     F .text	00000064 init_io()
0001fe9c g     F .text	000001d8 _svfiprintf_r
0001ea6c g     F .text	0000010c __srefill_r
0001d478 g     F .text	00000018 .hidden __aeabi_cfrcmple
000153e0 g     F .text	00000024 power_off
00014fcc g     F .text	00000024 I2C_Temp::getFarenheit()
2007c000 g       .data	00000000 _data
0001bc76 g     F .text	00000006 __set_MSP
00019aa0 g     F .text	00000014 I2C2::I2C2()
2007c744 g     O .bss	00000004 curr_pwm
000237e0 g     F .text	00000044 __ulp
00013828 g     F .text	0000027c terminalTask::taskEntry()
00018d58 g     F .text	0000002a str::str(char*, int)
0001a1a8  w    F .text	00000012 Uart3::~Uart3()
0001a140  w    F .text	00000012 Uart2::~Uart2()
2007c61d g     O .bss	00000100 controller_id_str
0001b854 g     F .text	0000000c vTaskMissedYield
000146ee g     F .text	00000010 nordic_queue_tx_fifo
00019cc8  w    F .text	00000014 NordicStream::~NordicStream()
00025ef4 g     O .text	0000000c typeinfo for terminalTask
2007cb24 g       .bss	00000000 _pvHeapStart
0001c3c0 g     F .text	0000001c uart0_putchar
000100e0 g       .text	00000000 __section_table_end
0001228c g     F .text	00000074 can_controller::processBootSequence(unsigned char)
0001e6dc g     F .text	00000014 mallinfo
00010474 g     F .text	00000020 u0_dbg_put
00018e36 g     F .text	00000012 str::compareToIgnoreCase(char const*) const
0001a804 g     F .text	000000b4 UartDev::handleInterrupt()
000219ac g     F .text	00000052 _vsniprintf_r
0001aefc g     F .text	00000012 uxQueueMessagesWaiting
0001ada8 g     F .text	00000102 xQueueGenericReceive
0001ce6c g     F .text	00000040 .hidden __aeabi_d2uiz
000194e0 g     F .text	00000174 CAN_init
0001a498 g     F .text	0000005c I2C_Base::I2C_Base(LPC_I2C_TypeDef*)
0001ddc4 g     F .text	00000006 localtime_r
000154e4 g     F .text	00000098 send_cmd
0001c930 g     F .text	00000014 __cxxabiv1::__class_type_info::~__class_type_info()
0001a070  w    F .text	00000014 Uart0::~Uart0()
0001b2b4 g     F .text	000000fc xTaskIncrementTick
00020128 g     F .text	0000029c __ssvfiscanf_r
00014880 g     F .text	00000018 nordic_power_down
00019ddc g     F .text	00000068 rtc_settime
00018fe0 g     F .text	00000038 str::eraseAfter(int, int)
2007c204  w    O .bss	00000004 guard variable for Storage::getFlashDrive()::pFlashDrive
0001d4a4 g     F .text	00000012 .hidden __aeabi_fcmplt
00016548 g     F .text	00000016 clust2sect
0001cae4 g     F .text	00000018 .hidden __aeabi_llsl
0001bfd0 g     F .text	00000038 sys_get_mem_info_str
00026958  w    O .text	00000008 typeinfo for SingletonTemplate<NordicStream>
000123f8 g     F .text	0000002c canRxProcessTask::canRxProcessTask(unsigned char)
000196e0 g     F .text	0000001c CAN_is_bus_off
00014f14 g     F .text	00000016 LED::on(int)
2007c0e8 g     O .data	00000004 __cxxabiv1::__terminate_handler
0001bc7c g     F .text	00000006 __set_BASEPRI
00024188 g     F .text	00000012 .hidden __aeabi_dcmpeq
00012300  w    F .text	0000000c scheduler_task::~scheduler_task()
00019f28 g     F .text	0000001c ssp1_dma_init
00012318  w    F .text	0000000c debugTask::~debugTask()
0001a154 g     F .text	0000001c Uart2::Uart2()
00012b08 g     F .text	00000010 initEchoInt(eint_intr_t)
00026f98 g     O .text	0000000c typeinfo for __cxxabiv1::__si_class_type_info
0001ab4c g     F .text	0000005a xQueueGenericReset
00010370 g     F .text	00000028 _write
00011e56 g     F .text	00000022 can_controller::can_controller(controller_id_t, can_msg_id_t*, unsigned int)
2007c1cc g       .data	00000000 _edata
0001c4c0 g     F .text	00000270 __cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
00014508 g     F .text	00000034 mesh_get_pnd_pkt_count
00014e92 g     F .text	0000003e LED_Display::setNumber(char)
00015132 g     F .text	00000046 Storage::write(char const*, void*, unsigned int, unsigned int)
00015eb4 g     F .text	00000020 flash_get_page_count
00015178 g     F .text	0000004a Storage::append(char const*, void*, unsigned int, unsigned int)
00017338 g     F .text	000001bc f_write
000190ea g     F .text	00000004 str::operator()() const
00015dc8 g     F .text	0000004c flash_write_sectors
00014f74 g     F .text	00000024 I2C_Temp::init()
00012ae8  w    F .text	0000000c encoderTask::~encoderTask()
00021a20 g     F .text	00000048 _vsscanf_r
0001d540 g     F .text	0000003e .hidden __aeabi_f2uiz
000197f0 g     F .text	00000130 CAN_setup_filter
0001a200 g     F .text	00000018 CharDev::~CharDev()
00018e48 g     F .text	00000090 str::firstIndexOfIgnoreCase(char const*) const
00019cee g     F .text	00000022 NordicStream::putChar(char, unsigned int)
00019c68 g     F .text	00000060 NordicStream::flush()
0001edce g     F .text	00000038 __swrite
00010270 g     F .text	00000004 operator new(unsigned int)
00011e78 g     F .text	00000004 can_controller::get_rx_count()
00017098 g     F .text	00000124 f_open
00019018 g     F .text	00000028 str::erase(char const*)
0001c498  w    F .text	00000028 __cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
000152e8 g     F .text	00000038 disk_write
00015e14 g     F .text	00000038 flash_ioctl
00014910 g     F .text	00000030 nordic_set_auto_transmit_options
000205e4 g     F .text	00000208 _vfiprintf_r
00010000 g     O .text	000000cc g_pfnVectors
00012310  w    F .text	00000004 scheduler_task::regTlm()
00010c18 g     F .text	0000005c mvHandler(str&, CharDev&, void*)
0001dd18 g     F .text	0000003c _fwalk_reent
0001c9f6 g     F .text	00000034 __cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
0001d0b8 g     F .text	00000024 .hidden __floatunsisf
00023720 g     F .text	000000be __mdiff
0001a200 g     F .text	00000018 CharDev::~CharDev()
000241ec g     F .text	0000004e .hidden __aeabi_d2iz
0001caca g     F .text	00000008 __cxxabiv1::__terminate(void (*)())
00015238 g     F .text	00000026 ff_req_grant
00021a68 g     F .text	0000001c vsiscanf
2007c720  w    O .bss	00000004 SingletonTemplate<Switches>::mpSingletonInstance
00010348 g     F .text	00000010 _kill
0001a464 g     F .text	00000008 I2C_Base::writeRegisters(char, char, char*, unsigned int)
2007c0ec g     O .data	00000004 __ctype_ptr__
00019108 g     F .text	0000004c str::reAllocateMem(int)
0001d480 g     F .text	00000010 .hidden __aeabi_cfcmpeq
0001014c  w    F .text	00000010 DMA_IRQHandler
0001340c g     F .text	00000004 terminalTask::regTlm()
0001b4e8 g     F .text	00000054 vTaskDelay
000137ec  w    F .text	00000018 Uart0::putcharIntrDriven(char)
00011ec4 g     F .text	00000200 can_controller::can_send(controller_id_t, msg_id_t, unsigned char*, unsigned short)
00018bb8 g     F .text	000000f0 scheduler_init_all(bool)
000270ec g     O .text	00000020 __sf_fake_stdout
00014f2a g     F .text	00000016 LED::off(int)
0001ed60 g     F .text	00000048 siprintf
00023b04 g     F .text	00000062 __sccl
0001db4e g     F .text	00000008 atoi
000103f8 g     F .text	0000007c _gettimeofday
0001b88c g     F .text	00000020 xTaskGetSchedulerState
0002529c  w    O .text	00000016 typeinfo name for periodicEncoderTask
00026fc9 g     O .text	00000101 _ctype_
000252c0  w    O .text	0000000b typeinfo name for debugTask
00010398 g     F .text	0000002c _read
0002742c g       .text	00000000 __init_array_start
0001d60c  w    F .text	00000002 .hidden __aeabi_idiv0
00010670 g     F .text	000000c4 timeHandler(str&, CharDev&, void*)
00025274  w    O .text	00000008 typeinfo for scheduler_task
000185d0 g     F .text	000000dc logger_init
0001795e g     F .text	00000156 f_mkdir
0001d540 g     F .text	0000003e .hidden __fixunssfsi
00018db8 g     F .text	0000001c str::scanf(char const*, ...)
00012370  w    F .text	00000014 periodicEncoderTask::~periodicEncoderTask()
00010358 g     F .text	00000010 _exit
0001012c  w    F .text	00000010 isr_usage_fault
00014f4e g     F .text	00000004 Light_Sensor::init()
000231a0 g     F .text	00000098 __smakebuf_r
00019164 g     F .text	0000000c str::str(int)
00011e84 g     F .text	00000004 can_controller::get_tx_bytes()
0001eec8 g     F .text	00000010 strlen
000152b0 g     F .text	00000038 disk_read
0001ba5c g     F .text	00000016 pxPortInitialiseStack
00020e14 g     F .text	00000228 _printf_i
00026ecc g     O .text	00000008 typeinfo for std::type_info
0001a254 g     F .text	0000001c CharDev::putline(char const*, unsigned int)
00020420 g     F .text	00000018 toupper
00024178 g     F .text	00000010 .hidden __aeabi_cdcmpeq
00012300  w    F .text	0000000c scheduler_task::~scheduler_task()
000240dc g     F .text	0000008a .hidden __gedf2
0001a1d8 g     F .text	00000024 UART3_IRQHandler
00022ba4 g     F .text	0000045e __gethex
2007cb14 g     O .bss	00000004 __malloc_sbrk_start
0001014c  w    F .text	00000010 MCPWM_IRQHandler
0001a35c g     F .text	000000e6 I2C_Base::transfer(char, char, char*, unsigned int)
0001173c g     F .text	00000160 wirelessHandler(str&, CharDev&, void*)
0001d5ac g     F .text	00000030 .hidden __gnu_ldivmod_helper
00021cc4 g     F .text	00000028 div
0001ee8a g     F .text	0000001a strchr
000177da g     F .text	000000ca f_getfree
0001b7f0 g     F .text	00000018 vTaskSetTimeOutState
00012d64 g     F .text	00000020 encoderTask::init()
000151c4 g     F .text	00000038 ff_convert
0001cdc4 g     F .text	0000003a .hidden __aeabi_f2d
0001921e g     F .text	0000003c str::copyFrom(char const*)
0001bac0 g     F .text	0000001c vPortEnterCritical
00019040 g     F .text	0000002a str::eraseFirstWords(int, char)
0001557c g     F .text	00000024 sd_update_card_status
0001bbc4 g     F .text	00000014 resetRunTimeCounter
00015e8c g     F .text	00000028 flash_read_permanent_id
00015f7c g     F .text	00000054 flash_get_page_write_count
2007cb18 g     O .bss	00000004 __malloc_free_list
00019154  w    F .text	00000010 str::init(int)
2007c724  w    O .bss	00000004 SingletonTemplate<LED_Display>::mpSingletonInstance
00014718 g     F .text	00000010 nordic_rx_to_Stanby1
0001af0e g     F .text	00000004 uxQueueMessagesWaitingFromISR
00019f14 g     F .text	00000014 rtc_get_date_time_str
0001a46c g     F .text	00000016 I2C_Base::writeReg(char, char, char)
0001cb04 g     F .text	0000027a .hidden __subdf3
000205e4 g     F .text	00000208 _vfprintf_r
0002742c g       .text	00000000 __preinit_array_start
0002527c  w    O .text	00000011 typeinfo name for scheduler_task
00023408 g     F .text	0000005a __lo0bits
0002103c g     F .text	0000029c __svfscanf_r
0001e2f0 g     F .text	0000015c __tzcalc_limits
0001ba10 g     F .text	00000028 vRunTimeStatIsrEntry
000204b0 g     F .text	000000e4 _ungetc_r
0001c8bc g     F .text	0000002e std::type_info::operator==(std::type_info const&) const
0001c86c g     F .text	0000001c __cxa_guard_acquire
0001014c  w    F .text	00000010 ENET_IRQHandler
0001014c  w    F .text	00000010 USBAct_IRQHandler
0001acea g     F .text	0000004c xQueueCreateMutex
0001cf58 g     F .text	00000160 .hidden __addsf3
2007c764 g     O .bss	00000004 actdcMotor
000148ea g     F .text	00000026 nordic_set_power_level
0001c8ea g     F .text	00000004 std::type_info::__do_catch(std::type_info const*, void**, unsigned int) const
0001013c  w    F .text	00000010 isr_debug_mon
00012888 g     F .text	000000f4 controllerInit()
0002316c g     F .text	00000008 __gettzinfo
0001ed28 g     F .text	00000010 raise
000103f4 g     F .text	00000004 _close
0001e44c g     F .text	00000290 _mktm_r
0001dddc g     F .text	00000010 free
000269fc  w    O .text	00000020 typeinfo for Uart0
00015880 g     F .text	00000244 sd_ioctl
00021328  w    F .text	000003d8 _scanf_float
00025290  w    O .text	0000000c typeinfo for periodicEncoderTask
0001032c g     F .text	00000002 __gnu_cxx::__verbose_terminate_handler()
000232d0 g     F .text	00000074 __multadd
0001c944 g     F .text	00000012 __cxxabiv1::__class_type_info::~__class_type_info()
000232a2 g     F .text	0000002e _Bfree
00025480 g     O .text	00000020 vtable for encoderTask
0001a8e0 g     F .text	000000b0 UartDev::init(unsigned int, unsigned int, int, int)
0001bedc g     F .text	00000030 lpc_pconp
0001bbd8 g     F .text	00000004 vApplicationIdleHook



Disassembly of section .text:

00010000 <g_pfnVectors>:
$d():
   10000:	e0 3f 08 20 91 01 01 00 fd 00 01 00 e1 00 01 00     .?. ............
   10010:	0d 01 01 00 1d 01 01 00 2d 01 01 00 00 00 00 00     ........-.......
	...
   1002c:	75 ba 01 00 3d 01 01 00 00 00 00 00 f9 ba 01 00     u...=...........
   1003c:	5d 01 01 00 c5 c0 01 00 c5 c0 01 00 c5 c0 01 00     ]...............
   1004c:	c5 c0 01 00 c5 c0 01 00 c5 c0 01 00 c5 c0 01 00     ................
   1005c:	c5 c0 01 00 c5 c0 01 00 c5 c0 01 00 c5 c0 01 00     ................
   1006c:	c5 c0 01 00 c5 c0 01 00 c5 c0 01 00 c5 c0 01 00     ................
   1007c:	c5 c0 01 00 c5 c0 01 00 c5 c0 01 00 c5 c0 01 00     ................
   1008c:	c5 c0 01 00 c5 c0 01 00 c5 c0 01 00 c5 c0 01 00     ................
   1009c:	c5 c0 01 00 c5 c0 01 00 c5 c0 01 00 c5 c0 01 00     ................
   100ac:	c5 c0 01 00 c5 c0 01 00 c5 c0 01 00 c5 c0 01 00     ................
   100bc:	c5 c0 01 00 c5 c0 01 00 c5 c0 01 00 c5 c0 01 00     ................

000100cc <__data_section_table>:
__section_table_start():
   100cc:	00027438 	.word	0x00027438
   100d0:	2007c000 	.word	0x2007c000
   100d4:	000001cc 	.word	0x000001cc

000100d8 <__bss_section_table>:
__data_section_table_end():
   100d8:	2007c1d0 	.word	0x2007c1d0
   100dc:	00000954 	.word	0x00000954

000100e0 <isr_hard_fault>:
isr_hard_fault():
   100e0:	2004      	movs	r0, #4
   100e2:	4671      	mov	r1, lr
   100e4:	4208      	tst	r0, r1
   100e6:	f000 8004 	beq.w	100f2 <_MSP>
   100ea:	f3ef 8009 	mrs	r0, PSP
   100ee:	f00c b807 	b.w	1c100 <isr_hard_fault_handler>

000100f2 <_MSP>:
   100f2:	f3ef 8008 	mrs	r0, MSP
   100f6:	f00c b803 	b.w	1c100 <isr_hard_fault_handler>
   100fa:	4770      	bx	lr

000100fc <isr_nmi>:
isr_nmi():
   100fc:	b508      	push	{r3, lr}
   100fe:	4802      	ldr	r0, [pc, #8]	; (10108 <isr_nmi+0xc>)
   10100:	f000 f9b8 	bl	10474 <u0_dbg_put>
   10104:	e7fe      	b.n	10104 <isr_nmi+0x8>
   10106:	bf00      	nop
   10108:	00026db2 	.word	0x00026db2

0001010c <isr_mem_fault>:
isr_mem_fault():
   1010c:	b508      	push	{r3, lr}
   1010e:	4802      	ldr	r0, [pc, #8]	; (10118 <isr_mem_fault+0xc>)
   10110:	f000 f9b0 	bl	10474 <u0_dbg_put>
   10114:	e7fe      	b.n	10114 <isr_mem_fault+0x8>
   10116:	bf00      	nop
   10118:	00026dbd 	.word	0x00026dbd

0001011c <isr_bus_fault>:
isr_bus_fault():
   1011c:	b508      	push	{r3, lr}
   1011e:	4802      	ldr	r0, [pc, #8]	; (10128 <isr_bus_fault+0xc>)
   10120:	f000 f9a8 	bl	10474 <u0_dbg_put>
   10124:	e7fe      	b.n	10124 <isr_bus_fault+0x8>
   10126:	bf00      	nop
   10128:	00026dc8 	.word	0x00026dc8

0001012c <isr_usage_fault>:
isr_usage_fault():
   1012c:	b508      	push	{r3, lr}
   1012e:	4802      	ldr	r0, [pc, #8]	; (10138 <isr_usage_fault+0xc>)
   10130:	f000 f9a0 	bl	10474 <u0_dbg_put>
   10134:	e7fe      	b.n	10134 <isr_usage_fault+0x8>
   10136:	bf00      	nop
   10138:	00026dd3 	.word	0x00026dd3

0001013c <isr_debug_mon>:
isr_debug_mon():
   1013c:	b508      	push	{r3, lr}
   1013e:	4802      	ldr	r0, [pc, #8]	; (10148 <isr_debug_mon+0xc>)
   10140:	f000 f998 	bl	10474 <u0_dbg_put>
   10144:	e7fe      	b.n	10144 <isr_debug_mon+0x8>
   10146:	bf00      	nop
   10148:	00026de0 	.word	0x00026de0

0001014c <isr_default_handler>:
TIMER2_IRQHandler():
   1014c:	b508      	push	{r3, lr}
   1014e:	4802      	ldr	r0, [pc, #8]	; (10158 <isr_default_handler+0xc>)
   10150:	f000 f990 	bl	10474 <u0_dbg_put>
   10154:	e7fe      	b.n	10154 <isr_default_handler+0x8>
   10156:	bf00      	nop
   10158:	00026dee 	.word	0x00026dee

0001015c <isr_sys_tick>:
isr_sys_tick():
   1015c:	b508      	push	{r3, lr}
   1015e:	f00b fc57 	bl	1ba10 <vRunTimeStatIsrEntry>
   10162:	f00b fce7 	bl	1bb34 <xPortSysTickHandler>
   10166:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
   1016a:	f00b bc65 	b.w	1ba38 <vRunTimeStatIsrExit>

0001016e <data_init(unsigned int, unsigned int, unsigned int)>:
_Z9data_initjjj():
   1016e:	b510      	push	{r4, lr}
   10170:	2300      	movs	r3, #0
   10172:	4293      	cmp	r3, r2
   10174:	d203      	bcs.n	1017e <data_init(unsigned int, unsigned int, unsigned int)+0x10>
   10176:	581c      	ldr	r4, [r3, r0]
   10178:	505c      	str	r4, [r3, r1]
   1017a:	3304      	adds	r3, #4
   1017c:	e7f9      	b.n	10172 <data_init(unsigned int, unsigned int, unsigned int)+0x4>
   1017e:	bd10      	pop	{r4, pc}

00010180 <bss_init(unsigned int, unsigned int)>:
_Z8bss_initjj():
   10180:	2300      	movs	r3, #0
   10182:	428b      	cmp	r3, r1
   10184:	d203      	bcs.n	1018e <bss_init(unsigned int, unsigned int)+0xe>
   10186:	2200      	movs	r2, #0
   10188:	501a      	str	r2, [r3, r0]
   1018a:	3304      	adds	r3, #4
   1018c:	e7f9      	b.n	10182 <bss_init(unsigned int, unsigned int)+0x2>
   1018e:	4770      	bx	lr

00010190 <isr_reset>:
isr_reset():
   10190:	4815      	ldr	r0, [pc, #84]	; (101e8 <isr_reset+0x58>)
   10192:	f00b fd6d 	bl	1bc70 <__set_PSP>
   10196:	4814      	ldr	r0, [pc, #80]	; (101e8 <isr_reset+0x58>)
   10198:	f00b fd6d 	bl	1bc76 <__set_MSP>
   1019c:	4c13      	ldr	r4, [pc, #76]	; (101ec <isr_reset+0x5c>)
   1019e:	4b14      	ldr	r3, [pc, #80]	; (101f0 <isr_reset+0x60>)
   101a0:	429c      	cmp	r4, r3
   101a2:	d207      	bcs.n	101b4 <isr_reset+0x24>
   101a4:	e894 0003 	ldmia.w	r4, {r0, r1}
   101a8:	340c      	adds	r4, #12
   101aa:	f854 2c04 	ldr.w	r2, [r4, #-4]
   101ae:	f7ff ffde 	bl	1016e <data_init(unsigned int, unsigned int, unsigned int)>
   101b2:	e7f4      	b.n	1019e <isr_reset+0xe>
   101b4:	4b0f      	ldr	r3, [pc, #60]	; (101f4 <isr_reset+0x64>)
   101b6:	429c      	cmp	r4, r3
   101b8:	d205      	bcs.n	101c6 <isr_reset+0x36>
   101ba:	e894 0003 	ldmia.w	r4, {r0, r1}
   101be:	f7ff ffdf 	bl	10180 <bss_init(unsigned int, unsigned int)>
   101c2:	3408      	adds	r4, #8
   101c4:	e7f6      	b.n	101b4 <isr_reset+0x24>
   101c6:	f00d fdc5 	bl	1dd54 <__libc_init_array>
   101ca:	f00b fd6b 	bl	1bca4 <low_level_init()>
   101ce:	f002 fe6b 	bl	12ea8 <high_level_init()>
   101d2:	f003 fc7d 	bl	13ad0 <main>
   101d6:	f44f 4016 	mov.w	r0, #38400	; 0x9600
   101da:	f00c f8b5 	bl	1c348 <uart0_init>
   101de:	4806      	ldr	r0, [pc, #24]	; (101f8 <isr_reset+0x68>)
   101e0:	f000 f948 	bl	10474 <u0_dbg_put>
   101e4:	e7fe      	b.n	101e4 <isr_reset+0x54>
   101e6:	bf00      	nop
   101e8:	20083fe0 	.word	0x20083fe0
   101ec:	000100cc 	.word	0x000100cc
   101f0:	000100d8 	.word	0x000100d8
   101f4:	000100e0 	.word	0x000100e0
   101f8:	00026e02 	.word	0x00026e02

000101fc <_sbrk>:
_sbrk():
   101fc:	4a13      	ldr	r2, [pc, #76]	; (1024c <_sbrk+0x50>)
   101fe:	b570      	push	{r4, r5, r6, lr}
   10200:	6811      	ldr	r1, [r2, #0]
   10202:	4603      	mov	r3, r0
   10204:	b911      	cbnz	r1, 1020c <_sbrk+0x10>
   10206:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
   1020a:	6011      	str	r1, [r2, #0]
   1020c:	6810      	ldr	r0, [r2, #0]
   1020e:	4910      	ldr	r1, [pc, #64]	; (10250 <_sbrk+0x54>)
   10210:	18c5      	adds	r5, r0, r3
   10212:	4e10      	ldr	r6, [pc, #64]	; (10254 <_sbrk+0x58>)
   10214:	4429      	add	r1, r5
   10216:	42b1      	cmp	r1, r6
   10218:	bf98      	it	ls
   1021a:	480f      	ldrls	r0, [pc, #60]	; (10258 <_sbrk+0x5c>)
   1021c:	4c0b      	ldr	r4, [pc, #44]	; (1024c <_sbrk+0x50>)
   1021e:	bf96      	itet	ls
   10220:	1819      	addls	r1, r3, r0
   10222:	6025      	strhi	r5, [r4, #0]
   10224:	6021      	strls	r1, [r4, #0]
   10226:	6811      	ldr	r1, [r2, #0]
   10228:	4a0c      	ldr	r2, [pc, #48]	; (1025c <_sbrk+0x60>)
   1022a:	4291      	cmp	r1, r2
   1022c:	d903      	bls.n	10236 <_sbrk+0x3a>
   1022e:	490c      	ldr	r1, [pc, #48]	; (10260 <_sbrk+0x64>)
   10230:	4a06      	ldr	r2, [pc, #24]	; (1024c <_sbrk+0x50>)
   10232:	2000      	movs	r0, #0
   10234:	6011      	str	r1, [r2, #0]
   10236:	b13b      	cbz	r3, 10248 <_sbrk+0x4c>
   10238:	4a0a      	ldr	r2, [pc, #40]	; (10264 <_sbrk+0x68>)
   1023a:	6811      	ldr	r1, [r2, #0]
   1023c:	3101      	adds	r1, #1
   1023e:	6011      	str	r1, [r2, #0]
   10240:	4a09      	ldr	r2, [pc, #36]	; (10268 <_sbrk+0x6c>)
   10242:	6010      	str	r0, [r2, #0]
   10244:	4a09      	ldr	r2, [pc, #36]	; (1026c <_sbrk+0x70>)
   10246:	6013      	str	r3, [r2, #0]
   10248:	bd70      	pop	{r4, r5, r6, pc}
   1024a:	bf00      	nop
   1024c:	2007c1d4 	.word	0x2007c1d4
   10250:	efff7fff 	.word	0xefff7fff
   10254:	10073ffe 	.word	0x10073ffe
   10258:	2007cb24 	.word	0x2007cb24
   1025c:	20083fff 	.word	0x20083fff
   10260:	20084000 	.word	0x20084000
   10264:	2007c1dc 	.word	0x2007c1dc
   10268:	2007c1d0 	.word	0x2007c1d0
   1026c:	2007c1d8 	.word	0x2007c1d8

00010270 <operator new(unsigned int)>:
_Znwj():
   10270:	f00d bdac 	b.w	1ddcc <malloc>

00010274 <operator delete(void*)>:
_ZdlPv():
   10274:	f00d bdb2 	b.w	1dddc <free>

00010278 <operator delete[](void*)>:
_ZdaPv():
   10278:	f00d bdb0 	b.w	1dddc <free>

0001027c <sys_get_mem_info>:
sys_get_mem_info():
   1027c:	b510      	push	{r4, lr}
   1027e:	b08a      	sub	sp, #40	; 0x28
   10280:	4604      	mov	r4, r0
   10282:	4668      	mov	r0, sp
   10284:	f00e fa2a 	bl	1e6dc <mallinfo>
   10288:	4b20      	ldr	r3, [pc, #128]	; (1030c <sys_get_mem_info+0x90>)
   1028a:	4a21      	ldr	r2, [pc, #132]	; (10310 <sys_get_mem_info+0x94>)
   1028c:	6023      	str	r3, [r4, #0]
   1028e:	9b08      	ldr	r3, [sp, #32]
   10290:	4920      	ldr	r1, [pc, #128]	; (10314 <sys_get_mem_info+0x98>)
   10292:	60a3      	str	r3, [r4, #8]
   10294:	9b07      	ldr	r3, [sp, #28]
   10296:	6063      	str	r3, [r4, #4]
   10298:	b953      	cbnz	r3, 102b0 <sys_get_mem_info+0x34>
   1029a:	680b      	ldr	r3, [r1, #0]
   1029c:	481e      	ldr	r0, [pc, #120]	; (10318 <sys_get_mem_info+0x9c>)
   1029e:	4283      	cmp	r3, r0
   102a0:	bf8a      	itet	hi
   102a2:	f103 4360 	addhi.w	r3, r3, #3758096384	; 0xe0000000
   102a6:	f103 4370 	addls.w	r3, r3, #4026531840	; 0xf0000000
   102aa:	f5a3 23e8 	subhi.w	r3, r3, #475136	; 0x74000
   102ae:	6063      	str	r3, [r4, #4]
   102b0:	6863      	ldr	r3, [r4, #4]
   102b2:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
   102b6:	d904      	bls.n	102c2 <sys_get_mem_info+0x46>
   102b8:	f103 4370 	add.w	r3, r3, #4026531840	; 0xf0000000
   102bc:	f5a3 23e8 	sub.w	r3, r3, #475136	; 0x74000
   102c0:	6063      	str	r3, [r4, #4]
   102c2:	2300      	movs	r3, #0
   102c4:	60e3      	str	r3, [r4, #12]
   102c6:	680b      	ldr	r3, [r1, #0]
   102c8:	4913      	ldr	r1, [pc, #76]	; (10318 <sys_get_mem_info+0x9c>)
   102ca:	428b      	cmp	r3, r1
   102cc:	d805      	bhi.n	102da <sys_get_mem_info+0x5e>
   102ce:	f1c2 5240 	rsb	r2, r2, #805306368	; 0x30000000
   102d2:	f502 220c 	add.w	r2, r2, #573440	; 0x8c000
   102d6:	1ad2      	subs	r2, r2, r3
   102d8:	e009      	b.n	102ee <sys_get_mem_info+0x72>
   102da:	4910      	ldr	r1, [pc, #64]	; (1031c <sys_get_mem_info+0xa0>)
   102dc:	428b      	cmp	r3, r1
   102de:	d807      	bhi.n	102f0 <sys_get_mem_info+0x74>
   102e0:	f1c2 4280 	rsb	r2, r2, #1073741824	; 0x40000000
   102e4:	f502 1280 	add.w	r2, r2, #1048576	; 0x100000
   102e8:	1ad2      	subs	r2, r2, r3
   102ea:	2a00      	cmp	r2, #0
   102ec:	dd00      	ble.n	102f0 <sys_get_mem_info+0x74>
   102ee:	60e2      	str	r2, [r4, #12]
   102f0:	61e3      	str	r3, [r4, #28]
   102f2:	4b0b      	ldr	r3, [pc, #44]	; (10320 <sys_get_mem_info+0xa4>)
   102f4:	4620      	mov	r0, r4
   102f6:	681b      	ldr	r3, [r3, #0]
   102f8:	61a3      	str	r3, [r4, #24]
   102fa:	4b0a      	ldr	r3, [pc, #40]	; (10324 <sys_get_mem_info+0xa8>)
   102fc:	681b      	ldr	r3, [r3, #0]
   102fe:	6163      	str	r3, [r4, #20]
   10300:	4b09      	ldr	r3, [pc, #36]	; (10328 <sys_get_mem_info+0xac>)
   10302:	681b      	ldr	r3, [r3, #0]
   10304:	6123      	str	r3, [r4, #16]
   10306:	b00a      	add	sp, #40	; 0x28
   10308:	bd10      	pop	{r4, pc}
   1030a:	bf00      	nop
   1030c:	00000b24 	.word	0x00000b24
   10310:	2007cb24 	.word	0x2007cb24
   10314:	2007c1d4 	.word	0x2007c1d4
   10318:	10008000 	.word	0x10008000
   1031c:	20083fff 	.word	0x20083fff
   10320:	2007c1d0 	.word	0x2007c1d0
   10324:	2007c1d8 	.word	0x2007c1d8
   10328:	2007c1dc 	.word	0x2007c1dc

0001032c <__gnu_cxx::__verbose_terminate_handler()>:
_ZN9__gnu_cxx27__verbose_terminate_handlerEv():
   1032c:	e7fe      	b.n	1032c <__gnu_cxx::__verbose_terminate_handler()>
	...

00010330 <sys_set_outchar_func>:
sys_set_outchar_func():
   10330:	4b01      	ldr	r3, [pc, #4]	; (10338 <sys_set_outchar_func+0x8>)
   10332:	6018      	str	r0, [r3, #0]
   10334:	4770      	bx	lr
   10336:	bf00      	nop
   10338:	2007c1e4 	.word	0x2007c1e4

0001033c <sys_set_inchar_func>:
sys_set_inchar_func():
   1033c:	4b01      	ldr	r3, [pc, #4]	; (10344 <sys_set_inchar_func+0x8>)
   1033e:	6018      	str	r0, [r3, #0]
   10340:	4770      	bx	lr
   10342:	bf00      	nop
   10344:	2007c1e0 	.word	0x2007c1e0

00010348 <_kill>:
_kill():
   10348:	b508      	push	{r3, lr}
   1034a:	4802      	ldr	r0, [pc, #8]	; (10354 <_kill+0xc>)
   1034c:	f00e fb0e 	bl	1e96c <puts>
   10350:	e7fe      	b.n	10350 <_kill+0x8>
   10352:	bf00      	nop
   10354:	0002423c 	.word	0x0002423c

00010358 <_exit>:
_exit():
   10358:	b508      	push	{r3, lr}
   1035a:	4802      	ldr	r0, [pc, #8]	; (10364 <_exit+0xc>)
   1035c:	f00e fb06 	bl	1e96c <puts>
   10360:	e7fe      	b.n	10360 <_exit+0x8>
   10362:	bf00      	nop
   10364:	00024256 	.word	0x00024256

00010368 <_getpid>:
_getpid():
   10368:	2000      	movs	r0, #0
   1036a:	4770      	bx	lr

0001036c <_init>:
_init():
   1036c:	2001      	movs	r0, #1
   1036e:	4770      	bx	lr

00010370 <_write>:
_write():
   10370:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   10372:	4b08      	ldr	r3, [pc, #32]	; (10394 <_write+0x24>)
   10374:	4615      	mov	r5, r2
   10376:	681a      	ldr	r2, [r3, #0]
   10378:	460e      	mov	r6, r1
   1037a:	461f      	mov	r7, r3
   1037c:	b13a      	cbz	r2, 1038e <_write+0x1e>
   1037e:	2400      	movs	r4, #0
   10380:	42ac      	cmp	r4, r5
   10382:	da04      	bge.n	1038e <_write+0x1e>
   10384:	5730      	ldrsb	r0, [r6, r4]
   10386:	683a      	ldr	r2, [r7, #0]
   10388:	4790      	blx	r2
   1038a:	3401      	adds	r4, #1
   1038c:	e7f8      	b.n	10380 <_write+0x10>
   1038e:	4628      	mov	r0, r5
   10390:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   10392:	bf00      	nop
   10394:	2007c1e4 	.word	0x2007c1e4

00010398 <_read>:
_read():
   10398:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1039a:	4b09      	ldr	r3, [pc, #36]	; (103c0 <_read+0x28>)
   1039c:	460e      	mov	r6, r1
   1039e:	6818      	ldr	r0, [r3, #0]
   103a0:	4615      	mov	r5, r2
   103a2:	461f      	mov	r7, r3
   103a4:	b150      	cbz	r0, 103bc <_read+0x24>
   103a6:	2400      	movs	r4, #0
   103a8:	42ac      	cmp	r4, r5
   103aa:	da05      	bge.n	103b8 <_read+0x20>
   103ac:	683a      	ldr	r2, [r7, #0]
   103ae:	2000      	movs	r0, #0
   103b0:	4790      	blx	r2
   103b2:	5530      	strb	r0, [r6, r4]
   103b4:	3401      	adds	r4, #1
   103b6:	e7f7      	b.n	103a8 <_read+0x10>
   103b8:	ea25 70e5 	bic.w	r0, r5, r5, asr #31
   103bc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   103be:	bf00      	nop
   103c0:	2007c1e0 	.word	0x2007c1e0

000103c4 <syscalls_init>:
syscalls_init():
   103c4:	4770      	bx	lr

000103c6 <_fstat>:
_fstat():
   103c6:	2000      	movs	r0, #0
   103c8:	4770      	bx	lr
	...

000103cc <_isatty>:
_isatty():
   103cc:	4b07      	ldr	r3, [pc, #28]	; (103ec <_isatty+0x20>)
   103ce:	681b      	ldr	r3, [r3, #0]
   103d0:	689a      	ldr	r2, [r3, #8]
   103d2:	4282      	cmp	r2, r0
   103d4:	d007      	beq.n	103e6 <_isatty+0x1a>
   103d6:	685a      	ldr	r2, [r3, #4]
   103d8:	4282      	cmp	r2, r0
   103da:	d004      	beq.n	103e6 <_isatty+0x1a>
   103dc:	68db      	ldr	r3, [r3, #12]
   103de:	1a1b      	subs	r3, r3, r0
   103e0:	4258      	negs	r0, r3
   103e2:	4158      	adcs	r0, r3
   103e4:	4770      	bx	lr
   103e6:	2001      	movs	r0, #1
   103e8:	4770      	bx	lr
   103ea:	bf00      	nop
   103ec:	2007c150 	.word	0x2007c150

000103f0 <_lseek>:
_lseek():
   103f0:	2000      	movs	r0, #0
   103f2:	4770      	bx	lr

000103f4 <_close>:
_close():
   103f4:	2000      	movs	r0, #0
   103f6:	4770      	bx	lr

000103f8 <_gettimeofday>:
_gettimeofday():
   103f8:	b530      	push	{r4, r5, lr}
   103fa:	4604      	mov	r4, r0
   103fc:	b08d      	sub	sp, #52	; 0x34
   103fe:	2800      	cmp	r0, #0
   10400:	d035      	beq.n	1046e <_gettimeofday+0x76>
   10402:	4668      	mov	r0, sp
   10404:	f009 fcc0 	bl	19d88 <rtc_gettime>
   10408:	f89d 3000 	ldrb.w	r3, [sp]
   1040c:	2500      	movs	r5, #0
   1040e:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   10412:	9303      	str	r3, [sp, #12]
   10414:	f89d 3001 	ldrb.w	r3, [sp, #1]
   10418:	a803      	add	r0, sp, #12
   1041a:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   1041e:	9304      	str	r3, [sp, #16]
   10420:	f89d 3002 	ldrb.w	r3, [sp, #2]
   10424:	950b      	str	r5, [sp, #44]	; 0x2c
   10426:	f003 031f 	and.w	r3, r3, #31
   1042a:	9305      	str	r3, [sp, #20]
   1042c:	f89d 3004 	ldrb.w	r3, [sp, #4]
   10430:	f003 031f 	and.w	r3, r3, #31
   10434:	9306      	str	r3, [sp, #24]
   10436:	f89d 3005 	ldrb.w	r3, [sp, #5]
   1043a:	f003 030f 	and.w	r3, r3, #15
   1043e:	3b01      	subs	r3, #1
   10440:	9307      	str	r3, [sp, #28]
   10442:	f8bd 3006 	ldrh.w	r3, [sp, #6]
   10446:	f3c3 030b 	ubfx	r3, r3, #0, #12
   1044a:	f2a3 736c 	subw	r3, r3, #1900	; 0x76c
   1044e:	9308      	str	r3, [sp, #32]
   10450:	f89d 3003 	ldrb.w	r3, [sp, #3]
   10454:	f003 0307 	and.w	r3, r3, #7
   10458:	9309      	str	r3, [sp, #36]	; 0x24
   1045a:	f8bd 3008 	ldrh.w	r3, [sp, #8]
   1045e:	f3c3 030b 	ubfx	r3, r3, #0, #12
   10462:	3b01      	subs	r3, #1
   10464:	930a      	str	r3, [sp, #40]	; 0x28
   10466:	f00d fddd 	bl	1e024 <mktime>
   1046a:	e884 0021 	stmia.w	r4, {r0, r5}
   1046e:	2000      	movs	r0, #0
   10470:	b00d      	add	sp, #52	; 0x34
   10472:	bd30      	pop	{r4, r5, pc}

00010474 <u0_dbg_put>:
u0_dbg_put():
   10474:	b510      	push	{r4, lr}
   10476:	4604      	mov	r4, r0
   10478:	f00b fb22 	bl	1bac0 <vPortEnterCritical>
   1047c:	3c01      	subs	r4, #1
   1047e:	f814 0f01 	ldrb.w	r0, [r4, #1]!
   10482:	b118      	cbz	r0, 1048c <u0_dbg_put+0x18>
   10484:	b240      	sxtb	r0, r0
   10486:	f00b ff9b 	bl	1c3c0 <uart0_putchar>
   1048a:	e7f8      	b.n	1047e <u0_dbg_put+0xa>
   1048c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   10490:	f00b bb28 	b.w	1bae4 <vPortExitCritical>

00010494 <u0_dbg_printf>:
u0_dbg_printf():
   10494:	b40f      	push	{r0, r1, r2, r3}
   10496:	b570      	push	{r4, r5, r6, lr}
   10498:	b0c2      	sub	sp, #264	; 0x108
   1049a:	ac46      	add	r4, sp, #280	; 0x118
   1049c:	f854 6b04 	ldr.w	r6, [r4], #4
   104a0:	f44f 7580 	mov.w	r5, #256	; 0x100
   104a4:	462a      	mov	r2, r5
   104a6:	a802      	add	r0, sp, #8
   104a8:	2100      	movs	r1, #0
   104aa:	f00d fce0 	bl	1de6e <memset>
   104ae:	4623      	mov	r3, r4
   104b0:	4629      	mov	r1, r5
   104b2:	4632      	mov	r2, r6
   104b4:	a802      	add	r0, sp, #8
   104b6:	9401      	str	r4, [sp, #4]
   104b8:	f011 faa2 	bl	21a00 <vsniprintf>
   104bc:	4604      	mov	r4, r0
   104be:	a802      	add	r0, sp, #8
   104c0:	f7ff ffd8 	bl	10474 <u0_dbg_put>
   104c4:	4620      	mov	r0, r4
   104c6:	b042      	add	sp, #264	; 0x108
   104c8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
   104cc:	b004      	add	sp, #16
   104ce:	4770      	bx	lr

000104d0 <Storage::getFlashDrive()>:
_ZN7Storage13getFlashDriveEv():
   104d0:	b570      	push	{r4, r5, r6, lr}
   104d2:	4c0f      	ldr	r4, [pc, #60]	; (10510 <Storage::getFlashDrive()+0x40>)
   104d4:	4d0f      	ldr	r5, [pc, #60]	; (10514 <Storage::getFlashDrive()+0x44>)
   104d6:	6826      	ldr	r6, [r4, #0]
   104d8:	f016 0601 	ands.w	r6, r6, #1
   104dc:	d115      	bne.n	1050a <Storage::getFlashDrive()+0x3a>
   104de:	4620      	mov	r0, r4
   104e0:	f00c f9c4 	bl	1c86c <__cxa_guard_acquire>
   104e4:	b188      	cbz	r0, 1050a <Storage::getFlashDrive()+0x3a>
   104e6:	f44f 700e 	mov.w	r0, #568	; 0x238
   104ea:	f7ff fec1 	bl	10270 <operator new(unsigned int)>
   104ee:	2230      	movs	r2, #48	; 0x30
   104f0:	f880 2235 	strb.w	r2, [r0, #565]	; 0x235
   104f4:	223a      	movs	r2, #58	; 0x3a
   104f6:	f880 6234 	strb.w	r6, [r0, #564]	; 0x234
   104fa:	f880 2236 	strb.w	r2, [r0, #566]	; 0x236
   104fe:	f880 6237 	strb.w	r6, [r0, #567]	; 0x237
   10502:	6028      	str	r0, [r5, #0]
   10504:	4620      	mov	r0, r4
   10506:	f00c f9bf 	bl	1c888 <__cxa_guard_release>
   1050a:	6828      	ldr	r0, [r5, #0]
   1050c:	bd70      	pop	{r4, r5, r6, pc}
   1050e:	bf00      	nop
   10510:	2007c204 	.word	0x2007c204
   10514:	2007c1ec 	.word	0x2007c1ec

00010518 <Storage::getSDDrive()>:
_ZN7Storage10getSDDriveEv():
   10518:	b570      	push	{r4, r5, r6, lr}
   1051a:	4c0f      	ldr	r4, [pc, #60]	; (10558 <Storage::getSDDrive()+0x40>)
   1051c:	4d0f      	ldr	r5, [pc, #60]	; (1055c <Storage::getSDDrive()+0x44>)
   1051e:	6823      	ldr	r3, [r4, #0]
   10520:	f013 0601 	ands.w	r6, r3, #1
   10524:	d116      	bne.n	10554 <Storage::getSDDrive()+0x3c>
   10526:	4620      	mov	r0, r4
   10528:	f00c f9a0 	bl	1c86c <__cxa_guard_acquire>
   1052c:	b190      	cbz	r0, 10554 <Storage::getSDDrive()+0x3c>
   1052e:	f44f 700e 	mov.w	r0, #568	; 0x238
   10532:	f7ff fe9d 	bl	10270 <operator new(unsigned int)>
   10536:	2201      	movs	r2, #1
   10538:	f880 2234 	strb.w	r2, [r0, #564]	; 0x234
   1053c:	2231      	movs	r2, #49	; 0x31
   1053e:	f880 2235 	strb.w	r2, [r0, #565]	; 0x235
   10542:	223a      	movs	r2, #58	; 0x3a
   10544:	f880 2236 	strb.w	r2, [r0, #566]	; 0x236
   10548:	f880 6237 	strb.w	r6, [r0, #567]	; 0x237
   1054c:	6028      	str	r0, [r5, #0]
   1054e:	4620      	mov	r0, r4
   10550:	f00c f99a 	bl	1c888 <__cxa_guard_release>
   10554:	6828      	ldr	r0, [r5, #0]
   10556:	bd70      	pop	{r4, r5, r6, pc}
   10558:	2007c200 	.word	0x2007c200
   1055c:	2007c1e8 	.word	0x2007c1e8

00010560 <taskListHandler(str&, CharDev&, void*)>:
_Z15taskListHandlerR3strR7CharDevPv():
   10560:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   10564:	f5ad 7d0a 	sub.w	sp, sp, #552	; 0x228
   10568:	460e      	mov	r6, r1
   1056a:	f008 fdc0 	bl	190ee <str::operator int() const>
   1056e:	1e04      	subs	r4, r0, #0
   10570:	dd04      	ble.n	1057c <taskListHandler(str&, CharDev&, void*)+0x1c>
   10572:	f00b fa19 	bl	1b9a8 <vTaskResetRunTimeStats>
   10576:	4620      	mov	r0, r4
   10578:	f00a ffb6 	bl	1b4e8 <vTaskDelay>
   1057c:	f10d 0914 	add.w	r9, sp, #20
   10580:	4d2b      	ldr	r5, [pc, #172]	; (10630 <taskListHandler(str&, CharDev&, void*)+0xd0>)
   10582:	464c      	mov	r4, r9
   10584:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
   10586:	c40f      	stmia	r4!, {r0, r1, r2, r3}
   10588:	682b      	ldr	r3, [r5, #0]
   1058a:	2110      	movs	r1, #16
   1058c:	eb0d 0201 	add.w	r2, sp, r1
   10590:	2500      	movs	r5, #0
   10592:	a80a      	add	r0, sp, #40	; 0x28
   10594:	6023      	str	r3, [r4, #0]
   10596:	9504      	str	r5, [sp, #16]
   10598:	f00a ffd0 	bl	1b53c <uxTaskGetSystemState>
   1059c:	4925      	ldr	r1, [pc, #148]	; (10634 <taskListHandler(str&, CharDev&, void*)+0xd4>)
   1059e:	4682      	mov	sl, r0
   105a0:	4a25      	ldr	r2, [pc, #148]	; (10638 <taskListHandler(str&, CharDev&, void*)+0xd8>)
   105a2:	4630      	mov	r0, r6
   105a4:	f009 fe8d 	bl	1a2c2 <CharDev::printf(char const*, ...)>
   105a8:	462f      	mov	r7, r5
   105aa:	ac0f      	add	r4, sp, #60	; 0x3c
   105ac:	f04f 0800 	mov.w	r8, #0
   105b0:	45d0      	cmp	r8, sl
   105b2:	d01f      	beq.n	105f4 <taskListHandler(str&, CharDev&, void*)+0x94>
   105b4:	6823      	ldr	r3, [r4, #0]
   105b6:	42ab      	cmp	r3, r5
   105b8:	d118      	bne.n	105ec <taskListHandler(str&, CharDev&, void*)+0x8c>
   105ba:	6863      	ldr	r3, [r4, #4]
   105bc:	9a04      	ldr	r2, [sp, #16]
   105be:	441f      	add	r7, r3
   105c0:	b122      	cbz	r2, 105cc <taskListHandler(str&, CharDev&, void*)+0x6c>
   105c2:	2164      	movs	r1, #100	; 0x64
   105c4:	fbb2 f2f1 	udiv	r2, r2, r1
   105c8:	fbb3 f2f2 	udiv	r2, r3, r2
   105cc:	f814 ec08 	ldrb.w	lr, [r4, #-8]
   105d0:	9500      	str	r5, [sp, #0]
   105d2:	8921      	ldrh	r1, [r4, #8]
   105d4:	9202      	str	r2, [sp, #8]
   105d6:	0089      	lsls	r1, r1, #2
   105d8:	9101      	str	r1, [sp, #4]
   105da:	9303      	str	r3, [sp, #12]
   105dc:	4630      	mov	r0, r6
   105de:	4917      	ldr	r1, [pc, #92]	; (1063c <taskListHandler(str&, CharDev&, void*)+0xdc>)
   105e0:	f854 2c10 	ldr.w	r2, [r4, #-16]
   105e4:	f859 302e 	ldr.w	r3, [r9, lr, lsl #2]
   105e8:	f009 fe6b 	bl	1a2c2 <CharDev::printf(char const*, ...)>
   105ec:	f108 0801 	add.w	r8, r8, #1
   105f0:	3420      	adds	r4, #32
   105f2:	e7dd      	b.n	105b0 <taskListHandler(str&, CharDev&, void*)+0x50>
   105f4:	3501      	adds	r5, #1
   105f6:	2d05      	cmp	r5, #5
   105f8:	d1d7      	bne.n	105aa <taskListHandler(str&, CharDev&, void*)+0x4a>
   105fa:	9b04      	ldr	r3, [sp, #16]
   105fc:	2264      	movs	r2, #100	; 0x64
   105fe:	1bdf      	subs	r7, r3, r7
   10600:	fbb3 f3f2 	udiv	r3, r3, r2
   10604:	490e      	ldr	r1, [pc, #56]	; (10640 <taskListHandler(str&, CharDev&, void*)+0xe0>)
   10606:	4a0f      	ldr	r2, [pc, #60]	; (10644 <taskListHandler(str&, CharDev&, void*)+0xe4>)
   10608:	fbb7 f3f3 	udiv	r3, r7, r3
   1060c:	9700      	str	r7, [sp, #0]
   1060e:	4630      	mov	r0, r6
   10610:	f009 fe57 	bl	1a2c2 <CharDev::printf(char const*, ...)>
   10614:	f00a fe48 	bl	1b2a8 <uxTaskGetNumberOfTasks>
   10618:	2810      	cmp	r0, #16
   1061a:	d904      	bls.n	10626 <taskListHandler(str&, CharDev&, void*)+0xc6>
   1061c:	4630      	mov	r0, r6
   1061e:	490a      	ldr	r1, [pc, #40]	; (10648 <taskListHandler(str&, CharDev&, void*)+0xe8>)
   10620:	2210      	movs	r2, #16
   10622:	f009 fe4e 	bl	1a2c2 <CharDev::printf(char const*, ...)>
   10626:	2001      	movs	r0, #1
   10628:	f50d 7d0a 	add.w	sp, sp, #552	; 0x228
   1062c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   10630:	00024270 	.word	0x00024270
   10634:	0002428f 	.word	0x0002428f
   10638:	000242b6 	.word	0x000242b6
   1063c:	000242bb 	.word	0x000242bb
   10640:	000242d8 	.word	0x000242d8
   10644:	000242f7 	.word	0x000242f7
   10648:	00024302 	.word	0x00024302

0001064c <memInfoHandler(str&, CharDev&, void*)>:
_Z14memInfoHandlerR3strR7CharDevPv():
   1064c:	b510      	push	{r4, lr}
   1064e:	f5ad 7d00 	sub.w	sp, sp, #512	; 0x200
   10652:	460c      	mov	r4, r1
   10654:	4668      	mov	r0, sp
   10656:	f00b fcbb 	bl	1bfd0 <sys_get_mem_info_str>
   1065a:	4620      	mov	r0, r4
   1065c:	4669      	mov	r1, sp
   1065e:	f04f 32ff 	mov.w	r2, #4294967295
   10662:	f009 fdf7 	bl	1a254 <CharDev::putline(char const*, unsigned int)>
   10666:	2001      	movs	r0, #1
   10668:	f50d 7d00 	add.w	sp, sp, #512	; 0x200
   1066c:	bd10      	pop	{r4, pc}
	...

00010670 <timeHandler(str&, CharDev&, void*)>:
_Z11timeHandlerR3strR7CharDevPv():
   10670:	b530      	push	{r4, r5, lr}
   10672:	460c      	mov	r4, r1
   10674:	b091      	sub	sp, #68	; 0x44
   10676:	492c      	ldr	r1, [pc, #176]	; (10728 <timeHandler(str&, CharDev&, void*)+0xb8>)
   10678:	4605      	mov	r5, r0
   1067a:	f008 fc3f 	bl	18efc <str::beginsWith(char const*) const>
   1067e:	2800      	cmp	r0, #0
   10680:	d047      	beq.n	10712 <timeHandler(str&, CharDev&, void*)+0xa2>
   10682:	ab08      	add	r3, sp, #32
   10684:	9300      	str	r3, [sp, #0]
   10686:	ab09      	add	r3, sp, #36	; 0x24
   10688:	9301      	str	r3, [sp, #4]
   1068a:	ab0a      	add	r3, sp, #40	; 0x28
   1068c:	9302      	str	r3, [sp, #8]
   1068e:	ab0b      	add	r3, sp, #44	; 0x2c
   10690:	9303      	str	r3, [sp, #12]
   10692:	ab0c      	add	r3, sp, #48	; 0x30
   10694:	9304      	str	r3, [sp, #16]
   10696:	4628      	mov	r0, r5
   10698:	4924      	ldr	r1, [pc, #144]	; (1072c <timeHandler(str&, CharDev&, void*)+0xbc>)
   1069a:	aa06      	add	r2, sp, #24
   1069c:	ab07      	add	r3, sp, #28
   1069e:	f008 fb8b 	bl	18db8 <str::scanf(char const*, ...)>
   106a2:	2807      	cmp	r0, #7
   106a4:	d001      	beq.n	106aa <timeHandler(str&, CharDev&, void*)+0x3a>
   106a6:	2000      	movs	r0, #0
   106a8:	e03b      	b.n	10722 <timeHandler(str&, CharDev&, void*)+0xb2>
   106aa:	f89d 3039 	ldrb.w	r3, [sp, #57]	; 0x39
   106ae:	9a06      	ldr	r2, [sp, #24]
   106b0:	a80d      	add	r0, sp, #52	; 0x34
   106b2:	f362 0303 	bfi	r3, r2, #0, #4
   106b6:	f88d 3039 	strb.w	r3, [sp, #57]	; 0x39
   106ba:	9a07      	ldr	r2, [sp, #28]
   106bc:	f89d 3038 	ldrb.w	r3, [sp, #56]	; 0x38
   106c0:	f362 0304 	bfi	r3, r2, #0, #5
   106c4:	f88d 3038 	strb.w	r3, [sp, #56]	; 0x38
   106c8:	9a08      	ldr	r2, [sp, #32]
   106ca:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
   106ce:	f362 030b 	bfi	r3, r2, #0, #12
   106d2:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
   106d6:	9a09      	ldr	r2, [sp, #36]	; 0x24
   106d8:	f89d 3036 	ldrb.w	r3, [sp, #54]	; 0x36
   106dc:	f362 0304 	bfi	r3, r2, #0, #5
   106e0:	f88d 3036 	strb.w	r3, [sp, #54]	; 0x36
   106e4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   106e6:	f89d 3035 	ldrb.w	r3, [sp, #53]	; 0x35
   106ea:	f362 0305 	bfi	r3, r2, #0, #6
   106ee:	f88d 3035 	strb.w	r3, [sp, #53]	; 0x35
   106f2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   106f4:	f89d 3034 	ldrb.w	r3, [sp, #52]	; 0x34
   106f8:	f362 0305 	bfi	r3, r2, #0, #6
   106fc:	f88d 3034 	strb.w	r3, [sp, #52]	; 0x34
   10700:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   10702:	f89d 3037 	ldrb.w	r3, [sp, #55]	; 0x37
   10706:	f362 0302 	bfi	r3, r2, #0, #3
   1070a:	f88d 3037 	strb.w	r3, [sp, #55]	; 0x37
   1070e:	f009 fb65 	bl	19ddc <rtc_settime>
   10712:	f009 fbff 	bl	19f14 <rtc_get_date_time_str>
   10716:	4906      	ldr	r1, [pc, #24]	; (10730 <timeHandler(str&, CharDev&, void*)+0xc0>)
   10718:	4602      	mov	r2, r0
   1071a:	4620      	mov	r0, r4
   1071c:	f009 fdd1 	bl	1a2c2 <CharDev::printf(char const*, ...)>
   10720:	2001      	movs	r0, #1
   10722:	b011      	add	sp, #68	; 0x44
   10724:	bd30      	pop	{r4, r5, pc}
   10726:	bf00      	nop
   10728:	0002432c 	.word	0x0002432c
   1072c:	00024330 	.word	0x00024330
   10730:	000265ea 	.word	0x000265ea

00010734 <logHandler(str&, CharDev&, void*)>:
_Z10logHandlerR3strR7CharDevPv():
   10734:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   10736:	460d      	mov	r5, r1
   10738:	4934      	ldr	r1, [pc, #208]	; (1080c <logHandler(str&, CharDev&, void*)+0xd8>)
   1073a:	4604      	mov	r4, r0
   1073c:	f008 fcd3 	bl	190e6 <str::operator==(char const*) const>
   10740:	b140      	cbz	r0, 10754 <logHandler(str&, CharDev&, void*)+0x20>
   10742:	f007 ff2b 	bl	1859c <logger_send_flush_request>
   10746:	4628      	mov	r0, r5
   10748:	4931      	ldr	r1, [pc, #196]	; (10810 <logHandler(str&, CharDev&, void*)+0xdc>)
   1074a:	f04f 32ff 	mov.w	r2, #4294967295
   1074e:	f009 fd81 	bl	1a254 <CharDev::putline(char const*, unsigned int)>
   10752:	e057      	b.n	10804 <logHandler(str&, CharDev&, void*)+0xd0>
   10754:	4620      	mov	r0, r4
   10756:	492f      	ldr	r1, [pc, #188]	; (10814 <logHandler(str&, CharDev&, void*)+0xe0>)
   10758:	f008 fbd0 	bl	18efc <str::beginsWith(char const*) const>
   1075c:	b150      	cbz	r0, 10774 <logHandler(str&, CharDev&, void*)+0x40>
   1075e:	2101      	movs	r1, #1
   10760:	2220      	movs	r2, #32
   10762:	4620      	mov	r0, r4
   10764:	f008 fc6c 	bl	19040 <str::eraseFirstWords(int, char)>
   10768:	4620      	mov	r0, r4
   1076a:	f008 fcbe 	bl	190ea <str::operator()() const>
   1076e:	f008 f84b 	bl	18808 <logger_log_raw>
   10772:	e047      	b.n	10804 <logHandler(str&, CharDev&, void*)+0xd0>
   10774:	4620      	mov	r0, r4
   10776:	4928      	ldr	r1, [pc, #160]	; (10818 <logHandler(str&, CharDev&, void*)+0xe4>)
   10778:	f008 fbc0 	bl	18efc <str::beginsWith(char const*) const>
   1077c:	4606      	mov	r6, r0
   1077e:	b928      	cbnz	r0, 1078c <logHandler(str&, CharDev&, void*)+0x58>
   10780:	4620      	mov	r0, r4
   10782:	4926      	ldr	r1, [pc, #152]	; (1081c <logHandler(str&, CharDev&, void*)+0xe8>)
   10784:	f008 fbba 	bl	18efc <str::beginsWith(char const*) const>
   10788:	4607      	mov	r7, r0
   1078a:	b348      	cbz	r0, 107e0 <logHandler(str&, CharDev&, void*)+0xac>
   1078c:	2101      	movs	r1, #1
   1078e:	4620      	mov	r0, r4
   10790:	2220      	movs	r2, #32
   10792:	f008 fc55 	bl	19040 <str::eraseFirstWords(int, char)>
   10796:	4620      	mov	r0, r4
   10798:	4921      	ldr	r1, [pc, #132]	; (10820 <logHandler(str&, CharDev&, void*)+0xec>)
   1079a:	f008 fbc7 	bl	18f2c <str::beginsWithIgnoreCase(char const*) const>
   1079e:	b940      	cbnz	r0, 107b2 <logHandler(str&, CharDev&, void*)+0x7e>
   107a0:	4620      	mov	r0, r4
   107a2:	4920      	ldr	r1, [pc, #128]	; (10824 <logHandler(str&, CharDev&, void*)+0xf0>)
   107a4:	f008 fbc2 	bl	18f2c <str::beginsWithIgnoreCase(char const*) const>
   107a8:	2800      	cmp	r0, #0
   107aa:	bf14      	ite	ne
   107ac:	2402      	movne	r4, #2
   107ae:	2400      	moveq	r4, #0
   107b0:	e000      	b.n	107b4 <logHandler(str&, CharDev&, void*)+0x80>
   107b2:	2401      	movs	r4, #1
   107b4:	4620      	mov	r0, r4
   107b6:	4631      	mov	r1, r6
   107b8:	f007 ff78 	bl	186ac <logger_set_printf>
   107bc:	4b1a      	ldr	r3, [pc, #104]	; (10828 <logHandler(str&, CharDev&, void*)+0xf4>)
   107be:	4a1b      	ldr	r2, [pc, #108]	; (1082c <logHandler(str&, CharDev&, void*)+0xf8>)
   107c0:	2e00      	cmp	r6, #0
   107c2:	bf18      	it	ne
   107c4:	461a      	movne	r2, r3
   107c6:	b12c      	cbz	r4, 107d4 <logHandler(str&, CharDev&, void*)+0xa0>
   107c8:	4b15      	ldr	r3, [pc, #84]	; (10820 <logHandler(str&, CharDev&, void*)+0xec>)
   107ca:	4916      	ldr	r1, [pc, #88]	; (10824 <logHandler(str&, CharDev&, void*)+0xf0>)
   107cc:	2c01      	cmp	r4, #1
   107ce:	bf18      	it	ne
   107d0:	460b      	movne	r3, r1
   107d2:	e000      	b.n	107d6 <logHandler(str&, CharDev&, void*)+0xa2>
   107d4:	4b16      	ldr	r3, [pc, #88]	; (10830 <logHandler(str&, CharDev&, void*)+0xfc>)
   107d6:	4628      	mov	r0, r5
   107d8:	4916      	ldr	r1, [pc, #88]	; (10834 <logHandler(str&, CharDev&, void*)+0x100>)
   107da:	f009 fd72 	bl	1a2c2 <CharDev::printf(char const*, ...)>
   107de:	e011      	b.n	10804 <logHandler(str&, CharDev&, void*)+0xd0>
   107e0:	4620      	mov	r0, r4
   107e2:	f008 fc82 	bl	190ea <str::operator()() const>
   107e6:	4914      	ldr	r1, [pc, #80]	; (10838 <logHandler(str&, CharDev&, void*)+0x104>)
   107e8:	4a14      	ldr	r2, [pc, #80]	; (1083c <logHandler(str&, CharDev&, void*)+0x108>)
   107ea:	9000      	str	r0, [sp, #0]
   107ec:	23ee      	movs	r3, #238	; 0xee
   107ee:	4638      	mov	r0, r7
   107f0:	f007 ff6a 	bl	186c8 <logger_log>
   107f4:	4620      	mov	r0, r4
   107f6:	f008 fc78 	bl	190ea <str::operator()() const>
   107fa:	4911      	ldr	r1, [pc, #68]	; (10840 <logHandler(str&, CharDev&, void*)+0x10c>)
   107fc:	4602      	mov	r2, r0
   107fe:	4628      	mov	r0, r5
   10800:	f009 fd5f 	bl	1a2c2 <CharDev::printf(char const*, ...)>
   10804:	2001      	movs	r0, #1
   10806:	b003      	add	sp, #12
   10808:	bdf0      	pop	{r4, r5, r6, r7, pc}
   1080a:	bf00      	nop
   1080c:	00024365 	.word	0x00024365
   10810:	0002436b 	.word	0x0002436b
   10814:	00024384 	.word	0x00024384
   10818:	00024388 	.word	0x00024388
   1081c:	0002438f 	.word	0x0002438f
   10820:	00024360 	.word	0x00024360
   10824:	0002435a 	.word	0x0002435a
   10828:	00024349 	.word	0x00024349
   1082c:	00024351 	.word	0x00024351
   10830:	0002599a 	.word	0x0002599a
   10834:	00024397 	.word	0x00024397
   10838:	000243b0 	.word	0x000243b0
   1083c:	00024284 	.word	0x00024284
   10840:	000243e3 	.word	0x000243e3

00010844 <cpHandler(str&, CharDev&, void*)>:
_Z9cpHandlerR3strR7CharDevPv():
   10844:	b530      	push	{r4, r5, lr}
   10846:	b089      	sub	sp, #36	; 0x24
   10848:	ab04      	add	r3, sp, #16
   1084a:	2400      	movs	r4, #0
   1084c:	9300      	str	r3, [sp, #0]
   1084e:	460d      	mov	r5, r1
   10850:	2202      	movs	r2, #2
   10852:	4919      	ldr	r1, [pc, #100]	; (108b8 <cpHandler(str&, CharDev&, void*)+0x74>)
   10854:	ab03      	add	r3, sp, #12
   10856:	9403      	str	r4, [sp, #12]
   10858:	9404      	str	r4, [sp, #16]
   1085a:	f008 fabb 	bl	18dd4 <str::tokenize(char const*, int, ...)>
   1085e:	2802      	cmp	r0, #2
   10860:	d127      	bne.n	108b2 <cpHandler(str&, CharDev&, void*)+0x6e>
   10862:	ab07      	add	r3, sp, #28
   10864:	9300      	str	r3, [sp, #0]
   10866:	aa05      	add	r2, sp, #20
   10868:	9803      	ldr	r0, [sp, #12]
   1086a:	9904      	ldr	r1, [sp, #16]
   1086c:	ab06      	add	r3, sp, #24
   1086e:	9405      	str	r4, [sp, #20]
   10870:	9406      	str	r4, [sp, #24]
   10872:	9407      	str	r4, [sp, #28]
   10874:	f004 fbbc 	bl	14ff0 <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)>
   10878:	4602      	mov	r2, r0
   1087a:	b138      	cbz	r0, 1088c <cpHandler(str&, CharDev&, void*)+0x48>
   1087c:	9b04      	ldr	r3, [sp, #16]
   1087e:	4628      	mov	r0, r5
   10880:	9300      	str	r3, [sp, #0]
   10882:	490e      	ldr	r1, [pc, #56]	; (108bc <cpHandler(str&, CharDev&, void*)+0x78>)
   10884:	9b03      	ldr	r3, [sp, #12]
   10886:	f009 fd1c 	bl	1a2c2 <CharDev::printf(char const*, ...)>
   1088a:	e010      	b.n	108ae <cpHandler(str&, CharDev&, void*)+0x6a>
   1088c:	9a05      	ldr	r2, [sp, #20]
   1088e:	9b06      	ldr	r3, [sp, #24]
   10890:	2a00      	cmp	r2, #0
   10892:	9c07      	ldr	r4, [sp, #28]
   10894:	bf08      	it	eq
   10896:	2201      	moveq	r2, #1
   10898:	2b00      	cmp	r3, #0
   1089a:	bf08      	it	eq
   1089c:	2301      	moveq	r3, #1
   1089e:	4628      	mov	r0, r5
   108a0:	4907      	ldr	r1, [pc, #28]	; (108c0 <cpHandler(str&, CharDev&, void*)+0x7c>)
   108a2:	fbb4 f2f2 	udiv	r2, r4, r2
   108a6:	fbb4 f3f3 	udiv	r3, r4, r3
   108aa:	f009 fd0a 	bl	1a2c2 <CharDev::printf(char const*, ...)>
   108ae:	2001      	movs	r0, #1
   108b0:	e000      	b.n	108b4 <cpHandler(str&, CharDev&, void*)+0x70>
   108b2:	4620      	mov	r0, r4
   108b4:	b009      	add	sp, #36	; 0x24
   108b6:	bd30      	pop	{r4, r5, pc}
   108b8:	00025932 	.word	0x00025932
   108bc:	000243f1 	.word	0x000243f1
   108c0:	00024410 	.word	0x00024410

000108c4 <catHandler(str&, CharDev&, void*)>:
_Z10catHandlerR3strR7CharDevPv():
   108c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   108c8:	4688      	mov	r8, r1
   108ca:	f2ad 4d34 	subw	sp, sp, #1076	; 0x434
   108ce:	4943      	ldr	r1, [pc, #268]	; (109dc <catHandler(str&, CharDev&, void*)+0x118>)
   108d0:	4604      	mov	r4, r0
   108d2:	f008 fba1 	bl	19018 <str::erase(char const*)>
   108d6:	4942      	ldr	r1, [pc, #264]	; (109e0 <catHandler(str&, CharDev&, void*)+0x11c>)
   108d8:	4681      	mov	r9, r0
   108da:	4620      	mov	r0, r4
   108dc:	f008 fbc5 	bl	1906a <str::trimStart(char const*)>
   108e0:	4620      	mov	r0, r4
   108e2:	493f      	ldr	r1, [pc, #252]	; (109e0 <catHandler(str&, CharDev&, void*)+0x11c>)
   108e4:	f008 fbe1 	bl	190aa <str::trimEnd(char const*)>
   108e8:	493e      	ldr	r1, [pc, #248]	; (109e4 <catHandler(str&, CharDev&, void*)+0x120>)
   108ea:	4640      	mov	r0, r8
   108ec:	f009 fce9 	bl	1a2c2 <CharDev::printf(char const*, ...)>
   108f0:	4620      	mov	r0, r4
   108f2:	f008 fbfa 	bl	190ea <str::operator()() const>
   108f6:	2201      	movs	r2, #1
   108f8:	4601      	mov	r1, r0
   108fa:	a883      	add	r0, sp, #524	; 0x20c
   108fc:	f006 fbcc 	bl	17098 <f_open>
   10900:	4605      	mov	r5, r0
   10902:	b140      	cbz	r0, 10916 <catHandler(str&, CharDev&, void*)+0x52>
   10904:	4620      	mov	r0, r4
   10906:	f008 fbf0 	bl	190ea <str::operator()() const>
   1090a:	4937      	ldr	r1, [pc, #220]	; (109e8 <catHandler(str&, CharDev&, void*)+0x124>)
   1090c:	4602      	mov	r2, r0
   1090e:	4640      	mov	r0, r8
   10910:	f009 fcd7 	bl	1a2c2 <CharDev::printf(char const*, ...)>
   10914:	e05c      	b.n	109d0 <catHandler(str&, CharDev&, void*)+0x10c>
   10916:	f10d 0b0c 	add.w	fp, sp, #12
   1091a:	4629      	mov	r1, r5
   1091c:	f44f 7200 	mov.w	r2, #512	; 0x200
   10920:	4658      	mov	r0, fp
   10922:	f00d faa4 	bl	1de6e <memset>
   10926:	9502      	str	r5, [sp, #8]
   10928:	f00b fb3e 	bl	1bfa8 <sys_get_uptime_us>
   1092c:	46aa      	mov	sl, r5
   1092e:	4606      	mov	r6, r0
   10930:	460f      	mov	r7, r1
   10932:	a883      	add	r0, sp, #524	; 0x20c
   10934:	4659      	mov	r1, fp
   10936:	f44f 7200 	mov.w	r2, #512	; 0x200
   1093a:	ab02      	add	r3, sp, #8
   1093c:	f006 fc3e 	bl	171bc <f_read>
   10940:	b908      	cbnz	r0, 10946 <catHandler(str&, CharDev&, void*)+0x82>
   10942:	9b02      	ldr	r3, [sp, #8]
   10944:	bb33      	cbnz	r3, 10994 <catHandler(str&, CharDev&, void*)+0xd0>
   10946:	a883      	add	r0, sp, #524	; 0x20c
   10948:	f006 fe1a 	bl	17580 <f_close>
   1094c:	f1b9 0f00 	cmp.w	r9, #0
   10950:	d019      	beq.n	10986 <catHandler(str&, CharDev&, void*)+0xc2>
   10952:	f00b fb29 	bl	1bfa8 <sys_get_uptime_us>
   10956:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   1095a:	2300      	movs	r3, #0
   1095c:	f00c fe10 	bl	1d580 <__aeabi_uldivmod>
   10960:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   10964:	4604      	mov	r4, r0
   10966:	2300      	movs	r3, #0
   10968:	4630      	mov	r0, r6
   1096a:	4639      	mov	r1, r7
   1096c:	f00c fe08 	bl	1d580 <__aeabi_uldivmod>
   10970:	1a20      	subs	r0, r4, r0
   10972:	bf14      	ite	ne
   10974:	4603      	movne	r3, r0
   10976:	2301      	moveq	r3, #1
   10978:	491c      	ldr	r1, [pc, #112]	; (109ec <catHandler(str&, CharDev&, void*)+0x128>)
   1097a:	4640      	mov	r0, r8
   1097c:	4652      	mov	r2, sl
   1097e:	fbba f3f3 	udiv	r3, sl, r3
   10982:	f009 fc9e 	bl	1a2c2 <CharDev::printf(char const*, ...)>
   10986:	4640      	mov	r0, r8
   10988:	4919      	ldr	r1, [pc, #100]	; (109f0 <catHandler(str&, CharDev&, void*)+0x12c>)
   1098a:	f04f 32ff 	mov.w	r2, #4294967295
   1098e:	f009 fc61 	bl	1a254 <CharDev::putline(char const*, unsigned int)>
   10992:	e01d      	b.n	109d0 <catHandler(str&, CharDev&, void*)+0x10c>
   10994:	449a      	add	sl, r3
   10996:	f1b9 0f00 	cmp.w	r9, #0
   1099a:	d1ca      	bne.n	10932 <catHandler(str&, CharDev&, void*)+0x6e>
   1099c:	464c      	mov	r4, r9
   1099e:	9b02      	ldr	r3, [sp, #8]
   109a0:	429c      	cmp	r4, r3
   109a2:	f8d8 3000 	ldr.w	r3, [r8]
   109a6:	d208      	bcs.n	109ba <catHandler(str&, CharDev&, void*)+0xf6>
   109a8:	f91b 1004 	ldrsb.w	r1, [fp, r4]
   109ac:	685b      	ldr	r3, [r3, #4]
   109ae:	4640      	mov	r0, r8
   109b0:	f04f 32ff 	mov.w	r2, #4294967295
   109b4:	4798      	blx	r3
   109b6:	3401      	adds	r4, #1
   109b8:	e7f1      	b.n	1099e <catHandler(str&, CharDev&, void*)+0xda>
   109ba:	2200      	movs	r2, #0
   109bc:	f88d 2007 	strb.w	r2, [sp, #7]
   109c0:	681b      	ldr	r3, [r3, #0]
   109c2:	4640      	mov	r0, r8
   109c4:	f10d 0107 	add.w	r1, sp, #7
   109c8:	f04f 32ff 	mov.w	r2, #4294967295
   109cc:	4798      	blx	r3
   109ce:	e7b0      	b.n	10932 <catHandler(str&, CharDev&, void*)+0x6e>
   109d0:	2001      	movs	r0, #1
   109d2:	f20d 4d34 	addw	sp, sp, #1076	; 0x434
   109d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   109da:	bf00      	nop
   109dc:	0002443e 	.word	0x0002443e
   109e0:	00025932 	.word	0x00025932
   109e4:	00024447 	.word	0x00024447
   109e8:	00024475 	.word	0x00024475
   109ec:	00024489 	.word	0x00024489
   109f0:	000249f1 	.word	0x000249f1

000109f4 <lsHandler(str&, CharDev&, void*)>:
_Z9lsHandlerR3strR7CharDevPv():
   109f4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   109f8:	b0c1      	sub	sp, #260	; 0x104
   109fa:	ab0e      	add	r3, sp, #56	; 0x38
   109fc:	2500      	movs	r5, #0
   109fe:	9300      	str	r3, [sp, #0]
   10a00:	460c      	mov	r4, r1
   10a02:	2202      	movs	r2, #2
   10a04:	495d      	ldr	r1, [pc, #372]	; (10b7c <lsHandler(str&, CharDev&, void*)+0x188>)
   10a06:	ab0d      	add	r3, sp, #52	; 0x34
   10a08:	950c      	str	r5, [sp, #48]	; 0x30
   10a0a:	950d      	str	r5, [sp, #52]	; 0x34
   10a0c:	950e      	str	r5, [sp, #56]	; 0x38
   10a0e:	f008 f9e1 	bl	18dd4 <str::tokenize(char const*, int, ...)>
   10a12:	2802      	cmp	r0, #2
   10a14:	d103      	bne.n	10a1e <lsHandler(str&, CharDev&, void*)+0x2a>
   10a16:	980e      	ldr	r0, [sp, #56]	; 0x38
   10a18:	f00d f899 	bl	1db4e <atoi>
   10a1c:	4605      	mov	r5, r0
   10a1e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   10a20:	b90b      	cbnz	r3, 10a26 <lsHandler(str&, CharDev&, void*)+0x32>
   10a22:	4b57      	ldr	r3, [pc, #348]	; (10b80 <lsHandler(str&, CharDev&, void*)+0x18c>)
   10a24:	930d      	str	r3, [sp, #52]	; 0x34
   10a26:	a817      	add	r0, sp, #92	; 0x5c
   10a28:	990d      	ldr	r1, [sp, #52]	; 0x34
   10a2a:	f006 fe68 	bl	176fe <f_opendir>
   10a2e:	4603      	mov	r3, r0
   10a30:	b170      	cbz	r0, 10a50 <lsHandler(str&, CharDev&, void*)+0x5c>
   10a32:	4620      	mov	r0, r4
   10a34:	4953      	ldr	r1, [pc, #332]	; (10b84 <lsHandler(str&, CharDev&, void*)+0x190>)
   10a36:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   10a38:	f009 fc43 	bl	1a2c2 <CharDev::printf(char const*, ...)>
   10a3c:	e099      	b.n	10b72 <lsHandler(str&, CharDev&, void*)+0x17e>
   10a3e:	2380      	movs	r3, #128	; 0x80
   10a40:	a817      	add	r0, sp, #92	; 0x5c
   10a42:	a90f      	add	r1, sp, #60	; 0x3c
   10a44:	9615      	str	r6, [sp, #84]	; 0x54
   10a46:	9316      	str	r3, [sp, #88]	; 0x58
   10a48:	f006 fe98 	bl	1777c <f_readdir>
   10a4c:	3d01      	subs	r5, #1
   10a4e:	b910      	cbnz	r0, 10a56 <lsHandler(str&, CharDev&, void*)+0x62>
   10a50:	2d00      	cmp	r5, #0
   10a52:	ae20      	add	r6, sp, #128	; 0x80
   10a54:	dcf3      	bgt.n	10a3e <lsHandler(str&, CharDev&, void*)+0x4a>
   10a56:	4620      	mov	r0, r4
   10a58:	494b      	ldr	r1, [pc, #300]	; (10b88 <lsHandler(str&, CharDev&, void*)+0x194>)
   10a5a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   10a5c:	f009 fc31 	bl	1a2c2 <CharDev::printf(char const*, ...)>
   10a60:	2500      	movs	r5, #0
   10a62:	462f      	mov	r7, r5
   10a64:	2380      	movs	r3, #128	; 0x80
   10a66:	a817      	add	r0, sp, #92	; 0x5c
   10a68:	a90f      	add	r1, sp, #60	; 0x3c
   10a6a:	9615      	str	r6, [sp, #84]	; 0x54
   10a6c:	9316      	str	r3, [sp, #88]	; 0x58
   10a6e:	f006 fe85 	bl	1777c <f_readdir>
   10a72:	2800      	cmp	r0, #0
   10a74:	d165      	bne.n	10b42 <lsHandler(str&, CharDev&, void*)+0x14e>
   10a76:	f99d 3045 	ldrsb.w	r3, [sp, #69]	; 0x45
   10a7a:	2b00      	cmp	r3, #0
   10a7c:	d061      	beq.n	10b42 <lsHandler(str&, CharDev&, void*)+0x14e>
   10a7e:	f89d 0044 	ldrb.w	r0, [sp, #68]	; 0x44
   10a82:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   10a84:	f010 0f10 	tst.w	r0, #16
   10a88:	d002      	beq.n	10a90 <lsHandler(str&, CharDev&, void*)+0x9c>
   10a8a:	3501      	adds	r5, #1
   10a8c:	2244      	movs	r2, #68	; 0x44
   10a8e:	e004      	b.n	10a9a <lsHandler(str&, CharDev&, void*)+0xa6>
   10a90:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   10a92:	3701      	adds	r7, #1
   10a94:	441a      	add	r2, r3
   10a96:	920c      	str	r2, [sp, #48]	; 0x30
   10a98:	222d      	movs	r2, #45	; 0x2d
   10a9a:	f010 0f01 	tst.w	r0, #1
   10a9e:	bf0c      	ite	eq
   10aa0:	f04f 0e2d 	moveq.w	lr, #45	; 0x2d
   10aa4:	f04f 0e52 	movne.w	lr, #82	; 0x52
   10aa8:	f010 0f02 	tst.w	r0, #2
   10aac:	bf0c      	ite	eq
   10aae:	f04f 092d 	moveq.w	r9, #45	; 0x2d
   10ab2:	f04f 0948 	movne.w	r9, #72	; 0x48
   10ab6:	f010 0f04 	tst.w	r0, #4
   10aba:	f8bd 1040 	ldrh.w	r1, [sp, #64]	; 0x40
   10abe:	bf0c      	ite	eq
   10ac0:	f04f 082d 	moveq.w	r8, #45	; 0x2d
   10ac4:	f04f 0853 	movne.w	r8, #83	; 0x53
   10ac8:	f010 0f20 	tst.w	r0, #32
   10acc:	bf0c      	ite	eq
   10ace:	f04f 0c2d 	moveq.w	ip, #45	; 0x2d
   10ad2:	f04f 0c41 	movne.w	ip, #65	; 0x41
   10ad6:	f8cd c008 	str.w	ip, [sp, #8]
   10ada:	ea4f 2c61 	mov.w	ip, r1, asr #9
   10ade:	f8bd 0042 	ldrh.w	r0, [sp, #66]	; 0x42
   10ae2:	f20c 7cbc 	addw	ip, ip, #1980	; 0x7bc
   10ae6:	f8cd c00c 	str.w	ip, [sp, #12]
   10aea:	f3c1 1c43 	ubfx	ip, r1, #5, #4
   10aee:	f001 011f 	and.w	r1, r1, #31
   10af2:	9105      	str	r1, [sp, #20]
   10af4:	9308      	str	r3, [sp, #32]
   10af6:	12c1      	asrs	r1, r0, #11
   10af8:	f10d 0345 	add.w	r3, sp, #69	; 0x45
   10afc:	f3c0 1045 	ubfx	r0, r0, #5, #6
   10b00:	f8cd c010 	str.w	ip, [sp, #16]
   10b04:	9106      	str	r1, [sp, #24]
   10b06:	9007      	str	r0, [sp, #28]
   10b08:	9309      	str	r3, [sp, #36]	; 0x24
   10b0a:	f8cd 9000 	str.w	r9, [sp]
   10b0e:	4673      	mov	r3, lr
   10b10:	f8cd 8004 	str.w	r8, [sp, #4]
   10b14:	4620      	mov	r0, r4
   10b16:	491d      	ldr	r1, [pc, #116]	; (10b8c <lsHandler(str&, CharDev&, void*)+0x198>)
   10b18:	f009 fbd3 	bl	1a2c2 <CharDev::printf(char const*, ...)>
   10b1c:	4620      	mov	r0, r4
   10b1e:	491c      	ldr	r1, [pc, #112]	; (10b90 <lsHandler(str&, CharDev&, void*)+0x19c>)
   10b20:	f04f 32ff 	mov.w	r2, #4294967295
   10b24:	f009 fb81 	bl	1a22a <CharDev::put(char const*, unsigned int)>
   10b28:	4631      	mov	r1, r6
   10b2a:	4620      	mov	r0, r4
   10b2c:	f04f 32ff 	mov.w	r2, #4294967295
   10b30:	f009 fb7b 	bl	1a22a <CharDev::put(char const*, unsigned int)>
   10b34:	4620      	mov	r0, r4
   10b36:	4917      	ldr	r1, [pc, #92]	; (10b94 <lsHandler(str&, CharDev&, void*)+0x1a0>)
   10b38:	f04f 32ff 	mov.w	r2, #4294967295
   10b3c:	f009 fb8a 	bl	1a254 <CharDev::putline(char const*, unsigned int)>
   10b40:	e790      	b.n	10a64 <lsHandler(str&, CharDev&, void*)+0x70>
   10b42:	9500      	str	r5, [sp, #0]
   10b44:	ad40      	add	r5, sp, #256	; 0x100
   10b46:	f855 3dd0 	ldr.w	r3, [r5, #-208]!
   10b4a:	4913      	ldr	r1, [pc, #76]	; (10b98 <lsHandler(str&, CharDev&, void*)+0x1a4>)
   10b4c:	463a      	mov	r2, r7
   10b4e:	4620      	mov	r0, r4
   10b50:	f009 fbb7 	bl	1a2c2 <CharDev::printf(char const*, ...)>
   10b54:	980d      	ldr	r0, [sp, #52]	; 0x34
   10b56:	4629      	mov	r1, r5
   10b58:	aa0b      	add	r2, sp, #44	; 0x2c
   10b5a:	f006 fe3e 	bl	177da <f_getfree>
   10b5e:	b940      	cbnz	r0, 10b72 <lsHandler(str&, CharDev&, void*)+0x17e>
   10b60:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   10b62:	4620      	mov	r0, r4
   10b64:	789a      	ldrb	r2, [r3, #2]
   10b66:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   10b68:	490c      	ldr	r1, [pc, #48]	; (10b9c <lsHandler(str&, CharDev&, void*)+0x1a8>)
   10b6a:	435a      	muls	r2, r3
   10b6c:	0852      	lsrs	r2, r2, #1
   10b6e:	f009 fba8 	bl	1a2c2 <CharDev::printf(char const*, ...)>
   10b72:	2001      	movs	r0, #1
   10b74:	b041      	add	sp, #260	; 0x104
   10b76:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   10b7a:	bf00      	nop
   10b7c:	00025932 	.word	0x00025932
   10b80:	000244a4 	.word	0x000244a4
   10b84:	000244a7 	.word	0x000244a7
   10b88:	000244cb 	.word	0x000244cb
   10b8c:	000244e6 	.word	0x000244e6
   10b90:	00024513 	.word	0x00024513
   10b94:	000249f1 	.word	0x000249f1
   10b98:	00024517 	.word	0x00024517
   10b9c:	00024541 	.word	0x00024541

00010ba0 <mkdirHandler(str&, CharDev&, void*)>:
_Z12mkdirHandlerR3strR7CharDevPv():
   10ba0:	b570      	push	{r4, r5, r6, lr}
   10ba2:	460e      	mov	r6, r1
   10ba4:	4605      	mov	r5, r0
   10ba6:	f008 faa0 	bl	190ea <str::operator()() const>
   10baa:	4604      	mov	r4, r0
   10bac:	4628      	mov	r0, r5
   10bae:	f008 fa9c 	bl	190ea <str::operator()() const>
   10bb2:	f006 fed4 	bl	1795e <f_mkdir>
   10bb6:	4a06      	ldr	r2, [pc, #24]	; (10bd0 <mkdirHandler(str&, CharDev&, void*)+0x30>)
   10bb8:	4b06      	ldr	r3, [pc, #24]	; (10bd4 <mkdirHandler(str&, CharDev&, void*)+0x34>)
   10bba:	4907      	ldr	r1, [pc, #28]	; (10bd8 <mkdirHandler(str&, CharDev&, void*)+0x38>)
   10bbc:	2800      	cmp	r0, #0
   10bbe:	bf18      	it	ne
   10bc0:	4613      	movne	r3, r2
   10bc2:	4630      	mov	r0, r6
   10bc4:	4622      	mov	r2, r4
   10bc6:	f009 fb7c 	bl	1a2c2 <CharDev::printf(char const*, ...)>
   10bca:	2001      	movs	r0, #1
   10bcc:	bd70      	pop	{r4, r5, r6, pc}
   10bce:	bf00      	nop
   10bd0:	00024701 	.word	0x00024701
   10bd4:	000246f7 	.word	0x000246f7
   10bd8:	00024555 	.word	0x00024555

00010bdc <rmHandler(str&, CharDev&, void*)>:
_Z9rmHandlerR3strR7CharDevPv():
   10bdc:	b570      	push	{r4, r5, r6, lr}
   10bde:	460e      	mov	r6, r1
   10be0:	4605      	mov	r5, r0
   10be2:	f008 fa82 	bl	190ea <str::operator()() const>
   10be6:	4604      	mov	r4, r0
   10be8:	4628      	mov	r0, r5
   10bea:	f008 fa7e 	bl	190ea <str::operator()() const>
   10bee:	f006 fe59 	bl	178a4 <f_unlink>
   10bf2:	4a06      	ldr	r2, [pc, #24]	; (10c0c <rmHandler(str&, CharDev&, void*)+0x30>)
   10bf4:	4b06      	ldr	r3, [pc, #24]	; (10c10 <rmHandler(str&, CharDev&, void*)+0x34>)
   10bf6:	4907      	ldr	r1, [pc, #28]	; (10c14 <rmHandler(str&, CharDev&, void*)+0x38>)
   10bf8:	2800      	cmp	r0, #0
   10bfa:	bf18      	it	ne
   10bfc:	4613      	movne	r3, r2
   10bfe:	4630      	mov	r0, r6
   10c00:	4622      	mov	r2, r4
   10c02:	f009 fb5e 	bl	1a2c2 <CharDev::printf(char const*, ...)>
   10c06:	2001      	movs	r0, #1
   10c08:	bd70      	pop	{r4, r5, r6, pc}
   10c0a:	bf00      	nop
   10c0c:	00024701 	.word	0x00024701
   10c10:	000246f7 	.word	0x000246f7
   10c14:	00024571 	.word	0x00024571

00010c18 <mvHandler(str&, CharDev&, void*)>:
_Z9mvHandlerR3strR7CharDevPv():
   10c18:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   10c1a:	ab03      	add	r3, sp, #12
   10c1c:	2400      	movs	r4, #0
   10c1e:	9300      	str	r3, [sp, #0]
   10c20:	460e      	mov	r6, r1
   10c22:	2202      	movs	r2, #2
   10c24:	490f      	ldr	r1, [pc, #60]	; (10c64 <mvHandler(str&, CharDev&, void*)+0x4c>)
   10c26:	ab02      	add	r3, sp, #8
   10c28:	9402      	str	r4, [sp, #8]
   10c2a:	9403      	str	r4, [sp, #12]
   10c2c:	f008 f8d2 	bl	18dd4 <str::tokenize(char const*, int, ...)>
   10c30:	2802      	cmp	r0, #2
   10c32:	d114      	bne.n	10c5e <mvHandler(str&, CharDev&, void*)+0x46>
   10c34:	9d02      	ldr	r5, [sp, #8]
   10c36:	9c03      	ldr	r4, [sp, #12]
   10c38:	4628      	mov	r0, r5
   10c3a:	4621      	mov	r1, r4
   10c3c:	f006 ff3a 	bl	17ab4 <f_rename>
   10c40:	4b09      	ldr	r3, [pc, #36]	; (10c68 <mvHandler(str&, CharDev&, void*)+0x50>)
   10c42:	4a0a      	ldr	r2, [pc, #40]	; (10c6c <mvHandler(str&, CharDev&, void*)+0x54>)
   10c44:	490a      	ldr	r1, [pc, #40]	; (10c70 <mvHandler(str&, CharDev&, void*)+0x58>)
   10c46:	2800      	cmp	r0, #0
   10c48:	bf14      	ite	ne
   10c4a:	4610      	movne	r0, r2
   10c4c:	4618      	moveq	r0, r3
   10c4e:	9000      	str	r0, [sp, #0]
   10c50:	462a      	mov	r2, r5
   10c52:	4630      	mov	r0, r6
   10c54:	4623      	mov	r3, r4
   10c56:	f009 fb34 	bl	1a2c2 <CharDev::printf(char const*, ...)>
   10c5a:	2001      	movs	r0, #1
   10c5c:	e000      	b.n	10c60 <mvHandler(str&, CharDev&, void*)+0x48>
   10c5e:	4620      	mov	r0, r4
   10c60:	b004      	add	sp, #16
   10c62:	bd70      	pop	{r4, r5, r6, pc}
   10c64:	00025932 	.word	0x00025932
   10c68:	000246f7 	.word	0x000246f7
   10c6c:	00024701 	.word	0x00024701
   10c70:	00024583 	.word	0x00024583

00010c74 <newFileHandler(str&, CharDev&, void*)>:
_Z14newFileHandlerR3strR7CharDevPv():
   10c74:	b530      	push	{r4, r5, lr}
   10c76:	f5ad 7d0d 	sub.w	sp, sp, #564	; 0x234
   10c7a:	460c      	mov	r4, r1
   10c7c:	4605      	mov	r5, r0
   10c7e:	f008 fa34 	bl	190ea <str::operator()() const>
   10c82:	220a      	movs	r2, #10
   10c84:	4601      	mov	r1, r0
   10c86:	a803      	add	r0, sp, #12
   10c88:	f006 fa06 	bl	17098 <f_open>
   10c8c:	b140      	cbz	r0, 10ca0 <newFileHandler(str&, CharDev&, void*)+0x2c>
   10c8e:	4628      	mov	r0, r5
   10c90:	f008 fa2b 	bl	190ea <str::operator()() const>
   10c94:	491f      	ldr	r1, [pc, #124]	; (10d14 <newFileHandler(str&, CharDev&, void*)+0xa0>)
   10c96:	4602      	mov	r2, r0
   10c98:	4620      	mov	r0, r4
   10c9a:	f009 fb12 	bl	1a2c2 <CharDev::printf(char const*, ...)>
   10c9e:	e035      	b.n	10d0c <newFileHandler(str&, CharDev&, void*)+0x98>
   10ca0:	f88d 0007 	strb.w	r0, [sp, #7]
   10ca4:	9002      	str	r0, [sp, #8]
   10ca6:	491c      	ldr	r1, [pc, #112]	; (10d18 <newFileHandler(str&, CharDev&, void*)+0xa4>)
   10ca8:	4620      	mov	r0, r4
   10caa:	227e      	movs	r2, #126	; 0x7e
   10cac:	f242 7310 	movw	r3, #10000	; 0x2710
   10cb0:	f009 fb07 	bl	1a2c2 <CharDev::printf(char const*, ...)>
   10cb4:	4919      	ldr	r1, [pc, #100]	; (10d1c <newFileHandler(str&, CharDev&, void*)+0xa8>)
   10cb6:	4620      	mov	r0, r4
   10cb8:	f009 fb03 	bl	1a2c2 <CharDev::printf(char const*, ...)>
   10cbc:	6823      	ldr	r3, [r4, #0]
   10cbe:	4620      	mov	r0, r4
   10cc0:	681b      	ldr	r3, [r3, #0]
   10cc2:	f10d 0107 	add.w	r1, sp, #7
   10cc6:	f242 7210 	movw	r2, #10000	; 0x2710
   10cca:	4798      	blx	r3
   10ccc:	b118      	cbz	r0, 10cd6 <newFileHandler(str&, CharDev&, void*)+0x62>
   10cce:	f99d 3007 	ldrsb.w	r3, [sp, #7]
   10cd2:	2b7e      	cmp	r3, #126	; 0x7e
   10cd4:	d103      	bne.n	10cde <newFileHandler(str&, CharDev&, void*)+0x6a>
   10cd6:	a803      	add	r0, sp, #12
   10cd8:	f006 fc52 	bl	17580 <f_close>
   10cdc:	e016      	b.n	10d0c <newFileHandler(str&, CharDev&, void*)+0x98>
   10cde:	a803      	add	r0, sp, #12
   10ce0:	f10d 0107 	add.w	r1, sp, #7
   10ce4:	2201      	movs	r2, #1
   10ce6:	ab02      	add	r3, sp, #8
   10ce8:	f006 fb26 	bl	17338 <f_write>
   10cec:	b910      	cbnz	r0, 10cf4 <newFileHandler(str&, CharDev&, void*)+0x80>
   10cee:	9b02      	ldr	r3, [sp, #8]
   10cf0:	2b01      	cmp	r3, #1
   10cf2:	d002      	beq.n	10cfa <newFileHandler(str&, CharDev&, void*)+0x86>
   10cf4:	4620      	mov	r0, r4
   10cf6:	490a      	ldr	r1, [pc, #40]	; (10d20 <newFileHandler(str&, CharDev&, void*)+0xac>)
   10cf8:	e7de      	b.n	10cb8 <newFileHandler(str&, CharDev&, void*)+0x44>
   10cfa:	6823      	ldr	r3, [r4, #0]
   10cfc:	4620      	mov	r0, r4
   10cfe:	685b      	ldr	r3, [r3, #4]
   10d00:	f99d 1007 	ldrsb.w	r1, [sp, #7]
   10d04:	f04f 32ff 	mov.w	r2, #4294967295
   10d08:	4798      	blx	r3
   10d0a:	e7d7      	b.n	10cbc <newFileHandler(str&, CharDev&, void*)+0x48>
   10d0c:	2001      	movs	r0, #1
   10d0e:	f50d 7d0d 	add.w	sp, sp, #564	; 0x234
   10d12:	bd30      	pop	{r4, r5, pc}
   10d14:	0002459b 	.word	0x0002459b
   10d18:	000245c2 	.word	0x000245c2
   10d1c:	000245fa 	.word	0x000245fa
   10d20:	0002461a 	.word	0x0002461a

00010d24 <dcpHandler(str&, CharDev&, void*)>:
_Z10dcpHandlerR3strR7CharDevPv():
   10d24:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   10d28:	f5ad 7d40 	sub.w	sp, sp, #768	; 0x300
   10d2c:	2300      	movs	r3, #0
   10d2e:	ac04      	add	r4, sp, #16
   10d30:	6023      	str	r3, [r4, #0]
   10d32:	9303      	str	r3, [sp, #12]
   10d34:	460d      	mov	r5, r1
   10d36:	9400      	str	r4, [sp, #0]
   10d38:	4941      	ldr	r1, [pc, #260]	; (10e40 <dcpHandler(str&, CharDev&, void*)+0x11c>)
   10d3a:	2202      	movs	r2, #2
   10d3c:	ab03      	add	r3, sp, #12
   10d3e:	f008 f849 	bl	18dd4 <str::tokenize(char const*, int, ...)>
   10d42:	2802      	cmp	r0, #2
   10d44:	d006      	beq.n	10d54 <dcpHandler(str&, CharDev&, void*)+0x30>
   10d46:	4628      	mov	r0, r5
   10d48:	493e      	ldr	r1, [pc, #248]	; (10e44 <dcpHandler(str&, CharDev&, void*)+0x120>)
   10d4a:	f04f 32ff 	mov.w	r2, #4294967295
   10d4e:	f009 fa81 	bl	1a254 <CharDev::putline(char const*, unsigned int)>
   10d52:	e06f      	b.n	10e34 <dcpHandler(str&, CharDev&, void*)+0x110>
   10d54:	a817      	add	r0, sp, #92	; 0x5c
   10d56:	6821      	ldr	r1, [r4, #0]
   10d58:	f006 fcd1 	bl	176fe <f_opendir>
   10d5c:	b118      	cbz	r0, 10d66 <dcpHandler(str&, CharDev&, void*)+0x42>
   10d5e:	4628      	mov	r0, r5
   10d60:	4939      	ldr	r1, [pc, #228]	; (10e48 <dcpHandler(str&, CharDev&, void*)+0x124>)
   10d62:	6822      	ldr	r2, [r4, #0]
   10d64:	e007      	b.n	10d76 <dcpHandler(str&, CharDev&, void*)+0x52>
   10d66:	a817      	add	r0, sp, #92	; 0x5c
   10d68:	9903      	ldr	r1, [sp, #12]
   10d6a:	f006 fcc8 	bl	176fe <f_opendir>
   10d6e:	b128      	cbz	r0, 10d7c <dcpHandler(str&, CharDev&, void*)+0x58>
   10d70:	4936      	ldr	r1, [pc, #216]	; (10e4c <dcpHandler(str&, CharDev&, void*)+0x128>)
   10d72:	9a03      	ldr	r2, [sp, #12]
   10d74:	4628      	mov	r0, r5
   10d76:	f009 faa4 	bl	1a2c2 <CharDev::printf(char const*, ...)>
   10d7a:	e05b      	b.n	10e34 <dcpHandler(str&, CharDev&, void*)+0x110>
   10d7c:	a940      	add	r1, sp, #256	; 0x100
   10d7e:	f44f 7280 	mov.w	r2, #256	; 0x100
   10d82:	a805      	add	r0, sp, #20
   10d84:	f007 ffe8 	bl	18d58 <str::str(char*, int)>
   10d88:	a80a      	add	r0, sp, #40	; 0x28
   10d8a:	a980      	add	r1, sp, #512	; 0x200
   10d8c:	f44f 7280 	mov.w	r2, #256	; 0x100
   10d90:	f007 ffe2 	bl	18d58 <str::str(char*, int)>
   10d94:	ab20      	add	r3, sp, #128	; 0x80
   10d96:	9315      	str	r3, [sp, #84]	; 0x54
   10d98:	a817      	add	r0, sp, #92	; 0x5c
   10d9a:	2380      	movs	r3, #128	; 0x80
   10d9c:	a90f      	add	r1, sp, #60	; 0x3c
   10d9e:	9316      	str	r3, [sp, #88]	; 0x58
   10da0:	f006 fcec 	bl	1777c <f_readdir>
   10da4:	2800      	cmp	r0, #0
   10da6:	d13f      	bne.n	10e28 <dcpHandler(str&, CharDev&, void*)+0x104>
   10da8:	f99d 3045 	ldrsb.w	r3, [sp, #69]	; 0x45
   10dac:	2b00      	cmp	r3, #0
   10dae:	d03b      	beq.n	10e28 <dcpHandler(str&, CharDev&, void*)+0x104>
   10db0:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
   10db4:	f003 0310 	and.w	r3, r3, #16
   10db8:	f003 06ff 	and.w	r6, r3, #255	; 0xff
   10dbc:	2b00      	cmp	r3, #0
   10dbe:	d1e9      	bne.n	10d94 <dcpHandler(str&, CharDev&, void*)+0x70>
   10dc0:	9a03      	ldr	r2, [sp, #12]
   10dc2:	f10d 0345 	add.w	r3, sp, #69	; 0x45
   10dc6:	a805      	add	r0, sp, #20
   10dc8:	4921      	ldr	r1, [pc, #132]	; (10e50 <dcpHandler(str&, CharDev&, void*)+0x12c>)
   10dca:	f008 f9d8 	bl	1917e <str::printf(char const*, ...)>
   10dce:	6822      	ldr	r2, [r4, #0]
   10dd0:	f10d 0345 	add.w	r3, sp, #69	; 0x45
   10dd4:	491e      	ldr	r1, [pc, #120]	; (10e50 <dcpHandler(str&, CharDev&, void*)+0x12c>)
   10dd6:	a80a      	add	r0, sp, #40	; 0x28
   10dd8:	f008 f9d1 	bl	1917e <str::printf(char const*, ...)>
   10ddc:	a805      	add	r0, sp, #20
   10dde:	f008 f984 	bl	190ea <str::operator()() const>
   10de2:	4681      	mov	r9, r0
   10de4:	a80a      	add	r0, sp, #40	; 0x28
   10de6:	f008 f980 	bl	190ea <str::operator()() const>
   10dea:	4680      	mov	r8, r0
   10dec:	a805      	add	r0, sp, #20
   10dee:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
   10df0:	f008 f97b 	bl	190ea <str::operator()() const>
   10df4:	4682      	mov	sl, r0
   10df6:	a80a      	add	r0, sp, #40	; 0x28
   10df8:	f008 f977 	bl	190ea <str::operator()() const>
   10dfc:	4632      	mov	r2, r6
   10dfe:	4601      	mov	r1, r0
   10e00:	4633      	mov	r3, r6
   10e02:	9600      	str	r6, [sp, #0]
   10e04:	4650      	mov	r0, sl
   10e06:	f004 f8f3 	bl	14ff0 <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)>
   10e0a:	4b12      	ldr	r3, [pc, #72]	; (10e54 <dcpHandler(str&, CharDev&, void*)+0x130>)
   10e0c:	4a12      	ldr	r2, [pc, #72]	; (10e58 <dcpHandler(str&, CharDev&, void*)+0x134>)
   10e0e:	9700      	str	r7, [sp, #0]
   10e10:	2800      	cmp	r0, #0
   10e12:	bf14      	ite	ne
   10e14:	4610      	movne	r0, r2
   10e16:	4618      	moveq	r0, r3
   10e18:	9001      	str	r0, [sp, #4]
   10e1a:	4910      	ldr	r1, [pc, #64]	; (10e5c <dcpHandler(str&, CharDev&, void*)+0x138>)
   10e1c:	4628      	mov	r0, r5
   10e1e:	464a      	mov	r2, r9
   10e20:	4643      	mov	r3, r8
   10e22:	f009 fa4e 	bl	1a2c2 <CharDev::printf(char const*, ...)>
   10e26:	e7b5      	b.n	10d94 <dcpHandler(str&, CharDev&, void*)+0x70>
   10e28:	a80a      	add	r0, sp, #40	; 0x28
   10e2a:	f007 ffaa 	bl	18d82 <str::~str()>
   10e2e:	a805      	add	r0, sp, #20
   10e30:	f007 ffa7 	bl	18d82 <str::~str()>
   10e34:	2001      	movs	r0, #1
   10e36:	f50d 7d40 	add.w	sp, sp, #768	; 0x300
   10e3a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   10e3e:	bf00      	nop
   10e40:	00025932 	.word	0x00025932
   10e44:	00024641 	.word	0x00024641
   10e48:	00024686 	.word	0x00024686
   10e4c:	000246ab 	.word	0x000246ab
   10e50:	000246cb 	.word	0x000246cb
   10e54:	000246f7 	.word	0x000246f7
   10e58:	00024701 	.word	0x00024701
   10e5c:	000246d1 	.word	0x000246d1

00010e60 <storageHandler(str&, CharDev&, void*)>:
_Z14storageHandlerR3strR7CharDevPv():
   10e60:	b570      	push	{r4, r5, r6, lr}
   10e62:	460c      	mov	r4, r1
   10e64:	4921      	ldr	r1, [pc, #132]	; (10eec <storageHandler(str&, CharDev&, void*)+0x8c>)
   10e66:	4605      	mov	r5, r0
   10e68:	f008 f93d 	bl	190e6 <str::operator==(char const*) const>
   10e6c:	4606      	mov	r6, r0
   10e6e:	b128      	cbz	r0, 10e7c <storageHandler(str&, CharDev&, void*)+0x1c>
   10e70:	f7ff fb52 	bl	10518 <Storage::getSDDrive()>
   10e74:	2100      	movs	r1, #0
   10e76:	f200 2035 	addw	r0, r0, #565	; 0x235
   10e7a:	e009      	b.n	10e90 <storageHandler(str&, CharDev&, void*)+0x30>
   10e7c:	4628      	mov	r0, r5
   10e7e:	491c      	ldr	r1, [pc, #112]	; (10ef0 <storageHandler(str&, CharDev&, void*)+0x90>)
   10e80:	f008 f931 	bl	190e6 <str::operator==(char const*) const>
   10e84:	b150      	cbz	r0, 10e9c <storageHandler(str&, CharDev&, void*)+0x3c>
   10e86:	f7ff fb23 	bl	104d0 <Storage::getFlashDrive()>
   10e8a:	4631      	mov	r1, r6
   10e8c:	f200 2035 	addw	r0, r0, #565	; 0x235
   10e90:	460a      	mov	r2, r1
   10e92:	f006 fe9f 	bl	17bd4 <f_mkfs>
   10e96:	4b17      	ldr	r3, [pc, #92]	; (10ef4 <storageHandler(str&, CharDev&, void*)+0x94>)
   10e98:	4917      	ldr	r1, [pc, #92]	; (10ef8 <storageHandler(str&, CharDev&, void*)+0x98>)
   10e9a:	e01c      	b.n	10ed6 <storageHandler(str&, CharDev&, void*)+0x76>
   10e9c:	4628      	mov	r0, r5
   10e9e:	4917      	ldr	r1, [pc, #92]	; (10efc <storageHandler(str&, CharDev&, void*)+0x9c>)
   10ea0:	f008 f921 	bl	190e6 <str::operator==(char const*) const>
   10ea4:	b148      	cbz	r0, 10eba <storageHandler(str&, CharDev&, void*)+0x5a>
   10ea6:	f7ff fb37 	bl	10518 <Storage::getSDDrive()>
   10eaa:	2201      	movs	r2, #1
   10eac:	f200 2135 	addw	r1, r0, #565	; 0x235
   10eb0:	f006 f8b4 	bl	1701c <f_mount>
   10eb4:	4b12      	ldr	r3, [pc, #72]	; (10f00 <storageHandler(str&, CharDev&, void*)+0xa0>)
   10eb6:	4913      	ldr	r1, [pc, #76]	; (10f04 <storageHandler(str&, CharDev&, void*)+0xa4>)
   10eb8:	e00d      	b.n	10ed6 <storageHandler(str&, CharDev&, void*)+0x76>
   10eba:	4628      	mov	r0, r5
   10ebc:	4912      	ldr	r1, [pc, #72]	; (10f08 <storageHandler(str&, CharDev&, void*)+0xa8>)
   10ebe:	f008 f912 	bl	190e6 <str::operator==(char const*) const>
   10ec2:	b188      	cbz	r0, 10ee8 <storageHandler(str&, CharDev&, void*)+0x88>
   10ec4:	f7ff fb04 	bl	104d0 <Storage::getFlashDrive()>
   10ec8:	2201      	movs	r2, #1
   10eca:	f200 2135 	addw	r1, r0, #565	; 0x235
   10ece:	f006 f8a5 	bl	1701c <f_mount>
   10ed2:	4b0e      	ldr	r3, [pc, #56]	; (10f0c <storageHandler(str&, CharDev&, void*)+0xac>)
   10ed4:	490e      	ldr	r1, [pc, #56]	; (10f10 <storageHandler(str&, CharDev&, void*)+0xb0>)
   10ed6:	2800      	cmp	r0, #0
   10ed8:	bf08      	it	eq
   10eda:	4619      	moveq	r1, r3
   10edc:	f04f 32ff 	mov.w	r2, #4294967295
   10ee0:	4620      	mov	r0, r4
   10ee2:	f009 f9b7 	bl	1a254 <CharDev::putline(char const*, unsigned int)>
   10ee6:	2001      	movs	r0, #1
   10ee8:	bd70      	pop	{r4, r5, r6, pc}
   10eea:	bf00      	nop
   10eec:	00024758 	.word	0x00024758
   10ef0:	00024762 	.word	0x00024762
   10ef4:	000246f0 	.word	0x000246f0
   10ef8:	000246fa 	.word	0x000246fa
   10efc:	0002476f 	.word	0x0002476f
   10f00:	00024707 	.word	0x00024707
   10f04:	00024717 	.word	0x00024717
   10f08:	00024778 	.word	0x00024778
   10f0c:	0002472e 	.word	0x0002472e
   10f10:	0002473c 	.word	0x0002473c

00010f14 <rebootHandler(str&, CharDev&, void*)>:
_Z13rebootHandlerR3strR7CharDevPv():
   10f14:	b508      	push	{r3, lr}
   10f16:	4608      	mov	r0, r1
   10f18:	f04f 32ff 	mov.w	r2, #4294967295
   10f1c:	4908      	ldr	r1, [pc, #32]	; (10f40 <rebootHandler(str&, CharDev&, void*)+0x2c>)
   10f1e:	f009 f999 	bl	1a254 <CharDev::putline(char const*, unsigned int)>
   10f22:	f007 fb3b 	bl	1859c <logger_send_flush_request>
   10f26:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
   10f2a:	f00a fadd 	bl	1b4e8 <vTaskDelay>
   10f2e:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
   10f32:	22aa      	movs	r2, #170	; 0xaa
   10f34:	721a      	strb	r2, [r3, #8]
   10f36:	2200      	movs	r2, #0
   10f38:	701a      	strb	r2, [r3, #0]
   10f3a:	2001      	movs	r0, #1
   10f3c:	bd08      	pop	{r3, pc}
   10f3e:	bf00      	nop
   10f40:	000251cb 	.word	0x000251cb

00010f44 <learnIrHandler(str&, CharDev&, void*)>:
_Z14learnIrHandlerR3strR7CharDevPv():
   10f44:	b510      	push	{r4, lr}
   10f46:	2001      	movs	r0, #1
   10f48:	460c      	mov	r4, r1
   10f4a:	f007 fef9 	bl	18d40 <scheduler_task::getSharedObject(unsigned char)>
   10f4e:	b138      	cbz	r0, 10f60 <learnIrHandler(str&, CharDev&, void*)+0x1c>
   10f50:	2100      	movs	r1, #0
   10f52:	460a      	mov	r2, r1
   10f54:	460b      	mov	r3, r1
   10f56:	f009 fe57 	bl	1ac08 <xQueueGenericSend>
   10f5a:	4620      	mov	r0, r4
   10f5c:	4904      	ldr	r1, [pc, #16]	; (10f70 <learnIrHandler(str&, CharDev&, void*)+0x2c>)
   10f5e:	e001      	b.n	10f64 <learnIrHandler(str&, CharDev&, void*)+0x20>
   10f60:	4904      	ldr	r1, [pc, #16]	; (10f74 <learnIrHandler(str&, CharDev&, void*)+0x30>)
   10f62:	4620      	mov	r0, r4
   10f64:	f04f 32ff 	mov.w	r2, #4294967295
   10f68:	f009 f974 	bl	1a254 <CharDev::putline(char const*, unsigned int)>
   10f6c:	2001      	movs	r0, #1
   10f6e:	bd10      	pop	{r4, pc}
   10f70:	00024784 	.word	0x00024784
   10f74:	0002479a 	.word	0x0002479a

00010f78 <SingletonTemplate<I2C2>::getInstance()>:
_ZN17SingletonTemplateI4I2C2E11getInstanceEv():
   10f78:	b538      	push	{r3, r4, r5, lr}
   10f7a:	4c06      	ldr	r4, [pc, #24]	; (10f94 <SingletonTemplate<I2C2>::getInstance()+0x1c>)
   10f7c:	6823      	ldr	r3, [r4, #0]
   10f7e:	b933      	cbnz	r3, 10f8e <SingletonTemplate<I2C2>::getInstance()+0x16>
   10f80:	201c      	movs	r0, #28
   10f82:	f7ff f975 	bl	10270 <operator new(unsigned int)>
   10f86:	4605      	mov	r5, r0
   10f88:	f008 fd8a 	bl	19aa0 <I2C2::I2C2()>
   10f8c:	6025      	str	r5, [r4, #0]
   10f8e:	6820      	ldr	r0, [r4, #0]
   10f90:	bd38      	pop	{r3, r4, r5, pc}
   10f92:	bf00      	nop
   10f94:	2007c1f8 	.word	0x2007c1f8

00010f98 <i2cIoHandler(str&, CharDev&, void*)>:
_Z12i2cIoHandlerR3strR7CharDevPv():
   10f98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10f9c:	460c      	mov	r4, r1
   10f9e:	b0c7      	sub	sp, #284	; 0x11c
   10fa0:	4951      	ldr	r1, [pc, #324]	; (110e8 <i2cIoHandler(str&, CharDev&, void*)+0x150>)
   10fa2:	4680      	mov	r8, r0
   10fa4:	f007 ffc2 	bl	18f2c <str::beginsWithIgnoreCase(char const*) const>
   10fa8:	4950      	ldr	r1, [pc, #320]	; (110ec <i2cIoHandler(str&, CharDev&, void*)+0x154>)
   10faa:	4682      	mov	sl, r0
   10fac:	4640      	mov	r0, r8
   10fae:	f007 ffbd 	bl	18f2c <str::beginsWithIgnoreCase(char const*) const>
   10fb2:	494f      	ldr	r1, [pc, #316]	; (110f0 <i2cIoHandler(str&, CharDev&, void*)+0x158>)
   10fb4:	4683      	mov	fp, r0
   10fb6:	4640      	mov	r0, r8
   10fb8:	f007 ffb8 	bl	18f2c <str::beginsWithIgnoreCase(char const*) const>
   10fbc:	2600      	movs	r6, #0
   10fbe:	af04      	add	r7, sp, #16
   10fc0:	ad05      	add	r5, sp, #20
   10fc2:	4681      	mov	r9, r0
   10fc4:	9602      	str	r6, [sp, #8]
   10fc6:	9603      	str	r6, [sp, #12]
   10fc8:	603e      	str	r6, [r7, #0]
   10fca:	602e      	str	r6, [r5, #0]
   10fcc:	f1ba 0f00 	cmp.w	sl, #0
   10fd0:	d040      	beq.n	11054 <i2cIoHandler(str&, CharDev&, void*)+0xbc>
   10fd2:	9500      	str	r5, [sp, #0]
   10fd4:	4640      	mov	r0, r8
   10fd6:	4947      	ldr	r1, [pc, #284]	; (110f4 <i2cIoHandler(str&, CharDev&, void*)+0x15c>)
   10fd8:	aa02      	add	r2, sp, #8
   10fda:	ab03      	add	r3, sp, #12
   10fdc:	f007 feec 	bl	18db8 <str::scanf(char const*, ...)>
   10fe0:	2801      	cmp	r0, #1
   10fe2:	dc07      	bgt.n	10ff4 <i2cIoHandler(str&, CharDev&, void*)+0x5c>
   10fe4:	4620      	mov	r0, r4
   10fe6:	4944      	ldr	r1, [pc, #272]	; (110f8 <i2cIoHandler(str&, CharDev&, void*)+0x160>)
   10fe8:	f04f 32ff 	mov.w	r2, #4294967295
   10fec:	f009 f932 	bl	1a254 <CharDev::putline(char const*, unsigned int)>
   10ff0:	4630      	mov	r0, r6
   10ff2:	e075      	b.n	110e0 <i2cIoHandler(str&, CharDev&, void*)+0x148>
   10ff4:	682b      	ldr	r3, [r5, #0]
   10ff6:	af06      	add	r7, sp, #24
   10ff8:	2b00      	cmp	r3, #0
   10ffa:	bfd8      	it	le
   10ffc:	2301      	movle	r3, #1
   10ffe:	f04f 0100 	mov.w	r1, #0
   11002:	f44f 7280 	mov.w	r2, #256	; 0x100
   11006:	4638      	mov	r0, r7
   11008:	bfd8      	it	le
   1100a:	602b      	strle	r3, [r5, #0]
   1100c:	f00c ff2f 	bl	1de6e <memset>
   11010:	f7ff ffb2 	bl	10f78 <SingletonTemplate<I2C2>::getInstance()>
   11014:	682b      	ldr	r3, [r5, #0]
   11016:	f99d 1008 	ldrsb.w	r1, [sp, #8]
   1101a:	f99d 200c 	ldrsb.w	r2, [sp, #12]
   1101e:	9300      	str	r3, [sp, #0]
   11020:	463b      	mov	r3, r7
   11022:	f009 fa0e 	bl	1a442 <I2C_Base::readRegisters(char, char, char*, unsigned int)>
   11026:	4a35      	ldr	r2, [pc, #212]	; (110fc <i2cIoHandler(str&, CharDev&, void*)+0x164>)
   11028:	4b35      	ldr	r3, [pc, #212]	; (11100 <i2cIoHandler(str&, CharDev&, void*)+0x168>)
   1102a:	4936      	ldr	r1, [pc, #216]	; (11104 <i2cIoHandler(str&, CharDev&, void*)+0x16c>)
   1102c:	2800      	cmp	r0, #0
   1102e:	bf08      	it	eq
   11030:	4613      	moveq	r3, r2
   11032:	4620      	mov	r0, r4
   11034:	9a02      	ldr	r2, [sp, #8]
   11036:	f009 f944 	bl	1a2c2 <CharDev::printf(char const*, ...)>
   1103a:	2600      	movs	r6, #0
   1103c:	682b      	ldr	r3, [r5, #0]
   1103e:	429e      	cmp	r6, r3
   11040:	da4d      	bge.n	110de <i2cIoHandler(str&, CharDev&, void*)+0x146>
   11042:	9a03      	ldr	r2, [sp, #12]
   11044:	5dbb      	ldrb	r3, [r7, r6]
   11046:	4432      	add	r2, r6
   11048:	4620      	mov	r0, r4
   1104a:	492f      	ldr	r1, [pc, #188]	; (11108 <i2cIoHandler(str&, CharDev&, void*)+0x170>)
   1104c:	f009 f939 	bl	1a2c2 <CharDev::printf(char const*, ...)>
   11050:	3601      	adds	r6, #1
   11052:	e7f3      	b.n	1103c <i2cIoHandler(str&, CharDev&, void*)+0xa4>
   11054:	f1bb 0f00 	cmp.w	fp, #0
   11058:	d02a      	beq.n	110b0 <i2cIoHandler(str&, CharDev&, void*)+0x118>
   1105a:	9700      	str	r7, [sp, #0]
   1105c:	4640      	mov	r0, r8
   1105e:	492b      	ldr	r1, [pc, #172]	; (1110c <i2cIoHandler(str&, CharDev&, void*)+0x174>)
   11060:	aa02      	add	r2, sp, #8
   11062:	ab03      	add	r3, sp, #12
   11064:	f007 fea8 	bl	18db8 <str::scanf(char const*, ...)>
   11068:	2803      	cmp	r0, #3
   1106a:	d007      	beq.n	1107c <i2cIoHandler(str&, CharDev&, void*)+0xe4>
   1106c:	4620      	mov	r0, r4
   1106e:	4928      	ldr	r1, [pc, #160]	; (11110 <i2cIoHandler(str&, CharDev&, void*)+0x178>)
   11070:	f04f 32ff 	mov.w	r2, #4294967295
   11074:	f009 f8ee 	bl	1a254 <CharDev::putline(char const*, unsigned int)>
   11078:	4650      	mov	r0, sl
   1107a:	e031      	b.n	110e0 <i2cIoHandler(str&, CharDev&, void*)+0x148>
   1107c:	f7ff ff7c 	bl	10f78 <SingletonTemplate<I2C2>::getInstance()>
   11080:	f99d 1008 	ldrsb.w	r1, [sp, #8]
   11084:	f99d 200c 	ldrsb.w	r2, [sp, #12]
   11088:	f997 3000 	ldrsb.w	r3, [r7]
   1108c:	f009 f9ee 	bl	1a46c <I2C_Base::writeReg(char, char, char)>
   11090:	b140      	cbz	r0, 110a4 <i2cIoHandler(str&, CharDev&, void*)+0x10c>
   11092:	9b03      	ldr	r3, [sp, #12]
   11094:	4620      	mov	r0, r4
   11096:	9300      	str	r3, [sp, #0]
   11098:	491e      	ldr	r1, [pc, #120]	; (11114 <i2cIoHandler(str&, CharDev&, void*)+0x17c>)
   1109a:	683a      	ldr	r2, [r7, #0]
   1109c:	9b02      	ldr	r3, [sp, #8]
   1109e:	f009 f910 	bl	1a2c2 <CharDev::printf(char const*, ...)>
   110a2:	e01c      	b.n	110de <i2cIoHandler(str&, CharDev&, void*)+0x146>
   110a4:	4620      	mov	r0, r4
   110a6:	491c      	ldr	r1, [pc, #112]	; (11118 <i2cIoHandler(str&, CharDev&, void*)+0x180>)
   110a8:	9a02      	ldr	r2, [sp, #8]
   110aa:	f009 f90a 	bl	1a2c2 <CharDev::printf(char const*, ...)>
   110ae:	e016      	b.n	110de <i2cIoHandler(str&, CharDev&, void*)+0x146>
   110b0:	b198      	cbz	r0, 110da <i2cIoHandler(str&, CharDev&, void*)+0x142>
   110b2:	2302      	movs	r3, #2
   110b4:	9302      	str	r3, [sp, #8]
   110b6:	9b02      	ldr	r3, [sp, #8]
   110b8:	2bfe      	cmp	r3, #254	; 0xfe
   110ba:	dc0e      	bgt.n	110da <i2cIoHandler(str&, CharDev&, void*)+0x142>
   110bc:	f7ff ff5c 	bl	10f78 <SingletonTemplate<I2C2>::getInstance()>
   110c0:	f99d 1008 	ldrsb.w	r1, [sp, #8]
   110c4:	f009 f9dd 	bl	1a482 <I2C_Base::checkDeviceResponse(char)>
   110c8:	b120      	cbz	r0, 110d4 <i2cIoHandler(str&, CharDev&, void*)+0x13c>
   110ca:	4620      	mov	r0, r4
   110cc:	4913      	ldr	r1, [pc, #76]	; (1111c <i2cIoHandler(str&, CharDev&, void*)+0x184>)
   110ce:	9a02      	ldr	r2, [sp, #8]
   110d0:	f009 f8f7 	bl	1a2c2 <CharDev::printf(char const*, ...)>
   110d4:	9b02      	ldr	r3, [sp, #8]
   110d6:	3302      	adds	r3, #2
   110d8:	e7ec      	b.n	110b4 <i2cIoHandler(str&, CharDev&, void*)+0x11c>
   110da:	4648      	mov	r0, r9
   110dc:	e000      	b.n	110e0 <i2cIoHandler(str&, CharDev&, void*)+0x148>
   110de:	2001      	movs	r0, #1
   110e0:	b047      	add	sp, #284	; 0x11c
   110e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   110e6:	bf00      	nop
   110e8:	00025a55 	.word	0x00025a55
   110ec:	000247b4 	.word	0x000247b4
   110f0:	000247ba 	.word	0x000247ba
   110f4:	000247c3 	.word	0x000247c3
   110f8:	000247d2 	.word	0x000247d2
   110fc:	00024701 	.word	0x00024701
   11100:	000246f7 	.word	0x000246f7
   11104:	000247f3 	.word	0x000247f3
   11108:	00024819 	.word	0x00024819
   1110c:	0002482d 	.word	0x0002482d
   11110:	0002483d 	.word	0x0002483d
   11114:	00024864 	.word	0x00024864
   11118:	00024884 	.word	0x00024884
   1111c:	000248a1 	.word	0x000248a1

00011120 <healthHandler(str&, CharDev&, void*)>:
_Z13healthHandlerR3strR7CharDevPv():
   11120:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11124:	4c5f      	ldr	r4, [pc, #380]	; (112a4 <healthHandler(str&, CharDev&, void*)+0x184>)
   11126:	b091      	sub	sp, #68	; 0x44
   11128:	6823      	ldr	r3, [r4, #0]
   1112a:	460e      	mov	r6, r1
   1112c:	b933      	cbnz	r3, 1113c <healthHandler(str&, CharDev&, void*)+0x1c>
   1112e:	202c      	movs	r0, #44	; 0x2c
   11130:	f7ff f89e 	bl	10270 <operator new(unsigned int)>
   11134:	4605      	mov	r5, r0
   11136:	f008 ffd9 	bl	1a0ec <Uart0::Uart0()>
   1113a:	6025      	str	r5, [r4, #0]
   1113c:	f8d4 8000 	ldr.w	r8, [r4]
   11140:	f7ff f9c6 	bl	104d0 <Storage::getFlashDrive()>
   11144:	ac10      	add	r4, sp, #64	; 0x40
   11146:	2500      	movs	r5, #0
   11148:	f844 5d0c 	str.w	r5, [r4, #-12]!
   1114c:	f200 2035 	addw	r0, r0, #565	; 0x235
   11150:	4621      	mov	r1, r4
   11152:	aa0c      	add	r2, sp, #48	; 0x30
   11154:	f006 fb41 	bl	177da <f_getfree>
   11158:	b948      	cbnz	r0, 1116e <healthHandler(str&, CharDev&, void*)+0x4e>
   1115a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   1115c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
   1115e:	6997      	ldr	r7, [r2, #24]
   11160:	7893      	ldrb	r3, [r2, #2]
   11162:	3f02      	subs	r7, #2
   11164:	435d      	muls	r5, r3
   11166:	435f      	muls	r7, r3
   11168:	086d      	lsrs	r5, r5, #1
   1116a:	087f      	lsrs	r7, r7, #1
   1116c:	e000      	b.n	11170 <healthHandler(str&, CharDev&, void*)+0x50>
   1116e:	462f      	mov	r7, r5
   11170:	4b4d      	ldr	r3, [pc, #308]	; (112a8 <healthHandler(str&, CharDev&, void*)+0x188>)
   11172:	681a      	ldr	r2, [r3, #0]
   11174:	469a      	mov	sl, r3
   11176:	b97a      	cbnz	r2, 11198 <healthHandler(str&, CharDev&, void*)+0x78>
   11178:	200c      	movs	r0, #12
   1117a:	f7ff f879 	bl	10270 <operator new(unsigned int)>
   1117e:	4681      	mov	r9, r0
   11180:	f7ff fefa 	bl	10f78 <SingletonTemplate<I2C2>::getInstance()>
   11184:	2390      	movs	r3, #144	; 0x90
   11186:	f889 3004 	strb.w	r3, [r9, #4]
   1118a:	2300      	movs	r3, #0
   1118c:	f8c9 0000 	str.w	r0, [r9]
   11190:	f8c9 3008 	str.w	r3, [r9, #8]
   11194:	f8ca 9000 	str.w	r9, [sl]
   11198:	f8da 0000 	ldr.w	r0, [sl]
   1119c:	f003 ff16 	bl	14fcc <I2C_Temp::getFarenheit()>
   111a0:	4681      	mov	r9, r0
   111a2:	f00c f9a7 	bl	1d4f4 <__aeabi_f2iz>
   111a6:	4683      	mov	fp, r0
   111a8:	f00b ff8a 	bl	1d0c0 <__aeabi_i2f>
   111ac:	4601      	mov	r1, r0
   111ae:	4648      	mov	r0, r9
   111b0:	f00b fed0 	bl	1cf54 <__aeabi_fsub>
   111b4:	493d      	ldr	r1, [pc, #244]	; (112ac <healthHandler(str&, CharDev&, void*)+0x18c>)
   111b6:	f00b ffd7 	bl	1d168 <__aeabi_fmul>
   111ba:	f00c f99b 	bl	1d4f4 <__aeabi_f2iz>
   111be:	900b      	str	r0, [sp, #44]	; 0x2c
   111c0:	4620      	mov	r0, r4
   111c2:	f00a fd65 	bl	1bc90 <sys_get_boot_time>
   111c6:	f004 fe8b 	bl	15ee0 <flash_supports_metadata>
   111ca:	b340      	cbz	r0, 1121e <healthHandler(str&, CharDev&, void*)+0xfe>
   111cc:	f008 ff1c 	bl	1a008 <spi1_lock>
   111d0:	f004 fe70 	bl	15eb4 <flash_get_page_count>
   111d4:	2400      	movs	r4, #0
   111d6:	4601      	mov	r1, r0
   111d8:	46a1      	mov	r9, r4
   111da:	46a2      	mov	sl, r4
   111dc:	428c      	cmp	r4, r1
   111de:	d00b      	beq.n	111f8 <healthHandler(str&, CharDev&, void*)+0xd8>
   111e0:	4620      	mov	r0, r4
   111e2:	910a      	str	r1, [sp, #40]	; 0x28
   111e4:	f004 feca 	bl	15f7c <flash_get_page_write_count>
   111e8:	4550      	cmp	r0, sl
   111ea:	bf94      	ite	ls
   111ec:	4650      	movls	r0, sl
   111ee:	46a1      	movhi	r9, r4
   111f0:	990a      	ldr	r1, [sp, #40]	; 0x28
   111f2:	3401      	adds	r4, #1
   111f4:	4682      	mov	sl, r0
   111f6:	e7f1      	b.n	111dc <healthHandler(str&, CharDev&, void*)+0xbc>
   111f8:	f008 ff1e 	bl	1a038 <spi1_unlock>
   111fc:	2264      	movs	r2, #100	; 0x64
   111fe:	fb02 f20a 	mul.w	r2, r2, sl
   11202:	492b      	ldr	r1, [pc, #172]	; (112b0 <healthHandler(str&, CharDev&, void*)+0x190>)
   11204:	4630      	mov	r0, r6
   11206:	fbb2 f2f1 	udiv	r2, r2, r1
   1120a:	f1c2 0264 	rsb	r2, r2, #100	; 0x64
   1120e:	e88d 0604 	stmia.w	sp, {r2, r9, sl}
   11212:	4928      	ldr	r1, [pc, #160]	; (112b4 <healthHandler(str&, CharDev&, void*)+0x194>)
   11214:	462a      	mov	r2, r5
   11216:	463b      	mov	r3, r7
   11218:	f009 f853 	bl	1a2c2 <CharDev::printf(char const*, ...)>
   1121c:	e005      	b.n	1122a <healthHandler(str&, CharDev&, void*)+0x10a>
   1121e:	4630      	mov	r0, r6
   11220:	4925      	ldr	r1, [pc, #148]	; (112b8 <healthHandler(str&, CharDev&, void*)+0x198>)
   11222:	462a      	mov	r2, r5
   11224:	463b      	mov	r3, r7
   11226:	f009 f84c 	bl	1a2c2 <CharDev::printf(char const*, ...)>
   1122a:	4c24      	ldr	r4, [pc, #144]	; (112bc <healthHandler(str&, CharDev&, void*)+0x19c>)
   1122c:	6823      	ldr	r3, [r4, #0]
   1122e:	b91b      	cbnz	r3, 11238 <healthHandler(str&, CharDev&, void*)+0x118>
   11230:	2001      	movs	r0, #1
   11232:	f7ff f81d 	bl	10270 <operator new(unsigned int)>
   11236:	6020      	str	r0, [r4, #0]
   11238:	6820      	ldr	r0, [r4, #0]
   1123a:	f003 fe8a 	bl	14f52 <Light_Sensor::getRawValue()>
   1123e:	4604      	mov	r4, r0
   11240:	f008 fe68 	bl	19f14 <rtc_get_date_time_str>
   11244:	f89d 3039 	ldrb.w	r3, [sp, #57]	; 0x39
   11248:	9001      	str	r0, [sp, #4]
   1124a:	f003 030f 	and.w	r3, r3, #15
   1124e:	9302      	str	r3, [sp, #8]
   11250:	f89d 3038 	ldrb.w	r3, [sp, #56]	; 0x38
   11254:	9400      	str	r4, [sp, #0]
   11256:	f003 031f 	and.w	r3, r3, #31
   1125a:	9303      	str	r3, [sp, #12]
   1125c:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
   11260:	4630      	mov	r0, r6
   11262:	f3c3 030b 	ubfx	r3, r3, #0, #12
   11266:	9304      	str	r3, [sp, #16]
   11268:	f89d 3036 	ldrb.w	r3, [sp, #54]	; 0x36
   1126c:	4914      	ldr	r1, [pc, #80]	; (112c0 <healthHandler(str&, CharDev&, void*)+0x1a0>)
   1126e:	f003 031f 	and.w	r3, r3, #31
   11272:	9305      	str	r3, [sp, #20]
   11274:	f89d 3035 	ldrb.w	r3, [sp, #53]	; 0x35
   11278:	465a      	mov	r2, fp
   1127a:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   1127e:	9306      	str	r3, [sp, #24]
   11280:	f89d 3034 	ldrb.w	r3, [sp, #52]	; 0x34
   11284:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   11288:	9307      	str	r3, [sp, #28]
   1128a:	f8b8 3024 	ldrh.w	r3, [r8, #36]	; 0x24
   1128e:	9308      	str	r3, [sp, #32]
   11290:	f8b8 3026 	ldrh.w	r3, [r8, #38]	; 0x26
   11294:	9309      	str	r3, [sp, #36]	; 0x24
   11296:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   11298:	f009 f813 	bl	1a2c2 <CharDev::printf(char const*, ...)>
   1129c:	2001      	movs	r0, #1
   1129e:	b011      	add	sp, #68	; 0x44
   112a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   112a4:	2007c1fc 	.word	0x2007c1fc
   112a8:	2007c1f0 	.word	0x2007c1f0
   112ac:	41200000 	.word	0x41200000
   112b0:	000186a0 	.word	0x000186a0
   112b4:	000248c1 	.word	0x000248c1
   112b8:	000248f5 	.word	0x000248f5
   112bc:	2007c1f4 	.word	0x2007c1f4
   112c0:	00024903 	.word	0x00024903

000112c4 <flashProgHandler(str&, CharDev&, void*)>:
_Z16flashProgHandlerR3strR7CharDevPv():
   112c4:	b570      	push	{r4, r5, r6, lr}
   112c6:	f5ad 7d0a 	sub.w	sp, sp, #552	; 0x228
   112ca:	4605      	mov	r5, r0
   112cc:	460c      	mov	r4, r1
   112ce:	f007 fd6a 	bl	18da6 <str::getLen() const>
   112d2:	280b      	cmp	r0, #11
   112d4:	dd03      	ble.n	112de <flashProgHandler(str&, CharDev&, void*)+0x1a>
   112d6:	4620      	mov	r0, r4
   112d8:	4920      	ldr	r1, [pc, #128]	; (1135c <flashProgHandler(str&, CharDev&, void*)+0x98>)
   112da:	220c      	movs	r2, #12
   112dc:	e037      	b.n	1134e <flashProgHandler(str&, CharDev&, void*)+0x8a>
   112de:	4628      	mov	r0, r5
   112e0:	f007 ff03 	bl	190ea <str::operator()() const>
   112e4:	2201      	movs	r2, #1
   112e6:	4601      	mov	r1, r0
   112e8:	a801      	add	r0, sp, #4
   112ea:	f005 fed5 	bl	17098 <f_open>
   112ee:	4606      	mov	r6, r0
   112f0:	bb38      	cbnz	r0, 11342 <flashProgHandler(str&, CharDev&, void*)+0x7e>
   112f2:	a801      	add	r0, sp, #4
   112f4:	f006 f944 	bl	17580 <f_close>
   112f8:	4628      	mov	r0, r5
   112fa:	f007 fef6 	bl	190ea <str::operator()() const>
   112fe:	4918      	ldr	r1, [pc, #96]	; (11360 <flashProgHandler(str&, CharDev&, void*)+0x9c>)
   11300:	4602      	mov	r2, r0
   11302:	9b04      	ldr	r3, [sp, #16]
   11304:	4620      	mov	r0, r4
   11306:	f008 ffdc 	bl	1a2c2 <CharDev::printf(char const*, ...)>
   1130a:	6823      	ldr	r3, [r4, #0]
   1130c:	4620      	mov	r0, r4
   1130e:	689b      	ldr	r3, [r3, #8]
   11310:	4798      	blx	r3
   11312:	200a      	movs	r0, #10
   11314:	f00a f8e8 	bl	1b4e8 <vTaskDelay>
   11318:	f00a fbca 	bl	1bab0 <ulPortSetInterruptMask>
   1131c:	4628      	mov	r0, r5
   1131e:	f007 fee4 	bl	190ea <str::operator()() const>
   11322:	4602      	mov	r2, r0
   11324:	6851      	ldr	r1, [r2, #4]
   11326:	6800      	ldr	r0, [r0, #0]
   11328:	4b0e      	ldr	r3, [pc, #56]	; (11364 <flashProgHandler(str&, CharDev&, void*)+0xa0>)
   1132a:	c303      	stmia	r3!, {r0, r1}
   1132c:	6890      	ldr	r0, [r2, #8]
   1132e:	4a0e      	ldr	r2, [pc, #56]	; (11368 <flashProgHandler(str&, CharDev&, void*)+0xa4>)
   11330:	6018      	str	r0, [r3, #0]
   11332:	f843 2c0c 	str.w	r2, [r3, #-12]
   11336:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
   1133a:	22aa      	movs	r2, #170	; 0xaa
   1133c:	721a      	strb	r2, [r3, #8]
   1133e:	701e      	strb	r6, [r3, #0]
   11340:	e007      	b.n	11352 <flashProgHandler(str&, CharDev&, void*)+0x8e>
   11342:	4628      	mov	r0, r5
   11344:	f007 fed1 	bl	190ea <str::operator()() const>
   11348:	4908      	ldr	r1, [pc, #32]	; (1136c <flashProgHandler(str&, CharDev&, void*)+0xa8>)
   1134a:	4602      	mov	r2, r0
   1134c:	4620      	mov	r0, r4
   1134e:	f008 ffb8 	bl	1a2c2 <CharDev::printf(char const*, ...)>
   11352:	2001      	movs	r0, #1
   11354:	f50d 7d0a 	add.w	sp, sp, #552	; 0x228
   11358:	bd70      	pop	{r4, r5, r6, pc}
   1135a:	bf00      	nop
   1135c:	00024984 	.word	0x00024984
   11360:	000249ab 	.word	0x000249ab
   11364:	40024048 	.word	0x40024048
   11368:	deadd00d 	.word	0xdeadd00d
   1136c:	000249f2 	.word	0x000249f2

00011370 <getFileHandler(str&, CharDev&, void*)>:
_Z14getFileHandlerR3strR7CharDevPv():
   11370:	b570      	push	{r4, r5, r6, lr}
   11372:	4e40      	ldr	r6, [pc, #256]	; (11474 <getFileHandler(str&, CharDev&, void*)+0x104>)
   11374:	b0a4      	sub	sp, #144	; 0x90
   11376:	6833      	ldr	r3, [r6, #0]
   11378:	4605      	mov	r5, r0
   1137a:	07db      	lsls	r3, r3, #31
   1137c:	460c      	mov	r4, r1
   1137e:	d40c      	bmi.n	1139a <getFileHandler(str&, CharDev&, void*)+0x2a>
   11380:	4630      	mov	r0, r6
   11382:	f00b fa73 	bl	1c86c <__cxa_guard_acquire>
   11386:	b140      	cbz	r0, 1139a <getFileHandler(str&, CharDev&, void*)+0x2a>
   11388:	f44f 6080 	mov.w	r0, #1024	; 0x400
   1138c:	f00c fd1e 	bl	1ddcc <malloc>
   11390:	4b39      	ldr	r3, [pc, #228]	; (11478 <getFileHandler(str&, CharDev&, void*)+0x108>)
   11392:	6018      	str	r0, [r3, #0]
   11394:	4630      	mov	r0, r6
   11396:	f00b fa77 	bl	1c888 <__cxa_guard_release>
   1139a:	4628      	mov	r0, r5
   1139c:	4937      	ldr	r1, [pc, #220]	; (1147c <getFileHandler(str&, CharDev&, void*)+0x10c>)
   1139e:	f007 fdc5 	bl	18f2c <str::beginsWithIgnoreCase(char const*) const>
   113a2:	4606      	mov	r6, r0
   113a4:	b320      	cbz	r0, 113f0 <getFileHandler(str&, CharDev&, void*)+0x80>
   113a6:	2100      	movs	r1, #0
   113a8:	2280      	movs	r2, #128	; 0x80
   113aa:	a804      	add	r0, sp, #16
   113ac:	f00c fd5f 	bl	1de6e <memset>
   113b0:	2300      	movs	r3, #0
   113b2:	9302      	str	r3, [sp, #8]
   113b4:	9303      	str	r3, [sp, #12]
   113b6:	ab03      	add	r3, sp, #12
   113b8:	9300      	str	r3, [sp, #0]
   113ba:	4931      	ldr	r1, [pc, #196]	; (11480 <getFileHandler(str&, CharDev&, void*)+0x110>)
   113bc:	aa04      	add	r2, sp, #16
   113be:	ab02      	add	r3, sp, #8
   113c0:	4628      	mov	r0, r5
   113c2:	f007 fcf9 	bl	18db8 <str::scanf(char const*, ...)>
   113c6:	4a2c      	ldr	r2, [pc, #176]	; (11478 <getFileHandler(str&, CharDev&, void*)+0x108>)
   113c8:	9b02      	ldr	r3, [sp, #8]
   113ca:	6811      	ldr	r1, [r2, #0]
   113cc:	a804      	add	r0, sp, #16
   113ce:	9a03      	ldr	r2, [sp, #12]
   113d0:	b913      	cbnz	r3, 113d8 <getFileHandler(str&, CharDev&, void*)+0x68>
   113d2:	f003 feae 	bl	15132 <Storage::write(char const*, void*, unsigned int, unsigned int)>
   113d6:	e001      	b.n	113dc <getFileHandler(str&, CharDev&, void*)+0x6c>
   113d8:	f003 fece 	bl	15178 <Storage::append(char const*, void*, unsigned int, unsigned int)>
   113dc:	4a29      	ldr	r2, [pc, #164]	; (11484 <getFileHandler(str&, CharDev&, void*)+0x114>)
   113de:	492a      	ldr	r1, [pc, #168]	; (11488 <getFileHandler(str&, CharDev&, void*)+0x118>)
   113e0:	4603      	mov	r3, r0
   113e2:	2b00      	cmp	r3, #0
   113e4:	bf08      	it	eq
   113e6:	4611      	moveq	r1, r2
   113e8:	4620      	mov	r0, r4
   113ea:	f008 ff6a 	bl	1a2c2 <CharDev::printf(char const*, ...)>
   113ee:	e03d      	b.n	1146c <getFileHandler(str&, CharDev&, void*)+0xfc>
   113f0:	4628      	mov	r0, r5
   113f2:	4926      	ldr	r1, [pc, #152]	; (1148c <getFileHandler(str&, CharDev&, void*)+0x11c>)
   113f4:	f007 fd9a 	bl	18f2c <str::beginsWithIgnoreCase(char const*) const>
   113f8:	2800      	cmp	r0, #0
   113fa:	d038      	beq.n	1146e <getFileHandler(str&, CharDev&, void*)+0xfe>
   113fc:	4628      	mov	r0, r5
   113fe:	ab04      	add	r3, sp, #16
   11400:	4923      	ldr	r1, [pc, #140]	; (11490 <getFileHandler(str&, CharDev&, void*)+0x120>)
   11402:	aa03      	add	r2, sp, #12
   11404:	9603      	str	r6, [sp, #12]
   11406:	9604      	str	r6, [sp, #16]
   11408:	f88d 6008 	strb.w	r6, [sp, #8]
   1140c:	f007 fcd4 	bl	18db8 <str::scanf(char const*, ...)>
   11410:	9d03      	ldr	r5, [sp, #12]
   11412:	9b04      	ldr	r3, [sp, #16]
   11414:	442b      	add	r3, r5
   11416:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
   1141a:	dd0d      	ble.n	11438 <getFileHandler(str&, CharDev&, void*)+0xc8>
   1141c:	4620      	mov	r0, r4
   1141e:	491d      	ldr	r1, [pc, #116]	; (11494 <getFileHandler(str&, CharDev&, void*)+0x124>)
   11420:	f44f 6280 	mov.w	r2, #1024	; 0x400
   11424:	e010      	b.n	11448 <getFileHandler(str&, CharDev&, void*)+0xd8>
   11426:	4b14      	ldr	r3, [pc, #80]	; (11478 <getFileHandler(str&, CharDev&, void*)+0x108>)
   11428:	f89d 2008 	ldrb.w	r2, [sp, #8]
   1142c:	681b      	ldr	r3, [r3, #0]
   1142e:	555a      	strb	r2, [r3, r5]
   11430:	f99d 3008 	ldrsb.w	r3, [sp, #8]
   11434:	3501      	adds	r5, #1
   11436:	441e      	add	r6, r3
   11438:	9b03      	ldr	r3, [sp, #12]
   1143a:	1aea      	subs	r2, r5, r3
   1143c:	9b04      	ldr	r3, [sp, #16]
   1143e:	429a      	cmp	r2, r3
   11440:	db05      	blt.n	1144e <getFileHandler(str&, CharDev&, void*)+0xde>
   11442:	4915      	ldr	r1, [pc, #84]	; (11498 <getFileHandler(str&, CharDev&, void*)+0x128>)
   11444:	4620      	mov	r0, r4
   11446:	4632      	mov	r2, r6
   11448:	f008 ff3b 	bl	1a2c2 <CharDev::printf(char const*, ...)>
   1144c:	e00e      	b.n	1146c <getFileHandler(str&, CharDev&, void*)+0xfc>
   1144e:	f5b5 6f80 	cmp.w	r5, #1024	; 0x400
   11452:	daf6      	bge.n	11442 <getFileHandler(str&, CharDev&, void*)+0xd2>
   11454:	6823      	ldr	r3, [r4, #0]
   11456:	4620      	mov	r0, r4
   11458:	681b      	ldr	r3, [r3, #0]
   1145a:	a902      	add	r1, sp, #8
   1145c:	f44f 62fa 	mov.w	r2, #2000	; 0x7d0
   11460:	4798      	blx	r3
   11462:	2800      	cmp	r0, #0
   11464:	d1df      	bne.n	11426 <getFileHandler(str&, CharDev&, void*)+0xb6>
   11466:	4620      	mov	r0, r4
   11468:	490c      	ldr	r1, [pc, #48]	; (1149c <getFileHandler(str&, CharDev&, void*)+0x12c>)
   1146a:	e7be      	b.n	113ea <getFileHandler(str&, CharDev&, void*)+0x7a>
   1146c:	2001      	movs	r0, #1
   1146e:	b024      	add	sp, #144	; 0x90
   11470:	bd70      	pop	{r4, r5, r6, pc}
   11472:	bf00      	nop
   11474:	2007c20c 	.word	0x2007c20c
   11478:	2007c208 	.word	0x2007c208
   1147c:	00024a1d 	.word	0x00024a1d
   11480:	00024a24 	.word	0x00024a24
   11484:	00024a07 	.word	0x00024a07
   11488:	00024a0b 	.word	0x00024a0b
   1148c:	00024a34 	.word	0x00024a34
   11490:	00024a3b 	.word	0x00024a3b
   11494:	00024a45 	.word	0x00024a45
   11498:	00024a79 	.word	0x00024a79
   1149c:	00024a69 	.word	0x00024a69

000114a0 <wirelessHandlerPrintStats(CharDev&, mesh_stats_t*, unsigned char)>:
_ZL25wirelessHandlerPrintStatsR7CharDevP12mesh_stats_th():
   114a0:	b530      	push	{r4, r5, lr}
   114a2:	460c      	mov	r4, r1
   114a4:	b087      	sub	sp, #28
   114a6:	490b      	ldr	r1, [pc, #44]	; (114d4 <wirelessHandlerPrintStats(CharDev&, mesh_stats_t*, unsigned char)+0x34>)
   114a8:	4605      	mov	r5, r0
   114aa:	f008 ff0a 	bl	1a2c2 <CharDev::printf(char const*, ...)>
   114ae:	7aa1      	ldrb	r1, [r4, #10]
   114b0:	8862      	ldrh	r2, [r4, #2]
   114b2:	9100      	str	r1, [sp, #0]
   114b4:	7ae1      	ldrb	r1, [r4, #11]
   114b6:	8823      	ldrh	r3, [r4, #0]
   114b8:	9101      	str	r1, [sp, #4]
   114ba:	88e1      	ldrh	r1, [r4, #6]
   114bc:	4628      	mov	r0, r5
   114be:	9102      	str	r1, [sp, #8]
   114c0:	8921      	ldrh	r1, [r4, #8]
   114c2:	9103      	str	r1, [sp, #12]
   114c4:	88a1      	ldrh	r1, [r4, #4]
   114c6:	9104      	str	r1, [sp, #16]
   114c8:	4903      	ldr	r1, [pc, #12]	; (114d8 <wirelessHandlerPrintStats(CharDev&, mesh_stats_t*, unsigned char)+0x38>)
   114ca:	f008 fefa 	bl	1a2c2 <CharDev::printf(char const*, ...)>
   114ce:	b007      	add	sp, #28
   114d0:	bd30      	pop	{r4, r5, pc}
   114d2:	bf00      	nop
   114d4:	00024a8a 	.word	0x00024a8a
   114d8:	00024ac0 	.word	0x00024ac0

000114dc <wsStatsHandler(str&, CharDev&, void*)>:
_ZL14wsStatsHandlerR3strR7CharDevPv():
   114dc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
   114de:	a801      	add	r0, sp, #4
   114e0:	460c      	mov	r4, r1
   114e2:	f003 f83d 	bl	14560 <mesh_get_stats>
   114e6:	f002 fd31 	bl	13f4c <mesh_get_node_address>
   114ea:	a901      	add	r1, sp, #4
   114ec:	4602      	mov	r2, r0
   114ee:	4620      	mov	r0, r4
   114f0:	f7ff ffd6 	bl	114a0 <wirelessHandlerPrintStats(CharDev&, mesh_stats_t*, unsigned char)>
   114f4:	2001      	movs	r0, #1
   114f6:	b004      	add	sp, #16
   114f8:	bd10      	pop	{r4, pc}
	...

000114fc <wsTxHandler(str&, CharDev&, void*)>:
_ZL11wsTxHandlerR3strR7CharDevPv():
   114fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   11500:	b08c      	sub	sp, #48	; 0x30
   11502:	ab03      	add	r3, sp, #12
   11504:	2500      	movs	r5, #0
   11506:	9300      	str	r3, [sp, #0]
   11508:	460c      	mov	r4, r1
   1150a:	4690      	mov	r8, r2
   1150c:	493a      	ldr	r1, [pc, #232]	; (115f8 <wsTxHandler(str&, CharDev&, void*)+0xfc>)
   1150e:	2202      	movs	r2, #2
   11510:	ab02      	add	r3, sp, #8
   11512:	9502      	str	r5, [sp, #8]
   11514:	9503      	str	r5, [sp, #12]
   11516:	f007 fc5d 	bl	18dd4 <str::tokenize(char const*, int, ...)>
   1151a:	42a8      	cmp	r0, r5
   1151c:	dd68      	ble.n	115f0 <wsTxHandler(str&, CharDev&, void*)+0xf4>
   1151e:	9802      	ldr	r0, [sp, #8]
   11520:	f00c fb15 	bl	1db4e <atoi>
   11524:	b2c7      	uxtb	r7, r0
   11526:	9803      	ldr	r0, [sp, #12]
   11528:	b118      	cbz	r0, 11532 <wsTxHandler(str&, CharDev&, void*)+0x36>
   1152a:	f00d fccd 	bl	1eec8 <strlen>
   1152e:	b2c6      	uxtb	r6, r0
   11530:	e000      	b.n	11534 <wsTxHandler(str&, CharDev&, void*)+0x38>
   11532:	4606      	mov	r6, r0
   11534:	a804      	add	r0, sp, #16
   11536:	2100      	movs	r1, #0
   11538:	f003 fbac 	bl	14c94 <wireless_get_rx_pkt>
   1153c:	b130      	cbz	r0, 1154c <wsTxHandler(str&, CharDev&, void*)+0x50>
   1153e:	4620      	mov	r0, r4
   11540:	492e      	ldr	r1, [pc, #184]	; (115fc <wsTxHandler(str&, CharDev&, void*)+0x100>)
   11542:	f04f 32ff 	mov.w	r2, #4294967295
   11546:	f008 fe85 	bl	1a254 <CharDev::putline(char const*, unsigned int)>
   1154a:	e7f3      	b.n	11534 <wsTxHandler(str&, CharDev&, void*)+0x38>
   1154c:	f118 0800 	adds.w	r8, r8, #0
   11550:	bf18      	it	ne
   11552:	f04f 0801 	movne.w	r8, #1
   11556:	2302      	movs	r3, #2
   11558:	9300      	str	r3, [sp, #0]
   1155a:	4638      	mov	r0, r7
   1155c:	4641      	mov	r1, r8
   1155e:	9a03      	ldr	r2, [sp, #12]
   11560:	4633      	mov	r3, r6
   11562:	f002 fe27 	bl	141b4 <mesh_send>
   11566:	4605      	mov	r5, r0
   11568:	b938      	cbnz	r0, 1157a <wsTxHandler(str&, CharDev&, void*)+0x7e>
   1156a:	4620      	mov	r0, r4
   1156c:	4924      	ldr	r1, [pc, #144]	; (11600 <wsTxHandler(str&, CharDev&, void*)+0x104>)
   1156e:	f04f 32ff 	mov.w	r2, #4294967295
   11572:	f008 fe6f 	bl	1a254 <CharDev::putline(char const*, unsigned int)>
   11576:	2501      	movs	r5, #1
   11578:	e03a      	b.n	115f0 <wsTxHandler(str&, CharDev&, void*)+0xf4>
   1157a:	f1b8 0f00 	cmp.w	r8, #0
   1157e:	d037      	beq.n	115f0 <wsTxHandler(str&, CharDev&, void*)+0xf4>
   11580:	a804      	add	r0, sp, #16
   11582:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
   11586:	f003 fb8f 	bl	14ca8 <wireless_get_ack_pkt>
   1158a:	b360      	cbz	r0, 115e6 <wsTxHandler(str&, CharDev&, void*)+0xea>
   1158c:	f89d 3010 	ldrb.w	r3, [sp, #16]
   11590:	42bb      	cmp	r3, r7
   11592:	d128      	bne.n	115e6 <wsTxHandler(str&, CharDev&, void*)+0xea>
   11594:	f89d 3017 	ldrb.w	r3, [sp, #23]
   11598:	2b0c      	cmp	r3, #12
   1159a:	d104      	bne.n	115a6 <wsTxHandler(str&, CharDev&, void*)+0xaa>
   1159c:	4620      	mov	r0, r4
   1159e:	a906      	add	r1, sp, #24
   115a0:	463a      	mov	r2, r7
   115a2:	f7ff ff7d 	bl	114a0 <wirelessHandlerPrintStats(CharDev&, mesh_stats_t*, unsigned char)>
   115a6:	4620      	mov	r0, r4
   115a8:	b9be      	cbnz	r6, 115da <wsTxHandler(str&, CharDev&, void*)+0xde>
   115aa:	4916      	ldr	r1, [pc, #88]	; (11604 <wsTxHandler(str&, CharDev&, void*)+0x108>)
   115ac:	f008 fe89 	bl	1a2c2 <CharDev::printf(char const*, ...)>
   115b0:	f89d 3017 	ldrb.w	r3, [sp, #23]
   115b4:	429e      	cmp	r6, r3
   115b6:	da0b      	bge.n	115d0 <wsTxHandler(str&, CharDev&, void*)+0xd4>
   115b8:	6823      	ldr	r3, [r4, #0]
   115ba:	aa04      	add	r2, sp, #16
   115bc:	4432      	add	r2, r6
   115be:	f992 1008 	ldrsb.w	r1, [r2, #8]
   115c2:	685b      	ldr	r3, [r3, #4]
   115c4:	4620      	mov	r0, r4
   115c6:	f04f 32ff 	mov.w	r2, #4294967295
   115ca:	4798      	blx	r3
   115cc:	3601      	adds	r6, #1
   115ce:	e7ef      	b.n	115b0 <wsTxHandler(str&, CharDev&, void*)+0xb4>
   115d0:	4620      	mov	r0, r4
   115d2:	490d      	ldr	r1, [pc, #52]	; (11608 <wsTxHandler(str&, CharDev&, void*)+0x10c>)
   115d4:	f008 fe75 	bl	1a2c2 <CharDev::printf(char const*, ...)>
   115d8:	e00a      	b.n	115f0 <wsTxHandler(str&, CharDev&, void*)+0xf4>
   115da:	490c      	ldr	r1, [pc, #48]	; (1160c <wsTxHandler(str&, CharDev&, void*)+0x110>)
   115dc:	f04f 32ff 	mov.w	r2, #4294967295
   115e0:	f008 fe38 	bl	1a254 <CharDev::putline(char const*, unsigned int)>
   115e4:	e004      	b.n	115f0 <wsTxHandler(str&, CharDev&, void*)+0xf4>
   115e6:	4620      	mov	r0, r4
   115e8:	4909      	ldr	r1, [pc, #36]	; (11610 <wsTxHandler(str&, CharDev&, void*)+0x114>)
   115ea:	9a02      	ldr	r2, [sp, #8]
   115ec:	f008 fe69 	bl	1a2c2 <CharDev::printf(char const*, ...)>
   115f0:	4628      	mov	r0, r5
   115f2:	b00c      	add	sp, #48	; 0x30
   115f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   115f8:	00025932 	.word	0x00025932
   115fc:	00024ade 	.word	0x00024ade
   11600:	00024b00 	.word	0x00024b00
   11604:	00024b28 	.word	0x00024b28
   11608:	0002563d 	.word	0x0002563d
   1160c:	00024b3c 	.word	0x00024b3c
   11610:	00024b59 	.word	0x00024b59

00011614 <wsAddrHandler(str&, CharDev&, void*)>:
_ZL13wsAddrHandlerR3strR7CharDevPv():
   11614:	b538      	push	{r3, r4, r5, lr}
   11616:	460d      	mov	r5, r1
   11618:	f007 fd69 	bl	190ee <str::operator int() const>
   1161c:	4604      	mov	r4, r0
   1161e:	b2c0      	uxtb	r0, r0
   11620:	f002 fc88 	bl	13f34 <mesh_set_node_address>
   11624:	4a05      	ldr	r2, [pc, #20]	; (1163c <wsAddrHandler(str&, CharDev&, void*)+0x28>)
   11626:	4b06      	ldr	r3, [pc, #24]	; (11640 <wsAddrHandler(str&, CharDev&, void*)+0x2c>)
   11628:	4906      	ldr	r1, [pc, #24]	; (11644 <wsAddrHandler(str&, CharDev&, void*)+0x30>)
   1162a:	2800      	cmp	r0, #0
   1162c:	bf08      	it	eq
   1162e:	4613      	moveq	r3, r2
   11630:	4628      	mov	r0, r5
   11632:	4622      	mov	r2, r4
   11634:	f008 fe45 	bl	1a2c2 <CharDev::printf(char const*, ...)>
   11638:	2001      	movs	r0, #1
   1163a:	bd38      	pop	{r3, r4, r5, pc}
   1163c:	00024b7f 	.word	0x00024b7f
   11640:	000246f7 	.word	0x000246f7
   11644:	00024b86 	.word	0x00024b86

00011648 <wsRteHandler(str&, CharDev&, void*)>:
_Z12wsRteHandlerR3strR7CharDevPv():
   11648:	b537      	push	{r0, r1, r2, r4, r5, lr}
   1164a:	460c      	mov	r4, r1
   1164c:	f002 fdf6 	bl	1423c <mesh_get_num_routing_entries>
   11650:	4916      	ldr	r1, [pc, #88]	; (116ac <wsRteHandler(str&, CharDev&, void*)+0x64>)
   11652:	4605      	mov	r5, r0
   11654:	4620      	mov	r0, r4
   11656:	f008 fe34 	bl	1a2c2 <CharDev::printf(char const*, ...)>
   1165a:	4915      	ldr	r1, [pc, #84]	; (116b0 <wsRteHandler(str&, CharDev&, void*)+0x68>)
   1165c:	4620      	mov	r0, r4
   1165e:	462a      	mov	r2, r5
   11660:	f008 fe2f 	bl	1a2c2 <CharDev::printf(char const*, ...)>
   11664:	4620      	mov	r0, r4
   11666:	4911      	ldr	r1, [pc, #68]	; (116ac <wsRteHandler(str&, CharDev&, void*)+0x64>)
   11668:	f008 fe2b 	bl	1a2c2 <CharDev::printf(char const*, ...)>
   1166c:	b1d5      	cbz	r5, 116a4 <wsRteHandler(str&, CharDev&, void*)+0x5c>
   1166e:	4911      	ldr	r1, [pc, #68]	; (116b4 <wsRteHandler(str&, CharDev&, void*)+0x6c>)
   11670:	4620      	mov	r0, r4
   11672:	f008 fe26 	bl	1a2c2 <CharDev::printf(char const*, ...)>
   11676:	4620      	mov	r0, r4
   11678:	490c      	ldr	r1, [pc, #48]	; (116ac <wsRteHandler(str&, CharDev&, void*)+0x64>)
   1167a:	f008 fe22 	bl	1a2c2 <CharDev::printf(char const*, ...)>
   1167e:	2500      	movs	r5, #0
   11680:	b2e8      	uxtb	r0, r5
   11682:	f002 fdc5 	bl	14210 <mesh_get_routing_entry>
   11686:	3501      	adds	r5, #1
   11688:	b140      	cbz	r0, 1169c <wsRteHandler(str&, CharDev&, void*)+0x54>
   1168a:	7881      	ldrb	r1, [r0, #2]
   1168c:	7802      	ldrb	r2, [r0, #0]
   1168e:	7843      	ldrb	r3, [r0, #1]
   11690:	9100      	str	r1, [sp, #0]
   11692:	4620      	mov	r0, r4
   11694:	4908      	ldr	r1, [pc, #32]	; (116b8 <wsRteHandler(str&, CharDev&, void*)+0x70>)
   11696:	f008 fe14 	bl	1a2c2 <CharDev::printf(char const*, ...)>
   1169a:	e7f1      	b.n	11680 <wsRteHandler(str&, CharDev&, void*)+0x38>
   1169c:	4620      	mov	r0, r4
   1169e:	4903      	ldr	r1, [pc, #12]	; (116ac <wsRteHandler(str&, CharDev&, void*)+0x64>)
   116a0:	f008 fe0f 	bl	1a2c2 <CharDev::printf(char const*, ...)>
   116a4:	2001      	movs	r0, #1
   116a6:	b003      	add	sp, #12
   116a8:	bd30      	pop	{r4, r5, pc}
   116aa:	bf00      	nop
   116ac:	00024b9d 	.word	0x00024b9d
   116b0:	00024bb8 	.word	0x00024bb8
   116b4:	00024bd2 	.word	0x00024bd2
   116b8:	00024bed 	.word	0x00024bed

000116bc <wsRxHandler(str&, CharDev&, void*)>:
_ZL11wsRxHandlerR3strR7CharDevPv():
   116bc:	b530      	push	{r4, r5, lr}
   116be:	b08b      	sub	sp, #44	; 0x2c
   116c0:	aa0a      	add	r2, sp, #40	; 0x28
   116c2:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
   116c6:	460c      	mov	r4, r1
   116c8:	f842 3d24 	str.w	r3, [r2, #-36]!
   116cc:	4917      	ldr	r1, [pc, #92]	; (1172c <wsRxHandler(str&, CharDev&, void*)+0x70>)
   116ce:	f007 fb73 	bl	18db8 <str::scanf(char const*, ...)>
   116d2:	2500      	movs	r5, #0
   116d4:	a802      	add	r0, sp, #8
   116d6:	9901      	ldr	r1, [sp, #4]
   116d8:	f003 fadc 	bl	14c94 <wireless_get_rx_pkt>
   116dc:	b1e0      	cbz	r0, 11718 <wsRxHandler(str&, CharDev&, void*)+0x5c>
   116de:	4620      	mov	r0, r4
   116e0:	4913      	ldr	r1, [pc, #76]	; (11730 <wsRxHandler(str&, CharDev&, void*)+0x74>)
   116e2:	f89d 2008 	ldrb.w	r2, [sp, #8]
   116e6:	f008 fdec 	bl	1a2c2 <CharDev::printf(char const*, ...)>
   116ea:	2500      	movs	r5, #0
   116ec:	f89d 300f 	ldrb.w	r3, [sp, #15]
   116f0:	429d      	cmp	r5, r3
   116f2:	da0b      	bge.n	1170c <wsRxHandler(str&, CharDev&, void*)+0x50>
   116f4:	6823      	ldr	r3, [r4, #0]
   116f6:	aa02      	add	r2, sp, #8
   116f8:	442a      	add	r2, r5
   116fa:	f992 1008 	ldrsb.w	r1, [r2, #8]
   116fe:	685b      	ldr	r3, [r3, #4]
   11700:	4620      	mov	r0, r4
   11702:	f04f 32ff 	mov.w	r2, #4294967295
   11706:	4798      	blx	r3
   11708:	3501      	adds	r5, #1
   1170a:	e7ef      	b.n	116ec <wsRxHandler(str&, CharDev&, void*)+0x30>
   1170c:	4620      	mov	r0, r4
   1170e:	4909      	ldr	r1, [pc, #36]	; (11734 <wsRxHandler(str&, CharDev&, void*)+0x78>)
   11710:	f008 fdd7 	bl	1a2c2 <CharDev::printf(char const*, ...)>
   11714:	2501      	movs	r5, #1
   11716:	e7dd      	b.n	116d4 <wsRxHandler(str&, CharDev&, void*)+0x18>
   11718:	b92d      	cbnz	r5, 11726 <wsRxHandler(str&, CharDev&, void*)+0x6a>
   1171a:	4620      	mov	r0, r4
   1171c:	4906      	ldr	r1, [pc, #24]	; (11738 <wsRxHandler(str&, CharDev&, void*)+0x7c>)
   1171e:	f04f 32ff 	mov.w	r2, #4294967295
   11722:	f008 fd97 	bl	1a254 <CharDev::putline(char const*, unsigned int)>
   11726:	2001      	movs	r0, #1
   11728:	b00b      	add	sp, #44	; 0x2c
   1172a:	bd30      	pop	{r4, r5, pc}
   1172c:	00024a42 	.word	0x00024a42
   11730:	00024c08 	.word	0x00024c08
   11734:	000249f0 	.word	0x000249f0
   11738:	00024c1f 	.word	0x00024c1f

0001173c <wirelessHandler(str&, CharDev&, void*)>:
_Z15wirelessHandlerR3strR7CharDevPv():
   1173c:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
   11740:	4d3c      	ldr	r5, [pc, #240]	; (11834 <wirelessHandler(str&, CharDev&, void*)+0xf8>)
   11742:	4607      	mov	r7, r0
   11744:	682e      	ldr	r6, [r5, #0]
   11746:	4689      	mov	r9, r1
   11748:	2e00      	cmp	r6, #0
   1174a:	d162      	bne.n	11812 <wirelessHandler(str&, CharDev&, void*)+0xd6>
   1174c:	2024      	movs	r0, #36	; 0x24
   1174e:	f7fe fd8f 	bl	10270 <operator new(unsigned int)>
   11752:	2304      	movs	r3, #4
   11754:	4604      	mov	r4, r0
   11756:	e880 0048 	stmia.w	r0, {r3, r6}
   1175a:	6086      	str	r6, [r0, #8]
   1175c:	60c6      	str	r6, [r0, #12]
   1175e:	2120      	movs	r1, #32
   11760:	4630      	mov	r0, r6
   11762:	f00d f96f 	bl	1ea44 <realloc>
   11766:	68a6      	ldr	r6, [r4, #8]
   11768:	60e0      	str	r0, [r4, #12]
   1176a:	ea4f 0886 	mov.w	r8, r6, lsl #2
   1176e:	2e07      	cmp	r6, #7
   11770:	d80e      	bhi.n	11790 <wirelessHandler(str&, CharDev&, void*)+0x54>
   11772:	2010      	movs	r0, #16
   11774:	f7fe fd7c 	bl	10270 <operator new(unsigned int)>
   11778:	2100      	movs	r1, #0
   1177a:	2210      	movs	r2, #16
   1177c:	4682      	mov	sl, r0
   1177e:	f00c fb76 	bl	1de6e <memset>
   11782:	68e3      	ldr	r3, [r4, #12]
   11784:	3601      	adds	r6, #1
   11786:	f843 a008 	str.w	sl, [r3, r8]
   1178a:	f108 0804 	add.w	r8, r8, #4
   1178e:	e7ee      	b.n	1176e <wirelessHandler(str&, CharDev&, void*)+0x32>
   11790:	2600      	movs	r6, #0
   11792:	2308      	movs	r3, #8
   11794:	f04f 0801 	mov.w	r8, #1
   11798:	6063      	str	r3, [r4, #4]
   1179a:	f884 8020 	strb.w	r8, [r4, #32]
   1179e:	4620      	mov	r0, r4
   117a0:	4925      	ldr	r1, [pc, #148]	; (11838 <wirelessHandler(str&, CharDev&, void*)+0xfc>)
   117a2:	4a26      	ldr	r2, [pc, #152]	; (1183c <wirelessHandler(str&, CharDev&, void*)+0x100>)
   117a4:	4b26      	ldr	r3, [pc, #152]	; (11840 <wirelessHandler(str&, CharDev&, void*)+0x104>)
   117a6:	9600      	str	r6, [sp, #0]
   117a8:	602c      	str	r4, [r5, #0]
   117aa:	f006 fc6f 	bl	1808c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   117ae:	6828      	ldr	r0, [r5, #0]
   117b0:	4924      	ldr	r1, [pc, #144]	; (11844 <wirelessHandler(str&, CharDev&, void*)+0x108>)
   117b2:	4a25      	ldr	r2, [pc, #148]	; (11848 <wirelessHandler(str&, CharDev&, void*)+0x10c>)
   117b4:	4b25      	ldr	r3, [pc, #148]	; (1184c <wirelessHandler(str&, CharDev&, void*)+0x110>)
   117b6:	9600      	str	r6, [sp, #0]
   117b8:	f006 fc68 	bl	1808c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   117bc:	6828      	ldr	r0, [r5, #0]
   117be:	4924      	ldr	r1, [pc, #144]	; (11850 <wirelessHandler(str&, CharDev&, void*)+0x114>)
   117c0:	4a24      	ldr	r2, [pc, #144]	; (11854 <wirelessHandler(str&, CharDev&, void*)+0x118>)
   117c2:	4b25      	ldr	r3, [pc, #148]	; (11858 <wirelessHandler(str&, CharDev&, void*)+0x11c>)
   117c4:	9600      	str	r6, [sp, #0]
   117c6:	f006 fc61 	bl	1808c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   117ca:	6828      	ldr	r0, [r5, #0]
   117cc:	4923      	ldr	r1, [pc, #140]	; (1185c <wirelessHandler(str&, CharDev&, void*)+0x120>)
   117ce:	4a24      	ldr	r2, [pc, #144]	; (11860 <wirelessHandler(str&, CharDev&, void*)+0x124>)
   117d0:	4b24      	ldr	r3, [pc, #144]	; (11864 <wirelessHandler(str&, CharDev&, void*)+0x128>)
   117d2:	9600      	str	r6, [sp, #0]
   117d4:	f006 fc5a 	bl	1808c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   117d8:	6828      	ldr	r0, [r5, #0]
   117da:	4923      	ldr	r1, [pc, #140]	; (11868 <wirelessHandler(str&, CharDev&, void*)+0x12c>)
   117dc:	4a23      	ldr	r2, [pc, #140]	; (1186c <wirelessHandler(str&, CharDev&, void*)+0x130>)
   117de:	4b24      	ldr	r3, [pc, #144]	; (11870 <wirelessHandler(str&, CharDev&, void*)+0x134>)
   117e0:	9600      	str	r6, [sp, #0]
   117e2:	f006 fc53 	bl	1808c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   117e6:	6828      	ldr	r0, [r5, #0]
   117e8:	4922      	ldr	r1, [pc, #136]	; (11874 <wirelessHandler(str&, CharDev&, void*)+0x138>)
   117ea:	4a23      	ldr	r2, [pc, #140]	; (11878 <wirelessHandler(str&, CharDev&, void*)+0x13c>)
   117ec:	4b23      	ldr	r3, [pc, #140]	; (1187c <wirelessHandler(str&, CharDev&, void*)+0x140>)
   117ee:	f8cd 8000 	str.w	r8, [sp]
   117f2:	f006 fc4b 	bl	1808c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   117f6:	6828      	ldr	r0, [r5, #0]
   117f8:	491e      	ldr	r1, [pc, #120]	; (11874 <wirelessHandler(str&, CharDev&, void*)+0x138>)
   117fa:	4a21      	ldr	r2, [pc, #132]	; (11880 <wirelessHandler(str&, CharDev&, void*)+0x144>)
   117fc:	4b21      	ldr	r3, [pc, #132]	; (11884 <wirelessHandler(str&, CharDev&, void*)+0x148>)
   117fe:	9600      	str	r6, [sp, #0]
   11800:	f006 fc44 	bl	1808c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   11804:	9600      	str	r6, [sp, #0]
   11806:	6828      	ldr	r0, [r5, #0]
   11808:	491f      	ldr	r1, [pc, #124]	; (11888 <wirelessHandler(str&, CharDev&, void*)+0x14c>)
   1180a:	4a20      	ldr	r2, [pc, #128]	; (1188c <wirelessHandler(str&, CharDev&, void*)+0x150>)
   1180c:	4b20      	ldr	r3, [pc, #128]	; (11890 <wirelessHandler(str&, CharDev&, void*)+0x154>)
   1180e:	f006 fc3d 	bl	1808c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   11812:	4638      	mov	r0, r7
   11814:	491f      	ldr	r1, [pc, #124]	; (11894 <wirelessHandler(str&, CharDev&, void*)+0x158>)
   11816:	f007 fc66 	bl	190e6 <str::operator==(char const*) const>
   1181a:	b118      	cbz	r0, 11824 <wirelessHandler(str&, CharDev&, void*)+0xe8>
   1181c:	4638      	mov	r0, r7
   1181e:	491e      	ldr	r1, [pc, #120]	; (11898 <wirelessHandler(str&, CharDev&, void*)+0x15c>)
   11820:	f007 fd1b 	bl	1925a <str::operator=(char const*)>
   11824:	6828      	ldr	r0, [r5, #0]
   11826:	4639      	mov	r1, r7
   11828:	464a      	mov	r2, r9
   1182a:	b002      	add	sp, #8
   1182c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   11830:	f006 bd0e 	b.w	18250 <CommandProcessor::handleCommand(str&, CharDev&)>
   11834:	2007c214 	.word	0x2007c214
   11838:	00011add 	.word	0x00011add
   1183c:	00024c30 	.word	0x00024c30
   11840:	00024c37 	.word	0x00024c37
   11844:	000118bd 	.word	0x000118bd
   11848:	00024c71 	.word	0x00024c71
   1184c:	00024c7a 	.word	0x00024c7a
   11850:	000116bd 	.word	0x000116bd
   11854:	00024cce 	.word	0x00024cce
   11858:	00024cd1 	.word	0x00024cd1
   1185c:	00011615 	.word	0x00011615
   11860:	0002571d 	.word	0x0002571d
   11864:	00024cf4 	.word	0x00024cf4
   11868:	00011649 	.word	0x00011649
   1186c:	00024d3a 	.word	0x00024d3a
   11870:	00024d1e 	.word	0x00024d1e
   11874:	000114fd 	.word	0x000114fd
   11878:	00024d83 	.word	0x00024d83
   1187c:	00024d41 	.word	0x00024d41
   11880:	00024d82 	.word	0x00024d82
   11884:	00024d87 	.word	0x00024d87
   11888:	000114dd 	.word	0x000114dd
   1188c:	00024dc7 	.word	0x00024dc7
   11890:	00024dac 	.word	0x00024dac
   11894:	000249f1 	.word	0x000249f1
   11898:	00024dcd 	.word	0x00024dcd

0001189c <SingletonTemplate<NordicStream>::getInstance()>:
_ZN17SingletonTemplateI12NordicStreamE11getInstanceEv():
   1189c:	b538      	push	{r3, r4, r5, lr}
   1189e:	4c06      	ldr	r4, [pc, #24]	; (118b8 <SingletonTemplate<NordicStream>::getInstance()+0x1c>)
   118a0:	6823      	ldr	r3, [r4, #0]
   118a2:	b933      	cbnz	r3, 118b2 <SingletonTemplate<NordicStream>::getInstance()+0x16>
   118a4:	2058      	movs	r0, #88	; 0x58
   118a6:	f7fe fce3 	bl	10270 <operator new(unsigned int)>
   118aa:	4605      	mov	r5, r0
   118ac:	f008 fa4c 	bl	19d48 <NordicStream::NordicStream()>
   118b0:	6025      	str	r5, [r4, #0]
   118b2:	6820      	ldr	r0, [r4, #0]
   118b4:	bd38      	pop	{r3, r4, r5, pc}
   118b6:	bf00      	nop
   118b8:	2007c210 	.word	0x2007c210

000118bc <wsFileTxHandler(str&, CharDev&, void*)>:
_ZL15wsFileTxHandlerR3strR7CharDevPv():
   118bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   118c0:	f2ad 5ddc 	subw	sp, sp, #1500	; 0x5dc
   118c4:	4604      	mov	r4, r0
   118c6:	2280      	movs	r2, #128	; 0x80
   118c8:	f10d 0ab4 	add.w	sl, sp, #180	; 0xb4
   118cc:	4689      	mov	r9, r1
   118ce:	a80d      	add	r0, sp, #52	; 0x34
   118d0:	2100      	movs	r1, #0
   118d2:	f00c facc 	bl	1de6e <memset>
   118d6:	2100      	movs	r1, #0
   118d8:	2280      	movs	r2, #128	; 0x80
   118da:	4650      	mov	r0, sl
   118dc:	f00c fac7 	bl	1de6e <memset>
   118e0:	ae06      	add	r6, sp, #24
   118e2:	2300      	movs	r3, #0
   118e4:	6033      	str	r3, [r6, #0]
   118e6:	4620      	mov	r0, r4
   118e8:	9600      	str	r6, [sp, #0]
   118ea:	4972      	ldr	r1, [pc, #456]	; (11ab4 <wsFileTxHandler(str&, CharDev&, void*)+0x1f8>)
   118ec:	aa0d      	add	r2, sp, #52	; 0x34
   118ee:	4653      	mov	r3, sl
   118f0:	f007 fa62 	bl	18db8 <str::scanf(char const*, ...)>
   118f4:	2803      	cmp	r0, #3
   118f6:	d001      	beq.n	118fc <wsFileTxHandler(str&, CharDev&, void*)+0x40>
   118f8:	2000      	movs	r0, #0
   118fa:	e0d7      	b.n	11aac <wsFileTxHandler(str&, CharDev&, void*)+0x1f0>
   118fc:	a8ed      	add	r0, sp, #948	; 0x3b4
   118fe:	a90d      	add	r1, sp, #52	; 0x34
   11900:	2201      	movs	r2, #1
   11902:	f005 fbc9 	bl	17098 <f_open>
   11906:	4605      	mov	r5, r0
   11908:	2800      	cmp	r0, #0
   1190a:	d1f5      	bne.n	118f8 <wsFileTxHandler(str&, CharDev&, void*)+0x3c>
   1190c:	f7ff ffc6 	bl	1189c <SingletonTemplate<NordicStream>::getInstance()>
   11910:	6833      	ldr	r3, [r6, #0]
   11912:	a94d      	add	r1, sp, #308	; 0x134
   11914:	f880 3053 	strb.w	r3, [r0, #83]	; 0x53
   11918:	2280      	movs	r2, #128	; 0x80
   1191a:	4604      	mov	r4, r0
   1191c:	a808      	add	r0, sp, #32
   1191e:	f88d 5017 	strb.w	r5, [sp, #23]
   11922:	9507      	str	r5, [sp, #28]
   11924:	f007 fa18 	bl	18d58 <str::str(char*, int)>
   11928:	f8cd a000 	str.w	sl, [sp]
   1192c:	4648      	mov	r0, r9
   1192e:	4962      	ldr	r1, [pc, #392]	; (11ab8 <wsFileTxHandler(str&, CharDev&, void*)+0x1fc>)
   11930:	aa0d      	add	r2, sp, #52	; 0x34
   11932:	6833      	ldr	r3, [r6, #0]
   11934:	f008 fcc5 	bl	1a2c2 <CharDev::printf(char const*, ...)>
   11938:	46a8      	mov	r8, r5
   1193a:	a8ed      	add	r0, sp, #948	; 0x3b4
   1193c:	a96d      	add	r1, sp, #436	; 0x1b4
   1193e:	f44f 7200 	mov.w	r2, #512	; 0x200
   11942:	ab07      	add	r3, sp, #28
   11944:	f005 fc3a 	bl	171bc <f_read>
   11948:	b138      	cbz	r0, 1195a <wsFileTxHandler(str&, CharDev&, void*)+0x9e>
   1194a:	a8ed      	add	r0, sp, #948	; 0x3b4
   1194c:	f005 fe18 	bl	17580 <f_close>
   11950:	a808      	add	r0, sp, #32
   11952:	f007 fa16 	bl	18d82 <str::~str()>
   11956:	2001      	movs	r0, #1
   11958:	e0a8      	b.n	11aac <wsFileTxHandler(str&, CharDev&, void*)+0x1f0>
   1195a:	9b07      	ldr	r3, [sp, #28]
   1195c:	2b00      	cmp	r3, #0
   1195e:	d0f4      	beq.n	1194a <wsFileTxHandler(str&, CharDev&, void*)+0x8e>
   11960:	1c6f      	adds	r7, r5, #1
   11962:	4956      	ldr	r1, [pc, #344]	; (11abc <wsFileTxHandler(str&, CharDev&, void*)+0x200>)
   11964:	9a07      	ldr	r2, [sp, #28]
   11966:	4620      	mov	r0, r4
   11968:	f008 fcab 	bl	1a2c2 <CharDev::printf(char const*, ...)>
   1196c:	6823      	ldr	r3, [r4, #0]
   1196e:	4620      	mov	r0, r4
   11970:	689b      	ldr	r3, [r3, #8]
   11972:	4798      	blx	r3
   11974:	2600      	movs	r6, #0
   11976:	1e7d      	subs	r5, r7, #1
   11978:	46b3      	mov	fp, r6
   1197a:	9b07      	ldr	r3, [sp, #28]
   1197c:	6822      	ldr	r2, [r4, #0]
   1197e:	429e      	cmp	r6, r3
   11980:	d20d      	bcs.n	1199e <wsFileTxHandler(str&, CharDev&, void*)+0xe2>
   11982:	ab6d      	add	r3, sp, #436	; 0x1b4
   11984:	5799      	ldrsb	r1, [r3, r6]
   11986:	f8d2 c004 	ldr.w	ip, [r2, #4]
   1198a:	4620      	mov	r0, r4
   1198c:	9303      	str	r3, [sp, #12]
   1198e:	f04f 32ff 	mov.w	r2, #4294967295
   11992:	47e0      	blx	ip
   11994:	9b03      	ldr	r3, [sp, #12]
   11996:	56f3      	ldrsb	r3, [r6, r3]
   11998:	3601      	adds	r6, #1
   1199a:	449b      	add	fp, r3
   1199c:	e7ed      	b.n	1197a <wsFileTxHandler(str&, CharDev&, void*)+0xbe>
   1199e:	6893      	ldr	r3, [r2, #8]
   119a0:	4620      	mov	r0, r4
   119a2:	4798      	blx	r3
   119a4:	a808      	add	r0, sp, #32
   119a6:	f007 fba0 	bl	190ea <str::operator()() const>
   119aa:	4606      	mov	r6, r0
   119ac:	a808      	add	r0, sp, #32
   119ae:	f007 f9fd 	bl	18dac <str::getCapacity() const>
   119b2:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
   119b6:	4602      	mov	r2, r0
   119b8:	4631      	mov	r1, r6
   119ba:	4620      	mov	r0, r4
   119bc:	f008 fc58 	bl	1a270 <CharDev::gets(char*, int, unsigned int)>
   119c0:	2101      	movs	r1, #1
   119c2:	2220      	movs	r2, #32
   119c4:	a808      	add	r0, sp, #32
   119c6:	f007 fb3b 	bl	19040 <str::eraseFirstWords(int, char)>
   119ca:	a808      	add	r0, sp, #32
   119cc:	f007 fb8f 	bl	190ee <str::operator int() const>
   119d0:	4558      	cmp	r0, fp
   119d2:	d020      	beq.n	11a16 <wsFileTxHandler(str&, CharDev&, void*)+0x15a>
   119d4:	a808      	add	r0, sp, #32
   119d6:	f007 fb8a 	bl	190ee <str::operator int() const>
   119da:	4939      	ldr	r1, [pc, #228]	; (11ac0 <wsFileTxHandler(str&, CharDev&, void*)+0x204>)
   119dc:	4603      	mov	r3, r0
   119de:	465a      	mov	r2, fp
   119e0:	4648      	mov	r0, r9
   119e2:	f008 fc6e 	bl	1a2c2 <CharDev::printf(char const*, ...)>
   119e6:	4620      	mov	r0, r4
   119e8:	4936      	ldr	r1, [pc, #216]	; (11ac4 <wsFileTxHandler(str&, CharDev&, void*)+0x208>)
   119ea:	f008 fc6a 	bl	1a2c2 <CharDev::printf(char const*, ...)>
   119ee:	6823      	ldr	r3, [r4, #0]
   119f0:	4620      	mov	r0, r4
   119f2:	689b      	ldr	r3, [r3, #8]
   119f4:	4798      	blx	r3
   119f6:	6823      	ldr	r3, [r4, #0]
   119f8:	4620      	mov	r0, r4
   119fa:	681b      	ldr	r3, [r3, #0]
   119fc:	f10d 0117 	add.w	r1, sp, #23
   11a00:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   11a04:	4798      	blx	r3
   11a06:	2800      	cmp	r0, #0
   11a08:	d1f5      	bne.n	119f6 <wsFileTxHandler(str&, CharDev&, void*)+0x13a>
   11a0a:	2f02      	cmp	r7, #2
   11a0c:	f107 0301 	add.w	r3, r7, #1
   11a10:	d89b      	bhi.n	1194a <wsFileTxHandler(str&, CharDev&, void*)+0x8e>
   11a12:	461f      	mov	r7, r3
   11a14:	e7a5      	b.n	11962 <wsFileTxHandler(str&, CharDev&, void*)+0xa6>
   11a16:	9b07      	ldr	r3, [sp, #28]
   11a18:	492b      	ldr	r1, [pc, #172]	; (11ac8 <wsFileTxHandler(str&, CharDev&, void*)+0x20c>)
   11a1a:	4652      	mov	r2, sl
   11a1c:	9300      	str	r3, [sp, #0]
   11a1e:	4620      	mov	r0, r4
   11a20:	4643      	mov	r3, r8
   11a22:	f008 fc4e 	bl	1a2c2 <CharDev::printf(char const*, ...)>
   11a26:	6823      	ldr	r3, [r4, #0]
   11a28:	4620      	mov	r0, r4
   11a2a:	689b      	ldr	r3, [r3, #8]
   11a2c:	4798      	blx	r3
   11a2e:	a808      	add	r0, sp, #32
   11a30:	f007 fb5b 	bl	190ea <str::operator()() const>
   11a34:	4606      	mov	r6, r0
   11a36:	a808      	add	r0, sp, #32
   11a38:	f007 f9b8 	bl	18dac <str::getCapacity() const>
   11a3c:	4631      	mov	r1, r6
   11a3e:	4602      	mov	r2, r0
   11a40:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
   11a44:	4620      	mov	r0, r4
   11a46:	f008 fc13 	bl	1a270 <CharDev::gets(char*, int, unsigned int)>
   11a4a:	a808      	add	r0, sp, #32
   11a4c:	491f      	ldr	r1, [pc, #124]	; (11acc <wsFileTxHandler(str&, CharDev&, void*)+0x210>)
   11a4e:	f007 fa43 	bl	18ed8 <str::containsIgnoreCase(char const*) const>
   11a52:	b9d0      	cbnz	r0, 11a8a <wsFileTxHandler(str&, CharDev&, void*)+0x1ce>
   11a54:	a808      	add	r0, sp, #32
   11a56:	f007 fb48 	bl	190ea <str::operator()() const>
   11a5a:	491d      	ldr	r1, [pc, #116]	; (11ad0 <wsFileTxHandler(str&, CharDev&, void*)+0x214>)
   11a5c:	4602      	mov	r2, r0
   11a5e:	4648      	mov	r0, r9
   11a60:	f008 fc2f 	bl	1a2c2 <CharDev::printf(char const*, ...)>
   11a64:	4620      	mov	r0, r4
   11a66:	4917      	ldr	r1, [pc, #92]	; (11ac4 <wsFileTxHandler(str&, CharDev&, void*)+0x208>)
   11a68:	f008 fc2b 	bl	1a2c2 <CharDev::printf(char const*, ...)>
   11a6c:	6823      	ldr	r3, [r4, #0]
   11a6e:	4620      	mov	r0, r4
   11a70:	689b      	ldr	r3, [r3, #8]
   11a72:	4798      	blx	r3
   11a74:	6823      	ldr	r3, [r4, #0]
   11a76:	4620      	mov	r0, r4
   11a78:	681b      	ldr	r3, [r3, #0]
   11a7a:	f10d 0117 	add.w	r1, sp, #23
   11a7e:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   11a82:	4798      	blx	r3
   11a84:	2800      	cmp	r0, #0
   11a86:	d1f5      	bne.n	11a74 <wsFileTxHandler(str&, CharDev&, void*)+0x1b8>
   11a88:	e7bf      	b.n	11a0a <wsFileTxHandler(str&, CharDev&, void*)+0x14e>
   11a8a:	a808      	add	r0, sp, #32
   11a8c:	4911      	ldr	r1, [pc, #68]	; (11ad4 <wsFileTxHandler(str&, CharDev&, void*)+0x218>)
   11a8e:	f007 fbe4 	bl	1925a <str::operator=(char const*)>
   11a92:	9b07      	ldr	r3, [sp, #28]
   11a94:	4648      	mov	r0, r9
   11a96:	4498      	add	r8, r3
   11a98:	490f      	ldr	r1, [pc, #60]	; (11ad8 <wsFileTxHandler(str&, CharDev&, void*)+0x21c>)
   11a9a:	4642      	mov	r2, r8
   11a9c:	9bf0      	ldr	r3, [sp, #960]	; 0x3c0
   11a9e:	f008 fc10 	bl	1a2c2 <CharDev::printf(char const*, ...)>
   11aa2:	2d00      	cmp	r5, #0
   11aa4:	f43f af49 	beq.w	1193a <wsFileTxHandler(str&, CharDev&, void*)+0x7e>
   11aa8:	3d01      	subs	r5, #1
   11aaa:	e746      	b.n	1193a <wsFileTxHandler(str&, CharDev&, void*)+0x7e>
   11aac:	f20d 5ddc 	addw	sp, sp, #1500	; 0x5dc
   11ab0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11ab4:	00024dd2 	.word	0x00024dd2
   11ab8:	00024de1 	.word	0x00024de1
   11abc:	00024df8 	.word	0x00024df8
   11ac0:	00024e0a 	.word	0x00024e0a
   11ac4:	000249f0 	.word	0x000249f0
   11ac8:	00024e31 	.word	0x00024e31
   11acc:	00024e47 	.word	0x00024e47
   11ad0:	00024e4a 	.word	0x00024e4a
   11ad4:	000249f1 	.word	0x000249f1
   11ad8:	00024e82 	.word	0x00024e82

00011adc <wsStreamHandler(str&, CharDev&, void*)>:
_ZL15wsStreamHandlerR3strR7CharDevPv():
   11adc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   11ae0:	b086      	sub	sp, #24
   11ae2:	aa06      	add	r2, sp, #24
   11ae4:	2600      	movs	r6, #0
   11ae6:	4607      	mov	r7, r0
   11ae8:	f842 6d0c 	str.w	r6, [r2, #-12]!
   11aec:	460d      	mov	r5, r1
   11aee:	493d      	ldr	r1, [pc, #244]	; (11be4 <wsStreamHandler(str&, CharDev&, void*)+0x108>)
   11af0:	f007 f962 	bl	18db8 <str::scanf(char const*, ...)>
   11af4:	4638      	mov	r0, r7
   11af6:	2101      	movs	r1, #1
   11af8:	2220      	movs	r2, #32
   11afa:	f007 faa1 	bl	19040 <str::eraseFirstWords(int, char)>
   11afe:	9b03      	ldr	r3, [sp, #12]
   11b00:	2b00      	cmp	r3, #0
   11b02:	d064      	beq.n	11bce <wsStreamHandler(str&, CharDev&, void*)+0xf2>
   11b04:	4638      	mov	r0, r7
   11b06:	f007 f94e 	bl	18da6 <str::getLen() const>
   11b0a:	2800      	cmp	r0, #0
   11b0c:	d05f      	beq.n	11bce <wsStreamHandler(str&, CharDev&, void*)+0xf2>
   11b0e:	f7ff fec5 	bl	1189c <SingletonTemplate<NordicStream>::getInstance()>
   11b12:	f88d 600b 	strb.w	r6, [sp, #11]
   11b16:	4604      	mov	r4, r0
   11b18:	6823      	ldr	r3, [r4, #0]
   11b1a:	4620      	mov	r0, r4
   11b1c:	681b      	ldr	r3, [r3, #0]
   11b1e:	f10d 010b 	add.w	r1, sp, #11
   11b22:	2205      	movs	r2, #5
   11b24:	4798      	blx	r3
   11b26:	4606      	mov	r6, r0
   11b28:	2800      	cmp	r0, #0
   11b2a:	d1f5      	bne.n	11b18 <wsStreamHandler(str&, CharDev&, void*)+0x3c>
   11b2c:	9b03      	ldr	r3, [sp, #12]
   11b2e:	4638      	mov	r0, r7
   11b30:	f884 3053 	strb.w	r3, [r4, #83]	; 0x53
   11b34:	f007 fad9 	bl	190ea <str::operator()() const>
   11b38:	f04f 32ff 	mov.w	r2, #4294967295
   11b3c:	4601      	mov	r1, r0
   11b3e:	4620      	mov	r0, r4
   11b40:	f008 fb88 	bl	1a254 <CharDev::putline(char const*, unsigned int)>
   11b44:	6823      	ldr	r3, [r4, #0]
   11b46:	4620      	mov	r0, r4
   11b48:	689b      	ldr	r3, [r3, #8]
   11b4a:	4798      	blx	r3
   11b4c:	4b26      	ldr	r3, [pc, #152]	; (11be8 <wsStreamHandler(str&, CharDev&, void*)+0x10c>)
   11b4e:	9605      	str	r6, [sp, #20]
   11b50:	6818      	ldr	r0, [r3, #0]
   11b52:	4637      	mov	r7, r6
   11b54:	9004      	str	r0, [sp, #16]
   11b56:	6823      	ldr	r3, [r4, #0]
   11b58:	4620      	mov	r0, r4
   11b5a:	681b      	ldr	r3, [r3, #0]
   11b5c:	f10d 010b 	add.w	r1, sp, #11
   11b60:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   11b64:	4798      	blx	r3
   11b66:	b178      	cbz	r0, 11b88 <wsStreamHandler(str&, CharDev&, void*)+0xac>
   11b68:	f10d 0115 	add.w	r1, sp, #21
   11b6c:	2203      	movs	r2, #3
   11b6e:	a805      	add	r0, sp, #20
   11b70:	f00c f962 	bl	1de38 <memmove>
   11b74:	f89d 800b 	ldrb.w	r8, [sp, #11]
   11b78:	a805      	add	r0, sp, #20
   11b7a:	a904      	add	r1, sp, #16
   11b7c:	2204      	movs	r2, #4
   11b7e:	f88d 8017 	strb.w	r8, [sp, #23]
   11b82:	f00c f941 	bl	1de08 <memcmp>
   11b86:	b938      	cbnz	r0, 11b98 <wsStreamHandler(str&, CharDev&, void*)+0xbc>
   11b88:	2218      	movs	r2, #24
   11b8a:	fbb7 f3f2 	udiv	r3, r7, r2
   11b8e:	fb02 7213 	mls	r2, r2, r3, r7
   11b92:	b16a      	cbz	r2, 11bb0 <wsStreamHandler(str&, CharDev&, void*)+0xd4>
   11b94:	3301      	adds	r3, #1
   11b96:	e00b      	b.n	11bb0 <wsStreamHandler(str&, CharDev&, void*)+0xd4>
   11b98:	682b      	ldr	r3, [r5, #0]
   11b9a:	4628      	mov	r0, r5
   11b9c:	685b      	ldr	r3, [r3, #4]
   11b9e:	fa4f f188 	sxtb.w	r1, r8
   11ba2:	2201      	movs	r2, #1
   11ba4:	3701      	adds	r7, #1
   11ba6:	4798      	blx	r3
   11ba8:	2800      	cmp	r0, #0
   11baa:	d1d4      	bne.n	11b56 <wsStreamHandler(str&, CharDev&, void*)+0x7a>
   11bac:	3601      	adds	r6, #1
   11bae:	e7d2      	b.n	11b56 <wsStreamHandler(str&, CharDev&, void*)+0x7a>
   11bb0:	4628      	mov	r0, r5
   11bb2:	490e      	ldr	r1, [pc, #56]	; (11bec <wsStreamHandler(str&, CharDev&, void*)+0x110>)
   11bb4:	463a      	mov	r2, r7
   11bb6:	f008 fb84 	bl	1a2c2 <CharDev::printf(char const*, ...)>
   11bba:	b176      	cbz	r6, 11bda <wsStreamHandler(str&, CharDev&, void*)+0xfe>
   11bbc:	2361      	movs	r3, #97	; 0x61
   11bbe:	9300      	str	r3, [sp, #0]
   11bc0:	4628      	mov	r0, r5
   11bc2:	490b      	ldr	r1, [pc, #44]	; (11bf0 <wsStreamHandler(str&, CharDev&, void*)+0x114>)
   11bc4:	4632      	mov	r2, r6
   11bc6:	4b0b      	ldr	r3, [pc, #44]	; (11bf4 <wsStreamHandler(str&, CharDev&, void*)+0x118>)
   11bc8:	f008 fb7b 	bl	1a2c2 <CharDev::printf(char const*, ...)>
   11bcc:	e005      	b.n	11bda <wsStreamHandler(str&, CharDev&, void*)+0xfe>
   11bce:	4628      	mov	r0, r5
   11bd0:	4909      	ldr	r1, [pc, #36]	; (11bf8 <wsStreamHandler(str&, CharDev&, void*)+0x11c>)
   11bd2:	f04f 32ff 	mov.w	r2, #4294967295
   11bd6:	f008 fb3d 	bl	1a254 <CharDev::putline(char const*, unsigned int)>
   11bda:	2001      	movs	r0, #1
   11bdc:	b006      	add	sp, #24
   11bde:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   11be2:	bf00      	nop
   11be4:	00024a42 	.word	0x00024a42
   11be8:	00024a86 	.word	0x00024a86
   11bec:	00024e8e 	.word	0x00024e8e
   11bf0:	00024eb5 	.word	0x00024eb5
   11bf4:	00024f6e 	.word	0x00024f6e
   11bf8:	00024faa 	.word	0x00024faa

00011bfc <can_controller::enum_to_string()>:
_ZN14can_controller14enum_to_stringEv():
   11bfc:	b510      	push	{r4, lr}
   11bfe:	4c47      	ldr	r4, [pc, #284]	; (11d1c <can_controller::enum_to_string()+0x120>)
   11c00:	4947      	ldr	r1, [pc, #284]	; (11d20 <can_controller::enum_to_string()+0x124>)
   11c02:	4620      	mov	r0, r4
   11c04:	f00d f958 	bl	1eeb8 <strcpy>
   11c08:	f104 0020 	add.w	r0, r4, #32
   11c0c:	4945      	ldr	r1, [pc, #276]	; (11d24 <can_controller::enum_to_string()+0x128>)
   11c0e:	f00d f953 	bl	1eeb8 <strcpy>
   11c12:	f104 0040 	add.w	r0, r4, #64	; 0x40
   11c16:	4944      	ldr	r1, [pc, #272]	; (11d28 <can_controller::enum_to_string()+0x12c>)
   11c18:	f00d f94e 	bl	1eeb8 <strcpy>
   11c1c:	f104 0060 	add.w	r0, r4, #96	; 0x60
   11c20:	4942      	ldr	r1, [pc, #264]	; (11d2c <can_controller::enum_to_string()+0x130>)
   11c22:	f00d f949 	bl	1eeb8 <strcpy>
   11c26:	f104 0080 	add.w	r0, r4, #128	; 0x80
   11c2a:	4941      	ldr	r1, [pc, #260]	; (11d30 <can_controller::enum_to_string()+0x134>)
   11c2c:	f00d f944 	bl	1eeb8 <strcpy>
   11c30:	f104 00a0 	add.w	r0, r4, #160	; 0xa0
   11c34:	493f      	ldr	r1, [pc, #252]	; (11d34 <can_controller::enum_to_string()+0x138>)
   11c36:	f00d f93f 	bl	1eeb8 <strcpy>
   11c3a:	f104 00c0 	add.w	r0, r4, #192	; 0xc0
   11c3e:	493e      	ldr	r1, [pc, #248]	; (11d38 <can_controller::enum_to_string()+0x13c>)
   11c40:	f00d f93a 	bl	1eeb8 <strcpy>
   11c44:	f104 00e0 	add.w	r0, r4, #224	; 0xe0
   11c48:	4c3c      	ldr	r4, [pc, #240]	; (11d3c <can_controller::enum_to_string()+0x140>)
   11c4a:	493d      	ldr	r1, [pc, #244]	; (11d40 <can_controller::enum_to_string()+0x144>)
   11c4c:	f00d f934 	bl	1eeb8 <strcpy>
   11c50:	f104 0020 	add.w	r0, r4, #32
   11c54:	493b      	ldr	r1, [pc, #236]	; (11d44 <can_controller::enum_to_string()+0x148>)
   11c56:	f00d f92f 	bl	1eeb8 <strcpy>
   11c5a:	f104 0040 	add.w	r0, r4, #64	; 0x40
   11c5e:	493a      	ldr	r1, [pc, #232]	; (11d48 <can_controller::enum_to_string()+0x14c>)
   11c60:	f00d f92a 	bl	1eeb8 <strcpy>
   11c64:	f104 0060 	add.w	r0, r4, #96	; 0x60
   11c68:	4938      	ldr	r1, [pc, #224]	; (11d4c <can_controller::enum_to_string()+0x150>)
   11c6a:	f00d f925 	bl	1eeb8 <strcpy>
   11c6e:	f104 0080 	add.w	r0, r4, #128	; 0x80
   11c72:	4937      	ldr	r1, [pc, #220]	; (11d50 <can_controller::enum_to_string()+0x154>)
   11c74:	f00d f920 	bl	1eeb8 <strcpy>
   11c78:	f104 00a0 	add.w	r0, r4, #160	; 0xa0
   11c7c:	4935      	ldr	r1, [pc, #212]	; (11d54 <can_controller::enum_to_string()+0x158>)
   11c7e:	f00d f91b 	bl	1eeb8 <strcpy>
   11c82:	f104 00c0 	add.w	r0, r4, #192	; 0xc0
   11c86:	4934      	ldr	r1, [pc, #208]	; (11d58 <can_controller::enum_to_string()+0x15c>)
   11c88:	f00d f916 	bl	1eeb8 <strcpy>
   11c8c:	f504 70c0 	add.w	r0, r4, #384	; 0x180
   11c90:	4932      	ldr	r1, [pc, #200]	; (11d5c <can_controller::enum_to_string()+0x160>)
   11c92:	f00d f911 	bl	1eeb8 <strcpy>
   11c96:	f504 7008 	add.w	r0, r4, #544	; 0x220
   11c9a:	4931      	ldr	r1, [pc, #196]	; (11d60 <can_controller::enum_to_string()+0x164>)
   11c9c:	f00d f90c 	bl	1eeb8 <strcpy>
   11ca0:	f504 70e0 	add.w	r0, r4, #448	; 0x1c0
   11ca4:	492f      	ldr	r1, [pc, #188]	; (11d64 <can_controller::enum_to_string()+0x168>)
   11ca6:	f00d f907 	bl	1eeb8 <strcpy>
   11caa:	f504 7010 	add.w	r0, r4, #576	; 0x240
   11cae:	492e      	ldr	r1, [pc, #184]	; (11d68 <can_controller::enum_to_string()+0x16c>)
   11cb0:	f00d f902 	bl	1eeb8 <strcpy>
   11cb4:	f504 70d0 	add.w	r0, r4, #416	; 0x1a0
   11cb8:	492c      	ldr	r1, [pc, #176]	; (11d6c <can_controller::enum_to_string()+0x170>)
   11cba:	f00d f8fd 	bl	1eeb8 <strcpy>
   11cbe:	f104 00e0 	add.w	r0, r4, #224	; 0xe0
   11cc2:	492b      	ldr	r1, [pc, #172]	; (11d70 <can_controller::enum_to_string()+0x174>)
   11cc4:	f00d f8f8 	bl	1eeb8 <strcpy>
   11cc8:	f504 7080 	add.w	r0, r4, #256	; 0x100
   11ccc:	4929      	ldr	r1, [pc, #164]	; (11d74 <can_controller::enum_to_string()+0x178>)
   11cce:	f00d f8f3 	bl	1eeb8 <strcpy>
   11cd2:	f504 70a0 	add.w	r0, r4, #320	; 0x140
   11cd6:	4928      	ldr	r1, [pc, #160]	; (11d78 <can_controller::enum_to_string()+0x17c>)
   11cd8:	f00d f8ee 	bl	1eeb8 <strcpy>
   11cdc:	f504 7000 	add.w	r0, r4, #512	; 0x200
   11ce0:	4926      	ldr	r1, [pc, #152]	; (11d7c <can_controller::enum_to_string()+0x180>)
   11ce2:	f00d f8e9 	bl	1eeb8 <strcpy>
   11ce6:	f504 70b0 	add.w	r0, r4, #352	; 0x160
   11cea:	4925      	ldr	r1, [pc, #148]	; (11d80 <can_controller::enum_to_string()+0x184>)
   11cec:	f00d f8e4 	bl	1eeb8 <strcpy>
   11cf0:	f504 70f0 	add.w	r0, r4, #480	; 0x1e0
   11cf4:	4923      	ldr	r1, [pc, #140]	; (11d84 <can_controller::enum_to_string()+0x188>)
   11cf6:	f00d f8df 	bl	1eeb8 <strcpy>
   11cfa:	f504 7090 	add.w	r0, r4, #288	; 0x120
   11cfe:	4922      	ldr	r1, [pc, #136]	; (11d88 <can_controller::enum_to_string()+0x18c>)
   11d00:	f00d f8da 	bl	1eeb8 <strcpy>
   11d04:	f504 7070 	add.w	r0, r4, #960	; 0x3c0
   11d08:	4920      	ldr	r1, [pc, #128]	; (11d8c <can_controller::enum_to_string()+0x190>)
   11d0a:	f00d f8d5 	bl	1eeb8 <strcpy>
   11d0e:	f504 7078 	add.w	r0, r4, #992	; 0x3e0
   11d12:	491f      	ldr	r1, [pc, #124]	; (11d90 <can_controller::enum_to_string()+0x194>)
   11d14:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   11d18:	f00d b8ce 	b.w	1eeb8 <strcpy>
   11d1c:	2007c61d 	.word	0x2007c61d
   11d20:	00024fd6 	.word	0x00024fd6
   11d24:	00024fe5 	.word	0x00024fe5
   11d28:	00024ff6 	.word	0x00024ff6
   11d2c:	00025008 	.word	0x00025008
   11d30:	0002501a 	.word	0x0002501a
   11d34:	00025029 	.word	0x00025029
   11d38:	0002503f 	.word	0x0002503f
   11d3c:	2007c21c 	.word	0x2007c21c
   11d40:	0002504d 	.word	0x0002504d
   11d44:	0002505e 	.word	0x0002505e
   11d48:	00025068 	.word	0x00025068
   11d4c:	00025078 	.word	0x00025078
   11d50:	0002508c 	.word	0x0002508c
   11d54:	0002509c 	.word	0x0002509c
   11d58:	000250aa 	.word	0x000250aa
   11d5c:	000250bc 	.word	0x000250bc
   11d60:	000250d1 	.word	0x000250d1
   11d64:	000250e7 	.word	0x000250e7
   11d68:	000250fc 	.word	0x000250fc
   11d6c:	00025112 	.word	0x00025112
   11d70:	00025129 	.word	0x00025129
   11d74:	00025137 	.word	0x00025137
   11d78:	00025146 	.word	0x00025146
   11d7c:	0002515d 	.word	0x0002515d
   11d80:	00025171 	.word	0x00025171
   11d84:	00025180 	.word	0x00025180
   11d88:	00025196 	.word	0x00025196
   11d8c:	000251a7 	.word	0x000251a7
   11d90:	000251b1 	.word	0x000251b1

00011d94 <can_controller::can_setup(can_msg_id_t*, unsigned int)>:
_ZN14can_controller9can_setupEP12can_msg_id_tj():
   11d94:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   11d98:	0053      	lsls	r3, r2, #1
   11d9a:	3307      	adds	r3, #7
   11d9c:	b085      	sub	sp, #20
   11d9e:	f023 0307 	bic.w	r3, r3, #7
   11da2:	2600      	movs	r6, #0
   11da4:	af04      	add	r7, sp, #16
   11da6:	460c      	mov	r4, r1
   11da8:	ebad 0d03 	sub.w	sp, sp, r3
   11dac:	2164      	movs	r1, #100	; 0x64
   11dae:	4615      	mov	r5, r2
   11db0:	9600      	str	r6, [sp, #0]
   11db2:	9601      	str	r6, [sp, #4]
   11db4:	4630      	mov	r0, r6
   11db6:	460a      	mov	r2, r1
   11db8:	460b      	mov	r3, r1
   11dba:	f10d 0810 	add.w	r8, sp, #16
   11dbe:	f007 fb8f 	bl	194e0 <CAN_init>
   11dc2:	2c00      	cmp	r4, #0
   11dc4:	d03d      	beq.n	11e42 <can_controller::can_setup(can_msg_id_t*, unsigned int)+0xae>
   11dc6:	b2b3      	uxth	r3, r6
   11dc8:	42ab      	cmp	r3, r5
   11dca:	f04f 0300 	mov.w	r3, #0
   11dce:	d219      	bcs.n	11e04 <can_controller::can_setup(can_msg_id_t*, unsigned int)+0x70>
   11dd0:	b29a      	uxth	r2, r3
   11dd2:	1e69      	subs	r1, r5, #1
   11dd4:	428a      	cmp	r2, r1
   11dd6:	d213      	bcs.n	11e00 <can_controller::can_setup(can_msg_id_t*, unsigned int)+0x6c>
   11dd8:	3201      	adds	r2, #1
   11dda:	0050      	lsls	r0, r2, #1
   11ddc:	f834 e000 	ldrh.w	lr, [r4, r0]
   11de0:	3802      	subs	r0, #2
   11de2:	5a21      	ldrh	r1, [r4, r0]
   11de4:	fa1f f98e 	uxth.w	r9, lr
   11de8:	fa1f fc81 	uxth.w	ip, r1
   11dec:	45e1      	cmp	r9, ip
   11dee:	bf38      	it	cc
   11df0:	f824 e000 	strhcc.w	lr, [r4, r0]
   11df4:	f103 0301 	add.w	r3, r3, #1
   11df8:	bf38      	it	cc
   11dfa:	f824 1012 	strhcc.w	r1, [r4, r2, lsl #1]
   11dfe:	e7e7      	b.n	11dd0 <can_controller::can_setup(can_msg_id_t*, unsigned int)+0x3c>
   11e00:	3601      	adds	r6, #1
   11e02:	e7e0      	b.n	11dc6 <can_controller::can_setup(can_msg_id_t*, unsigned int)+0x32>
   11e04:	b29e      	uxth	r6, r3
   11e06:	42ae      	cmp	r6, r5
   11e08:	f103 0901 	add.w	r9, r3, #1
   11e0c:	d20e      	bcs.n	11e2c <can_controller::can_setup(can_msg_id_t*, unsigned int)+0x98>
   11e0e:	f834 1016 	ldrh.w	r1, [r4, r6, lsl #1]
   11e12:	2000      	movs	r0, #0
   11e14:	f007 fcd2 	bl	197bc <CAN_gen_sid>
   11e18:	b200      	sxth	r0, r0
   11e1a:	f808 0016 	strb.w	r0, [r8, r6, lsl #1]
   11e1e:	f3c0 2007 	ubfx	r0, r0, #8, #8
   11e22:	eb08 0646 	add.w	r6, r8, r6, lsl #1
   11e26:	7070      	strb	r0, [r6, #1]
   11e28:	464b      	mov	r3, r9
   11e2a:	e7eb      	b.n	11e04 <can_controller::can_setup(can_msg_id_t*, unsigned int)+0x70>
   11e2c:	2200      	movs	r2, #0
   11e2e:	9200      	str	r2, [sp, #0]
   11e30:	9201      	str	r2, [sp, #4]
   11e32:	9202      	str	r2, [sp, #8]
   11e34:	9203      	str	r2, [sp, #12]
   11e36:	4640      	mov	r0, r8
   11e38:	b2a9      	uxth	r1, r5
   11e3a:	4613      	mov	r3, r2
   11e3c:	f007 fcd8 	bl	197f0 <CAN_setup_filter>
   11e40:	e001      	b.n	11e46 <can_controller::can_setup(can_msg_id_t*, unsigned int)+0xb2>
   11e42:	f007 fcb5 	bl	197b0 <CAN_bypass_filter_accept_all_msgs>
   11e46:	2000      	movs	r0, #0
   11e48:	f007 fca6 	bl	19798 <CAN_reset_bus>
   11e4c:	2001      	movs	r0, #1
   11e4e:	3704      	adds	r7, #4
   11e50:	46bd      	mov	sp, r7
   11e52:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

00011e56 <can_controller::can_controller(controller_id_t, can_msg_id_t*, unsigned int)>:
_ZN14can_controllerC1E15controller_id_tP12can_msg_id_tj():
   11e56:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   11e58:	2500      	movs	r5, #0
   11e5a:	4604      	mov	r4, r0
   11e5c:	4616      	mov	r6, r2
   11e5e:	461f      	mov	r7, r3
   11e60:	7001      	strb	r1, [r0, #0]
   11e62:	8045      	strh	r5, [r0, #2]
   11e64:	80c5      	strh	r5, [r0, #6]
   11e66:	f7ff fec9 	bl	11bfc <can_controller::enum_to_string()>
   11e6a:	4620      	mov	r0, r4
   11e6c:	4631      	mov	r1, r6
   11e6e:	463a      	mov	r2, r7
   11e70:	f7ff ff90 	bl	11d94 <can_controller::can_setup(can_msg_id_t*, unsigned int)>
   11e74:	4620      	mov	r0, r4
   11e76:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00011e78 <can_controller::get_rx_count()>:
_ZN14can_controller12get_rx_countEv():
   11e78:	8840      	ldrh	r0, [r0, #2]
   11e7a:	4770      	bx	lr

00011e7c <can_controller::get_rx_bytes()>:
_ZN14can_controller12get_rx_bytesEv():
   11e7c:	8880      	ldrh	r0, [r0, #4]
   11e7e:	4770      	bx	lr

00011e80 <can_controller::get_tx_count()>:
_ZN14can_controller12get_tx_countEv():
   11e80:	88c0      	ldrh	r0, [r0, #6]
   11e82:	4770      	bx	lr

00011e84 <can_controller::get_tx_bytes()>:
_ZN14can_controller12get_tx_bytesEv():
   11e84:	8900      	ldrh	r0, [r0, #8]
   11e86:	4770      	bx	lr

00011e88 <can_controller::processReset()>:
_ZN14can_controller12processResetEv():
   11e88:	b508      	push	{r3, lr}
   11e8a:	4806      	ldr	r0, [pc, #24]	; (11ea4 <can_controller::processReset()+0x1c>)
   11e8c:	f00c fd6e 	bl	1e96c <puts>
   11e90:	f006 fb84 	bl	1859c <logger_send_flush_request>
   11e94:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
   11e98:	22aa      	movs	r2, #170	; 0xaa
   11e9a:	721a      	strb	r2, [r3, #8]
   11e9c:	2200      	movs	r2, #0
   11e9e:	701a      	strb	r2, [r3, #0]
   11ea0:	bd08      	pop	{r3, pc}
   11ea2:	bf00      	nop
   11ea4:	000251bb 	.word	0x000251bb

00011ea8 <SingletonTemplate<LED>::getInstance()>:
_ZN17SingletonTemplateI3LEDE11getInstanceEv():
   11ea8:	b538      	push	{r3, r4, r5, lr}
   11eaa:	4c05      	ldr	r4, [pc, #20]	; (11ec0 <SingletonTemplate<LED>::getInstance()+0x18>)
   11eac:	6825      	ldr	r5, [r4, #0]
   11eae:	b925      	cbnz	r5, 11eba <SingletonTemplate<LED>::getInstance()+0x12>
   11eb0:	2001      	movs	r0, #1
   11eb2:	f7fe f9dd 	bl	10270 <operator new(unsigned int)>
   11eb6:	7005      	strb	r5, [r0, #0]
   11eb8:	6020      	str	r0, [r4, #0]
   11eba:	6820      	ldr	r0, [r4, #0]
   11ebc:	bd38      	pop	{r3, r4, r5, pc}
   11ebe:	bf00      	nop
   11ec0:	2007c218 	.word	0x2007c218

00011ec4 <can_controller::can_send(controller_id_t, msg_id_t, unsigned char*, unsigned short)>:
_ZN14can_controller8can_sendE15controller_id_t8msg_id_tPht():
   11ec4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   11ec8:	b088      	sub	sp, #32
   11eca:	4604      	mov	r4, r0
   11ecc:	4689      	mov	r9, r1
   11ece:	4690      	mov	r8, r2
   11ed0:	2100      	movs	r1, #0
   11ed2:	2210      	movs	r2, #16
   11ed4:	2600      	movs	r6, #0
   11ed6:	a804      	add	r0, sp, #16
   11ed8:	461f      	mov	r7, r3
   11eda:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
   11ede:	f00b ffc6 	bl	1de6e <memset>
   11ee2:	f8ad 600c 	strh.w	r6, [sp, #12]
   11ee6:	f7ff ffdf 	bl	11ea8 <SingletonTemplate<LED>::getInstance()>
   11eea:	4682      	mov	sl, r0
   11eec:	f7ff ffdc 	bl	11ea8 <SingletonTemplate<LED>::getInstance()>
   11ef0:	f003 f82b 	bl	14f4a <LED::getValues() const>
   11ef4:	f080 0204 	eor.w	r2, r0, #4
   11ef8:	2103      	movs	r1, #3
   11efa:	f3c2 0280 	ubfx	r2, r2, #2, #1
   11efe:	4650      	mov	r0, sl
   11f00:	f003 f81e 	bl	14f40 <LED::set(int, bool)>
   11f04:	f89d 300c 	ldrb.w	r3, [sp, #12]
   11f08:	7822      	ldrb	r2, [r4, #0]
   11f0a:	f362 0302 	bfi	r3, r2, #0, #3
   11f0e:	f369 03c5 	bfi	r3, r9, #3, #3
   11f12:	f88d 300c 	strb.w	r3, [sp, #12]
   11f16:	f8bd 100c 	ldrh.w	r1, [sp, #12]
   11f1a:	f89d 3013 	ldrb.w	r3, [sp, #19]
   11f1e:	f368 118a 	bfi	r1, r8, #6, #5
   11f22:	f8ad 100c 	strh.w	r1, [sp, #12]
   11f26:	f366 13c7 	bfi	r3, r6, #7, #1
   11f2a:	b289      	uxth	r1, r1
   11f2c:	9105      	str	r1, [sp, #20]
   11f2e:	f88d 3013 	strb.w	r3, [sp, #19]
   11f32:	2d00      	cmp	r5, #0
   11f34:	d073      	beq.n	1201e <can_controller::can_send(controller_id_t, msg_id_t, unsigned char*, unsigned short)+0x15a>
   11f36:	fa5f f885 	uxtb.w	r8, r5
   11f3a:	f88d 8018 	strb.w	r8, [sp, #24]
   11f3e:	4632      	mov	r2, r6
   11f40:	42aa      	cmp	r2, r5
   11f42:	46a9      	mov	r9, r5
   11f44:	f080 80af 	bcs.w	120a6 <can_controller::can_send(controller_id_t, msg_id_t, unsigned char*, unsigned short)+0x1e2>
   11f48:	1aa8      	subs	r0, r5, r2
   11f4a:	2807      	cmp	r0, #7
   11f4c:	f89d 3012 	ldrb.w	r3, [sp, #18]
   11f50:	d910      	bls.n	11f74 <can_controller::can_send(controller_id_t, msg_id_t, unsigned char*, unsigned short)+0xb0>
   11f52:	2108      	movs	r1, #8
   11f54:	f361 0303 	bfi	r3, r1, #0, #4
   11f58:	f88d 3012 	strb.w	r3, [sp, #18]
   11f5c:	2100      	movs	r1, #0
   11f5e:	18bb      	adds	r3, r7, r2
   11f60:	5c58      	ldrb	r0, [r3, r1]
   11f62:	ab04      	add	r3, sp, #16
   11f64:	440b      	add	r3, r1
   11f66:	3101      	adds	r1, #1
   11f68:	2907      	cmp	r1, #7
   11f6a:	7258      	strb	r0, [r3, #9]
   11f6c:	d1f7      	bne.n	11f5e <can_controller::can_send(controller_id_t, msg_id_t, unsigned char*, unsigned short)+0x9a>
   11f6e:	f102 0907 	add.w	r9, r2, #7
   11f72:	e014      	b.n	11f9e <can_controller::can_send(controller_id_t, msg_id_t, unsigned char*, unsigned short)+0xda>
   11f74:	f108 0101 	add.w	r1, r8, #1
   11f78:	1a89      	subs	r1, r1, r2
   11f7a:	f361 0303 	bfi	r3, r1, #0, #4
   11f7e:	f88d 3012 	strb.w	r3, [sp, #18]
   11f82:	2100      	movs	r1, #0
   11f84:	b28b      	uxth	r3, r1
   11f86:	4283      	cmp	r3, r0
   11f88:	f101 0101 	add.w	r1, r1, #1
   11f8c:	d207      	bcs.n	11f9e <can_controller::can_send(controller_id_t, msg_id_t, unsigned char*, unsigned short)+0xda>
   11f8e:	18be      	adds	r6, r7, r2
   11f90:	5cf6      	ldrb	r6, [r6, r3]
   11f92:	f10d 0e20 	add.w	lr, sp, #32
   11f96:	4473      	add	r3, lr
   11f98:	f803 6c07 	strb.w	r6, [r3, #-7]
   11f9c:	e7f2      	b.n	11f84 <can_controller::can_send(controller_id_t, msg_id_t, unsigned char*, unsigned short)+0xc0>
   11f9e:	2000      	movs	r0, #0
   11fa0:	a904      	add	r1, sp, #16
   11fa2:	f04f 32ff 	mov.w	r2, #4294967295
   11fa6:	f007 fba9 	bl	196fc <CAN_tx>
   11faa:	4e41      	ldr	r6, [pc, #260]	; (120b0 <can_controller::can_send(controller_id_t, msg_id_t, unsigned char*, unsigned short)+0x1ec>)
   11fac:	4682      	mov	sl, r0
   11fae:	b9c0      	cbnz	r0, 11fe2 <can_controller::can_send(controller_id_t, msg_id_t, unsigned char*, unsigned short)+0x11e>
   11fb0:	7833      	ldrb	r3, [r6, #0]
   11fb2:	f043 0304 	orr.w	r3, r3, #4
   11fb6:	7033      	strb	r3, [r6, #0]
   11fb8:	f7ff ff76 	bl	11ea8 <SingletonTemplate<LED>::getInstance()>
   11fbc:	2101      	movs	r1, #1
   11fbe:	f002 ffa9 	bl	14f14 <LED::on(int)>
   11fc2:	4b3c      	ldr	r3, [pc, #240]	; (120b4 <can_controller::can_send(controller_id_t, msg_id_t, unsigned char*, unsigned short)+0x1f0>)
   11fc4:	4a3c      	ldr	r2, [pc, #240]	; (120b8 <can_controller::can_send(controller_id_t, msg_id_t, unsigned char*, unsigned short)+0x1f4>)
   11fc6:	9300      	str	r3, [sp, #0]
   11fc8:	2002      	movs	r0, #2
   11fca:	2390      	movs	r3, #144	; 0x90
   11fcc:	493b      	ldr	r1, [pc, #236]	; (120bc <can_controller::can_send(controller_id_t, msg_id_t, unsigned char*, unsigned short)+0x1f8>)
   11fce:	f006 fb7b 	bl	186c8 <logger_log>
   11fd2:	7831      	ldrb	r1, [r6, #0]
   11fd4:	483a      	ldr	r0, [pc, #232]	; (120c0 <can_controller::can_send(controller_id_t, msg_id_t, unsigned char*, unsigned short)+0x1fc>)
   11fd6:	f00c fc51 	bl	1e87c <iprintf>
   11fda:	4650      	mov	r0, sl
   11fdc:	f007 fbdc 	bl	19798 <CAN_reset_bus>
   11fe0:	e01b      	b.n	1201a <can_controller::can_send(controller_id_t, msg_id_t, unsigned char*, unsigned short)+0x156>
   11fe2:	88e3      	ldrh	r3, [r4, #6]
   11fe4:	8922      	ldrh	r2, [r4, #8]
   11fe6:	3301      	adds	r3, #1
   11fe8:	80e3      	strh	r3, [r4, #6]
   11fea:	f89d 3012 	ldrb.w	r3, [sp, #18]
   11fee:	f003 030f 	and.w	r3, r3, #15
   11ff2:	4413      	add	r3, r2
   11ff4:	8123      	strh	r3, [r4, #8]
   11ff6:	7833      	ldrb	r3, [r6, #0]
   11ff8:	0759      	lsls	r1, r3, #29
   11ffa:	d50e      	bpl.n	1201a <can_controller::can_send(controller_id_t, msg_id_t, unsigned char*, unsigned short)+0x156>
   11ffc:	f003 03fb 	and.w	r3, r3, #251	; 0xfb
   12000:	7033      	strb	r3, [r6, #0]
   12002:	b12b      	cbz	r3, 12010 <can_controller::can_send(controller_id_t, msg_id_t, unsigned char*, unsigned short)+0x14c>
   12004:	f7ff ff50 	bl	11ea8 <SingletonTemplate<LED>::getInstance()>
   12008:	2101      	movs	r1, #1
   1200a:	f002 ff83 	bl	14f14 <LED::on(int)>
   1200e:	e004      	b.n	1201a <can_controller::can_send(controller_id_t, msg_id_t, unsigned char*, unsigned short)+0x156>
   12010:	f7ff ff4a 	bl	11ea8 <SingletonTemplate<LED>::getInstance()>
   12014:	2101      	movs	r1, #1
   12016:	f002 ff88 	bl	14f2a <LED::off(int)>
   1201a:	464a      	mov	r2, r9
   1201c:	e790      	b.n	11f40 <can_controller::can_send(controller_id_t, msg_id_t, unsigned char*, unsigned short)+0x7c>
   1201e:	f89d 3012 	ldrb.w	r3, [sp, #18]
   12022:	4628      	mov	r0, r5
   12024:	f365 0303 	bfi	r3, r5, #0, #4
   12028:	a904      	add	r1, sp, #16
   1202a:	f04f 32ff 	mov.w	r2, #4294967295
   1202e:	f88d 3012 	strb.w	r3, [sp, #18]
   12032:	f007 fb63 	bl	196fc <CAN_tx>
   12036:	4d1e      	ldr	r5, [pc, #120]	; (120b0 <can_controller::can_send(controller_id_t, msg_id_t, unsigned char*, unsigned short)+0x1ec>)
   12038:	4606      	mov	r6, r0
   1203a:	b9c0      	cbnz	r0, 1206e <can_controller::can_send(controller_id_t, msg_id_t, unsigned char*, unsigned short)+0x1aa>
   1203c:	782b      	ldrb	r3, [r5, #0]
   1203e:	f043 0304 	orr.w	r3, r3, #4
   12042:	702b      	strb	r3, [r5, #0]
   12044:	f7ff ff30 	bl	11ea8 <SingletonTemplate<LED>::getInstance()>
   12048:	2101      	movs	r1, #1
   1204a:	f002 ff63 	bl	14f14 <LED::on(int)>
   1204e:	4b19      	ldr	r3, [pc, #100]	; (120b4 <can_controller::can_send(controller_id_t, msg_id_t, unsigned char*, unsigned short)+0x1f0>)
   12050:	4a19      	ldr	r2, [pc, #100]	; (120b8 <can_controller::can_send(controller_id_t, msg_id_t, unsigned char*, unsigned short)+0x1f4>)
   12052:	9300      	str	r3, [sp, #0]
   12054:	2002      	movs	r0, #2
   12056:	23a4      	movs	r3, #164	; 0xa4
   12058:	4918      	ldr	r1, [pc, #96]	; (120bc <can_controller::can_send(controller_id_t, msg_id_t, unsigned char*, unsigned short)+0x1f8>)
   1205a:	f006 fb35 	bl	186c8 <logger_log>
   1205e:	7829      	ldrb	r1, [r5, #0]
   12060:	4817      	ldr	r0, [pc, #92]	; (120c0 <can_controller::can_send(controller_id_t, msg_id_t, unsigned char*, unsigned short)+0x1fc>)
   12062:	f00c fc0b 	bl	1e87c <iprintf>
   12066:	4630      	mov	r0, r6
   12068:	f007 fb96 	bl	19798 <CAN_reset_bus>
   1206c:	e01b      	b.n	120a6 <can_controller::can_send(controller_id_t, msg_id_t, unsigned char*, unsigned short)+0x1e2>
   1206e:	88e3      	ldrh	r3, [r4, #6]
   12070:	8922      	ldrh	r2, [r4, #8]
   12072:	3301      	adds	r3, #1
   12074:	80e3      	strh	r3, [r4, #6]
   12076:	f89d 3012 	ldrb.w	r3, [sp, #18]
   1207a:	f003 030f 	and.w	r3, r3, #15
   1207e:	4413      	add	r3, r2
   12080:	8123      	strh	r3, [r4, #8]
   12082:	782b      	ldrb	r3, [r5, #0]
   12084:	075a      	lsls	r2, r3, #29
   12086:	d50e      	bpl.n	120a6 <can_controller::can_send(controller_id_t, msg_id_t, unsigned char*, unsigned short)+0x1e2>
   12088:	f003 03fb 	and.w	r3, r3, #251	; 0xfb
   1208c:	702b      	strb	r3, [r5, #0]
   1208e:	b12b      	cbz	r3, 1209c <can_controller::can_send(controller_id_t, msg_id_t, unsigned char*, unsigned short)+0x1d8>
   12090:	f7ff ff0a 	bl	11ea8 <SingletonTemplate<LED>::getInstance()>
   12094:	2101      	movs	r1, #1
   12096:	f002 ff3d 	bl	14f14 <LED::on(int)>
   1209a:	e004      	b.n	120a6 <can_controller::can_send(controller_id_t, msg_id_t, unsigned char*, unsigned short)+0x1e2>
   1209c:	f7ff ff04 	bl	11ea8 <SingletonTemplate<LED>::getInstance()>
   120a0:	2101      	movs	r1, #1
   120a2:	f002 ff42 	bl	14f2a <LED::off(int)>
   120a6:	2001      	movs	r0, #1
   120a8:	b008      	add	sp, #32
   120aa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   120ae:	bf00      	nop
   120b0:	2007c61c 	.word	0x2007c61c
   120b4:	0002520d 	.word	0x0002520d
   120b8:	0002526a 	.word	0x0002526a
   120bc:	000251dc 	.word	0x000251dc
   120c0:	00025204 	.word	0x00025204

000120c4 <can_controller::can_recv(controller_id_t*, msg_id_t*, unsigned char*, unsigned short*)>:
_ZN14can_controller8can_recvEP15controller_id_tP8msg_id_tPhPt():
   120c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   120c8:	b089      	sub	sp, #36	; 0x24
   120ca:	4606      	mov	r6, r0
   120cc:	460f      	mov	r7, r1
   120ce:	4614      	mov	r4, r2
   120d0:	2100      	movs	r1, #0
   120d2:	2210      	movs	r2, #16
   120d4:	a804      	add	r0, sp, #16
   120d6:	469a      	mov	sl, r3
   120d8:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
   120dc:	f00b fec7 	bl	1de6e <memset>
   120e0:	2000      	movs	r0, #0
   120e2:	a904      	add	r1, sp, #16
   120e4:	f04f 32ff 	mov.w	r2, #4294967295
   120e8:	f007 fab4 	bl	19654 <CAN_rx>
   120ec:	4d61      	ldr	r5, [pc, #388]	; (12274 <can_controller::can_recv(controller_id_t*, msg_id_t*, unsigned char*, unsigned short*)+0x1b0>)
   120ee:	4680      	mov	r8, r0
   120f0:	b9c0      	cbnz	r0, 12124 <can_controller::can_recv(controller_id_t*, msg_id_t*, unsigned char*, unsigned short*)+0x60>
   120f2:	782b      	ldrb	r3, [r5, #0]
   120f4:	f043 0308 	orr.w	r3, r3, #8
   120f8:	702b      	strb	r3, [r5, #0]
   120fa:	f7ff fed5 	bl	11ea8 <SingletonTemplate<LED>::getInstance()>
   120fe:	2101      	movs	r1, #1
   12100:	f002 ff08 	bl	14f14 <LED::on(int)>
   12104:	4b5c      	ldr	r3, [pc, #368]	; (12278 <can_controller::can_recv(controller_id_t*, msg_id_t*, unsigned char*, unsigned short*)+0x1b4>)
   12106:	4a5d      	ldr	r2, [pc, #372]	; (1227c <can_controller::can_recv(controller_id_t*, msg_id_t*, unsigned char*, unsigned short*)+0x1b8>)
   12108:	9300      	str	r3, [sp, #0]
   1210a:	2002      	movs	r0, #2
   1210c:	23bb      	movs	r3, #187	; 0xbb
   1210e:	495c      	ldr	r1, [pc, #368]	; (12280 <can_controller::can_recv(controller_id_t*, msg_id_t*, unsigned char*, unsigned short*)+0x1bc>)
   12110:	f006 fada 	bl	186c8 <logger_log>
   12114:	7829      	ldrb	r1, [r5, #0]
   12116:	485b      	ldr	r0, [pc, #364]	; (12284 <can_controller::can_recv(controller_id_t*, msg_id_t*, unsigned char*, unsigned short*)+0x1c0>)
   12118:	f00c fbb0 	bl	1e87c <iprintf>
   1211c:	4640      	mov	r0, r8
   1211e:	f007 fb3b 	bl	19798 <CAN_reset_bus>
   12122:	e0a2      	b.n	1226a <can_controller::can_recv(controller_id_t*, msg_id_t*, unsigned char*, unsigned short*)+0x1a6>
   12124:	8873      	ldrh	r3, [r6, #2]
   12126:	3301      	adds	r3, #1
   12128:	8073      	strh	r3, [r6, #2]
   1212a:	782b      	ldrb	r3, [r5, #0]
   1212c:	0719      	lsls	r1, r3, #28
   1212e:	d50e      	bpl.n	1214e <can_controller::can_recv(controller_id_t*, msg_id_t*, unsigned char*, unsigned short*)+0x8a>
   12130:	f003 03f7 	and.w	r3, r3, #247	; 0xf7
   12134:	702b      	strb	r3, [r5, #0]
   12136:	b12b      	cbz	r3, 12144 <can_controller::can_recv(controller_id_t*, msg_id_t*, unsigned char*, unsigned short*)+0x80>
   12138:	f7ff feb6 	bl	11ea8 <SingletonTemplate<LED>::getInstance()>
   1213c:	2101      	movs	r1, #1
   1213e:	f002 fee9 	bl	14f14 <LED::on(int)>
   12142:	e004      	b.n	1214e <can_controller::can_recv(controller_id_t*, msg_id_t*, unsigned char*, unsigned short*)+0x8a>
   12144:	f7ff feb0 	bl	11ea8 <SingletonTemplate<LED>::getInstance()>
   12148:	2101      	movs	r1, #1
   1214a:	f002 feee 	bl	14f2a <LED::off(int)>
   1214e:	f7ff feab 	bl	11ea8 <SingletonTemplate<LED>::getInstance()>
   12152:	4683      	mov	fp, r0
   12154:	f7ff fea8 	bl	11ea8 <SingletonTemplate<LED>::getInstance()>
   12158:	f002 fef7 	bl	14f4a <LED::getValues() const>
   1215c:	f080 0202 	eor.w	r2, r0, #2
   12160:	f3c2 0240 	ubfx	r2, r2, #1, #1
   12164:	4658      	mov	r0, fp
   12166:	2102      	movs	r1, #2
   12168:	f002 feea 	bl	14f40 <LED::set(int, bool)>
   1216c:	9b05      	ldr	r3, [sp, #20]
   1216e:	f003 0207 	and.w	r2, r3, #7
   12172:	f8ad 300c 	strh.w	r3, [sp, #12]
   12176:	f3c3 1384 	ubfx	r3, r3, #6, #5
   1217a:	703a      	strb	r2, [r7, #0]
   1217c:	7023      	strb	r3, [r4, #0]
   1217e:	f89d 4012 	ldrb.w	r4, [sp, #18]
   12182:	88b3      	ldrh	r3, [r6, #4]
   12184:	f004 040f 	and.w	r4, r4, #15
   12188:	4423      	add	r3, r4
   1218a:	80b3      	strh	r3, [r6, #4]
   1218c:	2c00      	cmp	r4, #0
   1218e:	d06a      	beq.n	12266 <can_controller::can_recv(controller_id_t*, msg_id_t*, unsigned char*, unsigned short*)+0x1a2>
   12190:	f89d 7018 	ldrb.w	r7, [sp, #24]
   12194:	f8b9 3000 	ldrh.w	r3, [r9]
   12198:	42bb      	cmp	r3, r7
   1219a:	d301      	bcc.n	121a0 <can_controller::can_recv(controller_id_t*, msg_id_t*, unsigned char*, unsigned short*)+0xdc>
   1219c:	2400      	movs	r4, #0
   1219e:	e017      	b.n	121d0 <can_controller::can_recv(controller_id_t*, msg_id_t*, unsigned char*, unsigned short*)+0x10c>
   121a0:	4839      	ldr	r0, [pc, #228]	; (12288 <can_controller::can_recv(controller_id_t*, msg_id_t*, unsigned char*, unsigned short*)+0x1c4>)
   121a2:	f00c fbe3 	bl	1e96c <puts>
   121a6:	f04f 0800 	mov.w	r8, #0
   121aa:	e05e      	b.n	1226a <can_controller::can_recv(controller_id_t*, msg_id_t*, unsigned char*, unsigned short*)+0x1a6>
   121ac:	1b39      	subs	r1, r7, r4
   121ae:	2907      	cmp	r1, #7
   121b0:	f04f 0200 	mov.w	r2, #0
   121b4:	dd0f      	ble.n	121d6 <can_controller::can_recv(controller_id_t*, msg_id_t*, unsigned char*, unsigned short*)+0x112>
   121b6:	ab04      	add	r3, sp, #16
   121b8:	4413      	add	r3, r2
   121ba:	7a59      	ldrb	r1, [r3, #9]
   121bc:	eb0a 0304 	add.w	r3, sl, r4
   121c0:	5499      	strb	r1, [r3, r2]
   121c2:	3201      	adds	r2, #1
   121c4:	2a07      	cmp	r2, #7
   121c6:	d1f6      	bne.n	121b6 <can_controller::can_recv(controller_id_t*, msg_id_t*, unsigned char*, unsigned short*)+0xf2>
   121c8:	3407      	adds	r4, #7
   121ca:	b2a4      	uxth	r4, r4
   121cc:	42bc      	cmp	r4, r7
   121ce:	d312      	bcc.n	121f6 <can_controller::can_recv(controller_id_t*, msg_id_t*, unsigned char*, unsigned short*)+0x132>
   121d0:	42bc      	cmp	r4, r7
   121d2:	d3eb      	bcc.n	121ac <can_controller::can_recv(controller_id_t*, msg_id_t*, unsigned char*, unsigned short*)+0xe8>
   121d4:	e047      	b.n	12266 <can_controller::can_recv(controller_id_t*, msg_id_t*, unsigned char*, unsigned short*)+0x1a2>
   121d6:	b293      	uxth	r3, r2
   121d8:	428b      	cmp	r3, r1
   121da:	f102 0201 	add.w	r2, r2, #1
   121de:	da08      	bge.n	121f2 <can_controller::can_recv(controller_id_t*, msg_id_t*, unsigned char*, unsigned short*)+0x12e>
   121e0:	a808      	add	r0, sp, #32
   121e2:	4418      	add	r0, r3
   121e4:	f810 cc07 	ldrb.w	ip, [r0, #-7]
   121e8:	eb0a 0004 	add.w	r0, sl, r4
   121ec:	f800 c003 	strb.w	ip, [r0, r3]
   121f0:	e7f1      	b.n	121d6 <can_controller::can_recv(controller_id_t*, msg_id_t*, unsigned char*, unsigned short*)+0x112>
   121f2:	463c      	mov	r4, r7
   121f4:	e7ec      	b.n	121d0 <can_controller::can_recv(controller_id_t*, msg_id_t*, unsigned char*, unsigned short*)+0x10c>
   121f6:	2000      	movs	r0, #0
   121f8:	a904      	add	r1, sp, #16
   121fa:	f04f 32ff 	mov.w	r2, #4294967295
   121fe:	f007 fa29 	bl	19654 <CAN_rx>
   12202:	4683      	mov	fp, r0
   12204:	b9c0      	cbnz	r0, 12238 <can_controller::can_recv(controller_id_t*, msg_id_t*, unsigned char*, unsigned short*)+0x174>
   12206:	782b      	ldrb	r3, [r5, #0]
   12208:	f043 0308 	orr.w	r3, r3, #8
   1220c:	702b      	strb	r3, [r5, #0]
   1220e:	f7ff fe4b 	bl	11ea8 <SingletonTemplate<LED>::getInstance()>
   12212:	2101      	movs	r1, #1
   12214:	f002 fe7e 	bl	14f14 <LED::on(int)>
   12218:	4b17      	ldr	r3, [pc, #92]	; (12278 <can_controller::can_recv(controller_id_t*, msg_id_t*, unsigned char*, unsigned short*)+0x1b4>)
   1221a:	4a18      	ldr	r2, [pc, #96]	; (1227c <can_controller::can_recv(controller_id_t*, msg_id_t*, unsigned char*, unsigned short*)+0x1b8>)
   1221c:	9300      	str	r3, [sp, #0]
   1221e:	2002      	movs	r0, #2
   12220:	23ef      	movs	r3, #239	; 0xef
   12222:	4917      	ldr	r1, [pc, #92]	; (12280 <can_controller::can_recv(controller_id_t*, msg_id_t*, unsigned char*, unsigned short*)+0x1bc>)
   12224:	f006 fa50 	bl	186c8 <logger_log>
   12228:	7829      	ldrb	r1, [r5, #0]
   1222a:	4816      	ldr	r0, [pc, #88]	; (12284 <can_controller::can_recv(controller_id_t*, msg_id_t*, unsigned char*, unsigned short*)+0x1c0>)
   1222c:	f00c fb26 	bl	1e87c <iprintf>
   12230:	4658      	mov	r0, fp
   12232:	f007 fab1 	bl	19798 <CAN_reset_bus>
   12236:	e7cb      	b.n	121d0 <can_controller::can_recv(controller_id_t*, msg_id_t*, unsigned char*, unsigned short*)+0x10c>
   12238:	8873      	ldrh	r3, [r6, #2]
   1223a:	3301      	adds	r3, #1
   1223c:	8073      	strh	r3, [r6, #2]
   1223e:	782b      	ldrb	r3, [r5, #0]
   12240:	071a      	lsls	r2, r3, #28
   12242:	d5c5      	bpl.n	121d0 <can_controller::can_recv(controller_id_t*, msg_id_t*, unsigned char*, unsigned short*)+0x10c>
   12244:	4a0b      	ldr	r2, [pc, #44]	; (12274 <can_controller::can_recv(controller_id_t*, msg_id_t*, unsigned char*, unsigned short*)+0x1b0>)
   12246:	f003 03f7 	and.w	r3, r3, #247	; 0xf7
   1224a:	7013      	strb	r3, [r2, #0]
   1224c:	b12b      	cbz	r3, 1225a <can_controller::can_recv(controller_id_t*, msg_id_t*, unsigned char*, unsigned short*)+0x196>
   1224e:	f7ff fe2b 	bl	11ea8 <SingletonTemplate<LED>::getInstance()>
   12252:	2101      	movs	r1, #1
   12254:	f002 fe5e 	bl	14f14 <LED::on(int)>
   12258:	e7ba      	b.n	121d0 <can_controller::can_recv(controller_id_t*, msg_id_t*, unsigned char*, unsigned short*)+0x10c>
   1225a:	f7ff fe25 	bl	11ea8 <SingletonTemplate<LED>::getInstance()>
   1225e:	2101      	movs	r1, #1
   12260:	f002 fe63 	bl	14f2a <LED::off(int)>
   12264:	e7b4      	b.n	121d0 <can_controller::can_recv(controller_id_t*, msg_id_t*, unsigned char*, unsigned short*)+0x10c>
   12266:	f8a9 4000 	strh.w	r4, [r9]
   1226a:	4640      	mov	r0, r8
   1226c:	b009      	add	sp, #36	; 0x24
   1226e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12272:	bf00      	nop
   12274:	2007c61c 	.word	0x2007c61c
   12278:	00025225 	.word	0x00025225
   1227c:	00025261 	.word	0x00025261
   12280:	000251dc 	.word	0x000251dc
   12284:	0002521c 	.word	0x0002521c
   12288:	00025234 	.word	0x00025234

0001228c <can_controller::processBootSequence(unsigned char)>:
_ZN14can_controller19processBootSequenceEh():
   1228c:	b570      	push	{r4, r5, r6, lr}
   1228e:	b08c      	sub	sp, #48	; 0x30
   12290:	460e      	mov	r6, r1
   12292:	4604      	mov	r4, r0
   12294:	f7ff fe08 	bl	11ea8 <SingletonTemplate<LED>::getInstance()>
   12298:	2104      	movs	r1, #4
   1229a:	f002 fe3b 	bl	14f14 <LED::on(int)>
   1229e:	2320      	movs	r3, #32
   122a0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
   122a4:	ab0b      	add	r3, sp, #44	; 0x2c
   122a6:	9300      	str	r3, [sp, #0]
   122a8:	4620      	mov	r0, r4
   122aa:	a902      	add	r1, sp, #8
   122ac:	f10d 0209 	add.w	r2, sp, #9
   122b0:	ab03      	add	r3, sp, #12
   122b2:	f7ff ff07 	bl	120c4 <can_controller::can_recv(controller_id_t*, msg_id_t*, unsigned char*, unsigned short*)>
   122b6:	f89d 5009 	ldrb.w	r5, [sp, #9]
   122ba:	2d02      	cmp	r5, #2
   122bc:	d110      	bne.n	122e0 <can_controller::processBootSequence(unsigned char)+0x54>
   122be:	7823      	ldrb	r3, [r4, #0]
   122c0:	200a      	movs	r0, #10
   122c2:	4358      	muls	r0, r3
   122c4:	f006 ffe0 	bl	19288 <delay_ms>
   122c8:	2301      	movs	r3, #1
   122ca:	9300      	str	r3, [sp, #0]
   122cc:	f89d 1008 	ldrb.w	r1, [sp, #8]
   122d0:	4620      	mov	r0, r4
   122d2:	2203      	movs	r2, #3
   122d4:	ab03      	add	r3, sp, #12
   122d6:	f88d 600c 	strb.w	r6, [sp, #12]
   122da:	f7ff fdf3 	bl	11ec4 <can_controller::can_send(controller_id_t, msg_id_t, unsigned char*, unsigned short)>
   122de:	e7de      	b.n	1229e <can_controller::processBootSequence(unsigned char)+0x12>
   122e0:	2d04      	cmp	r5, #4
   122e2:	d105      	bne.n	122f0 <can_controller::processBootSequence(unsigned char)+0x64>
   122e4:	f7ff fde0 	bl	11ea8 <SingletonTemplate<LED>::getInstance()>
   122e8:	4629      	mov	r1, r5
   122ea:	f002 fe1e 	bl	14f2a <LED::off(int)>
   122ee:	e004      	b.n	122fa <can_controller::processBootSequence(unsigned char)+0x6e>
   122f0:	2d01      	cmp	r5, #1
   122f2:	d1d4      	bne.n	1229e <can_controller::processBootSequence(unsigned char)+0x12>
   122f4:	4620      	mov	r0, r4
   122f6:	f7ff fdc7 	bl	11e88 <can_controller::processReset()>
   122fa:	2001      	movs	r0, #1
   122fc:	b00c      	add	sp, #48	; 0x30
   122fe:	bd70      	pop	{r4, r5, r6, pc}

00012300 <scheduler_task::~scheduler_task()>:
_ZN14scheduler_taskD2Ev():
   12300:	4b01      	ldr	r3, [pc, #4]	; (12308 <scheduler_task::~scheduler_task()+0x8>)
   12302:	6003      	str	r3, [r0, #0]
   12304:	4770      	bx	lr
   12306:	bf00      	nop
   12308:	000252d8 	.word	0x000252d8

0001230c <scheduler_task::init()>:
_ZN14scheduler_task4initEv():
   1230c:	2001      	movs	r0, #1
   1230e:	4770      	bx	lr

00012310 <scheduler_task::regTlm()>:
_ZN14scheduler_task6regTlmEv():
   12310:	2001      	movs	r0, #1
   12312:	4770      	bx	lr

00012314 <scheduler_task::taskEntry()>:
_ZN14scheduler_task9taskEntryEv():
   12314:	2001      	movs	r0, #1
   12316:	4770      	bx	lr

00012318 <debugTask::~debugTask()>:
_ZN9debugTaskD1Ev():
   12318:	4b01      	ldr	r3, [pc, #4]	; (12320 <debugTask::~debugTask()+0x8>)
   1231a:	6003      	str	r3, [r0, #0]
   1231c:	4770      	bx	lr
   1231e:	bf00      	nop
   12320:	000252d8 	.word	0x000252d8

00012324 <periodicEncoderTask::~periodicEncoderTask()>:
_ZN19periodicEncoderTaskD1Ev():
   12324:	4b01      	ldr	r3, [pc, #4]	; (1232c <periodicEncoderTask::~periodicEncoderTask()+0x8>)
   12326:	6003      	str	r3, [r0, #0]
   12328:	4770      	bx	lr
   1232a:	bf00      	nop
   1232c:	000252d8 	.word	0x000252d8

00012330 <canRxProcessTask::~canRxProcessTask()>:
_ZN16canRxProcessTaskD2Ev():
   12330:	4b01      	ldr	r3, [pc, #4]	; (12338 <canRxProcessTask::~canRxProcessTask()+0x8>)
   12332:	6003      	str	r3, [r0, #0]
   12334:	4770      	bx	lr
   12336:	bf00      	nop
   12338:	000252d8 	.word	0x000252d8

0001233c <canRxBufferTask::~canRxBufferTask()>:
_ZN15canRxBufferTaskD2Ev():
   1233c:	4b01      	ldr	r3, [pc, #4]	; (12344 <canRxBufferTask::~canRxBufferTask()+0x8>)
   1233e:	6003      	str	r3, [r0, #0]
   12340:	4770      	bx	lr
   12342:	bf00      	nop
   12344:	000252d8 	.word	0x000252d8

00012348 <scheduler_task::~scheduler_task()>:
_ZN14scheduler_taskD0Ev():
   12348:	b510      	push	{r4, lr}
   1234a:	4b03      	ldr	r3, [pc, #12]	; (12358 <scheduler_task::~scheduler_task()+0x10>)
   1234c:	4604      	mov	r4, r0
   1234e:	6003      	str	r3, [r0, #0]
   12350:	f7fd ff90 	bl	10274 <operator delete(void*)>
   12354:	4620      	mov	r0, r4
   12356:	bd10      	pop	{r4, pc}
   12358:	000252d8 	.word	0x000252d8

0001235c <debugTask::~debugTask()>:
_ZN9debugTaskD0Ev():
   1235c:	b510      	push	{r4, lr}
   1235e:	4b03      	ldr	r3, [pc, #12]	; (1236c <debugTask::~debugTask()+0x10>)
   12360:	4604      	mov	r4, r0
   12362:	6003      	str	r3, [r0, #0]
   12364:	f7fd ff86 	bl	10274 <operator delete(void*)>
   12368:	4620      	mov	r0, r4
   1236a:	bd10      	pop	{r4, pc}
   1236c:	000252d8 	.word	0x000252d8

00012370 <periodicEncoderTask::~periodicEncoderTask()>:
_ZN19periodicEncoderTaskD0Ev():
   12370:	b510      	push	{r4, lr}
   12372:	4b03      	ldr	r3, [pc, #12]	; (12380 <periodicEncoderTask::~periodicEncoderTask()+0x10>)
   12374:	4604      	mov	r4, r0
   12376:	6003      	str	r3, [r0, #0]
   12378:	f7fd ff7c 	bl	10274 <operator delete(void*)>
   1237c:	4620      	mov	r0, r4
   1237e:	bd10      	pop	{r4, pc}
   12380:	000252d8 	.word	0x000252d8

00012384 <canRxProcessTask::~canRxProcessTask()>:
_ZN16canRxProcessTaskD0Ev():
   12384:	b510      	push	{r4, lr}
   12386:	4b03      	ldr	r3, [pc, #12]	; (12394 <canRxProcessTask::~canRxProcessTask()+0x10>)
   12388:	4604      	mov	r4, r0
   1238a:	6003      	str	r3, [r0, #0]
   1238c:	f7fd ff72 	bl	10274 <operator delete(void*)>
   12390:	4620      	mov	r0, r4
   12392:	bd10      	pop	{r4, pc}
   12394:	000252d8 	.word	0x000252d8

00012398 <canRxBufferTask::~canRxBufferTask()>:
_ZN15canRxBufferTaskD0Ev():
   12398:	b510      	push	{r4, lr}
   1239a:	4b03      	ldr	r3, [pc, #12]	; (123a8 <canRxBufferTask::~canRxBufferTask()+0x10>)
   1239c:	4604      	mov	r4, r0
   1239e:	6003      	str	r3, [r0, #0]
   123a0:	f7fd ff68 	bl	10274 <operator delete(void*)>
   123a4:	4620      	mov	r0, r4
   123a6:	bd10      	pop	{r4, pc}
   123a8:	000252d8 	.word	0x000252d8

000123ac <periodicEncoderTask::run(void*)>:
_ZN19periodicEncoderTask3runEPv():
   123ac:	b507      	push	{r0, r1, r2, lr}
   123ae:	2303      	movs	r3, #3
   123b0:	9300      	str	r3, [sp, #0]
   123b2:	2100      	movs	r1, #0
   123b4:	220d      	movs	r2, #13
   123b6:	4b04      	ldr	r3, [pc, #16]	; (123c8 <periodicEncoderTask::run(void*)+0x1c>)
   123b8:	4804      	ldr	r0, [pc, #16]	; (123cc <periodicEncoderTask::run(void*)+0x20>)
   123ba:	f7ff fd83 	bl	11ec4 <can_controller::can_send(controller_id_t, msg_id_t, unsigned char*, unsigned short)>
   123be:	2001      	movs	r0, #1
   123c0:	b003      	add	sp, #12
   123c2:	f85d fb04 	ldr.w	pc, [sp], #4
   123c6:	bf00      	nop
   123c8:	2007c73a 	.word	0x2007c73a
   123cc:	2007c730 	.word	0x2007c730

000123d0 <canRxBufferTask::canRxBufferTask(unsigned char)>:
_ZN15canRxBufferTaskC1Eh():
   123d0:	b513      	push	{r0, r1, r4, lr}
   123d2:	2200      	movs	r2, #0
   123d4:	460b      	mov	r3, r1
   123d6:	9200      	str	r2, [sp, #0]
   123d8:	4905      	ldr	r1, [pc, #20]	; (123f0 <canRxBufferTask::canRxBufferTask(unsigned char)+0x20>)
   123da:	f44f 6280 	mov.w	r2, #1024	; 0x400
   123de:	4604      	mov	r4, r0
   123e0:	f006 fc94 	bl	18d0c <scheduler_task::scheduler_task(char const*, unsigned long, unsigned char, void*)>
   123e4:	4b03      	ldr	r3, [pc, #12]	; (123f4 <canRxBufferTask::canRxBufferTask(unsigned char)+0x24>)
   123e6:	4620      	mov	r0, r4
   123e8:	6023      	str	r3, [r4, #0]
   123ea:	b002      	add	sp, #8
   123ec:	bd10      	pop	{r4, pc}
   123ee:	bf00      	nop
   123f0:	0002535c 	.word	0x0002535c
   123f4:	00025430 	.word	0x00025430

000123f8 <canRxProcessTask::canRxProcessTask(unsigned char)>:
_ZN16canRxProcessTaskC2Eh():
   123f8:	b513      	push	{r0, r1, r4, lr}
   123fa:	2200      	movs	r2, #0
   123fc:	460b      	mov	r3, r1
   123fe:	9200      	str	r2, [sp, #0]
   12400:	4906      	ldr	r1, [pc, #24]	; (1241c <canRxProcessTask::canRxProcessTask(unsigned char)+0x24>)
   12402:	f44f 6280 	mov.w	r2, #1024	; 0x400
   12406:	4604      	mov	r4, r0
   12408:	f006 fc80 	bl	18d0c <scheduler_task::scheduler_task(char const*, unsigned long, unsigned char, void*)>
   1240c:	4b04      	ldr	r3, [pc, #16]	; (12420 <canRxProcessTask::canRxProcessTask(unsigned char)+0x28>)
   1240e:	6023      	str	r3, [r4, #0]
   12410:	f000 fbf8 	bl	12c04 <motorInit()>
   12414:	4620      	mov	r0, r4
   12416:	b002      	add	sp, #8
   12418:	bd10      	pop	{r4, pc}
   1241a:	bf00      	nop
   1241c:	0002536c 	.word	0x0002536c
   12420:	00025338 	.word	0x00025338

00012424 <canRxProcessTask::handle_heartbeat(msg_t)>:
_ZN16canRxProcessTask16handle_heartbeatE5msg_t():
   12424:	b084      	sub	sp, #16
   12426:	b51f      	push	{r0, r1, r2, r3, r4, lr}
   12428:	4c18      	ldr	r4, [pc, #96]	; (1248c <canRxProcessTask::handle_heartbeat(msg_t)+0x68>)
   1242a:	a807      	add	r0, sp, #28
   1242c:	e880 000e 	stmia.w	r0, {r1, r2, r3}
   12430:	4620      	mov	r0, r4
   12432:	f7ff fd21 	bl	11e78 <can_controller::get_rx_count()>
   12436:	f8ad 0008 	strh.w	r0, [sp, #8]
   1243a:	4620      	mov	r0, r4
   1243c:	f7ff fd1e 	bl	11e7c <can_controller::get_rx_bytes()>
   12440:	f8ad 000a 	strh.w	r0, [sp, #10]
   12444:	4620      	mov	r0, r4
   12446:	f7ff fd1b 	bl	11e80 <can_controller::get_tx_count()>
   1244a:	f8ad 000c 	strh.w	r0, [sp, #12]
   1244e:	4620      	mov	r0, r4
   12450:	f7ff fd18 	bl	11e84 <can_controller::get_tx_bytes()>
   12454:	f8ad 000e 	strh.w	r0, [sp, #14]
   12458:	200a      	movs	r0, #10
   1245a:	f009 f845 	bl	1b4e8 <vTaskDelay>
   1245e:	2308      	movs	r3, #8
   12460:	9300      	str	r3, [sp, #0]
   12462:	4620      	mov	r0, r4
   12464:	446b      	add	r3, sp
   12466:	2102      	movs	r1, #2
   12468:	2206      	movs	r2, #6
   1246a:	f7ff fd2b 	bl	11ec4 <can_controller::can_send(controller_id_t, msg_id_t, unsigned char*, unsigned short)>
   1246e:	4b08      	ldr	r3, [pc, #32]	; (12490 <canRxProcessTask::handle_heartbeat(msg_t)+0x6c>)
   12470:	2264      	movs	r2, #100	; 0x64
   12472:	7819      	ldrb	r1, [r3, #0]
   12474:	3101      	adds	r1, #1
   12476:	fb91 f0f2 	sdiv	r0, r1, r2
   1247a:	fb02 1210 	mls	r2, r2, r0, r1
   1247e:	2001      	movs	r0, #1
   12480:	701a      	strb	r2, [r3, #0]
   12482:	b004      	add	sp, #16
   12484:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   12488:	b004      	add	sp, #16
   1248a:	4770      	bx	lr
   1248c:	2007c730 	.word	0x2007c730
   12490:	2007c728 	.word	0x2007c728

00012494 <canRxProcessTask::handle_speed_dir_command(msg_t)>:
_ZN16canRxProcessTask24handle_speed_dir_commandE5msg_t():
   12494:	b084      	sub	sp, #16
   12496:	b570      	push	{r4, r5, r6, lr}
   12498:	a805      	add	r0, sp, #20
   1249a:	e880 000e 	stmia.w	r0, {r1, r2, r3}
   1249e:	aa04      	add	r2, sp, #16
   124a0:	4b6f      	ldr	r3, [pc, #444]	; (12660 <canRxProcessTask::handle_speed_dir_command(msg_t)+0x1cc>)
   124a2:	f832 0f08 	ldrh.w	r0, [r2, #8]!
   124a6:	461d      	mov	r5, r3
   124a8:	8018      	strh	r0, [r3, #0]
   124aa:	7891      	ldrb	r1, [r2, #2]
   124ac:	486d      	ldr	r0, [pc, #436]	; (12664 <canRxProcessTask::handle_speed_dir_command(msg_t)+0x1d0>)
   124ae:	781a      	ldrb	r2, [r3, #0]
   124b0:	2901      	cmp	r1, #1
   124b2:	6002      	str	r2, [r0, #0]
   124b4:	486c      	ldr	r0, [pc, #432]	; (12668 <canRxProcessTask::handle_speed_dir_command(msg_t)+0x1d4>)
   124b6:	7099      	strb	r1, [r3, #2]
   124b8:	6001      	str	r1, [r0, #0]
   124ba:	d148      	bne.n	1254e <canRxProcessTask::handle_speed_dir_command(msg_t)+0xba>
   124bc:	4b6b      	ldr	r3, [pc, #428]	; (1266c <canRxProcessTask::handle_speed_dir_command(msg_t)+0x1d8>)
   124be:	2100      	movs	r1, #0
   124c0:	7099      	strb	r1, [r3, #2]
   124c2:	1e53      	subs	r3, r2, #1
   124c4:	2b04      	cmp	r3, #4
   124c6:	d83f      	bhi.n	12548 <canRxProcessTask::handle_speed_dir_command(msg_t)+0xb4>
   124c8:	e8df f003 	tbb	[pc, r3]
   124cc:	2916033c 	.word	0x2916033c
   124d0:	3e          	.byte	0x3e
   124d1:	00          	.byte	0x00
   124d2:	4b67      	ldr	r3, [pc, #412]	; (12670 <canRxProcessTask::handle_speed_dir_command(msg_t)+0x1dc>)
   124d4:	4c67      	ldr	r4, [pc, #412]	; (12674 <canRxProcessTask::handle_speed_dir_command(msg_t)+0x1e0>)
   124d6:	681b      	ldr	r3, [r3, #0]
   124d8:	2603      	movs	r6, #3
   124da:	6023      	str	r3, [r4, #0]
   124dc:	6820      	ldr	r0, [r4, #0]
   124de:	f000 fbb7 	bl	12c50 <pwm_dcmotor(float)>
   124e2:	6820      	ldr	r0, [r4, #0]
   124e4:	4964      	ldr	r1, [pc, #400]	; (12678 <canRxProcessTask::handle_speed_dir_command(msg_t)+0x1e4>)
   124e6:	f00a fd37 	bl	1cf58 <__addsf3>
   124ea:	6020      	str	r0, [r4, #0]
   124ec:	200a      	movs	r0, #10
   124ee:	f006 fecb 	bl	19288 <delay_ms>
   124f2:	3e01      	subs	r6, #1
   124f4:	d1f2      	bne.n	124dc <canRxProcessTask::handle_speed_dir_command(msg_t)+0x48>
   124f6:	e02a      	b.n	1254e <canRxProcessTask::handle_speed_dir_command(msg_t)+0xba>
   124f8:	4b5d      	ldr	r3, [pc, #372]	; (12670 <canRxProcessTask::handle_speed_dir_command(msg_t)+0x1dc>)
   124fa:	4c5e      	ldr	r4, [pc, #376]	; (12674 <canRxProcessTask::handle_speed_dir_command(msg_t)+0x1e0>)
   124fc:	681b      	ldr	r3, [r3, #0]
   124fe:	2603      	movs	r6, #3
   12500:	6023      	str	r3, [r4, #0]
   12502:	6820      	ldr	r0, [r4, #0]
   12504:	f000 fba4 	bl	12c50 <pwm_dcmotor(float)>
   12508:	6820      	ldr	r0, [r4, #0]
   1250a:	495b      	ldr	r1, [pc, #364]	; (12678 <canRxProcessTask::handle_speed_dir_command(msg_t)+0x1e4>)
   1250c:	f00a fd24 	bl	1cf58 <__addsf3>
   12510:	6020      	str	r0, [r4, #0]
   12512:	200a      	movs	r0, #10
   12514:	f006 feb8 	bl	19288 <delay_ms>
   12518:	3e01      	subs	r6, #1
   1251a:	d1f2      	bne.n	12502 <canRxProcessTask::handle_speed_dir_command(msg_t)+0x6e>
   1251c:	e017      	b.n	1254e <canRxProcessTask::handle_speed_dir_command(msg_t)+0xba>
   1251e:	4b54      	ldr	r3, [pc, #336]	; (12670 <canRxProcessTask::handle_speed_dir_command(msg_t)+0x1dc>)
   12520:	4c54      	ldr	r4, [pc, #336]	; (12674 <canRxProcessTask::handle_speed_dir_command(msg_t)+0x1e0>)
   12522:	681b      	ldr	r3, [r3, #0]
   12524:	2603      	movs	r6, #3
   12526:	6023      	str	r3, [r4, #0]
   12528:	6820      	ldr	r0, [r4, #0]
   1252a:	f000 fb91 	bl	12c50 <pwm_dcmotor(float)>
   1252e:	6820      	ldr	r0, [r4, #0]
   12530:	4951      	ldr	r1, [pc, #324]	; (12678 <canRxProcessTask::handle_speed_dir_command(msg_t)+0x1e4>)
   12532:	f00a fd11 	bl	1cf58 <__addsf3>
   12536:	6020      	str	r0, [r4, #0]
   12538:	200a      	movs	r0, #10
   1253a:	f006 fea5 	bl	19288 <delay_ms>
   1253e:	3e01      	subs	r6, #1
   12540:	d1f2      	bne.n	12528 <canRxProcessTask::handle_speed_dir_command(msg_t)+0x94>
   12542:	e004      	b.n	1254e <canRxProcessTask::handle_speed_dir_command(msg_t)+0xba>
   12544:	484d      	ldr	r0, [pc, #308]	; (1267c <canRxProcessTask::handle_speed_dir_command(msg_t)+0x1e8>)
   12546:	e000      	b.n	1254a <canRxProcessTask::handle_speed_dir_command(msg_t)+0xb6>
   12548:	484d      	ldr	r0, [pc, #308]	; (12680 <canRxProcessTask::handle_speed_dir_command(msg_t)+0x1ec>)
   1254a:	f000 fb81 	bl	12c50 <pwm_dcmotor(float)>
   1254e:	786b      	ldrb	r3, [r5, #1]
   12550:	3b01      	subs	r3, #1
   12552:	2b06      	cmp	r3, #6
   12554:	d812      	bhi.n	1257c <canRxProcessTask::handle_speed_dir_command(msg_t)+0xe8>
   12556:	e8df f003 	tbb	[pc, r3]
   1255a:	0804      	.short	0x0804
   1255c:	0f0c1106 	.word	0x0f0c1106
   12560:	0a          	.byte	0x0a
   12561:	00          	.byte	0x00
   12562:	4848      	ldr	r0, [pc, #288]	; (12684 <canRxProcessTask::handle_speed_dir_command(msg_t)+0x1f0>)
   12564:	e00b      	b.n	1257e <canRxProcessTask::handle_speed_dir_command(msg_t)+0xea>
   12566:	4848      	ldr	r0, [pc, #288]	; (12688 <canRxProcessTask::handle_speed_dir_command(msg_t)+0x1f4>)
   12568:	e009      	b.n	1257e <canRxProcessTask::handle_speed_dir_command(msg_t)+0xea>
   1256a:	4848      	ldr	r0, [pc, #288]	; (1268c <canRxProcessTask::handle_speed_dir_command(msg_t)+0x1f8>)
   1256c:	e007      	b.n	1257e <canRxProcessTask::handle_speed_dir_command(msg_t)+0xea>
   1256e:	4848      	ldr	r0, [pc, #288]	; (12690 <canRxProcessTask::handle_speed_dir_command(msg_t)+0x1fc>)
   12570:	e005      	b.n	1257e <canRxProcessTask::handle_speed_dir_command(msg_t)+0xea>
   12572:	f04f 4083 	mov.w	r0, #1098907648	; 0x41800000
   12576:	e002      	b.n	1257e <canRxProcessTask::handle_speed_dir_command(msg_t)+0xea>
   12578:	4846      	ldr	r0, [pc, #280]	; (12694 <canRxProcessTask::handle_speed_dir_command(msg_t)+0x200>)
   1257a:	e000      	b.n	1257e <canRxProcessTask::handle_speed_dir_command(msg_t)+0xea>
   1257c:	4846      	ldr	r0, [pc, #280]	; (12698 <canRxProcessTask::handle_speed_dir_command(msg_t)+0x204>)
   1257e:	f000 fb79 	bl	12c74 <pwm_servomotor(float)>
   12582:	782c      	ldrb	r4, [r5, #0]
   12584:	4e36      	ldr	r6, [pc, #216]	; (12660 <canRxProcessTask::handle_speed_dir_command(msg_t)+0x1cc>)
   12586:	f004 04fb 	and.w	r4, r4, #251	; 0xfb
   1258a:	2c01      	cmp	r4, #1
   1258c:	d122      	bne.n	125d4 <canRxProcessTask::handle_speed_dir_command(msg_t)+0x140>
   1258e:	4b37      	ldr	r3, [pc, #220]	; (1266c <canRxProcessTask::handle_speed_dir_command(msg_t)+0x1d8>)
   12590:	4e42      	ldr	r6, [pc, #264]	; (1269c <canRxProcessTask::handle_speed_dir_command(msg_t)+0x208>)
   12592:	709c      	strb	r4, [r3, #2]
   12594:	7833      	ldrb	r3, [r6, #0]
   12596:	4d42      	ldr	r5, [pc, #264]	; (126a0 <canRxProcessTask::handle_speed_dir_command(msg_t)+0x20c>)
   12598:	b973      	cbnz	r3, 125b8 <canRxProcessTask::handle_speed_dir_command(msg_t)+0x124>
   1259a:	4842      	ldr	r0, [pc, #264]	; (126a4 <canRxProcessTask::handle_speed_dir_command(msg_t)+0x210>)
   1259c:	f00c f9e6 	bl	1e96c <puts>
   125a0:	4841      	ldr	r0, [pc, #260]	; (126a8 <canRxProcessTask::handle_speed_dir_command(msg_t)+0x214>)
   125a2:	f000 fb55 	bl	12c50 <pwm_dcmotor(float)>
   125a6:	200a      	movs	r0, #10
   125a8:	f006 fe6e 	bl	19288 <delay_ms>
   125ac:	483f      	ldr	r0, [pc, #252]	; (126ac <canRxProcessTask::handle_speed_dir_command(msg_t)+0x218>)
   125ae:	f000 fb4f 	bl	12c50 <pwm_dcmotor(float)>
   125b2:	7034      	strb	r4, [r6, #0]
   125b4:	702c      	strb	r4, [r5, #0]
   125b6:	e04e      	b.n	12656 <canRxProcessTask::handle_speed_dir_command(msg_t)+0x1c2>
   125b8:	782b      	ldrb	r3, [r5, #0]
   125ba:	4c3d      	ldr	r4, [pc, #244]	; (126b0 <canRxProcessTask::handle_speed_dir_command(msg_t)+0x21c>)
   125bc:	f003 06ff 	and.w	r6, r3, #255	; 0xff
   125c0:	2b00      	cmp	r3, #0
   125c2:	d137      	bne.n	12634 <canRxProcessTask::handle_speed_dir_command(msg_t)+0x1a0>
   125c4:	7823      	ldrb	r3, [r4, #0]
   125c6:	2b00      	cmp	r3, #0
   125c8:	d034      	beq.n	12634 <canRxProcessTask::handle_speed_dir_command(msg_t)+0x1a0>
   125ca:	4837      	ldr	r0, [pc, #220]	; (126a8 <canRxProcessTask::handle_speed_dir_command(msg_t)+0x214>)
   125cc:	f000 fb40 	bl	12c50 <pwm_dcmotor(float)>
   125d0:	7026      	strb	r6, [r4, #0]
   125d2:	e040      	b.n	12656 <canRxProcessTask::handle_speed_dir_command(msg_t)+0x1c2>
   125d4:	78b3      	ldrb	r3, [r6, #2]
   125d6:	2b01      	cmp	r3, #1
   125d8:	d002      	beq.n	125e0 <canRxProcessTask::handle_speed_dir_command(msg_t)+0x14c>
   125da:	2b02      	cmp	r3, #2
   125dc:	d010      	beq.n	12600 <canRxProcessTask::handle_speed_dir_command(msg_t)+0x16c>
   125de:	e025      	b.n	1262c <canRxProcessTask::handle_speed_dir_command(msg_t)+0x198>
   125e0:	4832      	ldr	r0, [pc, #200]	; (126ac <canRxProcessTask::handle_speed_dir_command(msg_t)+0x218>)
   125e2:	f000 fb35 	bl	12c50 <pwm_dcmotor(float)>
   125e6:	4833      	ldr	r0, [pc, #204]	; (126b4 <canRxProcessTask::handle_speed_dir_command(msg_t)+0x220>)
   125e8:	f00c f9c0 	bl	1e96c <puts>
   125ec:	4a30      	ldr	r2, [pc, #192]	; (126b0 <canRxProcessTask::handle_speed_dir_command(msg_t)+0x21c>)
   125ee:	2300      	movs	r3, #0
   125f0:	7013      	strb	r3, [r2, #0]
   125f2:	4a2b      	ldr	r2, [pc, #172]	; (126a0 <canRxProcessTask::handle_speed_dir_command(msg_t)+0x20c>)
   125f4:	7013      	strb	r3, [r2, #0]
   125f6:	4a1d      	ldr	r2, [pc, #116]	; (1266c <canRxProcessTask::handle_speed_dir_command(msg_t)+0x1d8>)
   125f8:	7093      	strb	r3, [r2, #2]
   125fa:	78b3      	ldrb	r3, [r6, #2]
   125fc:	7053      	strb	r3, [r2, #1]
   125fe:	e02a      	b.n	12656 <canRxProcessTask::handle_speed_dir_command(msg_t)+0x1c2>
   12600:	4c2b      	ldr	r4, [pc, #172]	; (126b0 <canRxProcessTask::handle_speed_dir_command(msg_t)+0x21c>)
   12602:	7823      	ldrb	r3, [r4, #0]
   12604:	b91b      	cbnz	r3, 1260e <canRxProcessTask::handle_speed_dir_command(msg_t)+0x17a>
   12606:	f000 fb43 	bl	12c90 <reverseInit()>
   1260a:	2301      	movs	r3, #1
   1260c:	7023      	strb	r3, [r4, #0]
   1260e:	482a      	ldr	r0, [pc, #168]	; (126b8 <canRxProcessTask::handle_speed_dir_command(msg_t)+0x224>)
   12610:	f00c f9ac 	bl	1e96c <puts>
   12614:	4829      	ldr	r0, [pc, #164]	; (126bc <canRxProcessTask::handle_speed_dir_command(msg_t)+0x228>)
   12616:	f000 fb1b 	bl	12c50 <pwm_dcmotor(float)>
   1261a:	4b21      	ldr	r3, [pc, #132]	; (126a0 <canRxProcessTask::handle_speed_dir_command(msg_t)+0x20c>)
   1261c:	2201      	movs	r2, #1
   1261e:	701a      	strb	r2, [r3, #0]
   12620:	4b12      	ldr	r3, [pc, #72]	; (1266c <canRxProcessTask::handle_speed_dir_command(msg_t)+0x1d8>)
   12622:	2200      	movs	r2, #0
   12624:	709a      	strb	r2, [r3, #2]
   12626:	78aa      	ldrb	r2, [r5, #2]
   12628:	705a      	strb	r2, [r3, #1]
   1262a:	e014      	b.n	12656 <canRxProcessTask::handle_speed_dir_command(msg_t)+0x1c2>
   1262c:	4813      	ldr	r0, [pc, #76]	; (1267c <canRxProcessTask::handle_speed_dir_command(msg_t)+0x1e8>)
   1262e:	f000 fb0f 	bl	12c50 <pwm_dcmotor(float)>
   12632:	e010      	b.n	12656 <canRxProcessTask::handle_speed_dir_command(msg_t)+0x1c2>
   12634:	782b      	ldrb	r3, [r5, #0]
   12636:	b94b      	cbnz	r3, 1264c <canRxProcessTask::handle_speed_dir_command(msg_t)+0x1b8>
   12638:	7823      	ldrb	r3, [r4, #0]
   1263a:	f003 05ff 	and.w	r5, r3, #255	; 0xff
   1263e:	b92b      	cbnz	r3, 1264c <canRxProcessTask::handle_speed_dir_command(msg_t)+0x1b8>
   12640:	480f      	ldr	r0, [pc, #60]	; (12680 <canRxProcessTask::handle_speed_dir_command(msg_t)+0x1ec>)
   12642:	f000 fb05 	bl	12c50 <pwm_dcmotor(float)>
   12646:	4b1a      	ldr	r3, [pc, #104]	; (126b0 <canRxProcessTask::handle_speed_dir_command(msg_t)+0x21c>)
   12648:	701d      	strb	r5, [r3, #0]
   1264a:	e004      	b.n	12656 <canRxProcessTask::handle_speed_dir_command(msg_t)+0x1c2>
   1264c:	4816      	ldr	r0, [pc, #88]	; (126a8 <canRxProcessTask::handle_speed_dir_command(msg_t)+0x214>)
   1264e:	f000 faff 	bl	12c50 <pwm_dcmotor(float)>
   12652:	2300      	movs	r3, #0
   12654:	7023      	strb	r3, [r4, #0]
   12656:	2001      	movs	r0, #1
   12658:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
   1265c:	b004      	add	sp, #16
   1265e:	4770      	bx	lr
   12660:	2007c73d 	.word	0x2007c73d
   12664:	2007c750 	.word	0x2007c750
   12668:	2007c758 	.word	0x2007c758
   1266c:	2007c73a 	.word	0x2007c73a
   12670:	2007c72c 	.word	0x2007c72c
   12674:	2007c74c 	.word	0x2007c74c
   12678:	3e4ccccd 	.word	0x3e4ccccd
   1267c:	414cf5c3 	.word	0x414cf5c3
   12680:	41200000 	.word	0x41200000
   12684:	41280000 	.word	0x41280000
   12688:	41587ae1 	.word	0x41587ae1
   1268c:	4145999a 	.word	0x4145999a
   12690:	41a03d71 	.word	0x41a03d71
   12694:	418af5c3 	.word	0x418af5c3
   12698:	416b3333 	.word	0x416b3333
   1269c:	2007c748 	.word	0x2007c748
   126a0:	2007c729 	.word	0x2007c729
   126a4:	0002537d 	.word	0x0002537d
   126a8:	41700000 	.word	0x41700000
   126ac:	417e6666 	.word	0x417e6666
   126b0:	2007c754 	.word	0x2007c754
   126b4:	00025383 	.word	0x00025383
   126b8:	0002538b 	.word	0x0002538b
   126bc:	41600000 	.word	0x41600000

000126c0 <canRxProcessTask::handle_drive_mode(msg_t)>:
_ZN16canRxProcessTask17handle_drive_modeE5msg_t():
   126c0:	b084      	sub	sp, #16
   126c2:	a801      	add	r0, sp, #4
   126c4:	e880 000e 	stmia.w	r0, {r1, r2, r3}
   126c8:	4b03      	ldr	r3, [pc, #12]	; (126d8 <canRxProcessTask::handle_drive_mode(msg_t)+0x18>)
   126ca:	f89d 2008 	ldrb.w	r2, [sp, #8]
   126ce:	2001      	movs	r0, #1
   126d0:	701a      	strb	r2, [r3, #0]
   126d2:	b004      	add	sp, #16
   126d4:	4770      	bx	lr
   126d6:	bf00      	nop
   126d8:	2007c749 	.word	0x2007c749

000126dc <SingletonTemplate<LED_Display>::getInstance()>:
_ZN17SingletonTemplateI11LED_DisplayE11getInstanceEv():
   126dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   126de:	4d0c      	ldr	r5, [pc, #48]	; (12710 <SingletonTemplate<LED_Display>::getInstance()+0x34>)
   126e0:	682b      	ldr	r3, [r5, #0]
   126e2:	b993      	cbnz	r3, 1270a <SingletonTemplate<LED_Display>::getInstance()+0x2e>
   126e4:	2008      	movs	r0, #8
   126e6:	f7fd fdc3 	bl	10270 <operator new(unsigned int)>
   126ea:	4e0a      	ldr	r6, [pc, #40]	; (12714 <SingletonTemplate<LED_Display>::getInstance()+0x38>)
   126ec:	4604      	mov	r4, r0
   126ee:	6833      	ldr	r3, [r6, #0]
   126f0:	b933      	cbnz	r3, 12700 <SingletonTemplate<LED_Display>::getInstance()+0x24>
   126f2:	201c      	movs	r0, #28
   126f4:	f7fd fdbc 	bl	10270 <operator new(unsigned int)>
   126f8:	4607      	mov	r7, r0
   126fa:	f007 f9d1 	bl	19aa0 <I2C2::I2C2()>
   126fe:	6037      	str	r7, [r6, #0]
   12700:	6833      	ldr	r3, [r6, #0]
   12702:	6023      	str	r3, [r4, #0]
   12704:	2340      	movs	r3, #64	; 0x40
   12706:	7123      	strb	r3, [r4, #4]
   12708:	602c      	str	r4, [r5, #0]
   1270a:	6828      	ldr	r0, [r5, #0]
   1270c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1270e:	bf00      	nop
   12710:	2007c724 	.word	0x2007c724
   12714:	2007c1f8 	.word	0x2007c1f8

00012718 <debugTask::run(void*)>:
_ZN9debugTask3runEPv():
   12718:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1271a:	f890 3031 	ldrb.w	r3, [r0, #49]	; 0x31
   1271e:	4604      	mov	r4, r0
   12720:	2b06      	cmp	r3, #6
   12722:	d108      	bne.n	12736 <debugTask::run(void*)+0x1e>
   12724:	f7ff ffda 	bl	126dc <SingletonTemplate<LED_Display>::getInstance()>
   12728:	212d      	movs	r1, #45	; 0x2d
   1272a:	f002 fb7d 	bl	14e28 <LED_Display::setLeftDigit(char)>
   1272e:	f7ff ffd5 	bl	126dc <SingletonTemplate<LED_Display>::getInstance()>
   12732:	212d      	movs	r1, #45	; 0x2d
   12734:	e063      	b.n	127fe <debugTask::run(void*)+0xe6>
   12736:	2514      	movs	r5, #20
   12738:	fb05 0203 	mla	r2, r5, r3, r0
   1273c:	f102 0138 	add.w	r1, r2, #56	; 0x38
   12740:	6888      	ldr	r0, [r1, #8]
   12742:	b1d8      	cbz	r0, 1277c <debugTask::run(void*)+0x64>
   12744:	7805      	ldrb	r5, [r0, #0]
   12746:	f7ff ffc9 	bl	126dc <SingletonTemplate<LED_Display>::getInstance()>
   1274a:	092d      	lsrs	r5, r5, #4
   1274c:	2d09      	cmp	r5, #9
   1274e:	bf94      	ite	ls
   12750:	b2e9      	uxtbls	r1, r5
   12752:	f105 0114 	addhi.w	r1, r5, #20
   12756:	f002 fb67 	bl	14e28 <LED_Display::setLeftDigit(char)>
   1275a:	f894 3031 	ldrb.w	r3, [r4, #49]	; 0x31
   1275e:	2214      	movs	r2, #20
   12760:	fb02 4303 	mla	r3, r2, r3, r4
   12764:	6c1b      	ldr	r3, [r3, #64]	; 0x40
   12766:	781d      	ldrb	r5, [r3, #0]
   12768:	f7ff ffb8 	bl	126dc <SingletonTemplate<LED_Display>::getInstance()>
   1276c:	f005 050f 	and.w	r5, r5, #15
   12770:	2d09      	cmp	r5, #9
   12772:	bf94      	ite	ls
   12774:	b2e9      	uxtbls	r1, r5
   12776:	f105 0114 	addhi.w	r1, r5, #20
   1277a:	e040      	b.n	127fe <debugTask::run(void*)+0xe6>
   1277c:	6849      	ldr	r1, [r1, #4]
   1277e:	b159      	cbz	r1, 12798 <debugTask::run(void*)+0x80>
   12780:	f7ff ffac 	bl	126dc <SingletonTemplate<LED_Display>::getInstance()>
   12784:	f894 3031 	ldrb.w	r3, [r4, #49]	; 0x31
   12788:	fb05 4503 	mla	r5, r5, r3, r4
   1278c:	6beb      	ldr	r3, [r5, #60]	; 0x3c
   1278e:	f993 1000 	ldrsb.w	r1, [r3]
   12792:	f002 fb7e 	bl	14e92 <LED_Display::setNumber(char)>
   12796:	e03e      	b.n	12816 <debugTask::run(void*)+0xfe>
   12798:	6b51      	ldr	r1, [r2, #52]	; 0x34
   1279a:	3230      	adds	r2, #48	; 0x30
   1279c:	b1b1      	cbz	r1, 127cc <debugTask::run(void*)+0xb4>
   1279e:	6892      	ldr	r2, [r2, #8]
   127a0:	b1a2      	cbz	r2, 127cc <debugTask::run(void*)+0xb4>
   127a2:	f7ff ff9b 	bl	126dc <SingletonTemplate<LED_Display>::getInstance()>
   127a6:	f894 3031 	ldrb.w	r3, [r4, #49]	; 0x31
   127aa:	fb05 4303 	mla	r3, r5, r3, r4
   127ae:	6b5b      	ldr	r3, [r3, #52]	; 0x34
   127b0:	f993 1000 	ldrsb.w	r1, [r3]
   127b4:	f002 fb38 	bl	14e28 <LED_Display::setLeftDigit(char)>
   127b8:	f7ff ff90 	bl	126dc <SingletonTemplate<LED_Display>::getInstance()>
   127bc:	f894 3031 	ldrb.w	r3, [r4, #49]	; 0x31
   127c0:	fb05 4503 	mla	r5, r5, r3, r4
   127c4:	6bab      	ldr	r3, [r5, #56]	; 0x38
   127c6:	f993 1000 	ldrsb.w	r1, [r3]
   127ca:	e018      	b.n	127fe <debugTask::run(void*)+0xe6>
   127cc:	2214      	movs	r2, #20
   127ce:	fb02 4203 	mla	r2, r2, r3, r4
   127d2:	6c52      	ldr	r2, [r2, #68]	; 0x44
   127d4:	b1b2      	cbz	r2, 12804 <debugTask::run(void*)+0xec>
   127d6:	6810      	ldr	r0, [r2, #0]
   127d8:	4926      	ldr	r1, [pc, #152]	; (12874 <debugTask::run(void*)+0x15c>)
   127da:	f00a fcc5 	bl	1d168 <__aeabi_fmul>
   127de:	f00a feaf 	bl	1d540 <__aeabi_f2uiz>
   127e2:	270a      	movs	r7, #10
   127e4:	b2c5      	uxtb	r5, r0
   127e6:	f7ff ff79 	bl	126dc <SingletonTemplate<LED_Display>::getInstance()>
   127ea:	fbb5 f6f7 	udiv	r6, r5, r7
   127ee:	b271      	sxtb	r1, r6
   127f0:	f002 fb1a 	bl	14e28 <LED_Display::setLeftDigit(char)>
   127f4:	f7ff ff72 	bl	126dc <SingletonTemplate<LED_Display>::getInstance()>
   127f8:	fb07 5116 	mls	r1, r7, r6, r5
   127fc:	b249      	sxtb	r1, r1
   127fe:	f002 fb1f 	bl	14e40 <LED_Display::setRightDigit(char)>
   12802:	e008      	b.n	12816 <debugTask::run(void*)+0xfe>
   12804:	3301      	adds	r3, #1
   12806:	2207      	movs	r2, #7
   12808:	fb93 f2f2 	sdiv	r2, r3, r2
   1280c:	ebc2 02c2 	rsb	r2, r2, r2, lsl #3
   12810:	1a9b      	subs	r3, r3, r2
   12812:	f884 3031 	strb.w	r3, [r4, #49]	; 0x31
   12816:	4d18      	ldr	r5, [pc, #96]	; (12878 <debugTask::run(void*)+0x160>)
   12818:	682b      	ldr	r3, [r5, #0]
   1281a:	b91b      	cbnz	r3, 12824 <debugTask::run(void*)+0x10c>
   1281c:	2001      	movs	r0, #1
   1281e:	f7fd fd27 	bl	10270 <operator new(unsigned int)>
   12822:	6028      	str	r0, [r5, #0]
   12824:	6828      	ldr	r0, [r5, #0]
   12826:	f002 fb99 	bl	14f5c <Switches::getSwitchValues()>
   1282a:	f000 000f 	and.w	r0, r0, #15
   1282e:	2802      	cmp	r0, #2
   12830:	d00f      	beq.n	12852 <debugTask::run(void*)+0x13a>
   12832:	2804      	cmp	r0, #4
   12834:	d014      	beq.n	12860 <debugTask::run(void*)+0x148>
   12836:	2801      	cmp	r0, #1
   12838:	d119      	bne.n	1286e <debugTask::run(void*)+0x156>
   1283a:	f894 3031 	ldrb.w	r3, [r4, #49]	; 0x31
   1283e:	2207      	movs	r2, #7
   12840:	3301      	adds	r3, #1
   12842:	fb93 f2f2 	sdiv	r2, r3, r2
   12846:	ebc2 02c2 	rsb	r2, r2, r2, lsl #3
   1284a:	1a9b      	subs	r3, r3, r2
   1284c:	f884 3031 	strb.w	r3, [r4, #49]	; 0x31
   12850:	e009      	b.n	12866 <debugTask::run(void*)+0x14e>
   12852:	4c0a      	ldr	r4, [pc, #40]	; (1287c <debugTask::run(void*)+0x164>)
   12854:	490a      	ldr	r1, [pc, #40]	; (12880 <debugTask::run(void*)+0x168>)
   12856:	6820      	ldr	r0, [r4, #0]
   12858:	f00a fb7e 	bl	1cf58 <__addsf3>
   1285c:	6020      	str	r0, [r4, #0]
   1285e:	e002      	b.n	12866 <debugTask::run(void*)+0x14e>
   12860:	4a08      	ldr	r2, [pc, #32]	; (12884 <debugTask::run(void*)+0x16c>)
   12862:	4b06      	ldr	r3, [pc, #24]	; (1287c <debugTask::run(void*)+0x164>)
   12864:	601a      	str	r2, [r3, #0]
   12866:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
   1286a:	f008 fe3d 	bl	1b4e8 <vTaskDelay>
   1286e:	2001      	movs	r0, #1
   12870:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   12872:	bf00      	nop
   12874:	41200000 	.word	0x41200000
   12878:	2007c720 	.word	0x2007c720
   1287c:	2007c74c 	.word	0x2007c74c
   12880:	3dcccccd 	.word	0x3dcccccd
   12884:	417ccccd 	.word	0x417ccccd

00012888 <controllerInit()>:
_Z14controllerInitv():
   12888:	b573      	push	{r0, r1, r4, r5, r6, lr}
   1288a:	4b31      	ldr	r3, [pc, #196]	; (12950 <controllerInit()+0xc8>)
   1288c:	781a      	ldrb	r2, [r3, #0]
   1288e:	461e      	mov	r6, r3
   12890:	b12a      	cbz	r2, 1289e <controllerInit()+0x16>
   12892:	f7ff fb09 	bl	11ea8 <SingletonTemplate<LED>::getInstance()>
   12896:	2101      	movs	r1, #1
   12898:	f002 fb3c 	bl	14f14 <LED::on(int)>
   1289c:	e004      	b.n	128a8 <controllerInit()+0x20>
   1289e:	f7ff fb03 	bl	11ea8 <SingletonTemplate<LED>::getInstance()>
   128a2:	2101      	movs	r1, #1
   128a4:	f002 fb41 	bl	14f2a <LED::off(int)>
   128a8:	2121      	movs	r1, #33	; 0x21
   128aa:	482a      	ldr	r0, [pc, #168]	; (12954 <controllerInit()+0xcc>)
   128ac:	f7ff fcee 	bl	1228c <can_controller::processBootSequence(unsigned char)>
   128b0:	2034      	movs	r0, #52	; 0x34
   128b2:	f7fd fcdd 	bl	10270 <operator new(unsigned int)>
   128b6:	2500      	movs	r5, #0
   128b8:	4927      	ldr	r1, [pc, #156]	; (12958 <controllerInit()+0xd0>)
   128ba:	f44f 6280 	mov.w	r2, #1024	; 0x400
   128be:	2303      	movs	r3, #3
   128c0:	9500      	str	r5, [sp, #0]
   128c2:	4604      	mov	r4, r0
   128c4:	f006 fa22 	bl	18d0c <scheduler_task::scheduler_task(char const*, unsigned long, unsigned char, void*)>
   128c8:	4b24      	ldr	r3, [pc, #144]	; (1295c <controllerInit()+0xd4>)
   128ca:	4620      	mov	r0, r4
   128cc:	6023      	str	r3, [r4, #0]
   128ce:	2383      	movs	r3, #131	; 0x83
   128d0:	61e3      	str	r3, [r4, #28]
   128d2:	f006 f9e9 	bl	18ca8 <scheduler_add_task(scheduler_task*)>
   128d6:	2034      	movs	r0, #52	; 0x34
   128d8:	f7fd fcca 	bl	10270 <operator new(unsigned int)>
   128dc:	4604      	mov	r4, r0
   128de:	f000 f97d 	bl	12bdc <encoderTask::encoderTask()>
   128e2:	4620      	mov	r0, r4
   128e4:	f006 f9e0 	bl	18ca8 <scheduler_add_task(scheduler_task*)>
   128e8:	20ac      	movs	r0, #172	; 0xac
   128ea:	f7fd fcc1 	bl	10270 <operator new(unsigned int)>
   128ee:	2302      	movs	r3, #2
   128f0:	9500      	str	r5, [sp, #0]
   128f2:	491b      	ldr	r1, [pc, #108]	; (12960 <controllerInit()+0xd8>)
   128f4:	f44f 6280 	mov.w	r2, #1024	; 0x400
   128f8:	4604      	mov	r4, r0
   128fa:	f006 fa07 	bl	18d0c <scheduler_task::scheduler_task(char const*, unsigned long, unsigned char, void*)>
   128fe:	4b19      	ldr	r3, [pc, #100]	; (12964 <controllerInit()+0xdc>)
   12900:	6023      	str	r3, [r4, #0]
   12902:	4623      	mov	r3, r4
   12904:	3514      	adds	r5, #20
   12906:	2200      	movs	r2, #0
   12908:	2d78      	cmp	r5, #120	; 0x78
   1290a:	635a      	str	r2, [r3, #52]	; 0x34
   1290c:	639a      	str	r2, [r3, #56]	; 0x38
   1290e:	63da      	str	r2, [r3, #60]	; 0x3c
   12910:	641a      	str	r2, [r3, #64]	; 0x40
   12912:	645a      	str	r2, [r3, #68]	; 0x44
   12914:	f103 0314 	add.w	r3, r3, #20
   12918:	d1f4      	bne.n	12904 <controllerInit()+0x7c>
   1291a:	2364      	movs	r3, #100	; 0x64
   1291c:	f884 2031 	strb.w	r2, [r4, #49]	; 0x31
   12920:	61e3      	str	r3, [r4, #28]
   12922:	4620      	mov	r0, r4
   12924:	f006 f9c0 	bl	18ca8 <scheduler_add_task(scheduler_task*)>
   12928:	4b0f      	ldr	r3, [pc, #60]	; (12968 <controllerInit()+0xe0>)
   1292a:	f8c4 60a4 	str.w	r6, [r4, #164]	; 0xa4
   1292e:	63e3      	str	r3, [r4, #60]	; 0x3c
   12930:	4b0e      	ldr	r3, [pc, #56]	; (1296c <controllerInit()+0xe4>)
   12932:	65a3      	str	r3, [r4, #88]	; 0x58
   12934:	4b0e      	ldr	r3, [pc, #56]	; (12970 <controllerInit()+0xe8>)
   12936:	1c5a      	adds	r2, r3, #1
   12938:	6623      	str	r3, [r4, #96]	; 0x60
   1293a:	3302      	adds	r3, #2
   1293c:	6723      	str	r3, [r4, #112]	; 0x70
   1293e:	4b0d      	ldr	r3, [pc, #52]	; (12974 <controllerInit()+0xec>)
   12940:	65e2      	str	r2, [r4, #92]	; 0x5c
   12942:	6763      	str	r3, [r4, #116]	; 0x74
   12944:	4b0c      	ldr	r3, [pc, #48]	; (12978 <controllerInit()+0xf0>)
   12946:	f8c4 308c 	str.w	r3, [r4, #140]	; 0x8c
   1294a:	b002      	add	sp, #8
   1294c:	bd70      	pop	{r4, r5, r6, pc}
   1294e:	bf00      	nop
   12950:	2007c61c 	.word	0x2007c61c
   12954:	2007c730 	.word	0x2007c730
   12958:	00025393 	.word	0x00025393
   1295c:	000252f8 	.word	0x000252f8
   12960:	000253a7 	.word	0x000253a7
   12964:	00025318 	.word	0x00025318
   12968:	2007c73a 	.word	0x2007c73a
   1296c:	2007c744 	.word	0x2007c744
   12970:	2007c73d 	.word	0x2007c73d
   12974:	2007c749 	.word	0x2007c749
   12978:	2007c728 	.word	0x2007c728

0001297c <canRxBufferTask::run(void*)>:
_ZN15canRxBufferTask3runEPv():
   1297c:	b500      	push	{lr}
   1297e:	2320      	movs	r3, #32
   12980:	b08d      	sub	sp, #52	; 0x34
   12982:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
   12986:	ab0b      	add	r3, sp, #44	; 0x2c
   12988:	9300      	str	r3, [sp, #0]
   1298a:	4817      	ldr	r0, [pc, #92]	; (129e8 <canRxBufferTask::run(void*)+0x6c>)
   1298c:	ab03      	add	r3, sp, #12
   1298e:	a902      	add	r1, sp, #8
   12990:	f10d 0209 	add.w	r2, sp, #9
   12994:	f7ff fb96 	bl	120c4 <can_controller::can_recv(controller_id_t*, msg_id_t*, unsigned char*, unsigned short*)>
   12998:	f89d 3009 	ldrb.w	r3, [sp, #9]
   1299c:	2b01      	cmp	r3, #1
   1299e:	d102      	bne.n	129a6 <canRxBufferTask::run(void*)+0x2a>
   129a0:	4811      	ldr	r0, [pc, #68]	; (129e8 <canRxBufferTask::run(void*)+0x6c>)
   129a2:	f7ff fa71 	bl	11e88 <can_controller::processReset()>
   129a6:	4b11      	ldr	r3, [pc, #68]	; (129ec <canRxBufferTask::run(void*)+0x70>)
   129a8:	2200      	movs	r2, #0
   129aa:	6818      	ldr	r0, [r3, #0]
   129ac:	a902      	add	r1, sp, #8
   129ae:	4613      	mov	r3, r2
   129b0:	f008 f92a 	bl	1ac08 <xQueueGenericSend>
   129b4:	b9a0      	cbnz	r0, 129e0 <canRxBufferTask::run(void*)+0x64>
   129b6:	4b0e      	ldr	r3, [pc, #56]	; (129f0 <canRxBufferTask::run(void*)+0x74>)
   129b8:	781a      	ldrb	r2, [r3, #0]
   129ba:	f042 0210 	orr.w	r2, r2, #16
   129be:	701a      	strb	r2, [r3, #0]
   129c0:	f7ff fa72 	bl	11ea8 <SingletonTemplate<LED>::getInstance()>
   129c4:	2101      	movs	r1, #1
   129c6:	f002 faa5 	bl	14f14 <LED::on(int)>
   129ca:	4b0a      	ldr	r3, [pc, #40]	; (129f4 <canRxBufferTask::run(void*)+0x78>)
   129cc:	2002      	movs	r0, #2
   129ce:	9300      	str	r3, [sp, #0]
   129d0:	4909      	ldr	r1, [pc, #36]	; (129f8 <canRxBufferTask::run(void*)+0x7c>)
   129d2:	4a0a      	ldr	r2, [pc, #40]	; (129fc <canRxBufferTask::run(void*)+0x80>)
   129d4:	23f0      	movs	r3, #240	; 0xf0
   129d6:	f005 fe77 	bl	186c8 <logger_log>
   129da:	4809      	ldr	r0, [pc, #36]	; (12a00 <canRxBufferTask::run(void*)+0x84>)
   129dc:	f00b ffc6 	bl	1e96c <puts>
   129e0:	2001      	movs	r0, #1
   129e2:	b00d      	add	sp, #52	; 0x34
   129e4:	f85d fb04 	ldr.w	pc, [sp], #4
   129e8:	2007c730 	.word	0x2007c730
   129ec:	2007c740 	.word	0x2007c740
   129f0:	2007c61c 	.word	0x2007c61c
   129f4:	000253df 	.word	0x000253df
   129f8:	000253b1 	.word	0x000253b1
   129fc:	00025454 	.word	0x00025454
   12a00:	000253ef 	.word	0x000253ef

00012a04 <canRxProcessTask::run(void*)>:
_ZN16canRxProcessTask3runEPv():
   12a04:	b5f0      	push	{r4, r5, r6, r7, lr}
   12a06:	4b2a      	ldr	r3, [pc, #168]	; (12ab0 <canRxProcessTask::run(void*)+0xac>)
   12a08:	b093      	sub	sp, #76	; 0x4c
   12a0a:	ac08      	add	r4, sp, #32
   12a0c:	4607      	mov	r7, r0
   12a0e:	4621      	mov	r1, r4
   12a10:	6818      	ldr	r0, [r3, #0]
   12a12:	f04f 32ff 	mov.w	r2, #4294967295
   12a16:	2300      	movs	r3, #0
   12a18:	f008 f9c6 	bl	1ada8 <xQueueGenericReceive>
   12a1c:	2800      	cmp	r0, #0
   12a1e:	d043      	beq.n	12aa8 <canRxProcessTask::run(void*)+0xa4>
   12a20:	4b24      	ldr	r3, [pc, #144]	; (12ab4 <canRxProcessTask::run(void*)+0xb0>)
   12a22:	781a      	ldrb	r2, [r3, #0]
   12a24:	06d1      	lsls	r1, r2, #27
   12a26:	d50e      	bpl.n	12a46 <canRxProcessTask::run(void*)+0x42>
   12a28:	f002 02ef 	and.w	r2, r2, #239	; 0xef
   12a2c:	701a      	strb	r2, [r3, #0]
   12a2e:	b12a      	cbz	r2, 12a3c <canRxProcessTask::run(void*)+0x38>
   12a30:	f7ff fa3a 	bl	11ea8 <SingletonTemplate<LED>::getInstance()>
   12a34:	2101      	movs	r1, #1
   12a36:	f002 fa6d 	bl	14f14 <LED::on(int)>
   12a3a:	e004      	b.n	12a46 <canRxProcessTask::run(void*)+0x42>
   12a3c:	f7ff fa34 	bl	11ea8 <SingletonTemplate<LED>::getInstance()>
   12a40:	2101      	movs	r1, #1
   12a42:	f002 fa72 	bl	14f2a <LED::off(int)>
   12a46:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
   12a4a:	2b0b      	cmp	r3, #11
   12a4c:	d01f      	beq.n	12a8e <canRxProcessTask::run(void*)+0x8a>
   12a4e:	2b0f      	cmp	r3, #15
   12a50:	d00f      	beq.n	12a72 <canRxProcessTask::run(void*)+0x6e>
   12a52:	2b05      	cmp	r3, #5
   12a54:	d128      	bne.n	12aa8 <canRxProcessTask::run(void*)+0xa4>
   12a56:	466d      	mov	r5, sp
   12a58:	ae0b      	add	r6, sp, #44	; 0x2c
   12a5a:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
   12a5c:	c50f      	stmia	r5!, {r0, r1, r2, r3}
   12a5e:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
   12a62:	e885 0007 	stmia.w	r5, {r0, r1, r2}
   12a66:	4638      	mov	r0, r7
   12a68:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
   12a6c:	f7ff fcda 	bl	12424 <canRxProcessTask::handle_heartbeat(msg_t)>
   12a70:	e01a      	b.n	12aa8 <canRxProcessTask::run(void*)+0xa4>
   12a72:	466d      	mov	r5, sp
   12a74:	ae0b      	add	r6, sp, #44	; 0x2c
   12a76:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
   12a78:	c50f      	stmia	r5!, {r0, r1, r2, r3}
   12a7a:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
   12a7e:	e885 0007 	stmia.w	r5, {r0, r1, r2}
   12a82:	4638      	mov	r0, r7
   12a84:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
   12a88:	f7ff fd04 	bl	12494 <canRxProcessTask::handle_speed_dir_command(msg_t)>
   12a8c:	e00c      	b.n	12aa8 <canRxProcessTask::run(void*)+0xa4>
   12a8e:	466d      	mov	r5, sp
   12a90:	ae0b      	add	r6, sp, #44	; 0x2c
   12a92:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
   12a94:	c50f      	stmia	r5!, {r0, r1, r2, r3}
   12a96:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
   12a9a:	e885 0007 	stmia.w	r5, {r0, r1, r2}
   12a9e:	4638      	mov	r0, r7
   12aa0:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
   12aa4:	f7ff fe0c 	bl	126c0 <canRxProcessTask::handle_drive_mode(msg_t)>
   12aa8:	2001      	movs	r0, #1
   12aaa:	b013      	add	sp, #76	; 0x4c
   12aac:	bdf0      	pop	{r4, r5, r6, r7, pc}
   12aae:	bf00      	nop
   12ab0:	2007c740 	.word	0x2007c740
   12ab4:	2007c61c 	.word	0x2007c61c

00012ab8 <_GLOBAL__sub_I_curr_pwm>:
_GLOBAL__sub_I_curr_pwm():
   12ab8:	b508      	push	{r3, lr}
   12aba:	2101      	movs	r1, #1
   12abc:	2308      	movs	r3, #8
   12abe:	4a06      	ldr	r2, [pc, #24]	; (12ad8 <_GLOBAL__sub_I_curr_pwm+0x20>)
   12ac0:	4806      	ldr	r0, [pc, #24]	; (12adc <_GLOBAL__sub_I_curr_pwm+0x24>)
   12ac2:	f7ff f9c8 	bl	11e56 <can_controller::can_controller(controller_id_t, can_msg_id_t*, unsigned int)>
   12ac6:	2020      	movs	r0, #32
   12ac8:	2128      	movs	r1, #40	; 0x28
   12aca:	2200      	movs	r2, #0
   12acc:	f008 f86b 	bl	1aba6 <xQueueGenericCreate>
   12ad0:	4b03      	ldr	r3, [pc, #12]	; (12ae0 <_GLOBAL__sub_I_curr_pwm+0x28>)
   12ad2:	6018      	str	r0, [r3, #0]
   12ad4:	bd08      	pop	{r3, pc}
   12ad6:	bf00      	nop
   12ad8:	2007c000 	.word	0x2007c000
   12adc:	2007c730 	.word	0x2007c730
   12ae0:	2007c740 	.word	0x2007c740

00012ae4 <encoderTask::run(void*)>:
_ZN11encoderTask3runEPv():
   12ae4:	2001      	movs	r0, #1
   12ae6:	4770      	bx	lr

00012ae8 <encoderTask::~encoderTask()>:
_ZN11encoderTaskD1Ev():
   12ae8:	4b01      	ldr	r3, [pc, #4]	; (12af0 <encoderTask::~encoderTask()+0x8>)
   12aea:	6003      	str	r3, [r0, #0]
   12aec:	4770      	bx	lr
   12aee:	bf00      	nop
   12af0:	000252d8 	.word	0x000252d8

00012af4 <encoderTask::~encoderTask()>:
_ZN11encoderTaskD0Ev():
   12af4:	b510      	push	{r4, lr}
   12af6:	4b03      	ldr	r3, [pc, #12]	; (12b04 <encoderTask::~encoderTask()+0x10>)
   12af8:	4604      	mov	r4, r0
   12afa:	6003      	str	r3, [r0, #0]
   12afc:	f7fd fbba 	bl	10274 <operator delete(void*)>
   12b00:	4620      	mov	r0, r4
   12b02:	bd10      	pop	{r4, pc}
   12b04:	000252d8 	.word	0x000252d8

00012b08 <initEchoInt(eint_intr_t)>:
_Z11initEchoInt11eint_intr_t():
   12b08:	4601      	mov	r1, r0
   12b0a:	4a02      	ldr	r2, [pc, #8]	; (12b14 <initEchoInt(eint_intr_t)+0xc>)
   12b0c:	201a      	movs	r0, #26
   12b0e:	f006 bf79 	b.w	19a04 <eint3_enable_port0>
   12b12:	bf00      	nop
   12b14:	00012d19 	.word	0x00012d19

00012b18 <init_io()>:
_Z7init_iov():
   12b18:	b508      	push	{r3, lr}
   12b1a:	f009 fbbb 	bl	1c294 <sys_get_cpu_clock>
   12b1e:	4b13      	ldr	r3, [pc, #76]	; (12b6c <init_io()+0x54>)
   12b20:	2017      	movs	r0, #23
   12b22:	685a      	ldr	r2, [r3, #4]
   12b24:	2101      	movs	r1, #1
   12b26:	f422 1240 	bic.w	r2, r2, #3145728	; 0x300000
   12b2a:	605a      	str	r2, [r3, #4]
   12b2c:	f009 f9d6 	bl	1bedc <lpc_pconp>
   12b30:	4b0f      	ldr	r3, [pc, #60]	; (12b70 <init_io()+0x58>)
   12b32:	2001      	movs	r0, #1
   12b34:	f8d3 21ac 	ldr.w	r2, [r3, #428]	; 0x1ac
   12b38:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
   12b3c:	f8c3 21ac 	str.w	r2, [r3, #428]	; 0x1ac
   12b40:	f5a3 23d0 	sub.w	r3, r3, #425984	; 0x68000
   12b44:	2200      	movs	r2, #0
   12b46:	671a      	str	r2, [r3, #112]	; 0x70
   12b48:	4a0a      	ldr	r2, [pc, #40]	; (12b74 <init_io()+0x5c>)
   12b4a:	60da      	str	r2, [r3, #12]
   12b4c:	6198      	str	r0, [r3, #24]
   12b4e:	695a      	ldr	r2, [r3, #20]
   12b50:	4302      	orrs	r2, r0
   12b52:	615a      	str	r2, [r3, #20]
   12b54:	695a      	ldr	r2, [r3, #20]
   12b56:	f042 0202 	orr.w	r2, r2, #2
   12b5a:	615a      	str	r2, [r3, #20]
   12b5c:	4b06      	ldr	r3, [pc, #24]	; (12b78 <init_io()+0x60>)
   12b5e:	2210      	movs	r2, #16
   12b60:	601a      	str	r2, [r3, #0]
   12b62:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
   12b66:	f7ff bfcf 	b.w	12b08 <initEchoInt(eint_intr_t)>
   12b6a:	bf00      	nop
   12b6c:	4002c000 	.word	0x4002c000
   12b70:	400fc000 	.word	0x400fc000
   12b74:	016d72b0 	.word	0x016d72b0
   12b78:	e000e100 	.word	0xe000e100

00012b7c <TIMER3_IRQHandler>:
TIMER3_IRQHandler():
   12b7c:	4b10      	ldr	r3, [pc, #64]	; (12bc0 <TIMER3_IRQHandler+0x44>)
   12b7e:	b510      	push	{r4, lr}
   12b80:	681a      	ldr	r2, [r3, #0]
   12b82:	07d2      	lsls	r2, r2, #31
   12b84:	d503      	bpl.n	12b8e <TIMER3_IRQHandler+0x12>
   12b86:	681a      	ldr	r2, [r3, #0]
   12b88:	f042 0201 	orr.w	r2, r2, #1
   12b8c:	601a      	str	r2, [r3, #0]
   12b8e:	4b0d      	ldr	r3, [pc, #52]	; (12bc4 <TIMER3_IRQHandler+0x48>)
   12b90:	681b      	ldr	r3, [r3, #0]
   12b92:	b11b      	cbz	r3, 12b9c <TIMER3_IRQHandler+0x20>
   12b94:	4b0c      	ldr	r3, [pc, #48]	; (12bc8 <TIMER3_IRQHandler+0x4c>)
   12b96:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   12b9a:	601a      	str	r2, [r3, #0]
   12b9c:	4c0b      	ldr	r4, [pc, #44]	; (12bcc <TIMER3_IRQHandler+0x50>)
   12b9e:	2023      	movs	r0, #35	; 0x23
   12ba0:	6823      	ldr	r3, [r4, #0]
   12ba2:	4358      	muls	r0, r3
   12ba4:	f00a fa8c 	bl	1d0c0 <__aeabi_i2f>
   12ba8:	4909      	ldr	r1, [pc, #36]	; (12bd0 <TIMER3_IRQHandler+0x54>)
   12baa:	f00a fadd 	bl	1d168 <__aeabi_fmul>
   12bae:	4b09      	ldr	r3, [pc, #36]	; (12bd4 <TIMER3_IRQHandler+0x58>)
   12bb0:	6018      	str	r0, [r3, #0]
   12bb2:	f00a fcc5 	bl	1d540 <__aeabi_f2uiz>
   12bb6:	4b08      	ldr	r3, [pc, #32]	; (12bd8 <TIMER3_IRQHandler+0x5c>)
   12bb8:	7018      	strb	r0, [r3, #0]
   12bba:	2300      	movs	r3, #0
   12bbc:	6023      	str	r3, [r4, #0]
   12bbe:	bd10      	pop	{r4, pc}
   12bc0:	40094000 	.word	0x40094000
   12bc4:	2007c76c 	.word	0x2007c76c
   12bc8:	e000ed04 	.word	0xe000ed04
   12bcc:	2007c760 	.word	0x2007c760
   12bd0:	3cb73ff4 	.word	0x3cb73ff4
   12bd4:	2007c75c 	.word	0x2007c75c
   12bd8:	2007c73a 	.word	0x2007c73a

00012bdc <encoderTask::encoderTask()>:
_ZN11encoderTaskC1Ev():
   12bdc:	b513      	push	{r0, r1, r4, lr}
   12bde:	2300      	movs	r3, #0
   12be0:	9300      	str	r3, [sp, #0]
   12be2:	4906      	ldr	r1, [pc, #24]	; (12bfc <encoderTask::encoderTask()+0x20>)
   12be4:	f44f 62c0 	mov.w	r2, #1536	; 0x600
   12be8:	2301      	movs	r3, #1
   12bea:	4604      	mov	r4, r0
   12bec:	f006 f88e 	bl	18d0c <scheduler_task::scheduler_task(char const*, unsigned long, unsigned char, void*)>
   12bf0:	4b03      	ldr	r3, [pc, #12]	; (12c00 <encoderTask::encoderTask()+0x24>)
   12bf2:	4620      	mov	r0, r4
   12bf4:	6023      	str	r3, [r4, #0]
   12bf6:	b002      	add	sp, #8
   12bf8:	bd10      	pop	{r4, pc}
   12bfa:	bf00      	nop
   12bfc:	00025472 	.word	0x00025472
   12c00:	00025488 	.word	0x00025488

00012c04 <motorInit()>:
_Z9motorInitv():
   12c04:	b513      	push	{r0, r1, r4, lr}
   12c06:	2264      	movs	r2, #100	; 0x64
   12c08:	a801      	add	r0, sp, #4
   12c0a:	2101      	movs	r1, #1
   12c0c:	f006 ff64 	bl	19ad8 <PWM::PWM(PWM::pwmType, unsigned int)>
   12c10:	4c0c      	ldr	r4, [pc, #48]	; (12c44 <motorInit()+0x40>)
   12c12:	6823      	ldr	r3, [r4, #0]
   12c14:	2b02      	cmp	r3, #2
   12c16:	dc0b      	bgt.n	12c30 <motorInit()+0x2c>
   12c18:	490b      	ldr	r1, [pc, #44]	; (12c48 <motorInit()+0x44>)
   12c1a:	a801      	add	r0, sp, #4
   12c1c:	f006 ff9e 	bl	19b5c <PWM::set(float)>
   12c20:	f44f 7096 	mov.w	r0, #300	; 0x12c
   12c24:	f006 fb30 	bl	19288 <delay_ms>
   12c28:	6823      	ldr	r3, [r4, #0]
   12c2a:	3301      	adds	r3, #1
   12c2c:	6023      	str	r3, [r4, #0]
   12c2e:	e7ef      	b.n	12c10 <motorInit()+0xc>
   12c30:	4b06      	ldr	r3, [pc, #24]	; (12c4c <motorInit()+0x48>)
   12c32:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
   12c36:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
   12c3a:	601a      	str	r2, [r3, #0]
   12c3c:	f006 fb24 	bl	19288 <delay_ms>
   12c40:	b002      	add	sp, #8
   12c42:	bd10      	pop	{r4, pc}
   12c44:	2007c768 	.word	0x2007c768
   12c48:	41700000 	.word	0x41700000
   12c4c:	2007c764 	.word	0x2007c764

00012c50 <pwm_dcmotor(float)>:
_Z11pwm_dcmotorf():
   12c50:	b513      	push	{r0, r1, r4, lr}
   12c52:	4b07      	ldr	r3, [pc, #28]	; (12c70 <pwm_dcmotor(float)+0x20>)
   12c54:	4604      	mov	r4, r0
   12c56:	6018      	str	r0, [r3, #0]
   12c58:	2264      	movs	r2, #100	; 0x64
   12c5a:	a801      	add	r0, sp, #4
   12c5c:	2101      	movs	r1, #1
   12c5e:	f006 ff3b 	bl	19ad8 <PWM::PWM(PWM::pwmType, unsigned int)>
   12c62:	a801      	add	r0, sp, #4
   12c64:	4621      	mov	r1, r4
   12c66:	f006 ff79 	bl	19b5c <PWM::set(float)>
   12c6a:	b002      	add	sp, #8
   12c6c:	bd10      	pop	{r4, pc}
   12c6e:	bf00      	nop
   12c70:	2007c744 	.word	0x2007c744

00012c74 <pwm_servomotor(float)>:
_Z14pwm_servomotorf():
   12c74:	b513      	push	{r0, r1, r4, lr}
   12c76:	2264      	movs	r2, #100	; 0x64
   12c78:	4604      	mov	r4, r0
   12c7a:	2102      	movs	r1, #2
   12c7c:	a801      	add	r0, sp, #4
   12c7e:	f006 ff2b 	bl	19ad8 <PWM::PWM(PWM::pwmType, unsigned int)>
   12c82:	a801      	add	r0, sp, #4
   12c84:	4621      	mov	r1, r4
   12c86:	f006 ff69 	bl	19b5c <PWM::set(float)>
   12c8a:	b002      	add	sp, #8
   12c8c:	bd10      	pop	{r4, pc}
	...

00012c90 <reverseInit()>:
_Z11reverseInitv():
   12c90:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   12c92:	2101      	movs	r1, #1
   12c94:	a801      	add	r0, sp, #4
   12c96:	2264      	movs	r2, #100	; 0x64
   12c98:	f006 ff1e 	bl	19ad8 <PWM::PWM(PWM::pwmType, unsigned int)>
   12c9c:	4f1a      	ldr	r7, [pc, #104]	; (12d08 <reverseInit()+0x78>)
   12c9e:	2612      	movs	r6, #18
   12ca0:	4638      	mov	r0, r7
   12ca2:	f00a f88f 	bl	1cdc4 <__aeabi_f2d>
   12ca6:	3e01      	subs	r6, #1
   12ca8:	4604      	mov	r4, r0
   12caa:	460d      	mov	r5, r1
   12cac:	d00e      	beq.n	12ccc <reverseInit()+0x3c>
   12cae:	4639      	mov	r1, r7
   12cb0:	a801      	add	r0, sp, #4
   12cb2:	f006 ff53 	bl	19b5c <PWM::set(float)>
   12cb6:	a312      	add	r3, pc, #72	; (adr r3, 12d00 <reverseInit()+0x70>)
   12cb8:	e9d3 2300 	ldrd	r2, r3, [r3]
   12cbc:	4620      	mov	r0, r4
   12cbe:	4629      	mov	r1, r5
   12cc0:	f009 ff20 	bl	1cb04 <__aeabi_dsub>
   12cc4:	f00a f8f2 	bl	1ceac <__aeabi_d2f>
   12cc8:	4607      	mov	r7, r0
   12cca:	e7e9      	b.n	12ca0 <reverseInit()+0x10>
   12ccc:	f241 3488 	movw	r4, #5000	; 0x1388
   12cd0:	a801      	add	r0, sp, #4
   12cd2:	490e      	ldr	r1, [pc, #56]	; (12d0c <reverseInit()+0x7c>)
   12cd4:	f006 ff42 	bl	19b5c <PWM::set(float)>
   12cd8:	3c01      	subs	r4, #1
   12cda:	d1f9      	bne.n	12cd0 <reverseInit()+0x40>
   12cdc:	f241 3488 	movw	r4, #5000	; 0x1388
   12ce0:	a801      	add	r0, sp, #4
   12ce2:	490b      	ldr	r1, [pc, #44]	; (12d10 <reverseInit()+0x80>)
   12ce4:	f006 ff3a 	bl	19b5c <PWM::set(float)>
   12ce8:	3c01      	subs	r4, #1
   12cea:	d1f9      	bne.n	12ce0 <reverseInit()+0x50>
   12cec:	f241 3488 	movw	r4, #5000	; 0x1388
   12cf0:	a801      	add	r0, sp, #4
   12cf2:	4906      	ldr	r1, [pc, #24]	; (12d0c <reverseInit()+0x7c>)
   12cf4:	f006 ff32 	bl	19b5c <PWM::set(float)>
   12cf8:	3c01      	subs	r4, #1
   12cfa:	d1f9      	bne.n	12cf0 <reverseInit()+0x60>
   12cfc:	b003      	add	sp, #12
   12cfe:	bdf0      	pop	{r4, r5, r6, r7, pc}
   12d00:	33333333 	.word	0x33333333
   12d04:	3fd33333 	.word	0x3fd33333
   12d08:	41a06666 	.word	0x41a06666
   12d0c:	41700000 	.word	0x41700000
   12d10:	41211eb8 	.word	0x41211eb8
$t():
   12d14:	f3af 8000 	nop.w

00012d18 <ext_callback()>:
_Z12ext_callbackv():
   12d18:	b510      	push	{r4, lr}
   12d1a:	4c0e      	ldr	r4, [pc, #56]	; (12d54 <ext_callback()+0x3c>)
   12d1c:	6823      	ldr	r3, [r4, #0]
   12d1e:	b933      	cbnz	r3, 12d2e <ext_callback()+0x16>
   12d20:	f7ff f8c2 	bl	11ea8 <SingletonTemplate<LED>::getInstance()>
   12d24:	2104      	movs	r1, #4
   12d26:	f002 f8f5 	bl	14f14 <LED::on(int)>
   12d2a:	2301      	movs	r3, #1
   12d2c:	e005      	b.n	12d3a <ext_callback()+0x22>
   12d2e:	f7ff f8bb 	bl	11ea8 <SingletonTemplate<LED>::getInstance()>
   12d32:	2104      	movs	r1, #4
   12d34:	f002 f8f9 	bl	14f2a <LED::off(int)>
   12d38:	2300      	movs	r3, #0
   12d3a:	6023      	str	r3, [r4, #0]
   12d3c:	4b06      	ldr	r3, [pc, #24]	; (12d58 <ext_callback()+0x40>)
   12d3e:	681a      	ldr	r2, [r3, #0]
   12d40:	3201      	adds	r2, #1
   12d42:	601a      	str	r2, [r3, #0]
   12d44:	4b05      	ldr	r3, [pc, #20]	; (12d5c <ext_callback()+0x44>)
   12d46:	681b      	ldr	r3, [r3, #0]
   12d48:	b11b      	cbz	r3, 12d52 <ext_callback()+0x3a>
   12d4a:	4b05      	ldr	r3, [pc, #20]	; (12d60 <ext_callback()+0x48>)
   12d4c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   12d50:	601a      	str	r2, [r3, #0]
   12d52:	bd10      	pop	{r4, pc}
   12d54:	2007c770 	.word	0x2007c770
   12d58:	2007c760 	.word	0x2007c760
   12d5c:	2007c76c 	.word	0x2007c76c
   12d60:	e000ed04 	.word	0xe000ed04

00012d64 <encoderTask::init()>:
_ZN11encoderTask4initEv():
   12d64:	b508      	push	{r3, lr}
   12d66:	f7ff fed7 	bl	12b18 <init_io()>
   12d6a:	f7ff f89d 	bl	11ea8 <SingletonTemplate<LED>::getInstance()>
   12d6e:	f002 f8af 	bl	14ed0 <LED::init()>
   12d72:	4b03      	ldr	r3, [pc, #12]	; (12d80 <encoderTask::init()+0x1c>)
   12d74:	2001      	movs	r0, #1
   12d76:	685a      	ldr	r2, [r3, #4]
   12d78:	f042 0201 	orr.w	r2, r2, #1
   12d7c:	605a      	str	r2, [r3, #4]
   12d7e:	bd08      	pop	{r3, pc}
   12d80:	40094000 	.word	0x40094000

00012d84 <hl_print_line()>:
_ZL13hl_print_linev():
   12d84:	4801      	ldr	r0, [pc, #4]	; (12d8c <hl_print_line()+0x8>)
   12d86:	f00b bdf1 	b.w	1e96c <puts>
   12d8a:	bf00      	nop
   12d8c:	000254a0 	.word	0x000254a0

00012d90 <ssp_set_max_clock>:
ssp_set_max_clock():
   12d90:	b538      	push	{r3, r4, r5, lr}
   12d92:	4604      	mov	r4, r0
   12d94:	460d      	mov	r5, r1
   12d96:	f009 fa7d 	bl	1c294 <sys_get_cpu_clock>
   12d9a:	4b07      	ldr	r3, [pc, #28]	; (12db8 <ssp_set_max_clock+0x28>)
   12d9c:	fbb0 f0f3 	udiv	r0, r0, r3
   12da0:	2302      	movs	r3, #2
   12da2:	fbb0 f2f3 	udiv	r2, r0, r3
   12da6:	4295      	cmp	r5, r2
   12da8:	d301      	bcc.n	12dae <ssp_set_max_clock+0x1e>
   12daa:	6123      	str	r3, [r4, #16]
   12dac:	bd38      	pop	{r3, r4, r5, pc}
   12dae:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
   12db2:	d0fa      	beq.n	12daa <ssp_set_max_clock+0x1a>
   12db4:	3302      	adds	r3, #2
   12db6:	e7f4      	b.n	12da2 <ssp_set_max_clock+0x12>
   12db8:	000f4240 	.word	0x000f4240

00012dbc <hl_mount_storage(FileSystemObject&, char const*)>:
_ZL16hl_mount_storageR16FileSystemObjectPKc():
   12dbc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   12dbe:	f200 2635 	addw	r6, r0, #565	; 0x235
   12dc2:	460d      	mov	r5, r1
   12dc4:	2201      	movs	r2, #1
   12dc6:	4631      	mov	r1, r6
   12dc8:	f004 f928 	bl	1701c <f_mount>
   12dcc:	b2c4      	uxtb	r4, r0
   12dce:	bb4c      	cbnz	r4, 12e24 <hl_mount_storage(FileSystemObject&, char const*)+0x68>
   12dd0:	a904      	add	r1, sp, #16
   12dd2:	f841 4d04 	str.w	r4, [r1, #-4]!
   12dd6:	4630      	mov	r0, r6
   12dd8:	aa02      	add	r2, sp, #8
   12dda:	f004 fcfe 	bl	177da <f_getfree>
   12dde:	b9f8      	cbnz	r0, 12e20 <hl_mount_storage(FileSystemObject&, char const*)+0x64>
   12de0:	9a02      	ldr	r2, [sp, #8]
   12de2:	9903      	ldr	r1, [sp, #12]
   12de4:	7893      	ldrb	r3, [r2, #2]
   12de6:	6992      	ldr	r2, [r2, #24]
   12de8:	4359      	muls	r1, r3
   12dea:	3a02      	subs	r2, #2
   12dec:	435a      	muls	r2, r3
   12dee:	0852      	lsrs	r2, r2, #1
   12df0:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
   12df4:	4810      	ldr	r0, [pc, #64]	; (12e38 <hl_mount_storage(FileSystemObject&, char const*)+0x7c>)
   12df6:	4b11      	ldr	r3, [pc, #68]	; (12e3c <hl_mount_storage(FileSystemObject&, char const*)+0x80>)
   12df8:	bf2c      	ite	cs
   12dfa:	f44f 6480 	movcs.w	r4, #1024	; 0x400
   12dfe:	2401      	movcc	r4, #1
   12e00:	ea4f 0151 	mov.w	r1, r1, lsr #1
   12e04:	bf28      	it	cs
   12e06:	4603      	movcs	r3, r0
   12e08:	fbb1 f1f4 	udiv	r1, r1, r4
   12e0c:	e88d 000a 	stmia.w	sp, {r1, r3}
   12e10:	480b      	ldr	r0, [pc, #44]	; (12e40 <hl_mount_storage(FileSystemObject&, char const*)+0x84>)
   12e12:	4629      	mov	r1, r5
   12e14:	fbb2 f2f4 	udiv	r2, r2, r4
   12e18:	f00b fd30 	bl	1e87c <iprintf>
   12e1c:	2001      	movs	r0, #1
   12e1e:	e008      	b.n	12e32 <hl_mount_storage(FileSystemObject&, char const*)+0x76>
   12e20:	4b08      	ldr	r3, [pc, #32]	; (12e44 <hl_mount_storage(FileSystemObject&, char const*)+0x88>)
   12e22:	e000      	b.n	12e26 <hl_mount_storage(FileSystemObject&, char const*)+0x6a>
   12e24:	4b08      	ldr	r3, [pc, #32]	; (12e48 <hl_mount_storage(FileSystemObject&, char const*)+0x8c>)
   12e26:	4809      	ldr	r0, [pc, #36]	; (12e4c <hl_mount_storage(FileSystemObject&, char const*)+0x90>)
   12e28:	4629      	mov	r1, r5
   12e2a:	b262      	sxtb	r2, r4
   12e2c:	f00b fd26 	bl	1e87c <iprintf>
   12e30:	2000      	movs	r0, #0
   12e32:	b004      	add	sp, #16
   12e34:	bd70      	pop	{r4, r5, r6, pc}
   12e36:	bf00      	nop
   12e38:	000254de 	.word	0x000254de
   12e3c:	000254db 	.word	0x000254db
   12e40:	000254e8 	.word	0x000254e8
   12e44:	000254e1 	.word	0x000254e1
   12e48:	000254e5 	.word	0x000254e5
   12e4c:	00025516 	.word	0x00025516

00012e50 <SingletonTemplate<TemperatureSensor>::getInstance()>:
_ZN17SingletonTemplateI17TemperatureSensorE11getInstanceEv():
   12e50:	b538      	push	{r3, r4, r5, lr}
   12e52:	4d08      	ldr	r5, [pc, #32]	; (12e74 <SingletonTemplate<TemperatureSensor>::getInstance()+0x24>)
   12e54:	682b      	ldr	r3, [r5, #0]
   12e56:	b95b      	cbnz	r3, 12e70 <SingletonTemplate<TemperatureSensor>::getInstance()+0x20>
   12e58:	200c      	movs	r0, #12
   12e5a:	f7fd fa09 	bl	10270 <operator new(unsigned int)>
   12e5e:	4604      	mov	r4, r0
   12e60:	f7fe f88a 	bl	10f78 <SingletonTemplate<I2C2>::getInstance()>
   12e64:	2390      	movs	r3, #144	; 0x90
   12e66:	7123      	strb	r3, [r4, #4]
   12e68:	2300      	movs	r3, #0
   12e6a:	6020      	str	r0, [r4, #0]
   12e6c:	60a3      	str	r3, [r4, #8]
   12e6e:	602c      	str	r4, [r5, #0]
   12e70:	6828      	ldr	r0, [r5, #0]
   12e72:	bd38      	pop	{r3, r4, r5, pc}
   12e74:	2007c1f0 	.word	0x2007c1f0

00012e78 <SingletonTemplate<Light_Sensor>::getInstance()>:
_ZN17SingletonTemplateI12Light_SensorE11getInstanceEv():
   12e78:	b510      	push	{r4, lr}
   12e7a:	4c04      	ldr	r4, [pc, #16]	; (12e8c <SingletonTemplate<Light_Sensor>::getInstance()+0x14>)
   12e7c:	6823      	ldr	r3, [r4, #0]
   12e7e:	b91b      	cbnz	r3, 12e88 <SingletonTemplate<Light_Sensor>::getInstance()+0x10>
   12e80:	2001      	movs	r0, #1
   12e82:	f7fd f9f5 	bl	10270 <operator new(unsigned int)>
   12e86:	6020      	str	r0, [r4, #0]
   12e88:	6820      	ldr	r0, [r4, #0]
   12e8a:	bd10      	pop	{r4, pc}
   12e8c:	2007c1f4 	.word	0x2007c1f4

00012e90 <SingletonTemplate<Switches>::getInstance()>:
_ZN17SingletonTemplateI8SwitchesE11getInstanceEv():
   12e90:	b510      	push	{r4, lr}
   12e92:	4c04      	ldr	r4, [pc, #16]	; (12ea4 <SingletonTemplate<Switches>::getInstance()+0x14>)
   12e94:	6823      	ldr	r3, [r4, #0]
   12e96:	b91b      	cbnz	r3, 12ea0 <SingletonTemplate<Switches>::getInstance()+0x10>
   12e98:	2001      	movs	r0, #1
   12e9a:	f7fd f9e9 	bl	10270 <operator new(unsigned int)>
   12e9e:	6020      	str	r0, [r4, #0]
   12ea0:	6820      	ldr	r0, [r4, #0]
   12ea2:	bd10      	pop	{r4, pc}
   12ea4:	2007c720 	.word	0x2007c720

00012ea8 <high_level_init()>:
_Z15high_level_initv():
   12ea8:	49ad      	ldr	r1, [pc, #692]	; (13160 <high_level_init()+0x2b8>)
   12eaa:	4aae      	ldr	r2, [pc, #696]	; (13164 <high_level_init()+0x2bc>)
   12eac:	2340      	movs	r3, #64	; 0x40
   12eae:	b5f0      	push	{r4, r5, r6, r7, lr}
   12eb0:	618b      	str	r3, [r1, #24]
   12eb2:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
   12eb6:	6193      	str	r3, [r2, #24]
   12eb8:	f44f 3380 	mov.w	r3, #65536	; 0x10000
   12ebc:	618b      	str	r3, [r1, #24]
   12ebe:	4baa      	ldr	r3, [pc, #680]	; (13168 <high_level_init()+0x2c0>)
   12ec0:	f5ad 7d05 	sub.w	sp, sp, #532	; 0x214
   12ec4:	6818      	ldr	r0, [r3, #0]
   12ec6:	2507      	movs	r5, #7
   12ec8:	f020 00f0 	bic.w	r0, r0, #240	; 0xf0
   12ecc:	6018      	str	r0, [r3, #0]
   12ece:	6818      	ldr	r0, [r3, #0]
   12ed0:	2402      	movs	r4, #2
   12ed2:	f040 0050 	orr.w	r0, r0, #80	; 0x50
   12ed6:	6018      	str	r0, [r3, #0]
   12ed8:	6818      	ldr	r0, [r3, #0]
   12eda:	f420 5040 	bic.w	r0, r0, #12288	; 0x3000
   12ede:	6018      	str	r0, [r3, #0]
   12ee0:	6808      	ldr	r0, [r1, #0]
   12ee2:	f040 0040 	orr.w	r0, r0, #64	; 0x40
   12ee6:	6008      	str	r0, [r1, #0]
   12ee8:	6818      	ldr	r0, [r3, #0]
   12eea:	f420 207c 	bic.w	r0, r0, #1032192	; 0xfc000
   12eee:	6018      	str	r0, [r3, #0]
   12ef0:	6818      	ldr	r0, [r3, #0]
   12ef2:	f440 2028 	orr.w	r0, r0, #688128	; 0xa8000
   12ef6:	6018      	str	r0, [r3, #0]
   12ef8:	6818      	ldr	r0, [r3, #0]
   12efa:	f420 0070 	bic.w	r0, r0, #15728640	; 0xf00000
   12efe:	6018      	str	r0, [r3, #0]
   12f00:	6818      	ldr	r0, [r3, #0]
   12f02:	f440 0020 	orr.w	r0, r0, #10485760	; 0xa00000
   12f06:	6018      	str	r0, [r3, #0]
   12f08:	6818      	ldr	r0, [r3, #0]
   12f0a:	f020 4040 	bic.w	r0, r0, #3221225472	; 0xc0000000
   12f0e:	6018      	str	r0, [r3, #0]
   12f10:	6818      	ldr	r0, [r3, #0]
   12f12:	f040 4000 	orr.w	r0, r0, #2147483648	; 0x80000000
   12f16:	6018      	str	r0, [r3, #0]
   12f18:	6858      	ldr	r0, [r3, #4]
   12f1a:	f020 003c 	bic.w	r0, r0, #60	; 0x3c
   12f1e:	6058      	str	r0, [r3, #4]
   12f20:	6858      	ldr	r0, [r3, #4]
   12f22:	f040 0028 	orr.w	r0, r0, #40	; 0x28
   12f26:	6058      	str	r0, [r3, #4]
   12f28:	6858      	ldr	r0, [r3, #4]
   12f2a:	f020 0003 	bic.w	r0, r0, #3
   12f2e:	6058      	str	r0, [r3, #4]
   12f30:	6808      	ldr	r0, [r1, #0]
   12f32:	f440 3080 	orr.w	r0, r0, #65536	; 0x10000
   12f36:	6008      	str	r0, [r1, #0]
   12f38:	6858      	ldr	r0, [r3, #4]
   12f3a:	f420 5040 	bic.w	r0, r0, #12288	; 0x3000
   12f3e:	6058      	str	r0, [r3, #4]
   12f40:	6808      	ldr	r0, [r1, #0]
   12f42:	f420 0080 	bic.w	r0, r0, #4194304	; 0x400000
   12f46:	6008      	str	r0, [r1, #0]
   12f48:	68d9      	ldr	r1, [r3, #12]
   12f4a:	f421 3140 	bic.w	r1, r1, #196608	; 0x30000
   12f4e:	60d9      	str	r1, [r3, #12]
   12f50:	6811      	ldr	r1, [r2, #0]
   12f52:	f041 7180 	orr.w	r1, r1, #16777216	; 0x1000000
   12f56:	6011      	str	r1, [r2, #0]
   12f58:	6859      	ldr	r1, [r3, #4]
   12f5a:	f421 2140 	bic.w	r1, r1, #786432	; 0xc0000
   12f5e:	6059      	str	r1, [r3, #4]
   12f60:	6859      	ldr	r1, [r3, #4]
   12f62:	f441 2180 	orr.w	r1, r1, #262144	; 0x40000
   12f66:	6059      	str	r1, [r3, #4]
   12f68:	6898      	ldr	r0, [r3, #8]
   12f6a:	4980      	ldr	r1, [pc, #512]	; (1316c <high_level_init()+0x2c4>)
   12f6c:	4001      	ands	r1, r0
   12f6e:	6099      	str	r1, [r3, #8]
   12f70:	6811      	ldr	r1, [r2, #0]
   12f72:	f441 7189 	orr.w	r1, r1, #274	; 0x112
   12f76:	f041 0101 	orr.w	r1, r1, #1
   12f7a:	6011      	str	r1, [r2, #0]
   12f7c:	6899      	ldr	r1, [r3, #8]
   12f7e:	f421 1170 	bic.w	r1, r1, #3932160	; 0x3c0000
   12f82:	6099      	str	r1, [r3, #8]
   12f84:	6899      	ldr	r1, [r3, #8]
   12f86:	f021 4170 	bic.w	r1, r1, #4026531840	; 0xf0000000
   12f8a:	6099      	str	r1, [r3, #8]
   12f8c:	6811      	ldr	r1, [r2, #0]
   12f8e:	f421 4146 	bic.w	r1, r1, #50688	; 0xc600
   12f92:	6011      	str	r1, [r2, #0]
   12f94:	68d9      	ldr	r1, [r3, #12]
   12f96:	f021 0130 	bic.w	r1, r1, #48	; 0x30
   12f9a:	60d9      	str	r1, [r3, #12]
   12f9c:	68d9      	ldr	r1, [r3, #12]
   12f9e:	f041 0130 	orr.w	r1, r1, #48	; 0x30
   12fa2:	60d9      	str	r1, [r3, #12]
   12fa4:	68d9      	ldr	r1, [r3, #12]
   12fa6:	f421 1170 	bic.w	r1, r1, #3932160	; 0x3c0000
   12faa:	60d9      	str	r1, [r3, #12]
   12fac:	6813      	ldr	r3, [r2, #0]
   12fae:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
   12fb2:	6013      	str	r3, [r2, #0]
   12fb4:	6813      	ldr	r3, [r2, #0]
   12fb6:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
   12fba:	6013      	str	r3, [r2, #0]
   12fbc:	f006 f9a6 	bl	1930c <adc0_init>
   12fc0:	200a      	movs	r0, #10
   12fc2:	2101      	movs	r1, #1
   12fc4:	f008 ff8a 	bl	1bedc <lpc_pconp>
   12fc8:	200a      	movs	r0, #10
   12fca:	2101      	movs	r1, #1
   12fcc:	f008 ff9e 	bl	1bf0c <lpc_pclk>
   12fd0:	4867      	ldr	r0, [pc, #412]	; (13170 <high_level_init()+0x2c8>)
   12fd2:	2101      	movs	r1, #1
   12fd4:	6005      	str	r5, [r0, #0]
   12fd6:	6044      	str	r4, [r0, #4]
   12fd8:	f7ff feda 	bl	12d90 <ssp_set_max_clock>
   12fdc:	f006 ffa4 	bl	19f28 <ssp1_dma_init>
   12fe0:	2015      	movs	r0, #21
   12fe2:	2101      	movs	r1, #1
   12fe4:	f008 ff7a 	bl	1bedc <lpc_pconp>
   12fe8:	2015      	movs	r0, #21
   12fea:	2101      	movs	r1, #1
   12fec:	f008 ff8e 	bl	1bf0c <lpc_pclk>
   12ff0:	4860      	ldr	r0, [pc, #384]	; (13174 <high_level_init()+0x2cc>)
   12ff2:	2101      	movs	r1, #1
   12ff4:	6005      	str	r5, [r0, #0]
   12ff6:	6044      	str	r4, [r0, #4]
   12ff8:	f7ff feca 	bl	12d90 <ssp_set_max_clock>
   12ffc:	f7fd ffbc 	bl	10f78 <SingletonTemplate<I2C2>::getInstance()>
   13000:	2164      	movs	r1, #100	; 0x64
   13002:	f006 fd17 	bl	19a34 <I2C2::init(unsigned int)>
   13006:	b910      	cbnz	r0, 1300e <high_level_init()+0x166>
   13008:	485b      	ldr	r0, [pc, #364]	; (13178 <high_level_init()+0x2d0>)
   1300a:	f00b fcaf 	bl	1e96c <puts>
   1300e:	f008 ffa1 	bl	1bf54 <lpc_sys_setup_system_timer>
   13012:	f001 fe19 	bl	14c48 <wireless_init>
   13016:	b910      	cbnz	r0, 1301e <high_level_init()+0x176>
   13018:	4858      	ldr	r0, [pc, #352]	; (1317c <high_level_init()+0x2d4>)
   1301a:	f00b fca7 	bl	1e96c <puts>
   1301e:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
   13022:	f006 f931 	bl	19288 <delay_ms>
   13026:	f7ff fead 	bl	12d84 <hl_print_line()>
   1302a:	f009 f933 	bl	1c294 <sys_get_cpu_clock>
   1302e:	f00a f843 	bl	1d0b8 <__aeabi_ui2f>
   13032:	4953      	ldr	r1, [pc, #332]	; (13180 <high_level_init()+0x2d8>)
   13034:	f00a f94c 	bl	1d2d0 <__aeabi_fdiv>
   13038:	f009 fec4 	bl	1cdc4 <__aeabi_f2d>
   1303c:	4602      	mov	r2, r0
   1303e:	460b      	mov	r3, r1
   13040:	4850      	ldr	r0, [pc, #320]	; (13184 <high_level_init()+0x2dc>)
   13042:	f00b fc1b 	bl	1e87c <iprintf>
   13046:	f008 fe1d 	bl	1bc84 <sys_get_boot_type>
   1304a:	2805      	cmp	r0, #5
   1304c:	ac04      	add	r4, sp, #16
   1304e:	d114      	bne.n	1307a <high_level_init()+0x1d2>
   13050:	2300      	movs	r3, #0
   13052:	6063      	str	r3, [r4, #4]
   13054:	4b4c      	ldr	r3, [pc, #304]	; (13188 <high_level_init()+0x2e0>)
   13056:	681b      	ldr	r3, [r3, #0]
   13058:	6023      	str	r3, [r4, #0]
   1305a:	f7ff fe93 	bl	12d84 <hl_print_line()>
   1305e:	4b4b      	ldr	r3, [pc, #300]	; (1318c <high_level_init()+0x2e4>)
   13060:	484b      	ldr	r0, [pc, #300]	; (13190 <high_level_init()+0x2e8>)
   13062:	6cd9      	ldr	r1, [r3, #76]	; 0x4c
   13064:	6d1a      	ldr	r2, [r3, #80]	; 0x50
   13066:	6d5b      	ldr	r3, [r3, #84]	; 0x54
   13068:	9400      	str	r4, [sp, #0]
   1306a:	f00b fc07 	bl	1e87c <iprintf>
   1306e:	f7ff fe89 	bl	12d84 <hl_print_line()>
   13072:	f241 3088 	movw	r0, #5000	; 0x1388
   13076:	f006 f907 	bl	19288 <delay_ms>
   1307a:	f7fd fa29 	bl	104d0 <Storage::getFlashDrive()>
   1307e:	4945      	ldr	r1, [pc, #276]	; (13194 <high_level_init()+0x2ec>)
   13080:	f7ff fe9c 	bl	12dbc <hl_mount_storage(FileSystemObject&, char const*)>
   13084:	4605      	mov	r5, r0
   13086:	bb68      	cbnz	r0, 130e4 <high_level_init()+0x23c>
   13088:	4843      	ldr	r0, [pc, #268]	; (13198 <high_level_init()+0x2f0>)
   1308a:	f00b fbf7 	bl	1e87c <iprintf>
   1308e:	f002 ff9f 	bl	15fd0 <flash_chip_erase>
   13092:	f7fd fa1d 	bl	104d0 <Storage::getFlashDrive()>
   13096:	4629      	mov	r1, r5
   13098:	462a      	mov	r2, r5
   1309a:	f200 2035 	addw	r0, r0, #565	; 0x235
   1309e:	f004 fd99 	bl	17bd4 <f_mkfs>
   130a2:	4b3e      	ldr	r3, [pc, #248]	; (1319c <high_level_init()+0x2f4>)
   130a4:	4a3e      	ldr	r2, [pc, #248]	; (131a0 <high_level_init()+0x2f8>)
   130a6:	2800      	cmp	r0, #0
   130a8:	bf14      	ite	ne
   130aa:	4610      	movne	r0, r2
   130ac:	4618      	moveq	r0, r3
   130ae:	f00b fc5d 	bl	1e96c <puts>
   130b2:	f7fd fa0d 	bl	104d0 <Storage::getFlashDrive()>
   130b6:	4937      	ldr	r1, [pc, #220]	; (13194 <high_level_init()+0x2ec>)
   130b8:	f7ff fe80 	bl	12dbc <hl_mount_storage(FileSystemObject&, char const*)>
   130bc:	b990      	cbnz	r0, 130e4 <high_level_init()+0x23c>
   130be:	4839      	ldr	r0, [pc, #228]	; (131a4 <high_level_init()+0x2fc>)
   130c0:	f00b fc54 	bl	1e96c <puts>
   130c4:	f002 ff06 	bl	15ed4 <flash_get_page_size>
   130c8:	4601      	mov	r1, r0
   130ca:	4837      	ldr	r0, [pc, #220]	; (131a8 <high_level_init()+0x300>)
   130cc:	f00b fbd6 	bl	1e87c <iprintf>
   130d0:	f002 fef0 	bl	15eb4 <flash_get_page_count>
   130d4:	4605      	mov	r5, r0
   130d6:	f002 fefd 	bl	15ed4 <flash_get_page_size>
   130da:	fb05 f100 	mul.w	r1, r5, r0
   130de:	4833      	ldr	r0, [pc, #204]	; (131ac <high_level_init()+0x304>)
   130e0:	f00b fbcc 	bl	1e87c <iprintf>
   130e4:	4d32      	ldr	r5, [pc, #200]	; (131b0 <high_level_init()+0x308>)
   130e6:	4e33      	ldr	r6, [pc, #204]	; (131b4 <high_level_init()+0x30c>)
   130e8:	682b      	ldr	r3, [r5, #0]
   130ea:	f013 0701 	ands.w	r7, r3, #1
   130ee:	d116      	bne.n	1311e <high_level_init()+0x276>
   130f0:	4628      	mov	r0, r5
   130f2:	f009 fbbb 	bl	1c86c <__cxa_guard_acquire>
   130f6:	b190      	cbz	r0, 1311e <high_level_init()+0x276>
   130f8:	f44f 700e 	mov.w	r0, #568	; 0x238
   130fc:	f7fd f8b8 	bl	10270 <operator new(unsigned int)>
   13100:	2201      	movs	r2, #1
   13102:	f880 2234 	strb.w	r2, [r0, #564]	; 0x234
   13106:	2231      	movs	r2, #49	; 0x31
   13108:	f880 2235 	strb.w	r2, [r0, #565]	; 0x235
   1310c:	223a      	movs	r2, #58	; 0x3a
   1310e:	f880 2236 	strb.w	r2, [r0, #566]	; 0x236
   13112:	f880 7237 	strb.w	r7, [r0, #567]	; 0x237
   13116:	6030      	str	r0, [r6, #0]
   13118:	4628      	mov	r0, r5
   1311a:	f009 fbb5 	bl	1c888 <__cxa_guard_release>
   1311e:	6830      	ldr	r0, [r6, #0]
   13120:	4925      	ldr	r1, [pc, #148]	; (131b8 <high_level_init()+0x310>)
   13122:	4e26      	ldr	r6, [pc, #152]	; (131bc <high_level_init()+0x314>)
   13124:	f7ff fe4a 	bl	12dbc <hl_mount_storage(FileSystemObject&, char const*)>
   13128:	4811      	ldr	r0, [pc, #68]	; (13170 <high_level_init()+0x2c8>)
   1312a:	2118      	movs	r1, #24
   1312c:	f7ff fe30 	bl	12d90 <ssp_set_max_clock>
   13130:	f7ff fe28 	bl	12d84 <hl_print_line()>
   13134:	6833      	ldr	r3, [r6, #0]
   13136:	b94b      	cbnz	r3, 1314c <high_level_init()+0x2a4>
   13138:	2008      	movs	r0, #8
   1313a:	f7fd f899 	bl	10270 <operator new(unsigned int)>
   1313e:	4605      	mov	r5, r0
   13140:	f7fd ff1a 	bl	10f78 <SingletonTemplate<I2C2>::getInstance()>
   13144:	2338      	movs	r3, #56	; 0x38
   13146:	6028      	str	r0, [r5, #0]
   13148:	712b      	strb	r3, [r5, #4]
   1314a:	6035      	str	r5, [r6, #0]
   1314c:	6830      	ldr	r0, [r6, #0]
   1314e:	f001 fdff 	bl	14d50 <Acceleration_Sensor::init()>
   13152:	4605      	mov	r5, r0
   13154:	bbb0      	cbnz	r0, 131c4 <high_level_init()+0x31c>
   13156:	481a      	ldr	r0, [pc, #104]	; (131c0 <high_level_init()+0x318>)
   13158:	f00b fc08 	bl	1e96c <puts>
   1315c:	e033      	b.n	131c6 <high_level_init()+0x31e>
   1315e:	bf00      	nop
   13160:	2009c000 	.word	0x2009c000
   13164:	2009c020 	.word	0x2009c020
   13168:	4002c000 	.word	0x4002c000
   1316c:	fffcfcf0 	.word	0xfffcfcf0
   13170:	40030000 	.word	0x40030000
   13174:	40088000 	.word	0x40088000
   13178:	0002555a 	.word	0x0002555a
   1317c:	0002558b 	.word	0x0002558b
   13180:	49742400 	.word	0x49742400
   13184:	000255b0 	.word	0x000255b0
   13188:	40024044 	.word	0x40024044
   1318c:	40024000 	.word	0x40024000
   13190:	000255c8 	.word	0x000255c8
   13194:	00025640 	.word	0x00025640
   13198:	00025648 	.word	0x00025648
   1319c:	00025549 	.word	0x00025549
   131a0:	0002554e 	.word	0x0002554e
   131a4:	00025685 	.word	0x00025685
   131a8:	000256a4 	.word	0x000256a4
   131ac:	000256b3 	.word	0x000256b3
   131b0:	2007c200 	.word	0x2007c200
   131b4:	2007c1e8 	.word	0x2007c1e8
   131b8:	00024726 	.word	0x00024726
   131bc:	2007c778 	.word	0x2007c778
   131c0:	000256ce 	.word	0x000256ce
   131c4:	2501      	movs	r5, #1
   131c6:	f7ff fe43 	bl	12e50 <SingletonTemplate<TemperatureSensor>::getInstance()>
   131ca:	f001 fed3 	bl	14f74 <I2C_Temp::init()>
   131ce:	4606      	mov	r6, r0
   131d0:	b918      	cbnz	r0, 131da <high_level_init()+0x332>
   131d2:	4873      	ldr	r0, [pc, #460]	; (133a0 <high_level_init()+0x4f8>)
   131d4:	f00b fbca 	bl	1e96c <puts>
   131d8:	4635      	mov	r5, r6
   131da:	f7ff fa7f 	bl	126dc <SingletonTemplate<LED_Display>::getInstance()>
   131de:	f001 fe3b 	bl	14e58 <LED_Display::init()>
   131e2:	4606      	mov	r6, r0
   131e4:	b918      	cbnz	r0, 131ee <high_level_init()+0x346>
   131e6:	486f      	ldr	r0, [pc, #444]	; (133a4 <high_level_init()+0x4fc>)
   131e8:	f00b fbc0 	bl	1e96c <puts>
   131ec:	4635      	mov	r5, r6
   131ee:	4e6e      	ldr	r6, [pc, #440]	; (133a8 <high_level_init()+0x500>)
   131f0:	6833      	ldr	r3, [r6, #0]
   131f2:	b91b      	cbnz	r3, 131fc <high_level_init()+0x354>
   131f4:	2001      	movs	r0, #1
   131f6:	f7fd f83b 	bl	10270 <operator new(unsigned int)>
   131fa:	6030      	str	r0, [r6, #0]
   131fc:	6830      	ldr	r0, [r6, #0]
   131fe:	f001 fdfb 	bl	14df8 <IR_Sensor::init()>
   13202:	f7ff fe39 	bl	12e78 <SingletonTemplate<Light_Sensor>::getInstance()>
   13206:	f001 fea2 	bl	14f4e <Light_Sensor::init()>
   1320a:	f7fe fe4d 	bl	11ea8 <SingletonTemplate<LED>::getInstance()>
   1320e:	f001 fe5f 	bl	14ed0 <LED::init()>
   13212:	f7ff fe3d 	bl	12e90 <SingletonTemplate<Switches>::getInstance()>
   13216:	f001 fe9f 	bl	14f58 <Switches::init()>
   1321a:	f7fe fe45 	bl	11ea8 <SingletonTemplate<LED>::getInstance()>
   1321e:	2100      	movs	r1, #0
   13220:	f001 fe58 	bl	14ed4 <LED::setAll(char)>
   13224:	b995      	cbnz	r5, 1324c <high_level_init()+0x3a4>
   13226:	f7ff fdad 	bl	12d84 <hl_print_line()>
   1322a:	f7ff fa57 	bl	126dc <SingletonTemplate<LED_Display>::getInstance()>
   1322e:	212d      	movs	r1, #45	; 0x2d
   13230:	f001 fdfa 	bl	14e28 <LED_Display::setLeftDigit(char)>
   13234:	f7ff fa52 	bl	126dc <SingletonTemplate<LED_Display>::getInstance()>
   13238:	212d      	movs	r1, #45	; 0x2d
   1323a:	f001 fe01 	bl	14e40 <LED_Display::setRightDigit(char)>
   1323e:	f7fe fe33 	bl	11ea8 <SingletonTemplate<LED>::getInstance()>
   13242:	f04f 31ff 	mov.w	r1, #4294967295
   13246:	f001 fe45 	bl	14ed4 <LED::setAll(char)>
   1324a:	e00c      	b.n	13266 <high_level_init()+0x3be>
   1324c:	f7ff fa46 	bl	126dc <SingletonTemplate<LED_Display>::getInstance()>
   13250:	4605      	mov	r5, r0
   13252:	f7ff fdfd 	bl	12e50 <SingletonTemplate<TemperatureSensor>::getInstance()>
   13256:	f001 feb9 	bl	14fcc <I2C_Temp::getFarenheit()>
   1325a:	f00a f94b 	bl	1d4f4 <__aeabi_f2iz>
   1325e:	b241      	sxtb	r1, r0
   13260:	4628      	mov	r0, r5
   13262:	f001 fe16 	bl	14e92 <LED_Display::setNumber(char)>
   13266:	2100      	movs	r1, #0
   13268:	2210      	movs	r2, #16
   1326a:	4620      	mov	r0, r4
   1326c:	f00a fdff 	bl	1de6e <memset>
   13270:	484e      	ldr	r0, [pc, #312]	; (133ac <high_level_init()+0x504>)
   13272:	4621      	mov	r1, r4
   13274:	220f      	movs	r2, #15
   13276:	2300      	movs	r3, #0
   13278:	f001 ff38 	bl	150ec <Storage::read(char const*, void*, unsigned int, unsigned int)>
   1327c:	b980      	cbnz	r0, 132a0 <high_level_init()+0x3f8>
   1327e:	4620      	mov	r0, r4
   13280:	f00a fc65 	bl	1db4e <atoi>
   13284:	b2c5      	uxtb	r5, r0
   13286:	4628      	mov	r0, r5
   13288:	f000 fe54 	bl	13f34 <mesh_set_node_address>
   1328c:	4a48      	ldr	r2, [pc, #288]	; (133b0 <high_level_init()+0x508>)
   1328e:	4b49      	ldr	r3, [pc, #292]	; (133b4 <high_level_init()+0x50c>)
   13290:	4629      	mov	r1, r5
   13292:	2800      	cmp	r0, #0
   13294:	bf08      	it	eq
   13296:	4613      	moveq	r3, r2
   13298:	4847      	ldr	r0, [pc, #284]	; (133b8 <high_level_init()+0x510>)
   1329a:	4a44      	ldr	r2, [pc, #272]	; (133ac <high_level_init()+0x504>)
   1329c:	f00b faee 	bl	1e87c <iprintf>
   132a0:	f7ff fdea 	bl	12e78 <SingletonTemplate<Light_Sensor>::getInstance()>
   132a4:	f001 fe55 	bl	14f52 <Light_Sensor::getRawValue()>
   132a8:	4605      	mov	r5, r0
   132aa:	2000      	movs	r0, #0
   132ac:	f00d f898 	bl	203e0 <time>
   132b0:	4428      	add	r0, r5
   132b2:	f00b fb63 	bl	1e97c <srand>
   132b6:	f44f 7200 	mov.w	r2, #512	; 0x200
   132ba:	2100      	movs	r1, #0
   132bc:	4620      	mov	r0, r4
   132be:	f00a fdd6 	bl	1de6e <memset>
   132c2:	4620      	mov	r0, r4
   132c4:	f008 fe84 	bl	1bfd0 <sys_get_mem_info_str>
   132c8:	4621      	mov	r1, r4
   132ca:	483c      	ldr	r0, [pc, #240]	; (133bc <high_level_init()+0x514>)
   132cc:	f00b fad6 	bl	1e87c <iprintf>
   132d0:	f7ff fd58 	bl	12d84 <hl_print_line()>
   132d4:	2280      	movs	r2, #128	; 0x80
   132d6:	2100      	movs	r1, #0
   132d8:	4620      	mov	r0, r4
   132da:	f00a fdc8 	bl	1de6e <memset>
   132de:	4620      	mov	r0, r4
   132e0:	f002 fdd4 	bl	15e8c <flash_read_permanent_id>
   132e4:	f994 2000 	ldrsb.w	r2, [r4]
   132e8:	1c53      	adds	r3, r2, #1
   132ea:	d005      	beq.n	132f8 <high_level_init()+0x450>
   132ec:	4621      	mov	r1, r4
   132ee:	b2d2      	uxtb	r2, r2
   132f0:	4833      	ldr	r0, [pc, #204]	; (133c0 <high_level_init()+0x518>)
   132f2:	f00b fac3 	bl	1e87c <iprintf>
   132f6:	e029      	b.n	1334c <high_level_init()+0x4a4>
   132f8:	f7ff fdca 	bl	12e90 <SingletonTemplate<Switches>::getInstance()>
   132fc:	f001 fe2e 	bl	14f5c <Switches::getSwitchValues()>
   13300:	2809      	cmp	r0, #9
   13302:	d11d      	bne.n	13340 <high_level_init()+0x498>
   13304:	482f      	ldr	r0, [pc, #188]	; (133c4 <high_level_init()+0x51c>)
   13306:	f00b fb31 	bl	1e96c <puts>
   1330a:	4621      	mov	r1, r4
   1330c:	482e      	ldr	r0, [pc, #184]	; (133c8 <high_level_init()+0x520>)
   1330e:	f00b fc43 	bl	1eb98 <iscanf>
   13312:	4621      	mov	r1, r4
   13314:	482d      	ldr	r0, [pc, #180]	; (133cc <high_level_init()+0x524>)
   13316:	f00b fab1 	bl	1e87c <iprintf>
   1331a:	482d      	ldr	r0, [pc, #180]	; (133d0 <high_level_init()+0x528>)
   1331c:	f00b fb26 	bl	1e96c <puts>
   13320:	2300      	movs	r3, #0
   13322:	482c      	ldr	r0, [pc, #176]	; (133d4 <high_level_init()+0x52c>)
   13324:	a903      	add	r1, sp, #12
   13326:	9303      	str	r3, [sp, #12]
   13328:	f00b fc36 	bl	1eb98 <iscanf>
   1332c:	f99d 300c 	ldrsb.w	r3, [sp, #12]
   13330:	2b59      	cmp	r3, #89	; 0x59
   13332:	d103      	bne.n	1333c <high_level_init()+0x494>
   13334:	4620      	mov	r0, r4
   13336:	f002 fd89 	bl	15e4c <flash_write_permanent_id>
   1333a:	e007      	b.n	1334c <high_level_init()+0x4a4>
   1333c:	4826      	ldr	r0, [pc, #152]	; (133d8 <high_level_init()+0x530>)
   1333e:	e003      	b.n	13348 <high_level_init()+0x4a0>
   13340:	4826      	ldr	r0, [pc, #152]	; (133dc <high_level_init()+0x534>)
   13342:	f00b fb13 	bl	1e96c <puts>
   13346:	4826      	ldr	r0, [pc, #152]	; (133e0 <high_level_init()+0x538>)
   13348:	f00b fb10 	bl	1e96c <puts>
   1334c:	f24f 0308 	movw	r3, #61448	; 0xf008
   13350:	681d      	ldr	r5, [r3, #0]
   13352:	f24f 030c 	movw	r3, #61452	; 0xf00c
   13356:	681e      	ldr	r6, [r3, #0]
   13358:	f24f 0310 	movw	r3, #61456	; 0xf010
   1335c:	681c      	ldr	r4, [r3, #0]
   1335e:	f24f 0304 	movw	r3, #61444	; 0xf004
   13362:	6819      	ldr	r1, [r3, #0]
   13364:	f44f 4370 	mov.w	r3, #61440	; 0xf000
   13368:	681a      	ldr	r2, [r3, #0]
   1336a:	0aad      	lsrs	r5, r5, #10
   1336c:	0ab6      	lsrs	r6, r6, #10
   1336e:	481d      	ldr	r0, [pc, #116]	; (133e4 <high_level_init()+0x53c>)
   13370:	f00b fa84 	bl	1e87c <iprintf>
   13374:	462a      	mov	r2, r5
   13376:	4631      	mov	r1, r6
   13378:	481b      	ldr	r0, [pc, #108]	; (133e8 <high_level_init()+0x540>)
   1337a:	f00b fa7f 	bl	1e87c <iprintf>
   1337e:	4621      	mov	r1, r4
   13380:	481a      	ldr	r0, [pc, #104]	; (133ec <high_level_init()+0x544>)
   13382:	f00b fa7b 	bl	1e87c <iprintf>
   13386:	f7ff fcfd 	bl	12d84 <hl_print_line()>
   1338a:	2001      	movs	r0, #1
   1338c:	f005 f920 	bl	185d0 <logger_init>
   13390:	4817      	ldr	r0, [pc, #92]	; (133f0 <high_level_init()+0x548>)
   13392:	f00b faeb 	bl	1e96c <puts>
   13396:	f7ff fcf5 	bl	12d84 <hl_print_line()>
   1339a:	f50d 7d05 	add.w	sp, sp, #532	; 0x214
   1339e:	bdf0      	pop	{r4, r5, r6, r7, pc}
   133a0:	000256e9 	.word	0x000256e9
   133a4:	00025703 	.word	0x00025703
   133a8:	2007c774 	.word	0x2007c774
   133ac:	0002571c 	.word	0x0002571c
   133b0:	00024b7f 	.word	0x00024b7f
   133b4:	00025554 	.word	0x00025554
   133b8:	00025722 	.word	0x00025722
   133bc:	000265ea 	.word	0x000265ea
   133c0:	00025756 	.word	0x00025756
   133c4:	00025772 	.word	0x00025772
   133c8:	00025794 	.word	0x00025794
   133cc:	00025799 	.word	0x00025799
   133d0:	000257b4 	.word	0x000257b4
   133d4:	000257f7 	.word	0x000257f7
   133d8:	000257fb 	.word	0x000257fb
   133dc:	00025813 	.word	0x00025813
   133e0:	00025841 	.word	0x00025841
   133e4:	00025873 	.word	0x00025873
   133e8:	0002589f 	.word	0x0002589f
   133ec:	000258cc 	.word	0x000258cc
   133f0:	000258e9 	.word	0x000258e9

000133f4 <SingletonTemplate<IR_Sensor>::getInstance()>:
_ZN17SingletonTemplateI9IR_SensorE11getInstanceEv():
   133f4:	b510      	push	{r4, lr}
   133f6:	4c04      	ldr	r4, [pc, #16]	; (13408 <SingletonTemplate<IR_Sensor>::getInstance()+0x14>)
   133f8:	6823      	ldr	r3, [r4, #0]
   133fa:	b91b      	cbnz	r3, 13404 <SingletonTemplate<IR_Sensor>::getInstance()+0x10>
   133fc:	2001      	movs	r0, #1
   133fe:	f7fc ff37 	bl	10270 <operator new(unsigned int)>
   13402:	6020      	str	r0, [r4, #0]
   13404:	6820      	ldr	r0, [r4, #0]
   13406:	bd10      	pop	{r4, pc}
   13408:	2007c774 	.word	0x2007c774

0001340c <terminalTask::regTlm()>:
_ZN12terminalTask6regTlmEv():
   1340c:	2001      	movs	r0, #1
   1340e:	4770      	bx	lr

00013410 <VECTOR<terminalTask::cmdChan_t>::changeCapacity(unsigned int) [clone .part.3]>:
_ZN6VECTORIN12terminalTask9cmdChan_tEE14changeCapacityEj.part.3():
   13410:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   13412:	4604      	mov	r4, r0
   13414:	460e      	mov	r6, r1
   13416:	68c0      	ldr	r0, [r0, #12]
   13418:	0089      	lsls	r1, r1, #2
   1341a:	f00b fb13 	bl	1ea44 <realloc>
   1341e:	68a5      	ldr	r5, [r4, #8]
   13420:	60e0      	str	r0, [r4, #12]
   13422:	00af      	lsls	r7, r5, #2
   13424:	42b5      	cmp	r5, r6
   13426:	d20b      	bcs.n	13440 <VECTOR<terminalTask::cmdChan_t>::changeCapacity(unsigned int) [clone .part.3]+0x30>
   13428:	200c      	movs	r0, #12
   1342a:	f7fc ff21 	bl	10270 <operator new(unsigned int)>
   1342e:	2300      	movs	r3, #0
   13430:	6003      	str	r3, [r0, #0]
   13432:	6043      	str	r3, [r0, #4]
   13434:	7203      	strb	r3, [r0, #8]
   13436:	68e3      	ldr	r3, [r4, #12]
   13438:	3501      	adds	r5, #1
   1343a:	51d8      	str	r0, [r3, r7]
   1343c:	3704      	adds	r7, #4
   1343e:	e7f1      	b.n	13424 <VECTOR<terminalTask::cmdChan_t>::changeCapacity(unsigned int) [clone .part.3]+0x14>
   13440:	6066      	str	r6, [r4, #4]
   13442:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00013444 <terminalTask::~terminalTask()>:
_ZN12terminalTaskD2Ev():
   13444:	b538      	push	{r3, r4, r5, lr}
   13446:	4b11      	ldr	r3, [pc, #68]	; (1348c <terminalTask::~terminalTask()+0x48>)
   13448:	4604      	mov	r4, r0
   1344a:	6003      	str	r3, [r0, #0]
   1344c:	2500      	movs	r5, #0
   1344e:	6d63      	ldr	r3, [r4, #84]	; 0x54
   13450:	6de0      	ldr	r0, [r4, #92]	; 0x5c
   13452:	429d      	cmp	r5, r3
   13454:	d205      	bcs.n	13462 <terminalTask::~terminalTask()+0x1e>
   13456:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
   1345a:	f7fc ff0b 	bl	10274 <operator delete(void*)>
   1345e:	3501      	adds	r5, #1
   13460:	e7f5      	b.n	1344e <terminalTask::~terminalTask()+0xa>
   13462:	b108      	cbz	r0, 13468 <terminalTask::~terminalTask()+0x24>
   13464:	f7fc ff08 	bl	10278 <operator delete[](void*)>
   13468:	2500      	movs	r5, #0
   1346a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   1346c:	6c20      	ldr	r0, [r4, #64]	; 0x40
   1346e:	429d      	cmp	r5, r3
   13470:	d205      	bcs.n	1347e <terminalTask::~terminalTask()+0x3a>
   13472:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
   13476:	f7fc fefd 	bl	10274 <operator delete(void*)>
   1347a:	3501      	adds	r5, #1
   1347c:	e7f5      	b.n	1346a <terminalTask::~terminalTask()+0x26>
   1347e:	b108      	cbz	r0, 13484 <terminalTask::~terminalTask()+0x40>
   13480:	f7fc fefa 	bl	10278 <operator delete[](void*)>
   13484:	4b02      	ldr	r3, [pc, #8]	; (13490 <terminalTask::~terminalTask()+0x4c>)
   13486:	4620      	mov	r0, r4
   13488:	6023      	str	r3, [r4, #0]
   1348a:	bd38      	pop	{r3, r4, r5, pc}
   1348c:	00025910 	.word	0x00025910
   13490:	000252d8 	.word	0x000252d8

00013494 <terminalTask::~terminalTask()>:
_ZN12terminalTaskD0Ev():
   13494:	b510      	push	{r4, lr}
   13496:	4604      	mov	r4, r0
   13498:	f7ff ffd4 	bl	13444 <terminalTask::~terminalTask()>
   1349c:	4620      	mov	r0, r4
   1349e:	f7fc fee9 	bl	10274 <operator delete(void*)>
   134a2:	4620      	mov	r0, r4
   134a4:	bd10      	pop	{r4, pc}
	...

000134a8 <terminalTask::terminalTask(unsigned char)>:
_ZN12terminalTaskC2Eh():
   134a8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   134aa:	2400      	movs	r4, #0
   134ac:	460b      	mov	r3, r1
   134ae:	f44f 5280 	mov.w	r2, #4096	; 0x1000
   134b2:	9400      	str	r4, [sp, #0]
   134b4:	4925      	ldr	r1, [pc, #148]	; (1354c <terminalTask::terminalTask(unsigned char)+0xa4>)
   134b6:	4606      	mov	r6, r0
   134b8:	f005 fc28 	bl	18d0c <scheduler_task::scheduler_task(char const*, unsigned long, unsigned char, void*)>
   134bc:	4b24      	ldr	r3, [pc, #144]	; (13550 <terminalTask::terminalTask(unsigned char)+0xa8>)
   134be:	2504      	movs	r5, #4
   134c0:	6033      	str	r3, [r6, #0]
   134c2:	6375      	str	r5, [r6, #52]	; 0x34
   134c4:	63b4      	str	r4, [r6, #56]	; 0x38
   134c6:	63f4      	str	r4, [r6, #60]	; 0x3c
   134c8:	6434      	str	r4, [r6, #64]	; 0x40
   134ca:	f106 0034 	add.w	r0, r6, #52	; 0x34
   134ce:	2102      	movs	r1, #2
   134d0:	f7ff ff9e 	bl	13410 <VECTOR<terminalTask::cmdChan_t>::changeCapacity(unsigned int) [clone .part.3]>
   134d4:	6535      	str	r5, [r6, #80]	; 0x50
   134d6:	6574      	str	r4, [r6, #84]	; 0x54
   134d8:	65b4      	str	r4, [r6, #88]	; 0x58
   134da:	65f4      	str	r4, [r6, #92]	; 0x5c
   134dc:	4620      	mov	r0, r4
   134de:	2160      	movs	r1, #96	; 0x60
   134e0:	f00b fab0 	bl	1ea44 <realloc>
   134e4:	6db4      	ldr	r4, [r6, #88]	; 0x58
   134e6:	65f0      	str	r0, [r6, #92]	; 0x5c
   134e8:	00a5      	lsls	r5, r4, #2
   134ea:	2c17      	cmp	r4, #23
   134ec:	d80c      	bhi.n	13508 <terminalTask::terminalTask(unsigned char)+0x60>
   134ee:	2010      	movs	r0, #16
   134f0:	f7fc febe 	bl	10270 <operator new(unsigned int)>
   134f4:	2100      	movs	r1, #0
   134f6:	2210      	movs	r2, #16
   134f8:	4607      	mov	r7, r0
   134fa:	f00a fcb8 	bl	1de6e <memset>
   134fe:	6df3      	ldr	r3, [r6, #92]	; 0x5c
   13500:	3401      	adds	r4, #1
   13502:	515f      	str	r7, [r3, r5]
   13504:	3504      	adds	r5, #4
   13506:	e7f0      	b.n	134ea <terminalTask::terminalTask(unsigned char)+0x42>
   13508:	2318      	movs	r3, #24
   1350a:	6573      	str	r3, [r6, #84]	; 0x54
   1350c:	2301      	movs	r3, #1
   1350e:	f886 3070 	strb.w	r3, [r6, #112]	; 0x70
   13512:	4c10      	ldr	r4, [pc, #64]	; (13554 <terminalTask::terminalTask(unsigned char)+0xac>)
   13514:	2300      	movs	r3, #0
   13516:	f8a6 3074 	strh.w	r3, [r6, #116]	; 0x74
   1351a:	f8a6 3076 	strh.w	r3, [r6, #118]	; 0x76
   1351e:	67b3      	str	r3, [r6, #120]	; 0x78
   13520:	2200      	movs	r2, #0
   13522:	2300      	movs	r3, #0
   13524:	2500      	movs	r5, #0
   13526:	e9c6 2320 	strd	r2, r3, [r6, #128]	; 0x80
   1352a:	e9c6 4522 	strd	r4, r5, [r6, #136]	; 0x88
   1352e:	f008 fd3b 	bl	1bfa8 <sys_get_uptime_us>
   13532:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   13536:	2300      	movs	r3, #0
   13538:	f00a f822 	bl	1d580 <__aeabi_uldivmod>
   1353c:	1900      	adds	r0, r0, r4
   1353e:	eb41 0105 	adc.w	r1, r1, r5
   13542:	e9c6 0120 	strd	r0, r1, [r6, #128]	; 0x80
   13546:	4630      	mov	r0, r6
   13548:	b003      	add	sp, #12
   1354a:	bdf0      	pop	{r4, r5, r6, r7, pc}
   1354c:	00025928 	.word	0x00025928
   13550:	00025910 	.word	0x00025910
   13554:	0001d4c0 	.word	0x0001d4c0

00013558 <terminalTask::handleEchoAndBackspace(terminalTask::cmdChan_t*, char)>:
_ZN12terminalTask22handleEchoAndBackspaceEPNS_9cmdChan_tEc():
   13558:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1355a:	e891 0060 	ldmia.w	r1, {r5, r6}
   1355e:	7a0f      	ldrb	r7, [r1, #8]
   13560:	4614      	mov	r4, r2
   13562:	b18f      	cbz	r7, 13588 <terminalTask::handleEchoAndBackspace(terminalTask::cmdChan_t*, char)+0x30>
   13564:	2a08      	cmp	r2, #8
   13566:	d10f      	bne.n	13588 <terminalTask::handleEchoAndBackspace(terminalTask::cmdChan_t*, char)+0x30>
   13568:	4630      	mov	r0, r6
   1356a:	f005 fc1c 	bl	18da6 <str::getLen() const>
   1356e:	2800      	cmp	r0, #0
   13570:	dd1b      	ble.n	135aa <terminalTask::handleEchoAndBackspace(terminalTask::cmdChan_t*, char)+0x52>
   13572:	4628      	mov	r0, r5
   13574:	490e      	ldr	r1, [pc, #56]	; (135b0 <terminalTask::handleEchoAndBackspace(terminalTask::cmdChan_t*, char)+0x58>)
   13576:	f04f 32ff 	mov.w	r2, #4294967295
   1357a:	f006 fe56 	bl	1a22a <CharDev::put(char const*, unsigned int)>
   1357e:	4630      	mov	r0, r6
   13580:	2101      	movs	r1, #1
   13582:	f005 fd1d 	bl	18fc0 <str::eraseLast(int)>
   13586:	e008      	b.n	1359a <terminalTask::handleEchoAndBackspace(terminalTask::cmdChan_t*, char)+0x42>
   13588:	2c0a      	cmp	r4, #10
   1358a:	d005      	beq.n	13598 <terminalTask::handleEchoAndBackspace(terminalTask::cmdChan_t*, char)+0x40>
   1358c:	2c0d      	cmp	r4, #13
   1358e:	d003      	beq.n	13598 <terminalTask::handleEchoAndBackspace(terminalTask::cmdChan_t*, char)+0x40>
   13590:	4630      	mov	r0, r6
   13592:	4621      	mov	r1, r4
   13594:	f005 fe36 	bl	19204 <str::operator+=(char)>
   13598:	b14f      	cbz	r7, 135ae <terminalTask::handleEchoAndBackspace(terminalTask::cmdChan_t*, char)+0x56>
   1359a:	682b      	ldr	r3, [r5, #0]
   1359c:	4628      	mov	r0, r5
   1359e:	685b      	ldr	r3, [r3, #4]
   135a0:	4621      	mov	r1, r4
   135a2:	f04f 32ff 	mov.w	r2, #4294967295
   135a6:	4798      	blx	r3
   135a8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   135aa:	2407      	movs	r4, #7
   135ac:	e7f5      	b.n	1359a <terminalTask::handleEchoAndBackspace(terminalTask::cmdChan_t*, char)+0x42>
   135ae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   135b0:	00025931 	.word	0x00025931

000135b4 <terminalTask::addCommandChannel(CharDev*, bool)>:
_ZN12terminalTask17addCommandChannelEP7CharDevb():
   135b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   135b6:	4604      	mov	r4, r0
   135b8:	2014      	movs	r0, #20
   135ba:	4616      	mov	r6, r2
   135bc:	460d      	mov	r5, r1
   135be:	f7fc fe57 	bl	10270 <operator new(unsigned int)>
   135c2:	2180      	movs	r1, #128	; 0x80
   135c4:	4607      	mov	r7, r0
   135c6:	f005 fdcd 	bl	19164 <str::str(int)>
   135ca:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   135cc:	6be2      	ldr	r2, [r4, #60]	; 0x3c
   135ce:	429a      	cmp	r2, r3
   135d0:	d306      	bcc.n	135e0 <terminalTask::addCommandChannel(CharDev*, bool)+0x2c>
   135d2:	6b62      	ldr	r2, [r4, #52]	; 0x34
   135d4:	1899      	adds	r1, r3, r2
   135d6:	d203      	bcs.n	135e0 <terminalTask::addCommandChannel(CharDev*, bool)+0x2c>
   135d8:	f104 0034 	add.w	r0, r4, #52	; 0x34
   135dc:	f7ff ff18 	bl	13410 <VECTOR<terminalTask::cmdChan_t>::changeCapacity(unsigned int) [clone .part.3]>
   135e0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
   135e2:	6c22      	ldr	r2, [r4, #64]	; 0x40
   135e4:	1c59      	adds	r1, r3, #1
   135e6:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
   135ea:	63e1      	str	r1, [r4, #60]	; 0x3c
   135ec:	e883 00a0 	stmia.w	r3, {r5, r7}
   135f0:	721e      	strb	r6, [r3, #8]
   135f2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

000135f4 <terminalTask::getCommand()>:
_ZN12terminalTask10getCommandEv():
   135f4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   135f8:	6bcf      	ldr	r7, [r1, #60]	; 0x3c
   135fa:	b085      	sub	sp, #20
   135fc:	4605      	mov	r5, r0
   135fe:	460e      	mov	r6, r1
   13600:	ac01      	add	r4, sp, #4
   13602:	b94f      	cbnz	r7, 13618 <terminalTask::getCommand()+0x24>
   13604:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
   13608:	f007 ff6e 	bl	1b4e8 <vTaskDelay>
   1360c:	4620      	mov	r0, r4
   1360e:	4639      	mov	r1, r7
   13610:	220c      	movs	r2, #12
   13612:	f00a fc2c 	bl	1de6e <memset>
   13616:	e04c      	b.n	136b2 <terminalTask::getCommand()+0xbe>
   13618:	6c0b      	ldr	r3, [r1, #64]	; 0x40
   1361a:	681b      	ldr	r3, [r3, #0]
   1361c:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
   13620:	e884 0007 	stmia.w	r4, {r0, r1, r2}
   13624:	2300      	movs	r3, #0
   13626:	f88d 3003 	strb.w	r3, [sp, #3]
   1362a:	f007 fe25 	bl	1b278 <xTaskGetTickCount>
   1362e:	2700      	movs	r7, #0
   13630:	4680      	mov	r8, r0
   13632:	6bf2      	ldr	r2, [r6, #60]	; 0x3c
   13634:	4297      	cmp	r7, r2
   13636:	d25c      	bcs.n	136f2 <terminalTask::getCommand()+0xfe>
   13638:	6c33      	ldr	r3, [r6, #64]	; 0x40
   1363a:	3a01      	subs	r2, #1
   1363c:	f853 3027 	ldr.w	r3, [r3, r7, lsl #2]
   13640:	4297      	cmp	r7, r2
   13642:	bf0c      	ite	eq
   13644:	2202      	moveq	r2, #2
   13646:	2200      	movne	r2, #0
   13648:	6818      	ldr	r0, [r3, #0]
   1364a:	ea4f 0987 	mov.w	r9, r7, lsl #2
   1364e:	7c01      	ldrb	r1, [r0, #16]
   13650:	2900      	cmp	r1, #0
   13652:	d036      	beq.n	136c2 <terminalTask::getCommand()+0xce>
   13654:	6801      	ldr	r1, [r0, #0]
   13656:	f8d1 c000 	ldr.w	ip, [r1]
   1365a:	f10d 0103 	add.w	r1, sp, #3
   1365e:	47e0      	blx	ip
   13660:	b378      	cbz	r0, 136c2 <terminalTask::getCommand()+0xce>
   13662:	6bf3      	ldr	r3, [r6, #60]	; 0x3c
   13664:	429f      	cmp	r7, r3
   13666:	d22e      	bcs.n	136c6 <terminalTask::getCommand()+0xd2>
   13668:	6c33      	ldr	r3, [r6, #64]	; 0x40
   1366a:	f853 3009 	ldr.w	r3, [r3, r9]
   1366e:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
   13672:	e884 0007 	stmia.w	r4, {r0, r1, r2}
   13676:	f99d 2003 	ldrsb.w	r2, [sp, #3]
   1367a:	4630      	mov	r0, r6
   1367c:	4621      	mov	r1, r4
   1367e:	f7ff ff6b 	bl	13558 <terminalTask::handleEchoAndBackspace(terminalTask::cmdChan_t*, char)>
   13682:	f008 fc91 	bl	1bfa8 <sys_get_uptime_us>
   13686:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   1368a:	2300      	movs	r3, #0
   1368c:	f009 ff78 	bl	1d580 <__aeabi_uldivmod>
   13690:	e9d6 2322 	ldrd	r2, r3, [r6, #136]	; 0x88
   13694:	1880      	adds	r0, r0, r2
   13696:	eb41 0103 	adc.w	r1, r1, r3
   1369a:	e9c6 0120 	strd	r0, r1, [r6, #128]	; 0x80
   1369e:	9802      	ldr	r0, [sp, #8]
   136a0:	f005 fb81 	bl	18da6 <str::getLen() const>
   136a4:	4607      	mov	r7, r0
   136a6:	9802      	ldr	r0, [sp, #8]
   136a8:	f005 fb80 	bl	18dac <str::getCapacity() const>
   136ac:	3801      	subs	r0, #1
   136ae:	4287      	cmp	r7, r0
   136b0:	db0c      	blt.n	136cc <terminalTask::getCommand()+0xd8>
   136b2:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
   136b6:	e885 0007 	stmia.w	r5, {r0, r1, r2}
   136ba:	4628      	mov	r0, r5
   136bc:	b005      	add	sp, #20
   136be:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   136c2:	3701      	adds	r7, #1
   136c4:	e7b5      	b.n	13632 <terminalTask::getCommand()+0x3e>
   136c6:	f106 0344 	add.w	r3, r6, #68	; 0x44
   136ca:	e7d0      	b.n	1366e <terminalTask::getCommand()+0x7a>
   136cc:	e9d6 2322 	ldrd	r2, r3, [r6, #136]	; 0x88
   136d0:	ea52 0103 	orrs.w	r1, r2, r3
   136d4:	d015      	beq.n	13702 <terminalTask::getCommand()+0x10e>
   136d6:	f008 fc67 	bl	1bfa8 <sys_get_uptime_us>
   136da:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   136de:	2300      	movs	r3, #0
   136e0:	f009 ff4e 	bl	1d580 <__aeabi_uldivmod>
   136e4:	e9d6 2320 	ldrd	r2, r3, [r6, #128]	; 0x80
   136e8:	4299      	cmp	r1, r3
   136ea:	bf08      	it	eq
   136ec:	4290      	cmpeq	r0, r2
   136ee:	d308      	bcc.n	13702 <terminalTask::getCommand()+0x10e>
   136f0:	e00c      	b.n	1370c <terminalTask::getCommand()+0x118>
   136f2:	f007 fdc1 	bl	1b278 <xTaskGetTickCount>
   136f6:	4540      	cmp	r0, r8
   136f8:	d1d1      	bne.n	1369e <terminalTask::getCommand()+0xaa>
   136fa:	2001      	movs	r0, #1
   136fc:	f007 fef4 	bl	1b4e8 <vTaskDelay>
   13700:	e7cd      	b.n	1369e <terminalTask::getCommand()+0xaa>
   13702:	f99d 3003 	ldrsb.w	r3, [sp, #3]
   13706:	2b0a      	cmp	r3, #10
   13708:	d18f      	bne.n	1362a <terminalTask::getCommand()+0x36>
   1370a:	e7d2      	b.n	136b2 <terminalTask::getCommand()+0xbe>
   1370c:	f008 fc4c 	bl	1bfa8 <sys_get_uptime_us>
   13710:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   13714:	2300      	movs	r3, #0
   13716:	f009 ff33 	bl	1d580 <__aeabi_uldivmod>
   1371a:	e9d6 2322 	ldrd	r2, r3, [r6, #136]	; 0x88
   1371e:	1880      	adds	r0, r0, r2
   13720:	eb41 0103 	adc.w	r1, r1, r3
   13724:	2300      	movs	r3, #0
   13726:	e9c6 0120 	strd	r0, r1, [r6, #128]	; 0x80
   1372a:	9301      	str	r3, [sp, #4]
   1372c:	e7c1      	b.n	136b2 <terminalTask::getCommand()+0xbe>
	...

00013730 <terminalTask::run(void*)>:
_ZN12terminalTask3runEPv():
   13730:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
   13734:	4607      	mov	r7, r0
   13736:	4821      	ldr	r0, [pc, #132]	; (137bc <terminalTask::run(void*)+0x8c>)
   13738:	f00b f8a0 	bl	1e87c <iprintf>
   1373c:	a801      	add	r0, sp, #4
   1373e:	4639      	mov	r1, r7
   13740:	f7ff ff58 	bl	135f4 <terminalTask::getCommand()>
   13744:	9e01      	ldr	r6, [sp, #4]
   13746:	b91e      	cbnz	r6, 13750 <terminalTask::run(void*)+0x20>
   13748:	481d      	ldr	r0, [pc, #116]	; (137c0 <terminalTask::run(void*)+0x90>)
   1374a:	f00b f90f 	bl	1e96c <puts>
   1374e:	e031      	b.n	137b4 <terminalTask::run(void*)+0x84>
   13750:	f8dd 8008 	ldr.w	r8, [sp, #8]
   13754:	4640      	mov	r0, r8
   13756:	f005 fb26 	bl	18da6 <str::getLen() const>
   1375a:	2800      	cmp	r0, #0
   1375c:	dd2a      	ble.n	137b4 <terminalTask::run(void*)+0x84>
   1375e:	f008 fc23 	bl	1bfa8 <sys_get_uptime_us>
   13762:	4604      	mov	r4, r0
   13764:	b1f8      	cbz	r0, 137a6 <terminalTask::run(void*)+0x76>
   13766:	f8b7 3074 	ldrh.w	r3, [r7, #116]	; 0x74
   1376a:	f107 0050 	add.w	r0, r7, #80	; 0x50
   1376e:	3301      	adds	r3, #1
   13770:	f8a7 3074 	strh.w	r3, [r7, #116]	; 0x74
   13774:	4641      	mov	r1, r8
   13776:	4632      	mov	r2, r6
   13778:	f004 fd6a 	bl	18250 <CommandProcessor::handleCommand(str&, CharDev&)>
   1377c:	4b11      	ldr	r3, [pc, #68]	; (137c4 <terminalTask::run(void*)+0x94>)
   1377e:	2700      	movs	r7, #0
   13780:	6818      	ldr	r0, [r3, #0]
   13782:	9000      	str	r0, [sp, #0]
   13784:	6833      	ldr	r3, [r6, #0]
   13786:	f91d 1007 	ldrsb.w	r1, [sp, r7]
   1378a:	685b      	ldr	r3, [r3, #4]
   1378c:	4630      	mov	r0, r6
   1378e:	f04f 32ff 	mov.w	r2, #4294967295
   13792:	3701      	adds	r7, #1
   13794:	4798      	blx	r3
   13796:	2f04      	cmp	r7, #4
   13798:	d1f4      	bne.n	13784 <terminalTask::run(void*)+0x54>
   1379a:	f008 fc05 	bl	1bfa8 <sys_get_uptime_us>
   1379e:	1b01      	subs	r1, r0, r4
   137a0:	4809      	ldr	r0, [pc, #36]	; (137c8 <terminalTask::run(void*)+0x98>)
   137a2:	f00b f86b 	bl	1e87c <iprintf>
   137a6:	4640      	mov	r0, r8
   137a8:	f005 fb02 	bl	18db0 <str::clear()>
   137ac:	6833      	ldr	r3, [r6, #0]
   137ae:	4630      	mov	r0, r6
   137b0:	689b      	ldr	r3, [r3, #8]
   137b2:	4798      	blx	r3
   137b4:	2001      	movs	r0, #1
   137b6:	b004      	add	sp, #16
   137b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   137bc:	00025934 	.word	0x00025934
   137c0:	000249f1 	.word	0x000249f1
   137c4:	000258fd 	.word	0x000258fd
   137c8:	0002593a 	.word	0x0002593a

000137cc <SingletonTemplate<Uart0>::getInstance()>:
_ZN17SingletonTemplateI5Uart0E11getInstanceEv():
   137cc:	b538      	push	{r3, r4, r5, lr}
   137ce:	4c06      	ldr	r4, [pc, #24]	; (137e8 <SingletonTemplate<Uart0>::getInstance()+0x1c>)
   137d0:	6823      	ldr	r3, [r4, #0]
   137d2:	b933      	cbnz	r3, 137e2 <SingletonTemplate<Uart0>::getInstance()+0x16>
   137d4:	202c      	movs	r0, #44	; 0x2c
   137d6:	f7fc fd4b 	bl	10270 <operator new(unsigned int)>
   137da:	4605      	mov	r5, r0
   137dc:	f006 fc86 	bl	1a0ec <Uart0::Uart0()>
   137e0:	6025      	str	r5, [r4, #0]
   137e2:	6820      	ldr	r0, [r4, #0]
   137e4:	bd38      	pop	{r3, r4, r5, pc}
   137e6:	bf00      	nop
   137e8:	2007c1fc 	.word	0x2007c1fc

000137ec <Uart0::putcharIntrDriven(char)>:
_ZN5Uart017putcharIntrDrivenEc():
   137ec:	b510      	push	{r4, lr}
   137ee:	4604      	mov	r4, r0
   137f0:	f7ff ffec 	bl	137cc <SingletonTemplate<Uart0>::getInstance()>
   137f4:	6803      	ldr	r3, [r0, #0]
   137f6:	4621      	mov	r1, r4
   137f8:	685b      	ldr	r3, [r3, #4]
   137fa:	f04f 32ff 	mov.w	r2, #4294967295
   137fe:	4798      	blx	r3
   13800:	b240      	sxtb	r0, r0
   13802:	bd10      	pop	{r4, pc}

00013804 <Uart0::getcharIntrDriven(char)>:
_ZN5Uart017getcharIntrDrivenEc():
   13804:	b513      	push	{r0, r1, r4, lr}
   13806:	2300      	movs	r3, #0
   13808:	ac02      	add	r4, sp, #8
   1380a:	f804 3d01 	strb.w	r3, [r4, #-1]!
   1380e:	f7ff ffdd 	bl	137cc <SingletonTemplate<Uart0>::getInstance()>
   13812:	6803      	ldr	r3, [r0, #0]
   13814:	4621      	mov	r1, r4
   13816:	681b      	ldr	r3, [r3, #0]
   13818:	f04f 32ff 	mov.w	r2, #4294967295
   1381c:	4798      	blx	r3
   1381e:	f99d 0007 	ldrsb.w	r0, [sp, #7]
   13822:	b002      	add	sp, #8
   13824:	bd10      	pop	{r4, pc}
	...

00013828 <terminalTask::taskEntry()>:
_ZN12terminalTask9taskEntryEv():
   13828:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1382c:	f100 0450 	add.w	r4, r0, #80	; 0x50
   13830:	b08a      	sub	sp, #40	; 0x28
   13832:	2500      	movs	r5, #0
   13834:	4606      	mov	r6, r0
   13836:	9500      	str	r5, [sp, #0]
   13838:	4620      	mov	r0, r4
   1383a:	495b      	ldr	r1, [pc, #364]	; (139a8 <terminalTask::taskEntry()+0x180>)
   1383c:	4a5b      	ldr	r2, [pc, #364]	; (139ac <terminalTask::taskEntry()+0x184>)
   1383e:	4b5c      	ldr	r3, [pc, #368]	; (139b0 <terminalTask::taskEntry()+0x188>)
   13840:	f004 fc24 	bl	1808c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   13844:	9500      	str	r5, [sp, #0]
   13846:	4620      	mov	r0, r4
   13848:	495a      	ldr	r1, [pc, #360]	; (139b4 <terminalTask::taskEntry()+0x18c>)
   1384a:	4a5b      	ldr	r2, [pc, #364]	; (139b8 <terminalTask::taskEntry()+0x190>)
   1384c:	4b5b      	ldr	r3, [pc, #364]	; (139bc <terminalTask::taskEntry()+0x194>)
   1384e:	f004 fc1d 	bl	1808c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   13852:	9500      	str	r5, [sp, #0]
   13854:	4620      	mov	r0, r4
   13856:	495a      	ldr	r1, [pc, #360]	; (139c0 <terminalTask::taskEntry()+0x198>)
   13858:	4a5a      	ldr	r2, [pc, #360]	; (139c4 <terminalTask::taskEntry()+0x19c>)
   1385a:	4b5b      	ldr	r3, [pc, #364]	; (139c8 <terminalTask::taskEntry()+0x1a0>)
   1385c:	f004 fc16 	bl	1808c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   13860:	9500      	str	r5, [sp, #0]
   13862:	4620      	mov	r0, r4
   13864:	4959      	ldr	r1, [pc, #356]	; (139cc <terminalTask::taskEntry()+0x1a4>)
   13866:	4a5a      	ldr	r2, [pc, #360]	; (139d0 <terminalTask::taskEntry()+0x1a8>)
   13868:	4b5a      	ldr	r3, [pc, #360]	; (139d4 <terminalTask::taskEntry()+0x1ac>)
   1386a:	f004 fc0f 	bl	1808c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   1386e:	9500      	str	r5, [sp, #0]
   13870:	4620      	mov	r0, r4
   13872:	4959      	ldr	r1, [pc, #356]	; (139d8 <terminalTask::taskEntry()+0x1b0>)
   13874:	4a59      	ldr	r2, [pc, #356]	; (139dc <terminalTask::taskEntry()+0x1b4>)
   13876:	4b5a      	ldr	r3, [pc, #360]	; (139e0 <terminalTask::taskEntry()+0x1b8>)
   13878:	f004 fc08 	bl	1808c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   1387c:	9500      	str	r5, [sp, #0]
   1387e:	4620      	mov	r0, r4
   13880:	4958      	ldr	r1, [pc, #352]	; (139e4 <terminalTask::taskEntry()+0x1bc>)
   13882:	4a59      	ldr	r2, [pc, #356]	; (139e8 <terminalTask::taskEntry()+0x1c0>)
   13884:	4b59      	ldr	r3, [pc, #356]	; (139ec <terminalTask::taskEntry()+0x1c4>)
   13886:	f004 fc01 	bl	1808c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   1388a:	9500      	str	r5, [sp, #0]
   1388c:	4620      	mov	r0, r4
   1388e:	4958      	ldr	r1, [pc, #352]	; (139f0 <terminalTask::taskEntry()+0x1c8>)
   13890:	4a58      	ldr	r2, [pc, #352]	; (139f4 <terminalTask::taskEntry()+0x1cc>)
   13892:	4b59      	ldr	r3, [pc, #356]	; (139f8 <terminalTask::taskEntry()+0x1d0>)
   13894:	f004 fbfa 	bl	1808c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   13898:	9500      	str	r5, [sp, #0]
   1389a:	4620      	mov	r0, r4
   1389c:	4957      	ldr	r1, [pc, #348]	; (139fc <terminalTask::taskEntry()+0x1d4>)
   1389e:	4a58      	ldr	r2, [pc, #352]	; (13a00 <terminalTask::taskEntry()+0x1d8>)
   138a0:	4b58      	ldr	r3, [pc, #352]	; (13a04 <terminalTask::taskEntry()+0x1dc>)
   138a2:	f004 fbf3 	bl	1808c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   138a6:	9500      	str	r5, [sp, #0]
   138a8:	4620      	mov	r0, r4
   138aa:	4957      	ldr	r1, [pc, #348]	; (13a08 <terminalTask::taskEntry()+0x1e0>)
   138ac:	4a57      	ldr	r2, [pc, #348]	; (13a0c <terminalTask::taskEntry()+0x1e4>)
   138ae:	4b58      	ldr	r3, [pc, #352]	; (13a10 <terminalTask::taskEntry()+0x1e8>)
   138b0:	f004 fbec 	bl	1808c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   138b4:	9500      	str	r5, [sp, #0]
   138b6:	4620      	mov	r0, r4
   138b8:	4956      	ldr	r1, [pc, #344]	; (13a14 <terminalTask::taskEntry()+0x1ec>)
   138ba:	4a57      	ldr	r2, [pc, #348]	; (13a18 <terminalTask::taskEntry()+0x1f0>)
   138bc:	4b57      	ldr	r3, [pc, #348]	; (13a1c <terminalTask::taskEntry()+0x1f4>)
   138be:	f004 fbe5 	bl	1808c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   138c2:	9500      	str	r5, [sp, #0]
   138c4:	4620      	mov	r0, r4
   138c6:	4956      	ldr	r1, [pc, #344]	; (13a20 <terminalTask::taskEntry()+0x1f8>)
   138c8:	4a56      	ldr	r2, [pc, #344]	; (13a24 <terminalTask::taskEntry()+0x1fc>)
   138ca:	4b57      	ldr	r3, [pc, #348]	; (13a28 <terminalTask::taskEntry()+0x200>)
   138cc:	f004 fbde 	bl	1808c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   138d0:	9500      	str	r5, [sp, #0]
   138d2:	4620      	mov	r0, r4
   138d4:	4955      	ldr	r1, [pc, #340]	; (13a2c <terminalTask::taskEntry()+0x204>)
   138d6:	4a56      	ldr	r2, [pc, #344]	; (13a30 <terminalTask::taskEntry()+0x208>)
   138d8:	4b56      	ldr	r3, [pc, #344]	; (13a34 <terminalTask::taskEntry()+0x20c>)
   138da:	f004 fbd7 	bl	1808c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   138de:	9500      	str	r5, [sp, #0]
   138e0:	4620      	mov	r0, r4
   138e2:	4955      	ldr	r1, [pc, #340]	; (13a38 <terminalTask::taskEntry()+0x210>)
   138e4:	4a55      	ldr	r2, [pc, #340]	; (13a3c <terminalTask::taskEntry()+0x214>)
   138e6:	4b56      	ldr	r3, [pc, #344]	; (13a40 <terminalTask::taskEntry()+0x218>)
   138e8:	f004 fbd0 	bl	1808c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   138ec:	9500      	str	r5, [sp, #0]
   138ee:	4620      	mov	r0, r4
   138f0:	4954      	ldr	r1, [pc, #336]	; (13a44 <terminalTask::taskEntry()+0x21c>)
   138f2:	4a55      	ldr	r2, [pc, #340]	; (13a48 <terminalTask::taskEntry()+0x220>)
   138f4:	4b55      	ldr	r3, [pc, #340]	; (13a4c <terminalTask::taskEntry()+0x224>)
   138f6:	f004 fbc9 	bl	1808c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   138fa:	9500      	str	r5, [sp, #0]
   138fc:	4620      	mov	r0, r4
   138fe:	4954      	ldr	r1, [pc, #336]	; (13a50 <terminalTask::taskEntry()+0x228>)
   13900:	4a54      	ldr	r2, [pc, #336]	; (13a54 <terminalTask::taskEntry()+0x22c>)
   13902:	4b55      	ldr	r3, [pc, #340]	; (13a58 <terminalTask::taskEntry()+0x230>)
   13904:	f004 fbc2 	bl	1808c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   13908:	9500      	str	r5, [sp, #0]
   1390a:	4620      	mov	r0, r4
   1390c:	4953      	ldr	r1, [pc, #332]	; (13a5c <terminalTask::taskEntry()+0x234>)
   1390e:	4a54      	ldr	r2, [pc, #336]	; (13a60 <terminalTask::taskEntry()+0x238>)
   13910:	4b54      	ldr	r3, [pc, #336]	; (13a64 <terminalTask::taskEntry()+0x23c>)
   13912:	f004 fbbb 	bl	1808c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   13916:	9500      	str	r5, [sp, #0]
   13918:	4620      	mov	r0, r4
   1391a:	4953      	ldr	r1, [pc, #332]	; (13a68 <terminalTask::taskEntry()+0x240>)
   1391c:	4a53      	ldr	r2, [pc, #332]	; (13a6c <terminalTask::taskEntry()+0x244>)
   1391e:	4b54      	ldr	r3, [pc, #336]	; (13a70 <terminalTask::taskEntry()+0x248>)
   13920:	f004 fbb4 	bl	1808c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   13924:	9500      	str	r5, [sp, #0]
   13926:	4620      	mov	r0, r4
   13928:	4952      	ldr	r1, [pc, #328]	; (13a74 <terminalTask::taskEntry()+0x24c>)
   1392a:	4a53      	ldr	r2, [pc, #332]	; (13a78 <terminalTask::taskEntry()+0x250>)
   1392c:	4b53      	ldr	r3, [pc, #332]	; (13a7c <terminalTask::taskEntry()+0x254>)
   1392e:	f004 fbad 	bl	1808c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   13932:	9500      	str	r5, [sp, #0]
   13934:	4620      	mov	r0, r4
   13936:	4952      	ldr	r1, [pc, #328]	; (13a80 <terminalTask::taskEntry()+0x258>)
   13938:	4a52      	ldr	r2, [pc, #328]	; (13a84 <terminalTask::taskEntry()+0x25c>)
   1393a:	4b53      	ldr	r3, [pc, #332]	; (13a88 <terminalTask::taskEntry()+0x260>)
   1393c:	f004 fba6 	bl	1808c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   13940:	9500      	str	r5, [sp, #0]
   13942:	4620      	mov	r0, r4
   13944:	4951      	ldr	r1, [pc, #324]	; (13a8c <terminalTask::taskEntry()+0x264>)
   13946:	4a52      	ldr	r2, [pc, #328]	; (13a90 <terminalTask::taskEntry()+0x268>)
   13948:	4b52      	ldr	r3, [pc, #328]	; (13a94 <terminalTask::taskEntry()+0x26c>)
   1394a:	f004 fb9f 	bl	1808c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   1394e:	f7ff ff3d 	bl	137cc <SingletonTemplate<Uart0>::getInstance()>
   13952:	f44f 7380 	mov.w	r3, #256	; 0x100
   13956:	f44f 4116 	mov.w	r1, #38400	; 0x9600
   1395a:	2220      	movs	r2, #32
   1395c:	4605      	mov	r5, r0
   1395e:	f006 fba3 	bl	1a0a8 <Uart0::init(unsigned int, int, int)>
   13962:	2701      	movs	r7, #1
   13964:	4680      	mov	r8, r0
   13966:	742f      	strb	r7, [r5, #16]
   13968:	484b      	ldr	r0, [pc, #300]	; (13a98 <terminalTask::taskEntry()+0x270>)
   1396a:	f7fc fce7 	bl	1033c <sys_set_inchar_func>
   1396e:	484b      	ldr	r0, [pc, #300]	; (13a9c <terminalTask::taskEntry()+0x274>)
   13970:	f7fc fcde 	bl	10330 <sys_set_outchar_func>
   13974:	4630      	mov	r0, r6
   13976:	4629      	mov	r1, r5
   13978:	463a      	mov	r2, r7
   1397a:	f7ff fe1b 	bl	135b4 <terminalTask::addCommandChannel(CharDev*, bool)>
   1397e:	a903      	add	r1, sp, #12
   13980:	2208      	movs	r2, #8
   13982:	a805      	add	r0, sp, #20
   13984:	f005 f9e8 	bl	18d58 <str::str(char*, int)>
   13988:	a805      	add	r0, sp, #20
   1398a:	4945      	ldr	r1, [pc, #276]	; (13aa0 <terminalTask::taskEntry()+0x278>)
   1398c:	f005 fc65 	bl	1925a <str::operator=(char const*)>
   13990:	a905      	add	r1, sp, #20
   13992:	462a      	mov	r2, r5
   13994:	4620      	mov	r0, r4
   13996:	f004 fc5b 	bl	18250 <CommandProcessor::handleCommand(str&, CharDev&)>
   1399a:	a805      	add	r0, sp, #20
   1399c:	f005 f9f1 	bl	18d82 <str::~str()>
   139a0:	4640      	mov	r0, r8
   139a2:	b00a      	add	sp, #40	; 0x28
   139a4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   139a8:	00010561 	.word	0x00010561
   139ac:	0002599a 	.word	0x0002599a
   139b0:	00025950 	.word	0x00025950
   139b4:	0001064d 	.word	0x0001064d
   139b8:	00025987 	.word	0x00025987
   139bc:	0002598f 	.word	0x0002598f
   139c0:	00011121 	.word	0x00011121
   139c4:	000259ad 	.word	0x000259ad
   139c8:	0002599f 	.word	0x0002599f
   139cc:	00010671 	.word	0x00010671
   139d0:	000259f5 	.word	0x000259f5
   139d4:	000259b4 	.word	0x000259b4
   139d8:	000108c5 	.word	0x000108c5
   139dc:	000259fa 	.word	0x000259fa
   139e0:	000259fe 	.word	0x000259fe
   139e4:	00010845 	.word	0x00010845
   139e8:	00025a9d 	.word	0x00025a9d
   139ec:	00025a5a 	.word	0x00025a5a
   139f0:	00010d25 	.word	0x00010d25
   139f4:	00025a9c 	.word	0x00025a9c
   139f8:	00025aa0 	.word	0x00025aa0
   139fc:	000109f5 	.word	0x000109f5
   13a00:	00025aeb 	.word	0x00025aeb
   13a04:	00025aee 	.word	0x00025aee
   13a08:	00010ba1 	.word	0x00010ba1
   13a0c:	00025b1c 	.word	0x00025b1c
   13a10:	00025b22 	.word	0x00025b22
   13a14:	00010c19 	.word	0x00010c19
   13a18:	00025b47 	.word	0x00025b47
   13a1c:	00025b4a 	.word	0x00025b4a
   13a20:	00010c75 	.word	0x00010c75
   13a24:	00027266 	.word	0x00027266
   13a28:	00025b77 	.word	0x00025b77
   13a2c:	00010bdd 	.word	0x00010bdd
   13a30:	00025b9c 	.word	0x00025b9c
   13a34:	00025b9f 	.word	0x00025b9f
   13a38:	00010f99 	.word	0x00010f99
   13a3c:	00025bc2 	.word	0x00025bc2
   13a40:	00025bc6 	.word	0x00025bc6
   13a44:	00010e61 	.word	0x00010e61
   13a48:	00025c78 	.word	0x00025c78
   13a4c:	00025c80 	.word	0x00025c80
   13a50:	00010f15 	.word	0x00010f15
   13a54:	00025cc3 	.word	0x00025cc3
   13a58:	00025cca 	.word	0x00025cca
   13a5c:	00010735 	.word	0x00010735
   13a60:	00025cdd 	.word	0x00025cdd
   13a64:	00025ce1 	.word	0x00025ce1
   13a68:	00010f45 	.word	0x00010f45
   13a6c:	00025da3 	.word	0x00025da3
   13a70:	00025da9 	.word	0x00025da9
   13a74:	0001173d 	.word	0x0001173d
   13a78:	000255a7 	.word	0x000255a7
   13a7c:	00025dd1 	.word	0x00025dd1
   13a80:	00011371 	.word	0x00011371
   13a84:	00025eef 	.word	0x00025eef
   13a88:	00025dfb 	.word	0x00025dfb
   13a8c:	000112c5 	.word	0x000112c5
   13a90:	00024769 	.word	0x00024769
   13a94:	00025eb8 	.word	0x00025eb8
   13a98:	00013805 	.word	0x00013805
   13a9c:	000137ed 	.word	0x000137ed
   13aa0:	00024dcd 	.word	0x00024dcd

00013aa4 <wirelessTask::~wirelessTask()>:
_ZN12wirelessTaskD1Ev():
   13aa4:	4b01      	ldr	r3, [pc, #4]	; (13aac <wirelessTask::~wirelessTask()+0x8>)
   13aa6:	6003      	str	r3, [r0, #0]
   13aa8:	4770      	bx	lr
   13aaa:	bf00      	nop
   13aac:	000252d8 	.word	0x000252d8

00013ab0 <wirelessTask::~wirelessTask()>:
_ZN12wirelessTaskD0Ev():
   13ab0:	b510      	push	{r4, lr}
   13ab2:	4b03      	ldr	r3, [pc, #12]	; (13ac0 <wirelessTask::~wirelessTask()+0x10>)
   13ab4:	4604      	mov	r4, r0
   13ab6:	6003      	str	r3, [r0, #0]
   13ab8:	f7fc fbdc 	bl	10274 <operator delete(void*)>
   13abc:	4620      	mov	r0, r4
   13abe:	bd10      	pop	{r4, pc}
   13ac0:	000252d8 	.word	0x000252d8

00013ac4 <wirelessTask::run(void*)>:
_ZN12wirelessTask3runEPv():
   13ac4:	b508      	push	{r3, lr}
   13ac6:	f001 f8f9 	bl	14cbc <wireless_service>
   13aca:	2001      	movs	r0, #1
   13acc:	bd08      	pop	{r3, pc}
	...

00013ad0 <main>:
main():
   13ad0:	b537      	push	{r0, r1, r2, r4, r5, lr}
   13ad2:	f7fe fed9 	bl	12888 <controllerInit()>
   13ad6:	2034      	movs	r0, #52	; 0x34
   13ad8:	f7fc fbca 	bl	10270 <operator new(unsigned int)>
   13adc:	2104      	movs	r1, #4
   13ade:	4604      	mov	r4, r0
   13ae0:	f7fe fc76 	bl	123d0 <canRxBufferTask::canRxBufferTask(unsigned char)>
   13ae4:	4620      	mov	r0, r4
   13ae6:	f005 f8df 	bl	18ca8 <scheduler_add_task(scheduler_task*)>
   13aea:	2034      	movs	r0, #52	; 0x34
   13aec:	f7fc fbc0 	bl	10270 <operator new(unsigned int)>
   13af0:	2103      	movs	r1, #3
   13af2:	4604      	mov	r4, r0
   13af4:	f7fe fc80 	bl	123f8 <canRxProcessTask::canRxProcessTask(unsigned char)>
   13af8:	4620      	mov	r0, r4
   13afa:	f005 f8d5 	bl	18ca8 <scheduler_add_task(scheduler_task*)>
   13afe:	2090      	movs	r0, #144	; 0x90
   13b00:	f7fc fbb6 	bl	10270 <operator new(unsigned int)>
   13b04:	2103      	movs	r1, #3
   13b06:	4604      	mov	r4, r0
   13b08:	f7ff fcce 	bl	134a8 <terminalTask::terminalTask(unsigned char)>
   13b0c:	4620      	mov	r0, r4
   13b0e:	f005 f8cb 	bl	18ca8 <scheduler_add_task(scheduler_task*)>
   13b12:	2034      	movs	r0, #52	; 0x34
   13b14:	f7fc fbac 	bl	10270 <operator new(unsigned int)>
   13b18:	2400      	movs	r4, #0
   13b1a:	f44f 7200 	mov.w	r2, #512	; 0x200
   13b1e:	4909      	ldr	r1, [pc, #36]	; (13b44 <main+0x74>)
   13b20:	9400      	str	r4, [sp, #0]
   13b22:	2304      	movs	r3, #4
   13b24:	4605      	mov	r5, r0
   13b26:	f005 f8f1 	bl	18d0c <scheduler_task::scheduler_task(char const*, unsigned long, unsigned char, void*)>
   13b2a:	4b07      	ldr	r3, [pc, #28]	; (13b48 <main+0x78>)
   13b2c:	4628      	mov	r0, r5
   13b2e:	602b      	str	r3, [r5, #0]
   13b30:	f005 f8ba 	bl	18ca8 <scheduler_add_task(scheduler_task*)>
   13b34:	4620      	mov	r0, r4
   13b36:	4621      	mov	r1, r4
   13b38:	f005 f8c6 	bl	18cc8 <scheduler_start(bool, bool)>
   13b3c:	f04f 30ff 	mov.w	r0, #4294967295
   13b40:	b003      	add	sp, #12
   13b42:	bd30      	pop	{r4, r5, pc}
   13b44:	000255a7 	.word	0x000255a7
   13b48:	00025f38 	.word	0x00025f38

00013b4c <mesh_incr_soft_timers_for_arr>:
mesh_incr_soft_timers_for_arr():
   13b4c:	2324      	movs	r3, #36	; 0x24
   13b4e:	b510      	push	{r4, lr}
   13b50:	fb03 0301 	mla	r3, r3, r1, r0
   13b54:	4298      	cmp	r0, r3
   13b56:	d00b      	beq.n	13b70 <mesh_incr_soft_timers_for_arr+0x24>
   13b58:	7841      	ldrb	r1, [r0, #1]
   13b5a:	b139      	cbz	r1, 13b6c <mesh_incr_soft_timers_for_arr+0x20>
   13b5c:	8c01      	ldrh	r1, [r0, #32]
   13b5e:	f64f 74ff 	movw	r4, #65535	; 0xffff
   13b62:	4411      	add	r1, r2
   13b64:	42a1      	cmp	r1, r4
   13b66:	bf28      	it	cs
   13b68:	4621      	movcs	r1, r4
   13b6a:	8401      	strh	r1, [r0, #32]
   13b6c:	3024      	adds	r0, #36	; 0x24
   13b6e:	e7f1      	b.n	13b54 <mesh_incr_soft_timers_for_arr+0x8>
   13b70:	bd10      	pop	{r4, pc}
	...

00013b74 <mesh_update_soft_timers>:
mesh_update_soft_timers():
   13b74:	b537      	push	{r0, r1, r2, r4, r5, lr}
   13b76:	2300      	movs	r3, #0
   13b78:	a802      	add	r0, sp, #8
   13b7a:	f840 3d04 	str.w	r3, [r0, #-4]!
   13b7e:	4b0c      	ldr	r3, [pc, #48]	; (13bb0 <mesh_update_soft_timers+0x3c>)
   13b80:	2104      	movs	r1, #4
   13b82:	685b      	ldr	r3, [r3, #4]
   13b84:	4798      	blx	r3
   13b86:	4b0b      	ldr	r3, [pc, #44]	; (13bb4 <mesh_update_soft_timers+0x40>)
   13b88:	9a01      	ldr	r2, [sp, #4]
   13b8a:	681c      	ldr	r4, [r3, #0]
   13b8c:	4605      	mov	r5, r0
   13b8e:	1b14      	subs	r4, r2, r4
   13b90:	601a      	str	r2, [r3, #0]
   13b92:	4809      	ldr	r0, [pc, #36]	; (13bb8 <mesh_update_soft_timers+0x44>)
   13b94:	4622      	mov	r2, r4
   13b96:	2104      	movs	r1, #4
   13b98:	f7ff ffd8 	bl	13b4c <mesh_incr_soft_timers_for_arr>
   13b9c:	4807      	ldr	r0, [pc, #28]	; (13bbc <mesh_update_soft_timers+0x48>)
   13b9e:	2102      	movs	r1, #2
   13ba0:	4622      	mov	r2, r4
   13ba2:	f7ff ffd3 	bl	13b4c <mesh_incr_soft_timers_for_arr>
   13ba6:	1c28      	adds	r0, r5, #0
   13ba8:	bf18      	it	ne
   13baa:	2001      	movne	r0, #1
   13bac:	b003      	add	sp, #12
   13bae:	bd30      	pop	{r4, r5, pc}
   13bb0:	2007c77c 	.word	0x2007c77c
   13bb4:	2007c844 	.word	0x2007c844
   13bb8:	2007c790 	.word	0x2007c790
   13bbc:	2007c868 	.word	0x2007c868

00013bc0 <mesh_send_packet>:
mesh_send_packet():
   13bc0:	b508      	push	{r3, lr}
   13bc2:	4b0b      	ldr	r3, [pc, #44]	; (13bf0 <mesh_send_packet+0x30>)
   13bc4:	781a      	ldrb	r2, [r3, #0]
   13bc6:	7803      	ldrb	r3, [r0, #0]
   13bc8:	4293      	cmp	r3, r2
   13bca:	4b0a      	ldr	r3, [pc, #40]	; (13bf4 <mesh_send_packet+0x34>)
   13bcc:	d103      	bne.n	13bd6 <mesh_send_packet+0x16>
   13bce:	8819      	ldrh	r1, [r3, #0]
   13bd0:	3101      	adds	r1, #1
   13bd2:	8019      	strh	r1, [r3, #0]
   13bd4:	e002      	b.n	13bdc <mesh_send_packet+0x1c>
   13bd6:	8899      	ldrh	r1, [r3, #4]
   13bd8:	3101      	adds	r1, #1
   13bda:	8099      	strh	r1, [r3, #4]
   13bdc:	4b06      	ldr	r3, [pc, #24]	; (13bf8 <mesh_send_packet+0x38>)
   13bde:	7082      	strb	r2, [r0, #2]
   13be0:	68db      	ldr	r3, [r3, #12]
   13be2:	2120      	movs	r1, #32
   13be4:	4798      	blx	r3
   13be6:	3000      	adds	r0, #0
   13be8:	bf18      	it	ne
   13bea:	2001      	movne	r0, #1
   13bec:	bd08      	pop	{r3, pc}
   13bee:	bf00      	nop
   13bf0:	2007c015 	.word	0x2007c015
   13bf4:	2007c838 	.word	0x2007c838
   13bf8:	2007c77c 	.word	0x2007c77c

00013bfc <mesh_send_retry_packet>:
mesh_send_retry_packet():
   13bfc:	4b0a      	ldr	r3, [pc, #40]	; (13c28 <mesh_send_retry_packet+0x2c>)
   13bfe:	7802      	ldrb	r2, [r0, #0]
   13c00:	781b      	ldrb	r3, [r3, #0]
   13c02:	429a      	cmp	r2, r3
   13c04:	4b09      	ldr	r3, [pc, #36]	; (13c2c <mesh_send_retry_packet+0x30>)
   13c06:	d103      	bne.n	13c10 <mesh_send_retry_packet+0x14>
   13c08:	88da      	ldrh	r2, [r3, #6]
   13c0a:	3201      	adds	r2, #1
   13c0c:	80da      	strh	r2, [r3, #6]
   13c0e:	e002      	b.n	13c16 <mesh_send_retry_packet+0x1a>
   13c10:	891a      	ldrh	r2, [r3, #8]
   13c12:	3201      	adds	r2, #1
   13c14:	811a      	strh	r2, [r3, #8]
   13c16:	7903      	ldrb	r3, [r0, #4]
   13c18:	f3c3 02c2 	ubfx	r2, r3, #3, #3
   13c1c:	3207      	adds	r2, #7
   13c1e:	f362 03c5 	bfi	r3, r2, #3, #3
   13c22:	7103      	strb	r3, [r0, #4]
   13c24:	f7ff bfcc 	b.w	13bc0 <mesh_send_packet>
   13c28:	2007c015 	.word	0x2007c015
   13c2c:	2007c838 	.word	0x2007c838

00013c30 <mesh_find_rte_tbl_entry>:
mesh_find_rte_tbl_entry():
   13c30:	b510      	push	{r4, lr}
   13c32:	2300      	movs	r3, #0
   13c34:	4a06      	ldr	r2, [pc, #24]	; (13c50 <mesh_find_rte_tbl_entry+0x20>)
   13c36:	0099      	lsls	r1, r3, #2
   13c38:	f812 4023 	ldrb.w	r4, [r2, r3, lsl #2]
   13c3c:	4284      	cmp	r4, r0
   13c3e:	d101      	bne.n	13c44 <mesh_find_rte_tbl_entry+0x14>
   13c40:	1850      	adds	r0, r2, r1
   13c42:	bd10      	pop	{r4, pc}
   13c44:	3301      	adds	r3, #1
   13c46:	2b04      	cmp	r3, #4
   13c48:	d1f4      	bne.n	13c34 <mesh_find_rte_tbl_entry+0x4>
   13c4a:	2000      	movs	r0, #0
   13c4c:	bd10      	pop	{r4, pc}
   13c4e:	bf00      	nop
   13c50:	2007c855 	.word	0x2007c855

00013c54 <mesh_update_rte_scores>:
mesh_update_rte_scores():
   13c54:	b170      	cbz	r0, 13c74 <mesh_update_rte_scores+0x20>
   13c56:	78c3      	ldrb	r3, [r0, #3]
   13c58:	3301      	adds	r3, #1
   13c5a:	b2db      	uxtb	r3, r3
   13c5c:	2bff      	cmp	r3, #255	; 0xff
   13c5e:	70c3      	strb	r3, [r0, #3]
   13c60:	d108      	bne.n	13c74 <mesh_update_rte_scores+0x20>
   13c62:	2300      	movs	r3, #0
   13c64:	4a04      	ldr	r2, [pc, #16]	; (13c78 <mesh_update_rte_scores+0x24>)
   13c66:	441a      	add	r2, r3
   13c68:	78d1      	ldrb	r1, [r2, #3]
   13c6a:	3304      	adds	r3, #4
   13c6c:	0849      	lsrs	r1, r1, #1
   13c6e:	2b10      	cmp	r3, #16
   13c70:	70d1      	strb	r1, [r2, #3]
   13c72:	d1f7      	bne.n	13c64 <mesh_update_rte_scores+0x10>
   13c74:	4770      	bx	lr
   13c76:	bf00      	nop
   13c78:	2007c855 	.word	0x2007c855

00013c7c <mesh_get_pnd_pkt_slot>:
mesh_get_pnd_pkt_slot():
   13c7c:	b570      	push	{r4, r5, r6, lr}
   13c7e:	2224      	movs	r2, #36	; 0x24
   13c80:	fb02 0101 	mla	r1, r2, r1, r0
   13c84:	4603      	mov	r3, r0
   13c86:	4602      	mov	r2, r0
   13c88:	428a      	cmp	r2, r1
   13c8a:	d006      	beq.n	13c9a <mesh_get_pnd_pkt_slot+0x1e>
   13c8c:	4610      	mov	r0, r2
   13c8e:	3224      	adds	r2, #36	; 0x24
   13c90:	f812 4c23 	ldrb.w	r4, [r2, #-35]
   13c94:	2c00      	cmp	r4, #0
   13c96:	d1f7      	bne.n	13c88 <mesh_get_pnd_pkt_slot+0xc>
   13c98:	e012      	b.n	13cc0 <mesh_get_pnd_pkt_slot+0x44>
   13c9a:	4618      	mov	r0, r3
   13c9c:	2200      	movs	r2, #0
   13c9e:	428b      	cmp	r3, r1
   13ca0:	d00e      	beq.n	13cc0 <mesh_get_pnd_pkt_slot+0x44>
   13ca2:	791c      	ldrb	r4, [r3, #4]
   13ca4:	8c1e      	ldrh	r6, [r3, #32]
   13ca6:	f3c4 04c2 	ubfx	r4, r4, #3, #3
   13caa:	ea46 4404 	orr.w	r4, r6, r4, lsl #16
   13cae:	42a2      	cmp	r2, r4
   13cb0:	461d      	mov	r5, r3
   13cb2:	bf24      	itt	cs
   13cb4:	4614      	movcs	r4, r2
   13cb6:	4605      	movcs	r5, r0
   13cb8:	3324      	adds	r3, #36	; 0x24
   13cba:	4622      	mov	r2, r4
   13cbc:	4628      	mov	r0, r5
   13cbe:	e7ee      	b.n	13c9e <mesh_get_pnd_pkt_slot+0x22>
   13cc0:	bd70      	pop	{r4, r5, r6, pc}
	...

00013cc4 <mesh_pending_packets_add>:
mesh_pending_packets_add():
   13cc4:	b538      	push	{r3, r4, r5, lr}
   13cc6:	3101      	adds	r1, #1
   13cc8:	4604      	mov	r4, r0
   13cca:	00cd      	lsls	r5, r1, #3
   13ccc:	f7ff ff52 	bl	13b74 <mesh_update_soft_timers>
   13cd0:	4b1b      	ldr	r3, [pc, #108]	; (13d40 <mesh_pending_packets_add+0x7c>)
   13cd2:	781a      	ldrb	r2, [r3, #0]
   13cd4:	7823      	ldrb	r3, [r4, #0]
   13cd6:	429a      	cmp	r2, r3
   13cd8:	d104      	bne.n	13ce4 <mesh_pending_packets_add+0x20>
   13cda:	2102      	movs	r1, #2
   13cdc:	4819      	ldr	r0, [pc, #100]	; (13d44 <mesh_pending_packets_add+0x80>)
   13cde:	f7ff ffcd 	bl	13c7c <mesh_get_pnd_pkt_slot>
   13ce2:	e00c      	b.n	13cfe <mesh_pending_packets_add+0x3a>
   13ce4:	4818      	ldr	r0, [pc, #96]	; (13d48 <mesh_pending_packets_add+0x84>)
   13ce6:	2104      	movs	r1, #4
   13ce8:	f7ff ffc8 	bl	13c7c <mesh_get_pnd_pkt_slot>
   13cec:	78e3      	ldrb	r3, [r4, #3]
   13cee:	b933      	cbnz	r3, 13cfe <mesh_pending_packets_add+0x3a>
   13cf0:	f890 3023 	ldrb.w	r3, [r0, #35]	; 0x23
   13cf4:	2504      	movs	r5, #4
   13cf6:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   13cfa:	f880 3023 	strb.w	r3, [r0, #35]	; 0x23
   13cfe:	2300      	movs	r3, #0
   13d00:	f880 3020 	strb.w	r3, [r0, #32]
   13d04:	f880 3021 	strb.w	r3, [r0, #33]	; 0x21
   13d08:	f890 3023 	ldrb.w	r3, [r0, #35]	; 0x23
   13d0c:	f880 5022 	strb.w	r5, [r0, #34]	; 0x22
   13d10:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
   13d14:	ea43 2515 	orr.w	r5, r3, r5, lsr #8
   13d18:	f880 5023 	strb.w	r5, [r0, #35]	; 0x23
   13d1c:	4623      	mov	r3, r4
   13d1e:	4602      	mov	r2, r0
   13d20:	f104 0120 	add.w	r1, r4, #32
   13d24:	f853 4b04 	ldr.w	r4, [r3], #4
   13d28:	428b      	cmp	r3, r1
   13d2a:	f842 4b04 	str.w	r4, [r2], #4
   13d2e:	d1f9      	bne.n	13d24 <mesh_pending_packets_add+0x60>
   13d30:	4a06      	ldr	r2, [pc, #24]	; (13d4c <mesh_pending_packets_add+0x88>)
   13d32:	7903      	ldrb	r3, [r0, #4]
   13d34:	7812      	ldrb	r2, [r2, #0]
   13d36:	f362 03c5 	bfi	r3, r2, #3, #3
   13d3a:	7103      	strb	r3, [r0, #4]
   13d3c:	bd38      	pop	{r3, r4, r5, pc}
   13d3e:	bf00      	nop
   13d40:	2007c015 	.word	0x2007c015
   13d44:	2007c868 	.word	0x2007c868
   13d48:	2007c790 	.word	0x2007c790
   13d4c:	2007c014 	.word	0x2007c014

00013d50 <mesh_get_rte_to_modify>:
mesh_get_rte_to_modify():
   13d50:	b510      	push	{r4, lr}
   13d52:	f7ff ff6d 	bl	13c30 <mesh_find_rte_tbl_entry>
   13d56:	4604      	mov	r4, r0
   13d58:	b9f8      	cbnz	r0, 13d9a <mesh_get_rte_to_modify+0x4a>
   13d5a:	f7ff ff69 	bl	13c30 <mesh_find_rte_tbl_entry>
   13d5e:	4604      	mov	r4, r0
   13d60:	b9d8      	cbnz	r0, 13d9a <mesh_get_rte_to_modify+0x4a>
   13d62:	4a0f      	ldr	r2, [pc, #60]	; (13da0 <mesh_get_rte_to_modify+0x50>)
   13d64:	78d3      	ldrb	r3, [r2, #3]
   13d66:	79d1      	ldrb	r1, [r2, #7]
   13d68:	4299      	cmp	r1, r3
   13d6a:	bf38      	it	cc
   13d6c:	460b      	movcc	r3, r1
   13d6e:	7ad1      	ldrb	r1, [r2, #11]
   13d70:	bf34      	ite	cc
   13d72:	1d14      	addcc	r4, r2, #4
   13d74:	4614      	movcs	r4, r2
   13d76:	4299      	cmp	r1, r3
   13d78:	bf3c      	itt	cc
   13d7a:	460b      	movcc	r3, r1
   13d7c:	4c09      	ldrcc	r4, [pc, #36]	; (13da4 <mesh_get_rte_to_modify+0x54>)
   13d7e:	7bd1      	ldrb	r1, [r2, #15]
   13d80:	4a09      	ldr	r2, [pc, #36]	; (13da8 <mesh_get_rte_to_modify+0x58>)
   13d82:	4299      	cmp	r1, r3
   13d84:	bf38      	it	cc
   13d86:	4614      	movcc	r4, r2
   13d88:	4620      	mov	r0, r4
   13d8a:	2204      	movs	r2, #4
   13d8c:	2100      	movs	r1, #0
   13d8e:	f00a f86e 	bl	1de6e <memset>
   13d92:	4b06      	ldr	r3, [pc, #24]	; (13dac <mesh_get_rte_to_modify+0x5c>)
   13d94:	7ada      	ldrb	r2, [r3, #11]
   13d96:	3201      	adds	r2, #1
   13d98:	72da      	strb	r2, [r3, #11]
   13d9a:	4620      	mov	r0, r4
   13d9c:	bd10      	pop	{r4, pc}
   13d9e:	bf00      	nop
   13da0:	2007c855 	.word	0x2007c855
   13da4:	2007c85d 	.word	0x2007c85d
   13da8:	2007c861 	.word	0x2007c861
   13dac:	2007c838 	.word	0x2007c838

00013db0 <mesh_handle_pnd_pkts_for_arr>:
mesh_handle_pnd_pkts_for_arr():
   13db0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   13db2:	2724      	movs	r7, #36	; 0x24
   13db4:	fb07 1702 	mla	r7, r7, r2, r1
   13db8:	4605      	mov	r5, r0
   13dba:	460c      	mov	r4, r1
   13dbc:	42bc      	cmp	r4, r7
   13dbe:	f000 80b3 	beq.w	13f28 <mesh_handle_pnd_pkts_for_arr+0x178>
   13dc2:	f894 1023 	ldrb.w	r1, [r4, #35]	; 0x23
   13dc6:	09cb      	lsrs	r3, r1, #7
   13dc8:	d02b      	beq.n	13e22 <mesh_handle_pnd_pkts_for_arr+0x72>
   13dca:	b1bd      	cbz	r5, 13dfc <mesh_handle_pnd_pkts_for_arr+0x4c>
   13dcc:	782b      	ldrb	r3, [r5, #0]
   13dce:	7862      	ldrb	r2, [r4, #1]
   13dd0:	4293      	cmp	r3, r2
   13dd2:	d103      	bne.n	13ddc <mesh_handle_pnd_pkts_for_arr+0x2c>
   13dd4:	786e      	ldrb	r6, [r5, #1]
   13dd6:	7820      	ldrb	r0, [r4, #0]
   13dd8:	4286      	cmp	r6, r0
   13dda:	d01c      	beq.n	13e16 <mesh_handle_pnd_pkts_for_arr+0x66>
   13ddc:	78e8      	ldrb	r0, [r5, #3]
   13dde:	b168      	cbz	r0, 13dfc <mesh_handle_pnd_pkts_for_arr+0x4c>
   13de0:	7868      	ldrb	r0, [r5, #1]
   13de2:	4290      	cmp	r0, r2
   13de4:	d108      	bne.n	13df8 <mesh_handle_pnd_pkts_for_arr+0x48>
   13de6:	7822      	ldrb	r2, [r4, #0]
   13de8:	429a      	cmp	r2, r3
   13dea:	d105      	bne.n	13df8 <mesh_handle_pnd_pkts_for_arr+0x48>
   13dec:	79a3      	ldrb	r3, [r4, #6]
   13dee:	79aa      	ldrb	r2, [r5, #6]
   13df0:	1ad6      	subs	r6, r2, r3
   13df2:	4273      	negs	r3, r6
   13df4:	4173      	adcs	r3, r6
   13df6:	e000      	b.n	13dfa <mesh_handle_pnd_pkts_for_arr+0x4a>
   13df8:	2300      	movs	r3, #0
   13dfa:	b963      	cbnz	r3, 13e16 <mesh_handle_pnd_pkts_for_arr+0x66>
   13dfc:	f894 2022 	ldrb.w	r2, [r4, #34]	; 0x22
   13e00:	8c23      	ldrh	r3, [r4, #32]
   13e02:	f001 017f 	and.w	r1, r1, #127	; 0x7f
   13e06:	ea42 2101 	orr.w	r1, r2, r1, lsl #8
   13e0a:	428b      	cmp	r3, r1
   13e0c:	f2c0 808a 	blt.w	13f24 <mesh_handle_pnd_pkts_for_arr+0x174>
   13e10:	4620      	mov	r0, r4
   13e12:	f7ff fed5 	bl	13bc0 <mesh_send_packet>
   13e16:	4620      	mov	r0, r4
   13e18:	2100      	movs	r1, #0
   13e1a:	2224      	movs	r2, #36	; 0x24
   13e1c:	f00a f827 	bl	1de6e <memset>
   13e20:	e080      	b.n	13f24 <mesh_handle_pnd_pkts_for_arr+0x174>
   13e22:	7863      	ldrb	r3, [r4, #1]
   13e24:	2b00      	cmp	r3, #0
   13e26:	d07d      	beq.n	13f24 <mesh_handle_pnd_pkts_for_arr+0x174>
   13e28:	2d00      	cmp	r5, #0
   13e2a:	d03c      	beq.n	13ea6 <mesh_handle_pnd_pkts_for_arr+0xf6>
   13e2c:	792a      	ldrb	r2, [r5, #4]
   13e2e:	0992      	lsrs	r2, r2, #6
   13e30:	2a03      	cmp	r2, #3
   13e32:	d11a      	bne.n	13e6a <mesh_handle_pnd_pkts_for_arr+0xba>
   13e34:	786a      	ldrb	r2, [r5, #1]
   13e36:	7820      	ldrb	r0, [r4, #0]
   13e38:	4290      	cmp	r0, r2
   13e3a:	d102      	bne.n	13e42 <mesh_handle_pnd_pkts_for_arr+0x92>
   13e3c:	7828      	ldrb	r0, [r5, #0]
   13e3e:	4298      	cmp	r0, r3
   13e40:	d0e9      	beq.n	13e16 <mesh_handle_pnd_pkts_for_arr+0x66>
   13e42:	78e6      	ldrb	r6, [r4, #3]
   13e44:	78a8      	ldrb	r0, [r5, #2]
   13e46:	4286      	cmp	r6, r0
   13e48:	d110      	bne.n	13e6c <mesh_handle_pnd_pkts_for_arr+0xbc>
   13e4a:	4293      	cmp	r3, r2
   13e4c:	d109      	bne.n	13e62 <mesh_handle_pnd_pkts_for_arr+0xb2>
   13e4e:	7820      	ldrb	r0, [r4, #0]
   13e50:	782a      	ldrb	r2, [r5, #0]
   13e52:	4290      	cmp	r0, r2
   13e54:	d105      	bne.n	13e62 <mesh_handle_pnd_pkts_for_arr+0xb2>
   13e56:	79aa      	ldrb	r2, [r5, #6]
   13e58:	79a0      	ldrb	r0, [r4, #6]
   13e5a:	1a80      	subs	r0, r0, r2
   13e5c:	4242      	negs	r2, r0
   13e5e:	4142      	adcs	r2, r0
   13e60:	e000      	b.n	13e64 <mesh_handle_pnd_pkts_for_arr+0xb4>
   13e62:	2200      	movs	r2, #0
   13e64:	2a00      	cmp	r2, #0
   13e66:	d1d6      	bne.n	13e16 <mesh_handle_pnd_pkts_for_arr+0x66>
   13e68:	e000      	b.n	13e6c <mesh_handle_pnd_pkts_for_arr+0xbc>
   13e6a:	b1e2      	cbz	r2, 13ea6 <mesh_handle_pnd_pkts_for_arr+0xf6>
   13e6c:	78a8      	ldrb	r0, [r5, #2]
   13e6e:	78e2      	ldrb	r2, [r4, #3]
   13e70:	4290      	cmp	r0, r2
   13e72:	d118      	bne.n	13ea6 <mesh_handle_pnd_pkts_for_arr+0xf6>
   13e74:	786a      	ldrb	r2, [r5, #1]
   13e76:	429a      	cmp	r2, r3
   13e78:	d109      	bne.n	13e8e <mesh_handle_pnd_pkts_for_arr+0xde>
   13e7a:	7820      	ldrb	r0, [r4, #0]
   13e7c:	782a      	ldrb	r2, [r5, #0]
   13e7e:	4290      	cmp	r0, r2
   13e80:	d105      	bne.n	13e8e <mesh_handle_pnd_pkts_for_arr+0xde>
   13e82:	79a0      	ldrb	r0, [r4, #6]
   13e84:	79aa      	ldrb	r2, [r5, #6]
   13e86:	1a82      	subs	r2, r0, r2
   13e88:	4250      	negs	r0, r2
   13e8a:	4150      	adcs	r0, r2
   13e8c:	e000      	b.n	13e90 <mesh_handle_pnd_pkts_for_arr+0xe0>
   13e8e:	2000      	movs	r0, #0
   13e90:	b148      	cbz	r0, 13ea6 <mesh_handle_pnd_pkts_for_arr+0xf6>
   13e92:	7922      	ldrb	r2, [r4, #4]
   13e94:	2300      	movs	r3, #0
   13e96:	f363 02c5 	bfi	r2, r3, #3, #3
   13e9a:	f884 3020 	strb.w	r3, [r4, #32]
   13e9e:	f884 3021 	strb.w	r3, [r4, #33]	; 0x21
   13ea2:	7122      	strb	r2, [r4, #4]
   13ea4:	e03e      	b.n	13f24 <mesh_handle_pnd_pkts_for_arr+0x174>
   13ea6:	f894 0022 	ldrb.w	r0, [r4, #34]	; 0x22
   13eaa:	8c22      	ldrh	r2, [r4, #32]
   13eac:	f001 017f 	and.w	r1, r1, #127	; 0x7f
   13eb0:	ea40 2101 	orr.w	r1, r0, r1, lsl #8
   13eb4:	428a      	cmp	r2, r1
   13eb6:	db35      	blt.n	13f24 <mesh_handle_pnd_pkts_for_arr+0x174>
   13eb8:	7921      	ldrb	r1, [r4, #4]
   13eba:	2200      	movs	r2, #0
   13ebc:	f884 2020 	strb.w	r2, [r4, #32]
   13ec0:	f884 2021 	strb.w	r2, [r4, #33]	; 0x21
   13ec4:	f3c1 02c2 	ubfx	r2, r1, #3, #3
   13ec8:	b2d6      	uxtb	r6, r2
   13eca:	b11e      	cbz	r6, 13ed4 <mesh_handle_pnd_pkts_for_arr+0x124>
   13ecc:	4620      	mov	r0, r4
   13ece:	f7ff fe95 	bl	13bfc <mesh_send_retry_packet>
   13ed2:	e027      	b.n	13f24 <mesh_handle_pnd_pkts_for_arr+0x174>
   13ed4:	0989      	lsrs	r1, r1, #6
   13ed6:	2903      	cmp	r1, #3
   13ed8:	d018      	beq.n	13f0c <mesh_handle_pnd_pkts_for_arr+0x15c>
   13eda:	4914      	ldr	r1, [pc, #80]	; (13f2c <mesh_handle_pnd_pkts_for_arr+0x17c>)
   13edc:	7820      	ldrb	r0, [r4, #0]
   13ede:	7809      	ldrb	r1, [r1, #0]
   13ee0:	4288      	cmp	r0, r1
   13ee2:	d113      	bne.n	13f0c <mesh_handle_pnd_pkts_for_arr+0x15c>
   13ee4:	78e1      	ldrb	r1, [r4, #3]
   13ee6:	4299      	cmp	r1, r3
   13ee8:	d010      	beq.n	13f0c <mesh_handle_pnd_pkts_for_arr+0x15c>
   13eea:	b179      	cbz	r1, 13f0c <mesh_handle_pnd_pkts_for_arr+0x15c>
   13eec:	7963      	ldrb	r3, [r4, #5]
   13eee:	70e2      	strb	r2, [r4, #3]
   13ef0:	2203      	movs	r2, #3
   13ef2:	f362 1307 	bfi	r3, r2, #4, #4
   13ef6:	7163      	strb	r3, [r4, #5]
   13ef8:	4620      	mov	r0, r4
   13efa:	f7ff fe7f 	bl	13bfc <mesh_send_retry_packet>
   13efe:	4a0c      	ldr	r2, [pc, #48]	; (13f30 <mesh_handle_pnd_pkts_for_arr+0x180>)
   13f00:	7923      	ldrb	r3, [r4, #4]
   13f02:	7812      	ldrb	r2, [r2, #0]
   13f04:	f362 03c5 	bfi	r3, r2, #3, #3
   13f08:	7123      	strb	r3, [r4, #4]
   13f0a:	e000      	b.n	13f0e <mesh_handle_pnd_pkts_for_arr+0x15e>
   13f0c:	2601      	movs	r6, #1
   13f0e:	7860      	ldrb	r0, [r4, #1]
   13f10:	f7ff fe8e 	bl	13c30 <mesh_find_rte_tbl_entry>
   13f14:	b118      	cbz	r0, 13f1e <mesh_handle_pnd_pkts_for_arr+0x16e>
   13f16:	2100      	movs	r1, #0
   13f18:	2204      	movs	r2, #4
   13f1a:	f009 ffa8 	bl	1de6e <memset>
   13f1e:	2e00      	cmp	r6, #0
   13f20:	f47f af79 	bne.w	13e16 <mesh_handle_pnd_pkts_for_arr+0x66>
   13f24:	3424      	adds	r4, #36	; 0x24
   13f26:	e749      	b.n	13dbc <mesh_handle_pnd_pkts_for_arr+0xc>
   13f28:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   13f2a:	bf00      	nop
   13f2c:	2007c015 	.word	0x2007c015
   13f30:	2007c014 	.word	0x2007c014

00013f34 <mesh_set_node_address>:
mesh_set_node_address():
   13f34:	1e43      	subs	r3, r0, #1
   13f36:	b2db      	uxtb	r3, r3
   13f38:	2bfd      	cmp	r3, #253	; 0xfd
   13f3a:	bf9d      	ittte	ls
   13f3c:	4b02      	ldrls	r3, [pc, #8]	; (13f48 <mesh_set_node_address+0x14>)
   13f3e:	7018      	strbls	r0, [r3, #0]
   13f40:	2001      	movls	r0, #1
   13f42:	2000      	movhi	r0, #0
   13f44:	4770      	bx	lr
   13f46:	bf00      	nop
   13f48:	2007c015 	.word	0x2007c015

00013f4c <mesh_get_node_address>:
mesh_get_node_address():
   13f4c:	4b01      	ldr	r3, [pc, #4]	; (13f54 <mesh_get_node_address+0x8>)
   13f4e:	7818      	ldrb	r0, [r3, #0]
   13f50:	4770      	bx	lr
   13f52:	bf00      	nop
   13f54:	2007c015 	.word	0x2007c015

00013f58 <mesh_set_retry_count>:
mesh_set_retry_count():
   13f58:	2807      	cmp	r0, #7
   13f5a:	bf9c      	itt	ls
   13f5c:	4b01      	ldrls	r3, [pc, #4]	; (13f64 <mesh_set_retry_count+0xc>)
   13f5e:	7018      	strbls	r0, [r3, #0]
   13f60:	4770      	bx	lr
   13f62:	bf00      	nop
   13f64:	2007c014 	.word	0x2007c014

00013f68 <mesh_form_pkt>:
mesh_form_pkt():
   13f68:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   13f6c:	4604      	mov	r4, r0
   13f6e:	4691      	mov	r9, r2
   13f70:	4698      	mov	r8, r3
   13f72:	f89d 6028 	ldrb.w	r6, [sp, #40]	; 0x28
   13f76:	460d      	mov	r5, r1
   13f78:	2900      	cmp	r1, #0
   13f7a:	d05b      	beq.n	14034 <mesh_form_pkt+0xcc>
   13f7c:	4b31      	ldr	r3, [pc, #196]	; (14044 <mesh_form_pkt+0xdc>)
   13f7e:	781f      	ldrb	r7, [r3, #0]
   13f80:	42b9      	cmp	r1, r7
   13f82:	d059      	beq.n	14038 <mesh_form_pkt+0xd0>
   13f84:	f1b8 0f0f 	cmp.w	r8, #15
   13f88:	d856      	bhi.n	14038 <mesh_form_pkt+0xd0>
   13f8a:	2800      	cmp	r0, #0
   13f8c:	d056      	beq.n	1403c <mesh_form_pkt+0xd4>
   13f8e:	2220      	movs	r2, #32
   13f90:	2100      	movs	r1, #0
   13f92:	f009 ff6c 	bl	1de6e <memset>
   13f96:	2dff      	cmp	r5, #255	; 0xff
   13f98:	7923      	ldrb	r3, [r4, #4]
   13f9a:	bf14      	ite	ne
   13f9c:	f009 0203 	andne.w	r2, r9, #3
   13fa0:	2200      	moveq	r2, #0
   13fa2:	f362 1387 	bfi	r3, r2, #6, #2
   13fa6:	2203      	movs	r2, #3
   13fa8:	f362 0302 	bfi	r3, r2, #0, #3
   13fac:	4a26      	ldr	r2, [pc, #152]	; (14048 <mesh_form_pkt+0xe0>)
   13fae:	7065      	strb	r5, [r4, #1]
   13fb0:	7812      	ldrb	r2, [r2, #0]
   13fb2:	7027      	strb	r7, [r4, #0]
   13fb4:	f362 03c5 	bfi	r3, r2, #3, #3
   13fb8:	4a24      	ldr	r2, [pc, #144]	; (1404c <mesh_form_pkt+0xe4>)
   13fba:	7123      	strb	r3, [r4, #4]
   13fbc:	7813      	ldrb	r3, [r2, #0]
   13fbe:	70a7      	strb	r7, [r4, #2]
   13fc0:	3301      	adds	r3, #1
   13fc2:	b2db      	uxtb	r3, r3
   13fc4:	7013      	strb	r3, [r2, #0]
   13fc6:	71a3      	strb	r3, [r4, #6]
   13fc8:	ab0b      	add	r3, sp, #44	; 0x2c
   13fca:	9301      	str	r3, [sp, #4]
   13fcc:	b90e      	cbnz	r6, 13fd2 <mesh_form_pkt+0x6a>
   13fce:	2701      	movs	r7, #1
   13fd0:	e013      	b.n	13ffa <mesh_form_pkt+0x92>
   13fd2:	9b01      	ldr	r3, [sp, #4]
   13fd4:	79e0      	ldrb	r0, [r4, #7]
   13fd6:	461a      	mov	r2, r3
   13fd8:	f852 1b08 	ldr.w	r1, [r2], #8
   13fdc:	3e01      	subs	r6, #1
   13fde:	9201      	str	r2, [sp, #4]
   13fe0:	685a      	ldr	r2, [r3, #4]
   13fe2:	b2f6      	uxtb	r6, r6
   13fe4:	1887      	adds	r7, r0, r2
   13fe6:	b2ff      	uxtb	r7, r7
   13fe8:	2f18      	cmp	r7, #24
   13fea:	d805      	bhi.n	13ff8 <mesh_form_pkt+0x90>
   13fec:	3008      	adds	r0, #8
   13fee:	4420      	add	r0, r4
   13ff0:	f009 ff19 	bl	1de26 <memcpy>
   13ff4:	71e7      	strb	r7, [r4, #7]
   13ff6:	e7e9      	b.n	13fcc <mesh_form_pkt+0x64>
   13ff8:	2700      	movs	r7, #0
   13ffa:	f8df 9054 	ldr.w	r9, [pc, #84]	; 14050 <mesh_form_pkt+0xe8>
   13ffe:	2301      	movs	r3, #1
   14000:	4628      	mov	r0, r5
   14002:	f889 3000 	strb.w	r3, [r9]
   14006:	f7ff fe13 	bl	13c30 <mesh_find_rte_tbl_entry>
   1400a:	4606      	mov	r6, r0
   1400c:	f7ff fe22 	bl	13c54 <mesh_update_rte_scores>
   14010:	2300      	movs	r3, #0
   14012:	f889 3000 	strb.w	r3, [r9]
   14016:	7963      	ldrb	r3, [r4, #5]
   14018:	b926      	cbnz	r6, 14024 <mesh_form_pkt+0xbc>
   1401a:	f368 1307 	bfi	r3, r8, #4, #4
   1401e:	7163      	strb	r3, [r4, #5]
   14020:	70e6      	strb	r6, [r4, #3]
   14022:	e005      	b.n	14030 <mesh_form_pkt+0xc8>
   14024:	78b2      	ldrb	r2, [r6, #2]
   14026:	f362 1307 	bfi	r3, r2, #4, #4
   1402a:	7163      	strb	r3, [r4, #5]
   1402c:	7873      	ldrb	r3, [r6, #1]
   1402e:	70e3      	strb	r3, [r4, #3]
   14030:	4638      	mov	r0, r7
   14032:	e003      	b.n	1403c <mesh_form_pkt+0xd4>
   14034:	4608      	mov	r0, r1
   14036:	e001      	b.n	1403c <mesh_form_pkt+0xd4>
   14038:	2000      	movs	r0, #0
   1403a:	e7ff      	b.n	1403c <mesh_form_pkt+0xd4>
   1403c:	b003      	add	sp, #12
   1403e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   14042:	bf00      	nop
   14044:	2007c015 	.word	0x2007c015
   14048:	2007c014 	.word	0x2007c014
   1404c:	2007c867 	.word	0x2007c867
   14050:	2007c865 	.word	0x2007c865

00014054 <mesh_send_formed_pkt>:
mesh_send_formed_pkt():
   14054:	4b15      	ldr	r3, [pc, #84]	; (140ac <mesh_send_formed_pkt+0x58>)
   14056:	2201      	movs	r2, #1
   14058:	b570      	push	{r4, r5, r6, lr}
   1405a:	701a      	strb	r2, [r3, #0]
   1405c:	4604      	mov	r4, r0
   1405e:	461e      	mov	r6, r3
   14060:	b908      	cbnz	r0, 14066 <mesh_send_formed_pkt+0x12>
   14062:	2500      	movs	r5, #0
   14064:	e01d      	b.n	140a2 <mesh_send_formed_pkt+0x4e>
   14066:	f7ff fdab 	bl	13bc0 <mesh_send_packet>
   1406a:	4605      	mov	r5, r0
   1406c:	2800      	cmp	r0, #0
   1406e:	d0f8      	beq.n	14062 <mesh_send_formed_pkt+0xe>
   14070:	7922      	ldrb	r2, [r4, #4]
   14072:	0992      	lsrs	r2, r2, #6
   14074:	1cd1      	adds	r1, r2, #3
   14076:	2a03      	cmp	r2, #3
   14078:	f001 0103 	and.w	r1, r1, #3
   1407c:	d106      	bne.n	1408c <mesh_send_formed_pkt+0x38>
   1407e:	78e3      	ldrb	r3, [r4, #3]
   14080:	b12b      	cbz	r3, 1408e <mesh_send_formed_pkt+0x3a>
   14082:	7862      	ldrb	r2, [r4, #1]
   14084:	1ad3      	subs	r3, r2, r3
   14086:	bf18      	it	ne
   14088:	2301      	movne	r3, #1
   1408a:	e000      	b.n	1408e <mesh_send_formed_pkt+0x3a>
   1408c:	2300      	movs	r3, #0
   1408e:	2901      	cmp	r1, #1
   14090:	f003 0301 	and.w	r3, r3, #1
   14094:	d900      	bls.n	14098 <mesh_send_formed_pkt+0x44>
   14096:	b123      	cbz	r3, 140a2 <mesh_send_formed_pkt+0x4e>
   14098:	7961      	ldrb	r1, [r4, #5]
   1409a:	4620      	mov	r0, r4
   1409c:	0909      	lsrs	r1, r1, #4
   1409e:	f7ff fe11 	bl	13cc4 <mesh_pending_packets_add>
   140a2:	2300      	movs	r3, #0
   140a4:	7033      	strb	r3, [r6, #0]
   140a6:	4628      	mov	r0, r5
   140a8:	bd70      	pop	{r4, r5, r6, pc}
   140aa:	bf00      	nop
   140ac:	2007c865 	.word	0x2007c865

000140b0 <mesh_init>:
mesh_init():
   140b0:	b082      	sub	sp, #8
   140b2:	b5f0      	push	{r4, r5, r6, r7, lr}
   140b4:	4617      	mov	r7, r2
   140b6:	1e42      	subs	r2, r0, #1
   140b8:	b2d2      	uxtb	r2, r2
   140ba:	b08d      	sub	sp, #52	; 0x34
   140bc:	2afd      	cmp	r2, #253	; 0xfd
   140be:	4604      	mov	r4, r0
   140c0:	460d      	mov	r5, r1
   140c2:	9313      	str	r3, [sp, #76]	; 0x4c
   140c4:	d901      	bls.n	140ca <mesh_init+0x1a>
   140c6:	2000      	movs	r0, #0
   140c8:	e05a      	b.n	14180 <mesh_init+0xd0>
   140ca:	2b00      	cmp	r3, #0
   140cc:	d0fb      	beq.n	140c6 <mesh_init+0x16>
   140ce:	9b15      	ldr	r3, [sp, #84]	; 0x54
   140d0:	2b00      	cmp	r3, #0
   140d2:	d0f8      	beq.n	140c6 <mesh_init+0x16>
   140d4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
   140d6:	2b00      	cmp	r3, #0
   140d8:	d0f5      	beq.n	140c6 <mesh_init+0x16>
   140da:	9b16      	ldr	r3, [sp, #88]	; 0x58
   140dc:	2b00      	cmp	r3, #0
   140de:	d0f2      	beq.n	140c6 <mesh_init+0x16>
   140e0:	9b14      	ldr	r3, [sp, #80]	; 0x50
   140e2:	2b00      	cmp	r3, #0
   140e4:	d0ef      	beq.n	140c6 <mesh_init+0x16>
   140e6:	2100      	movs	r1, #0
   140e8:	2248      	movs	r2, #72	; 0x48
   140ea:	4828      	ldr	r0, [pc, #160]	; (1418c <mesh_init+0xdc>)
   140ec:	f009 febf 	bl	1de6e <memset>
   140f0:	2100      	movs	r1, #0
   140f2:	2290      	movs	r2, #144	; 0x90
   140f4:	4826      	ldr	r0, [pc, #152]	; (14190 <mesh_init+0xe0>)
   140f6:	f009 feba 	bl	1de6e <memset>
   140fa:	2100      	movs	r1, #0
   140fc:	2210      	movs	r2, #16
   140fe:	4825      	ldr	r0, [pc, #148]	; (14194 <mesh_init+0xe4>)
   14100:	f009 feb5 	bl	1de6e <memset>
   14104:	2100      	movs	r1, #0
   14106:	220c      	movs	r2, #12
   14108:	4823      	ldr	r0, [pc, #140]	; (14198 <mesh_init+0xe8>)
   1410a:	f009 feb0 	bl	1de6e <memset>
   1410e:	2100      	movs	r1, #0
   14110:	220c      	movs	r2, #12
   14112:	4822      	ldr	r0, [pc, #136]	; (1419c <mesh_init+0xec>)
   14114:	f009 feab 	bl	1de6e <memset>
   14118:	4b21      	ldr	r3, [pc, #132]	; (141a0 <mesh_init+0xf0>)
   1411a:	4e22      	ldr	r6, [pc, #136]	; (141a4 <mesh_init+0xf4>)
   1411c:	701c      	strb	r4, [r3, #0]
   1411e:	4b22      	ldr	r3, [pc, #136]	; (141a8 <mesh_init+0xf8>)
   14120:	4634      	mov	r4, r6
   14122:	701d      	strb	r5, [r3, #0]
   14124:	ad13      	add	r5, sp, #76	; 0x4c
   14126:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
   14128:	c40f      	stmia	r4!, {r0, r1, r2, r3}
   1412a:	682b      	ldr	r3, [r5, #0]
   1412c:	2100      	movs	r1, #0
   1412e:	2218      	movs	r2, #24
   14130:	481e      	ldr	r0, [pc, #120]	; (141ac <mesh_init+0xfc>)
   14132:	6023      	str	r3, [r4, #0]
   14134:	f009 fe9b 	bl	1de6e <memset>
   14138:	4639      	mov	r1, r7
   1413a:	481c      	ldr	r0, [pc, #112]	; (141ac <mesh_init+0xfc>)
   1413c:	2217      	movs	r2, #23
   1413e:	f00a ff03 	bl	1ef48 <strncpy>
   14142:	2000      	movs	r0, #0
   14144:	68b3      	ldr	r3, [r6, #8]
   14146:	4601      	mov	r1, r0
   14148:	4798      	blx	r3
   1414a:	2800      	cmp	r0, #0
   1414c:	d0bb      	beq.n	140c6 <mesh_init+0x16>
   1414e:	f89d 3060 	ldrb.w	r3, [sp, #96]	; 0x60
   14152:	b913      	cbnz	r3, 1415a <mesh_init+0xaa>
   14154:	f7ff fd0e 	bl	13b74 <mesh_update_soft_timers>
   14158:	e012      	b.n	14180 <mesh_init+0xd0>
   1415a:	4a15      	ldr	r2, [pc, #84]	; (141b0 <mesh_init+0x100>)
   1415c:	2301      	movs	r3, #1
   1415e:	9201      	str	r2, [sp, #4]
   14160:	2206      	movs	r2, #6
   14162:	9202      	str	r2, [sp, #8]
   14164:	9300      	str	r3, [sp, #0]
   14166:	a804      	add	r0, sp, #16
   14168:	21ff      	movs	r1, #255	; 0xff
   1416a:	2200      	movs	r2, #0
   1416c:	f7ff fefc 	bl	13f68 <mesh_form_pkt>
   14170:	2800      	cmp	r0, #0
   14172:	d0a8      	beq.n	140c6 <mesh_init+0x16>
   14174:	a804      	add	r0, sp, #16
   14176:	f7ff ff6d 	bl	14054 <mesh_send_formed_pkt>
   1417a:	2800      	cmp	r0, #0
   1417c:	d0a3      	beq.n	140c6 <mesh_init+0x16>
   1417e:	e7e9      	b.n	14154 <mesh_init+0xa4>
   14180:	b00d      	add	sp, #52	; 0x34
   14182:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
   14186:	b002      	add	sp, #8
   14188:	4770      	bx	lr
   1418a:	bf00      	nop
   1418c:	2007c868 	.word	0x2007c868
   14190:	2007c790 	.word	0x2007c790
   14194:	2007c855 	.word	0x2007c855
   14198:	2007c849 	.word	0x2007c849
   1419c:	2007c838 	.word	0x2007c838
   141a0:	2007c015 	.word	0x2007c015
   141a4:	2007c77c 	.word	0x2007c77c
   141a8:	2007c848 	.word	0x2007c848
   141ac:	2007c820 	.word	0x2007c820
   141b0:	00025f50 	.word	0x00025f50

000141b4 <mesh_send>:
mesh_send():
   141b4:	b570      	push	{r4, r5, r6, lr}
   141b6:	2b18      	cmp	r3, #24
   141b8:	b08c      	sub	sp, #48	; 0x30
   141ba:	4606      	mov	r6, r0
   141bc:	460d      	mov	r5, r1
   141be:	d817      	bhi.n	141f0 <mesh_send+0x3c>
   141c0:	1c1c      	adds	r4, r3, #0
   141c2:	bf18      	it	ne
   141c4:	2401      	movne	r4, #1
   141c6:	2a00      	cmp	r2, #0
   141c8:	bf14      	ite	ne
   141ca:	4621      	movne	r1, r4
   141cc:	f084 0101 	eoreq.w	r1, r4, #1
   141d0:	b171      	cbz	r1, 141f0 <mesh_send+0x3c>
   141d2:	9201      	str	r2, [sp, #4]
   141d4:	9302      	str	r3, [sp, #8]
   141d6:	9400      	str	r4, [sp, #0]
   141d8:	a804      	add	r0, sp, #16
   141da:	4631      	mov	r1, r6
   141dc:	462a      	mov	r2, r5
   141de:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
   141e2:	f7ff fec1 	bl	13f68 <mesh_form_pkt>
   141e6:	b118      	cbz	r0, 141f0 <mesh_send+0x3c>
   141e8:	a804      	add	r0, sp, #16
   141ea:	f7ff ff33 	bl	14054 <mesh_send_formed_pkt>
   141ee:	e000      	b.n	141f2 <mesh_send+0x3e>
   141f0:	2000      	movs	r0, #0
   141f2:	b00c      	add	sp, #48	; 0x30
   141f4:	bd70      	pop	{r4, r5, r6, pc}

000141f6 <mesh_send_ack>:
mesh_send_ack():
   141f6:	b513      	push	{r0, r1, r4, lr}
   141f8:	4604      	mov	r4, r0
   141fa:	7810      	ldrb	r0, [r2, #0]
   141fc:	7952      	ldrb	r2, [r2, #5]
   141fe:	460b      	mov	r3, r1
   14200:	0912      	lsrs	r2, r2, #4
   14202:	9200      	str	r2, [sp, #0]
   14204:	2103      	movs	r1, #3
   14206:	4622      	mov	r2, r4
   14208:	f7ff ffd4 	bl	141b4 <mesh_send>
   1420c:	b002      	add	sp, #8
   1420e:	bd10      	pop	{r4, pc}

00014210 <mesh_get_routing_entry>:
mesh_get_routing_entry():
   14210:	b530      	push	{r4, r5, lr}
   14212:	2300      	movs	r3, #0
   14214:	461a      	mov	r2, r3
   14216:	4908      	ldr	r1, [pc, #32]	; (14238 <mesh_get_routing_entry+0x28>)
   14218:	009c      	lsls	r4, r3, #2
   1421a:	f811 5023 	ldrb.w	r5, [r1, r3, lsl #2]
   1421e:	b12d      	cbz	r5, 1422c <mesh_get_routing_entry+0x1c>
   14220:	4290      	cmp	r0, r2
   14222:	d101      	bne.n	14228 <mesh_get_routing_entry+0x18>
   14224:	1908      	adds	r0, r1, r4
   14226:	bd30      	pop	{r4, r5, pc}
   14228:	3201      	adds	r2, #1
   1422a:	b2d2      	uxtb	r2, r2
   1422c:	3301      	adds	r3, #1
   1422e:	2b04      	cmp	r3, #4
   14230:	d1f1      	bne.n	14216 <mesh_get_routing_entry+0x6>
   14232:	2000      	movs	r0, #0
   14234:	bd30      	pop	{r4, r5, pc}
   14236:	bf00      	nop
   14238:	2007c855 	.word	0x2007c855

0001423c <mesh_get_num_routing_entries>:
mesh_get_num_routing_entries():
   1423c:	2300      	movs	r3, #0
   1423e:	4618      	mov	r0, r3
   14240:	4a04      	ldr	r2, [pc, #16]	; (14254 <mesh_get_num_routing_entries+0x18>)
   14242:	5c9a      	ldrb	r2, [r3, r2]
   14244:	b10a      	cbz	r2, 1424a <mesh_get_num_routing_entries+0xe>
   14246:	3001      	adds	r0, #1
   14248:	b2c0      	uxtb	r0, r0
   1424a:	3304      	adds	r3, #4
   1424c:	2b10      	cmp	r3, #16
   1424e:	d1f7      	bne.n	14240 <mesh_get_num_routing_entries+0x4>
   14250:	4770      	bx	lr
   14252:	bf00      	nop
   14254:	2007c855 	.word	0x2007c855

00014258 <mesh_service>:
mesh_service():
   14258:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1425c:	b088      	sub	sp, #32
   1425e:	4668      	mov	r0, sp
   14260:	2100      	movs	r1, #0
   14262:	2220      	movs	r2, #32
   14264:	f009 fe03 	bl	1de6e <memset>
   14268:	4b9c      	ldr	r3, [pc, #624]	; (144dc <mesh_service+0x284>)
   1426a:	781b      	ldrb	r3, [r3, #0]
   1426c:	f003 04ff 	and.w	r4, r3, #255	; 0xff
   14270:	2b00      	cmp	r3, #0
   14272:	f040 8130 	bne.w	144d6 <mesh_service+0x27e>
   14276:	4f9a      	ldr	r7, [pc, #616]	; (144e0 <mesh_service+0x288>)
   14278:	4668      	mov	r0, sp
   1427a:	693b      	ldr	r3, [r7, #16]
   1427c:	2120      	movs	r1, #32
   1427e:	4798      	blx	r3
   14280:	2800      	cmp	r0, #0
   14282:	f000 8082 	beq.w	1438a <mesh_service+0x132>
   14286:	4d97      	ldr	r5, [pc, #604]	; (144e4 <mesh_service+0x28c>)
   14288:	886b      	ldrh	r3, [r5, #2]
   1428a:	3301      	adds	r3, #1
   1428c:	806b      	strh	r3, [r5, #2]
   1428e:	f7ff ffd5 	bl	1423c <mesh_get_num_routing_entries>
   14292:	f89d 1004 	ldrb.w	r1, [sp, #4]
   14296:	72a8      	strb	r0, [r5, #10]
   14298:	f001 0307 	and.w	r3, r1, #7
   1429c:	2b03      	cmp	r3, #3
   1429e:	d004      	beq.n	142aa <mesh_service+0x52>
   142a0:	4b91      	ldr	r3, [pc, #580]	; (144e8 <mesh_service+0x290>)
   142a2:	781a      	ldrb	r2, [r3, #0]
   142a4:	f042 0201 	orr.w	r2, r2, #1
   142a8:	e009      	b.n	142be <mesh_service+0x66>
   142aa:	4b90      	ldr	r3, [pc, #576]	; (144ec <mesh_service+0x294>)
   142ac:	781d      	ldrb	r5, [r3, #0]
   142ae:	f89d 3002 	ldrb.w	r3, [sp, #2]
   142b2:	42ab      	cmp	r3, r5
   142b4:	d105      	bne.n	142c2 <mesh_service+0x6a>
   142b6:	4b8c      	ldr	r3, [pc, #560]	; (144e8 <mesh_service+0x290>)
   142b8:	781a      	ldrb	r2, [r3, #0]
   142ba:	f042 0202 	orr.w	r2, r2, #2
   142be:	701a      	strb	r2, [r3, #0]
   142c0:	e0db      	b.n	1447a <mesh_service+0x222>
   142c2:	f3c1 01c2 	ubfx	r1, r1, #3, #3
   142c6:	f89d e000 	ldrb.w	lr, [sp]
   142ca:	f89d 0006 	ldrb.w	r0, [sp, #6]
   142ce:	b2ce      	uxtb	r6, r1
   142d0:	4a87      	ldr	r2, [pc, #540]	; (144f0 <mesh_service+0x298>)
   142d2:	1913      	adds	r3, r2, r4
   142d4:	5ca2      	ldrb	r2, [r4, r2]
   142d6:	4572      	cmp	r2, lr
   142d8:	d109      	bne.n	142ee <mesh_service+0x96>
   142da:	785a      	ldrb	r2, [r3, #1]
   142dc:	4282      	cmp	r2, r0
   142de:	d106      	bne.n	142ee <mesh_service+0x96>
   142e0:	789a      	ldrb	r2, [r3, #2]
   142e2:	2401      	movs	r4, #1
   142e4:	1b96      	subs	r6, r2, r6
   142e6:	bf18      	it	ne
   142e8:	2601      	movne	r6, #1
   142ea:	7099      	strb	r1, [r3, #2]
   142ec:	e018      	b.n	14320 <mesh_service+0xc8>
   142ee:	3403      	adds	r4, #3
   142f0:	2c0c      	cmp	r4, #12
   142f2:	d1ed      	bne.n	142d0 <mesh_service+0x78>
   142f4:	4a7f      	ldr	r2, [pc, #508]	; (144f4 <mesh_service+0x29c>)
   142f6:	6813      	ldr	r3, [r2, #0]
   142f8:	7099      	strb	r1, [r3, #2]
   142fa:	497d      	ldr	r1, [pc, #500]	; (144f0 <mesh_service+0x298>)
   142fc:	7058      	strb	r0, [r3, #1]
   142fe:	f101 0009 	add.w	r0, r1, #9
   14302:	4283      	cmp	r3, r0
   14304:	f883 e000 	strb.w	lr, [r3]
   14308:	f040 80c4 	bne.w	14494 <mesh_service+0x23c>
   1430c:	6011      	str	r1, [r2, #0]
   1430e:	f89d 0000 	ldrb.w	r0, [sp]
   14312:	f89d 3002 	ldrb.w	r3, [sp, #2]
   14316:	4283      	cmp	r3, r0
   14318:	f040 80bf 	bne.w	1449a <mesh_service+0x242>
   1431c:	2400      	movs	r4, #0
   1431e:	4626      	mov	r6, r4
   14320:	f89d 0002 	ldrb.w	r0, [sp, #2]
   14324:	f7ff fd14 	bl	13d50 <mesh_get_rte_to_modify>
   14328:	f89d 2002 	ldrb.w	r2, [sp, #2]
   1432c:	7002      	strb	r2, [r0, #0]
   1432e:	f89d 2002 	ldrb.w	r2, [sp, #2]
   14332:	7042      	strb	r2, [r0, #1]
   14334:	2200      	movs	r2, #0
   14336:	7082      	strb	r2, [r0, #2]
   14338:	f7ff fc8c 	bl	13c54 <mesh_update_rte_scores>
   1433c:	2c00      	cmp	r4, #0
   1433e:	bf08      	it	eq
   14340:	2601      	moveq	r6, #1
   14342:	b316      	cbz	r6, 1438a <mesh_service+0x132>
   14344:	f89d 3000 	ldrb.w	r3, [sp]
   14348:	42ab      	cmp	r3, r5
   1434a:	f000 8095 	beq.w	14478 <mesh_service+0x220>
   1434e:	f89d 6001 	ldrb.w	r6, [sp, #1]
   14352:	2eff      	cmp	r6, #255	; 0xff
   14354:	d11b      	bne.n	1438e <mesh_service+0x136>
   14356:	683b      	ldr	r3, [r7, #0]
   14358:	4668      	mov	r0, sp
   1435a:	2120      	movs	r1, #32
   1435c:	4798      	blx	r3
   1435e:	b920      	cbnz	r0, 1436a <mesh_service+0x112>
   14360:	4b61      	ldr	r3, [pc, #388]	; (144e8 <mesh_service+0x290>)
   14362:	781a      	ldrb	r2, [r3, #0]
   14364:	f042 0204 	orr.w	r2, r2, #4
   14368:	701a      	strb	r2, [r3, #0]
   1436a:	f89d 3005 	ldrb.w	r3, [sp, #5]
   1436e:	f003 020f 	and.w	r2, r3, #15
   14372:	1c51      	adds	r1, r2, #1
   14374:	f361 0303 	bfi	r3, r1, #0, #4
   14378:	f88d 3005 	strb.w	r3, [sp, #5]
   1437c:	f3c3 1303 	ubfx	r3, r3, #4, #4
   14380:	429a      	cmp	r2, r3
   14382:	da02      	bge.n	1438a <mesh_service+0x132>
   14384:	4668      	mov	r0, sp
   14386:	f7ff fc1b 	bl	13bc0 <mesh_send_packet>
   1438a:	2400      	movs	r4, #0
   1438c:	e075      	b.n	1447a <mesh_service+0x222>
   1438e:	42b5      	cmp	r5, r6
   14390:	d12a      	bne.n	143e8 <mesh_service+0x190>
   14392:	b964      	cbnz	r4, 143ae <mesh_service+0x156>
   14394:	f89d 3007 	ldrb.w	r3, [sp, #7]
   14398:	b14b      	cbz	r3, 143ae <mesh_service+0x156>
   1439a:	683b      	ldr	r3, [r7, #0]
   1439c:	4668      	mov	r0, sp
   1439e:	2120      	movs	r1, #32
   143a0:	4798      	blx	r3
   143a2:	b920      	cbnz	r0, 143ae <mesh_service+0x156>
   143a4:	4b50      	ldr	r3, [pc, #320]	; (144e8 <mesh_service+0x290>)
   143a6:	781a      	ldrb	r2, [r3, #0]
   143a8:	f042 0204 	orr.w	r2, r2, #4
   143ac:	701a      	strb	r2, [r3, #0]
   143ae:	f89d 3004 	ldrb.w	r3, [sp, #4]
   143b2:	099b      	lsrs	r3, r3, #6
   143b4:	2b01      	cmp	r3, #1
   143b6:	d112      	bne.n	143de <mesh_service+0x186>
   143b8:	f89d 3007 	ldrb.w	r3, [sp, #7]
   143bc:	b913      	cbnz	r3, 143c4 <mesh_service+0x16c>
   143be:	484e      	ldr	r0, [pc, #312]	; (144f8 <mesh_service+0x2a0>)
   143c0:	2118      	movs	r1, #24
   143c2:	e008      	b.n	143d6 <mesh_service+0x17e>
   143c4:	4847      	ldr	r0, [pc, #284]	; (144e4 <mesh_service+0x28c>)
   143c6:	210c      	movs	r1, #12
   143c8:	466a      	mov	r2, sp
   143ca:	f7ff ff14 	bl	141f6 <mesh_send_ack>
   143ce:	2800      	cmp	r0, #0
   143d0:	d152      	bne.n	14478 <mesh_service+0x220>
   143d2:	2000      	movs	r0, #0
   143d4:	4601      	mov	r1, r0
   143d6:	466a      	mov	r2, sp
   143d8:	f7ff ff0d 	bl	141f6 <mesh_send_ack>
   143dc:	e04c      	b.n	14478 <mesh_service+0x220>
   143de:	f89d 3003 	ldrb.w	r3, [sp, #3]
   143e2:	2b00      	cmp	r3, #0
   143e4:	d148      	bne.n	14478 <mesh_service+0x220>
   143e6:	e7f4      	b.n	143d2 <mesh_service+0x17a>
   143e8:	4b44      	ldr	r3, [pc, #272]	; (144fc <mesh_service+0x2a4>)
   143ea:	781b      	ldrb	r3, [r3, #0]
   143ec:	2b00      	cmp	r3, #0
   143ee:	d0cc      	beq.n	1438a <mesh_service+0x132>
   143f0:	f89d 4005 	ldrb.w	r4, [sp, #5]
   143f4:	f004 080f 	and.w	r8, r4, #15
   143f8:	0927      	lsrs	r7, r4, #4
   143fa:	45b8      	cmp	r8, r7
   143fc:	dac5      	bge.n	1438a <mesh_service+0x132>
   143fe:	4630      	mov	r0, r6
   14400:	f7ff fc16 	bl	13c30 <mesh_find_rte_tbl_entry>
   14404:	f89d 3003 	ldrb.w	r3, [sp, #3]
   14408:	f108 0801 	add.w	r8, r8, #1
   1440c:	f368 0403 	bfi	r4, r8, #0, #4
   14410:	429d      	cmp	r5, r3
   14412:	f88d 4005 	strb.w	r4, [sp, #5]
   14416:	d119      	bne.n	1444c <mesh_service+0x1f4>
   14418:	f89d 2004 	ldrb.w	r2, [sp, #4]
   1441c:	0992      	lsrs	r2, r2, #6
   1441e:	1cd5      	adds	r5, r2, #3
   14420:	f005 0503 	and.w	r5, r5, #3
   14424:	2d01      	cmp	r5, #1
   14426:	bf8c      	ite	hi
   14428:	2500      	movhi	r5, #0
   1442a:	2501      	movls	r5, #1
   1442c:	b108      	cbz	r0, 14432 <mesh_service+0x1da>
   1442e:	7843      	ldrb	r3, [r0, #1]
   14430:	e000      	b.n	14434 <mesh_service+0x1dc>
   14432:	4603      	mov	r3, r0
   14434:	2a03      	cmp	r2, #3
   14436:	d105      	bne.n	14444 <mesh_service+0x1ec>
   14438:	429e      	cmp	r6, r3
   1443a:	d003      	beq.n	14444 <mesh_service+0x1ec>
   1443c:	3300      	adds	r3, #0
   1443e:	bf18      	it	ne
   14440:	2301      	movne	r3, #1
   14442:	e000      	b.n	14446 <mesh_service+0x1ee>
   14444:	2300      	movs	r3, #0
   14446:	431d      	orrs	r5, r3
   14448:	b930      	cbnz	r0, 14458 <mesh_service+0x200>
   1444a:	e00a      	b.n	14462 <mesh_service+0x20a>
   1444c:	b9a3      	cbnz	r3, 14478 <mesh_service+0x220>
   1444e:	461d      	mov	r5, r3
   14450:	b910      	cbnz	r0, 14458 <mesh_service+0x200>
   14452:	4668      	mov	r0, sp
   14454:	4639      	mov	r1, r7
   14456:	e00d      	b.n	14474 <mesh_service+0x21c>
   14458:	7843      	ldrb	r3, [r0, #1]
   1445a:	f88d 3003 	strb.w	r3, [sp, #3]
   1445e:	7884      	ldrb	r4, [r0, #2]
   14460:	e002      	b.n	14468 <mesh_service+0x210>
   14462:	f88d 0003 	strb.w	r0, [sp, #3]
   14466:	4604      	mov	r4, r0
   14468:	4668      	mov	r0, sp
   1446a:	f7ff fba9 	bl	13bc0 <mesh_send_packet>
   1446e:	b11d      	cbz	r5, 14478 <mesh_service+0x220>
   14470:	4668      	mov	r0, sp
   14472:	4621      	mov	r1, r4
   14474:	f7ff fc26 	bl	13cc4 <mesh_pending_packets_add>
   14478:	466c      	mov	r4, sp
   1447a:	f7ff fb7b 	bl	13b74 <mesh_update_soft_timers>
   1447e:	4620      	mov	r0, r4
   14480:	491f      	ldr	r1, [pc, #124]	; (14500 <mesh_service+0x2a8>)
   14482:	2204      	movs	r2, #4
   14484:	f7ff fc94 	bl	13db0 <mesh_handle_pnd_pkts_for_arr>
   14488:	4620      	mov	r0, r4
   1448a:	491e      	ldr	r1, [pc, #120]	; (14504 <mesh_service+0x2ac>)
   1448c:	2202      	movs	r2, #2
   1448e:	f7ff fc8f 	bl	13db0 <mesh_handle_pnd_pkts_for_arr>
   14492:	e020      	b.n	144d6 <mesh_service+0x27e>
   14494:	3303      	adds	r3, #3
   14496:	6013      	str	r3, [r2, #0]
   14498:	e739      	b.n	1430e <mesh_service+0xb6>
   1449a:	4285      	cmp	r5, r0
   1449c:	f43f af3e 	beq.w	1431c <mesh_service+0xc4>
   144a0:	f7ff fc56 	bl	13d50 <mesh_get_rte_to_modify>
   144a4:	4604      	mov	r4, r0
   144a6:	f7ff fbd5 	bl	13c54 <mesh_update_rte_scores>
   144aa:	7823      	ldrb	r3, [r4, #0]
   144ac:	b13b      	cbz	r3, 144be <mesh_service+0x266>
   144ae:	f89d 2005 	ldrb.w	r2, [sp, #5]
   144b2:	78a3      	ldrb	r3, [r4, #2]
   144b4:	f002 020f 	and.w	r2, r2, #15
   144b8:	429a      	cmp	r2, r3
   144ba:	f73f af2f 	bgt.w	1431c <mesh_service+0xc4>
   144be:	f89d 3000 	ldrb.w	r3, [sp]
   144c2:	7023      	strb	r3, [r4, #0]
   144c4:	f89d 3002 	ldrb.w	r3, [sp, #2]
   144c8:	7063      	strb	r3, [r4, #1]
   144ca:	f89d 3005 	ldrb.w	r3, [sp, #5]
   144ce:	f3c3 0303 	ubfx	r3, r3, #0, #4
   144d2:	70a3      	strb	r3, [r4, #2]
   144d4:	e722      	b.n	1431c <mesh_service+0xc4>
   144d6:	b008      	add	sp, #32
   144d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   144dc:	2007c865 	.word	0x2007c865
   144e0:	2007c77c 	.word	0x2007c77c
   144e4:	2007c838 	.word	0x2007c838
   144e8:	2007c866 	.word	0x2007c866
   144ec:	2007c015 	.word	0x2007c015
   144f0:	2007c849 	.word	0x2007c849
   144f4:	2007c010 	.word	0x2007c010
   144f8:	2007c820 	.word	0x2007c820
   144fc:	2007c848 	.word	0x2007c848
   14500:	2007c790 	.word	0x2007c790
   14504:	2007c868 	.word	0x2007c868

00014508 <mesh_get_pnd_pkt_count>:
mesh_get_pnd_pkt_count():
   14508:	2300      	movs	r3, #0
   1450a:	4618      	mov	r0, r3
   1450c:	4a09      	ldr	r2, [pc, #36]	; (14534 <mesh_get_pnd_pkt_count+0x2c>)
   1450e:	441a      	add	r2, r3
   14510:	7852      	ldrb	r2, [r2, #1]
   14512:	b10a      	cbz	r2, 14518 <mesh_get_pnd_pkt_count+0x10>
   14514:	3001      	adds	r0, #1
   14516:	b2c0      	uxtb	r0, r0
   14518:	3324      	adds	r3, #36	; 0x24
   1451a:	2b90      	cmp	r3, #144	; 0x90
   1451c:	d1f6      	bne.n	1450c <mesh_get_pnd_pkt_count+0x4>
   1451e:	4b06      	ldr	r3, [pc, #24]	; (14538 <mesh_get_pnd_pkt_count+0x30>)
   14520:	785a      	ldrb	r2, [r3, #1]
   14522:	b10a      	cbz	r2, 14528 <mesh_get_pnd_pkt_count+0x20>
   14524:	3001      	adds	r0, #1
   14526:	b2c0      	uxtb	r0, r0
   14528:	f893 3025 	ldrb.w	r3, [r3, #37]	; 0x25
   1452c:	b10b      	cbz	r3, 14532 <mesh_get_pnd_pkt_count+0x2a>
   1452e:	3001      	adds	r0, #1
   14530:	b2c0      	uxtb	r0, r0
   14532:	4770      	bx	lr
   14534:	2007c790 	.word	0x2007c790
   14538:	2007c868 	.word	0x2007c868

0001453c <mesh_get_max_timeout_before_packet_fails>:
mesh_get_max_timeout_before_packet_fails():
   1453c:	b508      	push	{r3, lr}
   1453e:	f7ff fb77 	bl	13c30 <mesh_find_rte_tbl_entry>
   14542:	4b06      	ldr	r3, [pc, #24]	; (1455c <mesh_get_max_timeout_before_packet_fails+0x20>)
   14544:	b128      	cbz	r0, 14552 <mesh_get_max_timeout_before_packet_fails+0x16>
   14546:	7882      	ldrb	r2, [r0, #2]
   14548:	7818      	ldrb	r0, [r3, #0]
   1454a:	fb02 0000 	mla	r0, r2, r0, r0
   1454e:	00c0      	lsls	r0, r0, #3
   14550:	bd08      	pop	{r3, pc}
   14552:	781b      	ldrb	r3, [r3, #0]
   14554:	2018      	movs	r0, #24
   14556:	4358      	muls	r0, r3
   14558:	bd08      	pop	{r3, pc}
   1455a:	bf00      	nop
   1455c:	2007c014 	.word	0x2007c014

00014560 <mesh_get_stats>:
mesh_get_stats():
   14560:	4903      	ldr	r1, [pc, #12]	; (14570 <mesh_get_stats+0x10>)
   14562:	680b      	ldr	r3, [r1, #0]
   14564:	6003      	str	r3, [r0, #0]
   14566:	684b      	ldr	r3, [r1, #4]
   14568:	6043      	str	r3, [r0, #4]
   1456a:	688b      	ldr	r3, [r1, #8]
   1456c:	6083      	str	r3, [r0, #8]
   1456e:	4770      	bx	lr
   14570:	2007c838 	.word	0x2007c838

00014574 <nordic_transfer>:
nordic_transfer():
   14574:	b530      	push	{r4, r5, lr}
   14576:	4c46      	ldr	r4, [pc, #280]	; (14690 <nordic_transfer+0x11c>)
   14578:	f44f 3580 	mov.w	r5, #65536	; 0x10000
   1457c:	61e5      	str	r5, [r4, #28]
   1457e:	4c45      	ldr	r4, [pc, #276]	; (14694 <nordic_transfer+0x120>)
   14580:	60a0      	str	r0, [r4, #8]
   14582:	68e0      	ldr	r0, [r4, #12]
   14584:	06c5      	lsls	r5, r0, #27
   14586:	d4fc      	bmi.n	14582 <nordic_transfer+0xe>
   14588:	4842      	ldr	r0, [pc, #264]	; (14694 <nordic_transfer+0x120>)
   1458a:	6880      	ldr	r0, [r0, #8]
   1458c:	b2c0      	uxtb	r0, r0
   1458e:	2b00      	cmp	r3, #0
   14590:	d077      	beq.n	14682 <nordic_transfer+0x10e>
   14592:	460b      	mov	r3, r1
   14594:	2a00      	cmp	r2, #0
   14596:	d068      	beq.n	1466a <nordic_transfer+0xf6>
   14598:	2a07      	cmp	r2, #7
   1459a:	4c3e      	ldr	r4, [pc, #248]	; (14694 <nordic_transfer+0x120>)
   1459c:	f991 5000 	ldrsb.w	r5, [r1]
   145a0:	dd36      	ble.n	14610 <nordic_transfer+0x9c>
   145a2:	60a5      	str	r5, [r4, #8]
   145a4:	f991 5001 	ldrsb.w	r5, [r1, #1]
   145a8:	3a08      	subs	r2, #8
   145aa:	60a5      	str	r5, [r4, #8]
   145ac:	f991 5002 	ldrsb.w	r5, [r1, #2]
   145b0:	60a5      	str	r5, [r4, #8]
   145b2:	f991 5003 	ldrsb.w	r5, [r1, #3]
   145b6:	60a5      	str	r5, [r4, #8]
   145b8:	f991 5004 	ldrsb.w	r5, [r1, #4]
   145bc:	60a5      	str	r5, [r4, #8]
   145be:	f991 5005 	ldrsb.w	r5, [r1, #5]
   145c2:	60a5      	str	r5, [r4, #8]
   145c4:	f991 5006 	ldrsb.w	r5, [r1, #6]
   145c8:	60a5      	str	r5, [r4, #8]
   145ca:	f101 0508 	add.w	r5, r1, #8
   145ce:	f991 1007 	ldrsb.w	r1, [r1, #7]
   145d2:	60a1      	str	r1, [r4, #8]
   145d4:	492f      	ldr	r1, [pc, #188]	; (14694 <nordic_transfer+0x120>)
   145d6:	698c      	ldr	r4, [r1, #24]
   145d8:	0764      	lsls	r4, r4, #29
   145da:	d5fb      	bpl.n	145d4 <nordic_transfer+0x60>
   145dc:	688c      	ldr	r4, [r1, #8]
   145de:	701c      	strb	r4, [r3, #0]
   145e0:	688c      	ldr	r4, [r1, #8]
   145e2:	705c      	strb	r4, [r3, #1]
   145e4:	688c      	ldr	r4, [r1, #8]
   145e6:	709c      	strb	r4, [r3, #2]
   145e8:	6889      	ldr	r1, [r1, #8]
   145ea:	70d9      	strb	r1, [r3, #3]
   145ec:	4929      	ldr	r1, [pc, #164]	; (14694 <nordic_transfer+0x120>)
   145ee:	68cc      	ldr	r4, [r1, #12]
   145f0:	06e4      	lsls	r4, r4, #27
   145f2:	d4fb      	bmi.n	145ec <nordic_transfer+0x78>
   145f4:	688c      	ldr	r4, [r1, #8]
   145f6:	3308      	adds	r3, #8
   145f8:	f803 4c04 	strb.w	r4, [r3, #-4]
   145fc:	688c      	ldr	r4, [r1, #8]
   145fe:	f803 4c03 	strb.w	r4, [r3, #-3]
   14602:	688c      	ldr	r4, [r1, #8]
   14604:	f803 4c02 	strb.w	r4, [r3, #-2]
   14608:	6889      	ldr	r1, [r1, #8]
   1460a:	f803 1c01 	strb.w	r1, [r3, #-1]
   1460e:	e01e      	b.n	1464e <nordic_transfer+0xda>
   14610:	2a03      	cmp	r2, #3
   14612:	dd1e      	ble.n	14652 <nordic_transfer+0xde>
   14614:	60a5      	str	r5, [r4, #8]
   14616:	f991 5001 	ldrsb.w	r5, [r1, #1]
   1461a:	3a04      	subs	r2, #4
   1461c:	60a5      	str	r5, [r4, #8]
   1461e:	f991 5002 	ldrsb.w	r5, [r1, #2]
   14622:	60a5      	str	r5, [r4, #8]
   14624:	1d0d      	adds	r5, r1, #4
   14626:	f991 1003 	ldrsb.w	r1, [r1, #3]
   1462a:	60a1      	str	r1, [r4, #8]
   1462c:	4919      	ldr	r1, [pc, #100]	; (14694 <nordic_transfer+0x120>)
   1462e:	68cc      	ldr	r4, [r1, #12]
   14630:	06e4      	lsls	r4, r4, #27
   14632:	d4fb      	bmi.n	1462c <nordic_transfer+0xb8>
   14634:	688c      	ldr	r4, [r1, #8]
   14636:	3304      	adds	r3, #4
   14638:	f803 4c04 	strb.w	r4, [r3, #-4]
   1463c:	688c      	ldr	r4, [r1, #8]
   1463e:	f803 4c03 	strb.w	r4, [r3, #-3]
   14642:	688c      	ldr	r4, [r1, #8]
   14644:	f803 4c02 	strb.w	r4, [r3, #-2]
   14648:	6889      	ldr	r1, [r1, #8]
   1464a:	f803 1c01 	strb.w	r1, [r3, #-1]
   1464e:	4629      	mov	r1, r5
   14650:	e7a0      	b.n	14594 <nordic_transfer+0x20>
   14652:	3101      	adds	r1, #1
   14654:	60a5      	str	r5, [r4, #8]
   14656:	3a01      	subs	r2, #1
   14658:	68e5      	ldr	r5, [r4, #12]
   1465a:	06ed      	lsls	r5, r5, #27
   1465c:	d4fc      	bmi.n	14658 <nordic_transfer+0xe4>
   1465e:	4c0d      	ldr	r4, [pc, #52]	; (14694 <nordic_transfer+0x120>)
   14660:	3301      	adds	r3, #1
   14662:	68a4      	ldr	r4, [r4, #8]
   14664:	f803 4c01 	strb.w	r4, [r3, #-1]
   14668:	e794      	b.n	14594 <nordic_transfer+0x20>
   1466a:	4b09      	ldr	r3, [pc, #36]	; (14690 <nordic_transfer+0x11c>)
   1466c:	f44f 3280 	mov.w	r2, #65536	; 0x10000
   14670:	619a      	str	r2, [r3, #24]
   14672:	b240      	sxtb	r0, r0
   14674:	bd30      	pop	{r4, r5, pc}
   14676:	68e5      	ldr	r5, [r4, #12]
   14678:	06ed      	lsls	r5, r5, #27
   1467a:	d4fc      	bmi.n	14676 <nordic_transfer+0x102>
   1467c:	4c05      	ldr	r4, [pc, #20]	; (14694 <nordic_transfer+0x120>)
   1467e:	3301      	adds	r3, #1
   14680:	68a4      	ldr	r4, [r4, #8]
   14682:	4293      	cmp	r3, r2
   14684:	daf1      	bge.n	1466a <nordic_transfer+0xf6>
   14686:	56cd      	ldrsb	r5, [r1, r3]
   14688:	4c02      	ldr	r4, [pc, #8]	; (14694 <nordic_transfer+0x120>)
   1468a:	60a5      	str	r5, [r4, #8]
   1468c:	e7f3      	b.n	14676 <nordic_transfer+0x102>
   1468e:	bf00      	nop
   14690:	2009c000 	.word	0x2009c000
   14694:	40088000 	.word	0x40088000

00014698 <nordic_readRegister>:
nordic_readRegister():
   14698:	b507      	push	{r0, r1, r2, lr}
   1469a:	2300      	movs	r3, #0
   1469c:	a902      	add	r1, sp, #8
   1469e:	2201      	movs	r2, #1
   146a0:	f801 3d01 	strb.w	r3, [r1, #-1]!
   146a4:	f000 001f 	and.w	r0, r0, #31
   146a8:	4613      	mov	r3, r2
   146aa:	f7ff ff63 	bl	14574 <nordic_transfer>
   146ae:	f99d 0007 	ldrsb.w	r0, [sp, #7]
   146b2:	b003      	add	sp, #12
   146b4:	f85d fb04 	ldr.w	pc, [sp], #4

000146b8 <nordic_writeRegister>:
nordic_writeRegister():
   146b8:	b507      	push	{r0, r1, r2, lr}
   146ba:	ab02      	add	r3, sp, #8
   146bc:	f803 1d01 	strb.w	r1, [r3, #-1]!
   146c0:	f000 001f 	and.w	r0, r0, #31
   146c4:	4619      	mov	r1, r3
   146c6:	2201      	movs	r2, #1
   146c8:	2300      	movs	r3, #0
   146ca:	f040 0020 	orr.w	r0, r0, #32
   146ce:	f7ff ff51 	bl	14574 <nordic_transfer>
   146d2:	b003      	add	sp, #12
   146d4:	f85d fb04 	ldr.w	pc, [sp], #4

000146d8 <nordic_is_tx_fifo_empty>:
nordic_is_tx_fifo_empty():
   146d8:	b508      	push	{r3, lr}
   146da:	2017      	movs	r0, #23
   146dc:	f7ff ffdc 	bl	14698 <nordic_readRegister>
   146e0:	f3c0 1000 	ubfx	r0, r0, #4, #1
   146e4:	bd08      	pop	{r3, pc}

000146e6 <nordic_clear_all_intr_flags>:
nordic_clear_all_intr_flags():
   146e6:	2007      	movs	r0, #7
   146e8:	2170      	movs	r1, #112	; 0x70
   146ea:	f7ff bfe5 	b.w	146b8 <nordic_writeRegister>

000146ee <nordic_queue_tx_fifo>:
nordic_queue_tx_fifo():
   146ee:	4603      	mov	r3, r0
   146f0:	460a      	mov	r2, r1
   146f2:	f06f 005f 	mvn.w	r0, #95	; 0x5f
   146f6:	4619      	mov	r1, r3
   146f8:	2300      	movs	r3, #0
   146fa:	f7ff bf3b 	b.w	14574 <nordic_transfer>

000146fe <nordic_standby1_to_tx_mode1>:
nordic_standby1_to_tx_mode1():
   146fe:	b508      	push	{r3, lr}
   14700:	2000      	movs	r0, #0
   14702:	f7ff ffc9 	bl	14698 <nordic_readRegister>
   14706:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
   1470a:	f020 0101 	bic.w	r1, r0, #1
   1470e:	b249      	sxtb	r1, r1
   14710:	2000      	movs	r0, #0
   14712:	f7ff bfd1 	b.w	146b8 <nordic_writeRegister>
	...

00014718 <nordic_rx_to_Stanby1>:
nordic_rx_to_Stanby1():
   14718:	4b02      	ldr	r3, [pc, #8]	; (14724 <nordic_rx_to_Stanby1+0xc>)
   1471a:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
   1471e:	61da      	str	r2, [r3, #28]
   14720:	4770      	bx	lr
   14722:	bf00      	nop
   14724:	2009c020 	.word	0x2009c020

00014728 <nordic_standby1_to_rx>:
nordic_standby1_to_rx():
   14728:	b508      	push	{r3, lr}
   1472a:	2000      	movs	r0, #0
   1472c:	f7ff ffb4 	bl	14698 <nordic_readRegister>
   14730:	f040 0101 	orr.w	r1, r0, #1
   14734:	b249      	sxtb	r1, r1
   14736:	2000      	movs	r0, #0
   14738:	f7ff ffbe 	bl	146b8 <nordic_writeRegister>
   1473c:	4b02      	ldr	r3, [pc, #8]	; (14748 <nordic_standby1_to_rx+0x20>)
   1473e:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
   14742:	619a      	str	r2, [r3, #24]
   14744:	bd08      	pop	{r3, pc}
   14746:	bf00      	nop
   14748:	2009c020 	.word	0x2009c020

0001474c <nordic_clear_packet_sent_flag>:
nordic_clear_packet_sent_flag():
   1474c:	2007      	movs	r0, #7
   1474e:	2120      	movs	r1, #32
   14750:	f7ff bfb2 	b.w	146b8 <nordic_writeRegister>

00014754 <nordic_flush_tx_fifo>:
nordic_flush_tx_fifo():
   14754:	2100      	movs	r1, #0
   14756:	f06f 001e 	mvn.w	r0, #30
   1475a:	460a      	mov	r2, r1
   1475c:	460b      	mov	r3, r1
   1475e:	f7ff bf09 	b.w	14574 <nordic_transfer>
	...

00014764 <nordic_mode1_send_single_packet>:
nordic_mode1_send_single_packet():
   14764:	b537      	push	{r0, r1, r2, r4, r5, lr}
   14766:	460c      	mov	r4, r1
   14768:	4605      	mov	r5, r0
   1476a:	f7ff fff3 	bl	14754 <nordic_flush_tx_fifo>
   1476e:	4621      	mov	r1, r4
   14770:	4628      	mov	r0, r5
   14772:	f7ff ffbc 	bl	146ee <nordic_queue_tx_fifo>
   14776:	4b0d      	ldr	r3, [pc, #52]	; (147ac <nordic_mode1_send_single_packet+0x48>)
   14778:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
   1477c:	619a      	str	r2, [r3, #24]
   1477e:	2200      	movs	r2, #0
   14780:	f8ad 2006 	strh.w	r2, [sp, #6]
   14784:	461c      	mov	r4, r3
   14786:	f8bd 3006 	ldrh.w	r3, [sp, #6]
   1478a:	3301      	adds	r3, #1
   1478c:	b29b      	uxth	r3, r3
   1478e:	f8ad 3006 	strh.w	r3, [sp, #6]
   14792:	b933      	cbnz	r3, 147a2 <nordic_mode1_send_single_packet+0x3e>
   14794:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
   14798:	61e3      	str	r3, [r4, #28]
   1479a:	f7ff ffdb 	bl	14754 <nordic_flush_tx_fifo>
   1479e:	b003      	add	sp, #12
   147a0:	bd30      	pop	{r4, r5, pc}
   147a2:	f7ff ff99 	bl	146d8 <nordic_is_tx_fifo_empty>
   147a6:	2800      	cmp	r0, #0
   147a8:	d0ed      	beq.n	14786 <nordic_mode1_send_single_packet+0x22>
   147aa:	e7f3      	b.n	14794 <nordic_mode1_send_single_packet+0x30>
   147ac:	2009c020 	.word	0x2009c020

000147b0 <nordic_is_packet_available>:
nordic_is_packet_available():
   147b0:	b508      	push	{r3, lr}
   147b2:	2017      	movs	r0, #23
   147b4:	f7ff ff70 	bl	14698 <nordic_readRegister>
   147b8:	f000 0001 	and.w	r0, r0, #1
   147bc:	f080 0001 	eor.w	r0, r0, #1
   147c0:	bd08      	pop	{r3, pc}

000147c2 <nordic_clear_packet_available_flag>:
nordic_clear_packet_available_flag():
   147c2:	2007      	movs	r0, #7
   147c4:	2140      	movs	r1, #64	; 0x40
   147c6:	f7ff bf77 	b.w	146b8 <nordic_writeRegister>

000147ca <nordic_read_rx_fifo>:
nordic_read_rx_fifo():
   147ca:	b508      	push	{r3, lr}
   147cc:	4603      	mov	r3, r0
   147ce:	460a      	mov	r2, r1
   147d0:	2061      	movs	r0, #97	; 0x61
   147d2:	4619      	mov	r1, r3
   147d4:	2301      	movs	r3, #1
   147d6:	f7ff fecd 	bl	14574 <nordic_transfer>
   147da:	f3c0 0042 	ubfx	r0, r0, #1, #3
   147de:	bd08      	pop	{r3, pc}

000147e0 <nordic_flush_rx_fifo>:
nordic_flush_rx_fifo():
   147e0:	2100      	movs	r1, #0
   147e2:	f06f 001d 	mvn.w	r0, #29
   147e6:	460a      	mov	r2, r1
   147e8:	460b      	mov	r3, r1
   147ea:	f7ff bec3 	b.w	14574 <nordic_transfer>

000147ee <nordic_set_intr_signals>:
nordic_set_intr_signals():
   147ee:	b570      	push	{r4, r5, r6, lr}
   147f0:	4604      	mov	r4, r0
   147f2:	2000      	movs	r0, #0
   147f4:	460d      	mov	r5, r1
   147f6:	4616      	mov	r6, r2
   147f8:	f7ff ff4e 	bl	14698 <nordic_readRegister>
   147fc:	b114      	cbz	r4, 14804 <nordic_set_intr_signals+0x16>
   147fe:	f000 00bf 	and.w	r0, r0, #191	; 0xbf
   14802:	e002      	b.n	1480a <nordic_set_intr_signals+0x1c>
   14804:	f040 0040 	orr.w	r0, r0, #64	; 0x40
   14808:	b2c0      	uxtb	r0, r0
   1480a:	b115      	cbz	r5, 14812 <nordic_set_intr_signals+0x24>
   1480c:	f000 00df 	and.w	r0, r0, #223	; 0xdf
   14810:	e001      	b.n	14816 <nordic_set_intr_signals+0x28>
   14812:	f040 0020 	orr.w	r0, r0, #32
   14816:	b116      	cbz	r6, 1481e <nordic_set_intr_signals+0x30>
   14818:	f000 01ef 	and.w	r1, r0, #239	; 0xef
   1481c:	e001      	b.n	14822 <nordic_set_intr_signals+0x34>
   1481e:	f040 0110 	orr.w	r1, r0, #16
   14822:	2000      	movs	r0, #0
   14824:	b249      	sxtb	r1, r1
   14826:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
   1482a:	f7ff bf45 	b.w	146b8 <nordic_writeRegister>

0001482e <nordic_set_crc>:
nordic_set_crc():
   1482e:	b510      	push	{r4, lr}
   14830:	4604      	mov	r4, r0
   14832:	2000      	movs	r0, #0
   14834:	f7ff ff30 	bl	14698 <nordic_readRegister>
   14838:	b914      	cbnz	r4, 14840 <nordic_set_crc+0x12>
   1483a:	f000 01f7 	and.w	r1, r0, #247	; 0xf7
   1483e:	e00d      	b.n	1485c <nordic_set_crc+0x2e>
   14840:	2c01      	cmp	r4, #1
   14842:	d104      	bne.n	1484e <nordic_set_crc+0x20>
   14844:	f000 01fb 	and.w	r1, r0, #251	; 0xfb
   14848:	f041 0108 	orr.w	r1, r1, #8
   1484c:	e006      	b.n	1485c <nordic_set_crc+0x2e>
   1484e:	2c02      	cmp	r4, #2
   14850:	bf14      	ite	ne
   14852:	f040 0108 	orrne.w	r1, r0, #8
   14856:	f040 010c 	orreq.w	r1, r0, #12
   1485a:	b2c9      	uxtb	r1, r1
   1485c:	2000      	movs	r0, #0
   1485e:	b249      	sxtb	r1, r1
   14860:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   14864:	f7ff bf28 	b.w	146b8 <nordic_writeRegister>

00014868 <nordic_power_up>:
nordic_power_up():
   14868:	b508      	push	{r3, lr}
   1486a:	2000      	movs	r0, #0
   1486c:	f7ff ff14 	bl	14698 <nordic_readRegister>
   14870:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
   14874:	f040 0102 	orr.w	r1, r0, #2
   14878:	b249      	sxtb	r1, r1
   1487a:	2000      	movs	r0, #0
   1487c:	f7ff bf1c 	b.w	146b8 <nordic_writeRegister>

00014880 <nordic_power_down>:
nordic_power_down():
   14880:	b508      	push	{r3, lr}
   14882:	2000      	movs	r0, #0
   14884:	f7ff ff08 	bl	14698 <nordic_readRegister>
   14888:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
   1488c:	f020 0102 	bic.w	r1, r0, #2
   14890:	b249      	sxtb	r1, r1
   14892:	2000      	movs	r0, #0
   14894:	f7ff bf10 	b.w	146b8 <nordic_writeRegister>

00014898 <nordic_set_channel>:
nordic_set_channel():
   14898:	f640 13dd 	movw	r3, #2525	; 0x9dd
   1489c:	4298      	cmp	r0, r3
   1489e:	d806      	bhi.n	148ae <nordic_set_channel+0x16>
   148a0:	f640 1362 	movw	r3, #2402	; 0x962
   148a4:	f5b0 6f16 	cmp.w	r0, #2400	; 0x960
   148a8:	bf38      	it	cc
   148aa:	4618      	movcc	r0, r3
   148ac:	e000      	b.n	148b0 <nordic_set_channel+0x18>
   148ae:	4618      	mov	r0, r3
   148b0:	f5a0 6116 	sub.w	r1, r0, #2400	; 0x960
   148b4:	b249      	sxtb	r1, r1
   148b6:	2005      	movs	r0, #5
   148b8:	f7ff befe 	b.w	146b8 <nordic_writeRegister>

000148bc <nordic_set_air_data_rate>:
nordic_set_air_data_rate():
   148bc:	b510      	push	{r4, lr}
   148be:	4604      	mov	r4, r0
   148c0:	2006      	movs	r0, #6
   148c2:	f7ff fee9 	bl	14698 <nordic_readRegister>
   148c6:	2cfa      	cmp	r4, #250	; 0xfa
   148c8:	f000 01d7 	and.w	r1, r0, #215	; 0xd7
   148cc:	d102      	bne.n	148d4 <nordic_set_air_data_rate+0x18>
   148ce:	f041 0120 	orr.w	r1, r1, #32
   148d2:	e004      	b.n	148de <nordic_set_air_data_rate+0x22>
   148d4:	f5b4 6ffa 	cmp.w	r4, #2000	; 0x7d0
   148d8:	bf08      	it	eq
   148da:	f041 0108 	orreq.w	r1, r1, #8
   148de:	2006      	movs	r0, #6
   148e0:	b249      	sxtb	r1, r1
   148e2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   148e6:	f7ff bee7 	b.w	146b8 <nordic_writeRegister>

000148ea <nordic_set_power_level>:
nordic_set_power_level():
   148ea:	b510      	push	{r4, lr}
   148ec:	4604      	mov	r4, r0
   148ee:	2006      	movs	r0, #6
   148f0:	f7ff fed2 	bl	14698 <nordic_readRegister>
   148f4:	2c03      	cmp	r4, #3
   148f6:	bf34      	ite	cc
   148f8:	4621      	movcc	r1, r4
   148fa:	2103      	movcs	r1, #3
   148fc:	f000 00f9 	and.w	r0, r0, #249	; 0xf9
   14900:	ea40 0141 	orr.w	r1, r0, r1, lsl #1
   14904:	b249      	sxtb	r1, r1
   14906:	2006      	movs	r0, #6
   14908:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   1490c:	f7ff bed4 	b.w	146b8 <nordic_writeRegister>

00014910 <nordic_set_auto_transmit_options>:
nordic_set_auto_transmit_options():
   14910:	28f9      	cmp	r0, #249	; 0xf9
   14912:	f04f 03fa 	mov.w	r3, #250	; 0xfa
   14916:	d905      	bls.n	14924 <nordic_set_auto_transmit_options+0x14>
   14918:	f5b0 6f7a 	cmp.w	r0, #4000	; 0xfa0
   1491c:	bf88      	it	hi
   1491e:	f44f 607a 	movhi.w	r0, #4000	; 0xfa0
   14922:	e000      	b.n	14926 <nordic_set_auto_transmit_options+0x16>
   14924:	4618      	mov	r0, r3
   14926:	fbb0 f3f3 	udiv	r3, r0, r3
   1492a:	3b01      	subs	r3, #1
   1492c:	b2db      	uxtb	r3, r3
   1492e:	290f      	cmp	r1, #15
   14930:	bf28      	it	cs
   14932:	210f      	movcs	r1, #15
   14934:	ea41 1103 	orr.w	r1, r1, r3, lsl #4
   14938:	2004      	movs	r0, #4
   1493a:	b249      	sxtb	r1, r1
   1493c:	f7ff bebc 	b.w	146b8 <nordic_writeRegister>

00014940 <nordic_set_payload_for_pipe>:
nordic_set_payload_for_pipe():
   14940:	3011      	adds	r0, #17
   14942:	b2c0      	uxtb	r0, r0
   14944:	2816      	cmp	r0, #22
   14946:	d806      	bhi.n	14956 <nordic_set_payload_for_pipe+0x16>
   14948:	2920      	cmp	r1, #32
   1494a:	bf28      	it	cs
   1494c:	2120      	movcs	r1, #32
   1494e:	b240      	sxtb	r0, r0
   14950:	b249      	sxtb	r1, r1
   14952:	f7ff beb1 	b.w	146b8 <nordic_writeRegister>
   14956:	4770      	bx	lr

00014958 <nordic_set_addr_width>:
nordic_set_addr_width():
   14958:	2803      	cmp	r0, #3
   1495a:	d004      	beq.n	14966 <nordic_set_addr_width+0xe>
   1495c:	2804      	cmp	r0, #4
   1495e:	bf0c      	ite	eq
   14960:	2102      	moveq	r1, #2
   14962:	2103      	movne	r1, #3
   14964:	e000      	b.n	14968 <nordic_set_addr_width+0x10>
   14966:	2101      	movs	r1, #1
   14968:	2003      	movs	r0, #3
   1496a:	f7ff bea5 	b.w	146b8 <nordic_writeRegister>

0001496e <nordic_set_tx_address>:
nordic_set_tx_address():
   1496e:	4603      	mov	r3, r0
   14970:	460a      	mov	r2, r1
   14972:	2030      	movs	r0, #48	; 0x30
   14974:	4619      	mov	r1, r3
   14976:	2300      	movs	r3, #0
   14978:	f7ff bdfc 	b.w	14574 <nordic_transfer>

0001497c <nordic_set_rx_pipe0_addr>:
nordic_set_rx_pipe0_addr():
   1497c:	4603      	mov	r3, r0
   1497e:	460a      	mov	r2, r1
   14980:	202a      	movs	r0, #42	; 0x2a
   14982:	4619      	mov	r1, r3
   14984:	2300      	movs	r3, #0
   14986:	f7ff bdf5 	b.w	14574 <nordic_transfer>
	...

0001498c <nordic_init>:
nordic_init():
   1498c:	b573      	push	{r0, r1, r4, r5, r6, lr}
   1498e:	4604      	mov	r4, r0
   14990:	460e      	mov	r6, r1
   14992:	4615      	mov	r5, r2
   14994:	f7ff ff24 	bl	147e0 <nordic_flush_rx_fifo>
   14998:	f7ff fedc 	bl	14754 <nordic_flush_tx_fifo>
   1499c:	4b2b      	ldr	r3, [pc, #172]	; (14a4c <nordic_init+0xc0>)
   1499e:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
   149a2:	61da      	str	r2, [r3, #28]
   149a4:	f7ff ff6c 	bl	14880 <nordic_power_down>
   149a8:	2100      	movs	r1, #0
   149aa:	460a      	mov	r2, r1
   149ac:	2001      	movs	r0, #1
   149ae:	f7ff ff1e 	bl	147ee <nordic_set_intr_signals>
   149b2:	f7ff fe98 	bl	146e6 <nordic_clear_all_intr_flags>
   149b6:	2002      	movs	r0, #2
   149b8:	f7ff ff39 	bl	1482e <nordic_set_crc>
   149bc:	4630      	mov	r0, r6
   149be:	f7ff ff6b 	bl	14898 <nordic_set_channel>
   149c2:	4628      	mov	r0, r5
   149c4:	f7ff ff7a 	bl	148bc <nordic_set_air_data_rate>
   149c8:	2003      	movs	r0, #3
   149ca:	f7ff ff8e 	bl	148ea <nordic_set_power_level>
   149ce:	2002      	movs	r0, #2
   149d0:	2103      	movs	r1, #3
   149d2:	f7ff fe71 	bl	146b8 <nordic_writeRegister>
   149d6:	2001      	movs	r0, #1
   149d8:	2100      	movs	r1, #0
   149da:	f7ff fe6d 	bl	146b8 <nordic_writeRegister>
   149de:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
   149e2:	2103      	movs	r1, #3
   149e4:	f7ff ff94 	bl	14910 <nordic_set_auto_transmit_options>
   149e8:	4621      	mov	r1, r4
   149ea:	2000      	movs	r0, #0
   149ec:	f7ff ffa8 	bl	14940 <nordic_set_payload_for_pipe>
   149f0:	2012      	movs	r0, #18
   149f2:	2100      	movs	r1, #0
   149f4:	f7ff fe60 	bl	146b8 <nordic_writeRegister>
   149f8:	2013      	movs	r0, #19
   149fa:	2100      	movs	r1, #0
   149fc:	f7ff fe5c 	bl	146b8 <nordic_writeRegister>
   14a00:	2014      	movs	r0, #20
   14a02:	2100      	movs	r1, #0
   14a04:	f7ff fe58 	bl	146b8 <nordic_writeRegister>
   14a08:	2015      	movs	r0, #21
   14a0a:	2100      	movs	r1, #0
   14a0c:	f7ff fe54 	bl	146b8 <nordic_writeRegister>
   14a10:	2100      	movs	r1, #0
   14a12:	2016      	movs	r0, #22
   14a14:	f7ff fe50 	bl	146b8 <nordic_writeRegister>
   14a18:	4b0d      	ldr	r3, [pc, #52]	; (14a50 <nordic_init+0xc4>)
   14a1a:	6818      	ldr	r0, [r3, #0]
   14a1c:	791b      	ldrb	r3, [r3, #4]
   14a1e:	9000      	str	r0, [sp, #0]
   14a20:	2005      	movs	r0, #5
   14a22:	f88d 3004 	strb.w	r3, [sp, #4]
   14a26:	f7ff ff97 	bl	14958 <nordic_set_addr_width>
   14a2a:	4668      	mov	r0, sp
   14a2c:	2105      	movs	r1, #5
   14a2e:	f7ff ff9e 	bl	1496e <nordic_set_tx_address>
   14a32:	4668      	mov	r0, sp
   14a34:	2105      	movs	r1, #5
   14a36:	f7ff ffa1 	bl	1497c <nordic_set_rx_pipe0_addr>
   14a3a:	f7ff ff15 	bl	14868 <nordic_power_up>
   14a3e:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
   14a42:	f004 fc0c 	bl	1925e <delay_us>
   14a46:	b002      	add	sp, #8
   14a48:	bd70      	pop	{r4, r5, r6, pc}
   14a4a:	bf00      	nop
   14a4c:	2009c020 	.word	0x2009c020
   14a50:	00025f57 	.word	0x00025f57

00014a54 <nrf_irq_callback>:
nrf_irq_callback():
   14a54:	b507      	push	{r0, r1, r2, lr}
   14a56:	4b09      	ldr	r3, [pc, #36]	; (14a7c <nrf_irq_callback+0x28>)
   14a58:	2100      	movs	r1, #0
   14a5a:	aa02      	add	r2, sp, #8
   14a5c:	6818      	ldr	r0, [r3, #0]
   14a5e:	f842 1d04 	str.w	r1, [r2, #-4]!
   14a62:	460b      	mov	r3, r1
   14a64:	f006 f967 	bl	1ad36 <xQueueGenericSendFromISR>
   14a68:	9b01      	ldr	r3, [sp, #4]
   14a6a:	b11b      	cbz	r3, 14a74 <nrf_irq_callback+0x20>
   14a6c:	4b04      	ldr	r3, [pc, #16]	; (14a80 <nrf_irq_callback+0x2c>)
   14a6e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   14a72:	601a      	str	r2, [r3, #0]
   14a74:	b003      	add	sp, #12
   14a76:	f85d fb04 	ldr.w	pc, [sp], #4
   14a7a:	bf00      	nop
   14a7c:	2007c8b8 	.word	0x2007c8b8
   14a80:	e000ed04 	.word	0xe000ed04

00014a84 <nrf_driver_init>:
nrf_driver_init():
   14a84:	b570      	push	{r4, r5, r6, lr}
   14a86:	4e17      	ldr	r6, [pc, #92]	; (14ae4 <nrf_driver_init+0x60>)
   14a88:	6832      	ldr	r2, [r6, #0]
   14a8a:	b922      	cbnz	r2, 14a96 <nrf_driver_init+0x12>
   14a8c:	2003      	movs	r0, #3
   14a8e:	2120      	movs	r1, #32
   14a90:	f006 f889 	bl	1aba6 <xQueueGenericCreate>
   14a94:	6030      	str	r0, [r6, #0]
   14a96:	4d14      	ldr	r5, [pc, #80]	; (14ae8 <nrf_driver_init+0x64>)
   14a98:	682a      	ldr	r2, [r5, #0]
   14a9a:	b922      	cbnz	r2, 14aa6 <nrf_driver_init+0x22>
   14a9c:	2001      	movs	r0, #1
   14a9e:	2120      	movs	r1, #32
   14aa0:	f006 f881 	bl	1aba6 <xQueueGenericCreate>
   14aa4:	6028      	str	r0, [r5, #0]
   14aa6:	4c11      	ldr	r4, [pc, #68]	; (14aec <nrf_driver_init+0x68>)
   14aa8:	6821      	ldr	r1, [r4, #0]
   14aaa:	b921      	cbnz	r1, 14ab6 <nrf_driver_init+0x32>
   14aac:	2001      	movs	r0, #1
   14aae:	2203      	movs	r2, #3
   14ab0:	f006 f879 	bl	1aba6 <xQueueGenericCreate>
   14ab4:	6020      	str	r0, [r4, #0]
   14ab6:	2020      	movs	r0, #32
   14ab8:	f640 11c3 	movw	r1, #2499	; 0x9c3
   14abc:	f44f 62fa 	mov.w	r2, #2000	; 0x7d0
   14ac0:	f7ff ff64 	bl	1498c <nordic_init>
   14ac4:	f7ff fe30 	bl	14728 <nordic_standby1_to_rx>
   14ac8:	2016      	movs	r0, #22
   14aca:	2101      	movs	r1, #1
   14acc:	4a08      	ldr	r2, [pc, #32]	; (14af0 <nrf_driver_init+0x6c>)
   14ace:	f004 ff99 	bl	19a04 <eint3_enable_port0>
   14ad2:	6830      	ldr	r0, [r6, #0]
   14ad4:	b128      	cbz	r0, 14ae2 <nrf_driver_init+0x5e>
   14ad6:	6828      	ldr	r0, [r5, #0]
   14ad8:	b118      	cbz	r0, 14ae2 <nrf_driver_init+0x5e>
   14ada:	6820      	ldr	r0, [r4, #0]
   14adc:	3000      	adds	r0, #0
   14ade:	bf18      	it	ne
   14ae0:	2001      	movne	r0, #1
   14ae2:	bd70      	pop	{r4, r5, r6, pc}
   14ae4:	2007c8b4 	.word	0x2007c8b4
   14ae8:	2007c8b0 	.word	0x2007c8b0
   14aec:	2007c8b8 	.word	0x2007c8b8
   14af0:	00014a55 	.word	0x00014a55

00014af4 <nrf_driver_app_recv>:
nrf_driver_app_recv():
   14af4:	b570      	push	{r4, r5, r6, lr}
   14af6:	7903      	ldrb	r3, [r0, #4]
   14af8:	4606      	mov	r6, r0
   14afa:	099b      	lsrs	r3, r3, #6
   14afc:	2b03      	cmp	r3, #3
   14afe:	bf0c      	ite	eq
   14b00:	4b0d      	ldreq	r3, [pc, #52]	; (14b38 <nrf_driver_app_recv+0x44>)
   14b02:	4b0e      	ldrne	r3, [pc, #56]	; (14b3c <nrf_driver_app_recv+0x48>)
   14b04:	2200      	movs	r2, #0
   14b06:	681d      	ldr	r5, [r3, #0]
   14b08:	b088      	sub	sp, #32
   14b0a:	4628      	mov	r0, r5
   14b0c:	4631      	mov	r1, r6
   14b0e:	4613      	mov	r3, r2
   14b10:	f006 f87a 	bl	1ac08 <xQueueGenericSend>
   14b14:	4604      	mov	r4, r0
   14b16:	b960      	cbnz	r0, 14b32 <nrf_driver_app_recv+0x3e>
   14b18:	4622      	mov	r2, r4
   14b1a:	4623      	mov	r3, r4
   14b1c:	4669      	mov	r1, sp
   14b1e:	4628      	mov	r0, r5
   14b20:	f006 f942 	bl	1ada8 <xQueueGenericReceive>
   14b24:	4622      	mov	r2, r4
   14b26:	4623      	mov	r3, r4
   14b28:	4628      	mov	r0, r5
   14b2a:	4631      	mov	r1, r6
   14b2c:	f006 f86c 	bl	1ac08 <xQueueGenericSend>
   14b30:	4604      	mov	r4, r0
   14b32:	4620      	mov	r0, r4
   14b34:	b008      	add	sp, #32
   14b36:	bd70      	pop	{r4, r5, r6, pc}
   14b38:	2007c8b0 	.word	0x2007c8b0
   14b3c:	2007c8b4 	.word	0x2007c8b4

00014b40 <nrf_driver_send>:
nrf_driver_send():
   14b40:	b538      	push	{r3, r4, r5, lr}
   14b42:	4604      	mov	r4, r0
   14b44:	460d      	mov	r5, r1
   14b46:	f7ff fa01 	bl	13f4c <mesh_get_node_address>
   14b4a:	7823      	ldrb	r3, [r4, #0]
   14b4c:	4283      	cmp	r3, r0
   14b4e:	d00a      	beq.n	14b66 <nrf_driver_send+0x26>
   14b50:	78e3      	ldrb	r3, [r4, #3]
   14b52:	b943      	cbnz	r3, 14b66 <nrf_driver_send+0x26>
   14b54:	f009 ff3c 	bl	1e9d0 <rand>
   14b58:	23bd      	movs	r3, #189	; 0xbd
   14b5a:	f000 0003 	and.w	r0, r0, #3
   14b5e:	fb00 3003 	mla	r0, r0, r3, r3
   14b62:	f004 fb7c 	bl	1925e <delay_us>
   14b66:	f7ff fdd7 	bl	14718 <nordic_rx_to_Stanby1>
   14b6a:	f7ff fdc8 	bl	146fe <nordic_standby1_to_tx_mode1>
   14b6e:	4620      	mov	r0, r4
   14b70:	b2a9      	uxth	r1, r5
   14b72:	f7ff fdf7 	bl	14764 <nordic_mode1_send_single_packet>
   14b76:	f7ff fde9 	bl	1474c <nordic_clear_packet_sent_flag>
   14b7a:	f7ff fdd5 	bl	14728 <nordic_standby1_to_rx>
   14b7e:	f006 fe85 	bl	1b88c <xTaskGetSchedulerState>
   14b82:	2802      	cmp	r0, #2
   14b84:	d106      	bne.n	14b94 <nrf_driver_send+0x54>
   14b86:	4b04      	ldr	r3, [pc, #16]	; (14b98 <nrf_driver_send+0x58>)
   14b88:	2100      	movs	r1, #0
   14b8a:	6818      	ldr	r0, [r3, #0]
   14b8c:	460a      	mov	r2, r1
   14b8e:	460b      	mov	r3, r1
   14b90:	f006 f8d1 	bl	1ad36 <xQueueGenericSendFromISR>
   14b94:	2001      	movs	r0, #1
   14b96:	bd38      	pop	{r3, r4, r5, pc}
   14b98:	2007c8b8 	.word	0x2007c8b8

00014b9c <nrf_driver_receive>:
nrf_driver_receive():
   14b9c:	b538      	push	{r3, r4, r5, lr}
   14b9e:	4604      	mov	r4, r0
   14ba0:	460d      	mov	r5, r1
   14ba2:	f7ff fe05 	bl	147b0 <nordic_is_packet_available>
   14ba6:	b148      	cbz	r0, 14bbc <nrf_driver_receive+0x20>
   14ba8:	b2a9      	uxth	r1, r5
   14baa:	4620      	mov	r0, r4
   14bac:	f7ff fe0d 	bl	147ca <nordic_read_rx_fifo>
   14bb0:	f7ff fdfe 	bl	147b0 <nordic_is_packet_available>
   14bb4:	b908      	cbnz	r0, 14bba <nrf_driver_receive+0x1e>
   14bb6:	f7ff fe04 	bl	147c2 <nordic_clear_packet_available_flag>
   14bba:	2001      	movs	r0, #1
   14bbc:	bd38      	pop	{r3, r4, r5, pc}

00014bbe <wireless_get_queued_pkt>:
wireless_get_queued_pkt():
   14bbe:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   14bc2:	4680      	mov	r8, r0
   14bc4:	460f      	mov	r7, r1
   14bc6:	4616      	mov	r6, r2
   14bc8:	f006 fe60 	bl	1b88c <xTaskGetSchedulerState>
   14bcc:	2802      	cmp	r0, #2
   14bce:	d107      	bne.n	14be0 <wireless_get_queued_pkt+0x22>
   14bd0:	4632      	mov	r2, r6
   14bd2:	4640      	mov	r0, r8
   14bd4:	4639      	mov	r1, r7
   14bd6:	2300      	movs	r3, #0
   14bd8:	f006 f8e6 	bl	1ada8 <xQueueGenericReceive>
   14bdc:	b2c6      	uxtb	r6, r0
   14bde:	e01c      	b.n	14c1a <wireless_get_queued_pkt+0x5c>
   14be0:	f007 f9e2 	bl	1bfa8 <sys_get_uptime_us>
   14be4:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   14be8:	2300      	movs	r3, #0
   14bea:	f008 fcc9 	bl	1d580 <__aeabi_uldivmod>
   14bee:	1984      	adds	r4, r0, r6
   14bf0:	f141 0500 	adc.w	r5, r1, #0
   14bf4:	2200      	movs	r2, #0
   14bf6:	4640      	mov	r0, r8
   14bf8:	4639      	mov	r1, r7
   14bfa:	4613      	mov	r3, r2
   14bfc:	f006 f8d4 	bl	1ada8 <xQueueGenericReceive>
   14c00:	b2c6      	uxtb	r6, r0
   14c02:	b956      	cbnz	r6, 14c1a <wireless_get_queued_pkt+0x5c>
   14c04:	f007 f9d0 	bl	1bfa8 <sys_get_uptime_us>
   14c08:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   14c0c:	2300      	movs	r3, #0
   14c0e:	f008 fcb7 	bl	1d580 <__aeabi_uldivmod>
   14c12:	428d      	cmp	r5, r1
   14c14:	bf08      	it	eq
   14c16:	4284      	cmpeq	r4, r0
   14c18:	d2ec      	bcs.n	14bf4 <wireless_get_queued_pkt+0x36>
   14c1a:	b270      	sxtb	r0, r6
   14c1c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00014c20 <nrf_driver_get_timer>:
nrf_driver_get_timer():
   14c20:	2904      	cmp	r1, #4
   14c22:	b538      	push	{r3, r4, r5, lr}
   14c24:	4605      	mov	r5, r0
   14c26:	d103      	bne.n	14c30 <nrf_driver_get_timer+0x10>
   14c28:	1c04      	adds	r4, r0, #0
   14c2a:	bf18      	it	ne
   14c2c:	2401      	movne	r4, #1
   14c2e:	e000      	b.n	14c32 <nrf_driver_get_timer+0x12>
   14c30:	2400      	movs	r4, #0
   14c32:	f007 f9b9 	bl	1bfa8 <sys_get_uptime_us>
   14c36:	b12c      	cbz	r4, 14c44 <nrf_driver_get_timer+0x24>
   14c38:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   14c3c:	2300      	movs	r3, #0
   14c3e:	f008 fc9f 	bl	1d580 <__aeabi_uldivmod>
   14c42:	6028      	str	r0, [r5, #0]
   14c44:	4620      	mov	r0, r4
   14c46:	bd38      	pop	{r3, r4, r5, pc}

00014c48 <wireless_init>:
wireless_init():
   14c48:	b500      	push	{lr}
   14c4a:	4b0c      	ldr	r3, [pc, #48]	; (14c7c <wireless_init+0x34>)
   14c4c:	b08d      	sub	sp, #52	; 0x34
   14c4e:	9309      	str	r3, [sp, #36]	; 0x24
   14c50:	4b0b      	ldr	r3, [pc, #44]	; (14c80 <wireless_init+0x38>)
   14c52:	4a0c      	ldr	r2, [pc, #48]	; (14c84 <wireless_init+0x3c>)
   14c54:	930b      	str	r3, [sp, #44]	; 0x2c
   14c56:	4b0c      	ldr	r3, [pc, #48]	; (14c88 <wireless_init+0x40>)
   14c58:	930a      	str	r3, [sp, #40]	; 0x28
   14c5a:	ab0c      	add	r3, sp, #48	; 0x30
   14c5c:	f843 2d10 	str.w	r2, [r3, #-16]!
   14c60:	2200      	movs	r2, #0
   14c62:	9204      	str	r2, [sp, #16]
   14c64:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
   14c66:	e88d 000f 	stmia.w	sp, {r0, r1, r2, r3}
   14c6a:	4b08      	ldr	r3, [pc, #32]	; (14c8c <wireless_init+0x44>)
   14c6c:	2101      	movs	r1, #1
   14c6e:	4a08      	ldr	r2, [pc, #32]	; (14c90 <wireless_init+0x48>)
   14c70:	206a      	movs	r0, #106	; 0x6a
   14c72:	f7ff fa1d 	bl	140b0 <mesh_init>
   14c76:	b00d      	add	sp, #52	; 0x34
   14c78:	f85d fb04 	ldr.w	pc, [sp], #4
   14c7c:	00014a85 	.word	0x00014a85
   14c80:	00014b9d 	.word	0x00014b9d
   14c84:	00014c21 	.word	0x00014c21
   14c88:	00014b41 	.word	0x00014b41
   14c8c:	00014af5 	.word	0x00014af5
   14c90:	00025f5c 	.word	0x00025f5c

00014c94 <wireless_get_rx_pkt>:
wireless_get_rx_pkt():
   14c94:	460a      	mov	r2, r1
   14c96:	4903      	ldr	r1, [pc, #12]	; (14ca4 <wireless_get_rx_pkt+0x10>)
   14c98:	4603      	mov	r3, r0
   14c9a:	6808      	ldr	r0, [r1, #0]
   14c9c:	4619      	mov	r1, r3
   14c9e:	f7ff bf8e 	b.w	14bbe <wireless_get_queued_pkt>
   14ca2:	bf00      	nop
   14ca4:	2007c8b4 	.word	0x2007c8b4

00014ca8 <wireless_get_ack_pkt>:
wireless_get_ack_pkt():
   14ca8:	460a      	mov	r2, r1
   14caa:	4903      	ldr	r1, [pc, #12]	; (14cb8 <wireless_get_ack_pkt+0x10>)
   14cac:	4603      	mov	r3, r0
   14cae:	6808      	ldr	r0, [r1, #0]
   14cb0:	4619      	mov	r1, r3
   14cb2:	f7ff bf84 	b.w	14bbe <wireless_get_queued_pkt>
   14cb6:	bf00      	nop
   14cb8:	2007c8b0 	.word	0x2007c8b0

00014cbc <wireless_service>:
wireless_service():
   14cbc:	b508      	push	{r3, lr}
   14cbe:	f006 fde5 	bl	1b88c <xTaskGetSchedulerState>
   14cc2:	4b0f      	ldr	r3, [pc, #60]	; (14d00 <wireless_service+0x44>)
   14cc4:	2802      	cmp	r0, #2
   14cc6:	695b      	ldr	r3, [r3, #20]
   14cc8:	d113      	bne.n	14cf2 <wireless_service+0x36>
   14cca:	025a      	lsls	r2, r3, #9
   14ccc:	d50d      	bpl.n	14cea <wireless_service+0x2e>
   14cce:	f7ff fc1b 	bl	14508 <mesh_get_pnd_pkt_count>
   14cd2:	4b0c      	ldr	r3, [pc, #48]	; (14d04 <wireless_service+0x48>)
   14cd4:	2800      	cmp	r0, #0
   14cd6:	f04f 0100 	mov.w	r1, #0
   14cda:	6818      	ldr	r0, [r3, #0]
   14cdc:	bf0c      	ite	eq
   14cde:	f04f 32ff 	moveq.w	r2, #4294967295
   14ce2:	2201      	movne	r2, #1
   14ce4:	460b      	mov	r3, r1
   14ce6:	f006 f85f 	bl	1ada8 <xQueueGenericReceive>
   14cea:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
   14cee:	f7ff bab3 	b.w	14258 <mesh_service>
   14cf2:	025b      	lsls	r3, r3, #9
   14cf4:	d5f9      	bpl.n	14cea <wireless_service+0x2e>
   14cf6:	f7ff fc07 	bl	14508 <mesh_get_pnd_pkt_count>
   14cfa:	2800      	cmp	r0, #0
   14cfc:	d1f5      	bne.n	14cea <wireless_service+0x2e>
   14cfe:	bd08      	pop	{r3, pc}
   14d00:	2009c000 	.word	0x2009c000
   14d04:	2007c8b8 	.word	0x2007c8b8

00014d08 <i2c2_device::writeReg(unsigned char, unsigned char)>:
_ZN11i2c2_device8writeRegEhh():
   14d08:	b530      	push	{r4, r5, lr}
   14d0a:	4604      	mov	r4, r0
   14d0c:	b24d      	sxtb	r5, r1
   14d0e:	b253      	sxtb	r3, r2
   14d10:	f994 1004 	ldrsb.w	r1, [r4, #4]
   14d14:	462a      	mov	r2, r5
   14d16:	6800      	ldr	r0, [r0, #0]
   14d18:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
   14d1c:	f005 bba6 	b.w	1a46c <I2C_Base::writeReg(char, char, char)>

00014d20 <i2c2_device::get16BitRegister(unsigned char)>:
_ZN11i2c2_device16get16BitRegisterEh():
   14d20:	b51f      	push	{r0, r1, r2, r3, r4, lr}
   14d22:	2200      	movs	r2, #0
   14d24:	ab04      	add	r3, sp, #16
   14d26:	f990 4004 	ldrsb.w	r4, [r0, #4]
   14d2a:	f823 2d04 	strh.w	r2, [r3, #-4]!
   14d2e:	b24a      	sxtb	r2, r1
   14d30:	2102      	movs	r1, #2
   14d32:	9100      	str	r1, [sp, #0]
   14d34:	6800      	ldr	r0, [r0, #0]
   14d36:	4621      	mov	r1, r4
   14d38:	f005 fb83 	bl	1a442 <I2C_Base::readRegisters(char, char, char*, unsigned int)>
   14d3c:	f99d 000c 	ldrsb.w	r0, [sp, #12]
   14d40:	f89d 300d 	ldrb.w	r3, [sp, #13]
   14d44:	b280      	uxth	r0, r0
   14d46:	ea43 2000 	orr.w	r0, r3, r0, lsl #8
   14d4a:	b280      	uxth	r0, r0
   14d4c:	b004      	add	sp, #16
   14d4e:	bd10      	pop	{r4, pc}

00014d50 <Acceleration_Sensor::init()>:
_ZN19Acceleration_Sensor4initEv():
   14d50:	b510      	push	{r4, lr}
   14d52:	212a      	movs	r1, #42	; 0x2a
   14d54:	4604      	mov	r4, r0
   14d56:	2219      	movs	r2, #25
   14d58:	f7ff ffd6 	bl	14d08 <i2c2_device::writeReg(unsigned char, unsigned char)>
   14d5c:	6820      	ldr	r0, [r4, #0]
   14d5e:	f994 1004 	ldrsb.w	r1, [r4, #4]
   14d62:	220d      	movs	r2, #13
   14d64:	f005 fb71 	bl	1a44a <I2C_Base::readReg(char, char)>
   14d68:	f1b0 032a 	subs.w	r3, r0, #42	; 0x2a
   14d6c:	4258      	negs	r0, r3
   14d6e:	4158      	adcs	r0, r3
   14d70:	bd10      	pop	{r4, pc}
	...

00014d74 <IR_Sensor::storeIrCode(unsigned long)>:
_ZN9IR_Sensor11storeIrCodeEm():
   14d74:	4a04      	ldr	r2, [pc, #16]	; (14d88 <IR_Sensor::storeIrCode(unsigned long)+0x14>)
   14d76:	8813      	ldrh	r3, [r2, #0]
   14d78:	2b1f      	cmp	r3, #31
   14d7a:	d804      	bhi.n	14d86 <IR_Sensor::storeIrCode(unsigned long)+0x12>
   14d7c:	1c58      	adds	r0, r3, #1
   14d7e:	8010      	strh	r0, [r2, #0]
   14d80:	4a02      	ldr	r2, [pc, #8]	; (14d8c <IR_Sensor::storeIrCode(unsigned long)+0x18>)
   14d82:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
   14d86:	4770      	bx	lr
   14d88:	2007c8c0 	.word	0x2007c8c0
   14d8c:	2007c8c4 	.word	0x2007c8c4

00014d90 <IR_Sensor::decodeIrCode()>:
_ZN9IR_Sensor12decodeIrCodeEv():
   14d90:	4b16      	ldr	r3, [pc, #88]	; (14dec <IR_Sensor::decodeIrCode()+0x5c>)
   14d92:	b5f0      	push	{r4, r5, r6, r7, lr}
   14d94:	8819      	ldrh	r1, [r3, #0]
   14d96:	461e      	mov	r6, r3
   14d98:	2901      	cmp	r1, #1
   14d9a:	d923      	bls.n	14de4 <IR_Sensor::decodeIrCode()+0x54>
   14d9c:	4b14      	ldr	r3, [pc, #80]	; (14df0 <IR_Sensor::decodeIrCode()+0x60>)
   14d9e:	2200      	movs	r2, #0
   14da0:	461c      	mov	r4, r3
   14da2:	1e48      	subs	r0, r1, #1
   14da4:	4282      	cmp	r2, r0
   14da6:	f103 0304 	add.w	r3, r3, #4
   14daa:	da07      	bge.n	14dbc <IR_Sensor::decodeIrCode()+0x2c>
   14dac:	f853 0c04 	ldr.w	r0, [r3, #-4]
   14db0:	681d      	ldr	r5, [r3, #0]
   14db2:	3201      	adds	r2, #1
   14db4:	1a28      	subs	r0, r5, r0
   14db6:	f843 0c04 	str.w	r0, [r3, #-4]
   14dba:	e7f2      	b.n	14da2 <IR_Sensor::decodeIrCode()+0x12>
   14dbc:	6863      	ldr	r3, [r4, #4]
   14dbe:	eb03 0753 	add.w	r7, r3, r3, lsr #1
   14dc2:	2300      	movs	r3, #0
   14dc4:	461a      	mov	r2, r3
   14dc6:	b299      	uxth	r1, r3
   14dc8:	4281      	cmp	r1, r0
   14dca:	da09      	bge.n	14de0 <IR_Sensor::decodeIrCode()+0x50>
   14dcc:	f854 5021 	ldr.w	r5, [r4, r1, lsl #2]
   14dd0:	42bd      	cmp	r5, r7
   14dd2:	d903      	bls.n	14ddc <IR_Sensor::decodeIrCode()+0x4c>
   14dd4:	2501      	movs	r5, #1
   14dd6:	fa05 f101 	lsl.w	r1, r5, r1
   14dda:	430a      	orrs	r2, r1
   14ddc:	3301      	adds	r3, #1
   14dde:	e7f2      	b.n	14dc6 <IR_Sensor::decodeIrCode()+0x36>
   14de0:	4b04      	ldr	r3, [pc, #16]	; (14df4 <IR_Sensor::decodeIrCode()+0x64>)
   14de2:	601a      	str	r2, [r3, #0]
   14de4:	2300      	movs	r3, #0
   14de6:	8033      	strh	r3, [r6, #0]
   14de8:	bdf0      	pop	{r4, r5, r6, r7, pc}
   14dea:	bf00      	nop
   14dec:	2007c8c0 	.word	0x2007c8c0
   14df0:	2007c8c4 	.word	0x2007c8c4
   14df4:	2007c8bc 	.word	0x2007c8bc

00014df8 <IR_Sensor::init()>:
_ZN9IR_Sensor4initEv():
   14df8:	b508      	push	{r3, lr}
   14dfa:	2002      	movs	r0, #2
   14dfc:	2101      	movs	r1, #1
   14dfe:	f007 f86d 	bl	1bedc <lpc_pconp>
   14e02:	4b08      	ldr	r3, [pc, #32]	; (14e24 <IR_Sensor::init()+0x2c>)
   14e04:	2001      	movs	r0, #1
   14e06:	6a9a      	ldr	r2, [r3, #40]	; 0x28
   14e08:	f022 0207 	bic.w	r2, r2, #7
   14e0c:	629a      	str	r2, [r3, #40]	; 0x28
   14e0e:	6a9a      	ldr	r2, [r3, #40]	; 0x28
   14e10:	f042 0206 	orr.w	r2, r2, #6
   14e14:	629a      	str	r2, [r3, #40]	; 0x28
   14e16:	f503 3310 	add.w	r3, r3, #147456	; 0x24000
   14e1a:	68da      	ldr	r2, [r3, #12]
   14e1c:	f042 0230 	orr.w	r2, r2, #48	; 0x30
   14e20:	60da      	str	r2, [r3, #12]
   14e22:	bd08      	pop	{r3, pc}
   14e24:	40008000 	.word	0x40008000

00014e28 <LED_Display::setLeftDigit(char)>:
_ZN11LED_Display12setLeftDigitEc():
   14e28:	b508      	push	{r3, lr}
   14e2a:	4a04      	ldr	r2, [pc, #16]	; (14e3c <LED_Display::setLeftDigit(char)+0x14>)
   14e2c:	b2cb      	uxtb	r3, r1
   14e2e:	7141      	strb	r1, [r0, #5]
   14e30:	5cd2      	ldrb	r2, [r2, r3]
   14e32:	2103      	movs	r1, #3
   14e34:	f7ff ff68 	bl	14d08 <i2c2_device::writeReg(unsigned char, unsigned char)>
   14e38:	bd08      	pop	{r3, pc}
   14e3a:	bf00      	nop
   14e3c:	00025f61 	.word	0x00025f61

00014e40 <LED_Display::setRightDigit(char)>:
_ZN11LED_Display13setRightDigitEc():
   14e40:	b508      	push	{r3, lr}
   14e42:	4a04      	ldr	r2, [pc, #16]	; (14e54 <LED_Display::setRightDigit(char)+0x14>)
   14e44:	b2cb      	uxtb	r3, r1
   14e46:	7181      	strb	r1, [r0, #6]
   14e48:	5cd2      	ldrb	r2, [r2, r3]
   14e4a:	2102      	movs	r1, #2
   14e4c:	f7ff ff5c 	bl	14d08 <i2c2_device::writeReg(unsigned char, unsigned char)>
   14e50:	bd08      	pop	{r3, pc}
   14e52:	bf00      	nop
   14e54:	00025f61 	.word	0x00025f61

00014e58 <LED_Display::init()>:
_ZN11LED_Display4initEv():
   14e58:	b538      	push	{r3, r4, r5, lr}
   14e5a:	4604      	mov	r4, r0
   14e5c:	f994 1004 	ldrsb.w	r1, [r4, #4]
   14e60:	6800      	ldr	r0, [r0, #0]
   14e62:	f005 fb0e 	bl	1a482 <I2C_Base::checkDeviceResponse(char)>
   14e66:	4605      	mov	r5, r0
   14e68:	b188      	cbz	r0, 14e8e <LED_Display::init()+0x36>
   14e6a:	4620      	mov	r0, r4
   14e6c:	2106      	movs	r1, #6
   14e6e:	2200      	movs	r2, #0
   14e70:	f7ff ff4a 	bl	14d08 <i2c2_device::writeReg(unsigned char, unsigned char)>
   14e74:	4620      	mov	r0, r4
   14e76:	2107      	movs	r1, #7
   14e78:	2200      	movs	r2, #0
   14e7a:	f7ff ff45 	bl	14d08 <i2c2_device::writeReg(unsigned char, unsigned char)>
   14e7e:	4620      	mov	r0, r4
   14e80:	212e      	movs	r1, #46	; 0x2e
   14e82:	f7ff ffd1 	bl	14e28 <LED_Display::setLeftDigit(char)>
   14e86:	4620      	mov	r0, r4
   14e88:	212e      	movs	r1, #46	; 0x2e
   14e8a:	f7ff ffd9 	bl	14e40 <LED_Display::setRightDigit(char)>
   14e8e:	4628      	mov	r0, r5
   14e90:	bd38      	pop	{r3, r4, r5, pc}

00014e92 <LED_Display::setNumber(char)>:
_ZN11LED_Display9setNumberEc():
   14e92:	2364      	movs	r3, #100	; 0x64
   14e94:	b570      	push	{r4, r5, r6, lr}
   14e96:	fb91 f4f3 	sdiv	r4, r1, r3
   14e9a:	fb04 1113 	mls	r1, r4, r3, r1
   14e9e:	230a      	movs	r3, #10
   14ea0:	b24c      	sxtb	r4, r1
   14ea2:	fb94 f6f3 	sdiv	r6, r4, r3
   14ea6:	fb03 4316 	mls	r3, r3, r6, r4
   14eaa:	f103 0130 	add.w	r1, r3, #48	; 0x30
   14eae:	b249      	sxtb	r1, r1
   14eb0:	4605      	mov	r5, r0
   14eb2:	f7ff ffc5 	bl	14e40 <LED_Display::setRightDigit(char)>
   14eb6:	2c09      	cmp	r4, #9
   14eb8:	dc02      	bgt.n	14ec0 <LED_Display::setNumber(char)+0x2e>
   14eba:	4628      	mov	r0, r5
   14ebc:	2130      	movs	r1, #48	; 0x30
   14ebe:	e003      	b.n	14ec8 <LED_Display::setNumber(char)+0x36>
   14ec0:	f106 0130 	add.w	r1, r6, #48	; 0x30
   14ec4:	4628      	mov	r0, r5
   14ec6:	b249      	sxtb	r1, r1
   14ec8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
   14ecc:	f7ff bfac 	b.w	14e28 <LED_Display::setLeftDigit(char)>

00014ed0 <LED::init()>:
_ZN3LED4initEv():
   14ed0:	2001      	movs	r0, #1
   14ed2:	4770      	bx	lr

00014ed4 <LED::setAll(char)>:
_ZN3LED6setAllEc():
   14ed4:	4b0e      	ldr	r3, [pc, #56]	; (14f10 <LED::setAll(char)+0x3c>)
   14ed6:	f001 010f 	and.w	r1, r1, #15
   14eda:	f240 1213 	movw	r2, #275	; 0x113
   14ede:	7001      	strb	r1, [r0, #0]
   14ee0:	619a      	str	r2, [r3, #24]
   14ee2:	7802      	ldrb	r2, [r0, #0]
   14ee4:	07d1      	lsls	r1, r2, #31
   14ee6:	bf44      	itt	mi
   14ee8:	2201      	movmi	r2, #1
   14eea:	61da      	strmi	r2, [r3, #28]
   14eec:	7802      	ldrb	r2, [r0, #0]
   14eee:	0792      	lsls	r2, r2, #30
   14ef0:	bf44      	itt	mi
   14ef2:	2202      	movmi	r2, #2
   14ef4:	61da      	strmi	r2, [r3, #28]
   14ef6:	7802      	ldrb	r2, [r0, #0]
   14ef8:	0751      	lsls	r1, r2, #29
   14efa:	bf44      	itt	mi
   14efc:	2210      	movmi	r2, #16
   14efe:	61da      	strmi	r2, [r3, #28]
   14f00:	7802      	ldrb	r2, [r0, #0]
   14f02:	0712      	lsls	r2, r2, #28
   14f04:	bf44      	itt	mi
   14f06:	f44f 7280 	movmi.w	r2, #256	; 0x100
   14f0a:	61da      	strmi	r2, [r3, #28]
   14f0c:	4770      	bx	lr
   14f0e:	bf00      	nop
   14f10:	2009c020 	.word	0x2009c020

00014f14 <LED::on(int)>:
_ZN3LED2onEi():
   14f14:	2201      	movs	r2, #1
   14f16:	3901      	subs	r1, #1
   14f18:	fa02 f101 	lsl.w	r1, r2, r1
   14f1c:	7802      	ldrb	r2, [r0, #0]
   14f1e:	4311      	orrs	r1, r2
   14f20:	b2c9      	uxtb	r1, r1
   14f22:	7001      	strb	r1, [r0, #0]
   14f24:	b249      	sxtb	r1, r1
   14f26:	f7ff bfd5 	b.w	14ed4 <LED::setAll(char)>

00014f2a <LED::off(int)>:
_ZN3LED3offEi():
   14f2a:	2201      	movs	r2, #1
   14f2c:	3901      	subs	r1, #1
   14f2e:	fa02 f101 	lsl.w	r1, r2, r1
   14f32:	7802      	ldrb	r2, [r0, #0]
   14f34:	ea22 0101 	bic.w	r1, r2, r1
   14f38:	7001      	strb	r1, [r0, #0]
   14f3a:	b249      	sxtb	r1, r1
   14f3c:	f7ff bfca 	b.w	14ed4 <LED::setAll(char)>

00014f40 <LED::set(int, bool)>:
_ZN3LED3setEib():
   14f40:	b10a      	cbz	r2, 14f46 <LED::set(int, bool)+0x6>
   14f42:	f7ff bfe7 	b.w	14f14 <LED::on(int)>
   14f46:	f7ff bff0 	b.w	14f2a <LED::off(int)>

00014f4a <LED::getValues() const>:
_ZNK3LED9getValuesEv():
   14f4a:	7800      	ldrb	r0, [r0, #0]
   14f4c:	4770      	bx	lr

00014f4e <Light_Sensor::init()>:
_ZN12Light_Sensor4initEv():
   14f4e:	2001      	movs	r0, #1
   14f50:	4770      	bx	lr

00014f52 <Light_Sensor::getRawValue()>:
_ZN12Light_Sensor11getRawValueEv():
   14f52:	2002      	movs	r0, #2
   14f54:	f004 ba14 	b.w	19380 <adc0_get_reading>

00014f58 <Switches::init()>:
_ZN8Switches4initEv():
   14f58:	2001      	movs	r0, #1
   14f5a:	4770      	bx	lr

00014f5c <Switches::getSwitchValues()>:
_ZN8Switches15getSwitchValuesEv():
   14f5c:	4b04      	ldr	r3, [pc, #16]	; (14f70 <Switches::getSwitchValues()+0x14>)
   14f5e:	695b      	ldr	r3, [r3, #20]
   14f60:	f3c3 3081 	ubfx	r0, r3, #14, #2
   14f64:	f3c3 2341 	ubfx	r3, r3, #9, #2
   14f68:	ea43 0080 	orr.w	r0, r3, r0, lsl #2
   14f6c:	4770      	bx	lr
   14f6e:	bf00      	nop
   14f70:	2009c020 	.word	0x2009c020

00014f74 <I2C_Temp::init()>:
_ZN8I2C_Temp4initEv():
   14f74:	b510      	push	{r4, lr}
   14f76:	2101      	movs	r1, #1
   14f78:	4604      	mov	r4, r0
   14f7a:	2281      	movs	r2, #129	; 0x81
   14f7c:	f7ff fec4 	bl	14d08 <i2c2_device::writeReg(unsigned char, unsigned char)>
   14f80:	6820      	ldr	r0, [r4, #0]
   14f82:	f994 1004 	ldrsb.w	r1, [r4, #4]
   14f86:	2201      	movs	r2, #1
   14f88:	f005 fa5f 	bl	1a44a <I2C_Base::readReg(char, char)>
   14f8c:	f010 0f60 	tst.w	r0, #96	; 0x60
   14f90:	bf0c      	ite	eq
   14f92:	2000      	moveq	r0, #0
   14f94:	2001      	movne	r0, #1
   14f96:	bd10      	pop	{r4, pc}

00014f98 <I2C_Temp::getCelsius()>:
_ZN8I2C_Temp10getCelsiusEv():
   14f98:	b538      	push	{r3, r4, r5, lr}
   14f9a:	2100      	movs	r1, #0
   14f9c:	4604      	mov	r4, r0
   14f9e:	f7ff febf 	bl	14d20 <i2c2_device::get16BitRegister(unsigned char)>
   14fa2:	2281      	movs	r2, #129	; 0x81
   14fa4:	b285      	uxth	r5, r0
   14fa6:	2101      	movs	r1, #1
   14fa8:	4620      	mov	r0, r4
   14faa:	f7ff fead 	bl	14d08 <i2c2_device::writeReg(unsigned char, unsigned char)>
   14fae:	2310      	movs	r3, #16
   14fb0:	b228      	sxth	r0, r5
   14fb2:	fb90 f0f3 	sdiv	r0, r0, r3
   14fb6:	f008 f883 	bl	1d0c0 <__aeabi_i2f>
   14fba:	f04f 5176 	mov.w	r1, #1031798784	; 0x3d800000
   14fbe:	f008 f8d3 	bl	1d168 <__aeabi_fmul>
   14fc2:	68a1      	ldr	r1, [r4, #8]
   14fc4:	f007 ffc8 	bl	1cf58 <__addsf3>
   14fc8:	bd38      	pop	{r3, r4, r5, pc}
	...

00014fcc <I2C_Temp::getFarenheit()>:
_ZN8I2C_Temp12getFarenheitEv():
   14fcc:	b508      	push	{r3, lr}
   14fce:	f7ff ffe3 	bl	14f98 <I2C_Temp::getCelsius()>
   14fd2:	4905      	ldr	r1, [pc, #20]	; (14fe8 <I2C_Temp::getFarenheit()+0x1c>)
   14fd4:	f008 f8c8 	bl	1d168 <__aeabi_fmul>
   14fd8:	4904      	ldr	r1, [pc, #16]	; (14fec <I2C_Temp::getFarenheit()+0x20>)
   14fda:	f008 f979 	bl	1d2d0 <__aeabi_fdiv>
   14fde:	f04f 4184 	mov.w	r1, #1107296256	; 0x42000000
   14fe2:	f007 ffb9 	bl	1cf58 <__addsf3>
   14fe6:	bd08      	pop	{r3, pc}
   14fe8:	41100000 	.word	0x41100000
   14fec:	40a00000 	.word	0x40a00000

00014ff0 <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)>:
_ZN7Storage4copyEPKcS1_PjS2_S2_():
   14ff0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14ff4:	4605      	mov	r5, r0
   14ff6:	f2ad 6d54 	subw	sp, sp, #1620	; 0x654
   14ffa:	460c      	mov	r4, r1
   14ffc:	4617      	mov	r7, r2
   14ffe:	a882      	add	r0, sp, #520	; 0x208
   15000:	4629      	mov	r1, r5
   15002:	2201      	movs	r2, #1
   15004:	469b      	mov	fp, r3
   15006:	f002 f847 	bl	17098 <f_open>
   1500a:	2800      	cmp	r0, #0
   1500c:	d16a      	bne.n	150e4 <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)+0xf4>
   1500e:	4621      	mov	r1, r4
   15010:	f20d 402c 	addw	r0, sp, #1068	; 0x42c
   15014:	220a      	movs	r2, #10
   15016:	f002 f83f 	bl	17098 <f_open>
   1501a:	4604      	mov	r4, r0
   1501c:	b120      	cbz	r0, 15028 <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)+0x38>
   1501e:	a882      	add	r0, sp, #520	; 0x208
   15020:	f002 faae 	bl	17580 <f_close>
   15024:	4620      	mov	r0, r4
   15026:	e05d      	b.n	150e4 <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)+0xf4>
   15028:	9000      	str	r0, [sp, #0]
   1502a:	9001      	str	r0, [sp, #4]
   1502c:	4682      	mov	sl, r0
   1502e:	4604      	mov	r4, r0
   15030:	4606      	mov	r6, r0
   15032:	f006 ffb9 	bl	1bfa8 <sys_get_uptime_us>
   15036:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   1503a:	2300      	movs	r3, #0
   1503c:	f008 faa0 	bl	1d580 <__aeabi_uldivmod>
   15040:	a902      	add	r1, sp, #8
   15042:	4680      	mov	r8, r0
   15044:	f44f 7200 	mov.w	r2, #512	; 0x200
   15048:	a882      	add	r0, sp, #520	; 0x208
   1504a:	466b      	mov	r3, sp
   1504c:	f002 f8b6 	bl	171bc <f_read>
   15050:	4605      	mov	r5, r0
   15052:	b9f8      	cbnz	r0, 15094 <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)+0xa4>
   15054:	9b00      	ldr	r3, [sp, #0]
   15056:	b1eb      	cbz	r3, 15094 <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)+0xa4>
   15058:	f006 ffa6 	bl	1bfa8 <sys_get_uptime_us>
   1505c:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   15060:	2300      	movs	r3, #0
   15062:	f008 fa8d 	bl	1d580 <__aeabi_uldivmod>
   15066:	ebb6 0808 	subs.w	r8, r6, r8
   1506a:	eb66 0906 	sbc.w	r9, r6, r6
   1506e:	eb00 0608 	add.w	r6, r0, r8
   15072:	f006 ff99 	bl	1bfa8 <sys_get_uptime_us>
   15076:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   1507a:	2300      	movs	r3, #0
   1507c:	f008 fa80 	bl	1d580 <__aeabi_uldivmod>
   15080:	a902      	add	r1, sp, #8
   15082:	4680      	mov	r8, r0
   15084:	9a00      	ldr	r2, [sp, #0]
   15086:	f20d 402c 	addw	r0, sp, #1068	; 0x42c
   1508a:	ab01      	add	r3, sp, #4
   1508c:	f002 f954 	bl	17338 <f_write>
   15090:	4605      	mov	r5, r0
   15092:	b1a0      	cbz	r0, 150be <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)+0xce>
   15094:	b107      	cbz	r7, 15098 <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)+0xa8>
   15096:	603e      	str	r6, [r7, #0]
   15098:	f1bb 0f00 	cmp.w	fp, #0
   1509c:	d001      	beq.n	150a2 <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)+0xb2>
   1509e:	f8cb 4000 	str.w	r4, [fp]
   150a2:	f8dd 3678 	ldr.w	r3, [sp, #1656]	; 0x678
   150a6:	b10b      	cbz	r3, 150ac <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)+0xbc>
   150a8:	f8c3 a000 	str.w	sl, [r3]
   150ac:	a882      	add	r0, sp, #520	; 0x208
   150ae:	f002 fa67 	bl	17580 <f_close>
   150b2:	f20d 402c 	addw	r0, sp, #1068	; 0x42c
   150b6:	f002 fa63 	bl	17580 <f_close>
   150ba:	4628      	mov	r0, r5
   150bc:	e012      	b.n	150e4 <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)+0xf4>
   150be:	9a01      	ldr	r2, [sp, #4]
   150c0:	9b00      	ldr	r3, [sp, #0]
   150c2:	429a      	cmp	r2, r3
   150c4:	d1e6      	bne.n	15094 <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)+0xa4>
   150c6:	f006 ff6f 	bl	1bfa8 <sys_get_uptime_us>
   150ca:	2300      	movs	r3, #0
   150cc:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   150d0:	f008 fa56 	bl	1d580 <__aeabi_uldivmod>
   150d4:	9b00      	ldr	r3, [sp, #0]
   150d6:	ebb4 0408 	subs.w	r4, r4, r8
   150da:	eb64 0504 	sbc.w	r5, r4, r4
   150de:	4404      	add	r4, r0
   150e0:	449a      	add	sl, r3
   150e2:	e7a6      	b.n	15032 <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)+0x42>
   150e4:	f20d 6d54 	addw	sp, sp, #1620	; 0x654
   150e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

000150ec <Storage::read(char const*, void*, unsigned int, unsigned int)>:
_ZN7Storage4readEPKcPvjj():
   150ec:	b5f0      	push	{r4, r5, r6, r7, lr}
   150ee:	4604      	mov	r4, r0
   150f0:	f5ad 7d0b 	sub.w	sp, sp, #556	; 0x22c
   150f4:	460f      	mov	r7, r1
   150f6:	4616      	mov	r6, r2
   150f8:	4621      	mov	r1, r4
   150fa:	461d      	mov	r5, r3
   150fc:	a801      	add	r0, sp, #4
   150fe:	2300      	movs	r3, #0
   15100:	2201      	movs	r2, #1
   15102:	9300      	str	r3, [sp, #0]
   15104:	f001 ffc8 	bl	17098 <f_open>
   15108:	4604      	mov	r4, r0
   1510a:	b970      	cbnz	r0, 1512a <Storage::read(char const*, void*, unsigned int, unsigned int)+0x3e>
   1510c:	b11d      	cbz	r5, 15116 <Storage::read(char const*, void*, unsigned int, unsigned int)+0x2a>
   1510e:	a801      	add	r0, sp, #4
   15110:	4629      	mov	r1, r5
   15112:	f002 fa47 	bl	175a4 <f_lseek>
   15116:	a801      	add	r0, sp, #4
   15118:	4639      	mov	r1, r7
   1511a:	4632      	mov	r2, r6
   1511c:	466b      	mov	r3, sp
   1511e:	f002 f84d 	bl	171bc <f_read>
   15122:	4604      	mov	r4, r0
   15124:	a801      	add	r0, sp, #4
   15126:	f002 fa2b 	bl	17580 <f_close>
   1512a:	4620      	mov	r0, r4
   1512c:	f50d 7d0b 	add.w	sp, sp, #556	; 0x22c
   15130:	bdf0      	pop	{r4, r5, r6, r7, pc}

00015132 <Storage::write(char const*, void*, unsigned int, unsigned int)>:
_ZN7Storage5writeEPKcPvjj():
   15132:	b5f0      	push	{r4, r5, r6, r7, lr}
   15134:	4604      	mov	r4, r0
   15136:	f5ad 7d0b 	sub.w	sp, sp, #556	; 0x22c
   1513a:	460f      	mov	r7, r1
   1513c:	4616      	mov	r6, r2
   1513e:	4621      	mov	r1, r4
   15140:	461d      	mov	r5, r3
   15142:	a801      	add	r0, sp, #4
   15144:	2300      	movs	r3, #0
   15146:	220a      	movs	r2, #10
   15148:	9300      	str	r3, [sp, #0]
   1514a:	f001 ffa5 	bl	17098 <f_open>
   1514e:	4604      	mov	r4, r0
   15150:	b970      	cbnz	r0, 15170 <Storage::write(char const*, void*, unsigned int, unsigned int)+0x3e>
   15152:	b11d      	cbz	r5, 1515c <Storage::write(char const*, void*, unsigned int, unsigned int)+0x2a>
   15154:	a801      	add	r0, sp, #4
   15156:	4629      	mov	r1, r5
   15158:	f002 fa24 	bl	175a4 <f_lseek>
   1515c:	a801      	add	r0, sp, #4
   1515e:	4639      	mov	r1, r7
   15160:	4632      	mov	r2, r6
   15162:	466b      	mov	r3, sp
   15164:	f002 f8e8 	bl	17338 <f_write>
   15168:	4604      	mov	r4, r0
   1516a:	a801      	add	r0, sp, #4
   1516c:	f002 fa08 	bl	17580 <f_close>
   15170:	4620      	mov	r0, r4
   15172:	f50d 7d0b 	add.w	sp, sp, #556	; 0x22c
   15176:	bdf0      	pop	{r4, r5, r6, r7, pc}

00015178 <Storage::append(char const*, void*, unsigned int, unsigned int)>:
_ZN7Storage6appendEPKcPvjj():
   15178:	b5f0      	push	{r4, r5, r6, r7, lr}
   1517a:	4604      	mov	r4, r0
   1517c:	f5ad 7d0b 	sub.w	sp, sp, #556	; 0x22c
   15180:	460f      	mov	r7, r1
   15182:	4616      	mov	r6, r2
   15184:	4621      	mov	r1, r4
   15186:	461d      	mov	r5, r3
   15188:	a801      	add	r0, sp, #4
   1518a:	2300      	movs	r3, #0
   1518c:	2212      	movs	r2, #18
   1518e:	9300      	str	r3, [sp, #0]
   15190:	f001 ff82 	bl	17098 <f_open>
   15194:	4604      	mov	r4, r0
   15196:	b980      	cbnz	r0, 151ba <Storage::append(char const*, void*, unsigned int, unsigned int)+0x42>
   15198:	a801      	add	r0, sp, #4
   1519a:	b10d      	cbz	r5, 151a0 <Storage::append(char const*, void*, unsigned int, unsigned int)+0x28>
   1519c:	4629      	mov	r1, r5
   1519e:	e000      	b.n	151a2 <Storage::append(char const*, void*, unsigned int, unsigned int)+0x2a>
   151a0:	9904      	ldr	r1, [sp, #16]
   151a2:	f002 f9ff 	bl	175a4 <f_lseek>
   151a6:	a801      	add	r0, sp, #4
   151a8:	4639      	mov	r1, r7
   151aa:	4632      	mov	r2, r6
   151ac:	466b      	mov	r3, sp
   151ae:	f002 f8c3 	bl	17338 <f_write>
   151b2:	4604      	mov	r4, r0
   151b4:	a801      	add	r0, sp, #4
   151b6:	f002 f9e3 	bl	17580 <f_close>
   151ba:	4620      	mov	r0, r4
   151bc:	f50d 7d0b 	add.w	sp, sp, #556	; 0x22c
   151c0:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

000151c4 <ff_convert>:
ff_convert():
   151c4:	287f      	cmp	r0, #127	; 0x7f
   151c6:	d916      	bls.n	151f6 <ff_convert+0x32>
   151c8:	b131      	cbz	r1, 151d8 <ff_convert+0x14>
   151ca:	28ff      	cmp	r0, #255	; 0xff
   151cc:	d812      	bhi.n	151f4 <ff_convert+0x30>
   151ce:	4b0a      	ldr	r3, [pc, #40]	; (151f8 <ff_convert+0x34>)
   151d0:	3880      	subs	r0, #128	; 0x80
   151d2:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
   151d6:	4770      	bx	lr
   151d8:	4a07      	ldr	r2, [pc, #28]	; (151f8 <ff_convert+0x34>)
   151da:	b28b      	uxth	r3, r1
   151dc:	f832 2011 	ldrh.w	r2, [r2, r1, lsl #1]
   151e0:	4282      	cmp	r2, r0
   151e2:	d003      	beq.n	151ec <ff_convert+0x28>
   151e4:	3101      	adds	r1, #1
   151e6:	2980      	cmp	r1, #128	; 0x80
   151e8:	d1f6      	bne.n	151d8 <ff_convert+0x14>
   151ea:	460b      	mov	r3, r1
   151ec:	f103 0080 	add.w	r0, r3, #128	; 0x80
   151f0:	b2c0      	uxtb	r0, r0
   151f2:	4770      	bx	lr
   151f4:	2000      	movs	r0, #0
   151f6:	4770      	bx	lr
   151f8:	00025fe2 	.word	0x00025fe2

000151fc <ff_wtoupper>:
ff_wtoupper():
   151fc:	2300      	movs	r3, #0
   151fe:	4a06      	ldr	r2, [pc, #24]	; (15218 <ff_wtoupper+0x1c>)
   15200:	f832 2013 	ldrh.w	r2, [r2, r3, lsl #1]
   15204:	b132      	cbz	r2, 15214 <ff_wtoupper+0x18>
   15206:	4290      	cmp	r0, r2
   15208:	d001      	beq.n	1520e <ff_wtoupper+0x12>
   1520a:	3301      	adds	r3, #1
   1520c:	e7f7      	b.n	151fe <ff_wtoupper+0x2>
   1520e:	4a03      	ldr	r2, [pc, #12]	; (1521c <ff_wtoupper+0x20>)
   15210:	f832 0013 	ldrh.w	r0, [r2, r3, lsl #1]
   15214:	4770      	bx	lr
   15216:	bf00      	nop
   15218:	000260e2 	.word	0x000260e2
   1521c:	000262c2 	.word	0x000262c2

00015220 <ff_cre_syncobj>:
ff_cre_syncobj():
   15220:	b510      	push	{r4, lr}
   15222:	2001      	movs	r0, #1
   15224:	460c      	mov	r4, r1
   15226:	f005 fd60 	bl	1acea <xQueueCreateMutex>
   1522a:	6020      	str	r0, [r4, #0]
   1522c:	3000      	adds	r0, #0
   1522e:	bf18      	it	ne
   15230:	2001      	movne	r0, #1
   15232:	bd10      	pop	{r4, pc}

00015234 <ff_del_syncobj>:
ff_del_syncobj():
   15234:	2001      	movs	r0, #1
   15236:	4770      	bx	lr

00015238 <ff_req_grant>:
ff_req_grant():
   15238:	b510      	push	{r4, lr}
   1523a:	4604      	mov	r4, r0
   1523c:	f006 fb26 	bl	1b88c <xTaskGetSchedulerState>
   15240:	2802      	cmp	r0, #2
   15242:	d10a      	bne.n	1525a <ff_req_grant+0x22>
   15244:	2100      	movs	r1, #0
   15246:	460b      	mov	r3, r1
   15248:	4620      	mov	r0, r4
   1524a:	f04f 32ff 	mov.w	r2, #4294967295
   1524e:	f005 fdab 	bl	1ada8 <xQueueGenericReceive>
   15252:	1e43      	subs	r3, r0, #1
   15254:	4258      	negs	r0, r3
   15256:	4158      	adcs	r0, r3
   15258:	bd10      	pop	{r4, pc}
   1525a:	2001      	movs	r0, #1
   1525c:	bd10      	pop	{r4, pc}

0001525e <ff_rel_grant>:
ff_rel_grant():
   1525e:	b510      	push	{r4, lr}
   15260:	4604      	mov	r4, r0
   15262:	f006 fb13 	bl	1b88c <xTaskGetSchedulerState>
   15266:	2802      	cmp	r0, #2
   15268:	d107      	bne.n	1527a <ff_rel_grant+0x1c>
   1526a:	2100      	movs	r1, #0
   1526c:	4620      	mov	r0, r4
   1526e:	460a      	mov	r2, r1
   15270:	460b      	mov	r3, r1
   15272:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   15276:	f005 bcc7 	b.w	1ac08 <xQueueGenericSend>
   1527a:	bd10      	pop	{r4, pc}

0001527c <disk_initialize>:
disk_initialize():
   1527c:	b510      	push	{r4, lr}
   1527e:	4604      	mov	r4, r0
   15280:	f004 fec2 	bl	1a008 <spi1_lock>
   15284:	b124      	cbz	r4, 15290 <disk_initialize+0x14>
   15286:	2c01      	cmp	r4, #1
   15288:	d106      	bne.n	15298 <disk_initialize+0x1c>
   1528a:	f000 f989 	bl	155a0 <sd_initialize>
   1528e:	e001      	b.n	15294 <disk_initialize+0x18>
   15290:	f000 fd24 	bl	15cdc <flash_initialize>
   15294:	4604      	mov	r4, r0
   15296:	e000      	b.n	1529a <disk_initialize+0x1e>
   15298:	2404      	movs	r4, #4
   1529a:	f004 fecd 	bl	1a038 <spi1_unlock>
   1529e:	4620      	mov	r0, r4
   152a0:	bd10      	pop	{r4, pc}

000152a2 <disk_status>:
disk_status():
   152a2:	b120      	cbz	r0, 152ae <disk_status+0xc>
   152a4:	2801      	cmp	r0, #1
   152a6:	d101      	bne.n	152ac <disk_status+0xa>
   152a8:	f000 ba38 	b.w	1571c <sd_status>
   152ac:	2004      	movs	r0, #4
   152ae:	4770      	bx	lr

000152b0 <disk_read>:
disk_read():
   152b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   152b2:	4604      	mov	r4, r0
   152b4:	460f      	mov	r7, r1
   152b6:	4616      	mov	r6, r2
   152b8:	461d      	mov	r5, r3
   152ba:	f004 fea5 	bl	1a008 <spi1_lock>
   152be:	b13c      	cbz	r4, 152d0 <disk_read+0x20>
   152c0:	2c01      	cmp	r4, #1
   152c2:	d10c      	bne.n	152de <disk_read+0x2e>
   152c4:	4638      	mov	r0, r7
   152c6:	4631      	mov	r1, r6
   152c8:	462a      	mov	r2, r5
   152ca:	f000 fa2f 	bl	1572c <sd_read>
   152ce:	e004      	b.n	152da <disk_read+0x2a>
   152d0:	4638      	mov	r0, r7
   152d2:	4631      	mov	r1, r6
   152d4:	462a      	mov	r2, r5
   152d6:	f000 fd4f 	bl	15d78 <flash_read_sectors>
   152da:	4604      	mov	r4, r0
   152dc:	e000      	b.n	152e0 <disk_read+0x30>
   152de:	2404      	movs	r4, #4
   152e0:	f004 feaa 	bl	1a038 <spi1_unlock>
   152e4:	4620      	mov	r0, r4
   152e6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

000152e8 <disk_write>:
disk_write():
   152e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   152ea:	4604      	mov	r4, r0
   152ec:	460f      	mov	r7, r1
   152ee:	4616      	mov	r6, r2
   152f0:	461d      	mov	r5, r3
   152f2:	f004 fe89 	bl	1a008 <spi1_lock>
   152f6:	b13c      	cbz	r4, 15308 <disk_write+0x20>
   152f8:	2c01      	cmp	r4, #1
   152fa:	d10c      	bne.n	15316 <disk_write+0x2e>
   152fc:	4638      	mov	r0, r7
   152fe:	4631      	mov	r1, r6
   15300:	462a      	mov	r2, r5
   15302:	f000 fa61 	bl	157c8 <sd_write>
   15306:	e004      	b.n	15312 <disk_write+0x2a>
   15308:	4638      	mov	r0, r7
   1530a:	4631      	mov	r1, r6
   1530c:	462a      	mov	r2, r5
   1530e:	f000 fd5b 	bl	15dc8 <flash_write_sectors>
   15312:	4604      	mov	r4, r0
   15314:	e000      	b.n	15318 <disk_write+0x30>
   15316:	2404      	movs	r4, #4
   15318:	f004 fe8e 	bl	1a038 <spi1_unlock>
   1531c:	4620      	mov	r0, r4
   1531e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00015320 <disk_ioctl>:
disk_ioctl():
   15320:	b570      	push	{r4, r5, r6, lr}
   15322:	4604      	mov	r4, r0
   15324:	460e      	mov	r6, r1
   15326:	4615      	mov	r5, r2
   15328:	f004 fe6e 	bl	1a008 <spi1_lock>
   1532c:	b134      	cbz	r4, 1533c <disk_ioctl+0x1c>
   1532e:	2c01      	cmp	r4, #1
   15330:	d10a      	bne.n	15348 <disk_ioctl+0x28>
   15332:	4630      	mov	r0, r6
   15334:	4629      	mov	r1, r5
   15336:	f000 faa3 	bl	15880 <sd_ioctl>
   1533a:	e003      	b.n	15344 <disk_ioctl+0x24>
   1533c:	4630      	mov	r0, r6
   1533e:	4629      	mov	r1, r5
   15340:	f000 fd68 	bl	15e14 <flash_ioctl>
   15344:	4604      	mov	r4, r0
   15346:	e000      	b.n	1534a <disk_ioctl+0x2a>
   15348:	2404      	movs	r4, #4
   1534a:	f004 fe75 	bl	1a038 <spi1_unlock>
   1534e:	4620      	mov	r0, r4
   15350:	bd70      	pop	{r4, r5, r6, pc}

00015352 <sys_get_uptime_ms>:
sys_get_uptime_ms():
   15352:	b508      	push	{r3, lr}
   15354:	f006 fe28 	bl	1bfa8 <sys_get_uptime_us>
   15358:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   1535c:	2300      	movs	r3, #0
   1535e:	f008 f90f 	bl	1d580 <__aeabi_uldivmod>
   15362:	bd08      	pop	{r3, pc}

00015364 <ssp_set_max_clock.constprop.2>:
ssp_set_max_clock.constprop.2():
   15364:	b510      	push	{r4, lr}
   15366:	4604      	mov	r4, r0
   15368:	f006 ff94 	bl	1c294 <sys_get_cpu_clock>
   1536c:	4b07      	ldr	r3, [pc, #28]	; (1538c <ssp_set_max_clock.constprop.2+0x28>)
   1536e:	fbb0 f0f3 	udiv	r0, r0, r3
   15372:	2302      	movs	r3, #2
   15374:	fbb0 f2f3 	udiv	r2, r0, r3
   15378:	4294      	cmp	r4, r2
   1537a:	d302      	bcc.n	15382 <ssp_set_max_clock.constprop.2+0x1e>
   1537c:	4a04      	ldr	r2, [pc, #16]	; (15390 <ssp_set_max_clock.constprop.2+0x2c>)
   1537e:	6113      	str	r3, [r2, #16]
   15380:	bd10      	pop	{r4, pc}
   15382:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
   15386:	d0f9      	beq.n	1537c <ssp_set_max_clock.constprop.2+0x18>
   15388:	3302      	adds	r3, #2
   1538a:	e7f3      	b.n	15374 <ssp_set_max_clock.constprop.2+0x10>
   1538c:	000f4240 	.word	0x000f4240
   15390:	40030000 	.word	0x40030000

00015394 <ssp1_exchange_byte>:
ssp1_exchange_byte():
   15394:	4b04      	ldr	r3, [pc, #16]	; (153a8 <ssp1_exchange_byte+0x14>)
   15396:	6098      	str	r0, [r3, #8]
   15398:	68da      	ldr	r2, [r3, #12]
   1539a:	06d2      	lsls	r2, r2, #27
   1539c:	d4fc      	bmi.n	15398 <ssp1_exchange_byte+0x4>
   1539e:	4b02      	ldr	r3, [pc, #8]	; (153a8 <ssp1_exchange_byte+0x14>)
   153a0:	6898      	ldr	r0, [r3, #8]
   153a2:	b240      	sxtb	r0, r0
   153a4:	4770      	bx	lr
   153a6:	bf00      	nop
   153a8:	40030000 	.word	0x40030000

000153ac <wait_ready>:
wait_ready():
   153ac:	b538      	push	{r3, r4, r5, lr}
   153ae:	f7ff ffd0 	bl	15352 <sys_get_uptime_ms>
   153b2:	f500 75fa 	add.w	r5, r0, #500	; 0x1f4
   153b6:	f04f 30ff 	mov.w	r0, #4294967295
   153ba:	f7ff ffeb 	bl	15394 <ssp1_exchange_byte>
   153be:	f04f 30ff 	mov.w	r0, #4294967295
   153c2:	f7ff ffe7 	bl	15394 <ssp1_exchange_byte>
   153c6:	b2c4      	uxtb	r4, r0
   153c8:	2cff      	cmp	r4, #255	; 0xff
   153ca:	d007      	beq.n	153dc <wait_ready+0x30>
   153cc:	f7ff ffc1 	bl	15352 <sys_get_uptime_ms>
   153d0:	462a      	mov	r2, r5
   153d2:	2300      	movs	r3, #0
   153d4:	4299      	cmp	r1, r3
   153d6:	bf08      	it	eq
   153d8:	4290      	cmpeq	r0, r2
   153da:	d3f0      	bcc.n	153be <wait_ready+0x12>
   153dc:	4620      	mov	r0, r4
   153de:	bd38      	pop	{r3, r4, r5, pc}

000153e0 <power_off>:
power_off():
   153e0:	b538      	push	{r3, r4, r5, lr}
   153e2:	4c06      	ldr	r4, [pc, #24]	; (153fc <power_off+0x1c>)
   153e4:	f04f 7500 	mov.w	r5, #33554432	; 0x2000000
   153e8:	61e5      	str	r5, [r4, #28]
   153ea:	f7ff ffdf 	bl	153ac <wait_ready>
   153ee:	4b04      	ldr	r3, [pc, #16]	; (15400 <power_off+0x20>)
   153f0:	61a5      	str	r5, [r4, #24]
   153f2:	781a      	ldrb	r2, [r3, #0]
   153f4:	f042 0201 	orr.w	r2, r2, #1
   153f8:	701a      	strb	r2, [r3, #0]
   153fa:	bd38      	pop	{r3, r4, r5, pc}
   153fc:	2009c020 	.word	0x2009c020
   15400:	2007c016 	.word	0x2007c016

00015404 <rcvr_datablock>:
rcvr_datablock():
   15404:	b570      	push	{r4, r5, r6, lr}
   15406:	4605      	mov	r5, r0
   15408:	460e      	mov	r6, r1
   1540a:	f7ff ffa2 	bl	15352 <sys_get_uptime_ms>
   1540e:	f100 0464 	add.w	r4, r0, #100	; 0x64
   15412:	f04f 30ff 	mov.w	r0, #4294967295
   15416:	f7ff ffbd 	bl	15394 <ssp1_exchange_byte>
   1541a:	b2c0      	uxtb	r0, r0
   1541c:	28ff      	cmp	r0, #255	; 0xff
   1541e:	d109      	bne.n	15434 <rcvr_datablock+0x30>
   15420:	f7ff ff97 	bl	15352 <sys_get_uptime_ms>
   15424:	4622      	mov	r2, r4
   15426:	2300      	movs	r3, #0
   15428:	4299      	cmp	r1, r3
   1542a:	bf08      	it	eq
   1542c:	4290      	cmpeq	r0, r2
   1542e:	d3f0      	bcc.n	15412 <rcvr_datablock+0xe>
   15430:	2000      	movs	r0, #0
   15432:	bd70      	pop	{r4, r5, r6, pc}
   15434:	28fe      	cmp	r0, #254	; 0xfe
   15436:	d1fb      	bne.n	15430 <rcvr_datablock+0x2c>
   15438:	2e10      	cmp	r6, #16
   1543a:	d906      	bls.n	1544a <rcvr_datablock+0x46>
   1543c:	4628      	mov	r0, r5
   1543e:	f44f 7100 	mov.w	r1, #512	; 0x200
   15442:	2200      	movs	r2, #0
   15444:	f004 fd7e 	bl	19f44 <ssp1_dma_transfer_block>
   15448:	e019      	b.n	1547e <rcvr_datablock+0x7a>
   1544a:	462c      	mov	r4, r5
   1544c:	f04f 30ff 	mov.w	r0, #4294967295
   15450:	f7ff ffa0 	bl	15394 <ssp1_exchange_byte>
   15454:	7020      	strb	r0, [r4, #0]
   15456:	f04f 30ff 	mov.w	r0, #4294967295
   1545a:	f7ff ff9b 	bl	15394 <ssp1_exchange_byte>
   1545e:	7060      	strb	r0, [r4, #1]
   15460:	f04f 30ff 	mov.w	r0, #4294967295
   15464:	f7ff ff96 	bl	15394 <ssp1_exchange_byte>
   15468:	70a0      	strb	r0, [r4, #2]
   1546a:	f04f 30ff 	mov.w	r0, #4294967295
   1546e:	f7ff ff91 	bl	15394 <ssp1_exchange_byte>
   15472:	3404      	adds	r4, #4
   15474:	f804 0c01 	strb.w	r0, [r4, #-1]
   15478:	19ab      	adds	r3, r5, r6
   1547a:	42a3      	cmp	r3, r4
   1547c:	d1e6      	bne.n	1544c <rcvr_datablock+0x48>
   1547e:	f04f 30ff 	mov.w	r0, #4294967295
   15482:	f7ff ff87 	bl	15394 <ssp1_exchange_byte>
   15486:	f04f 30ff 	mov.w	r0, #4294967295
   1548a:	f7ff ff83 	bl	15394 <ssp1_exchange_byte>
   1548e:	2001      	movs	r0, #1
   15490:	bd70      	pop	{r4, r5, r6, pc}

00015492 <xmit_datablock>:
xmit_datablock():
   15492:	b538      	push	{r3, r4, r5, lr}
   15494:	4605      	mov	r5, r0
   15496:	460c      	mov	r4, r1
   15498:	f7ff ff88 	bl	153ac <wait_ready>
   1549c:	28ff      	cmp	r0, #255	; 0xff
   1549e:	d11d      	bne.n	154dc <xmit_datablock+0x4a>
   154a0:	b260      	sxtb	r0, r4
   154a2:	f7ff ff77 	bl	15394 <ssp1_exchange_byte>
   154a6:	2cfd      	cmp	r4, #253	; 0xfd
   154a8:	d01a      	beq.n	154e0 <xmit_datablock+0x4e>
   154aa:	f44f 7100 	mov.w	r1, #512	; 0x200
   154ae:	f04f 32ff 	mov.w	r2, #4294967295
   154b2:	4628      	mov	r0, r5
   154b4:	f004 fd46 	bl	19f44 <ssp1_dma_transfer_block>
   154b8:	f04f 30ff 	mov.w	r0, #4294967295
   154bc:	f7ff ff6a 	bl	15394 <ssp1_exchange_byte>
   154c0:	f04f 30ff 	mov.w	r0, #4294967295
   154c4:	f7ff ff66 	bl	15394 <ssp1_exchange_byte>
   154c8:	f04f 30ff 	mov.w	r0, #4294967295
   154cc:	f7ff ff62 	bl	15394 <ssp1_exchange_byte>
   154d0:	f000 001f 	and.w	r0, r0, #31
   154d4:	1f43      	subs	r3, r0, #5
   154d6:	4258      	negs	r0, r3
   154d8:	4158      	adcs	r0, r3
   154da:	bd38      	pop	{r3, r4, r5, pc}
   154dc:	2000      	movs	r0, #0
   154de:	bd38      	pop	{r3, r4, r5, pc}
   154e0:	2001      	movs	r0, #1
   154e2:	bd38      	pop	{r3, r4, r5, pc}

000154e4 <send_cmd>:
send_cmd():
   154e4:	b538      	push	{r3, r4, r5, lr}
   154e6:	0603      	lsls	r3, r0, #24
   154e8:	4604      	mov	r4, r0
   154ea:	460d      	mov	r5, r1
   154ec:	d507      	bpl.n	154fe <send_cmd+0x1a>
   154ee:	2077      	movs	r0, #119	; 0x77
   154f0:	2100      	movs	r1, #0
   154f2:	f7ff fff7 	bl	154e4 <send_cmd>
   154f6:	2801      	cmp	r0, #1
   154f8:	d83c      	bhi.n	15574 <send_cmd+0x90>
   154fa:	f004 047f 	and.w	r4, r4, #127	; 0x7f
   154fe:	4b1e      	ldr	r3, [pc, #120]	; (15578 <send_cmd+0x94>)
   15500:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
   15504:	619a      	str	r2, [r3, #24]
   15506:	61da      	str	r2, [r3, #28]
   15508:	f7ff ff50 	bl	153ac <wait_ready>
   1550c:	28ff      	cmp	r0, #255	; 0xff
   1550e:	d12e      	bne.n	1556e <send_cmd+0x8a>
   15510:	b260      	sxtb	r0, r4
   15512:	f7ff ff3f 	bl	15394 <ssp1_exchange_byte>
   15516:	1628      	asrs	r0, r5, #24
   15518:	f7ff ff3c 	bl	15394 <ssp1_exchange_byte>
   1551c:	f345 4007 	sbfx	r0, r5, #16, #8
   15520:	f7ff ff38 	bl	15394 <ssp1_exchange_byte>
   15524:	f345 2007 	sbfx	r0, r5, #8, #8
   15528:	f7ff ff34 	bl	15394 <ssp1_exchange_byte>
   1552c:	b268      	sxtb	r0, r5
   1552e:	f7ff ff31 	bl	15394 <ssp1_exchange_byte>
   15532:	2c40      	cmp	r4, #64	; 0x40
   15534:	d004      	beq.n	15540 <send_cmd+0x5c>
   15536:	2c48      	cmp	r4, #72	; 0x48
   15538:	bf0c      	ite	eq
   1553a:	2087      	moveq	r0, #135	; 0x87
   1553c:	2001      	movne	r0, #1
   1553e:	e000      	b.n	15542 <send_cmd+0x5e>
   15540:	2095      	movs	r0, #149	; 0x95
   15542:	b240      	sxtb	r0, r0
   15544:	f7ff ff26 	bl	15394 <ssp1_exchange_byte>
   15548:	2c4c      	cmp	r4, #76	; 0x4c
   1554a:	d103      	bne.n	15554 <send_cmd+0x70>
   1554c:	f04f 30ff 	mov.w	r0, #4294967295
   15550:	f7ff ff20 	bl	15394 <ssp1_exchange_byte>
   15554:	240a      	movs	r4, #10
   15556:	f04f 30ff 	mov.w	r0, #4294967295
   1555a:	f7ff ff1b 	bl	15394 <ssp1_exchange_byte>
   1555e:	2800      	cmp	r0, #0
   15560:	b2c3      	uxtb	r3, r0
   15562:	da06      	bge.n	15572 <send_cmd+0x8e>
   15564:	3c01      	subs	r4, #1
   15566:	f014 04ff 	ands.w	r4, r4, #255	; 0xff
   1556a:	d1f4      	bne.n	15556 <send_cmd+0x72>
   1556c:	e001      	b.n	15572 <send_cmd+0x8e>
   1556e:	20ff      	movs	r0, #255	; 0xff
   15570:	bd38      	pop	{r3, r4, r5, pc}
   15572:	4618      	mov	r0, r3
   15574:	bd38      	pop	{r3, r4, r5, pc}
   15576:	bf00      	nop
   15578:	2009c020 	.word	0x2009c020

0001557c <sd_update_card_status>:
sd_update_card_status():
   1557c:	4a06      	ldr	r2, [pc, #24]	; (15598 <sd_update_card_status+0x1c>)
   1557e:	4907      	ldr	r1, [pc, #28]	; (1559c <sd_update_card_status+0x20>)
   15580:	7813      	ldrb	r3, [r2, #0]
   15582:	6949      	ldr	r1, [r1, #20]
   15584:	b2db      	uxtb	r3, r3
   15586:	0149      	lsls	r1, r1, #5
   15588:	bf54      	ite	pl
   1558a:	f003 03fd 	andpl.w	r3, r3, #253	; 0xfd
   1558e:	f043 0303 	orrmi.w	r3, r3, #3
   15592:	7013      	strb	r3, [r2, #0]
   15594:	4770      	bx	lr
   15596:	bf00      	nop
   15598:	2007c016 	.word	0x2007c016
   1559c:	2009c020 	.word	0x2009c020

000155a0 <sd_initialize>:
sd_initialize():
   155a0:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
   155a4:	f7ff ffea 	bl	1557c <sd_update_card_status>
   155a8:	4b59      	ldr	r3, [pc, #356]	; (15710 <sd_initialize+0x170>)
   155aa:	781a      	ldrb	r2, [r3, #0]
   155ac:	461e      	mov	r6, r3
   155ae:	f012 0f02 	tst.w	r2, #2
   155b2:	d001      	beq.n	155b8 <sd_initialize+0x18>
   155b4:	7818      	ldrb	r0, [r3, #0]
   155b6:	e0a7      	b.n	15708 <sd_initialize+0x168>
   155b8:	2001      	movs	r0, #1
   155ba:	f7ff fed3 	bl	15364 <ssp_set_max_clock.constprop.2>
   155be:	240a      	movs	r4, #10
   155c0:	f04f 30ff 	mov.w	r0, #4294967295
   155c4:	3c01      	subs	r4, #1
   155c6:	f7ff fee5 	bl	15394 <ssp1_exchange_byte>
   155ca:	f014 04ff 	ands.w	r4, r4, #255	; 0xff
   155ce:	d1f7      	bne.n	155c0 <sd_initialize+0x20>
   155d0:	4d50      	ldr	r5, [pc, #320]	; (15714 <sd_initialize+0x174>)
   155d2:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
   155d6:	61eb      	str	r3, [r5, #28]
   155d8:	2040      	movs	r0, #64	; 0x40
   155da:	4621      	mov	r1, r4
   155dc:	f7ff ff82 	bl	154e4 <send_cmd>
   155e0:	2801      	cmp	r0, #1
   155e2:	46a8      	mov	r8, r5
   155e4:	d002      	beq.n	155ec <sd_initialize+0x4c>
   155e6:	f04f 0900 	mov.w	r9, #0
   155ea:	e078      	b.n	156de <sd_initialize+0x13e>
   155ec:	f7ff feb1 	bl	15352 <sys_get_uptime_ms>
   155f0:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
   155f4:	f500 777a 	add.w	r7, r0, #1000	; 0x3e8
   155f8:	2048      	movs	r0, #72	; 0x48
   155fa:	f7ff ff73 	bl	154e4 <send_cmd>
   155fe:	2801      	cmp	r0, #1
   15600:	d143      	bne.n	1568a <sd_initialize+0xea>
   15602:	f04f 30ff 	mov.w	r0, #4294967295
   15606:	f7ff fec5 	bl	15394 <ssp1_exchange_byte>
   1560a:	f10d 0904 	add.w	r9, sp, #4
   1560e:	f809 0004 	strb.w	r0, [r9, r4]
   15612:	3401      	adds	r4, #1
   15614:	2c04      	cmp	r4, #4
   15616:	d1f4      	bne.n	15602 <sd_initialize+0x62>
   15618:	f89d 3006 	ldrb.w	r3, [sp, #6]
   1561c:	2b01      	cmp	r3, #1
   1561e:	d1e2      	bne.n	155e6 <sd_initialize+0x46>
   15620:	f89d 3007 	ldrb.w	r3, [sp, #7]
   15624:	2baa      	cmp	r3, #170	; 0xaa
   15626:	d1de      	bne.n	155e6 <sd_initialize+0x46>
   15628:	f7ff fe93 	bl	15352 <sys_get_uptime_ms>
   1562c:	463c      	mov	r4, r7
   1562e:	2500      	movs	r5, #0
   15630:	42a9      	cmp	r1, r5
   15632:	bf08      	it	eq
   15634:	42a0      	cmpeq	r0, r4
   15636:	d306      	bcc.n	15646 <sd_initialize+0xa6>
   15638:	f7ff fe8b 	bl	15352 <sys_get_uptime_ms>
   1563c:	42a9      	cmp	r1, r5
   1563e:	bf08      	it	eq
   15640:	42a0      	cmpeq	r0, r4
   15642:	d2d0      	bcs.n	155e6 <sd_initialize+0x46>
   15644:	e007      	b.n	15656 <sd_initialize+0xb6>
   15646:	20e9      	movs	r0, #233	; 0xe9
   15648:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
   1564c:	f7ff ff4a 	bl	154e4 <send_cmd>
   15650:	2800      	cmp	r0, #0
   15652:	d1e9      	bne.n	15628 <sd_initialize+0x88>
   15654:	e7f0      	b.n	15638 <sd_initialize+0x98>
   15656:	207a      	movs	r0, #122	; 0x7a
   15658:	2100      	movs	r1, #0
   1565a:	f7ff ff43 	bl	154e4 <send_cmd>
   1565e:	2800      	cmp	r0, #0
   15660:	d1c1      	bne.n	155e6 <sd_initialize+0x46>
   15662:	4604      	mov	r4, r0
   15664:	f04f 30ff 	mov.w	r0, #4294967295
   15668:	f7ff fe94 	bl	15394 <ssp1_exchange_byte>
   1566c:	f809 0004 	strb.w	r0, [r9, r4]
   15670:	3401      	adds	r4, #1
   15672:	2c04      	cmp	r4, #4
   15674:	d1f6      	bne.n	15664 <sd_initialize+0xc4>
   15676:	f89d 3004 	ldrb.w	r3, [sp, #4]
   1567a:	f013 0f40 	tst.w	r3, #64	; 0x40
   1567e:	bf0c      	ite	eq
   15680:	f04f 0904 	moveq.w	r9, #4
   15684:	f04f 090c 	movne.w	r9, #12
   15688:	e029      	b.n	156de <sd_initialize+0x13e>
   1568a:	20e9      	movs	r0, #233	; 0xe9
   1568c:	4621      	mov	r1, r4
   1568e:	f7ff ff29 	bl	154e4 <send_cmd>
   15692:	2801      	cmp	r0, #1
   15694:	bf8c      	ite	hi
   15696:	f04f 0901 	movhi.w	r9, #1
   1569a:	f04f 0902 	movls.w	r9, #2
   1569e:	bf8c      	ite	hi
   156a0:	f04f 0a41 	movhi.w	sl, #65	; 0x41
   156a4:	f04f 0ae9 	movls.w	sl, #233	; 0xe9
   156a8:	f7ff fe53 	bl	15352 <sys_get_uptime_ms>
   156ac:	463c      	mov	r4, r7
   156ae:	2500      	movs	r5, #0
   156b0:	42a9      	cmp	r1, r5
   156b2:	bf08      	it	eq
   156b4:	42a0      	cmpeq	r0, r4
   156b6:	d30b      	bcc.n	156d0 <sd_initialize+0x130>
   156b8:	f7ff fe4b 	bl	15352 <sys_get_uptime_ms>
   156bc:	42a9      	cmp	r1, r5
   156be:	bf08      	it	eq
   156c0:	42a0      	cmpeq	r0, r4
   156c2:	d30c      	bcc.n	156de <sd_initialize+0x13e>
   156c4:	f44f 7100 	mov.w	r1, #512	; 0x200
   156c8:	2050      	movs	r0, #80	; 0x50
   156ca:	f7ff ff0b 	bl	154e4 <send_cmd>
   156ce:	e006      	b.n	156de <sd_initialize+0x13e>
   156d0:	4650      	mov	r0, sl
   156d2:	2100      	movs	r1, #0
   156d4:	f7ff ff06 	bl	154e4 <send_cmd>
   156d8:	2800      	cmp	r0, #0
   156da:	d1e5      	bne.n	156a8 <sd_initialize+0x108>
   156dc:	e7ec      	b.n	156b8 <sd_initialize+0x118>
   156de:	4b0e      	ldr	r3, [pc, #56]	; (15718 <sd_initialize+0x178>)
   156e0:	f883 9000 	strb.w	r9, [r3]
   156e4:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
   156e8:	f8c8 3018 	str.w	r3, [r8, #24]
   156ec:	f1b9 0f00 	cmp.w	r9, #0
   156f0:	d007      	beq.n	15702 <sd_initialize+0x162>
   156f2:	7833      	ldrb	r3, [r6, #0]
   156f4:	2018      	movs	r0, #24
   156f6:	f003 03fe 	and.w	r3, r3, #254	; 0xfe
   156fa:	7033      	strb	r3, [r6, #0]
   156fc:	f7ff fe32 	bl	15364 <ssp_set_max_clock.constprop.2>
   15700:	e001      	b.n	15706 <sd_initialize+0x166>
   15702:	f7ff fe6d 	bl	153e0 <power_off>
   15706:	7830      	ldrb	r0, [r6, #0]
   15708:	b2c0      	uxtb	r0, r0
   1570a:	b002      	add	sp, #8
   1570c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   15710:	2007c016 	.word	0x2007c016
   15714:	2009c020 	.word	0x2009c020
   15718:	2007c944 	.word	0x2007c944

0001571c <sd_status>:
sd_status():
   1571c:	b508      	push	{r3, lr}
   1571e:	f7ff ff2d 	bl	1557c <sd_update_card_status>
   15722:	4b01      	ldr	r3, [pc, #4]	; (15728 <sd_status+0xc>)
   15724:	7818      	ldrb	r0, [r3, #0]
   15726:	bd08      	pop	{r3, pc}
   15728:	2007c016 	.word	0x2007c016

0001572c <sd_read>:
sd_read():
   1572c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1572e:	4614      	mov	r4, r2
   15730:	4605      	mov	r5, r0
   15732:	460e      	mov	r6, r1
   15734:	f7ff ff22 	bl	1557c <sd_update_card_status>
   15738:	2c00      	cmp	r4, #0
   1573a:	d03b      	beq.n	157b4 <sd_read+0x88>
   1573c:	4b1f      	ldr	r3, [pc, #124]	; (157bc <sd_read+0x90>)
   1573e:	781b      	ldrb	r3, [r3, #0]
   15740:	07db      	lsls	r3, r3, #31
   15742:	d439      	bmi.n	157b8 <sd_read+0x8c>
   15744:	4b1e      	ldr	r3, [pc, #120]	; (157c0 <sd_read+0x94>)
   15746:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
   1574a:	61da      	str	r2, [r3, #28]
   1574c:	4a1d      	ldr	r2, [pc, #116]	; (157c4 <sd_read+0x98>)
   1574e:	461f      	mov	r7, r3
   15750:	7812      	ldrb	r2, [r2, #0]
   15752:	f012 0f08 	tst.w	r2, #8
   15756:	bf08      	it	eq
   15758:	0276      	lsleq	r6, r6, #9
   1575a:	2c01      	cmp	r4, #1
   1575c:	d10e      	bne.n	1577c <sd_read+0x50>
   1575e:	2051      	movs	r0, #81	; 0x51
   15760:	4631      	mov	r1, r6
   15762:	f7ff febf 	bl	154e4 <send_cmd>
   15766:	b9f0      	cbnz	r0, 157a6 <sd_read+0x7a>
   15768:	4628      	mov	r0, r5
   1576a:	f44f 7100 	mov.w	r1, #512	; 0x200
   1576e:	f7ff fe49 	bl	15404 <rcvr_datablock>
   15772:	f1d0 0401 	rsbs	r4, r0, #1
   15776:	bf38      	it	cc
   15778:	2400      	movcc	r4, #0
   1577a:	e014      	b.n	157a6 <sd_read+0x7a>
   1577c:	2052      	movs	r0, #82	; 0x52
   1577e:	4631      	mov	r1, r6
   15780:	f7ff feb0 	bl	154e4 <send_cmd>
   15784:	b978      	cbnz	r0, 157a6 <sd_read+0x7a>
   15786:	4628      	mov	r0, r5
   15788:	f44f 7100 	mov.w	r1, #512	; 0x200
   1578c:	f7ff fe3a 	bl	15404 <rcvr_datablock>
   15790:	b128      	cbz	r0, 1579e <sd_read+0x72>
   15792:	3c01      	subs	r4, #1
   15794:	f014 04ff 	ands.w	r4, r4, #255	; 0xff
   15798:	f505 7500 	add.w	r5, r5, #512	; 0x200
   1579c:	d1f3      	bne.n	15786 <sd_read+0x5a>
   1579e:	204c      	movs	r0, #76	; 0x4c
   157a0:	2100      	movs	r1, #0
   157a2:	f7ff fe9f 	bl	154e4 <send_cmd>
   157a6:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
   157aa:	1c20      	adds	r0, r4, #0
   157ac:	61bb      	str	r3, [r7, #24]
   157ae:	bf18      	it	ne
   157b0:	2001      	movne	r0, #1
   157b2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   157b4:	2004      	movs	r0, #4
   157b6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   157b8:	2003      	movs	r0, #3
   157ba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   157bc:	2007c016 	.word	0x2007c016
   157c0:	2009c020 	.word	0x2009c020
   157c4:	2007c944 	.word	0x2007c944

000157c8 <sd_write>:
sd_write():
   157c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   157ca:	4614      	mov	r4, r2
   157cc:	4605      	mov	r5, r0
   157ce:	460e      	mov	r6, r1
   157d0:	f7ff fed4 	bl	1557c <sd_update_card_status>
   157d4:	2c00      	cmp	r4, #0
   157d6:	d046      	beq.n	15866 <sd_write+0x9e>
   157d8:	4b26      	ldr	r3, [pc, #152]	; (15874 <sd_write+0xac>)
   157da:	781a      	ldrb	r2, [r3, #0]
   157dc:	07d2      	lsls	r2, r2, #31
   157de:	d444      	bmi.n	1586a <sd_write+0xa2>
   157e0:	781b      	ldrb	r3, [r3, #0]
   157e2:	075b      	lsls	r3, r3, #29
   157e4:	d443      	bmi.n	1586e <sd_write+0xa6>
   157e6:	4a24      	ldr	r2, [pc, #144]	; (15878 <sd_write+0xb0>)
   157e8:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
   157ec:	61d3      	str	r3, [r2, #28]
   157ee:	4b23      	ldr	r3, [pc, #140]	; (1587c <sd_write+0xb4>)
   157f0:	4617      	mov	r7, r2
   157f2:	781b      	ldrb	r3, [r3, #0]
   157f4:	f013 0f08 	tst.w	r3, #8
   157f8:	bf08      	it	eq
   157fa:	0276      	lsleq	r6, r6, #9
   157fc:	2c01      	cmp	r4, #1
   157fe:	d10d      	bne.n	1581c <sd_write+0x54>
   15800:	2058      	movs	r0, #88	; 0x58
   15802:	4631      	mov	r1, r6
   15804:	f7ff fe6e 	bl	154e4 <send_cmd>
   15808:	bb30      	cbnz	r0, 15858 <sd_write+0x90>
   1580a:	4628      	mov	r0, r5
   1580c:	21fe      	movs	r1, #254	; 0xfe
   1580e:	f7ff fe40 	bl	15492 <xmit_datablock>
   15812:	f1d0 0401 	rsbs	r4, r0, #1
   15816:	bf38      	it	cc
   15818:	2400      	movcc	r4, #0
   1581a:	e01d      	b.n	15858 <sd_write+0x90>
   1581c:	f013 0f06 	tst.w	r3, #6
   15820:	d003      	beq.n	1582a <sd_write+0x62>
   15822:	20d7      	movs	r0, #215	; 0xd7
   15824:	4621      	mov	r1, r4
   15826:	f7ff fe5d 	bl	154e4 <send_cmd>
   1582a:	2059      	movs	r0, #89	; 0x59
   1582c:	4631      	mov	r1, r6
   1582e:	f7ff fe59 	bl	154e4 <send_cmd>
   15832:	b988      	cbnz	r0, 15858 <sd_write+0x90>
   15834:	4628      	mov	r0, r5
   15836:	21fc      	movs	r1, #252	; 0xfc
   15838:	f7ff fe2b 	bl	15492 <xmit_datablock>
   1583c:	b128      	cbz	r0, 1584a <sd_write+0x82>
   1583e:	3c01      	subs	r4, #1
   15840:	f014 04ff 	ands.w	r4, r4, #255	; 0xff
   15844:	f505 7500 	add.w	r5, r5, #512	; 0x200
   15848:	d1f4      	bne.n	15834 <sd_write+0x6c>
   1584a:	2000      	movs	r0, #0
   1584c:	21fd      	movs	r1, #253	; 0xfd
   1584e:	f7ff fe20 	bl	15492 <xmit_datablock>
   15852:	2800      	cmp	r0, #0
   15854:	bf08      	it	eq
   15856:	2401      	moveq	r4, #1
   15858:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
   1585c:	1c20      	adds	r0, r4, #0
   1585e:	61bb      	str	r3, [r7, #24]
   15860:	bf18      	it	ne
   15862:	2001      	movne	r0, #1
   15864:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   15866:	2004      	movs	r0, #4
   15868:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1586a:	2003      	movs	r0, #3
   1586c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1586e:	2002      	movs	r0, #2
   15870:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   15872:	bf00      	nop
   15874:	2007c016 	.word	0x2007c016
   15878:	2009c020 	.word	0x2009c020
   1587c:	2007c944 	.word	0x2007c944

00015880 <sd_ioctl>:
sd_ioctl():
   15880:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   15882:	4605      	mov	r5, r0
   15884:	460c      	mov	r4, r1
   15886:	f7ff fe79 	bl	1557c <sd_update_card_status>
   1588a:	2d05      	cmp	r5, #5
   1588c:	d118      	bne.n	158c0 <sd_ioctl+0x40>
   1588e:	7823      	ldrb	r3, [r4, #0]
   15890:	2b01      	cmp	r3, #1
   15892:	f000 810c 	beq.w	15aae <sd_ioctl+0x22e>
   15896:	d30a      	bcc.n	158ae <sd_ioctl+0x2e>
   15898:	2b02      	cmp	r3, #2
   1589a:	f040 8106 	bne.w	15aaa <sd_ioctl+0x22a>
   1589e:	4b86      	ldr	r3, [pc, #536]	; (15ab8 <sd_ioctl+0x238>)
   158a0:	695b      	ldr	r3, [r3, #20]
   158a2:	f083 6380 	eor.w	r3, r3, #67108864	; 0x4000000
   158a6:	f3c3 6380 	ubfx	r3, r3, #26, #1
   158aa:	7063      	strb	r3, [r4, #1]
   158ac:	e0ff      	b.n	15aae <sd_ioctl+0x22e>
   158ae:	4b82      	ldr	r3, [pc, #520]	; (15ab8 <sd_ioctl+0x238>)
   158b0:	6958      	ldr	r0, [r3, #20]
   158b2:	f010 6480 	ands.w	r4, r0, #67108864	; 0x4000000
   158b6:	f040 80fa 	bne.w	15aae <sd_ioctl+0x22e>
   158ba:	f7ff fd91 	bl	153e0 <power_off>
   158be:	e0f6      	b.n	15aae <sd_ioctl+0x22e>
   158c0:	4b7e      	ldr	r3, [pc, #504]	; (15abc <sd_ioctl+0x23c>)
   158c2:	781b      	ldrb	r3, [r3, #0]
   158c4:	07db      	lsls	r3, r3, #31
   158c6:	f100 80f4 	bmi.w	15ab2 <sd_ioctl+0x232>
   158ca:	2d0e      	cmp	r5, #14
   158cc:	f200 80e5 	bhi.w	15a9a <sd_ioctl+0x21a>
   158d0:	e8df f015 	tbh	[pc, r5, lsl #1]
   158d4:	0019000f 	.word	0x0019000f
   158d8:	00550051 	.word	0x00550051
   158dc:	00e300e3 	.word	0x00e300e3
   158e0:	00e300e3 	.word	0x00e300e3
   158e4:	00e300e3 	.word	0x00e300e3
   158e8:	00b200ae 	.word	0x00b200ae
   158ec:	00be00b4 	.word	0x00be00b4
   158f0:	00cf      	.short	0x00cf
   158f2:	4b71      	ldr	r3, [pc, #452]	; (15ab8 <sd_ioctl+0x238>)
   158f4:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
   158f8:	61da      	str	r2, [r3, #28]
   158fa:	f7ff fd57 	bl	153ac <wait_ready>
   158fe:	38ff      	subs	r0, #255	; 0xff
   15900:	bf18      	it	ne
   15902:	2001      	movne	r0, #1
   15904:	e0cc      	b.n	15aa0 <sd_ioctl+0x220>
   15906:	2049      	movs	r0, #73	; 0x49
   15908:	2100      	movs	r1, #0
   1590a:	f7ff fdeb 	bl	154e4 <send_cmd>
   1590e:	4605      	mov	r5, r0
   15910:	b108      	cbz	r0, 15916 <sd_ioctl+0x96>
   15912:	2001      	movs	r0, #1
   15914:	e0c4      	b.n	15aa0 <sd_ioctl+0x220>
   15916:	4668      	mov	r0, sp
   15918:	2110      	movs	r1, #16
   1591a:	f7ff fd73 	bl	15404 <rcvr_datablock>
   1591e:	2800      	cmp	r0, #0
   15920:	d0f7      	beq.n	15912 <sd_ioctl+0x92>
   15922:	f89d 3000 	ldrb.w	r3, [sp]
   15926:	f89d 2008 	ldrb.w	r2, [sp, #8]
   1592a:	099b      	lsrs	r3, r3, #6
   1592c:	2b01      	cmp	r3, #1
   1592e:	f89d 3009 	ldrb.w	r3, [sp, #9]
   15932:	d106      	bne.n	15942 <sd_ioctl+0xc2>
   15934:	3301      	adds	r3, #1
   15936:	eb03 2202 	add.w	r2, r3, r2, lsl #8
   1593a:	b292      	uxth	r2, r2
   1593c:	0292      	lsls	r2, r2, #10
   1593e:	6022      	str	r2, [r4, #0]
   15940:	e044      	b.n	159cc <sd_ioctl+0x14c>
   15942:	f89d 1007 	ldrb.w	r1, [sp, #7]
   15946:	f89d 000a 	ldrb.w	r0, [sp, #10]
   1594a:	0089      	lsls	r1, r1, #2
   1594c:	eb01 1292 	add.w	r2, r1, r2, lsr #6
   15950:	f89d 1006 	ldrb.w	r1, [sp, #6]
   15954:	3201      	adds	r2, #1
   15956:	f001 0103 	and.w	r1, r1, #3
   1595a:	eb02 2281 	add.w	r2, r2, r1, lsl #10
   1595e:	f89d 1005 	ldrb.w	r1, [sp, #5]
   15962:	f003 0303 	and.w	r3, r3, #3
   15966:	f001 010f 	and.w	r1, r1, #15
   1596a:	eb01 11d0 	add.w	r1, r1, r0, lsr #7
   1596e:	eb01 0343 	add.w	r3, r1, r3, lsl #1
   15972:	3b07      	subs	r3, #7
   15974:	e027      	b.n	159c6 <sd_ioctl+0x146>
   15976:	f44f 7300 	mov.w	r3, #512	; 0x200
   1597a:	8023      	strh	r3, [r4, #0]
   1597c:	e08f      	b.n	15a9e <sd_ioctl+0x21e>
   1597e:	4d50      	ldr	r5, [pc, #320]	; (15ac0 <sd_ioctl+0x240>)
   15980:	782b      	ldrb	r3, [r5, #0]
   15982:	f003 0304 	and.w	r3, r3, #4
   15986:	f003 01ff 	and.w	r1, r3, #255	; 0xff
   1598a:	b30b      	cbz	r3, 159d0 <sd_ioctl+0x150>
   1598c:	20cd      	movs	r0, #205	; 0xcd
   1598e:	2100      	movs	r1, #0
   15990:	f7ff fda8 	bl	154e4 <send_cmd>
   15994:	2800      	cmp	r0, #0
   15996:	d1bc      	bne.n	15912 <sd_ioctl+0x92>
   15998:	f04f 30ff 	mov.w	r0, #4294967295
   1599c:	f7ff fcfa 	bl	15394 <ssp1_exchange_byte>
   159a0:	4668      	mov	r0, sp
   159a2:	2110      	movs	r1, #16
   159a4:	f7ff fd2e 	bl	15404 <rcvr_datablock>
   159a8:	2800      	cmp	r0, #0
   159aa:	d0b2      	beq.n	15912 <sd_ioctl+0x92>
   159ac:	2530      	movs	r5, #48	; 0x30
   159ae:	f04f 30ff 	mov.w	r0, #4294967295
   159b2:	3d01      	subs	r5, #1
   159b4:	f7ff fcee 	bl	15394 <ssp1_exchange_byte>
   159b8:	f015 05ff 	ands.w	r5, r5, #255	; 0xff
   159bc:	d1f7      	bne.n	159ae <sd_ioctl+0x12e>
   159be:	f89d 300a 	ldrb.w	r3, [sp, #10]
   159c2:	2210      	movs	r2, #16
   159c4:	091b      	lsrs	r3, r3, #4
   159c6:	fa02 f303 	lsl.w	r3, r2, r3
   159ca:	6023      	str	r3, [r4, #0]
   159cc:	4628      	mov	r0, r5
   159ce:	e067      	b.n	15aa0 <sd_ioctl+0x220>
   159d0:	2049      	movs	r0, #73	; 0x49
   159d2:	f7ff fd87 	bl	154e4 <send_cmd>
   159d6:	4606      	mov	r6, r0
   159d8:	2800      	cmp	r0, #0
   159da:	d19a      	bne.n	15912 <sd_ioctl+0x92>
   159dc:	4668      	mov	r0, sp
   159de:	2110      	movs	r1, #16
   159e0:	f7ff fd10 	bl	15404 <rcvr_datablock>
   159e4:	2800      	cmp	r0, #0
   159e6:	d094      	beq.n	15912 <sd_ioctl+0x92>
   159e8:	7829      	ldrb	r1, [r5, #0]
   159ea:	f89d 200a 	ldrb.w	r2, [sp, #10]
   159ee:	f001 0102 	and.w	r1, r1, #2
   159f2:	f001 00ff 	and.w	r0, r1, #255	; 0xff
   159f6:	f89d 300b 	ldrb.w	r3, [sp, #11]
   159fa:	b169      	cbz	r1, 15a18 <sd_ioctl+0x198>
   159fc:	f89d 100d 	ldrb.w	r1, [sp, #13]
   15a00:	f002 023f 	and.w	r2, r2, #63	; 0x3f
   15a04:	09db      	lsrs	r3, r3, #7
   15a06:	eb03 0342 	add.w	r3, r3, r2, lsl #1
   15a0a:	0989      	lsrs	r1, r1, #6
   15a0c:	3301      	adds	r3, #1
   15a0e:	3901      	subs	r1, #1
   15a10:	408b      	lsls	r3, r1
   15a12:	4630      	mov	r0, r6
   15a14:	6023      	str	r3, [r4, #0]
   15a16:	e043      	b.n	15aa0 <sd_ioctl+0x220>
   15a18:	f003 0103 	and.w	r1, r3, #3
   15a1c:	095b      	lsrs	r3, r3, #5
   15a1e:	eb03 03c1 	add.w	r3, r3, r1, lsl #3
   15a22:	f3c2 0284 	ubfx	r2, r2, #2, #5
   15a26:	3301      	adds	r3, #1
   15a28:	fb02 3303 	mla	r3, r2, r3, r3
   15a2c:	6023      	str	r3, [r4, #0]
   15a2e:	e037      	b.n	15aa0 <sd_ioctl+0x220>
   15a30:	4b23      	ldr	r3, [pc, #140]	; (15ac0 <sd_ioctl+0x240>)
   15a32:	781b      	ldrb	r3, [r3, #0]
   15a34:	7023      	strb	r3, [r4, #0]
   15a36:	e032      	b.n	15a9e <sd_ioctl+0x21e>
   15a38:	2049      	movs	r0, #73	; 0x49
   15a3a:	e000      	b.n	15a3e <sd_ioctl+0x1be>
   15a3c:	204a      	movs	r0, #74	; 0x4a
   15a3e:	2100      	movs	r1, #0
   15a40:	f7ff fd50 	bl	154e4 <send_cmd>
   15a44:	2800      	cmp	r0, #0
   15a46:	f47f af64 	bne.w	15912 <sd_ioctl+0x92>
   15a4a:	4620      	mov	r0, r4
   15a4c:	2110      	movs	r1, #16
   15a4e:	e01d      	b.n	15a8c <sd_ioctl+0x20c>
   15a50:	207a      	movs	r0, #122	; 0x7a
   15a52:	2100      	movs	r1, #0
   15a54:	f7ff fd46 	bl	154e4 <send_cmd>
   15a58:	2800      	cmp	r0, #0
   15a5a:	f47f af5a 	bne.w	15912 <sd_ioctl+0x92>
   15a5e:	4605      	mov	r5, r0
   15a60:	f04f 30ff 	mov.w	r0, #4294967295
   15a64:	f7ff fc96 	bl	15394 <ssp1_exchange_byte>
   15a68:	5560      	strb	r0, [r4, r5]
   15a6a:	3501      	adds	r5, #1
   15a6c:	2d04      	cmp	r5, #4
   15a6e:	d1f7      	bne.n	15a60 <sd_ioctl+0x1e0>
   15a70:	e015      	b.n	15a9e <sd_ioctl+0x21e>
   15a72:	20cd      	movs	r0, #205	; 0xcd
   15a74:	2100      	movs	r1, #0
   15a76:	f7ff fd35 	bl	154e4 <send_cmd>
   15a7a:	2800      	cmp	r0, #0
   15a7c:	f47f af49 	bne.w	15912 <sd_ioctl+0x92>
   15a80:	f04f 30ff 	mov.w	r0, #4294967295
   15a84:	f7ff fc86 	bl	15394 <ssp1_exchange_byte>
   15a88:	4620      	mov	r0, r4
   15a8a:	2140      	movs	r1, #64	; 0x40
   15a8c:	f7ff fcba 	bl	15404 <rcvr_datablock>
   15a90:	f1d0 0001 	rsbs	r0, r0, #1
   15a94:	bf38      	it	cc
   15a96:	2000      	movcc	r0, #0
   15a98:	e002      	b.n	15aa0 <sd_ioctl+0x220>
   15a9a:	2004      	movs	r0, #4
   15a9c:	e000      	b.n	15aa0 <sd_ioctl+0x220>
   15a9e:	2000      	movs	r0, #0
   15aa0:	4b05      	ldr	r3, [pc, #20]	; (15ab8 <sd_ioctl+0x238>)
   15aa2:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
   15aa6:	619a      	str	r2, [r3, #24]
   15aa8:	e004      	b.n	15ab4 <sd_ioctl+0x234>
   15aaa:	2004      	movs	r0, #4
   15aac:	e002      	b.n	15ab4 <sd_ioctl+0x234>
   15aae:	2000      	movs	r0, #0
   15ab0:	e000      	b.n	15ab4 <sd_ioctl+0x234>
   15ab2:	2003      	movs	r0, #3
   15ab4:	b004      	add	sp, #16
   15ab6:	bd70      	pop	{r4, r5, r6, pc}
   15ab8:	2009c020 	.word	0x2009c020
   15abc:	2007c016 	.word	0x2007c016
   15ac0:	2007c944 	.word	0x2007c944

00015ac4 <flash_get_mem_size_bytes()>:
_ZL24flash_get_mem_size_bytesv():
   15ac4:	4b05      	ldr	r3, [pc, #20]	; (15adc <flash_get_mem_size_bytes()+0x18>)
   15ac6:	781b      	ldrb	r3, [r3, #0]
   15ac8:	3b25      	subs	r3, #37	; 0x25
   15aca:	b2db      	uxtb	r3, r3
   15acc:	2b03      	cmp	r3, #3
   15ace:	bf9a      	itte	ls
   15ad0:	4a03      	ldrls	r2, [pc, #12]	; (15ae0 <flash_get_mem_size_bytes()+0x1c>)
   15ad2:	f852 0023 	ldrls.w	r0, [r2, r3, lsl #2]
   15ad6:	2000      	movhi	r0, #0
   15ad8:	4770      	bx	lr
   15ada:	bf00      	nop
   15adc:	2007c948 	.word	0x2007c948
   15ae0:	000264ac 	.word	0x000264ac

00015ae4 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)>:
_ZL37flash_perform_page_io_of_fatfs_sectorPFvPhmmES_m():
   15ae4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   15ae6:	4b19      	ldr	r3, [pc, #100]	; (15b4c <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)+0x68>)
   15ae8:	4605      	mov	r5, r0
   15aea:	881c      	ldrh	r4, [r3, #0]
   15aec:	460e      	mov	r6, r1
   15aee:	f5b4 7f00 	cmp.w	r4, #512	; 0x200
   15af2:	4617      	mov	r7, r2
   15af4:	d102      	bne.n	15afc <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)+0x18>
   15af6:	4608      	mov	r0, r1
   15af8:	4611      	mov	r1, r2
   15afa:	e00a      	b.n	15b12 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)+0x2e>
   15afc:	f5b4 7f80 	cmp.w	r4, #256	; 0x100
   15b00:	d109      	bne.n	15b16 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)+0x32>
   15b02:	4608      	mov	r0, r1
   15b04:	4611      	mov	r1, r2
   15b06:	4622      	mov	r2, r4
   15b08:	47a8      	blx	r5
   15b0a:	f506 7080 	add.w	r0, r6, #256	; 0x100
   15b0e:	f507 7180 	add.w	r1, r7, #256	; 0x100
   15b12:	4622      	mov	r2, r4
   15b14:	e017      	b.n	15b46 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)+0x62>
   15b16:	f5b4 7f04 	cmp.w	r4, #528	; 0x210
   15b1a:	d105      	bne.n	15b28 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)+0x44>
   15b1c:	0a51      	lsrs	r1, r2, #9
   15b1e:	4630      	mov	r0, r6
   15b20:	0289      	lsls	r1, r1, #10
   15b22:	f44f 7200 	mov.w	r2, #512	; 0x200
   15b26:	e00e      	b.n	15b46 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)+0x62>
   15b28:	f5b4 7f84 	cmp.w	r4, #264	; 0x108
   15b2c:	d10c      	bne.n	15b48 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)+0x64>
   15b2e:	0a17      	lsrs	r7, r2, #8
   15b30:	4608      	mov	r0, r1
   15b32:	f44f 7280 	mov.w	r2, #256	; 0x100
   15b36:	0279      	lsls	r1, r7, #9
   15b38:	47a8      	blx	r5
   15b3a:	1c79      	adds	r1, r7, #1
   15b3c:	f506 7080 	add.w	r0, r6, #256	; 0x100
   15b40:	0249      	lsls	r1, r1, #9
   15b42:	f44f 7280 	mov.w	r2, #256	; 0x100
   15b46:	47a8      	blx	r5
   15b48:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   15b4a:	bf00      	nop
   15b4c:	2007c946 	.word	0x2007c946

00015b50 <ssp1_exchange_data>:
ssp1_exchange_data():
   15b50:	b510      	push	{r4, lr}
   15b52:	4603      	mov	r3, r0
   15b54:	2900      	cmp	r1, #0
   15b56:	dd68      	ble.n	15c2a <ssp1_exchange_data+0xda>
   15b58:	2907      	cmp	r1, #7
   15b5a:	f993 4000 	ldrsb.w	r4, [r3]
   15b5e:	4a33      	ldr	r2, [pc, #204]	; (15c2c <ssp1_exchange_data+0xdc>)
   15b60:	dd36      	ble.n	15bd0 <ssp1_exchange_data+0x80>
   15b62:	6094      	str	r4, [r2, #8]
   15b64:	f993 4001 	ldrsb.w	r4, [r3, #1]
   15b68:	3908      	subs	r1, #8
   15b6a:	6094      	str	r4, [r2, #8]
   15b6c:	f993 4002 	ldrsb.w	r4, [r3, #2]
   15b70:	6094      	str	r4, [r2, #8]
   15b72:	f993 4003 	ldrsb.w	r4, [r3, #3]
   15b76:	6094      	str	r4, [r2, #8]
   15b78:	f993 4004 	ldrsb.w	r4, [r3, #4]
   15b7c:	6094      	str	r4, [r2, #8]
   15b7e:	f993 4005 	ldrsb.w	r4, [r3, #5]
   15b82:	6094      	str	r4, [r2, #8]
   15b84:	f993 4006 	ldrsb.w	r4, [r3, #6]
   15b88:	6094      	str	r4, [r2, #8]
   15b8a:	f103 0408 	add.w	r4, r3, #8
   15b8e:	f993 3007 	ldrsb.w	r3, [r3, #7]
   15b92:	6093      	str	r3, [r2, #8]
   15b94:	4b25      	ldr	r3, [pc, #148]	; (15c2c <ssp1_exchange_data+0xdc>)
   15b96:	699a      	ldr	r2, [r3, #24]
   15b98:	0752      	lsls	r2, r2, #29
   15b9a:	d5fb      	bpl.n	15b94 <ssp1_exchange_data+0x44>
   15b9c:	689a      	ldr	r2, [r3, #8]
   15b9e:	7002      	strb	r2, [r0, #0]
   15ba0:	689a      	ldr	r2, [r3, #8]
   15ba2:	7042      	strb	r2, [r0, #1]
   15ba4:	689a      	ldr	r2, [r3, #8]
   15ba6:	7082      	strb	r2, [r0, #2]
   15ba8:	689b      	ldr	r3, [r3, #8]
   15baa:	70c3      	strb	r3, [r0, #3]
   15bac:	4b1f      	ldr	r3, [pc, #124]	; (15c2c <ssp1_exchange_data+0xdc>)
   15bae:	68da      	ldr	r2, [r3, #12]
   15bb0:	06d2      	lsls	r2, r2, #27
   15bb2:	d4fb      	bmi.n	15bac <ssp1_exchange_data+0x5c>
   15bb4:	689a      	ldr	r2, [r3, #8]
   15bb6:	3008      	adds	r0, #8
   15bb8:	f800 2c04 	strb.w	r2, [r0, #-4]
   15bbc:	689a      	ldr	r2, [r3, #8]
   15bbe:	f800 2c03 	strb.w	r2, [r0, #-3]
   15bc2:	689a      	ldr	r2, [r3, #8]
   15bc4:	f800 2c02 	strb.w	r2, [r0, #-2]
   15bc8:	689b      	ldr	r3, [r3, #8]
   15bca:	f800 3c01 	strb.w	r3, [r0, #-1]
   15bce:	e01e      	b.n	15c0e <ssp1_exchange_data+0xbe>
   15bd0:	2903      	cmp	r1, #3
   15bd2:	dd1e      	ble.n	15c12 <ssp1_exchange_data+0xc2>
   15bd4:	6094      	str	r4, [r2, #8]
   15bd6:	f993 4001 	ldrsb.w	r4, [r3, #1]
   15bda:	3904      	subs	r1, #4
   15bdc:	6094      	str	r4, [r2, #8]
   15bde:	f993 4002 	ldrsb.w	r4, [r3, #2]
   15be2:	6094      	str	r4, [r2, #8]
   15be4:	1d1c      	adds	r4, r3, #4
   15be6:	f993 3003 	ldrsb.w	r3, [r3, #3]
   15bea:	6093      	str	r3, [r2, #8]
   15bec:	4b0f      	ldr	r3, [pc, #60]	; (15c2c <ssp1_exchange_data+0xdc>)
   15bee:	68da      	ldr	r2, [r3, #12]
   15bf0:	06d2      	lsls	r2, r2, #27
   15bf2:	d4fb      	bmi.n	15bec <ssp1_exchange_data+0x9c>
   15bf4:	689a      	ldr	r2, [r3, #8]
   15bf6:	3004      	adds	r0, #4
   15bf8:	f800 2c04 	strb.w	r2, [r0, #-4]
   15bfc:	689a      	ldr	r2, [r3, #8]
   15bfe:	f800 2c03 	strb.w	r2, [r0, #-3]
   15c02:	689a      	ldr	r2, [r3, #8]
   15c04:	f800 2c02 	strb.w	r2, [r0, #-2]
   15c08:	689b      	ldr	r3, [r3, #8]
   15c0a:	f800 3c01 	strb.w	r3, [r0, #-1]
   15c0e:	4623      	mov	r3, r4
   15c10:	e7a0      	b.n	15b54 <ssp1_exchange_data+0x4>
   15c12:	3301      	adds	r3, #1
   15c14:	6094      	str	r4, [r2, #8]
   15c16:	3901      	subs	r1, #1
   15c18:	68d4      	ldr	r4, [r2, #12]
   15c1a:	06e4      	lsls	r4, r4, #27
   15c1c:	d4fc      	bmi.n	15c18 <ssp1_exchange_data+0xc8>
   15c1e:	4a03      	ldr	r2, [pc, #12]	; (15c2c <ssp1_exchange_data+0xdc>)
   15c20:	3001      	adds	r0, #1
   15c22:	6892      	ldr	r2, [r2, #8]
   15c24:	f800 2c01 	strb.w	r2, [r0, #-1]
   15c28:	e794      	b.n	15b54 <ssp1_exchange_data+0x4>
   15c2a:	bd10      	pop	{r4, pc}
   15c2c:	40030000 	.word	0x40030000

00015c30 <flash_send_op_addr(flash_opcode_t, unsigned long)>:
_ZL18flash_send_op_addr14flash_opcode_tm():
   15c30:	b507      	push	{r0, r1, r2, lr}
   15c32:	0c0b      	lsrs	r3, r1, #16
   15c34:	f88d 0004 	strb.w	r0, [sp, #4]
   15c38:	f88d 3005 	strb.w	r3, [sp, #5]
   15c3c:	f88d 1007 	strb.w	r1, [sp, #7]
   15c40:	0a0b      	lsrs	r3, r1, #8
   15c42:	a801      	add	r0, sp, #4
   15c44:	2104      	movs	r1, #4
   15c46:	f88d 3006 	strb.w	r3, [sp, #6]
   15c4a:	f7ff ff81 	bl	15b50 <ssp1_exchange_data>
   15c4e:	b003      	add	sp, #12
   15c50:	f85d fb04 	ldr.w	pc, [sp], #4

00015c54 <flash_read_page(unsigned char*, unsigned long, unsigned long)>:
_ZL15flash_read_pagePhmm():
   15c54:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   15c56:	4c0f      	ldr	r4, [pc, #60]	; (15c94 <flash_read_page(unsigned char*, unsigned long, unsigned long)+0x40>)
   15c58:	2540      	movs	r5, #64	; 0x40
   15c5a:	4617      	mov	r7, r2
   15c5c:	2203      	movs	r2, #3
   15c5e:	61e5      	str	r5, [r4, #28]
   15c60:	f88d 2004 	strb.w	r2, [sp, #4]
   15c64:	0c0a      	lsrs	r2, r1, #16
   15c66:	4606      	mov	r6, r0
   15c68:	f88d 2005 	strb.w	r2, [sp, #5]
   15c6c:	f88d 1007 	strb.w	r1, [sp, #7]
   15c70:	0a0a      	lsrs	r2, r1, #8
   15c72:	a801      	add	r0, sp, #4
   15c74:	2104      	movs	r1, #4
   15c76:	f88d 2006 	strb.w	r2, [sp, #6]
   15c7a:	f7ff ff69 	bl	15b50 <ssp1_exchange_data>
   15c7e:	4630      	mov	r0, r6
   15c80:	4639      	mov	r1, r7
   15c82:	2200      	movs	r2, #0
   15c84:	f004 f95e 	bl	19f44 <ssp1_dma_transfer_block>
   15c88:	61a5      	str	r5, [r4, #24]
   15c8a:	61a5      	str	r5, [r4, #24]
   15c8c:	61a5      	str	r5, [r4, #24]
   15c8e:	b003      	add	sp, #12
   15c90:	bdf0      	pop	{r4, r5, r6, r7, pc}
   15c92:	bf00      	nop
   15c94:	2009c000 	.word	0x2009c000

00015c98 <flash_wait_for_ready()>:
_ZL20flash_wait_for_readyv():
   15c98:	4b0e      	ldr	r3, [pc, #56]	; (15cd4 <flash_wait_for_ready()+0x3c>)
   15c9a:	2240      	movs	r2, #64	; 0x40
   15c9c:	61da      	str	r2, [r3, #28]
   15c9e:	4b0e      	ldr	r3, [pc, #56]	; (15cd8 <flash_wait_for_ready()+0x40>)
   15ca0:	f06f 0228 	mvn.w	r2, #40	; 0x28
   15ca4:	609a      	str	r2, [r3, #8]
   15ca6:	68da      	ldr	r2, [r3, #12]
   15ca8:	06d1      	lsls	r1, r2, #27
   15caa:	d4fc      	bmi.n	15ca6 <flash_wait_for_ready()+0xe>
   15cac:	4b0a      	ldr	r3, [pc, #40]	; (15cd8 <flash_wait_for_ready()+0x40>)
   15cae:	689b      	ldr	r3, [r3, #8]
   15cb0:	4b09      	ldr	r3, [pc, #36]	; (15cd8 <flash_wait_for_ready()+0x40>)
   15cb2:	f04f 32ff 	mov.w	r2, #4294967295
   15cb6:	609a      	str	r2, [r3, #8]
   15cb8:	68da      	ldr	r2, [r3, #12]
   15cba:	06d2      	lsls	r2, r2, #27
   15cbc:	d4fc      	bmi.n	15cb8 <flash_wait_for_ready()+0x20>
   15cbe:	4b06      	ldr	r3, [pc, #24]	; (15cd8 <flash_wait_for_ready()+0x40>)
   15cc0:	6898      	ldr	r0, [r3, #8]
   15cc2:	0603      	lsls	r3, r0, #24
   15cc4:	d5f4      	bpl.n	15cb0 <flash_wait_for_ready()+0x18>
   15cc6:	4b03      	ldr	r3, [pc, #12]	; (15cd4 <flash_wait_for_ready()+0x3c>)
   15cc8:	2240      	movs	r2, #64	; 0x40
   15cca:	619a      	str	r2, [r3, #24]
   15ccc:	b2c0      	uxtb	r0, r0
   15cce:	619a      	str	r2, [r3, #24]
   15cd0:	619a      	str	r2, [r3, #24]
   15cd2:	4770      	bx	lr
   15cd4:	2009c000 	.word	0x2009c000
   15cd8:	40030000 	.word	0x40030000

00015cdc <flash_initialize>:
flash_initialize():
   15cdc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   15cde:	f7ff ffdb 	bl	15c98 <flash_wait_for_ready()>
   15ce2:	4e20      	ldr	r6, [pc, #128]	; (15d64 <flash_initialize+0x88>)
   15ce4:	2300      	movs	r3, #0
   15ce6:	8033      	strh	r3, [r6, #0]
   15ce8:	4b1f      	ldr	r3, [pc, #124]	; (15d68 <flash_initialize+0x8c>)
   15cea:	4c20      	ldr	r4, [pc, #128]	; (15d6c <flash_initialize+0x90>)
   15cec:	2540      	movs	r5, #64	; 0x40
   15cee:	881a      	ldrh	r2, [r3, #0]
   15cf0:	789b      	ldrb	r3, [r3, #2]
   15cf2:	61e5      	str	r5, [r4, #28]
   15cf4:	4607      	mov	r7, r0
   15cf6:	2103      	movs	r1, #3
   15cf8:	a801      	add	r0, sp, #4
   15cfa:	f8ad 2004 	strh.w	r2, [sp, #4]
   15cfe:	f88d 3006 	strb.w	r3, [sp, #6]
   15d02:	f7ff ff25 	bl	15b50 <ssp1_exchange_data>
   15d06:	f89d 2005 	ldrb.w	r2, [sp, #5]
   15d0a:	f89d 3006 	ldrb.w	r3, [sp, #6]
   15d0e:	2a1f      	cmp	r2, #31
   15d10:	61a5      	str	r5, [r4, #24]
   15d12:	61a5      	str	r5, [r4, #24]
   15d14:	61a5      	str	r5, [r4, #24]
   15d16:	4634      	mov	r4, r6
   15d18:	d11c      	bne.n	15d54 <flash_initialize+0x78>
   15d1a:	f1a3 0225 	sub.w	r2, r3, #37	; 0x25
   15d1e:	2a03      	cmp	r2, #3
   15d20:	d818      	bhi.n	15d54 <flash_initialize+0x78>
   15d22:	4a13      	ldr	r2, [pc, #76]	; (15d70 <flash_initialize+0x94>)
   15d24:	2b25      	cmp	r3, #37	; 0x25
   15d26:	7013      	strb	r3, [r2, #0]
   15d28:	f007 0001 	and.w	r0, r7, #1
   15d2c:	d106      	bne.n	15d3c <flash_initialize+0x60>
   15d2e:	2800      	cmp	r0, #0
   15d30:	bf0c      	ite	eq
   15d32:	f44f 7384 	moveq.w	r3, #264	; 0x108
   15d36:	f44f 7380 	movne.w	r3, #256	; 0x100
   15d3a:	e005      	b.n	15d48 <flash_initialize+0x6c>
   15d3c:	2800      	cmp	r0, #0
   15d3e:	bf0c      	ite	eq
   15d40:	f44f 7304 	moveq.w	r3, #528	; 0x210
   15d44:	f44f 7300 	movne.w	r3, #512	; 0x200
   15d48:	8023      	strh	r3, [r4, #0]
   15d4a:	f7ff febb 	bl	15ac4 <flash_get_mem_size_bytes()>
   15d4e:	4b09      	ldr	r3, [pc, #36]	; (15d74 <flash_initialize+0x98>)
   15d50:	0a40      	lsrs	r0, r0, #9
   15d52:	6018      	str	r0, [r3, #0]
   15d54:	8820      	ldrh	r0, [r4, #0]
   15d56:	f1d0 0001 	rsbs	r0, r0, #1
   15d5a:	bf38      	it	cc
   15d5c:	2000      	movcc	r0, #0
   15d5e:	b003      	add	sp, #12
   15d60:	bdf0      	pop	{r4, r5, r6, r7, pc}
   15d62:	bf00      	nop
   15d64:	2007c946 	.word	0x2007c946
   15d68:	000264a2 	.word	0x000264a2
   15d6c:	2009c000 	.word	0x2009c000
   15d70:	2007c948 	.word	0x2007c948
   15d74:	2007c94c 	.word	0x2007c94c

00015d78 <flash_read_sectors>:
flash_read_sectors():
   15d78:	4b11      	ldr	r3, [pc, #68]	; (15dc0 <flash_read_sectors+0x48>)
   15d7a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   15d7e:	681b      	ldr	r3, [r3, #0]
   15d80:	4616      	mov	r6, r2
   15d82:	188a      	adds	r2, r1, r2
   15d84:	3a01      	subs	r2, #1
   15d86:	429a      	cmp	r2, r3
   15d88:	4607      	mov	r7, r0
   15d8a:	d815      	bhi.n	15db8 <flash_read_sectors+0x40>
   15d8c:	ea4f 2841 	mov.w	r8, r1, lsl #9
   15d90:	f7ff ff82 	bl	15c98 <flash_wait_for_ready()>
   15d94:	463c      	mov	r4, r7
   15d96:	2500      	movs	r5, #0
   15d98:	ebc7 0208 	rsb	r2, r7, r8
   15d9c:	42b5      	cmp	r5, r6
   15d9e:	4422      	add	r2, r4
   15da0:	da07      	bge.n	15db2 <flash_read_sectors+0x3a>
   15da2:	4621      	mov	r1, r4
   15da4:	4807      	ldr	r0, [pc, #28]	; (15dc4 <flash_read_sectors+0x4c>)
   15da6:	f7ff fe9d 	bl	15ae4 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)>
   15daa:	f504 7400 	add.w	r4, r4, #512	; 0x200
   15dae:	3501      	adds	r5, #1
   15db0:	e7f2      	b.n	15d98 <flash_read_sectors+0x20>
   15db2:	2000      	movs	r0, #0
   15db4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   15db8:	2001      	movs	r0, #1
   15dba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   15dbe:	bf00      	nop
   15dc0:	2007c94c 	.word	0x2007c94c
   15dc4:	00015c55 	.word	0x00015c55

00015dc8 <flash_write_sectors>:
flash_write_sectors():
   15dc8:	4b10      	ldr	r3, [pc, #64]	; (15e0c <flash_write_sectors+0x44>)
   15dca:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   15dce:	681b      	ldr	r3, [r3, #0]
   15dd0:	4616      	mov	r6, r2
   15dd2:	188a      	adds	r2, r1, r2
   15dd4:	3a01      	subs	r2, #1
   15dd6:	429a      	cmp	r2, r3
   15dd8:	4607      	mov	r7, r0
   15dda:	d813      	bhi.n	15e04 <flash_write_sectors+0x3c>
   15ddc:	ea4f 2841 	mov.w	r8, r1, lsl #9
   15de0:	4604      	mov	r4, r0
   15de2:	2500      	movs	r5, #0
   15de4:	ebc7 0208 	rsb	r2, r7, r8
   15de8:	42b5      	cmp	r5, r6
   15dea:	4422      	add	r2, r4
   15dec:	da07      	bge.n	15dfe <flash_write_sectors+0x36>
   15dee:	4621      	mov	r1, r4
   15df0:	4807      	ldr	r0, [pc, #28]	; (15e10 <flash_write_sectors+0x48>)
   15df2:	f7ff fe77 	bl	15ae4 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)>
   15df6:	f504 7400 	add.w	r4, r4, #512	; 0x200
   15dfa:	3501      	adds	r5, #1
   15dfc:	e7f2      	b.n	15de4 <flash_write_sectors+0x1c>
   15dfe:	2000      	movs	r0, #0
   15e00:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   15e04:	2001      	movs	r0, #1
   15e06:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   15e0a:	bf00      	nop
   15e0c:	2007c94c 	.word	0x2007c94c
   15e10:	00015ef1 	.word	0x00015ef1

00015e14 <flash_ioctl>:
flash_ioctl():
   15e14:	b510      	push	{r4, lr}
   15e16:	460c      	mov	r4, r1
   15e18:	2807      	cmp	r0, #7
   15e1a:	d815      	bhi.n	15e48 <flash_ioctl+0x34>
   15e1c:	e8df f000 	tbb	[pc, r0]
   15e20:	100c0704 	.word	0x100c0704
   15e24:	12121212 	.word	0x12121212
   15e28:	f7ff ff36 	bl	15c98 <flash_wait_for_ready()>
   15e2c:	e00a      	b.n	15e44 <flash_ioctl+0x30>
   15e2e:	f7ff fe49 	bl	15ac4 <flash_get_mem_size_bytes()>
   15e32:	0a40      	lsrs	r0, r0, #9
   15e34:	6020      	str	r0, [r4, #0]
   15e36:	e005      	b.n	15e44 <flash_ioctl+0x30>
   15e38:	f44f 7300 	mov.w	r3, #512	; 0x200
   15e3c:	800b      	strh	r3, [r1, #0]
   15e3e:	e001      	b.n	15e44 <flash_ioctl+0x30>
   15e40:	2301      	movs	r3, #1
   15e42:	600b      	str	r3, [r1, #0]
   15e44:	2000      	movs	r0, #0
   15e46:	bd10      	pop	{r4, pc}
   15e48:	2004      	movs	r0, #4
   15e4a:	bd10      	pop	{r4, pc}

00015e4c <flash_write_permanent_id>:
flash_write_permanent_id():
   15e4c:	b570      	push	{r4, r5, r6, lr}
   15e4e:	b090      	sub	sp, #64	; 0x40
   15e50:	4603      	mov	r3, r0
   15e52:	466a      	mov	r2, sp
   15e54:	f100 0540 	add.w	r5, r0, #64	; 0x40
   15e58:	6818      	ldr	r0, [r3, #0]
   15e5a:	6859      	ldr	r1, [r3, #4]
   15e5c:	4614      	mov	r4, r2
   15e5e:	c403      	stmia	r4!, {r0, r1}
   15e60:	3308      	adds	r3, #8
   15e62:	42ab      	cmp	r3, r5
   15e64:	4622      	mov	r2, r4
   15e66:	d1f7      	bne.n	15e58 <flash_write_permanent_id+0xc>
   15e68:	4d07      	ldr	r5, [pc, #28]	; (15e88 <flash_write_permanent_id+0x3c>)
   15e6a:	2440      	movs	r4, #64	; 0x40
   15e6c:	61ec      	str	r4, [r5, #28]
   15e6e:	209b      	movs	r0, #155	; 0x9b
   15e70:	2100      	movs	r1, #0
   15e72:	f7ff fedd 	bl	15c30 <flash_send_op_addr(flash_opcode_t, unsigned long)>
   15e76:	4668      	mov	r0, sp
   15e78:	4621      	mov	r1, r4
   15e7a:	f7ff fe69 	bl	15b50 <ssp1_exchange_data>
   15e7e:	61ac      	str	r4, [r5, #24]
   15e80:	61ac      	str	r4, [r5, #24]
   15e82:	61ac      	str	r4, [r5, #24]
   15e84:	b010      	add	sp, #64	; 0x40
   15e86:	bd70      	pop	{r4, r5, r6, pc}
   15e88:	2009c000 	.word	0x2009c000

00015e8c <flash_read_permanent_id>:
flash_read_permanent_id():
   15e8c:	b570      	push	{r4, r5, r6, lr}
   15e8e:	4d08      	ldr	r5, [pc, #32]	; (15eb0 <flash_read_permanent_id+0x24>)
   15e90:	2440      	movs	r4, #64	; 0x40
   15e92:	4606      	mov	r6, r0
   15e94:	2100      	movs	r1, #0
   15e96:	2077      	movs	r0, #119	; 0x77
   15e98:	61ec      	str	r4, [r5, #28]
   15e9a:	f7ff fec9 	bl	15c30 <flash_send_op_addr(flash_opcode_t, unsigned long)>
   15e9e:	4630      	mov	r0, r6
   15ea0:	4621      	mov	r1, r4
   15ea2:	f7ff fe55 	bl	15b50 <ssp1_exchange_data>
   15ea6:	61ac      	str	r4, [r5, #24]
   15ea8:	61ac      	str	r4, [r5, #24]
   15eaa:	61ac      	str	r4, [r5, #24]
   15eac:	bd70      	pop	{r4, r5, r6, pc}
   15eae:	bf00      	nop
   15eb0:	2009c000 	.word	0x2009c000

00015eb4 <flash_get_page_count>:
flash_get_page_count():
   15eb4:	4b06      	ldr	r3, [pc, #24]	; (15ed0 <flash_get_page_count+0x1c>)
   15eb6:	b510      	push	{r4, lr}
   15eb8:	881c      	ldrh	r4, [r3, #0]
   15eba:	f034 041f 	bics.w	r4, r4, #31
   15ebe:	d004      	beq.n	15eca <flash_get_page_count+0x16>
   15ec0:	f7ff fe00 	bl	15ac4 <flash_get_mem_size_bytes()>
   15ec4:	fbb0 f0f4 	udiv	r0, r0, r4
   15ec8:	bd10      	pop	{r4, pc}
   15eca:	4620      	mov	r0, r4
   15ecc:	bd10      	pop	{r4, pc}
   15ece:	bf00      	nop
   15ed0:	2007c946 	.word	0x2007c946

00015ed4 <flash_get_page_size>:
flash_get_page_size():
   15ed4:	4b01      	ldr	r3, [pc, #4]	; (15edc <flash_get_page_size+0x8>)
   15ed6:	8818      	ldrh	r0, [r3, #0]
   15ed8:	4770      	bx	lr
   15eda:	bf00      	nop
   15edc:	2007c946 	.word	0x2007c946

00015ee0 <flash_supports_metadata>:
flash_supports_metadata():
   15ee0:	4b02      	ldr	r3, [pc, #8]	; (15eec <flash_supports_metadata+0xc>)
   15ee2:	7818      	ldrb	r0, [r3, #0]
   15ee4:	3000      	adds	r0, #0
   15ee6:	bf18      	it	ne
   15ee8:	2001      	movne	r0, #1
   15eea:	4770      	bx	lr
   15eec:	2007c946 	.word	0x2007c946

00015ef0 <flash_write_page(unsigned char*, unsigned long, unsigned long)>:
_ZL16flash_write_pagePhmm():
   15ef0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   15ef4:	f04f 33ff 	mov.w	r3, #4294967295
   15ef8:	460f      	mov	r7, r1
   15efa:	4690      	mov	r8, r2
   15efc:	9301      	str	r3, [sp, #4]
   15efe:	4681      	mov	r9, r0
   15f00:	f7ff feca 	bl	15c98 <flash_wait_for_ready()>
   15f04:	f7ff ffec 	bl	15ee0 <flash_supports_metadata>
   15f08:	4606      	mov	r6, r0
   15f0a:	b1b0      	cbz	r0, 15f3a <flash_write_page(unsigned char*, unsigned long, unsigned long)+0x4a>
   15f0c:	4c19      	ldr	r4, [pc, #100]	; (15f74 <flash_write_page(unsigned char*, unsigned long, unsigned long)+0x84>)
   15f0e:	2540      	movs	r5, #64	; 0x40
   15f10:	4b19      	ldr	r3, [pc, #100]	; (15f78 <flash_write_page(unsigned char*, unsigned long, unsigned long)+0x88>)
   15f12:	61e5      	str	r5, [r4, #28]
   15f14:	881b      	ldrh	r3, [r3, #0]
   15f16:	2003      	movs	r0, #3
   15f18:	f5b3 7f84 	cmp.w	r3, #264	; 0x108
   15f1c:	bf14      	ite	ne
   15f1e:	f44f 7100 	movne.w	r1, #512	; 0x200
   15f22:	f44f 7180 	moveq.w	r1, #256	; 0x100
   15f26:	4339      	orrs	r1, r7
   15f28:	f7ff fe82 	bl	15c30 <flash_send_op_addr(flash_opcode_t, unsigned long)>
   15f2c:	a801      	add	r0, sp, #4
   15f2e:	2104      	movs	r1, #4
   15f30:	f7ff fe0e 	bl	15b50 <ssp1_exchange_data>
   15f34:	61a5      	str	r5, [r4, #24]
   15f36:	61a5      	str	r5, [r4, #24]
   15f38:	61a5      	str	r5, [r4, #24]
   15f3a:	4c0e      	ldr	r4, [pc, #56]	; (15f74 <flash_write_page(unsigned char*, unsigned long, unsigned long)+0x84>)
   15f3c:	2340      	movs	r3, #64	; 0x40
   15f3e:	2082      	movs	r0, #130	; 0x82
   15f40:	4639      	mov	r1, r7
   15f42:	61e3      	str	r3, [r4, #28]
   15f44:	f7ff fe74 	bl	15c30 <flash_send_op_addr(flash_opcode_t, unsigned long)>
   15f48:	4648      	mov	r0, r9
   15f4a:	4641      	mov	r1, r8
   15f4c:	2201      	movs	r2, #1
   15f4e:	f003 fff9 	bl	19f44 <ssp1_dma_transfer_block>
   15f52:	b13e      	cbz	r6, 15f64 <flash_write_page(unsigned char*, unsigned long, unsigned long)+0x74>
   15f54:	9b01      	ldr	r3, [sp, #4]
   15f56:	a802      	add	r0, sp, #8
   15f58:	3301      	adds	r3, #1
   15f5a:	f840 3d04 	str.w	r3, [r0, #-4]!
   15f5e:	2104      	movs	r1, #4
   15f60:	f7ff fdf6 	bl	15b50 <ssp1_exchange_data>
   15f64:	2340      	movs	r3, #64	; 0x40
   15f66:	61a3      	str	r3, [r4, #24]
   15f68:	61a3      	str	r3, [r4, #24]
   15f6a:	61a3      	str	r3, [r4, #24]
   15f6c:	b003      	add	sp, #12
   15f6e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   15f72:	bf00      	nop
   15f74:	2009c000 	.word	0x2009c000
   15f78:	2007c946 	.word	0x2007c946

00015f7c <flash_get_page_write_count>:
flash_get_page_write_count():
   15f7c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   15f7e:	4b12      	ldr	r3, [pc, #72]	; (15fc8 <flash_get_page_write_count+0x4c>)
   15f80:	4607      	mov	r7, r0
   15f82:	881b      	ldrh	r3, [r3, #0]
   15f84:	f5b3 7f84 	cmp.w	r3, #264	; 0x108
   15f88:	f04f 33ff 	mov.w	r3, #4294967295
   15f8c:	bf14      	ite	ne
   15f8e:	f44f 7600 	movne.w	r6, #512	; 0x200
   15f92:	f44f 7680 	moveq.w	r6, #256	; 0x100
   15f96:	9301      	str	r3, [sp, #4]
   15f98:	f7ff ffa2 	bl	15ee0 <flash_supports_metadata>
   15f9c:	b170      	cbz	r0, 15fbc <flash_get_page_write_count+0x40>
   15f9e:	4c0b      	ldr	r4, [pc, #44]	; (15fcc <flash_get_page_write_count+0x50>)
   15fa0:	2540      	movs	r5, #64	; 0x40
   15fa2:	2003      	movs	r0, #3
   15fa4:	ea46 2147 	orr.w	r1, r6, r7, lsl #9
   15fa8:	61e5      	str	r5, [r4, #28]
   15faa:	f7ff fe41 	bl	15c30 <flash_send_op_addr(flash_opcode_t, unsigned long)>
   15fae:	a801      	add	r0, sp, #4
   15fb0:	2104      	movs	r1, #4
   15fb2:	f7ff fdcd 	bl	15b50 <ssp1_exchange_data>
   15fb6:	61a5      	str	r5, [r4, #24]
   15fb8:	61a5      	str	r5, [r4, #24]
   15fba:	61a5      	str	r5, [r4, #24]
   15fbc:	9801      	ldr	r0, [sp, #4]
   15fbe:	1c43      	adds	r3, r0, #1
   15fc0:	bf08      	it	eq
   15fc2:	2000      	moveq	r0, #0
   15fc4:	b003      	add	sp, #12
   15fc6:	bdf0      	pop	{r4, r5, r6, r7, pc}
   15fc8:	2007c946 	.word	0x2007c946
   15fcc:	2009c000 	.word	0x2009c000

00015fd0 <flash_chip_erase>:
flash_chip_erase():
   15fd0:	b537      	push	{r0, r1, r2, r4, r5, lr}
   15fd2:	4b07      	ldr	r3, [pc, #28]	; (15ff0 <flash_chip_erase+0x20>)
   15fd4:	4c07      	ldr	r4, [pc, #28]	; (15ff4 <flash_chip_erase+0x24>)
   15fd6:	6818      	ldr	r0, [r3, #0]
   15fd8:	2540      	movs	r5, #64	; 0x40
   15fda:	9001      	str	r0, [sp, #4]
   15fdc:	2104      	movs	r1, #4
   15fde:	61e5      	str	r5, [r4, #28]
   15fe0:	a801      	add	r0, sp, #4
   15fe2:	f7ff fdb5 	bl	15b50 <ssp1_exchange_data>
   15fe6:	61a5      	str	r5, [r4, #24]
   15fe8:	61a5      	str	r5, [r4, #24]
   15fea:	61a5      	str	r5, [r4, #24]
   15fec:	b003      	add	sp, #12
   15fee:	bd30      	pop	{r4, r5, pc}
   15ff0:	000264a5 	.word	0x000264a5
   15ff4:	2009c000 	.word	0x2009c000

00015ff8 <get_fattime>:
get_fattime():
   15ff8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
   15ffa:	a801      	add	r0, sp, #4
   15ffc:	f003 fec4 	bl	19d88 <rtc_gettime>
   16000:	f89d 2009 	ldrb.w	r2, [sp, #9]
   16004:	f89d 3008 	ldrb.w	r3, [sp, #8]
   16008:	f002 020f 	and.w	r2, r2, #15
   1600c:	f003 031f 	and.w	r3, r3, #31
   16010:	0552      	lsls	r2, r2, #21
   16012:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
   16016:	f89d 3006 	ldrb.w	r3, [sp, #6]
   1601a:	f89d 0005 	ldrb.w	r0, [sp, #5]
   1601e:	f003 031f 	and.w	r3, r3, #31
   16022:	ea42 23c3 	orr.w	r3, r2, r3, lsl #11
   16026:	f000 003f 	and.w	r0, r0, #63	; 0x3f
   1602a:	ea43 1040 	orr.w	r0, r3, r0, lsl #5
   1602e:	f89d 3004 	ldrb.w	r3, [sp, #4]
   16032:	f3c3 0344 	ubfx	r3, r3, #1, #5
   16036:	4318      	orrs	r0, r3
   16038:	f8bd 300a 	ldrh.w	r3, [sp, #10]
   1603c:	065b      	lsls	r3, r3, #25
   1603e:	f103 4308 	add.w	r3, r3, #2281701376	; 0x88000000
   16042:	4318      	orrs	r0, r3
   16044:	b005      	add	sp, #20
   16046:	f85d fb04 	ldr.w	pc, [sp], #4

0001604a <mem_cpy>:
mem_cpy():
   1604a:	b510      	push	{r4, lr}
   1604c:	2300      	movs	r3, #0
   1604e:	1ad4      	subs	r4, r2, r3
   16050:	2c03      	cmp	r4, #3
   16052:	d903      	bls.n	1605c <mem_cpy+0x12>
   16054:	58cc      	ldr	r4, [r1, r3]
   16056:	50c4      	str	r4, [r0, r3]
   16058:	3304      	adds	r3, #4
   1605a:	e7f8      	b.n	1604e <mem_cpy+0x4>
   1605c:	f002 0403 	and.w	r4, r2, #3
   16060:	f022 0203 	bic.w	r2, r2, #3
   16064:	4410      	add	r0, r2
   16066:	2300      	movs	r3, #0
   16068:	440a      	add	r2, r1
   1606a:	42a3      	cmp	r3, r4
   1606c:	d003      	beq.n	16076 <mem_cpy+0x2c>
   1606e:	5cd1      	ldrb	r1, [r2, r3]
   16070:	54c1      	strb	r1, [r0, r3]
   16072:	3301      	adds	r3, #1
   16074:	e7f9      	b.n	1606a <mem_cpy+0x20>
   16076:	bd10      	pop	{r4, pc}

00016078 <mem_set>:
mem_set():
   16078:	4402      	add	r2, r0
   1607a:	4290      	cmp	r0, r2
   1607c:	d002      	beq.n	16084 <mem_set+0xc>
   1607e:	f800 1b01 	strb.w	r1, [r0], #1
   16082:	e7fa      	b.n	1607a <mem_set+0x2>
   16084:	4770      	bx	lr

00016086 <sum_sfn>:
sum_sfn():
   16086:	2300      	movs	r3, #0
   16088:	b510      	push	{r4, lr}
   1608a:	4604      	mov	r4, r0
   1608c:	4618      	mov	r0, r3
   1608e:	01c2      	lsls	r2, r0, #7
   16090:	5ce1      	ldrb	r1, [r4, r3]
   16092:	ea42 0250 	orr.w	r2, r2, r0, lsr #1
   16096:	3301      	adds	r3, #1
   16098:	440a      	add	r2, r1
   1609a:	2b0b      	cmp	r3, #11
   1609c:	f002 00ff 	and.w	r0, r2, #255	; 0xff
   160a0:	d1f5      	bne.n	1608e <sum_sfn+0x8>
   160a2:	bd10      	pop	{r4, pc}

000160a4 <get_ldnumber>:
get_ldnumber():
   160a4:	6803      	ldr	r3, [r0, #0]
   160a6:	b510      	push	{r4, lr}
   160a8:	4604      	mov	r4, r0
   160aa:	b1c3      	cbz	r3, 160de <get_ldnumber+0x3a>
   160ac:	461a      	mov	r2, r3
   160ae:	4610      	mov	r0, r2
   160b0:	f812 1b01 	ldrb.w	r1, [r2], #1
   160b4:	291f      	cmp	r1, #31
   160b6:	d902      	bls.n	160be <get_ldnumber+0x1a>
   160b8:	293a      	cmp	r1, #58	; 0x3a
   160ba:	d1f8      	bne.n	160ae <get_ldnumber+0xa>
   160bc:	e001      	b.n	160c2 <get_ldnumber+0x1e>
   160be:	2000      	movs	r0, #0
   160c0:	bd10      	pop	{r4, pc}
   160c2:	461a      	mov	r2, r3
   160c4:	f812 1b01 	ldrb.w	r1, [r2], #1
   160c8:	4290      	cmp	r0, r2
   160ca:	d108      	bne.n	160de <get_ldnumber+0x3a>
   160cc:	f1a1 0230 	sub.w	r2, r1, #48	; 0x30
   160d0:	2a01      	cmp	r2, #1
   160d2:	d804      	bhi.n	160de <get_ldnumber+0x3a>
   160d4:	b248      	sxtb	r0, r1
   160d6:	3302      	adds	r3, #2
   160d8:	3830      	subs	r0, #48	; 0x30
   160da:	6023      	str	r3, [r4, #0]
   160dc:	bd10      	pop	{r4, pc}
   160de:	f04f 30ff 	mov.w	r0, #4294967295
   160e2:	bd10      	pop	{r4, pc}

000160e4 <get_fileinfo>:
get_fileinfo():
   160e4:	6902      	ldr	r2, [r0, #16]
   160e6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   160e8:	460c      	mov	r4, r1
   160ea:	f101 0309 	add.w	r3, r1, #9
   160ee:	b372      	cbz	r2, 1614e <get_fileinfo+0x6a>
   160f0:	6942      	ldr	r2, [r0, #20]
   160f2:	2100      	movs	r1, #0
   160f4:	3101      	adds	r1, #1
   160f6:	1855      	adds	r5, r2, r1
   160f8:	f815 5c01 	ldrb.w	r5, [r5, #-1]
   160fc:	b26e      	sxtb	r6, r5
   160fe:	2e20      	cmp	r6, #32
   16100:	d01b      	beq.n	1613a <get_fileinfo+0x56>
   16102:	2e05      	cmp	r6, #5
   16104:	bf08      	it	eq
   16106:	25e5      	moveq	r5, #229	; 0xe5
   16108:	2909      	cmp	r1, #9
   1610a:	d102      	bne.n	16112 <get_fileinfo+0x2e>
   1610c:	262e      	movs	r6, #46	; 0x2e
   1610e:	701e      	strb	r6, [r3, #0]
   16110:	3301      	adds	r3, #1
   16112:	b2ee      	uxtb	r6, r5
   16114:	f1a6 0741 	sub.w	r7, r6, #65	; 0x41
   16118:	2f19      	cmp	r7, #25
   1611a:	d80c      	bhi.n	16136 <get_fileinfo+0x52>
   1611c:	2909      	cmp	r1, #9
   1611e:	7b17      	ldrb	r7, [r2, #12]
   16120:	bf34      	ite	cc
   16122:	f04f 0c08 	movcc.w	ip, #8
   16126:	f04f 0c10 	movcs.w	ip, #16
   1612a:	ea1c 0f07 	tst.w	ip, r7
   1612e:	bf1c      	itt	ne
   16130:	f106 0520 	addne.w	r5, r6, #32
   16134:	b2ed      	uxtbne	r5, r5
   16136:	701d      	strb	r5, [r3, #0]
   16138:	3301      	adds	r3, #1
   1613a:	290b      	cmp	r1, #11
   1613c:	d1da      	bne.n	160f4 <get_fileinfo+0x10>
   1613e:	7ad1      	ldrb	r1, [r2, #11]
   16140:	7221      	strb	r1, [r4, #8]
   16142:	69d1      	ldr	r1, [r2, #28]
   16144:	6021      	str	r1, [r4, #0]
   16146:	8b11      	ldrh	r1, [r2, #24]
   16148:	80a1      	strh	r1, [r4, #4]
   1614a:	8ad2      	ldrh	r2, [r2, #22]
   1614c:	80e2      	strh	r2, [r4, #6]
   1614e:	2500      	movs	r5, #0
   16150:	701d      	strb	r5, [r3, #0]
   16152:	69a6      	ldr	r6, [r4, #24]
   16154:	b1ee      	cbz	r6, 16192 <get_fileinfo+0xae>
   16156:	6903      	ldr	r3, [r0, #16]
   16158:	b90b      	cbnz	r3, 1615e <get_fileinfo+0x7a>
   1615a:	2500      	movs	r5, #0
   1615c:	e017      	b.n	1618e <get_fileinfo+0xaa>
   1615e:	69e3      	ldr	r3, [r4, #28]
   16160:	2b00      	cmp	r3, #0
   16162:	d0fa      	beq.n	1615a <get_fileinfo+0x76>
   16164:	8c02      	ldrh	r2, [r0, #32]
   16166:	f64f 73ff 	movw	r3, #65535	; 0xffff
   1616a:	429a      	cmp	r2, r3
   1616c:	d0f5      	beq.n	1615a <get_fileinfo+0x76>
   1616e:	69c7      	ldr	r7, [r0, #28]
   16170:	f837 0015 	ldrh.w	r0, [r7, r5, lsl #1]
   16174:	b158      	cbz	r0, 1618e <get_fileinfo+0xaa>
   16176:	2100      	movs	r1, #0
   16178:	f7ff f824 	bl	151c4 <ff_convert>
   1617c:	2800      	cmp	r0, #0
   1617e:	d0ec      	beq.n	1615a <get_fileinfo+0x76>
   16180:	69e3      	ldr	r3, [r4, #28]
   16182:	3b01      	subs	r3, #1
   16184:	429d      	cmp	r5, r3
   16186:	d2e8      	bcs.n	1615a <get_fileinfo+0x76>
   16188:	5570      	strb	r0, [r6, r5]
   1618a:	3501      	adds	r5, #1
   1618c:	e7f0      	b.n	16170 <get_fileinfo+0x8c>
   1618e:	2300      	movs	r3, #0
   16190:	5573      	strb	r3, [r6, r5]
   16192:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00016194 <sync_window>:
sync_window():
   16194:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   16196:	4604      	mov	r4, r0
   16198:	7900      	ldrb	r0, [r0, #4]
   1619a:	b1f8      	cbz	r0, 161dc <sync_window+0x48>
   1619c:	6b25      	ldr	r5, [r4, #48]	; 0x30
   1619e:	f104 0734 	add.w	r7, r4, #52	; 0x34
   161a2:	7860      	ldrb	r0, [r4, #1]
   161a4:	4639      	mov	r1, r7
   161a6:	462a      	mov	r2, r5
   161a8:	2301      	movs	r3, #1
   161aa:	f7ff f89d 	bl	152e8 <disk_write>
   161ae:	b9a0      	cbnz	r0, 161da <sync_window+0x46>
   161b0:	6a63      	ldr	r3, [r4, #36]	; 0x24
   161b2:	7120      	strb	r0, [r4, #4]
   161b4:	1aea      	subs	r2, r5, r3
   161b6:	69e3      	ldr	r3, [r4, #28]
   161b8:	429a      	cmp	r2, r3
   161ba:	d301      	bcc.n	161c0 <sync_window+0x2c>
   161bc:	2000      	movs	r0, #0
   161be:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   161c0:	78e6      	ldrb	r6, [r4, #3]
   161c2:	2e01      	cmp	r6, #1
   161c4:	d9fa      	bls.n	161bc <sync_window+0x28>
   161c6:	69e3      	ldr	r3, [r4, #28]
   161c8:	7860      	ldrb	r0, [r4, #1]
   161ca:	441d      	add	r5, r3
   161cc:	4639      	mov	r1, r7
   161ce:	462a      	mov	r2, r5
   161d0:	2301      	movs	r3, #1
   161d2:	f7ff f889 	bl	152e8 <disk_write>
   161d6:	3e01      	subs	r6, #1
   161d8:	e7f3      	b.n	161c2 <sync_window+0x2e>
   161da:	2001      	movs	r0, #1
   161dc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

000161e0 <sync_fs>:
sync_fs():
   161e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   161e2:	4604      	mov	r4, r0
   161e4:	f7ff ffd6 	bl	16194 <sync_window>
   161e8:	4605      	mov	r5, r0
   161ea:	2d00      	cmp	r5, #0
   161ec:	d131      	bne.n	16252 <sync_fs+0x72>
   161ee:	7823      	ldrb	r3, [r4, #0]
   161f0:	2b03      	cmp	r3, #3
   161f2:	d126      	bne.n	16242 <sync_fs+0x62>
   161f4:	7966      	ldrb	r6, [r4, #5]
   161f6:	2e01      	cmp	r6, #1
   161f8:	d123      	bne.n	16242 <sync_fs+0x62>
   161fa:	f104 0734 	add.w	r7, r4, #52	; 0x34
   161fe:	4638      	mov	r0, r7
   16200:	4629      	mov	r1, r5
   16202:	f44f 7200 	mov.w	r2, #512	; 0x200
   16206:	f7ff ff37 	bl	16078 <mem_set>
   1620a:	f64a 2355 	movw	r3, #43605	; 0xaa55
   1620e:	f8a4 3232 	strh.w	r3, [r4, #562]	; 0x232
   16212:	4b10      	ldr	r3, [pc, #64]	; (16254 <sync_fs+0x74>)
   16214:	6a22      	ldr	r2, [r4, #32]
   16216:	6363      	str	r3, [r4, #52]	; 0x34
   16218:	f103 53ff 	add.w	r3, r3, #534773760	; 0x1fe00000
   1621c:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
   16220:	3320      	adds	r3, #32
   16222:	f8c4 3218 	str.w	r3, [r4, #536]	; 0x218
   16226:	6963      	ldr	r3, [r4, #20]
   16228:	3201      	adds	r2, #1
   1622a:	f8c4 321c 	str.w	r3, [r4, #540]	; 0x21c
   1622e:	6923      	ldr	r3, [r4, #16]
   16230:	6322      	str	r2, [r4, #48]	; 0x30
   16232:	f8c4 3220 	str.w	r3, [r4, #544]	; 0x220
   16236:	7860      	ldrb	r0, [r4, #1]
   16238:	4639      	mov	r1, r7
   1623a:	4633      	mov	r3, r6
   1623c:	f7ff f854 	bl	152e8 <disk_write>
   16240:	7165      	strb	r5, [r4, #5]
   16242:	2100      	movs	r1, #0
   16244:	7860      	ldrb	r0, [r4, #1]
   16246:	460a      	mov	r2, r1
   16248:	f7ff f86a 	bl	15320 <disk_ioctl>
   1624c:	3000      	adds	r0, #0
   1624e:	bf18      	it	ne
   16250:	2001      	movne	r0, #1
   16252:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   16254:	41615252 	.word	0x41615252

00016258 <move_window>:
move_window():
   16258:	6b03      	ldr	r3, [r0, #48]	; 0x30
   1625a:	b570      	push	{r4, r5, r6, lr}
   1625c:	4299      	cmp	r1, r3
   1625e:	4605      	mov	r5, r0
   16260:	460e      	mov	r6, r1
   16262:	d00d      	beq.n	16280 <move_window+0x28>
   16264:	f7ff ff96 	bl	16194 <sync_window>
   16268:	4604      	mov	r4, r0
   1626a:	b958      	cbnz	r0, 16284 <move_window+0x2c>
   1626c:	7868      	ldrb	r0, [r5, #1]
   1626e:	f105 0134 	add.w	r1, r5, #52	; 0x34
   16272:	4632      	mov	r2, r6
   16274:	2301      	movs	r3, #1
   16276:	f7ff f81b 	bl	152b0 <disk_read>
   1627a:	b918      	cbnz	r0, 16284 <move_window+0x2c>
   1627c:	632e      	str	r6, [r5, #48]	; 0x30
   1627e:	e002      	b.n	16286 <move_window+0x2e>
   16280:	2400      	movs	r4, #0
   16282:	e000      	b.n	16286 <move_window+0x2e>
   16284:	2401      	movs	r4, #1
   16286:	4620      	mov	r0, r4
   16288:	bd70      	pop	{r4, r5, r6, pc}
	...

0001628c <check_fs>:
check_fs():
   1628c:	2300      	movs	r3, #0
   1628e:	b510      	push	{r4, lr}
   16290:	7103      	strb	r3, [r0, #4]
   16292:	f04f 33ff 	mov.w	r3, #4294967295
   16296:	6303      	str	r3, [r0, #48]	; 0x30
   16298:	4604      	mov	r4, r0
   1629a:	f7ff ffdd 	bl	16258 <move_window>
   1629e:	b9a0      	cbnz	r0, 162ca <check_fs+0x3e>
   162a0:	f8b4 2232 	ldrh.w	r2, [r4, #562]	; 0x232
   162a4:	f64a 2355 	movw	r3, #43605	; 0xaa55
   162a8:	429a      	cmp	r2, r3
   162aa:	d110      	bne.n	162ce <check_fs+0x42>
   162ac:	f8d4 306a 	ldr.w	r3, [r4, #106]	; 0x6a
   162b0:	f023 427f 	bic.w	r2, r3, #4278190080	; 0xff000000
   162b4:	4b07      	ldr	r3, [pc, #28]	; (162d4 <check_fs+0x48>)
   162b6:	429a      	cmp	r2, r3
   162b8:	d00a      	beq.n	162d0 <check_fs+0x44>
   162ba:	f8d4 0086 	ldr.w	r0, [r4, #134]	; 0x86
   162be:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
   162c2:	1ac0      	subs	r0, r0, r3
   162c4:	bf18      	it	ne
   162c6:	2001      	movne	r0, #1
   162c8:	bd10      	pop	{r4, pc}
   162ca:	2003      	movs	r0, #3
   162cc:	bd10      	pop	{r4, pc}
   162ce:	2002      	movs	r0, #2
   162d0:	bd10      	pop	{r4, pc}
   162d2:	bf00      	nop
   162d4:	00544146 	.word	0x00544146

000162d8 <find_volume>:
find_volume():
   162d8:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
   162dc:	2300      	movs	r3, #0
   162de:	6003      	str	r3, [r0, #0]
   162e0:	4607      	mov	r7, r0
   162e2:	4608      	mov	r0, r1
   162e4:	4615      	mov	r5, r2
   162e6:	f7ff fedd 	bl	160a4 <get_ldnumber>
   162ea:	1e06      	subs	r6, r0, #0
   162ec:	f2c0 80ec 	blt.w	164c8 <find_volume+0x1f0>
   162f0:	4b7d      	ldr	r3, [pc, #500]	; (164e8 <find_volume+0x210>)
   162f2:	f853 4026 	ldr.w	r4, [r3, r6, lsl #2]
   162f6:	2c00      	cmp	r4, #0
   162f8:	f000 80e8 	beq.w	164cc <find_volume+0x1f4>
   162fc:	68e0      	ldr	r0, [r4, #12]
   162fe:	f7fe ff9b 	bl	15238 <ff_req_grant>
   16302:	2800      	cmp	r0, #0
   16304:	f000 80e4 	beq.w	164d0 <find_volume+0x1f8>
   16308:	603c      	str	r4, [r7, #0]
   1630a:	7823      	ldrb	r3, [r4, #0]
   1630c:	b16b      	cbz	r3, 1632a <find_volume+0x52>
   1630e:	7860      	ldrb	r0, [r4, #1]
   16310:	f7fe ffc7 	bl	152a2 <disk_status>
   16314:	07c7      	lsls	r7, r0, #31
   16316:	d408      	bmi.n	1632a <find_volume+0x52>
   16318:	2d00      	cmp	r5, #0
   1631a:	f000 80db 	beq.w	164d4 <find_volume+0x1fc>
   1631e:	f010 0f04 	tst.w	r0, #4
   16322:	bf0c      	ite	eq
   16324:	2000      	moveq	r0, #0
   16326:	200a      	movne	r0, #10
   16328:	e0db      	b.n	164e2 <find_volume+0x20a>
   1632a:	b2f0      	uxtb	r0, r6
   1632c:	2300      	movs	r3, #0
   1632e:	7023      	strb	r3, [r4, #0]
   16330:	7060      	strb	r0, [r4, #1]
   16332:	f7fe ffa3 	bl	1527c <disk_initialize>
   16336:	07c6      	lsls	r6, r0, #31
   16338:	f100 80ce 	bmi.w	164d8 <find_volume+0x200>
   1633c:	b115      	cbz	r5, 16344 <find_volume+0x6c>
   1633e:	0741      	lsls	r1, r0, #29
   16340:	f100 80cc 	bmi.w	164dc <find_volume+0x204>
   16344:	4620      	mov	r0, r4
   16346:	2100      	movs	r1, #0
   16348:	f7ff ffa0 	bl	1628c <check_fs>
   1634c:	2801      	cmp	r0, #1
   1634e:	d11c      	bne.n	1638a <find_volume+0xb2>
   16350:	1d22      	adds	r2, r4, #4
   16352:	2300      	movs	r3, #0
   16354:	f892 11f2 	ldrb.w	r1, [r2, #498]	; 0x1f2
   16358:	b109      	cbz	r1, 1635e <find_volume+0x86>
   1635a:	f8d2 11f6 	ldr.w	r1, [r2, #502]	; 0x1f6
   1635e:	f84d 1003 	str.w	r1, [sp, r3]
   16362:	3304      	adds	r3, #4
   16364:	2b10      	cmp	r3, #16
   16366:	f102 0210 	add.w	r2, r2, #16
   1636a:	d1f3      	bne.n	16354 <find_volume+0x7c>
   1636c:	2600      	movs	r6, #0
   1636e:	f85d 5006 	ldr.w	r5, [sp, r6]
   16372:	b12d      	cbz	r5, 16380 <find_volume+0xa8>
   16374:	4620      	mov	r0, r4
   16376:	4629      	mov	r1, r5
   16378:	f7ff ff88 	bl	1628c <check_fs>
   1637c:	b908      	cbnz	r0, 16382 <find_volume+0xaa>
   1637e:	e00b      	b.n	16398 <find_volume+0xc0>
   16380:	2002      	movs	r0, #2
   16382:	3604      	adds	r6, #4
   16384:	2e10      	cmp	r6, #16
   16386:	d1f2      	bne.n	1636e <find_volume+0x96>
   16388:	e000      	b.n	1638c <find_volume+0xb4>
   1638a:	2500      	movs	r5, #0
   1638c:	2803      	cmp	r0, #3
   1638e:	f000 80a7 	beq.w	164e0 <find_volume+0x208>
   16392:	b108      	cbz	r0, 16398 <find_volume+0xc0>
   16394:	200d      	movs	r0, #13
   16396:	e0a4      	b.n	164e2 <find_volume+0x20a>
   16398:	f8b4 303f 	ldrh.w	r3, [r4, #63]	; 0x3f
   1639c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   163a0:	d1f8      	bne.n	16394 <find_volume+0xbc>
   163a2:	f8b4 304a 	ldrh.w	r3, [r4, #74]	; 0x4a
   163a6:	b903      	cbnz	r3, 163aa <find_volume+0xd2>
   163a8:	6da3      	ldr	r3, [r4, #88]	; 0x58
   163aa:	f894 6044 	ldrb.w	r6, [r4, #68]	; 0x44
   163ae:	61e3      	str	r3, [r4, #28]
   163b0:	1e72      	subs	r2, r6, #1
   163b2:	2a01      	cmp	r2, #1
   163b4:	70e6      	strb	r6, [r4, #3]
   163b6:	d8ed      	bhi.n	16394 <find_volume+0xbc>
   163b8:	f894 0041 	ldrb.w	r0, [r4, #65]	; 0x41
   163bc:	70a0      	strb	r0, [r4, #2]
   163be:	2800      	cmp	r0, #0
   163c0:	d0e8      	beq.n	16394 <find_volume+0xbc>
   163c2:	1e42      	subs	r2, r0, #1
   163c4:	4202      	tst	r2, r0
   163c6:	d1e5      	bne.n	16394 <find_volume+0xbc>
   163c8:	f8b4 1045 	ldrh.w	r1, [r4, #69]	; 0x45
   163cc:	070a      	lsls	r2, r1, #28
   163ce:	8121      	strh	r1, [r4, #8]
   163d0:	d1e0      	bne.n	16394 <find_volume+0xbc>
   163d2:	f8b4 2047 	ldrh.w	r2, [r4, #71]	; 0x47
   163d6:	b902      	cbnz	r2, 163da <find_volume+0x102>
   163d8:	6d62      	ldr	r2, [r4, #84]	; 0x54
   163da:	f8b4 c042 	ldrh.w	ip, [r4, #66]	; 0x42
   163de:	f1bc 0f00 	cmp.w	ip, #0
   163e2:	d0d7      	beq.n	16394 <find_volume+0xbc>
   163e4:	fb06 f803 	mul.w	r8, r6, r3
   163e8:	eb0c 1711 	add.w	r7, ip, r1, lsr #4
   163ec:	4447      	add	r7, r8
   163ee:	42ba      	cmp	r2, r7
   163f0:	d3d0      	bcc.n	16394 <find_volume+0xbc>
   163f2:	1bd2      	subs	r2, r2, r7
   163f4:	fbb2 f2f0 	udiv	r2, r2, r0
   163f8:	2a00      	cmp	r2, #0
   163fa:	d0cb      	beq.n	16394 <find_volume+0xbc>
   163fc:	f640 70f5 	movw	r0, #4085	; 0xff5
   16400:	4282      	cmp	r2, r0
   16402:	d906      	bls.n	16412 <find_volume+0x13a>
   16404:	f64f 76f5 	movw	r6, #65525	; 0xfff5
   16408:	42b2      	cmp	r2, r6
   1640a:	bf8c      	ite	hi
   1640c:	2603      	movhi	r6, #3
   1640e:	2602      	movls	r6, #2
   16410:	e000      	b.n	16414 <find_volume+0x13c>
   16412:	2601      	movs	r6, #1
   16414:	3202      	adds	r2, #2
   16416:	eb05 000c 	add.w	r0, r5, ip
   1641a:	442f      	add	r7, r5
   1641c:	2e03      	cmp	r6, #3
   1641e:	61a2      	str	r2, [r4, #24]
   16420:	6225      	str	r5, [r4, #32]
   16422:	6260      	str	r0, [r4, #36]	; 0x24
   16424:	62e7      	str	r7, [r4, #44]	; 0x2c
   16426:	d105      	bne.n	16434 <find_volume+0x15c>
   16428:	2900      	cmp	r1, #0
   1642a:	d1b3      	bne.n	16394 <find_volume+0xbc>
   1642c:	6e21      	ldr	r1, [r4, #96]	; 0x60
   1642e:	0092      	lsls	r2, r2, #2
   16430:	62a1      	str	r1, [r4, #40]	; 0x28
   16432:	e00f      	b.n	16454 <find_volume+0x17c>
   16434:	2900      	cmp	r1, #0
   16436:	d0ad      	beq.n	16394 <find_volume+0xbc>
   16438:	2e02      	cmp	r6, #2
   1643a:	ea4f 0142 	mov.w	r1, r2, lsl #1
   1643e:	bf18      	it	ne
   16440:	1889      	addne	r1, r1, r2
   16442:	4440      	add	r0, r8
   16444:	bf18      	it	ne
   16446:	f002 0201 	andne.w	r2, r2, #1
   1644a:	62a0      	str	r0, [r4, #40]	; 0x28
   1644c:	bf0c      	ite	eq
   1644e:	460a      	moveq	r2, r1
   16450:	eb02 0251 	addne.w	r2, r2, r1, lsr #1
   16454:	f202 12ff 	addw	r2, r2, #511	; 0x1ff
   16458:	ebb3 2f52 	cmp.w	r3, r2, lsr #9
   1645c:	d39a      	bcc.n	16394 <find_volume+0xbc>
   1645e:	f04f 33ff 	mov.w	r3, #4294967295
   16462:	6163      	str	r3, [r4, #20]
   16464:	6123      	str	r3, [r4, #16]
   16466:	2e03      	cmp	r6, #3
   16468:	f04f 0380 	mov.w	r3, #128	; 0x80
   1646c:	7163      	strb	r3, [r4, #5]
   1646e:	d122      	bne.n	164b6 <find_volume+0x1de>
   16470:	f8b4 3064 	ldrh.w	r3, [r4, #100]	; 0x64
   16474:	2b01      	cmp	r3, #1
   16476:	d11e      	bne.n	164b6 <find_volume+0x1de>
   16478:	4620      	mov	r0, r4
   1647a:	1c69      	adds	r1, r5, #1
   1647c:	f7ff feec 	bl	16258 <move_window>
   16480:	b9c8      	cbnz	r0, 164b6 <find_volume+0x1de>
   16482:	f8b4 2232 	ldrh.w	r2, [r4, #562]	; 0x232
   16486:	f64a 2355 	movw	r3, #43605	; 0xaa55
   1648a:	429a      	cmp	r2, r3
   1648c:	7160      	strb	r0, [r4, #5]
   1648e:	d112      	bne.n	164b6 <find_volume+0x1de>
   16490:	6b63      	ldr	r3, [r4, #52]	; 0x34
   16492:	4a16      	ldr	r2, [pc, #88]	; (164ec <find_volume+0x214>)
   16494:	4293      	cmp	r3, r2
   16496:	d10e      	bne.n	164b6 <find_volume+0x1de>
   16498:	f102 52ff 	add.w	r2, r2, #534773760	; 0x1fe00000
   1649c:	f8d4 3218 	ldr.w	r3, [r4, #536]	; 0x218
   164a0:	f502 5200 	add.w	r2, r2, #8192	; 0x2000
   164a4:	3220      	adds	r2, #32
   164a6:	4293      	cmp	r3, r2
   164a8:	d105      	bne.n	164b6 <find_volume+0x1de>
   164aa:	f8d4 321c 	ldr.w	r3, [r4, #540]	; 0x21c
   164ae:	6163      	str	r3, [r4, #20]
   164b0:	f8d4 3220 	ldr.w	r3, [r4, #544]	; 0x220
   164b4:	6123      	str	r3, [r4, #16]
   164b6:	4a0e      	ldr	r2, [pc, #56]	; (164f0 <find_volume+0x218>)
   164b8:	7026      	strb	r6, [r4, #0]
   164ba:	8813      	ldrh	r3, [r2, #0]
   164bc:	2000      	movs	r0, #0
   164be:	3301      	adds	r3, #1
   164c0:	b29b      	uxth	r3, r3
   164c2:	8013      	strh	r3, [r2, #0]
   164c4:	80e3      	strh	r3, [r4, #6]
   164c6:	e00c      	b.n	164e2 <find_volume+0x20a>
   164c8:	200b      	movs	r0, #11
   164ca:	e00a      	b.n	164e2 <find_volume+0x20a>
   164cc:	200c      	movs	r0, #12
   164ce:	e008      	b.n	164e2 <find_volume+0x20a>
   164d0:	200f      	movs	r0, #15
   164d2:	e006      	b.n	164e2 <find_volume+0x20a>
   164d4:	4628      	mov	r0, r5
   164d6:	e004      	b.n	164e2 <find_volume+0x20a>
   164d8:	2003      	movs	r0, #3
   164da:	e002      	b.n	164e2 <find_volume+0x20a>
   164dc:	200a      	movs	r0, #10
   164de:	e000      	b.n	164e2 <find_volume+0x20a>
   164e0:	2001      	movs	r0, #1
   164e2:	b004      	add	sp, #16
   164e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   164e8:	2007c954 	.word	0x2007c954
   164ec:	41615252 	.word	0x41615252
   164f0:	2007c950 	.word	0x2007c950

000164f4 <validate>:
validate():
   164f4:	b510      	push	{r4, lr}
   164f6:	4604      	mov	r4, r0
   164f8:	b1a8      	cbz	r0, 16526 <validate+0x32>
   164fa:	6803      	ldr	r3, [r0, #0]
   164fc:	b19b      	cbz	r3, 16526 <validate+0x32>
   164fe:	781a      	ldrb	r2, [r3, #0]
   16500:	b18a      	cbz	r2, 16526 <validate+0x32>
   16502:	88d9      	ldrh	r1, [r3, #6]
   16504:	8882      	ldrh	r2, [r0, #4]
   16506:	4291      	cmp	r1, r2
   16508:	d10d      	bne.n	16526 <validate+0x32>
   1650a:	68d8      	ldr	r0, [r3, #12]
   1650c:	f7fe fe94 	bl	15238 <ff_req_grant>
   16510:	b158      	cbz	r0, 1652a <validate+0x36>
   16512:	6823      	ldr	r3, [r4, #0]
   16514:	7858      	ldrb	r0, [r3, #1]
   16516:	f7fe fec4 	bl	152a2 <disk_status>
   1651a:	f010 0f01 	tst.w	r0, #1
   1651e:	bf0c      	ite	eq
   16520:	2000      	moveq	r0, #0
   16522:	2003      	movne	r0, #3
   16524:	bd10      	pop	{r4, pc}
   16526:	2009      	movs	r0, #9
   16528:	bd10      	pop	{r4, pc}
   1652a:	200f      	movs	r0, #15
   1652c:	bd10      	pop	{r4, pc}

0001652e <unlock_fs>:
unlock_fs():
   1652e:	b150      	cbz	r0, 16546 <unlock_fs+0x18>
   16530:	f1a1 030b 	sub.w	r3, r1, #11
   16534:	2b01      	cmp	r3, #1
   16536:	d906      	bls.n	16546 <unlock_fs+0x18>
   16538:	2909      	cmp	r1, #9
   1653a:	d004      	beq.n	16546 <unlock_fs+0x18>
   1653c:	290f      	cmp	r1, #15
   1653e:	d002      	beq.n	16546 <unlock_fs+0x18>
   16540:	68c0      	ldr	r0, [r0, #12]
   16542:	f7fe be8c 	b.w	1525e <ff_rel_grant>
   16546:	4770      	bx	lr

00016548 <clust2sect>:
clust2sect():
   16548:	6983      	ldr	r3, [r0, #24]
   1654a:	3902      	subs	r1, #2
   1654c:	3b02      	subs	r3, #2
   1654e:	4299      	cmp	r1, r3
   16550:	bf3d      	ittte	cc
   16552:	7882      	ldrbcc	r2, [r0, #2]
   16554:	6ac3      	ldrcc	r3, [r0, #44]	; 0x2c
   16556:	fb02 3001 	mlacc	r0, r2, r1, r3
   1655a:	2000      	movcs	r0, #0
   1655c:	4770      	bx	lr

0001655e <get_fat>:
get_fat():
   1655e:	2901      	cmp	r1, #1
   16560:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   16562:	4604      	mov	r4, r0
   16564:	460d      	mov	r5, r1
   16566:	d94b      	bls.n	16600 <get_fat+0xa2>
   16568:	6983      	ldr	r3, [r0, #24]
   1656a:	4299      	cmp	r1, r3
   1656c:	d248      	bcs.n	16600 <get_fat+0xa2>
   1656e:	7803      	ldrb	r3, [r0, #0]
   16570:	2b02      	cmp	r3, #2
   16572:	d029      	beq.n	165c8 <get_fat+0x6a>
   16574:	2b03      	cmp	r3, #3
   16576:	d034      	beq.n	165e2 <get_fat+0x84>
   16578:	2b01      	cmp	r3, #1
   1657a:	d141      	bne.n	16600 <get_fat+0xa2>
   1657c:	eb01 0651 	add.w	r6, r1, r1, lsr #1
   16580:	6a41      	ldr	r1, [r0, #36]	; 0x24
   16582:	eb01 2156 	add.w	r1, r1, r6, lsr #9
   16586:	f7ff fe67 	bl	16258 <move_window>
   1658a:	b110      	cbz	r0, 16592 <get_fat+0x34>
   1658c:	f04f 30ff 	mov.w	r0, #4294967295
   16590:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   16592:	6a61      	ldr	r1, [r4, #36]	; 0x24
   16594:	f3c6 0308 	ubfx	r3, r6, #0, #9
   16598:	3601      	adds	r6, #1
   1659a:	4423      	add	r3, r4
   1659c:	4620      	mov	r0, r4
   1659e:	eb01 2156 	add.w	r1, r1, r6, lsr #9
   165a2:	f893 7034 	ldrb.w	r7, [r3, #52]	; 0x34
   165a6:	f7ff fe57 	bl	16258 <move_window>
   165aa:	2800      	cmp	r0, #0
   165ac:	d1ee      	bne.n	1658c <get_fat+0x2e>
   165ae:	f3c6 0608 	ubfx	r6, r6, #0, #9
   165b2:	4434      	add	r4, r6
   165b4:	f894 0034 	ldrb.w	r0, [r4, #52]	; 0x34
   165b8:	07eb      	lsls	r3, r5, #31
   165ba:	ea47 2000 	orr.w	r0, r7, r0, lsl #8
   165be:	bf4c      	ite	mi
   165c0:	0900      	lsrmi	r0, r0, #4
   165c2:	f3c0 000b 	ubfxpl	r0, r0, #0, #12
   165c6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   165c8:	6a41      	ldr	r1, [r0, #36]	; 0x24
   165ca:	eb01 2115 	add.w	r1, r1, r5, lsr #8
   165ce:	f7ff fe43 	bl	16258 <move_window>
   165d2:	2800      	cmp	r0, #0
   165d4:	d1da      	bne.n	1658c <get_fat+0x2e>
   165d6:	006d      	lsls	r5, r5, #1
   165d8:	f405 75ff 	and.w	r5, r5, #510	; 0x1fe
   165dc:	442c      	add	r4, r5
   165de:	8ea0      	ldrh	r0, [r4, #52]	; 0x34
   165e0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   165e2:	6a41      	ldr	r1, [r0, #36]	; 0x24
   165e4:	eb01 11d5 	add.w	r1, r1, r5, lsr #7
   165e8:	f7ff fe36 	bl	16258 <move_window>
   165ec:	2800      	cmp	r0, #0
   165ee:	d1cd      	bne.n	1658c <get_fat+0x2e>
   165f0:	00ad      	lsls	r5, r5, #2
   165f2:	f405 75fe 	and.w	r5, r5, #508	; 0x1fc
   165f6:	442c      	add	r4, r5
   165f8:	6b60      	ldr	r0, [r4, #52]	; 0x34
   165fa:	f020 4070 	bic.w	r0, r0, #4026531840	; 0xf0000000
   165fe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   16600:	2001      	movs	r0, #1
   16602:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00016604 <dir_sdi>:
dir_sdi():
   16604:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   16606:	6884      	ldr	r4, [r0, #8]
   16608:	4605      	mov	r5, r0
   1660a:	2c01      	cmp	r4, #1
   1660c:	460e      	mov	r6, r1
   1660e:	80e9      	strh	r1, [r5, #6]
   16610:	d101      	bne.n	16616 <dir_sdi+0x12>
   16612:	2002      	movs	r0, #2
   16614:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   16616:	6803      	ldr	r3, [r0, #0]
   16618:	699a      	ldr	r2, [r3, #24]
   1661a:	4294      	cmp	r4, r2
   1661c:	d2f9      	bcs.n	16612 <dir_sdi+0xe>
   1661e:	b954      	cbnz	r4, 16636 <dir_sdi+0x32>
   16620:	781a      	ldrb	r2, [r3, #0]
   16622:	2a03      	cmp	r2, #3
   16624:	d101      	bne.n	1662a <dir_sdi+0x26>
   16626:	6a9a      	ldr	r2, [r3, #40]	; 0x28
   16628:	b922      	cbnz	r2, 16634 <dir_sdi+0x30>
   1662a:	891a      	ldrh	r2, [r3, #8]
   1662c:	4296      	cmp	r6, r2
   1662e:	d2f0      	bcs.n	16612 <dir_sdi+0xe>
   16630:	6a98      	ldr	r0, [r3, #40]	; 0x28
   16632:	e015      	b.n	16660 <dir_sdi+0x5c>
   16634:	4614      	mov	r4, r2
   16636:	789f      	ldrb	r7, [r3, #2]
   16638:	013f      	lsls	r7, r7, #4
   1663a:	42be      	cmp	r6, r7
   1663c:	6828      	ldr	r0, [r5, #0]
   1663e:	4621      	mov	r1, r4
   16640:	d30c      	bcc.n	1665c <dir_sdi+0x58>
   16642:	f7ff ff8c 	bl	1655e <get_fat>
   16646:	1c43      	adds	r3, r0, #1
   16648:	4604      	mov	r4, r0
   1664a:	d018      	beq.n	1667e <dir_sdi+0x7a>
   1664c:	2801      	cmp	r0, #1
   1664e:	d9e0      	bls.n	16612 <dir_sdi+0xe>
   16650:	682b      	ldr	r3, [r5, #0]
   16652:	699b      	ldr	r3, [r3, #24]
   16654:	4298      	cmp	r0, r3
   16656:	d2dc      	bcs.n	16612 <dir_sdi+0xe>
   16658:	1bf6      	subs	r6, r6, r7
   1665a:	e7ee      	b.n	1663a <dir_sdi+0x36>
   1665c:	f7ff ff74 	bl	16548 <clust2sect>
   16660:	60ec      	str	r4, [r5, #12]
   16662:	2800      	cmp	r0, #0
   16664:	d0d5      	beq.n	16612 <dir_sdi+0xe>
   16666:	682b      	ldr	r3, [r5, #0]
   16668:	eb00 1016 	add.w	r0, r0, r6, lsr #4
   1666c:	f006 060f 	and.w	r6, r6, #15
   16670:	eb03 1346 	add.w	r3, r3, r6, lsl #5
   16674:	3334      	adds	r3, #52	; 0x34
   16676:	6128      	str	r0, [r5, #16]
   16678:	616b      	str	r3, [r5, #20]
   1667a:	2000      	movs	r0, #0
   1667c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1667e:	2001      	movs	r0, #1
   16680:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00016682 <put_fat>:
put_fat():
   16682:	2901      	cmp	r1, #1
   16684:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   16686:	4604      	mov	r4, r0
   16688:	460d      	mov	r5, r1
   1668a:	4616      	mov	r6, r2
   1668c:	d95e      	bls.n	1674c <put_fat+0xca>
   1668e:	6983      	ldr	r3, [r0, #24]
   16690:	4299      	cmp	r1, r3
   16692:	d25b      	bcs.n	1674c <put_fat+0xca>
   16694:	7803      	ldrb	r3, [r0, #0]
   16696:	2b02      	cmp	r3, #2
   16698:	d037      	beq.n	1670a <put_fat+0x88>
   1669a:	2b03      	cmp	r3, #3
   1669c:	d041      	beq.n	16722 <put_fat+0xa0>
   1669e:	2b01      	cmp	r3, #1
   166a0:	d150      	bne.n	16744 <put_fat+0xc2>
   166a2:	eb01 0751 	add.w	r7, r1, r1, lsr #1
   166a6:	6a41      	ldr	r1, [r0, #36]	; 0x24
   166a8:	eb01 2157 	add.w	r1, r1, r7, lsr #9
   166ac:	f7ff fdd4 	bl	16258 <move_window>
   166b0:	2800      	cmp	r0, #0
   166b2:	d148      	bne.n	16746 <put_fat+0xc4>
   166b4:	f3c7 0308 	ubfx	r3, r7, #0, #9
   166b8:	f015 0501 	ands.w	r5, r5, #1
   166bc:	4423      	add	r3, r4
   166be:	b2f2      	uxtb	r2, r6
   166c0:	d006      	beq.n	166d0 <put_fat+0x4e>
   166c2:	f893 1034 	ldrb.w	r1, [r3, #52]	; 0x34
   166c6:	f001 010f 	and.w	r1, r1, #15
   166ca:	ea41 1202 	orr.w	r2, r1, r2, lsl #4
   166ce:	b2d2      	uxtb	r2, r2
   166d0:	6a61      	ldr	r1, [r4, #36]	; 0x24
   166d2:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
   166d6:	3701      	adds	r7, #1
   166d8:	2301      	movs	r3, #1
   166da:	7123      	strb	r3, [r4, #4]
   166dc:	4620      	mov	r0, r4
   166de:	eb01 2157 	add.w	r1, r1, r7, lsr #9
   166e2:	f7ff fdb9 	bl	16258 <move_window>
   166e6:	bb70      	cbnz	r0, 16746 <put_fat+0xc4>
   166e8:	f3c7 0708 	ubfx	r7, r7, #0, #9
   166ec:	4427      	add	r7, r4
   166ee:	b115      	cbz	r5, 166f6 <put_fat+0x74>
   166f0:	f3c6 1607 	ubfx	r6, r6, #4, #8
   166f4:	e006      	b.n	16704 <put_fat+0x82>
   166f6:	f897 3034 	ldrb.w	r3, [r7, #52]	; 0x34
   166fa:	f3c6 2603 	ubfx	r6, r6, #8, #4
   166fe:	f023 030f 	bic.w	r3, r3, #15
   16702:	431e      	orrs	r6, r3
   16704:	f887 6034 	strb.w	r6, [r7, #52]	; 0x34
   16708:	e01d      	b.n	16746 <put_fat+0xc4>
   1670a:	6a41      	ldr	r1, [r0, #36]	; 0x24
   1670c:	eb01 2115 	add.w	r1, r1, r5, lsr #8
   16710:	f7ff fda2 	bl	16258 <move_window>
   16714:	b9b8      	cbnz	r0, 16746 <put_fat+0xc4>
   16716:	006d      	lsls	r5, r5, #1
   16718:	f405 75ff 	and.w	r5, r5, #510	; 0x1fe
   1671c:	4425      	add	r5, r4
   1671e:	86ae      	strh	r6, [r5, #52]	; 0x34
   16720:	e011      	b.n	16746 <put_fat+0xc4>
   16722:	6a41      	ldr	r1, [r0, #36]	; 0x24
   16724:	eb01 11d5 	add.w	r1, r1, r5, lsr #7
   16728:	f7ff fd96 	bl	16258 <move_window>
   1672c:	b958      	cbnz	r0, 16746 <put_fat+0xc4>
   1672e:	00ad      	lsls	r5, r5, #2
   16730:	f405 75fe 	and.w	r5, r5, #508	; 0x1fc
   16734:	3530      	adds	r5, #48	; 0x30
   16736:	4425      	add	r5, r4
   16738:	686b      	ldr	r3, [r5, #4]
   1673a:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
   1673e:	431e      	orrs	r6, r3
   16740:	606e      	str	r6, [r5, #4]
   16742:	e000      	b.n	16746 <put_fat+0xc4>
   16744:	2002      	movs	r0, #2
   16746:	2301      	movs	r3, #1
   16748:	7123      	strb	r3, [r4, #4]
   1674a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1674c:	2002      	movs	r0, #2
   1674e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00016750 <create_chain>:
create_chain():
   16750:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   16752:	4604      	mov	r4, r0
   16754:	460f      	mov	r7, r1
   16756:	b931      	cbnz	r1, 16766 <create_chain+0x16>
   16758:	6906      	ldr	r6, [r0, #16]
   1675a:	b196      	cbz	r6, 16782 <create_chain+0x32>
   1675c:	6983      	ldr	r3, [r0, #24]
   1675e:	429e      	cmp	r6, r3
   16760:	bf28      	it	cs
   16762:	2601      	movcs	r6, #1
   16764:	e00e      	b.n	16784 <create_chain+0x34>
   16766:	f7ff fefa 	bl	1655e <get_fat>
   1676a:	2801      	cmp	r0, #1
   1676c:	d93f      	bls.n	167ee <create_chain+0x9e>
   1676e:	1c45      	adds	r5, r0, #1
   16770:	d102      	bne.n	16778 <create_chain+0x28>
   16772:	f04f 30ff 	mov.w	r0, #4294967295
   16776:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   16778:	69a3      	ldr	r3, [r4, #24]
   1677a:	4298      	cmp	r0, r3
   1677c:	d338      	bcc.n	167f0 <create_chain+0xa0>
   1677e:	463e      	mov	r6, r7
   16780:	e000      	b.n	16784 <create_chain+0x34>
   16782:	2601      	movs	r6, #1
   16784:	4635      	mov	r5, r6
   16786:	69a3      	ldr	r3, [r4, #24]
   16788:	3501      	adds	r5, #1
   1678a:	429d      	cmp	r5, r3
   1678c:	d304      	bcc.n	16798 <create_chain+0x48>
   1678e:	2e01      	cmp	r6, #1
   16790:	d801      	bhi.n	16796 <create_chain+0x46>
   16792:	2000      	movs	r0, #0
   16794:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   16796:	2502      	movs	r5, #2
   16798:	4620      	mov	r0, r4
   1679a:	4629      	mov	r1, r5
   1679c:	f7ff fedf 	bl	1655e <get_fat>
   167a0:	b130      	cbz	r0, 167b0 <create_chain+0x60>
   167a2:	1c41      	adds	r1, r0, #1
   167a4:	d0e5      	beq.n	16772 <create_chain+0x22>
   167a6:	2801      	cmp	r0, #1
   167a8:	d021      	beq.n	167ee <create_chain+0x9e>
   167aa:	42b5      	cmp	r5, r6
   167ac:	d1eb      	bne.n	16786 <create_chain+0x36>
   167ae:	e7f0      	b.n	16792 <create_chain+0x42>
   167b0:	4620      	mov	r0, r4
   167b2:	4629      	mov	r1, r5
   167b4:	f06f 4270 	mvn.w	r2, #4026531840	; 0xf0000000
   167b8:	f7ff ff63 	bl	16682 <put_fat>
   167bc:	b9a8      	cbnz	r0, 167ea <create_chain+0x9a>
   167be:	b957      	cbnz	r7, 167d6 <create_chain+0x86>
   167c0:	6963      	ldr	r3, [r4, #20]
   167c2:	6125      	str	r5, [r4, #16]
   167c4:	1c5a      	adds	r2, r3, #1
   167c6:	d00e      	beq.n	167e6 <create_chain+0x96>
   167c8:	3b01      	subs	r3, #1
   167ca:	6163      	str	r3, [r4, #20]
   167cc:	7963      	ldrb	r3, [r4, #5]
   167ce:	f043 0301 	orr.w	r3, r3, #1
   167d2:	7163      	strb	r3, [r4, #5]
   167d4:	e007      	b.n	167e6 <create_chain+0x96>
   167d6:	4620      	mov	r0, r4
   167d8:	4639      	mov	r1, r7
   167da:	462a      	mov	r2, r5
   167dc:	f7ff ff51 	bl	16682 <put_fat>
   167e0:	2800      	cmp	r0, #0
   167e2:	d0ed      	beq.n	167c0 <create_chain+0x70>
   167e4:	e001      	b.n	167ea <create_chain+0x9a>
   167e6:	4628      	mov	r0, r5
   167e8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   167ea:	2801      	cmp	r0, #1
   167ec:	d0c1      	beq.n	16772 <create_chain+0x22>
   167ee:	2001      	movs	r0, #1
   167f0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

000167f2 <dir_next>:
dir_next():
   167f2:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   167f6:	88c6      	ldrh	r6, [r0, #6]
   167f8:	4604      	mov	r4, r0
   167fa:	3601      	adds	r6, #1
   167fc:	b2b3      	uxth	r3, r6
   167fe:	460f      	mov	r7, r1
   16800:	b913      	cbnz	r3, 16808 <dir_next+0x16>
   16802:	2004      	movs	r0, #4
   16804:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   16808:	6903      	ldr	r3, [r0, #16]
   1680a:	2b00      	cmp	r3, #0
   1680c:	d0f9      	beq.n	16802 <dir_next+0x10>
   1680e:	f016 080f 	ands.w	r8, r6, #15
   16812:	d159      	bne.n	168c8 <dir_next+0xd6>
   16814:	68c1      	ldr	r1, [r0, #12]
   16816:	3301      	adds	r3, #1
   16818:	6103      	str	r3, [r0, #16]
   1681a:	6800      	ldr	r0, [r0, #0]
   1681c:	b919      	cbnz	r1, 16826 <dir_next+0x34>
   1681e:	8903      	ldrh	r3, [r0, #8]
   16820:	429e      	cmp	r6, r3
   16822:	d2ee      	bcs.n	16802 <dir_next+0x10>
   16824:	e050      	b.n	168c8 <dir_next+0xd6>
   16826:	7882      	ldrb	r2, [r0, #2]
   16828:	3a01      	subs	r2, #1
   1682a:	ea12 1216 	ands.w	r2, r2, r6, lsr #4
   1682e:	d14b      	bne.n	168c8 <dir_next+0xd6>
   16830:	f7ff fe95 	bl	1655e <get_fat>
   16834:	2801      	cmp	r0, #1
   16836:	4605      	mov	r5, r0
   16838:	d802      	bhi.n	16840 <dir_next+0x4e>
   1683a:	2002      	movs	r0, #2
   1683c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   16840:	1c42      	adds	r2, r0, #1
   16842:	d102      	bne.n	1684a <dir_next+0x58>
   16844:	2001      	movs	r0, #1
   16846:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   1684a:	6820      	ldr	r0, [r4, #0]
   1684c:	6983      	ldr	r3, [r0, #24]
   1684e:	429d      	cmp	r5, r3
   16850:	d334      	bcc.n	168bc <dir_next+0xca>
   16852:	2f00      	cmp	r7, #0
   16854:	d0d5      	beq.n	16802 <dir_next+0x10>
   16856:	68e1      	ldr	r1, [r4, #12]
   16858:	f7ff ff7a 	bl	16750 <create_chain>
   1685c:	4605      	mov	r5, r0
   1685e:	2800      	cmp	r0, #0
   16860:	d03b      	beq.n	168da <dir_next+0xe8>
   16862:	2801      	cmp	r0, #1
   16864:	d0e9      	beq.n	1683a <dir_next+0x48>
   16866:	1c43      	adds	r3, r0, #1
   16868:	d0ec      	beq.n	16844 <dir_next+0x52>
   1686a:	6820      	ldr	r0, [r4, #0]
   1686c:	f7ff fc92 	bl	16194 <sync_window>
   16870:	4607      	mov	r7, r0
   16872:	2800      	cmp	r0, #0
   16874:	d1e6      	bne.n	16844 <dir_next+0x52>
   16876:	6820      	ldr	r0, [r4, #0]
   16878:	4639      	mov	r1, r7
   1687a:	3034      	adds	r0, #52	; 0x34
   1687c:	f44f 7200 	mov.w	r2, #512	; 0x200
   16880:	f7ff fbfa 	bl	16078 <mem_set>
   16884:	f8d4 9000 	ldr.w	r9, [r4]
   16888:	4629      	mov	r1, r5
   1688a:	4648      	mov	r0, r9
   1688c:	f7ff fe5c 	bl	16548 <clust2sect>
   16890:	f8c9 0030 	str.w	r0, [r9, #48]	; 0x30
   16894:	6823      	ldr	r3, [r4, #0]
   16896:	789a      	ldrb	r2, [r3, #2]
   16898:	4297      	cmp	r7, r2
   1689a:	d20c      	bcs.n	168b6 <dir_next+0xc4>
   1689c:	2201      	movs	r2, #1
   1689e:	711a      	strb	r2, [r3, #4]
   168a0:	6820      	ldr	r0, [r4, #0]
   168a2:	f7ff fc77 	bl	16194 <sync_window>
   168a6:	2800      	cmp	r0, #0
   168a8:	d1cc      	bne.n	16844 <dir_next+0x52>
   168aa:	6823      	ldr	r3, [r4, #0]
   168ac:	3701      	adds	r7, #1
   168ae:	6b1a      	ldr	r2, [r3, #48]	; 0x30
   168b0:	3201      	adds	r2, #1
   168b2:	631a      	str	r2, [r3, #48]	; 0x30
   168b4:	e7ee      	b.n	16894 <dir_next+0xa2>
   168b6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
   168b8:	1bd7      	subs	r7, r2, r7
   168ba:	631f      	str	r7, [r3, #48]	; 0x30
   168bc:	60e5      	str	r5, [r4, #12]
   168be:	6820      	ldr	r0, [r4, #0]
   168c0:	4629      	mov	r1, r5
   168c2:	f7ff fe41 	bl	16548 <clust2sect>
   168c6:	6120      	str	r0, [r4, #16]
   168c8:	6823      	ldr	r3, [r4, #0]
   168ca:	80e6      	strh	r6, [r4, #6]
   168cc:	eb03 1348 	add.w	r3, r3, r8, lsl #5
   168d0:	3334      	adds	r3, #52	; 0x34
   168d2:	6163      	str	r3, [r4, #20]
   168d4:	2000      	movs	r0, #0
   168d6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   168da:	2007      	movs	r0, #7
   168dc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

000168e0 <dir_find.part.9>:
dir_find.part.9():
   168e0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   168e4:	f64f 73ff 	movw	r3, #65535	; 0xffff
   168e8:	f04f 08ff 	mov.w	r8, #255	; 0xff
   168ec:	4604      	mov	r4, r0
   168ee:	8403      	strh	r3, [r0, #32]
   168f0:	4645      	mov	r5, r8
   168f2:	6820      	ldr	r0, [r4, #0]
   168f4:	6921      	ldr	r1, [r4, #16]
   168f6:	f7ff fcaf 	bl	16258 <move_window>
   168fa:	4607      	mov	r7, r0
   168fc:	2800      	cmp	r0, #0
   168fe:	d17c      	bne.n	169fa <dir_find.part.9+0x11a>
   16900:	6966      	ldr	r6, [r4, #20]
   16902:	7833      	ldrb	r3, [r6, #0]
   16904:	2b00      	cmp	r3, #0
   16906:	d073      	beq.n	169f0 <dir_find.part.9+0x110>
   16908:	2be5      	cmp	r3, #229	; 0xe5
   1690a:	7af1      	ldrb	r1, [r6, #11]
   1690c:	d064      	beq.n	169d8 <dir_find.part.9+0xf8>
   1690e:	f001 023f 	and.w	r2, r1, #63	; 0x3f
   16912:	0709      	lsls	r1, r1, #28
   16914:	d502      	bpl.n	1691c <dir_find.part.9+0x3c>
   16916:	2a0f      	cmp	r2, #15
   16918:	d15e      	bne.n	169d8 <dir_find.part.9+0xf8>
   1691a:	e001      	b.n	16920 <dir_find.part.9+0x40>
   1691c:	2a0f      	cmp	r2, #15
   1691e:	d146      	bne.n	169ae <dir_find.part.9+0xce>
   16920:	f8d4 b01c 	ldr.w	fp, [r4, #28]
   16924:	f1bb 0f00 	cmp.w	fp, #0
   16928:	d05a      	beq.n	169e0 <dir_find.part.9+0x100>
   1692a:	065a      	lsls	r2, r3, #25
   1692c:	d506      	bpl.n	1693c <dir_find.part.9+0x5c>
   1692e:	f003 05bf 	and.w	r5, r3, #191	; 0xbf
   16932:	88e3      	ldrh	r3, [r4, #6]
   16934:	f896 800d 	ldrb.w	r8, [r6, #13]
   16938:	8423      	strh	r3, [r4, #32]
   1693a:	e001      	b.n	16940 <dir_find.part.9+0x60>
   1693c:	42ab      	cmp	r3, r5
   1693e:	d14e      	bne.n	169de <dir_find.part.9+0xfe>
   16940:	7b73      	ldrb	r3, [r6, #13]
   16942:	4543      	cmp	r3, r8
   16944:	d14b      	bne.n	169de <dir_find.part.9+0xfe>
   16946:	7837      	ldrb	r7, [r6, #0]
   16948:	230d      	movs	r3, #13
   1694a:	f027 0740 	bic.w	r7, r7, #64	; 0x40
   1694e:	3f01      	subs	r7, #1
   16950:	435f      	muls	r7, r3
   16952:	f04f 0901 	mov.w	r9, #1
   16956:	f04f 0a00 	mov.w	sl, #0
   1695a:	4b2a      	ldr	r3, [pc, #168]	; (16a04 <dir_find.part.9+0x124>)
   1695c:	f81a 3003 	ldrb.w	r3, [sl, r3]
   16960:	5af0      	ldrh	r0, [r6, r3]
   16962:	f1b9 0f00 	cmp.w	r9, #0
   16966:	d00f      	beq.n	16988 <dir_find.part.9+0xa8>
   16968:	f7fe fc48 	bl	151fc <ff_wtoupper>
   1696c:	2f7f      	cmp	r7, #127	; 0x7f
   1696e:	4681      	mov	r9, r0
   16970:	d835      	bhi.n	169de <dir_find.part.9+0xfe>
   16972:	1c7b      	adds	r3, r7, #1
   16974:	f83b 0017 	ldrh.w	r0, [fp, r7, lsl #1]
   16978:	9301      	str	r3, [sp, #4]
   1697a:	f7fe fc3f 	bl	151fc <ff_wtoupper>
   1697e:	4581      	cmp	r9, r0
   16980:	9b01      	ldr	r3, [sp, #4]
   16982:	d12c      	bne.n	169de <dir_find.part.9+0xfe>
   16984:	461f      	mov	r7, r3
   16986:	e003      	b.n	16990 <dir_find.part.9+0xb0>
   16988:	f64f 73ff 	movw	r3, #65535	; 0xffff
   1698c:	4298      	cmp	r0, r3
   1698e:	d126      	bne.n	169de <dir_find.part.9+0xfe>
   16990:	f10a 0a01 	add.w	sl, sl, #1
   16994:	f1ba 0f0d 	cmp.w	sl, #13
   16998:	d1df      	bne.n	1695a <dir_find.part.9+0x7a>
   1699a:	7833      	ldrb	r3, [r6, #0]
   1699c:	065b      	lsls	r3, r3, #25
   1699e:	d529      	bpl.n	169f4 <dir_find.part.9+0x114>
   169a0:	f1b9 0f00 	cmp.w	r9, #0
   169a4:	d026      	beq.n	169f4 <dir_find.part.9+0x114>
   169a6:	f83b 3017 	ldrh.w	r3, [fp, r7, lsl #1]
   169aa:	b31b      	cbz	r3, 169f4 <dir_find.part.9+0x114>
   169ac:	e017      	b.n	169de <dir_find.part.9+0xfe>
   169ae:	b925      	cbnz	r5, 169ba <dir_find.part.9+0xda>
   169b0:	4630      	mov	r0, r6
   169b2:	f7ff fb68 	bl	16086 <sum_sfn>
   169b6:	4580      	cmp	r8, r0
   169b8:	d01f      	beq.n	169fa <dir_find.part.9+0x11a>
   169ba:	69a2      	ldr	r2, [r4, #24]
   169bc:	7ad3      	ldrb	r3, [r2, #11]
   169be:	f013 0301 	ands.w	r3, r3, #1
   169c2:	d109      	bne.n	169d8 <dir_find.part.9+0xf8>
   169c4:	5cf1      	ldrb	r1, [r6, r3]
   169c6:	3301      	adds	r3, #1
   169c8:	18d0      	adds	r0, r2, r3
   169ca:	f810 0c01 	ldrb.w	r0, [r0, #-1]
   169ce:	4288      	cmp	r0, r1
   169d0:	d102      	bne.n	169d8 <dir_find.part.9+0xf8>
   169d2:	2b0b      	cmp	r3, #11
   169d4:	d1f6      	bne.n	169c4 <dir_find.part.9+0xe4>
   169d6:	e010      	b.n	169fa <dir_find.part.9+0x11a>
   169d8:	f64f 73ff 	movw	r3, #65535	; 0xffff
   169dc:	8423      	strh	r3, [r4, #32]
   169de:	25ff      	movs	r5, #255	; 0xff
   169e0:	4620      	mov	r0, r4
   169e2:	2100      	movs	r1, #0
   169e4:	f7ff ff05 	bl	167f2 <dir_next>
   169e8:	4607      	mov	r7, r0
   169ea:	2800      	cmp	r0, #0
   169ec:	d081      	beq.n	168f2 <dir_find.part.9+0x12>
   169ee:	e004      	b.n	169fa <dir_find.part.9+0x11a>
   169f0:	2704      	movs	r7, #4
   169f2:	e002      	b.n	169fa <dir_find.part.9+0x11a>
   169f4:	3d01      	subs	r5, #1
   169f6:	b2ed      	uxtb	r5, r5
   169f8:	e7f2      	b.n	169e0 <dir_find.part.9+0x100>
   169fa:	4638      	mov	r0, r7
   169fc:	b003      	add	sp, #12
   169fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16a02:	bf00      	nop
   16a04:	00026596 	.word	0x00026596

00016a08 <follow_path>:
follow_path():
   16a08:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16a0c:	f991 3000 	ldrsb.w	r3, [r1]
   16a10:	4606      	mov	r6, r0
   16a12:	2b2f      	cmp	r3, #47	; 0x2f
   16a14:	4689      	mov	r9, r1
   16a16:	d001      	beq.n	16a1c <follow_path+0x14>
   16a18:	2b5c      	cmp	r3, #92	; 0x5c
   16a1a:	d101      	bne.n	16a20 <follow_path+0x18>
   16a1c:	f109 0901 	add.w	r9, r9, #1
   16a20:	2400      	movs	r4, #0
   16a22:	60b4      	str	r4, [r6, #8]
   16a24:	f899 3000 	ldrb.w	r3, [r9]
   16a28:	2b1f      	cmp	r3, #31
   16a2a:	d862      	bhi.n	16af2 <follow_path+0xea>
   16a2c:	4630      	mov	r0, r6
   16a2e:	4621      	mov	r1, r4
   16a30:	f7ff fde8 	bl	16604 <dir_sdi>
   16a34:	6174      	str	r4, [r6, #20]
   16a36:	e114      	b.n	16c62 <follow_path+0x25a>
   16a38:	3301      	adds	r3, #1
   16a3a:	f83a 1013 	ldrh.w	r1, [sl, r3, lsl #1]
   16a3e:	2920      	cmp	r1, #32
   16a40:	d0fa      	beq.n	16a38 <follow_path+0x30>
   16a42:	292e      	cmp	r1, #46	; 0x2e
   16a44:	d0f8      	beq.n	16a38 <follow_path+0x30>
   16a46:	b10b      	cbz	r3, 16a4c <follow_path+0x44>
   16a48:	f044 0403 	orr.w	r4, r4, #3
   16a4c:	4642      	mov	r2, r8
   16a4e:	f832 1d02 	ldrh.w	r1, [r2, #-2]!
   16a52:	292e      	cmp	r1, #46	; 0x2e
   16a54:	d001      	beq.n	16a5a <follow_path+0x52>
   16a56:	3d01      	subs	r5, #1
   16a58:	d1f9      	bne.n	16a4e <follow_path+0x46>
   16a5a:	f04f 0b00 	mov.w	fp, #0
   16a5e:	f04f 0808 	mov.w	r8, #8
   16a62:	465f      	mov	r7, fp
   16a64:	1c5a      	adds	r2, r3, #1
   16a66:	f83a 3013 	ldrh.w	r3, [sl, r3, lsl #1]
   16a6a:	2b00      	cmp	r3, #0
   16a6c:	f040 808f 	bne.w	16b8e <follow_path+0x186>
   16a70:	69b3      	ldr	r3, [r6, #24]
   16a72:	781a      	ldrb	r2, [r3, #0]
   16a74:	2ae5      	cmp	r2, #229	; 0xe5
   16a76:	bf04      	itt	eq
   16a78:	2205      	moveq	r2, #5
   16a7a:	701a      	strbeq	r2, [r3, #0]
   16a7c:	f1b8 0f08 	cmp.w	r8, #8
   16a80:	bf04      	itt	eq
   16a82:	00bf      	lsleq	r7, r7, #2
   16a84:	b2ff      	uxtbeq	r7, r7
   16a86:	f007 030c 	and.w	r3, r7, #12
   16a8a:	2b0c      	cmp	r3, #12
   16a8c:	f000 80cd 	beq.w	16c2a <follow_path+0x222>
   16a90:	f007 0203 	and.w	r2, r7, #3
   16a94:	2a03      	cmp	r2, #3
   16a96:	f000 80c8 	beq.w	16c2a <follow_path+0x222>
   16a9a:	07a1      	lsls	r1, r4, #30
   16a9c:	d409      	bmi.n	16ab2 <follow_path+0xaa>
   16a9e:	f007 0703 	and.w	r7, r7, #3
   16aa2:	2f01      	cmp	r7, #1
   16aa4:	bf08      	it	eq
   16aa6:	f044 0410 	orreq.w	r4, r4, #16
   16aaa:	2b04      	cmp	r3, #4
   16aac:	bf08      	it	eq
   16aae:	f044 0408 	orreq.w	r4, r4, #8
   16ab2:	69b3      	ldr	r3, [r6, #24]
   16ab4:	4630      	mov	r0, r6
   16ab6:	72dc      	strb	r4, [r3, #11]
   16ab8:	2100      	movs	r1, #0
   16aba:	f7ff fda3 	bl	16604 <dir_sdi>
   16abe:	b910      	cbnz	r0, 16ac6 <follow_path+0xbe>
   16ac0:	4630      	mov	r0, r6
   16ac2:	f7ff ff0d 	bl	168e0 <dir_find.part.9>
   16ac6:	69b3      	ldr	r3, [r6, #24]
   16ac8:	7adb      	ldrb	r3, [r3, #11]
   16aca:	2800      	cmp	r0, #0
   16acc:	f040 80b0 	bne.w	16c30 <follow_path+0x228>
   16ad0:	075a      	lsls	r2, r3, #29
   16ad2:	f100 80c6 	bmi.w	16c62 <follow_path+0x25a>
   16ad6:	6972      	ldr	r2, [r6, #20]
   16ad8:	7ad3      	ldrb	r3, [r2, #11]
   16ada:	06db      	lsls	r3, r3, #27
   16adc:	f140 80af 	bpl.w	16c3e <follow_path+0x236>
   16ae0:	6831      	ldr	r1, [r6, #0]
   16ae2:	8b53      	ldrh	r3, [r2, #26]
   16ae4:	7809      	ldrb	r1, [r1, #0]
   16ae6:	2903      	cmp	r1, #3
   16ae8:	bf04      	itt	eq
   16aea:	8a92      	ldrheq	r2, [r2, #20]
   16aec:	ea43 4302 	orreq.w	r3, r3, r2, lsl #16
   16af0:	60b3      	str	r3, [r6, #8]
   16af2:	464f      	mov	r7, r9
   16af4:	783b      	ldrb	r3, [r7, #0]
   16af6:	f109 0901 	add.w	r9, r9, #1
   16afa:	b25b      	sxtb	r3, r3
   16afc:	2b2f      	cmp	r3, #47	; 0x2f
   16afe:	d0f8      	beq.n	16af2 <follow_path+0xea>
   16b00:	2b5c      	cmp	r3, #92	; 0x5c
   16b02:	d0f6      	beq.n	16af2 <follow_path+0xea>
   16b04:	f8d6 a01c 	ldr.w	sl, [r6, #28]
   16b08:	2500      	movs	r5, #0
   16b0a:	1c6c      	adds	r4, r5, #1
   16b0c:	193b      	adds	r3, r7, r4
   16b0e:	f913 0c01 	ldrsb.w	r0, [r3, #-1]
   16b12:	b280      	uxth	r0, r0
   16b14:	281f      	cmp	r0, #31
   16b16:	d91d      	bls.n	16b54 <follow_path+0x14c>
   16b18:	282f      	cmp	r0, #47	; 0x2f
   16b1a:	d01b      	beq.n	16b54 <follow_path+0x14c>
   16b1c:	285c      	cmp	r0, #92	; 0x5c
   16b1e:	d019      	beq.n	16b54 <follow_path+0x14c>
   16b20:	2c81      	cmp	r4, #129	; 0x81
   16b22:	f000 8098 	beq.w	16c56 <follow_path+0x24e>
   16b26:	b2c0      	uxtb	r0, r0
   16b28:	2101      	movs	r1, #1
   16b2a:	f7fe fb4b 	bl	151c4 <ff_convert>
   16b2e:	2800      	cmp	r0, #0
   16b30:	f000 8091 	beq.w	16c56 <follow_path+0x24e>
   16b34:	287f      	cmp	r0, #127	; 0x7f
   16b36:	d807      	bhi.n	16b48 <follow_path+0x140>
   16b38:	4a4b      	ldr	r2, [pc, #300]	; (16c68 <follow_path+0x260>)
   16b3a:	f812 3f01 	ldrb.w	r3, [r2, #1]!
   16b3e:	b11b      	cbz	r3, 16b48 <follow_path+0x140>
   16b40:	b25b      	sxtb	r3, r3
   16b42:	4283      	cmp	r3, r0
   16b44:	d1f9      	bne.n	16b3a <follow_path+0x132>
   16b46:	e086      	b.n	16c56 <follow_path+0x24e>
   16b48:	eb0a 0344 	add.w	r3, sl, r4, lsl #1
   16b4c:	f823 0c02 	strh.w	r0, [r3, #-2]
   16b50:	4625      	mov	r5, r4
   16b52:	e7da      	b.n	16b0a <follow_path+0x102>
   16b54:	281f      	cmp	r0, #31
   16b56:	4699      	mov	r9, r3
   16b58:	bf8c      	ite	hi
   16b5a:	2400      	movhi	r4, #0
   16b5c:	2404      	movls	r4, #4
   16b5e:	eb0a 0345 	add.w	r3, sl, r5, lsl #1
   16b62:	2d00      	cmp	r5, #0
   16b64:	d077      	beq.n	16c56 <follow_path+0x24e>
   16b66:	f833 2d02 	ldrh.w	r2, [r3, #-2]!
   16b6a:	2a20      	cmp	r2, #32
   16b6c:	d001      	beq.n	16b72 <follow_path+0x16a>
   16b6e:	2a2e      	cmp	r2, #46	; 0x2e
   16b70:	d101      	bne.n	16b76 <follow_path+0x16e>
   16b72:	3d01      	subs	r5, #1
   16b74:	e7f5      	b.n	16b62 <follow_path+0x15a>
   16b76:	2700      	movs	r7, #0
   16b78:	f82a 7015 	strh.w	r7, [sl, r5, lsl #1]
   16b7c:	69b0      	ldr	r0, [r6, #24]
   16b7e:	2120      	movs	r1, #32
   16b80:	220b      	movs	r2, #11
   16b82:	f7ff fa79 	bl	16078 <mem_set>
   16b86:	eb0a 0845 	add.w	r8, sl, r5, lsl #1
   16b8a:	463b      	mov	r3, r7
   16b8c:	e755      	b.n	16a3a <follow_path+0x32>
   16b8e:	2b20      	cmp	r3, #32
   16b90:	d003      	beq.n	16b9a <follow_path+0x192>
   16b92:	2b2e      	cmp	r3, #46	; 0x2e
   16b94:	d105      	bne.n	16ba2 <follow_path+0x19a>
   16b96:	42aa      	cmp	r2, r5
   16b98:	d05f      	beq.n	16c5a <follow_path+0x252>
   16b9a:	f044 0403 	orr.w	r4, r4, #3
   16b9e:	4613      	mov	r3, r2
   16ba0:	e760      	b.n	16a64 <follow_path+0x5c>
   16ba2:	45c3      	cmp	fp, r8
   16ba4:	d202      	bcs.n	16bac <follow_path+0x1a4>
   16ba6:	42aa      	cmp	r2, r5
   16ba8:	d116      	bne.n	16bd8 <follow_path+0x1d0>
   16baa:	e056      	b.n	16c5a <follow_path+0x252>
   16bac:	f1b8 0f0b 	cmp.w	r8, #11
   16bb0:	d104      	bne.n	16bbc <follow_path+0x1b4>
   16bb2:	f044 0403 	orr.w	r4, r4, #3
   16bb6:	f04f 080b 	mov.w	r8, #11
   16bba:	e759      	b.n	16a70 <follow_path+0x68>
   16bbc:	42aa      	cmp	r2, r5
   16bbe:	d003      	beq.n	16bc8 <follow_path+0x1c0>
   16bc0:	f044 0403 	orr.w	r4, r4, #3
   16bc4:	f63f af54 	bhi.w	16a70 <follow_path+0x68>
   16bc8:	00bf      	lsls	r7, r7, #2
   16bca:	b2ff      	uxtb	r7, r7
   16bcc:	462a      	mov	r2, r5
   16bce:	f04f 080b 	mov.w	r8, #11
   16bd2:	f04f 0b08 	mov.w	fp, #8
   16bd6:	e7e2      	b.n	16b9e <follow_path+0x196>
   16bd8:	2b7f      	cmp	r3, #127	; 0x7f
   16bda:	d90e      	bls.n	16bfa <follow_path+0x1f2>
   16bdc:	4618      	mov	r0, r3
   16bde:	2100      	movs	r1, #0
   16be0:	9201      	str	r2, [sp, #4]
   16be2:	f7fe faef 	bl	151c4 <ff_convert>
   16be6:	9a01      	ldr	r2, [sp, #4]
   16be8:	4603      	mov	r3, r0
   16bea:	b118      	cbz	r0, 16bf4 <follow_path+0x1ec>
   16bec:	491f      	ldr	r1, [pc, #124]	; (16c6c <follow_path+0x264>)
   16bee:	440b      	add	r3, r1
   16bf0:	f813 3c80 	ldrb.w	r3, [r3, #-128]
   16bf4:	f044 0402 	orr.w	r4, r4, #2
   16bf8:	b133      	cbz	r3, 16c08 <follow_path+0x200>
   16bfa:	481d      	ldr	r0, [pc, #116]	; (16c70 <follow_path+0x268>)
   16bfc:	f810 1f01 	ldrb.w	r1, [r0, #1]!
   16c00:	b131      	cbz	r1, 16c10 <follow_path+0x208>
   16c02:	b249      	sxtb	r1, r1
   16c04:	4299      	cmp	r1, r3
   16c06:	d1f9      	bne.n	16bfc <follow_path+0x1f4>
   16c08:	f044 0403 	orr.w	r4, r4, #3
   16c0c:	235f      	movs	r3, #95	; 0x5f
   16c0e:	e006      	b.n	16c1e <follow_path+0x216>
   16c10:	f1a3 0141 	sub.w	r1, r3, #65	; 0x41
   16c14:	b289      	uxth	r1, r1
   16c16:	2919      	cmp	r1, #25
   16c18:	d813      	bhi.n	16c42 <follow_path+0x23a>
   16c1a:	f047 0702 	orr.w	r7, r7, #2
   16c1e:	69b1      	ldr	r1, [r6, #24]
   16c20:	f801 300b 	strb.w	r3, [r1, fp]
   16c24:	f10b 0b01 	add.w	fp, fp, #1
   16c28:	e7b9      	b.n	16b9e <follow_path+0x196>
   16c2a:	f044 0402 	orr.w	r4, r4, #2
   16c2e:	e734      	b.n	16a9a <follow_path+0x92>
   16c30:	2804      	cmp	r0, #4
   16c32:	d116      	bne.n	16c62 <follow_path+0x25a>
   16c34:	f013 0f04 	tst.w	r3, #4
   16c38:	bf08      	it	eq
   16c3a:	2005      	moveq	r0, #5
   16c3c:	e011      	b.n	16c62 <follow_path+0x25a>
   16c3e:	2005      	movs	r0, #5
   16c40:	e00f      	b.n	16c62 <follow_path+0x25a>
   16c42:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
   16c46:	b289      	uxth	r1, r1
   16c48:	2919      	cmp	r1, #25
   16c4a:	d8e8      	bhi.n	16c1e <follow_path+0x216>
   16c4c:	3b20      	subs	r3, #32
   16c4e:	f047 0701 	orr.w	r7, r7, #1
   16c52:	b29b      	uxth	r3, r3
   16c54:	e7e3      	b.n	16c1e <follow_path+0x216>
   16c56:	2006      	movs	r0, #6
   16c58:	e003      	b.n	16c62 <follow_path+0x25a>
   16c5a:	f1b8 0f0b 	cmp.w	r8, #11
   16c5e:	d1b3      	bne.n	16bc8 <follow_path+0x1c0>
   16c60:	e7a7      	b.n	16bb2 <follow_path+0x1aa>
   16c62:	b003      	add	sp, #12
   16c64:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16c68:	000264d1 	.word	0x000264d1
   16c6c:	00026516 	.word	0x00026516
   16c70:	000264da 	.word	0x000264da

00016c74 <dir_register>:
dir_register():
   16c74:	b5f0      	push	{r4, r5, r6, r7, lr}
   16c76:	6985      	ldr	r5, [r0, #24]
   16c78:	b087      	sub	sp, #28
   16c7a:	69c7      	ldr	r7, [r0, #28]
   16c7c:	4604      	mov	r4, r0
   16c7e:	4629      	mov	r1, r5
   16c80:	a803      	add	r0, sp, #12
   16c82:	220c      	movs	r2, #12
   16c84:	f7ff f9e1 	bl	1604a <mem_cpy>
   16c88:	f89d 3017 	ldrb.w	r3, [sp, #23]
   16c8c:	07db      	lsls	r3, r3, #31
   16c8e:	d55f      	bpl.n	16d50 <dir_register+0xdc>
   16c90:	2300      	movs	r3, #0
   16c92:	72eb      	strb	r3, [r5, #11]
   16c94:	2601      	movs	r6, #1
   16c96:	61e3      	str	r3, [r4, #28]
   16c98:	4628      	mov	r0, r5
   16c9a:	a903      	add	r1, sp, #12
   16c9c:	220b      	movs	r2, #11
   16c9e:	f7ff f9d4 	bl	1604a <mem_cpy>
   16ca2:	2e05      	cmp	r6, #5
   16ca4:	d915      	bls.n	16cd2 <dir_register+0x5e>
   16ca6:	1eb8      	subs	r0, r7, #2
   16ca8:	4633      	mov	r3, r6
   16caa:	f830 2f02 	ldrh.w	r2, [r0, #2]!
   16cae:	b18a      	cbz	r2, 16cd4 <dir_register+0x60>
   16cb0:	2110      	movs	r1, #16
   16cb2:	f002 0e01 	and.w	lr, r2, #1
   16cb6:	eb0e 0343 	add.w	r3, lr, r3, lsl #1
   16cba:	f413 3f80 	tst.w	r3, #65536	; 0x10000
   16cbe:	bf1c      	itt	ne
   16cc0:	f483 3388 	eorne.w	r3, r3, #69632	; 0x11000
   16cc4:	f083 0321 	eorne.w	r3, r3, #33	; 0x21
   16cc8:	3901      	subs	r1, #1
   16cca:	ea4f 0252 	mov.w	r2, r2, lsr #1
   16cce:	d1f0      	bne.n	16cb2 <dir_register+0x3e>
   16cd0:	e7eb      	b.n	16caa <dir_register+0x36>
   16cd2:	4633      	mov	r3, r6
   16cd4:	2207      	movs	r2, #7
   16cd6:	f003 000f 	and.w	r0, r3, #15
   16cda:	f100 0130 	add.w	r1, r0, #48	; 0x30
   16cde:	2939      	cmp	r1, #57	; 0x39
   16ce0:	bf88      	it	hi
   16ce2:	f100 0137 	addhi.w	r1, r0, #55	; 0x37
   16ce6:	3a01      	subs	r2, #1
   16ce8:	a806      	add	r0, sp, #24
   16cea:	4410      	add	r0, r2
   16cec:	091b      	lsrs	r3, r3, #4
   16cee:	f800 1c13 	strb.w	r1, [r0, #-19]
   16cf2:	d1f0      	bne.n	16cd6 <dir_register+0x62>
   16cf4:	a906      	add	r1, sp, #24
   16cf6:	207e      	movs	r0, #126	; 0x7e
   16cf8:	4411      	add	r1, r2
   16cfa:	f801 0c14 	strb.w	r0, [r1, #-20]
   16cfe:	4293      	cmp	r3, r2
   16d00:	d009      	beq.n	16d16 <dir_register+0xa2>
   16d02:	5ce9      	ldrb	r1, [r5, r3]
   16d04:	2920      	cmp	r1, #32
   16d06:	d006      	beq.n	16d16 <dir_register+0xa2>
   16d08:	3301      	adds	r3, #1
   16d0a:	e7f8      	b.n	16cfe <dir_register+0x8a>
   16d0c:	2120      	movs	r1, #32
   16d0e:	54e9      	strb	r1, [r5, r3]
   16d10:	3301      	adds	r3, #1
   16d12:	2b07      	cmp	r3, #7
   16d14:	d807      	bhi.n	16d26 <dir_register+0xb2>
   16d16:	2a07      	cmp	r2, #7
   16d18:	d8f8      	bhi.n	16d0c <dir_register+0x98>
   16d1a:	a906      	add	r1, sp, #24
   16d1c:	4411      	add	r1, r2
   16d1e:	f811 1c14 	ldrb.w	r1, [r1, #-20]
   16d22:	3201      	adds	r2, #1
   16d24:	e7f3      	b.n	16d0e <dir_register+0x9a>
   16d26:	4620      	mov	r0, r4
   16d28:	2100      	movs	r1, #0
   16d2a:	f7ff fc6b 	bl	16604 <dir_sdi>
   16d2e:	b940      	cbnz	r0, 16d42 <dir_register+0xce>
   16d30:	4620      	mov	r0, r4
   16d32:	f7ff fdd5 	bl	168e0 <dir_find.part.9>
   16d36:	b920      	cbnz	r0, 16d42 <dir_register+0xce>
   16d38:	3601      	adds	r6, #1
   16d3a:	2e64      	cmp	r6, #100	; 0x64
   16d3c:	d1ac      	bne.n	16c98 <dir_register+0x24>
   16d3e:	2007      	movs	r0, #7
   16d40:	e099      	b.n	16e76 <dir_register+0x202>
   16d42:	2804      	cmp	r0, #4
   16d44:	f040 8097 	bne.w	16e76 <dir_register+0x202>
   16d48:	f89d 3017 	ldrb.w	r3, [sp, #23]
   16d4c:	72eb      	strb	r3, [r5, #11]
   16d4e:	61e7      	str	r7, [r4, #28]
   16d50:	f89d 3017 	ldrb.w	r3, [sp, #23]
   16d54:	079b      	lsls	r3, r3, #30
   16d56:	d50a      	bpl.n	16d6e <dir_register+0xfa>
   16d58:	2300      	movs	r3, #0
   16d5a:	f837 2013 	ldrh.w	r2, [r7, r3, lsl #1]
   16d5e:	b10a      	cbz	r2, 16d64 <dir_register+0xf0>
   16d60:	3301      	adds	r3, #1
   16d62:	e7fa      	b.n	16d5a <dir_register+0xe6>
   16d64:	3319      	adds	r3, #25
   16d66:	220d      	movs	r2, #13
   16d68:	fbb3 f6f2 	udiv	r6, r3, r2
   16d6c:	e000      	b.n	16d70 <dir_register+0xfc>
   16d6e:	2601      	movs	r6, #1
   16d70:	4620      	mov	r0, r4
   16d72:	2100      	movs	r1, #0
   16d74:	f7ff fc46 	bl	16604 <dir_sdi>
   16d78:	b9a8      	cbnz	r0, 16da6 <dir_register+0x132>
   16d7a:	4605      	mov	r5, r0
   16d7c:	6820      	ldr	r0, [r4, #0]
   16d7e:	6921      	ldr	r1, [r4, #16]
   16d80:	f7ff fa6a 	bl	16258 <move_window>
   16d84:	b978      	cbnz	r0, 16da6 <dir_register+0x132>
   16d86:	6963      	ldr	r3, [r4, #20]
   16d88:	781b      	ldrb	r3, [r3, #0]
   16d8a:	2be5      	cmp	r3, #229	; 0xe5
   16d8c:	d000      	beq.n	16d90 <dir_register+0x11c>
   16d8e:	b91b      	cbnz	r3, 16d98 <dir_register+0x124>
   16d90:	3501      	adds	r5, #1
   16d92:	42b5      	cmp	r5, r6
   16d94:	d101      	bne.n	16d9a <dir_register+0x126>
   16d96:	e00a      	b.n	16dae <dir_register+0x13a>
   16d98:	4605      	mov	r5, r0
   16d9a:	4620      	mov	r0, r4
   16d9c:	2101      	movs	r1, #1
   16d9e:	f7ff fd28 	bl	167f2 <dir_next>
   16da2:	2800      	cmp	r0, #0
   16da4:	d0ea      	beq.n	16d7c <dir_register+0x108>
   16da6:	2804      	cmp	r0, #4
   16da8:	bf08      	it	eq
   16daa:	2007      	moveq	r0, #7
   16dac:	e063      	b.n	16e76 <dir_register+0x202>
   16dae:	3d01      	subs	r5, #1
   16db0:	d047      	beq.n	16e42 <dir_register+0x1ce>
   16db2:	88e1      	ldrh	r1, [r4, #6]
   16db4:	4620      	mov	r0, r4
   16db6:	1b49      	subs	r1, r1, r5
   16db8:	f7ff fc24 	bl	16604 <dir_sdi>
   16dbc:	2800      	cmp	r0, #0
   16dbe:	d15a      	bne.n	16e76 <dir_register+0x202>
   16dc0:	69a0      	ldr	r0, [r4, #24]
   16dc2:	f7ff f960 	bl	16086 <sum_sfn>
   16dc6:	4606      	mov	r6, r0
   16dc8:	6820      	ldr	r0, [r4, #0]
   16dca:	6921      	ldr	r1, [r4, #16]
   16dcc:	f7ff fa44 	bl	16258 <move_window>
   16dd0:	4603      	mov	r3, r0
   16dd2:	2b00      	cmp	r3, #0
   16dd4:	d14f      	bne.n	16e76 <dir_register+0x202>
   16dd6:	6962      	ldr	r2, [r4, #20]
   16dd8:	200f      	movs	r0, #15
   16dda:	b2e9      	uxtb	r1, r5
   16ddc:	f8d4 e01c 	ldr.w	lr, [r4, #28]
   16de0:	270d      	movs	r7, #13
   16de2:	72d0      	strb	r0, [r2, #11]
   16de4:	1e48      	subs	r0, r1, #1
   16de6:	4378      	muls	r0, r7
   16de8:	7356      	strb	r6, [r2, #13]
   16dea:	7313      	strb	r3, [r2, #12]
   16dec:	8353      	strh	r3, [r2, #26]
   16dee:	461f      	mov	r7, r3
   16df0:	f64f 7cff 	movw	ip, #65535	; 0xffff
   16df4:	4563      	cmp	r3, ip
   16df6:	f8df c084 	ldr.w	ip, [pc, #132]	; 16e7c <dir_register+0x208>
   16dfa:	bf18      	it	ne
   16dfc:	f83e 3010 	ldrhne.w	r3, [lr, r0, lsl #1]
   16e00:	f817 c00c 	ldrb.w	ip, [r7, ip]
   16e04:	f107 0701 	add.w	r7, r7, #1
   16e08:	f822 300c 	strh.w	r3, [r2, ip]
   16e0c:	f64f 7cff 	movw	ip, #65535	; 0xffff
   16e10:	bf18      	it	ne
   16e12:	3001      	addne	r0, #1
   16e14:	2b00      	cmp	r3, #0
   16e16:	bf08      	it	eq
   16e18:	4663      	moveq	r3, ip
   16e1a:	2f0d      	cmp	r7, #13
   16e1c:	d1e8      	bne.n	16df0 <dir_register+0x17c>
   16e1e:	4563      	cmp	r3, ip
   16e20:	d002      	beq.n	16e28 <dir_register+0x1b4>
   16e22:	f83e 3010 	ldrh.w	r3, [lr, r0, lsl #1]
   16e26:	b90b      	cbnz	r3, 16e2c <dir_register+0x1b8>
   16e28:	f041 0140 	orr.w	r1, r1, #64	; 0x40
   16e2c:	7011      	strb	r1, [r2, #0]
   16e2e:	6823      	ldr	r3, [r4, #0]
   16e30:	2201      	movs	r2, #1
   16e32:	711a      	strb	r2, [r3, #4]
   16e34:	4620      	mov	r0, r4
   16e36:	2100      	movs	r1, #0
   16e38:	f7ff fcdb 	bl	167f2 <dir_next>
   16e3c:	b9d8      	cbnz	r0, 16e76 <dir_register+0x202>
   16e3e:	3d01      	subs	r5, #1
   16e40:	d1c2      	bne.n	16dc8 <dir_register+0x154>
   16e42:	6820      	ldr	r0, [r4, #0]
   16e44:	6921      	ldr	r1, [r4, #16]
   16e46:	f7ff fa07 	bl	16258 <move_window>
   16e4a:	4605      	mov	r5, r0
   16e4c:	b990      	cbnz	r0, 16e74 <dir_register+0x200>
   16e4e:	6960      	ldr	r0, [r4, #20]
   16e50:	4629      	mov	r1, r5
   16e52:	2220      	movs	r2, #32
   16e54:	f7ff f910 	bl	16078 <mem_set>
   16e58:	220b      	movs	r2, #11
   16e5a:	6960      	ldr	r0, [r4, #20]
   16e5c:	69a1      	ldr	r1, [r4, #24]
   16e5e:	f7ff f8f4 	bl	1604a <mem_cpy>
   16e62:	69a2      	ldr	r2, [r4, #24]
   16e64:	6963      	ldr	r3, [r4, #20]
   16e66:	7ad2      	ldrb	r2, [r2, #11]
   16e68:	f002 0218 	and.w	r2, r2, #24
   16e6c:	731a      	strb	r2, [r3, #12]
   16e6e:	6823      	ldr	r3, [r4, #0]
   16e70:	2201      	movs	r2, #1
   16e72:	711a      	strb	r2, [r3, #4]
   16e74:	4628      	mov	r0, r5
   16e76:	b007      	add	sp, #28
   16e78:	bdf0      	pop	{r4, r5, r6, r7, pc}
   16e7a:	bf00      	nop
   16e7c:	00026596 	.word	0x00026596

00016e80 <dir_remove>:
dir_remove():
   16e80:	b570      	push	{r4, r5, r6, lr}
   16e82:	8c01      	ldrh	r1, [r0, #32]
   16e84:	88c6      	ldrh	r6, [r0, #6]
   16e86:	f64f 73ff 	movw	r3, #65535	; 0xffff
   16e8a:	4299      	cmp	r1, r3
   16e8c:	bf08      	it	eq
   16e8e:	4631      	moveq	r1, r6
   16e90:	4605      	mov	r5, r0
   16e92:	f7ff fbb7 	bl	16604 <dir_sdi>
   16e96:	4604      	mov	r4, r0
   16e98:	b9e8      	cbnz	r0, 16ed6 <dir_remove+0x56>
   16e9a:	6828      	ldr	r0, [r5, #0]
   16e9c:	6929      	ldr	r1, [r5, #16]
   16e9e:	f7ff f9db 	bl	16258 <move_window>
   16ea2:	4604      	mov	r4, r0
   16ea4:	b9a0      	cbnz	r0, 16ed0 <dir_remove+0x50>
   16ea6:	2220      	movs	r2, #32
   16ea8:	6968      	ldr	r0, [r5, #20]
   16eaa:	4621      	mov	r1, r4
   16eac:	f7ff f8e4 	bl	16078 <mem_set>
   16eb0:	696b      	ldr	r3, [r5, #20]
   16eb2:	22e5      	movs	r2, #229	; 0xe5
   16eb4:	701a      	strb	r2, [r3, #0]
   16eb6:	682b      	ldr	r3, [r5, #0]
   16eb8:	2201      	movs	r2, #1
   16eba:	711a      	strb	r2, [r3, #4]
   16ebc:	88eb      	ldrh	r3, [r5, #6]
   16ebe:	42b3      	cmp	r3, r6
   16ec0:	d209      	bcs.n	16ed6 <dir_remove+0x56>
   16ec2:	4621      	mov	r1, r4
   16ec4:	4628      	mov	r0, r5
   16ec6:	f7ff fc94 	bl	167f2 <dir_next>
   16eca:	4604      	mov	r4, r0
   16ecc:	2800      	cmp	r0, #0
   16ece:	d0e4      	beq.n	16e9a <dir_remove+0x1a>
   16ed0:	2c04      	cmp	r4, #4
   16ed2:	bf08      	it	eq
   16ed4:	2402      	moveq	r4, #2
   16ed6:	4620      	mov	r0, r4
   16ed8:	bd70      	pop	{r4, r5, r6, pc}
	...

00016edc <dir_read.constprop.11>:
dir_read.constprop.11():
   16edc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   16ede:	27ff      	movs	r7, #255	; 0xff
   16ee0:	4605      	mov	r5, r0
   16ee2:	463c      	mov	r4, r7
   16ee4:	2304      	movs	r3, #4
   16ee6:	6929      	ldr	r1, [r5, #16]
   16ee8:	2900      	cmp	r1, #0
   16eea:	d05a      	beq.n	16fa2 <dir_read.constprop.11+0xc6>
   16eec:	6828      	ldr	r0, [r5, #0]
   16eee:	f7ff f9b3 	bl	16258 <move_window>
   16ef2:	4606      	mov	r6, r0
   16ef4:	2800      	cmp	r0, #0
   16ef6:	d15e      	bne.n	16fb6 <dir_read.constprop.11+0xda>
   16ef8:	6968      	ldr	r0, [r5, #20]
   16efa:	7803      	ldrb	r3, [r0, #0]
   16efc:	2b00      	cmp	r3, #0
   16efe:	d059      	beq.n	16fb4 <dir_read.constprop.11+0xd8>
   16f00:	2be5      	cmp	r3, #229	; 0xe5
   16f02:	7ac2      	ldrb	r2, [r0, #11]
   16f04:	d044      	beq.n	16f90 <dir_read.constprop.11+0xb4>
   16f06:	2b2e      	cmp	r3, #46	; 0x2e
   16f08:	d042      	beq.n	16f90 <dir_read.constprop.11+0xb4>
   16f0a:	f002 023f 	and.w	r2, r2, #63	; 0x3f
   16f0e:	2a08      	cmp	r2, #8
   16f10:	d03e      	beq.n	16f90 <dir_read.constprop.11+0xb4>
   16f12:	2a0f      	cmp	r2, #15
   16f14:	d133      	bne.n	16f7e <dir_read.constprop.11+0xa2>
   16f16:	0659      	lsls	r1, r3, #25
   16f18:	d505      	bpl.n	16f26 <dir_read.constprop.11+0x4a>
   16f1a:	f003 04bf 	and.w	r4, r3, #191	; 0xbf
   16f1e:	88eb      	ldrh	r3, [r5, #6]
   16f20:	7b47      	ldrb	r7, [r0, #13]
   16f22:	842b      	strh	r3, [r5, #32]
   16f24:	e001      	b.n	16f2a <dir_read.constprop.11+0x4e>
   16f26:	42a3      	cmp	r3, r4
   16f28:	d132      	bne.n	16f90 <dir_read.constprop.11+0xb4>
   16f2a:	7b43      	ldrb	r3, [r0, #13]
   16f2c:	42bb      	cmp	r3, r7
   16f2e:	d12f      	bne.n	16f90 <dir_read.constprop.11+0xb4>
   16f30:	7803      	ldrb	r3, [r0, #0]
   16f32:	220d      	movs	r2, #13
   16f34:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   16f38:	3b01      	subs	r3, #1
   16f3a:	69ee      	ldr	r6, [r5, #28]
   16f3c:	4353      	muls	r3, r2
   16f3e:	f04f 0e01 	mov.w	lr, #1
   16f42:	2200      	movs	r2, #0
   16f44:	491e      	ldr	r1, [pc, #120]	; (16fc0 <dir_read.constprop.11+0xe4>)
   16f46:	5c51      	ldrb	r1, [r2, r1]
   16f48:	5a41      	ldrh	r1, [r0, r1]
   16f4a:	f1be 0f00 	cmp.w	lr, #0
   16f4e:	d006      	beq.n	16f5e <dir_read.constprop.11+0x82>
   16f50:	2b7f      	cmp	r3, #127	; 0x7f
   16f52:	d81d      	bhi.n	16f90 <dir_read.constprop.11+0xb4>
   16f54:	f826 1013 	strh.w	r1, [r6, r3, lsl #1]
   16f58:	468e      	mov	lr, r1
   16f5a:	3301      	adds	r3, #1
   16f5c:	e003      	b.n	16f66 <dir_read.constprop.11+0x8a>
   16f5e:	f64f 7cff 	movw	ip, #65535	; 0xffff
   16f62:	4561      	cmp	r1, ip
   16f64:	d114      	bne.n	16f90 <dir_read.constprop.11+0xb4>
   16f66:	3201      	adds	r2, #1
   16f68:	2a0d      	cmp	r2, #13
   16f6a:	d1eb      	bne.n	16f44 <dir_read.constprop.11+0x68>
   16f6c:	7802      	ldrb	r2, [r0, #0]
   16f6e:	0652      	lsls	r2, r2, #25
   16f70:	d51d      	bpl.n	16fae <dir_read.constprop.11+0xd2>
   16f72:	2b7f      	cmp	r3, #127	; 0x7f
   16f74:	d80c      	bhi.n	16f90 <dir_read.constprop.11+0xb4>
   16f76:	2200      	movs	r2, #0
   16f78:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
   16f7c:	e017      	b.n	16fae <dir_read.constprop.11+0xd2>
   16f7e:	b91c      	cbnz	r4, 16f88 <dir_read.constprop.11+0xac>
   16f80:	f7ff f881 	bl	16086 <sum_sfn>
   16f84:	4287      	cmp	r7, r0
   16f86:	d018      	beq.n	16fba <dir_read.constprop.11+0xde>
   16f88:	f64f 73ff 	movw	r3, #65535	; 0xffff
   16f8c:	842b      	strh	r3, [r5, #32]
   16f8e:	e014      	b.n	16fba <dir_read.constprop.11+0xde>
   16f90:	24ff      	movs	r4, #255	; 0xff
   16f92:	4628      	mov	r0, r5
   16f94:	2100      	movs	r1, #0
   16f96:	f7ff fc2c 	bl	167f2 <dir_next>
   16f9a:	4606      	mov	r6, r0
   16f9c:	b958      	cbnz	r0, 16fb6 <dir_read.constprop.11+0xda>
   16f9e:	4603      	mov	r3, r0
   16fa0:	e7a1      	b.n	16ee6 <dir_read.constprop.11+0xa>
   16fa2:	461e      	mov	r6, r3
   16fa4:	b14b      	cbz	r3, 16fba <dir_read.constprop.11+0xde>
   16fa6:	2200      	movs	r2, #0
   16fa8:	612a      	str	r2, [r5, #16]
   16faa:	461e      	mov	r6, r3
   16fac:	e005      	b.n	16fba <dir_read.constprop.11+0xde>
   16fae:	3c01      	subs	r4, #1
   16fb0:	b2e4      	uxtb	r4, r4
   16fb2:	e7ee      	b.n	16f92 <dir_read.constprop.11+0xb6>
   16fb4:	2604      	movs	r6, #4
   16fb6:	4633      	mov	r3, r6
   16fb8:	e7f5      	b.n	16fa6 <dir_read.constprop.11+0xca>
   16fba:	4630      	mov	r0, r6
   16fbc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   16fbe:	bf00      	nop
   16fc0:	00026596 	.word	0x00026596

00016fc4 <remove_chain>:
remove_chain():
   16fc4:	2901      	cmp	r1, #1
   16fc6:	b570      	push	{r4, r5, r6, lr}
   16fc8:	4604      	mov	r4, r0
   16fca:	460d      	mov	r5, r1
   16fcc:	d924      	bls.n	17018 <remove_chain+0x54>
   16fce:	6983      	ldr	r3, [r0, #24]
   16fd0:	4299      	cmp	r1, r3
   16fd2:	d221      	bcs.n	17018 <remove_chain+0x54>
   16fd4:	69a3      	ldr	r3, [r4, #24]
   16fd6:	429d      	cmp	r5, r3
   16fd8:	d205      	bcs.n	16fe6 <remove_chain+0x22>
   16fda:	4620      	mov	r0, r4
   16fdc:	4629      	mov	r1, r5
   16fde:	f7ff fabe 	bl	1655e <get_fat>
   16fe2:	4606      	mov	r6, r0
   16fe4:	b908      	cbnz	r0, 16fea <remove_chain+0x26>
   16fe6:	2000      	movs	r0, #0
   16fe8:	bd70      	pop	{r4, r5, r6, pc}
   16fea:	2801      	cmp	r0, #1
   16fec:	d014      	beq.n	17018 <remove_chain+0x54>
   16fee:	1c41      	adds	r1, r0, #1
   16ff0:	d010      	beq.n	17014 <remove_chain+0x50>
   16ff2:	4620      	mov	r0, r4
   16ff4:	4629      	mov	r1, r5
   16ff6:	2200      	movs	r2, #0
   16ff8:	f7ff fb43 	bl	16682 <put_fat>
   16ffc:	b968      	cbnz	r0, 1701a <remove_chain+0x56>
   16ffe:	6963      	ldr	r3, [r4, #20]
   17000:	1c5a      	adds	r2, r3, #1
   17002:	d005      	beq.n	17010 <remove_chain+0x4c>
   17004:	3301      	adds	r3, #1
   17006:	6163      	str	r3, [r4, #20]
   17008:	7963      	ldrb	r3, [r4, #5]
   1700a:	f043 0301 	orr.w	r3, r3, #1
   1700e:	7163      	strb	r3, [r4, #5]
   17010:	4635      	mov	r5, r6
   17012:	e7df      	b.n	16fd4 <remove_chain+0x10>
   17014:	2001      	movs	r0, #1
   17016:	bd70      	pop	{r4, r5, r6, pc}
   17018:	2002      	movs	r0, #2
   1701a:	bd70      	pop	{r4, r5, r6, pc}

0001701c <f_mount>:
f_mount():
   1701c:	b5f0      	push	{r4, r5, r6, r7, lr}
   1701e:	b085      	sub	sp, #20
   17020:	9001      	str	r0, [sp, #4]
   17022:	a804      	add	r0, sp, #16
   17024:	f840 1d04 	str.w	r1, [r0, #-4]!
   17028:	9100      	str	r1, [sp, #0]
   1702a:	4616      	mov	r6, r2
   1702c:	f7ff f83a 	bl	160a4 <get_ldnumber>
   17030:	1e04      	subs	r4, r0, #0
   17032:	db2a      	blt.n	1708a <f_mount+0x6e>
   17034:	4b17      	ldr	r3, [pc, #92]	; (17094 <f_mount+0x78>)
   17036:	f853 5024 	ldr.w	r5, [r3, r4, lsl #2]
   1703a:	461f      	mov	r7, r3
   1703c:	b13d      	cbz	r5, 1704e <f_mount+0x32>
   1703e:	68e8      	ldr	r0, [r5, #12]
   17040:	f7fe f8f8 	bl	15234 <ff_del_syncobj>
   17044:	b908      	cbnz	r0, 1704a <f_mount+0x2e>
   17046:	2002      	movs	r0, #2
   17048:	e022      	b.n	17090 <f_mount+0x74>
   1704a:	2300      	movs	r3, #0
   1704c:	702b      	strb	r3, [r5, #0]
   1704e:	9901      	ldr	r1, [sp, #4]
   17050:	b921      	cbnz	r1, 1705c <f_mount+0x40>
   17052:	9801      	ldr	r0, [sp, #4]
   17054:	f847 0024 	str.w	r0, [r7, r4, lsl #2]
   17058:	b948      	cbnz	r0, 1706e <f_mount+0x52>
   1705a:	e019      	b.n	17090 <f_mount+0x74>
   1705c:	2300      	movs	r3, #0
   1705e:	f801 3b0c 	strb.w	r3, [r1], #12
   17062:	b2e0      	uxtb	r0, r4
   17064:	f7fe f8dc 	bl	15220 <ff_cre_syncobj>
   17068:	2800      	cmp	r0, #0
   1706a:	d0ec      	beq.n	17046 <f_mount+0x2a>
   1706c:	e7f1      	b.n	17052 <f_mount+0x36>
   1706e:	2e01      	cmp	r6, #1
   17070:	d10d      	bne.n	1708e <f_mount+0x72>
   17072:	4669      	mov	r1, sp
   17074:	2200      	movs	r2, #0
   17076:	a801      	add	r0, sp, #4
   17078:	f7ff f92e 	bl	162d8 <find_volume>
   1707c:	4604      	mov	r4, r0
   1707e:	4621      	mov	r1, r4
   17080:	9801      	ldr	r0, [sp, #4]
   17082:	f7ff fa54 	bl	1652e <unlock_fs>
   17086:	4620      	mov	r0, r4
   17088:	e002      	b.n	17090 <f_mount+0x74>
   1708a:	200b      	movs	r0, #11
   1708c:	e000      	b.n	17090 <f_mount+0x74>
   1708e:	2000      	movs	r0, #0
   17090:	b005      	add	sp, #20
   17092:	bdf0      	pop	{r4, r5, r6, r7, pc}
   17094:	2007c954 	.word	0x2007c954

00017098 <f_open>:
f_open():
   17098:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1709c:	b0d1      	sub	sp, #324	; 0x144
   1709e:	9101      	str	r1, [sp, #4]
   170a0:	4617      	mov	r7, r2
   170a2:	4605      	mov	r5, r0
   170a4:	2800      	cmp	r0, #0
   170a6:	d07d      	beq.n	171a4 <f_open+0x10c>
   170a8:	2300      	movs	r3, #0
   170aa:	6003      	str	r3, [r0, #0]
   170ac:	a901      	add	r1, sp, #4
   170ae:	a806      	add	r0, sp, #24
   170b0:	f002 021e 	and.w	r2, r2, #30
   170b4:	f7ff f910 	bl	162d8 <find_volume>
   170b8:	4680      	mov	r8, r0
   170ba:	2800      	cmp	r0, #0
   170bc:	d16c      	bne.n	17198 <f_open+0x100>
   170be:	ab03      	add	r3, sp, #12
   170c0:	930c      	str	r3, [sp, #48]	; 0x30
   170c2:	a806      	add	r0, sp, #24
   170c4:	ab0f      	add	r3, sp, #60	; 0x3c
   170c6:	9901      	ldr	r1, [sp, #4]
   170c8:	930d      	str	r3, [sp, #52]	; 0x34
   170ca:	f7ff fc9d 	bl	16a08 <follow_path>
   170ce:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
   170d0:	b910      	cbnz	r0, 170d8 <f_open+0x40>
   170d2:	2c00      	cmp	r4, #0
   170d4:	bf08      	it	eq
   170d6:	2006      	moveq	r0, #6
   170d8:	f017 0f1c 	tst.w	r7, #28
   170dc:	f007 061f 	and.w	r6, r7, #31
   170e0:	d036      	beq.n	17150 <f_open+0xb8>
   170e2:	b148      	cbz	r0, 170f8 <f_open+0x60>
   170e4:	2804      	cmp	r0, #4
   170e6:	d102      	bne.n	170ee <f_open+0x56>
   170e8:	a806      	add	r0, sp, #24
   170ea:	f7ff fdc3 	bl	16c74 <dir_register>
   170ee:	f046 0608 	orr.w	r6, r6, #8
   170f2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
   170f4:	b130      	cbz	r0, 17104 <f_open+0x6c>
   170f6:	e05c      	b.n	171b2 <f_open+0x11a>
   170f8:	7ae3      	ldrb	r3, [r4, #11]
   170fa:	f013 0f11 	tst.w	r3, #17
   170fe:	d157      	bne.n	171b0 <f_open+0x118>
   17100:	077b      	lsls	r3, r7, #29
   17102:	d451      	bmi.n	171a8 <f_open+0x110>
   17104:	0737      	lsls	r7, r6, #28
   17106:	d52c      	bpl.n	17162 <f_open+0xca>
   17108:	f7fe ff76 	bl	15ff8 <get_fattime>
   1710c:	2300      	movs	r3, #0
   1710e:	f8c4 000e 	str.w	r0, [r4, #14]
   17112:	9806      	ldr	r0, [sp, #24]
   17114:	72e3      	strb	r3, [r4, #11]
   17116:	61e3      	str	r3, [r4, #28]
   17118:	7802      	ldrb	r2, [r0, #0]
   1711a:	8b67      	ldrh	r7, [r4, #26]
   1711c:	2a03      	cmp	r2, #3
   1711e:	bf08      	it	eq
   17120:	8aa2      	ldrheq	r2, [r4, #20]
   17122:	8363      	strh	r3, [r4, #26]
   17124:	82a3      	strh	r3, [r4, #20]
   17126:	bf08      	it	eq
   17128:	ea47 4702 	orreq.w	r7, r7, r2, lsl #16
   1712c:	2301      	movs	r3, #1
   1712e:	7103      	strb	r3, [r0, #4]
   17130:	b1bf      	cbz	r7, 17162 <f_open+0xca>
   17132:	4639      	mov	r1, r7
   17134:	f8d0 9030 	ldr.w	r9, [r0, #48]	; 0x30
   17138:	f7ff ff44 	bl	16fc4 <remove_chain>
   1713c:	2800      	cmp	r0, #0
   1713e:	d138      	bne.n	171b2 <f_open+0x11a>
   17140:	9806      	ldr	r0, [sp, #24]
   17142:	3f01      	subs	r7, #1
   17144:	6107      	str	r7, [r0, #16]
   17146:	4649      	mov	r1, r9
   17148:	f7ff f886 	bl	16258 <move_window>
   1714c:	b148      	cbz	r0, 17162 <f_open+0xca>
   1714e:	e030      	b.n	171b2 <f_open+0x11a>
   17150:	2800      	cmp	r0, #0
   17152:	d12e      	bne.n	171b2 <f_open+0x11a>
   17154:	7ae3      	ldrb	r3, [r4, #11]
   17156:	06d8      	lsls	r0, r3, #27
   17158:	d428      	bmi.n	171ac <f_open+0x114>
   1715a:	07b9      	lsls	r1, r7, #30
   1715c:	d501      	bpl.n	17162 <f_open+0xca>
   1715e:	07da      	lsls	r2, r3, #31
   17160:	d426      	bmi.n	171b0 <f_open+0x118>
   17162:	0733      	lsls	r3, r6, #28
   17164:	9b06      	ldr	r3, [sp, #24]
   17166:	bf48      	it	mi
   17168:	f046 0620 	orrmi.w	r6, r6, #32
   1716c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
   1716e:	71ae      	strb	r6, [r5, #6]
   17170:	61ea      	str	r2, [r5, #28]
   17172:	2200      	movs	r2, #0
   17174:	71ea      	strb	r2, [r5, #7]
   17176:	622c      	str	r4, [r5, #32]
   17178:	7819      	ldrb	r1, [r3, #0]
   1717a:	8b62      	ldrh	r2, [r4, #26]
   1717c:	2903      	cmp	r1, #3
   1717e:	bf04      	itt	eq
   17180:	8aa1      	ldrheq	r1, [r4, #20]
   17182:	ea42 4201 	orreq.w	r2, r2, r1, lsl #16
   17186:	612a      	str	r2, [r5, #16]
   17188:	69e2      	ldr	r2, [r4, #28]
   1718a:	602b      	str	r3, [r5, #0]
   1718c:	88db      	ldrh	r3, [r3, #6]
   1718e:	60ea      	str	r2, [r5, #12]
   17190:	2200      	movs	r2, #0
   17192:	60aa      	str	r2, [r5, #8]
   17194:	61aa      	str	r2, [r5, #24]
   17196:	80ab      	strh	r3, [r5, #4]
   17198:	9806      	ldr	r0, [sp, #24]
   1719a:	4641      	mov	r1, r8
   1719c:	f7ff f9c7 	bl	1652e <unlock_fs>
   171a0:	4640      	mov	r0, r8
   171a2:	e008      	b.n	171b6 <f_open+0x11e>
   171a4:	2009      	movs	r0, #9
   171a6:	e006      	b.n	171b6 <f_open+0x11e>
   171a8:	2008      	movs	r0, #8
   171aa:	e002      	b.n	171b2 <f_open+0x11a>
   171ac:	2004      	movs	r0, #4
   171ae:	e000      	b.n	171b2 <f_open+0x11a>
   171b0:	2007      	movs	r0, #7
   171b2:	4680      	mov	r8, r0
   171b4:	e7f0      	b.n	17198 <f_open+0x100>
   171b6:	b051      	add	sp, #324	; 0x144
   171b8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

000171bc <f_read>:
f_read():
   171bc:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   171c0:	469a      	mov	sl, r3
   171c2:	2300      	movs	r3, #0
   171c4:	f8ca 3000 	str.w	r3, [sl]
   171c8:	4604      	mov	r4, r0
   171ca:	460f      	mov	r7, r1
   171cc:	4690      	mov	r8, r2
   171ce:	f7ff f991 	bl	164f4 <validate>
   171d2:	4606      	mov	r6, r0
   171d4:	b130      	cbz	r0, 171e4 <f_read+0x28>
   171d6:	6820      	ldr	r0, [r4, #0]
   171d8:	4631      	mov	r1, r6
   171da:	f7ff f9a8 	bl	1652e <unlock_fs>
   171de:	4630      	mov	r0, r6
   171e0:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   171e4:	79e1      	ldrb	r1, [r4, #7]
   171e6:	b129      	cbz	r1, 171f4 <f_read+0x38>
   171e8:	6820      	ldr	r0, [r4, #0]
   171ea:	f7ff f9a0 	bl	1652e <unlock_fs>
   171ee:	79e0      	ldrb	r0, [r4, #7]
   171f0:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   171f4:	79a3      	ldrb	r3, [r4, #6]
   171f6:	07d9      	lsls	r1, r3, #31
   171f8:	d406      	bmi.n	17208 <f_read+0x4c>
   171fa:	6820      	ldr	r0, [r4, #0]
   171fc:	2107      	movs	r1, #7
   171fe:	f7ff f996 	bl	1652e <unlock_fs>
   17202:	2007      	movs	r0, #7
   17204:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17208:	68e1      	ldr	r1, [r4, #12]
   1720a:	68a3      	ldr	r3, [r4, #8]
   1720c:	1acd      	subs	r5, r1, r3
   1720e:	45a8      	cmp	r8, r5
   17210:	bf38      	it	cc
   17212:	4645      	movcc	r5, r8
   17214:	2d00      	cmp	r5, #0
   17216:	f000 8088 	beq.w	1732a <f_read+0x16e>
   1721a:	68a3      	ldr	r3, [r4, #8]
   1721c:	f3c3 0208 	ubfx	r2, r3, #0, #9
   17220:	2a00      	cmp	r2, #0
   17222:	d169      	bne.n	172f8 <f_read+0x13c>
   17224:	6820      	ldr	r0, [r4, #0]
   17226:	f890 b002 	ldrb.w	fp, [r0, #2]
   1722a:	f10b 3bff 	add.w	fp, fp, #4294967295
   1722e:	ea0b 2b53 	and.w	fp, fp, r3, lsr #9
   17232:	f01b 0bff 	ands.w	fp, fp, #255	; 0xff
   17236:	d10c      	bne.n	17252 <f_read+0x96>
   17238:	b90b      	cbnz	r3, 1723e <f_read+0x82>
   1723a:	6920      	ldr	r0, [r4, #16]
   1723c:	e002      	b.n	17244 <f_read+0x88>
   1723e:	6961      	ldr	r1, [r4, #20]
   17240:	f7ff f98d 	bl	1655e <get_fat>
   17244:	2801      	cmp	r0, #1
   17246:	d801      	bhi.n	1724c <f_read+0x90>
   17248:	2502      	movs	r5, #2
   1724a:	e052      	b.n	172f2 <f_read+0x136>
   1724c:	1c42      	adds	r2, r0, #1
   1724e:	d04f      	beq.n	172f0 <f_read+0x134>
   17250:	6160      	str	r0, [r4, #20]
   17252:	f8d4 9000 	ldr.w	r9, [r4]
   17256:	6961      	ldr	r1, [r4, #20]
   17258:	4648      	mov	r0, r9
   1725a:	f7ff f975 	bl	16548 <clust2sect>
   1725e:	b918      	cbnz	r0, 17268 <f_read+0xac>
   17260:	2502      	movs	r5, #2
   17262:	71e5      	strb	r5, [r4, #7]
   17264:	4648      	mov	r0, r9
   17266:	e061      	b.n	1732c <f_read+0x170>
   17268:	ea5f 2855 	movs.w	r8, r5, lsr #9
   1726c:	eb00 060b 	add.w	r6, r0, fp
   17270:	d022      	beq.n	172b8 <f_read+0xfc>
   17272:	f899 3002 	ldrb.w	r3, [r9, #2]
   17276:	eb08 020b 	add.w	r2, r8, fp
   1727a:	429a      	cmp	r2, r3
   1727c:	bf88      	it	hi
   1727e:	ebcb 0803 	rsbhi	r8, fp, r3
   17282:	f899 0001 	ldrb.w	r0, [r9, #1]
   17286:	4639      	mov	r1, r7
   17288:	4632      	mov	r2, r6
   1728a:	fa5f f388 	uxtb.w	r3, r8
   1728e:	f7fe f80f 	bl	152b0 <disk_read>
   17292:	bb68      	cbnz	r0, 172f0 <f_read+0x134>
   17294:	79a3      	ldrb	r3, [r4, #6]
   17296:	065b      	lsls	r3, r3, #25
   17298:	d50b      	bpl.n	172b2 <f_read+0xf6>
   1729a:	69a3      	ldr	r3, [r4, #24]
   1729c:	1b98      	subs	r0, r3, r6
   1729e:	4540      	cmp	r0, r8
   172a0:	d207      	bcs.n	172b2 <f_read+0xf6>
   172a2:	eb07 2040 	add.w	r0, r7, r0, lsl #9
   172a6:	f104 0124 	add.w	r1, r4, #36	; 0x24
   172aa:	f44f 7200 	mov.w	r2, #512	; 0x200
   172ae:	f7fe fecc 	bl	1604a <mem_cpy>
   172b2:	ea4f 2648 	mov.w	r6, r8, lsl #9
   172b6:	e02d      	b.n	17314 <f_read+0x158>
   172b8:	69a2      	ldr	r2, [r4, #24]
   172ba:	42b2      	cmp	r2, r6
   172bc:	d01b      	beq.n	172f6 <f_read+0x13a>
   172be:	79a3      	ldrb	r3, [r4, #6]
   172c0:	f104 0824 	add.w	r8, r4, #36	; 0x24
   172c4:	f013 0f40 	tst.w	r3, #64	; 0x40
   172c8:	d00a      	beq.n	172e0 <f_read+0x124>
   172ca:	f899 0001 	ldrb.w	r0, [r9, #1]
   172ce:	4641      	mov	r1, r8
   172d0:	2301      	movs	r3, #1
   172d2:	f7fe f809 	bl	152e8 <disk_write>
   172d6:	b958      	cbnz	r0, 172f0 <f_read+0x134>
   172d8:	79a3      	ldrb	r3, [r4, #6]
   172da:	f023 0340 	bic.w	r3, r3, #64	; 0x40
   172de:	71a3      	strb	r3, [r4, #6]
   172e0:	6823      	ldr	r3, [r4, #0]
   172e2:	4641      	mov	r1, r8
   172e4:	7858      	ldrb	r0, [r3, #1]
   172e6:	4632      	mov	r2, r6
   172e8:	2301      	movs	r3, #1
   172ea:	f7fd ffe1 	bl	152b0 <disk_read>
   172ee:	b110      	cbz	r0, 172f6 <f_read+0x13a>
   172f0:	2501      	movs	r5, #1
   172f2:	71e5      	strb	r5, [r4, #7]
   172f4:	e019      	b.n	1732a <f_read+0x16e>
   172f6:	61a6      	str	r6, [r4, #24]
   172f8:	68a1      	ldr	r1, [r4, #8]
   172fa:	4638      	mov	r0, r7
   172fc:	f3c1 0108 	ubfx	r1, r1, #0, #9
   17300:	f5c1 7600 	rsb	r6, r1, #512	; 0x200
   17304:	42b5      	cmp	r5, r6
   17306:	bf38      	it	cc
   17308:	462e      	movcc	r6, r5
   1730a:	4421      	add	r1, r4
   1730c:	3124      	adds	r1, #36	; 0x24
   1730e:	4632      	mov	r2, r6
   17310:	f7fe fe9b 	bl	1604a <mem_cpy>
   17314:	68a3      	ldr	r3, [r4, #8]
   17316:	4437      	add	r7, r6
   17318:	4433      	add	r3, r6
   1731a:	60a3      	str	r3, [r4, #8]
   1731c:	f8da 3000 	ldr.w	r3, [sl]
   17320:	1bad      	subs	r5, r5, r6
   17322:	4433      	add	r3, r6
   17324:	f8ca 3000 	str.w	r3, [sl]
   17328:	e774      	b.n	17214 <f_read+0x58>
   1732a:	6820      	ldr	r0, [r4, #0]
   1732c:	4629      	mov	r1, r5
   1732e:	f7ff f8fe 	bl	1652e <unlock_fs>
   17332:	4628      	mov	r0, r5
   17334:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

00017338 <f_write>:
f_write():
   17338:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1733c:	4699      	mov	r9, r3
   1733e:	2300      	movs	r3, #0
   17340:	f8c9 3000 	str.w	r3, [r9]
   17344:	4604      	mov	r4, r0
   17346:	460f      	mov	r7, r1
   17348:	4615      	mov	r5, r2
   1734a:	f7ff f8d3 	bl	164f4 <validate>
   1734e:	4606      	mov	r6, r0
   17350:	b130      	cbz	r0, 17360 <f_write+0x28>
   17352:	6820      	ldr	r0, [r4, #0]
   17354:	4631      	mov	r1, r6
   17356:	f7ff f8ea 	bl	1652e <unlock_fs>
   1735a:	4630      	mov	r0, r6
   1735c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17360:	79e1      	ldrb	r1, [r4, #7]
   17362:	b129      	cbz	r1, 17370 <f_write+0x38>
   17364:	6820      	ldr	r0, [r4, #0]
   17366:	f7ff f8e2 	bl	1652e <unlock_fs>
   1736a:	79e0      	ldrb	r0, [r4, #7]
   1736c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17370:	79a3      	ldrb	r3, [r4, #6]
   17372:	0799      	lsls	r1, r3, #30
   17374:	d406      	bmi.n	17384 <f_write+0x4c>
   17376:	6820      	ldr	r0, [r4, #0]
   17378:	2107      	movs	r1, #7
   1737a:	f7ff f8d8 	bl	1652e <unlock_fs>
   1737e:	2007      	movs	r0, #7
   17380:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17384:	68a3      	ldr	r3, [r4, #8]
   17386:	42dd      	cmn	r5, r3
   17388:	bf28      	it	cs
   1738a:	2500      	movcs	r5, #0
   1738c:	b1c5      	cbz	r5, 173c0 <f_write+0x88>
   1738e:	68a3      	ldr	r3, [r4, #8]
   17390:	f3c3 0208 	ubfx	r2, r3, #0, #9
   17394:	2a00      	cmp	r2, #0
   17396:	f040 8085 	bne.w	174a4 <f_write+0x16c>
   1739a:	6820      	ldr	r0, [r4, #0]
   1739c:	f890 a002 	ldrb.w	sl, [r0, #2]
   173a0:	f10a 3aff 	add.w	sl, sl, #4294967295
   173a4:	ea0a 2a53 	and.w	sl, sl, r3, lsr #9
   173a8:	f01a 0aff 	ands.w	sl, sl, #255	; 0xff
   173ac:	d122      	bne.n	173f4 <f_write+0xbc>
   173ae:	b913      	cbnz	r3, 173b6 <f_write+0x7e>
   173b0:	6921      	ldr	r1, [r4, #16]
   173b2:	b961      	cbnz	r1, 173ce <f_write+0x96>
   173b4:	e000      	b.n	173b8 <f_write+0x80>
   173b6:	6961      	ldr	r1, [r4, #20]
   173b8:	f7ff f9ca 	bl	16750 <create_chain>
   173bc:	4601      	mov	r1, r0
   173be:	b930      	cbnz	r0, 173ce <f_write+0x96>
   173c0:	68a3      	ldr	r3, [r4, #8]
   173c2:	68e2      	ldr	r2, [r4, #12]
   173c4:	4293      	cmp	r3, r2
   173c6:	f240 808a 	bls.w	174de <f_write+0x1a6>
   173ca:	60e3      	str	r3, [r4, #12]
   173cc:	e087      	b.n	174de <f_write+0x1a6>
   173ce:	2901      	cmp	r1, #1
   173d0:	d101      	bne.n	173d6 <f_write+0x9e>
   173d2:	2502      	movs	r5, #2
   173d4:	e002      	b.n	173dc <f_write+0xa4>
   173d6:	1c4a      	adds	r2, r1, #1
   173d8:	d108      	bne.n	173ec <f_write+0xb4>
   173da:	2501      	movs	r5, #1
   173dc:	6820      	ldr	r0, [r4, #0]
   173de:	71e5      	strb	r5, [r4, #7]
   173e0:	4629      	mov	r1, r5
   173e2:	f7ff f8a4 	bl	1652e <unlock_fs>
   173e6:	4628      	mov	r0, r5
   173e8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   173ec:	6923      	ldr	r3, [r4, #16]
   173ee:	6161      	str	r1, [r4, #20]
   173f0:	b903      	cbnz	r3, 173f4 <f_write+0xbc>
   173f2:	6121      	str	r1, [r4, #16]
   173f4:	79a3      	ldrb	r3, [r4, #6]
   173f6:	065b      	lsls	r3, r3, #25
   173f8:	d50d      	bpl.n	17416 <f_write+0xde>
   173fa:	4621      	mov	r1, r4
   173fc:	f851 3b24 	ldr.w	r3, [r1], #36
   17400:	69a2      	ldr	r2, [r4, #24]
   17402:	7858      	ldrb	r0, [r3, #1]
   17404:	2301      	movs	r3, #1
   17406:	f7fd ff6f 	bl	152e8 <disk_write>
   1740a:	2800      	cmp	r0, #0
   1740c:	d1e5      	bne.n	173da <f_write+0xa2>
   1740e:	79a3      	ldrb	r3, [r4, #6]
   17410:	f023 0340 	bic.w	r3, r3, #64	; 0x40
   17414:	71a3      	strb	r3, [r4, #6]
   17416:	f8d4 b000 	ldr.w	fp, [r4]
   1741a:	6961      	ldr	r1, [r4, #20]
   1741c:	4658      	mov	r0, fp
   1741e:	f7ff f893 	bl	16548 <clust2sect>
   17422:	b918      	cbnz	r0, 1742c <f_write+0xf4>
   17424:	2502      	movs	r5, #2
   17426:	71e5      	strb	r5, [r4, #7]
   17428:	4658      	mov	r0, fp
   1742a:	e7d9      	b.n	173e0 <f_write+0xa8>
   1742c:	ea5f 2855 	movs.w	r8, r5, lsr #9
   17430:	eb00 060a 	add.w	r6, r0, sl
   17434:	d024      	beq.n	17480 <f_write+0x148>
   17436:	f89b 3002 	ldrb.w	r3, [fp, #2]
   1743a:	eb08 020a 	add.w	r2, r8, sl
   1743e:	429a      	cmp	r2, r3
   17440:	bf88      	it	hi
   17442:	ebca 0803 	rsbhi	r8, sl, r3
   17446:	f89b 0001 	ldrb.w	r0, [fp, #1]
   1744a:	4639      	mov	r1, r7
   1744c:	4632      	mov	r2, r6
   1744e:	fa5f f388 	uxtb.w	r3, r8
   17452:	f7fd ff49 	bl	152e8 <disk_write>
   17456:	2800      	cmp	r0, #0
   17458:	d1bf      	bne.n	173da <f_write+0xa2>
   1745a:	69a3      	ldr	r3, [r4, #24]
   1745c:	1b99      	subs	r1, r3, r6
   1745e:	4541      	cmp	r1, r8
   17460:	d20b      	bcs.n	1747a <f_write+0x142>
   17462:	f104 0024 	add.w	r0, r4, #36	; 0x24
   17466:	eb07 2141 	add.w	r1, r7, r1, lsl #9
   1746a:	f44f 7200 	mov.w	r2, #512	; 0x200
   1746e:	f7fe fdec 	bl	1604a <mem_cpy>
   17472:	79a3      	ldrb	r3, [r4, #6]
   17474:	f023 0340 	bic.w	r3, r3, #64	; 0x40
   17478:	71a3      	strb	r3, [r4, #6]
   1747a:	ea4f 2648 	mov.w	r6, r8, lsl #9
   1747e:	e023      	b.n	174c8 <f_write+0x190>
   17480:	69a3      	ldr	r3, [r4, #24]
   17482:	42b3      	cmp	r3, r6
   17484:	d00d      	beq.n	174a2 <f_write+0x16a>
   17486:	68a2      	ldr	r2, [r4, #8]
   17488:	68e3      	ldr	r3, [r4, #12]
   1748a:	429a      	cmp	r2, r3
   1748c:	d209      	bcs.n	174a2 <f_write+0x16a>
   1748e:	f89b 0001 	ldrb.w	r0, [fp, #1]
   17492:	f104 0124 	add.w	r1, r4, #36	; 0x24
   17496:	4632      	mov	r2, r6
   17498:	2301      	movs	r3, #1
   1749a:	f7fd ff09 	bl	152b0 <disk_read>
   1749e:	2800      	cmp	r0, #0
   174a0:	d19b      	bne.n	173da <f_write+0xa2>
   174a2:	61a6      	str	r6, [r4, #24]
   174a4:	68a0      	ldr	r0, [r4, #8]
   174a6:	4639      	mov	r1, r7
   174a8:	f3c0 0008 	ubfx	r0, r0, #0, #9
   174ac:	f5c0 7600 	rsb	r6, r0, #512	; 0x200
   174b0:	42b5      	cmp	r5, r6
   174b2:	bf38      	it	cc
   174b4:	462e      	movcc	r6, r5
   174b6:	4420      	add	r0, r4
   174b8:	3024      	adds	r0, #36	; 0x24
   174ba:	4632      	mov	r2, r6
   174bc:	f7fe fdc5 	bl	1604a <mem_cpy>
   174c0:	79a3      	ldrb	r3, [r4, #6]
   174c2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   174c6:	71a3      	strb	r3, [r4, #6]
   174c8:	68a3      	ldr	r3, [r4, #8]
   174ca:	4437      	add	r7, r6
   174cc:	4433      	add	r3, r6
   174ce:	60a3      	str	r3, [r4, #8]
   174d0:	f8d9 3000 	ldr.w	r3, [r9]
   174d4:	1bad      	subs	r5, r5, r6
   174d6:	4433      	add	r3, r6
   174d8:	f8c9 3000 	str.w	r3, [r9]
   174dc:	e756      	b.n	1738c <f_write+0x54>
   174de:	79a3      	ldrb	r3, [r4, #6]
   174e0:	6820      	ldr	r0, [r4, #0]
   174e2:	f043 0320 	orr.w	r3, r3, #32
   174e6:	71a3      	strb	r3, [r4, #6]
   174e8:	2100      	movs	r1, #0
   174ea:	f7ff f820 	bl	1652e <unlock_fs>
   174ee:	2000      	movs	r0, #0
   174f0:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

000174f4 <f_sync>:
f_sync():
   174f4:	b570      	push	{r4, r5, r6, lr}
   174f6:	4604      	mov	r4, r0
   174f8:	f7fe fffc 	bl	164f4 <validate>
   174fc:	4605      	mov	r5, r0
   174fe:	2800      	cmp	r0, #0
   17500:	d138      	bne.n	17574 <f_sync+0x80>
   17502:	79a3      	ldrb	r3, [r4, #6]
   17504:	069a      	lsls	r2, r3, #26
   17506:	d535      	bpl.n	17574 <f_sync+0x80>
   17508:	065b      	lsls	r3, r3, #25
   1750a:	d512      	bpl.n	17532 <f_sync+0x3e>
   1750c:	4621      	mov	r1, r4
   1750e:	f851 3b24 	ldr.w	r3, [r1], #36
   17512:	69a2      	ldr	r2, [r4, #24]
   17514:	7858      	ldrb	r0, [r3, #1]
   17516:	2301      	movs	r3, #1
   17518:	f7fd fee6 	bl	152e8 <disk_write>
   1751c:	b128      	cbz	r0, 1752a <f_sync+0x36>
   1751e:	6820      	ldr	r0, [r4, #0]
   17520:	2101      	movs	r1, #1
   17522:	f7ff f804 	bl	1652e <unlock_fs>
   17526:	2001      	movs	r0, #1
   17528:	bd70      	pop	{r4, r5, r6, pc}
   1752a:	79a3      	ldrb	r3, [r4, #6]
   1752c:	f023 0340 	bic.w	r3, r3, #64	; 0x40
   17530:	71a3      	strb	r3, [r4, #6]
   17532:	6820      	ldr	r0, [r4, #0]
   17534:	69e1      	ldr	r1, [r4, #28]
   17536:	f7fe fe8f 	bl	16258 <move_window>
   1753a:	4605      	mov	r5, r0
   1753c:	b9d0      	cbnz	r0, 17574 <f_sync+0x80>
   1753e:	6a26      	ldr	r6, [r4, #32]
   17540:	7af3      	ldrb	r3, [r6, #11]
   17542:	f043 0320 	orr.w	r3, r3, #32
   17546:	72f3      	strb	r3, [r6, #11]
   17548:	68e3      	ldr	r3, [r4, #12]
   1754a:	61f3      	str	r3, [r6, #28]
   1754c:	6923      	ldr	r3, [r4, #16]
   1754e:	8373      	strh	r3, [r6, #26]
   17550:	0c1b      	lsrs	r3, r3, #16
   17552:	82b3      	strh	r3, [r6, #20]
   17554:	f7fe fd50 	bl	15ff8 <get_fattime>
   17558:	8275      	strh	r5, [r6, #18]
   1755a:	f8c6 0016 	str.w	r0, [r6, #22]
   1755e:	79a3      	ldrb	r3, [r4, #6]
   17560:	2201      	movs	r2, #1
   17562:	f023 0320 	bic.w	r3, r3, #32
   17566:	71a3      	strb	r3, [r4, #6]
   17568:	6823      	ldr	r3, [r4, #0]
   1756a:	711a      	strb	r2, [r3, #4]
   1756c:	6820      	ldr	r0, [r4, #0]
   1756e:	f7fe fe37 	bl	161e0 <sync_fs>
   17572:	4605      	mov	r5, r0
   17574:	6820      	ldr	r0, [r4, #0]
   17576:	4629      	mov	r1, r5
   17578:	f7fe ffd9 	bl	1652e <unlock_fs>
   1757c:	4628      	mov	r0, r5
   1757e:	bd70      	pop	{r4, r5, r6, pc}

00017580 <f_close>:
f_close():
   17580:	b538      	push	{r3, r4, r5, lr}
   17582:	4605      	mov	r5, r0
   17584:	f7ff ffb6 	bl	174f4 <f_sync>
   17588:	4604      	mov	r4, r0
   1758a:	b948      	cbnz	r0, 175a0 <f_close+0x20>
   1758c:	4628      	mov	r0, r5
   1758e:	f7fe ffb1 	bl	164f4 <validate>
   17592:	4604      	mov	r4, r0
   17594:	b920      	cbnz	r0, 175a0 <f_close+0x20>
   17596:	6828      	ldr	r0, [r5, #0]
   17598:	4621      	mov	r1, r4
   1759a:	602c      	str	r4, [r5, #0]
   1759c:	f7fe ffc7 	bl	1652e <unlock_fs>
   175a0:	4620      	mov	r0, r4
   175a2:	bd38      	pop	{r3, r4, r5, pc}

000175a4 <f_lseek>:
f_lseek():
   175a4:	b570      	push	{r4, r5, r6, lr}
   175a6:	4604      	mov	r4, r0
   175a8:	460d      	mov	r5, r1
   175aa:	f7fe ffa3 	bl	164f4 <validate>
   175ae:	4606      	mov	r6, r0
   175b0:	b128      	cbz	r0, 175be <f_lseek+0x1a>
   175b2:	6820      	ldr	r0, [r4, #0]
   175b4:	4631      	mov	r1, r6
   175b6:	f7fe ffba 	bl	1652e <unlock_fs>
   175ba:	4630      	mov	r0, r6
   175bc:	bd70      	pop	{r4, r5, r6, pc}
   175be:	79e1      	ldrb	r1, [r4, #7]
   175c0:	b121      	cbz	r1, 175cc <f_lseek+0x28>
   175c2:	6820      	ldr	r0, [r4, #0]
   175c4:	f7fe ffb3 	bl	1652e <unlock_fs>
   175c8:	79e0      	ldrb	r0, [r4, #7]
   175ca:	bd70      	pop	{r4, r5, r6, pc}
   175cc:	68e3      	ldr	r3, [r4, #12]
   175ce:	429d      	cmp	r5, r3
   175d0:	d904      	bls.n	175dc <f_lseek+0x38>
   175d2:	79a2      	ldrb	r2, [r4, #6]
   175d4:	f012 0f02 	tst.w	r2, #2
   175d8:	bf08      	it	eq
   175da:	461d      	moveq	r5, r3
   175dc:	2200      	movs	r2, #0
   175de:	68a3      	ldr	r3, [r4, #8]
   175e0:	60a2      	str	r2, [r4, #8]
   175e2:	b90d      	cbnz	r5, 175e8 <f_lseek+0x44>
   175e4:	2500      	movs	r5, #0
   175e6:	e058      	b.n	1769a <f_lseek+0xf6>
   175e8:	6820      	ldr	r0, [r4, #0]
   175ea:	7886      	ldrb	r6, [r0, #2]
   175ec:	0276      	lsls	r6, r6, #9
   175ee:	b16b      	cbz	r3, 1760c <f_lseek+0x68>
   175f0:	3b01      	subs	r3, #1
   175f2:	1e69      	subs	r1, r5, #1
   175f4:	fbb1 f1f6 	udiv	r1, r1, r6
   175f8:	fbb3 f2f6 	udiv	r2, r3, r6
   175fc:	4291      	cmp	r1, r2
   175fe:	d305      	bcc.n	1760c <f_lseek+0x68>
   17600:	4272      	negs	r2, r6
   17602:	4013      	ands	r3, r2
   17604:	60a3      	str	r3, [r4, #8]
   17606:	1aed      	subs	r5, r5, r3
   17608:	6961      	ldr	r1, [r4, #20]
   1760a:	e013      	b.n	17634 <f_lseek+0x90>
   1760c:	6921      	ldr	r1, [r4, #16]
   1760e:	b981      	cbnz	r1, 17632 <f_lseek+0x8e>
   17610:	f7ff f89e 	bl	16750 <create_chain>
   17614:	2801      	cmp	r0, #1
   17616:	4601      	mov	r1, r0
   17618:	d026      	beq.n	17668 <f_lseek+0xc4>
   1761a:	3001      	adds	r0, #1
   1761c:	bf18      	it	ne
   1761e:	6121      	strne	r1, [r4, #16]
   17620:	d107      	bne.n	17632 <f_lseek+0x8e>
   17622:	2501      	movs	r5, #1
   17624:	6820      	ldr	r0, [r4, #0]
   17626:	71e5      	strb	r5, [r4, #7]
   17628:	4629      	mov	r1, r5
   1762a:	f7fe ff80 	bl	1652e <unlock_fs>
   1762e:	4628      	mov	r0, r5
   17630:	bd70      	pop	{r4, r5, r6, pc}
   17632:	6161      	str	r1, [r4, #20]
   17634:	2900      	cmp	r1, #0
   17636:	d0d5      	beq.n	175e4 <f_lseek+0x40>
   17638:	e008      	b.n	1764c <f_lseek+0xa8>
   1763a:	6823      	ldr	r3, [r4, #0]
   1763c:	699b      	ldr	r3, [r3, #24]
   1763e:	4299      	cmp	r1, r3
   17640:	d212      	bcs.n	17668 <f_lseek+0xc4>
   17642:	68a3      	ldr	r3, [r4, #8]
   17644:	6161      	str	r1, [r4, #20]
   17646:	4433      	add	r3, r6
   17648:	60a3      	str	r3, [r4, #8]
   1764a:	1bad      	subs	r5, r5, r6
   1764c:	42b5      	cmp	r5, r6
   1764e:	d912      	bls.n	17676 <f_lseek+0xd2>
   17650:	79a3      	ldrb	r3, [r4, #6]
   17652:	6820      	ldr	r0, [r4, #0]
   17654:	079a      	lsls	r2, r3, #30
   17656:	d509      	bpl.n	1766c <f_lseek+0xc8>
   17658:	f7ff f87a 	bl	16750 <create_chain>
   1765c:	4601      	mov	r1, r0
   1765e:	b148      	cbz	r0, 17674 <f_lseek+0xd0>
   17660:	1c4b      	adds	r3, r1, #1
   17662:	d0de      	beq.n	17622 <f_lseek+0x7e>
   17664:	2901      	cmp	r1, #1
   17666:	d8e8      	bhi.n	1763a <f_lseek+0x96>
   17668:	2502      	movs	r5, #2
   1766a:	e7db      	b.n	17624 <f_lseek+0x80>
   1766c:	f7fe ff77 	bl	1655e <get_fat>
   17670:	4601      	mov	r1, r0
   17672:	e7f5      	b.n	17660 <f_lseek+0xbc>
   17674:	4635      	mov	r5, r6
   17676:	68a3      	ldr	r3, [r4, #8]
   17678:	442b      	add	r3, r5
   1767a:	60a3      	str	r3, [r4, #8]
   1767c:	f3c5 0308 	ubfx	r3, r5, #0, #9
   17680:	2b00      	cmp	r3, #0
   17682:	d0af      	beq.n	175e4 <f_lseek+0x40>
   17684:	6826      	ldr	r6, [r4, #0]
   17686:	4630      	mov	r0, r6
   17688:	f7fe ff5e 	bl	16548 <clust2sect>
   1768c:	b918      	cbnz	r0, 17696 <f_lseek+0xf2>
   1768e:	2502      	movs	r5, #2
   17690:	71e5      	strb	r5, [r4, #7]
   17692:	4630      	mov	r0, r6
   17694:	e7c8      	b.n	17628 <f_lseek+0x84>
   17696:	eb00 2555 	add.w	r5, r0, r5, lsr #9
   1769a:	68a3      	ldr	r3, [r4, #8]
   1769c:	f3c3 0308 	ubfx	r3, r3, #0, #9
   176a0:	b1f3      	cbz	r3, 176e0 <f_lseek+0x13c>
   176a2:	69a2      	ldr	r2, [r4, #24]
   176a4:	4295      	cmp	r5, r2
   176a6:	d01b      	beq.n	176e0 <f_lseek+0x13c>
   176a8:	79a3      	ldrb	r3, [r4, #6]
   176aa:	f104 0624 	add.w	r6, r4, #36	; 0x24
   176ae:	f013 0f40 	tst.w	r3, #64	; 0x40
   176b2:	d00b      	beq.n	176cc <f_lseek+0x128>
   176b4:	6823      	ldr	r3, [r4, #0]
   176b6:	4631      	mov	r1, r6
   176b8:	7858      	ldrb	r0, [r3, #1]
   176ba:	2301      	movs	r3, #1
   176bc:	f7fd fe14 	bl	152e8 <disk_write>
   176c0:	2800      	cmp	r0, #0
   176c2:	d1ae      	bne.n	17622 <f_lseek+0x7e>
   176c4:	79a3      	ldrb	r3, [r4, #6]
   176c6:	f023 0340 	bic.w	r3, r3, #64	; 0x40
   176ca:	71a3      	strb	r3, [r4, #6]
   176cc:	6823      	ldr	r3, [r4, #0]
   176ce:	4631      	mov	r1, r6
   176d0:	7858      	ldrb	r0, [r3, #1]
   176d2:	462a      	mov	r2, r5
   176d4:	2301      	movs	r3, #1
   176d6:	f7fd fdeb 	bl	152b0 <disk_read>
   176da:	2800      	cmp	r0, #0
   176dc:	d1a1      	bne.n	17622 <f_lseek+0x7e>
   176de:	61a5      	str	r5, [r4, #24]
   176e0:	68a3      	ldr	r3, [r4, #8]
   176e2:	68e2      	ldr	r2, [r4, #12]
   176e4:	4293      	cmp	r3, r2
   176e6:	d904      	bls.n	176f2 <f_lseek+0x14e>
   176e8:	60e3      	str	r3, [r4, #12]
   176ea:	79a3      	ldrb	r3, [r4, #6]
   176ec:	f043 0320 	orr.w	r3, r3, #32
   176f0:	71a3      	strb	r3, [r4, #6]
   176f2:	6820      	ldr	r0, [r4, #0]
   176f4:	2100      	movs	r1, #0
   176f6:	f7fe ff1a 	bl	1652e <unlock_fs>
   176fa:	2000      	movs	r0, #0
   176fc:	bd70      	pop	{r4, r5, r6, pc}

000176fe <f_opendir>:
f_opendir():
   176fe:	b530      	push	{r4, r5, lr}
   17700:	b0c9      	sub	sp, #292	; 0x124
   17702:	9101      	str	r1, [sp, #4]
   17704:	4604      	mov	r4, r0
   17706:	2800      	cmp	r0, #0
   17708:	d035      	beq.n	17776 <f_opendir+0x78>
   1770a:	a803      	add	r0, sp, #12
   1770c:	a901      	add	r1, sp, #4
   1770e:	2200      	movs	r2, #0
   17710:	f7fe fde2 	bl	162d8 <find_volume>
   17714:	4605      	mov	r5, r0
   17716:	bb30      	cbnz	r0, 17766 <f_opendir+0x68>
   17718:	9b03      	ldr	r3, [sp, #12]
   1771a:	4620      	mov	r0, r4
   1771c:	6023      	str	r3, [r4, #0]
   1771e:	ab04      	add	r3, sp, #16
   17720:	61a3      	str	r3, [r4, #24]
   17722:	ab07      	add	r3, sp, #28
   17724:	61e3      	str	r3, [r4, #28]
   17726:	9901      	ldr	r1, [sp, #4]
   17728:	f7ff f96e 	bl	16a08 <follow_path>
   1772c:	4605      	mov	r5, r0
   1772e:	b9a8      	cbnz	r0, 1775c <f_opendir+0x5e>
   17730:	6963      	ldr	r3, [r4, #20]
   17732:	b15b      	cbz	r3, 1774c <f_opendir+0x4e>
   17734:	7ada      	ldrb	r2, [r3, #11]
   17736:	06d2      	lsls	r2, r2, #27
   17738:	d514      	bpl.n	17764 <f_opendir+0x66>
   1773a:	9903      	ldr	r1, [sp, #12]
   1773c:	8b5a      	ldrh	r2, [r3, #26]
   1773e:	7809      	ldrb	r1, [r1, #0]
   17740:	2903      	cmp	r1, #3
   17742:	bf04      	itt	eq
   17744:	8a9b      	ldrheq	r3, [r3, #20]
   17746:	ea42 4203 	orreq.w	r2, r2, r3, lsl #16
   1774a:	60a2      	str	r2, [r4, #8]
   1774c:	9b03      	ldr	r3, [sp, #12]
   1774e:	4620      	mov	r0, r4
   17750:	88db      	ldrh	r3, [r3, #6]
   17752:	2100      	movs	r1, #0
   17754:	80a3      	strh	r3, [r4, #4]
   17756:	f7fe ff55 	bl	16604 <dir_sdi>
   1775a:	4605      	mov	r5, r0
   1775c:	2d04      	cmp	r5, #4
   1775e:	d001      	beq.n	17764 <f_opendir+0x66>
   17760:	b11d      	cbz	r5, 1776a <f_opendir+0x6c>
   17762:	e000      	b.n	17766 <f_opendir+0x68>
   17764:	2505      	movs	r5, #5
   17766:	2300      	movs	r3, #0
   17768:	6023      	str	r3, [r4, #0]
   1776a:	9803      	ldr	r0, [sp, #12]
   1776c:	4629      	mov	r1, r5
   1776e:	f7fe fede 	bl	1652e <unlock_fs>
   17772:	4628      	mov	r0, r5
   17774:	e000      	b.n	17778 <f_opendir+0x7a>
   17776:	2009      	movs	r0, #9
   17778:	b049      	add	sp, #292	; 0x124
   1777a:	bd30      	pop	{r4, r5, pc}

0001777c <f_readdir>:
f_readdir():
   1777c:	b570      	push	{r4, r5, r6, lr}
   1777e:	b0c4      	sub	sp, #272	; 0x110
   17780:	4604      	mov	r4, r0
   17782:	460e      	mov	r6, r1
   17784:	f7fe feb6 	bl	164f4 <validate>
   17788:	4605      	mov	r5, r0
   1778a:	b9f8      	cbnz	r0, 177cc <f_readdir+0x50>
   1778c:	b926      	cbnz	r6, 17798 <f_readdir+0x1c>
   1778e:	4620      	mov	r0, r4
   17790:	4629      	mov	r1, r5
   17792:	f7fe ff37 	bl	16604 <dir_sdi>
   17796:	e018      	b.n	177ca <f_readdir+0x4e>
   17798:	ab00      	add	r3, sp, #0
   1779a:	61a3      	str	r3, [r4, #24]
   1779c:	ab03      	add	r3, sp, #12
   1779e:	61e3      	str	r3, [r4, #28]
   177a0:	4620      	mov	r0, r4
   177a2:	f7ff fb9b 	bl	16edc <dir_read.constprop.11>
   177a6:	2804      	cmp	r0, #4
   177a8:	d101      	bne.n	177ae <f_readdir+0x32>
   177aa:	6125      	str	r5, [r4, #16]
   177ac:	e000      	b.n	177b0 <f_readdir+0x34>
   177ae:	b960      	cbnz	r0, 177ca <f_readdir+0x4e>
   177b0:	4620      	mov	r0, r4
   177b2:	4631      	mov	r1, r6
   177b4:	f7fe fc96 	bl	160e4 <get_fileinfo>
   177b8:	4620      	mov	r0, r4
   177ba:	2100      	movs	r1, #0
   177bc:	f7ff f819 	bl	167f2 <dir_next>
   177c0:	2804      	cmp	r0, #4
   177c2:	d102      	bne.n	177ca <f_readdir+0x4e>
   177c4:	2300      	movs	r3, #0
   177c6:	6123      	str	r3, [r4, #16]
   177c8:	e000      	b.n	177cc <f_readdir+0x50>
   177ca:	4605      	mov	r5, r0
   177cc:	6820      	ldr	r0, [r4, #0]
   177ce:	4629      	mov	r1, r5
   177d0:	f7fe fead 	bl	1652e <unlock_fs>
   177d4:	4628      	mov	r0, r5
   177d6:	b044      	add	sp, #272	; 0x110
   177d8:	bd70      	pop	{r4, r5, r6, pc}

000177da <f_getfree>:
f_getfree():
   177da:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
   177de:	ab02      	add	r3, sp, #8
   177e0:	f843 0d04 	str.w	r0, [r3, #-4]!
   177e4:	4614      	mov	r4, r2
   177e6:	4610      	mov	r0, r2
   177e8:	4688      	mov	r8, r1
   177ea:	2200      	movs	r2, #0
   177ec:	4619      	mov	r1, r3
   177ee:	f7fe fd73 	bl	162d8 <find_volume>
   177f2:	6824      	ldr	r4, [r4, #0]
   177f4:	4605      	mov	r5, r0
   177f6:	2800      	cmp	r0, #0
   177f8:	d14c      	bne.n	17894 <f_getfree+0xba>
   177fa:	69a7      	ldr	r7, [r4, #24]
   177fc:	6963      	ldr	r3, [r4, #20]
   177fe:	1eba      	subs	r2, r7, #2
   17800:	4293      	cmp	r3, r2
   17802:	d802      	bhi.n	1780a <f_getfree+0x30>
   17804:	f8c8 3000 	str.w	r3, [r8]
   17808:	e044      	b.n	17894 <f_getfree+0xba>
   1780a:	f894 9000 	ldrb.w	r9, [r4]
   1780e:	f1b9 0f01 	cmp.w	r9, #1
   17812:	d110      	bne.n	17836 <f_getfree+0x5c>
   17814:	2702      	movs	r7, #2
   17816:	4606      	mov	r6, r0
   17818:	4620      	mov	r0, r4
   1781a:	4639      	mov	r1, r7
   1781c:	f7fe fe9f 	bl	1655e <get_fat>
   17820:	1c43      	adds	r3, r0, #1
   17822:	d02b      	beq.n	1787c <f_getfree+0xa2>
   17824:	2801      	cmp	r0, #1
   17826:	d02b      	beq.n	17880 <f_getfree+0xa6>
   17828:	b900      	cbnz	r0, 1782c <f_getfree+0x52>
   1782a:	3601      	adds	r6, #1
   1782c:	69a3      	ldr	r3, [r4, #24]
   1782e:	3701      	adds	r7, #1
   17830:	429f      	cmp	r7, r3
   17832:	d3f1      	bcc.n	17818 <f_getfree+0x3e>
   17834:	e027      	b.n	17886 <f_getfree+0xac>
   17836:	6a61      	ldr	r1, [r4, #36]	; 0x24
   17838:	4603      	mov	r3, r0
   1783a:	4602      	mov	r2, r0
   1783c:	4606      	mov	r6, r0
   1783e:	b952      	cbnz	r2, 17856 <f_getfree+0x7c>
   17840:	4620      	mov	r0, r4
   17842:	f101 0a01 	add.w	sl, r1, #1
   17846:	f7fe fd07 	bl	16258 <move_window>
   1784a:	b9d8      	cbnz	r0, 17884 <f_getfree+0xaa>
   1784c:	f104 0334 	add.w	r3, r4, #52	; 0x34
   17850:	4651      	mov	r1, sl
   17852:	f44f 7200 	mov.w	r2, #512	; 0x200
   17856:	f1b9 0f02 	cmp.w	r9, #2
   1785a:	d105      	bne.n	17868 <f_getfree+0x8e>
   1785c:	8818      	ldrh	r0, [r3, #0]
   1785e:	b900      	cbnz	r0, 17862 <f_getfree+0x88>
   17860:	3601      	adds	r6, #1
   17862:	3302      	adds	r3, #2
   17864:	3a02      	subs	r2, #2
   17866:	e006      	b.n	17876 <f_getfree+0x9c>
   17868:	6818      	ldr	r0, [r3, #0]
   1786a:	f020 4070 	bic.w	r0, r0, #4026531840	; 0xf0000000
   1786e:	b900      	cbnz	r0, 17872 <f_getfree+0x98>
   17870:	3601      	adds	r6, #1
   17872:	3304      	adds	r3, #4
   17874:	3a04      	subs	r2, #4
   17876:	3f01      	subs	r7, #1
   17878:	d1e1      	bne.n	1783e <f_getfree+0x64>
   1787a:	e004      	b.n	17886 <f_getfree+0xac>
   1787c:	2501      	movs	r5, #1
   1787e:	e002      	b.n	17886 <f_getfree+0xac>
   17880:	2502      	movs	r5, #2
   17882:	e000      	b.n	17886 <f_getfree+0xac>
   17884:	4605      	mov	r5, r0
   17886:	7963      	ldrb	r3, [r4, #5]
   17888:	6166      	str	r6, [r4, #20]
   1788a:	f043 0301 	orr.w	r3, r3, #1
   1788e:	7163      	strb	r3, [r4, #5]
   17890:	f8c8 6000 	str.w	r6, [r8]
   17894:	4620      	mov	r0, r4
   17896:	4629      	mov	r1, r5
   17898:	f7fe fe49 	bl	1652e <unlock_fs>
   1789c:	4628      	mov	r0, r5
   1789e:	b002      	add	sp, #8
   178a0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

000178a4 <f_unlink>:
f_unlink():
   178a4:	b530      	push	{r4, r5, lr}
   178a6:	b0d9      	sub	sp, #356	; 0x164
   178a8:	9001      	str	r0, [sp, #4]
   178aa:	a901      	add	r1, sp, #4
   178ac:	a805      	add	r0, sp, #20
   178ae:	2201      	movs	r2, #1
   178b0:	f7fe fd12 	bl	162d8 <find_volume>
   178b4:	4604      	mov	r4, r0
   178b6:	2800      	cmp	r0, #0
   178b8:	d14a      	bne.n	17950 <f_unlink+0xac>
   178ba:	ab02      	add	r3, sp, #8
   178bc:	930b      	str	r3, [sp, #44]	; 0x2c
   178be:	a805      	add	r0, sp, #20
   178c0:	ab17      	add	r3, sp, #92	; 0x5c
   178c2:	9901      	ldr	r1, [sp, #4]
   178c4:	930c      	str	r3, [sp, #48]	; 0x30
   178c6:	f7ff f89f 	bl	16a08 <follow_path>
   178ca:	4604      	mov	r4, r0
   178cc:	2800      	cmp	r0, #0
   178ce:	d13f      	bne.n	17950 <f_unlink+0xac>
   178d0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   178d2:	b133      	cbz	r3, 178e2 <f_unlink+0x3e>
   178d4:	7ada      	ldrb	r2, [r3, #11]
   178d6:	f012 0f01 	tst.w	r2, #1
   178da:	bf0c      	ite	eq
   178dc:	2400      	moveq	r4, #0
   178de:	2407      	movne	r4, #7
   178e0:	e000      	b.n	178e4 <f_unlink+0x40>
   178e2:	2406      	movs	r4, #6
   178e4:	9a05      	ldr	r2, [sp, #20]
   178e6:	8b5d      	ldrh	r5, [r3, #26]
   178e8:	7812      	ldrb	r2, [r2, #0]
   178ea:	2a03      	cmp	r2, #3
   178ec:	bf04      	itt	eq
   178ee:	8a9a      	ldrheq	r2, [r3, #20]
   178f0:	ea45 4502 	orreq.w	r5, r5, r2, lsl #16
   178f4:	bb64      	cbnz	r4, 17950 <f_unlink+0xac>
   178f6:	7adb      	ldrb	r3, [r3, #11]
   178f8:	06db      	lsls	r3, r3, #27
   178fa:	d514      	bpl.n	17926 <f_unlink+0x82>
   178fc:	2d01      	cmp	r5, #1
   178fe:	d924      	bls.n	1794a <f_unlink+0xa6>
   17900:	a80e      	add	r0, sp, #56	; 0x38
   17902:	a905      	add	r1, sp, #20
   17904:	2224      	movs	r2, #36	; 0x24
   17906:	f7fe fba0 	bl	1604a <mem_cpy>
   1790a:	a80e      	add	r0, sp, #56	; 0x38
   1790c:	2102      	movs	r1, #2
   1790e:	9510      	str	r5, [sp, #64]	; 0x40
   17910:	f7fe fe78 	bl	16604 <dir_sdi>
   17914:	4604      	mov	r4, r0
   17916:	b9d8      	cbnz	r0, 17950 <f_unlink+0xac>
   17918:	a80e      	add	r0, sp, #56	; 0x38
   1791a:	f7ff fadf 	bl	16edc <dir_read.constprop.11>
   1791e:	4604      	mov	r4, r0
   17920:	b1a8      	cbz	r0, 1794e <f_unlink+0xaa>
   17922:	2804      	cmp	r0, #4
   17924:	d114      	bne.n	17950 <f_unlink+0xac>
   17926:	a805      	add	r0, sp, #20
   17928:	f7ff faaa 	bl	16e80 <dir_remove>
   1792c:	4604      	mov	r4, r0
   1792e:	b978      	cbnz	r0, 17950 <f_unlink+0xac>
   17930:	b925      	cbnz	r5, 1793c <f_unlink+0x98>
   17932:	9805      	ldr	r0, [sp, #20]
   17934:	f7fe fc54 	bl	161e0 <sync_fs>
   17938:	4604      	mov	r4, r0
   1793a:	e009      	b.n	17950 <f_unlink+0xac>
   1793c:	9805      	ldr	r0, [sp, #20]
   1793e:	4629      	mov	r1, r5
   17940:	f7ff fb40 	bl	16fc4 <remove_chain>
   17944:	4604      	mov	r4, r0
   17946:	b918      	cbnz	r0, 17950 <f_unlink+0xac>
   17948:	e7f3      	b.n	17932 <f_unlink+0x8e>
   1794a:	2402      	movs	r4, #2
   1794c:	e000      	b.n	17950 <f_unlink+0xac>
   1794e:	2407      	movs	r4, #7
   17950:	9805      	ldr	r0, [sp, #20]
   17952:	4621      	mov	r1, r4
   17954:	f7fe fdeb 	bl	1652e <unlock_fs>
   17958:	4620      	mov	r0, r4
   1795a:	b059      	add	sp, #356	; 0x164
   1795c:	bd30      	pop	{r4, r5, pc}

0001795e <f_mkdir>:
f_mkdir():
   1795e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17962:	b0d1      	sub	sp, #324	; 0x144
   17964:	9001      	str	r0, [sp, #4]
   17966:	f7fe fb47 	bl	15ff8 <get_fattime>
   1796a:	a901      	add	r1, sp, #4
   1796c:	4680      	mov	r8, r0
   1796e:	2201      	movs	r2, #1
   17970:	a806      	add	r0, sp, #24
   17972:	f7fe fcb1 	bl	162d8 <find_volume>
   17976:	4604      	mov	r4, r0
   17978:	4605      	mov	r5, r0
   1797a:	2800      	cmp	r0, #0
   1797c:	f040 8092 	bne.w	17aa4 <f_mkdir+0x146>
   17980:	ab03      	add	r3, sp, #12
   17982:	930c      	str	r3, [sp, #48]	; 0x30
   17984:	a806      	add	r0, sp, #24
   17986:	ab0f      	add	r3, sp, #60	; 0x3c
   17988:	9901      	ldr	r1, [sp, #4]
   1798a:	930d      	str	r3, [sp, #52]	; 0x34
   1798c:	f7ff f83c 	bl	16a08 <follow_path>
   17990:	4604      	mov	r4, r0
   17992:	b1a8      	cbz	r0, 179c0 <f_mkdir+0x62>
   17994:	2804      	cmp	r0, #4
   17996:	f040 8085 	bne.w	17aa4 <f_mkdir+0x146>
   1799a:	9806      	ldr	r0, [sp, #24]
   1799c:	4629      	mov	r1, r5
   1799e:	f7fe fed7 	bl	16750 <create_chain>
   179a2:	4606      	mov	r6, r0
   179a4:	b130      	cbz	r0, 179b4 <f_mkdir+0x56>
   179a6:	2801      	cmp	r0, #1
   179a8:	d00c      	beq.n	179c4 <f_mkdir+0x66>
   179aa:	1c43      	adds	r3, r0, #1
   179ac:	bf08      	it	eq
   179ae:	2401      	moveq	r4, #1
   179b0:	d001      	beq.n	179b6 <f_mkdir+0x58>
   179b2:	e009      	b.n	179c8 <f_mkdir+0x6a>
   179b4:	2407      	movs	r4, #7
   179b6:	9806      	ldr	r0, [sp, #24]
   179b8:	4631      	mov	r1, r6
   179ba:	f7ff fb03 	bl	16fc4 <remove_chain>
   179be:	e071      	b.n	17aa4 <f_mkdir+0x146>
   179c0:	2408      	movs	r4, #8
   179c2:	e06f      	b.n	17aa4 <f_mkdir+0x146>
   179c4:	2402      	movs	r4, #2
   179c6:	e7f6      	b.n	179b6 <f_mkdir+0x58>
   179c8:	9806      	ldr	r0, [sp, #24]
   179ca:	f7fe fbe3 	bl	16194 <sync_window>
   179ce:	4604      	mov	r4, r0
   179d0:	2800      	cmp	r0, #0
   179d2:	d1f0      	bne.n	179b6 <f_mkdir+0x58>
   179d4:	9d06      	ldr	r5, [sp, #24]
   179d6:	4631      	mov	r1, r6
   179d8:	4628      	mov	r0, r5
   179da:	f7fe fdb5 	bl	16548 <clust2sect>
   179de:	f105 0734 	add.w	r7, r5, #52	; 0x34
   179e2:	4621      	mov	r1, r4
   179e4:	f44f 7200 	mov.w	r2, #512	; 0x200
   179e8:	4683      	mov	fp, r0
   179ea:	4638      	mov	r0, r7
   179ec:	f7fe fb44 	bl	16078 <mem_set>
   179f0:	4638      	mov	r0, r7
   179f2:	2120      	movs	r1, #32
   179f4:	220b      	movs	r2, #11
   179f6:	f7fe fb3f 	bl	16078 <mem_set>
   179fa:	2310      	movs	r3, #16
   179fc:	fa26 f903 	lsr.w	r9, r6, r3
   17a00:	242e      	movs	r4, #46	; 0x2e
   17a02:	fa1f fa86 	uxth.w	sl, r6
   17a06:	f885 303f 	strb.w	r3, [r5, #63]	; 0x3f
   17a0a:	4639      	mov	r1, r7
   17a0c:	2220      	movs	r2, #32
   17a0e:	f885 4034 	strb.w	r4, [r5, #52]	; 0x34
   17a12:	f8c5 804a 	str.w	r8, [r5, #74]	; 0x4a
   17a16:	f8a5 a04e 	strh.w	sl, [r5, #78]	; 0x4e
   17a1a:	f8a5 9048 	strh.w	r9, [r5, #72]	; 0x48
   17a1e:	f105 0054 	add.w	r0, r5, #84	; 0x54
   17a22:	f7fe fb12 	bl	1604a <mem_cpy>
   17a26:	9a06      	ldr	r2, [sp, #24]
   17a28:	f885 4055 	strb.w	r4, [r5, #85]	; 0x55
   17a2c:	7811      	ldrb	r1, [r2, #0]
   17a2e:	9b08      	ldr	r3, [sp, #32]
   17a30:	2903      	cmp	r1, #3
   17a32:	d103      	bne.n	17a3c <f_mkdir+0xde>
   17a34:	6a91      	ldr	r1, [r2, #40]	; 0x28
   17a36:	428b      	cmp	r3, r1
   17a38:	bf08      	it	eq
   17a3a:	2300      	moveq	r3, #0
   17a3c:	f8a5 306e 	strh.w	r3, [r5, #110]	; 0x6e
   17a40:	0c1b      	lsrs	r3, r3, #16
   17a42:	f8a5 3068 	strh.w	r3, [r5, #104]	; 0x68
   17a46:	7895      	ldrb	r5, [r2, #2]
   17a48:	b1bd      	cbz	r5, 17a7a <f_mkdir+0x11c>
   17a4a:	9806      	ldr	r0, [sp, #24]
   17a4c:	2201      	movs	r2, #1
   17a4e:	f10b 0301 	add.w	r3, fp, #1
   17a52:	f8c0 b030 	str.w	fp, [r0, #48]	; 0x30
   17a56:	7102      	strb	r2, [r0, #4]
   17a58:	9300      	str	r3, [sp, #0]
   17a5a:	f7fe fb9b 	bl	16194 <sync_window>
   17a5e:	4604      	mov	r4, r0
   17a60:	2800      	cmp	r0, #0
   17a62:	d1a8      	bne.n	179b6 <f_mkdir+0x58>
   17a64:	4638      	mov	r0, r7
   17a66:	4621      	mov	r1, r4
   17a68:	f44f 7200 	mov.w	r2, #512	; 0x200
   17a6c:	f7fe fb04 	bl	16078 <mem_set>
   17a70:	1e6b      	subs	r3, r5, #1
   17a72:	b2dd      	uxtb	r5, r3
   17a74:	f8dd b000 	ldr.w	fp, [sp]
   17a78:	e7e6      	b.n	17a48 <f_mkdir+0xea>
   17a7a:	a806      	add	r0, sp, #24
   17a7c:	f7ff f8fa 	bl	16c74 <dir_register>
   17a80:	4604      	mov	r4, r0
   17a82:	2800      	cmp	r0, #0
   17a84:	d197      	bne.n	179b6 <f_mkdir+0x58>
   17a86:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   17a88:	2210      	movs	r2, #16
   17a8a:	9806      	ldr	r0, [sp, #24]
   17a8c:	72da      	strb	r2, [r3, #11]
   17a8e:	f8c3 8016 	str.w	r8, [r3, #22]
   17a92:	f8a3 a01a 	strh.w	sl, [r3, #26]
   17a96:	f8a3 9014 	strh.w	r9, [r3, #20]
   17a9a:	2301      	movs	r3, #1
   17a9c:	7103      	strb	r3, [r0, #4]
   17a9e:	f7fe fb9f 	bl	161e0 <sync_fs>
   17aa2:	4604      	mov	r4, r0
   17aa4:	9806      	ldr	r0, [sp, #24]
   17aa6:	4621      	mov	r1, r4
   17aa8:	f7fe fd41 	bl	1652e <unlock_fs>
   17aac:	4620      	mov	r0, r4
   17aae:	b051      	add	sp, #324	; 0x144
   17ab0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00017ab4 <f_rename>:
f_rename():
   17ab4:	b530      	push	{r4, r5, lr}
   17ab6:	b0df      	sub	sp, #380	; 0x17c
   17ab8:	9001      	str	r0, [sp, #4]
   17aba:	9100      	str	r1, [sp, #0]
   17abc:	a80b      	add	r0, sp, #44	; 0x2c
   17abe:	a901      	add	r1, sp, #4
   17ac0:	2201      	movs	r2, #1
   17ac2:	f7fe fc09 	bl	162d8 <find_volume>
   17ac6:	4604      	mov	r4, r0
   17ac8:	2800      	cmp	r0, #0
   17aca:	d17c      	bne.n	17bc6 <f_rename+0x112>
   17acc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   17ace:	a80b      	add	r0, sp, #44	; 0x2c
   17ad0:	9314      	str	r3, [sp, #80]	; 0x50
   17ad2:	ab02      	add	r3, sp, #8
   17ad4:	9311      	str	r3, [sp, #68]	; 0x44
   17ad6:	9901      	ldr	r1, [sp, #4]
   17ad8:	ab1d      	add	r3, sp, #116	; 0x74
   17ada:	9312      	str	r3, [sp, #72]	; 0x48
   17adc:	f7fe ff94 	bl	16a08 <follow_path>
   17ae0:	4604      	mov	r4, r0
   17ae2:	2800      	cmp	r0, #0
   17ae4:	d16f      	bne.n	17bc6 <f_rename+0x112>
   17ae6:	9910      	ldr	r1, [sp, #64]	; 0x40
   17ae8:	2900      	cmp	r1, #0
   17aea:	d05b      	beq.n	17ba4 <f_rename+0xf0>
   17aec:	a805      	add	r0, sp, #20
   17aee:	310b      	adds	r1, #11
   17af0:	2215      	movs	r2, #21
   17af2:	f7fe faaa 	bl	1604a <mem_cpy>
   17af6:	a814      	add	r0, sp, #80	; 0x50
   17af8:	a90b      	add	r1, sp, #44	; 0x2c
   17afa:	2224      	movs	r2, #36	; 0x24
   17afc:	f7fe faa5 	bl	1604a <mem_cpy>
   17b00:	4668      	mov	r0, sp
   17b02:	f7fe facf 	bl	160a4 <get_ldnumber>
   17b06:	2800      	cmp	r0, #0
   17b08:	db4e      	blt.n	17ba8 <f_rename+0xf4>
   17b0a:	a814      	add	r0, sp, #80	; 0x50
   17b0c:	9900      	ldr	r1, [sp, #0]
   17b0e:	f7fe ff7b 	bl	16a08 <follow_path>
   17b12:	4604      	mov	r4, r0
   17b14:	2800      	cmp	r0, #0
   17b16:	d049      	beq.n	17bac <f_rename+0xf8>
   17b18:	2804      	cmp	r0, #4
   17b1a:	d154      	bne.n	17bc6 <f_rename+0x112>
   17b1c:	a814      	add	r0, sp, #80	; 0x50
   17b1e:	f7ff f8a9 	bl	16c74 <dir_register>
   17b22:	4604      	mov	r4, r0
   17b24:	2800      	cmp	r0, #0
   17b26:	d14e      	bne.n	17bc6 <f_rename+0x112>
   17b28:	9c19      	ldr	r4, [sp, #100]	; 0x64
   17b2a:	2213      	movs	r2, #19
   17b2c:	f104 000d 	add.w	r0, r4, #13
   17b30:	f10d 0116 	add.w	r1, sp, #22
   17b34:	f7fe fa89 	bl	1604a <mem_cpy>
   17b38:	f89d 3014 	ldrb.w	r3, [sp, #20]
   17b3c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   17b3e:	f043 0320 	orr.w	r3, r3, #32
   17b42:	72e3      	strb	r3, [r4, #11]
   17b44:	2301      	movs	r3, #1
   17b46:	712b      	strb	r3, [r5, #4]
   17b48:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   17b4a:	9b16      	ldr	r3, [sp, #88]	; 0x58
   17b4c:	429a      	cmp	r2, r3
   17b4e:	d02f      	beq.n	17bb0 <f_rename+0xfc>
   17b50:	7ae3      	ldrb	r3, [r4, #11]
   17b52:	06db      	lsls	r3, r3, #27
   17b54:	d52c      	bpl.n	17bb0 <f_rename+0xfc>
   17b56:	782b      	ldrb	r3, [r5, #0]
   17b58:	8b61      	ldrh	r1, [r4, #26]
   17b5a:	2b03      	cmp	r3, #3
   17b5c:	bf08      	it	eq
   17b5e:	8aa3      	ldrheq	r3, [r4, #20]
   17b60:	4628      	mov	r0, r5
   17b62:	bf08      	it	eq
   17b64:	ea41 4103 	orreq.w	r1, r1, r3, lsl #16
   17b68:	f7fe fcee 	bl	16548 <clust2sect>
   17b6c:	4601      	mov	r1, r0
   17b6e:	b348      	cbz	r0, 17bc4 <f_rename+0x110>
   17b70:	4628      	mov	r0, r5
   17b72:	f7fe fb71 	bl	16258 <move_window>
   17b76:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   17b78:	4604      	mov	r4, r0
   17b7a:	bb20      	cbnz	r0, 17bc6 <f_rename+0x112>
   17b7c:	f893 2055 	ldrb.w	r2, [r3, #85]	; 0x55
   17b80:	2a2e      	cmp	r2, #46	; 0x2e
   17b82:	d115      	bne.n	17bb0 <f_rename+0xfc>
   17b84:	781a      	ldrb	r2, [r3, #0]
   17b86:	2a03      	cmp	r2, #3
   17b88:	d103      	bne.n	17b92 <f_rename+0xde>
   17b8a:	9916      	ldr	r1, [sp, #88]	; 0x58
   17b8c:	6a9a      	ldr	r2, [r3, #40]	; 0x28
   17b8e:	4291      	cmp	r1, r2
   17b90:	d000      	beq.n	17b94 <f_rename+0xe0>
   17b92:	9c16      	ldr	r4, [sp, #88]	; 0x58
   17b94:	f8a3 406e 	strh.w	r4, [r3, #110]	; 0x6e
   17b98:	2201      	movs	r2, #1
   17b9a:	0c24      	lsrs	r4, r4, #16
   17b9c:	f8a3 4068 	strh.w	r4, [r3, #104]	; 0x68
   17ba0:	711a      	strb	r2, [r3, #4]
   17ba2:	e005      	b.n	17bb0 <f_rename+0xfc>
   17ba4:	2404      	movs	r4, #4
   17ba6:	e00e      	b.n	17bc6 <f_rename+0x112>
   17ba8:	240b      	movs	r4, #11
   17baa:	e00c      	b.n	17bc6 <f_rename+0x112>
   17bac:	2408      	movs	r4, #8
   17bae:	e00a      	b.n	17bc6 <f_rename+0x112>
   17bb0:	a80b      	add	r0, sp, #44	; 0x2c
   17bb2:	f7ff f965 	bl	16e80 <dir_remove>
   17bb6:	4604      	mov	r4, r0
   17bb8:	b928      	cbnz	r0, 17bc6 <f_rename+0x112>
   17bba:	980b      	ldr	r0, [sp, #44]	; 0x2c
   17bbc:	f7fe fb10 	bl	161e0 <sync_fs>
   17bc0:	4604      	mov	r4, r0
   17bc2:	e000      	b.n	17bc6 <f_rename+0x112>
   17bc4:	2402      	movs	r4, #2
   17bc6:	980b      	ldr	r0, [sp, #44]	; 0x2c
   17bc8:	4621      	mov	r1, r4
   17bca:	f7fe fcb0 	bl	1652e <unlock_fs>
   17bce:	4620      	mov	r0, r4
   17bd0:	b05f      	add	sp, #380	; 0x17c
   17bd2:	bd30      	pop	{r4, r5, pc}

00017bd4 <f_mkfs>:
f_mkfs():
   17bd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17bd8:	b089      	sub	sp, #36	; 0x24
   17bda:	ab08      	add	r3, sp, #32
   17bdc:	f843 0d0c 	str.w	r0, [r3, #-12]!
   17be0:	4618      	mov	r0, r3
   17be2:	460f      	mov	r7, r1
   17be4:	4615      	mov	r5, r2
   17be6:	f7fe fa5d 	bl	160a4 <get_ldnumber>
   17bea:	2800      	cmp	r0, #0
   17bec:	f2c0 820d 	blt.w	1800a <f_mkfs+0x436>
   17bf0:	2f01      	cmp	r7, #1
   17bf2:	f200 820c 	bhi.w	1800e <f_mkfs+0x43a>
   17bf6:	1e6b      	subs	r3, r5, #1
   17bf8:	402b      	ands	r3, r5
   17bfa:	f040 8208 	bne.w	1800e <f_mkfs+0x43a>
   17bfe:	4abf      	ldr	r2, [pc, #764]	; (17efc <f_mkfs+0x328>)
   17c00:	f852 4020 	ldr.w	r4, [r2, r0, lsl #2]
   17c04:	2c00      	cmp	r4, #0
   17c06:	f000 8204 	beq.w	18012 <f_mkfs+0x43e>
   17c0a:	b2c6      	uxtb	r6, r0
   17c0c:	7023      	strb	r3, [r4, #0]
   17c0e:	4630      	mov	r0, r6
   17c10:	f7fd fb34 	bl	1527c <disk_initialize>
   17c14:	07c2      	lsls	r2, r0, #31
   17c16:	f100 81fe 	bmi.w	18016 <f_mkfs+0x442>
   17c1a:	0743      	lsls	r3, r0, #29
   17c1c:	f100 81fd 	bmi.w	1801a <f_mkfs+0x446>
   17c20:	4630      	mov	r0, r6
   17c22:	2101      	movs	r1, #1
   17c24:	aa07      	add	r2, sp, #28
   17c26:	f7fd fb7b 	bl	15320 <disk_ioctl>
   17c2a:	b108      	cbz	r0, 17c30 <f_mkfs+0x5c>
   17c2c:	2001      	movs	r0, #1
   17c2e:	e20e      	b.n	1804e <f_mkfs+0x47a>
   17c30:	9b07      	ldr	r3, [sp, #28]
   17c32:	2b7f      	cmp	r3, #127	; 0x7f
   17c34:	d9fa      	bls.n	17c2c <f_mkfs+0x58>
   17c36:	2f00      	cmp	r7, #0
   17c38:	bf0c      	ite	eq
   17c3a:	f04f 083f 	moveq.w	r8, #63	; 0x3f
   17c3e:	f04f 0800 	movne.w	r8, #0
   17c42:	ebc8 0303 	rsb	r3, r8, r3
   17c46:	9307      	str	r3, [sp, #28]
   17c48:	b96d      	cbnz	r5, 17c66 <f_mkfs+0x92>
   17c4a:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
   17c4e:	fbb3 f1f1 	udiv	r1, r3, r1
   17c52:	4aab      	ldr	r2, [pc, #684]	; (17f00 <f_mkfs+0x32c>)
   17c54:	f832 2015 	ldrh.w	r2, [r2, r5, lsl #1]
   17c58:	4291      	cmp	r1, r2
   17c5a:	d201      	bcs.n	17c60 <f_mkfs+0x8c>
   17c5c:	3501      	adds	r5, #1
   17c5e:	e7f8      	b.n	17c52 <f_mkfs+0x7e>
   17c60:	4aa8      	ldr	r2, [pc, #672]	; (17f04 <f_mkfs+0x330>)
   17c62:	f832 5015 	ldrh.w	r5, [r2, r5, lsl #1]
   17c66:	ea5f 2955 	movs.w	r9, r5, lsr #9
   17c6a:	d005      	beq.n	17c78 <f_mkfs+0xa4>
   17c6c:	f1b9 0f81 	cmp.w	r9, #129	; 0x81
   17c70:	bf28      	it	cs
   17c72:	f04f 0980 	movcs.w	r9, #128	; 0x80
   17c76:	e001      	b.n	17c7c <f_mkfs+0xa8>
   17c78:	f04f 0901 	mov.w	r9, #1
   17c7c:	fbb3 faf9 	udiv	sl, r3, r9
   17c80:	f640 72f5 	movw	r2, #4085	; 0xff5
   17c84:	4592      	cmp	sl, r2
   17c86:	f240 81ca 	bls.w	1801e <f_mkfs+0x44a>
   17c8a:	f64f 72f5 	movw	r2, #65525	; 0xfff5
   17c8e:	4592      	cmp	sl, r2
   17c90:	f240 81d7 	bls.w	18042 <f_mkfs+0x46e>
   17c94:	ea4f 0a8a 	mov.w	sl, sl, lsl #2
   17c98:	f20a 2a07 	addw	sl, sl, #519	; 0x207
   17c9c:	2100      	movs	r1, #0
   17c9e:	ea4f 2a5a 	mov.w	sl, sl, lsr #9
   17ca2:	2503      	movs	r5, #3
   17ca4:	9102      	str	r1, [sp, #8]
   17ca6:	f04f 0c20 	mov.w	ip, #32
   17caa:	f8dd b008 	ldr.w	fp, [sp, #8]
   17cae:	eb0c 0208 	add.w	r2, ip, r8
   17cb2:	44d3      	add	fp, sl
   17cb4:	4493      	add	fp, r2
   17cb6:	9203      	str	r2, [sp, #12]
   17cb8:	ebc8 0209 	rsb	r2, r8, r9
   17cbc:	445a      	add	r2, fp
   17cbe:	4293      	cmp	r3, r2
   17cc0:	d201      	bcs.n	17cc6 <f_mkfs+0xf2>
   17cc2:	200e      	movs	r0, #14
   17cc4:	e1c3      	b.n	1804e <f_mkfs+0x47a>
   17cc6:	4630      	mov	r0, r6
   17cc8:	2103      	movs	r1, #3
   17cca:	aa06      	add	r2, sp, #24
   17ccc:	f8cd c000 	str.w	ip, [sp]
   17cd0:	f7fd fb26 	bl	15320 <disk_ioctl>
   17cd4:	f8dd c000 	ldr.w	ip, [sp]
   17cd8:	b920      	cbnz	r0, 17ce4 <f_mkfs+0x110>
   17cda:	9b06      	ldr	r3, [sp, #24]
   17cdc:	3b01      	subs	r3, #1
   17cde:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
   17ce2:	d301      	bcc.n	17ce8 <f_mkfs+0x114>
   17ce4:	2301      	movs	r3, #1
   17ce6:	9306      	str	r3, [sp, #24]
   17ce8:	9a06      	ldr	r2, [sp, #24]
   17cea:	2d03      	cmp	r5, #3
   17cec:	f102 33ff 	add.w	r3, r2, #4294967295
   17cf0:	445b      	add	r3, fp
   17cf2:	f1c2 0200 	rsb	r2, r2, #0
   17cf6:	ea03 0302 	and.w	r3, r3, r2
   17cfa:	ebcb 0303 	rsb	r3, fp, r3
   17cfe:	9306      	str	r3, [sp, #24]
   17d00:	d104      	bne.n	17d0c <f_mkfs+0x138>
   17d02:	9903      	ldr	r1, [sp, #12]
   17d04:	449c      	add	ip, r3
   17d06:	4419      	add	r1, r3
   17d08:	9103      	str	r1, [sp, #12]
   17d0a:	e000      	b.n	17d0e <f_mkfs+0x13a>
   17d0c:	449a      	add	sl, r3
   17d0e:	9b07      	ldr	r3, [sp, #28]
   17d10:	9902      	ldr	r1, [sp, #8]
   17d12:	ebcc 0203 	rsb	r2, ip, r3
   17d16:	ebca 0202 	rsb	r2, sl, r2
   17d1a:	1a52      	subs	r2, r2, r1
   17d1c:	fbb2 f2f9 	udiv	r2, r2, r9
   17d20:	2d02      	cmp	r5, #2
   17d22:	9204      	str	r2, [sp, #16]
   17d24:	d105      	bne.n	17d32 <f_mkfs+0x15e>
   17d26:	9904      	ldr	r1, [sp, #16]
   17d28:	f640 72f5 	movw	r2, #4085	; 0xff5
   17d2c:	4291      	cmp	r1, r2
   17d2e:	d9c8      	bls.n	17cc2 <f_mkfs+0xee>
   17d30:	e013      	b.n	17d5a <f_mkfs+0x186>
   17d32:	2d03      	cmp	r5, #3
   17d34:	d107      	bne.n	17d46 <f_mkfs+0x172>
   17d36:	9a04      	ldr	r2, [sp, #16]
   17d38:	f64f 73f5 	movw	r3, #65525	; 0xfff5
   17d3c:	429a      	cmp	r2, r3
   17d3e:	d9c0      	bls.n	17cc2 <f_mkfs+0xee>
   17d40:	f04f 0b0c 	mov.w	fp, #12
   17d44:	e010      	b.n	17d68 <f_mkfs+0x194>
   17d46:	2d01      	cmp	r5, #1
   17d48:	d107      	bne.n	17d5a <f_mkfs+0x186>
   17d4a:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
   17d4e:	bf34      	ite	cc
   17d50:	f04f 0b01 	movcc.w	fp, #1
   17d54:	f04f 0b06 	movcs.w	fp, #6
   17d58:	e006      	b.n	17d68 <f_mkfs+0x194>
   17d5a:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
   17d5e:	bf34      	ite	cc
   17d60:	f04f 0b04 	movcc.w	fp, #4
   17d64:	f04f 0b06 	movcs.w	fp, #6
   17d68:	2f00      	cmp	r7, #0
   17d6a:	d13e      	bne.n	17dea <f_mkfs+0x216>
   17d6c:	f104 0334 	add.w	r3, r4, #52	; 0x34
   17d70:	4618      	mov	r0, r3
   17d72:	4639      	mov	r1, r7
   17d74:	f44f 7200 	mov.w	r2, #512	; 0x200
   17d78:	f8cd c000 	str.w	ip, [sp]
   17d7c:	9301      	str	r3, [sp, #4]
   17d7e:	f7fe f97b 	bl	16078 <mem_set>
   17d82:	9907      	ldr	r1, [sp, #28]
   17d84:	22fe      	movs	r2, #254	; 0xfe
   17d86:	f884 21f7 	strb.w	r2, [r4, #503]	; 0x1f7
   17d8a:	eb08 0001 	add.w	r0, r8, r1
   17d8e:	f643 62c1 	movw	r2, #16065	; 0x3ec1
   17d92:	fbb0 f2f2 	udiv	r2, r0, r2
   17d96:	0890      	lsrs	r0, r2, #2
   17d98:	f04f 0e01 	mov.w	lr, #1
   17d9c:	f040 003f 	orr.w	r0, r0, #63	; 0x3f
   17da0:	f884 01f8 	strb.w	r0, [r4, #504]	; 0x1f8
   17da4:	f884 21f9 	strb.w	r2, [r4, #505]	; 0x1f9
   17da8:	f884 e1f3 	strb.w	lr, [r4, #499]	; 0x1f3
   17dac:	f884 e1f4 	strb.w	lr, [r4, #500]	; 0x1f4
   17db0:	f884 71f5 	strb.w	r7, [r4, #501]	; 0x1f5
   17db4:	f884 b1f6 	strb.w	fp, [r4, #502]	; 0x1f6
   17db8:	9b01      	ldr	r3, [sp, #4]
   17dba:	9206      	str	r2, [sp, #24]
   17dbc:	223f      	movs	r2, #63	; 0x3f
   17dbe:	f8c4 21fa 	str.w	r2, [r4, #506]	; 0x1fa
   17dc2:	f64a 2255 	movw	r2, #43605	; 0xaa55
   17dc6:	f8c4 11fe 	str.w	r1, [r4, #510]	; 0x1fe
   17dca:	f8a4 2232 	strh.w	r2, [r4, #562]	; 0x232
   17dce:	4619      	mov	r1, r3
   17dd0:	4630      	mov	r0, r6
   17dd2:	463a      	mov	r2, r7
   17dd4:	4673      	mov	r3, lr
   17dd6:	f7fd fa87 	bl	152e8 <disk_write>
   17dda:	f8dd c000 	ldr.w	ip, [sp]
   17dde:	2800      	cmp	r0, #0
   17de0:	f47f af24 	bne.w	17c2c <f_mkfs+0x58>
   17de4:	f04f 0bf8 	mov.w	fp, #248	; 0xf8
   17de8:	e001      	b.n	17dee <f_mkfs+0x21a>
   17dea:	f04f 0bf0 	mov.w	fp, #240	; 0xf0
   17dee:	f104 0734 	add.w	r7, r4, #52	; 0x34
   17df2:	4638      	mov	r0, r7
   17df4:	2100      	movs	r1, #0
   17df6:	f44f 7200 	mov.w	r2, #512	; 0x200
   17dfa:	f8cd c000 	str.w	ip, [sp]
   17dfe:	f7fe f93b 	bl	16078 <mem_set>
   17e02:	4638      	mov	r0, r7
   17e04:	4940      	ldr	r1, [pc, #256]	; (17f08 <f_mkfs+0x334>)
   17e06:	220b      	movs	r2, #11
   17e08:	f7fe f91f 	bl	1604a <mem_cpy>
   17e0c:	f44f 7300 	mov.w	r3, #512	; 0x200
   17e10:	f8a4 303f 	strh.w	r3, [r4, #63]	; 0x3f
   17e14:	f884 9041 	strb.w	r9, [r4, #65]	; 0x41
   17e18:	2301      	movs	r3, #1
   17e1a:	2d03      	cmp	r5, #3
   17e1c:	f8dd c000 	ldr.w	ip, [sp]
   17e20:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
   17e24:	bf14      	ite	ne
   17e26:	f44f 7300 	movne.w	r3, #512	; 0x200
   17e2a:	2300      	moveq	r3, #0
   17e2c:	f8a4 3045 	strh.w	r3, [r4, #69]	; 0x45
   17e30:	9b07      	ldr	r3, [sp, #28]
   17e32:	f8a4 c042 	strh.w	ip, [r4, #66]	; 0x42
   17e36:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
   17e3a:	bf34      	ite	cc
   17e3c:	f8a4 3047 	strhcc.w	r3, [r4, #71]	; 0x47
   17e40:	6563      	strcs	r3, [r4, #84]	; 0x54
   17e42:	233f      	movs	r3, #63	; 0x3f
   17e44:	f8a4 304c 	strh.w	r3, [r4, #76]	; 0x4c
   17e48:	23ff      	movs	r3, #255	; 0xff
   17e4a:	f884 b049 	strb.w	fp, [r4, #73]	; 0x49
   17e4e:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
   17e52:	f8c4 8050 	str.w	r8, [r4, #80]	; 0x50
   17e56:	f7fe f8cf 	bl	15ff8 <get_fattime>
   17e5a:	2d03      	cmp	r5, #3
   17e5c:	9006      	str	r0, [sp, #24]
   17e5e:	d115      	bne.n	17e8c <f_mkfs+0x2b8>
   17e60:	2302      	movs	r3, #2
   17e62:	6623      	str	r3, [r4, #96]	; 0x60
   17e64:	2301      	movs	r3, #1
   17e66:	f8a4 3064 	strh.w	r3, [r4, #100]	; 0x64
   17e6a:	2306      	movs	r3, #6
   17e6c:	f8a4 3066 	strh.w	r3, [r4, #102]	; 0x66
   17e70:	2380      	movs	r3, #128	; 0x80
   17e72:	f884 3074 	strb.w	r3, [r4, #116]	; 0x74
   17e76:	2329      	movs	r3, #41	; 0x29
   17e78:	f8c4 0077 	str.w	r0, [r4, #119]	; 0x77
   17e7c:	f8c4 a058 	str.w	sl, [r4, #88]	; 0x58
   17e80:	f884 3076 	strb.w	r3, [r4, #118]	; 0x76
   17e84:	f104 007b 	add.w	r0, r4, #123	; 0x7b
   17e88:	4920      	ldr	r1, [pc, #128]	; (17f0c <f_mkfs+0x338>)
   17e8a:	e00c      	b.n	17ea6 <f_mkfs+0x2d2>
   17e8c:	2380      	movs	r3, #128	; 0x80
   17e8e:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
   17e92:	491f      	ldr	r1, [pc, #124]	; (17f10 <f_mkfs+0x33c>)
   17e94:	2329      	movs	r3, #41	; 0x29
   17e96:	f8c4 005b 	str.w	r0, [r4, #91]	; 0x5b
   17e9a:	f8a4 a04a 	strh.w	sl, [r4, #74]	; 0x4a
   17e9e:	f884 305a 	strb.w	r3, [r4, #90]	; 0x5a
   17ea2:	f104 005f 	add.w	r0, r4, #95	; 0x5f
   17ea6:	2213      	movs	r2, #19
   17ea8:	f7fe f8cf 	bl	1604a <mem_cpy>
   17eac:	f64a 2355 	movw	r3, #43605	; 0xaa55
   17eb0:	f8a4 3232 	strh.w	r3, [r4, #562]	; 0x232
   17eb4:	4630      	mov	r0, r6
   17eb6:	4639      	mov	r1, r7
   17eb8:	4642      	mov	r2, r8
   17eba:	2301      	movs	r3, #1
   17ebc:	f7fd fa14 	bl	152e8 <disk_write>
   17ec0:	2800      	cmp	r0, #0
   17ec2:	f47f aeb3 	bne.w	17c2c <f_mkfs+0x58>
   17ec6:	2d03      	cmp	r5, #3
   17ec8:	d106      	bne.n	17ed8 <f_mkfs+0x304>
   17eca:	4630      	mov	r0, r6
   17ecc:	4639      	mov	r1, r7
   17ece:	f108 0206 	add.w	r2, r8, #6
   17ed2:	2301      	movs	r3, #1
   17ed4:	f7fd fa08 	bl	152e8 <disk_write>
   17ed8:	4638      	mov	r0, r7
   17eda:	2100      	movs	r1, #0
   17edc:	f44f 7200 	mov.w	r2, #512	; 0x200
   17ee0:	f7fe f8ca 	bl	16078 <mem_set>
   17ee4:	2d03      	cmp	r5, #3
   17ee6:	d017      	beq.n	17f18 <f_mkfs+0x344>
   17ee8:	4b0a      	ldr	r3, [pc, #40]	; (17f14 <f_mkfs+0x340>)
   17eea:	2d01      	cmp	r5, #1
   17eec:	bf18      	it	ne
   17eee:	f06f 03ff 	mvnne.w	r3, #255	; 0xff
   17ef2:	ea43 030b 	orr.w	r3, r3, fp
   17ef6:	9306      	str	r3, [sp, #24]
   17ef8:	6363      	str	r3, [r4, #52]	; 0x34
   17efa:	e017      	b.n	17f2c <f_mkfs+0x358>
   17efc:	2007c954 	.word	0x2007c954
   17f00:	000265a4 	.word	0x000265a4
   17f04:	000264bc 	.word	0x000264bc
   17f08:	000264e2 	.word	0x000264e2
   17f0c:	000264ee 	.word	0x000264ee
   17f10:	00026502 	.word	0x00026502
   17f14:	00ffff00 	.word	0x00ffff00
   17f18:	f06b 03ff 	orn	r3, fp, #255	; 0xff
   17f1c:	9306      	str	r3, [sp, #24]
   17f1e:	6363      	str	r3, [r4, #52]	; 0x34
   17f20:	f04f 33ff 	mov.w	r3, #4294967295
   17f24:	63a3      	str	r3, [r4, #56]	; 0x38
   17f26:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
   17f2a:	63e3      	str	r3, [r4, #60]	; 0x3c
   17f2c:	9b03      	ldr	r3, [sp, #12]
   17f2e:	4639      	mov	r1, r7
   17f30:	461a      	mov	r2, r3
   17f32:	f103 0b01 	add.w	fp, r3, #1
   17f36:	4630      	mov	r0, r6
   17f38:	2301      	movs	r3, #1
   17f3a:	f7fd f9d5 	bl	152e8 <disk_write>
   17f3e:	4601      	mov	r1, r0
   17f40:	2800      	cmp	r0, #0
   17f42:	f47f ae73 	bne.w	17c2c <f_mkfs+0x58>
   17f46:	4638      	mov	r0, r7
   17f48:	f44f 7200 	mov.w	r2, #512	; 0x200
   17f4c:	f7fe f894 	bl	16078 <mem_set>
   17f50:	2301      	movs	r3, #1
   17f52:	9306      	str	r3, [sp, #24]
   17f54:	9b06      	ldr	r3, [sp, #24]
   17f56:	4553      	cmp	r3, sl
   17f58:	d213      	bcs.n	17f82 <f_mkfs+0x3ae>
   17f5a:	f10b 0c01 	add.w	ip, fp, #1
   17f5e:	4630      	mov	r0, r6
   17f60:	4639      	mov	r1, r7
   17f62:	465a      	mov	r2, fp
   17f64:	2301      	movs	r3, #1
   17f66:	f8cd c000 	str.w	ip, [sp]
   17f6a:	f7fd f9bd 	bl	152e8 <disk_write>
   17f6e:	f8dd c000 	ldr.w	ip, [sp]
   17f72:	2800      	cmp	r0, #0
   17f74:	f47f ae5a 	bne.w	17c2c <f_mkfs+0x58>
   17f78:	9b06      	ldr	r3, [sp, #24]
   17f7a:	46e3      	mov	fp, ip
   17f7c:	3301      	adds	r3, #1
   17f7e:	9306      	str	r3, [sp, #24]
   17f80:	e7e8      	b.n	17f54 <f_mkfs+0x380>
   17f82:	9902      	ldr	r1, [sp, #8]
   17f84:	46da      	mov	sl, fp
   17f86:	2d03      	cmp	r5, #3
   17f88:	bf08      	it	eq
   17f8a:	4649      	moveq	r1, r9
   17f8c:	9102      	str	r1, [sp, #8]
   17f8e:	4630      	mov	r0, r6
   17f90:	4639      	mov	r1, r7
   17f92:	465a      	mov	r2, fp
   17f94:	2301      	movs	r3, #1
   17f96:	f10b 0901 	add.w	r9, fp, #1
   17f9a:	f7fd f9a5 	bl	152e8 <disk_write>
   17f9e:	2800      	cmp	r0, #0
   17fa0:	f47f ae44 	bne.w	17c2c <f_mkfs+0x58>
   17fa4:	9b02      	ldr	r3, [sp, #8]
   17fa6:	4453      	add	r3, sl
   17fa8:	454b      	cmp	r3, r9
   17faa:	d001      	beq.n	17fb0 <f_mkfs+0x3dc>
   17fac:	46cb      	mov	fp, r9
   17fae:	e7ee      	b.n	17f8e <f_mkfs+0x3ba>
   17fb0:	2d03      	cmp	r5, #3
   17fb2:	d121      	bne.n	17ff8 <f_mkfs+0x424>
   17fb4:	4b27      	ldr	r3, [pc, #156]	; (18054 <f_mkfs+0x480>)
   17fb6:	9a04      	ldr	r2, [sp, #16]
   17fb8:	6363      	str	r3, [r4, #52]	; 0x34
   17fba:	f103 53ff 	add.w	r3, r3, #534773760	; 0x1fe00000
   17fbe:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
   17fc2:	3320      	adds	r3, #32
   17fc4:	f8c4 3218 	str.w	r3, [r4, #536]	; 0x218
   17fc8:	1e53      	subs	r3, r2, #1
   17fca:	f8c4 321c 	str.w	r3, [r4, #540]	; 0x21c
   17fce:	2302      	movs	r3, #2
   17fd0:	f8c4 3220 	str.w	r3, [r4, #544]	; 0x220
   17fd4:	f64a 2355 	movw	r3, #43605	; 0xaa55
   17fd8:	f8a4 3232 	strh.w	r3, [r4, #562]	; 0x232
   17fdc:	4639      	mov	r1, r7
   17fde:	f108 0201 	add.w	r2, r8, #1
   17fe2:	2301      	movs	r3, #1
   17fe4:	4630      	mov	r0, r6
   17fe6:	f7fd f97f 	bl	152e8 <disk_write>
   17fea:	4630      	mov	r0, r6
   17fec:	4639      	mov	r1, r7
   17fee:	f108 0207 	add.w	r2, r8, #7
   17ff2:	2301      	movs	r3, #1
   17ff4:	f7fd f978 	bl	152e8 <disk_write>
   17ff8:	2100      	movs	r1, #0
   17ffa:	4630      	mov	r0, r6
   17ffc:	460a      	mov	r2, r1
   17ffe:	f7fd f98f 	bl	15320 <disk_ioctl>
   18002:	3000      	adds	r0, #0
   18004:	bf18      	it	ne
   18006:	2001      	movne	r0, #1
   18008:	e021      	b.n	1804e <f_mkfs+0x47a>
   1800a:	200b      	movs	r0, #11
   1800c:	e01f      	b.n	1804e <f_mkfs+0x47a>
   1800e:	2013      	movs	r0, #19
   18010:	e01d      	b.n	1804e <f_mkfs+0x47a>
   18012:	200c      	movs	r0, #12
   18014:	e01b      	b.n	1804e <f_mkfs+0x47a>
   18016:	2003      	movs	r0, #3
   18018:	e019      	b.n	1804e <f_mkfs+0x47a>
   1801a:	200a      	movs	r0, #10
   1801c:	e017      	b.n	1804e <f_mkfs+0x47a>
   1801e:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
   18022:	f10a 0a01 	add.w	sl, sl, #1
   18026:	ea4f 0a5a 	mov.w	sl, sl, lsr #1
   1802a:	f10a 0a03 	add.w	sl, sl, #3
   1802e:	2501      	movs	r5, #1
   18030:	f20a 1aff 	addw	sl, sl, #511	; 0x1ff
   18034:	2120      	movs	r1, #32
   18036:	ea4f 2a5a 	mov.w	sl, sl, lsr #9
   1803a:	9102      	str	r1, [sp, #8]
   1803c:	f04f 0c01 	mov.w	ip, #1
   18040:	e633      	b.n	17caa <f_mkfs+0xd6>
   18042:	f10a 0a02 	add.w	sl, sl, #2
   18046:	ea4f 0a4a 	mov.w	sl, sl, lsl #1
   1804a:	2502      	movs	r5, #2
   1804c:	e7f0      	b.n	18030 <f_mkfs+0x45c>
   1804e:	b009      	add	sp, #36	; 0x24
   18050:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18054:	41615252 	.word	0x41615252

00018058 <c_list_for_each_elm>:
c_list_for_each_elm():
   18058:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1805c:	9e06      	ldr	r6, [sp, #24]
   1805e:	460d      	mov	r5, r1
   18060:	4617      	mov	r7, r2
   18062:	4698      	mov	r8, r3
   18064:	b910      	cbnz	r0, 1806c <c_list_for_each_elm+0x14>
   18066:	2001      	movs	r0, #1
   18068:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1806c:	2900      	cmp	r1, #0
   1806e:	d0fa      	beq.n	18066 <c_list_for_each_elm+0xe>
   18070:	6804      	ldr	r4, [r0, #0]
   18072:	2c00      	cmp	r4, #0
   18074:	d0f7      	beq.n	18066 <c_list_for_each_elm+0xe>
   18076:	6820      	ldr	r0, [r4, #0]
   18078:	4639      	mov	r1, r7
   1807a:	4642      	mov	r2, r8
   1807c:	4633      	mov	r3, r6
   1807e:	47a8      	blx	r5
   18080:	b108      	cbz	r0, 18086 <c_list_for_each_elm+0x2e>
   18082:	6864      	ldr	r4, [r4, #4]
   18084:	e7f5      	b.n	18072 <c_list_for_each_elm+0x1a>
   18086:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

0001808c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>:
_ZN16CommandProcessor10addHandlerEPFbR3strR7CharDevPvEPKcS8_S4_():
   1808c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18090:	460f      	mov	r7, r1
   18092:	491b      	ldr	r1, [pc, #108]	; (18100 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)+0x74>)
   18094:	4604      	mov	r4, r0
   18096:	2b00      	cmp	r3, #0
   18098:	bf14      	ite	ne
   1809a:	4699      	movne	r9, r3
   1809c:	4689      	moveq	r9, r1
   1809e:	4690      	mov	r8, r2
   180a0:	b362      	cbz	r2, 180fc <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)+0x70>
   180a2:	b35f      	cbz	r7, 180fc <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)+0x70>
   180a4:	6840      	ldr	r0, [r0, #4]
   180a6:	68a3      	ldr	r3, [r4, #8]
   180a8:	4283      	cmp	r3, r0
   180aa:	d31c      	bcc.n	180e6 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)+0x5a>
   180ac:	6826      	ldr	r6, [r4, #0]
   180ae:	1986      	adds	r6, r0, r6
   180b0:	d219      	bcs.n	180e6 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)+0x5a>
   180b2:	68e0      	ldr	r0, [r4, #12]
   180b4:	00b1      	lsls	r1, r6, #2
   180b6:	f006 fcc5 	bl	1ea44 <realloc>
   180ba:	68a5      	ldr	r5, [r4, #8]
   180bc:	60e0      	str	r0, [r4, #12]
   180be:	ea4f 0a85 	mov.w	sl, r5, lsl #2
   180c2:	42b5      	cmp	r5, r6
   180c4:	d20e      	bcs.n	180e4 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)+0x58>
   180c6:	2010      	movs	r0, #16
   180c8:	f7f8 f8d2 	bl	10270 <operator new(unsigned int)>
   180cc:	2100      	movs	r1, #0
   180ce:	2210      	movs	r2, #16
   180d0:	4683      	mov	fp, r0
   180d2:	f005 fecc 	bl	1de6e <memset>
   180d6:	68e3      	ldr	r3, [r4, #12]
   180d8:	3501      	adds	r5, #1
   180da:	f843 b00a 	str.w	fp, [r3, sl]
   180de:	f10a 0a04 	add.w	sl, sl, #4
   180e2:	e7ee      	b.n	180c2 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)+0x36>
   180e4:	6066      	str	r6, [r4, #4]
   180e6:	68a3      	ldr	r3, [r4, #8]
   180e8:	68e2      	ldr	r2, [r4, #12]
   180ea:	1c59      	adds	r1, r3, #1
   180ec:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
   180f0:	60a1      	str	r1, [r4, #8]
   180f2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   180f4:	e880 0300 	stmia.w	r0, {r8, r9}
   180f8:	6087      	str	r7, [r0, #8]
   180fa:	60c3      	str	r3, [r0, #12]
   180fc:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18100:	000249f1 	.word	0x000249f1

00018104 <CommandProcessor::getRegisteredCommandList(CharDev&)>:
_ZN16CommandProcessor24getRegisteredCommandListER7CharDev():
   18104:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   18108:	f04f 32ff 	mov.w	r2, #4294967295
   1810c:	b091      	sub	sp, #68	; 0x44
   1810e:	4681      	mov	r9, r0
   18110:	460c      	mov	r4, r1
   18112:	4608      	mov	r0, r1
   18114:	491d      	ldr	r1, [pc, #116]	; (1818c <CommandProcessor::getRegisteredCommandList(CharDev&)+0x88>)
   18116:	f002 f888 	bl	1a22a <CharDev::put(char const*, unsigned int)>
   1811a:	2500      	movs	r5, #0
   1811c:	f8d9 3008 	ldr.w	r3, [r9, #8]
   18120:	429d      	cmp	r5, r3
   18122:	d229      	bcs.n	18178 <CommandProcessor::getRegisteredCommandList(CharDev&)+0x74>
   18124:	f8d9 300c 	ldr.w	r3, [r9, #12]
   18128:	f853 8025 	ldr.w	r8, [r3, r5, lsl #2]
   1812c:	f8d8 7004 	ldr.w	r7, [r8, #4]
   18130:	4638      	mov	r0, r7
   18132:	f006 fec9 	bl	1eec8 <strlen>
   18136:	2820      	cmp	r0, #32
   18138:	d915      	bls.n	18166 <CommandProcessor::getRegisteredCommandList(CharDev&)+0x62>
   1813a:	4915      	ldr	r1, [pc, #84]	; (18190 <CommandProcessor::getRegisteredCommandList(CharDev&)+0x8c>)
   1813c:	f8d8 2000 	ldr.w	r2, [r8]
   18140:	463b      	mov	r3, r7
   18142:	4668      	mov	r0, sp
   18144:	f006 fe0c 	bl	1ed60 <siprintf>
   18148:	4668      	mov	r0, sp
   1814a:	210a      	movs	r1, #10
   1814c:	f006 ff0e 	bl	1ef6c <strrchr>
   18150:	466e      	mov	r6, sp
   18152:	4286      	cmp	r6, r0
   18154:	d202      	bcs.n	1815c <CommandProcessor::getRegisteredCommandList(CharDev&)+0x58>
   18156:	490f      	ldr	r1, [pc, #60]	; (18194 <CommandProcessor::getRegisteredCommandList(CharDev&)+0x90>)
   18158:	f006 feae 	bl	1eeb8 <strcpy>
   1815c:	4620      	mov	r0, r4
   1815e:	4669      	mov	r1, sp
   18160:	f002 f8af 	bl	1a2c2 <CharDev::printf(char const*, ...)>
   18164:	e006      	b.n	18174 <CommandProcessor::getRegisteredCommandList(CharDev&)+0x70>
   18166:	4620      	mov	r0, r4
   18168:	490b      	ldr	r1, [pc, #44]	; (18198 <CommandProcessor::getRegisteredCommandList(CharDev&)+0x94>)
   1816a:	f8d8 2000 	ldr.w	r2, [r8]
   1816e:	463b      	mov	r3, r7
   18170:	f002 f8a7 	bl	1a2c2 <CharDev::printf(char const*, ...)>
   18174:	3501      	adds	r5, #1
   18176:	e7d1      	b.n	1811c <CommandProcessor::getRegisteredCommandList(CharDev&)+0x18>
   18178:	4620      	mov	r0, r4
   1817a:	4908      	ldr	r1, [pc, #32]	; (1819c <CommandProcessor::getRegisteredCommandList(CharDev&)+0x98>)
   1817c:	f04f 32ff 	mov.w	r2, #4294967295
   18180:	f002 f868 	bl	1a254 <CharDev::putline(char const*, unsigned int)>
   18184:	b011      	add	sp, #68	; 0x44
   18186:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1818a:	bf00      	nop
   1818c:	000265ba 	.word	0x000265ba
   18190:	000265ce 	.word	0x000265ce
   18194:	00026c51 	.word	0x00026c51
   18198:	000265e1 	.word	0x000265e1
   1819c:	000265ed 	.word	0x000265ed

000181a0 <CommandProcessor::getHelpText(str&, CharDev&)>:
_ZN16CommandProcessor11getHelpTextER3strR7CharDev():
   181a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   181a4:	4605      	mov	r5, r0
   181a6:	4608      	mov	r0, r1
   181a8:	460f      	mov	r7, r1
   181aa:	4616      	mov	r6, r2
   181ac:	f000 fdfb 	bl	18da6 <str::getLen() const>
   181b0:	2800      	cmp	r0, #0
   181b2:	dd24      	ble.n	181fe <CommandProcessor::getHelpText(str&, CharDev&)+0x5e>
   181b4:	2400      	movs	r4, #0
   181b6:	68ab      	ldr	r3, [r5, #8]
   181b8:	429c      	cmp	r4, r3
   181ba:	d218      	bcs.n	181ee <CommandProcessor::getHelpText(str&, CharDev&)+0x4e>
   181bc:	68eb      	ldr	r3, [r5, #12]
   181be:	4638      	mov	r0, r7
   181c0:	f853 8024 	ldr.w	r8, [r3, r4, lsl #2]
   181c4:	f8d8 1000 	ldr.w	r1, [r8]
   181c8:	f000 fe35 	bl	18e36 <str::compareToIgnoreCase(char const*) const>
   181cc:	b168      	cbz	r0, 181ea <CommandProcessor::getHelpText(str&, CharDev&)+0x4a>
   181ce:	f8d8 3004 	ldr.w	r3, [r8, #4]
   181d2:	b133      	cbz	r3, 181e2 <CommandProcessor::getHelpText(str&, CharDev&)+0x42>
   181d4:	f993 1000 	ldrsb.w	r1, [r3]
   181d8:	4a0c      	ldr	r2, [pc, #48]	; (1820c <CommandProcessor::getHelpText(str&, CharDev&)+0x6c>)
   181da:	2900      	cmp	r1, #0
   181dc:	bf08      	it	eq
   181de:	4613      	moveq	r3, r2
   181e0:	e000      	b.n	181e4 <CommandProcessor::getHelpText(str&, CharDev&)+0x44>
   181e2:	4b0a      	ldr	r3, [pc, #40]	; (1820c <CommandProcessor::getHelpText(str&, CharDev&)+0x6c>)
   181e4:	4630      	mov	r0, r6
   181e6:	4619      	mov	r1, r3
   181e8:	e003      	b.n	181f2 <CommandProcessor::getHelpText(str&, CharDev&)+0x52>
   181ea:	3401      	adds	r4, #1
   181ec:	e7e3      	b.n	181b6 <CommandProcessor::getHelpText(str&, CharDev&)+0x16>
   181ee:	4908      	ldr	r1, [pc, #32]	; (18210 <CommandProcessor::getHelpText(str&, CharDev&)+0x70>)
   181f0:	4630      	mov	r0, r6
   181f2:	f04f 32ff 	mov.w	r2, #4294967295
   181f6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   181fa:	f002 b82b 	b.w	1a254 <CharDev::putline(char const*, unsigned int)>
   181fe:	4628      	mov	r0, r5
   18200:	4631      	mov	r1, r6
   18202:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   18206:	f7ff bf7d 	b.w	18104 <CommandProcessor::getRegisteredCommandList(CharDev&)>
   1820a:	bf00      	nop
   1820c:	00026619 	.word	0x00026619
   18210:	0002663d 	.word	0x0002663d

00018214 <CommandProcessor::prepareCmdParam(str&, char const*)>:
_ZN16CommandProcessor15prepareCmdParamER3strPKc():
   18214:	b538      	push	{r3, r4, r5, lr}
   18216:	460d      	mov	r5, r1
   18218:	2400      	movs	r4, #0
   1821a:	4628      	mov	r0, r5
   1821c:	f000 fdc3 	bl	18da6 <str::getLen() const>
   18220:	4284      	cmp	r4, r0
   18222:	da07      	bge.n	18234 <CommandProcessor::prepareCmdParam(str&, char const*)+0x20>
   18224:	4628      	mov	r0, r5
   18226:	4621      	mov	r1, r4
   18228:	f000 ff64 	bl	190f4 <str::operator[](int)>
   1822c:	f990 3000 	ldrsb.w	r3, [r0]
   18230:	2b20      	cmp	r3, #32
   18232:	d109      	bne.n	18248 <CommandProcessor::prepareCmdParam(str&, char const*)+0x34>
   18234:	4621      	mov	r1, r4
   18236:	4628      	mov	r0, r5
   18238:	f000 feae 	bl	18f98 <str::eraseFirst(int)>
   1823c:	4628      	mov	r0, r5
   1823e:	4903      	ldr	r1, [pc, #12]	; (1824c <CommandProcessor::prepareCmdParam(str&, char const*)+0x38>)
   18240:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   18244:	f000 bf11 	b.w	1906a <str::trimStart(char const*)>
   18248:	3401      	adds	r4, #1
   1824a:	e7e6      	b.n	1821a <CommandProcessor::prepareCmdParam(str&, char const*)+0x6>
   1824c:	00025932 	.word	0x00025932

00018250 <CommandProcessor::handleCommand(str&, CharDev&)>:
_ZN16CommandProcessor13handleCommandER3strR7CharDev():
   18250:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   18254:	460c      	mov	r4, r1
   18256:	b090      	sub	sp, #64	; 0x40
   18258:	4606      	mov	r6, r0
   1825a:	4608      	mov	r0, r1
   1825c:	4946      	ldr	r1, [pc, #280]	; (18378 <CommandProcessor::handleCommand(str&, CharDev&)+0x128>)
   1825e:	4615      	mov	r5, r2
   18260:	f000 ff23 	bl	190aa <str::trimEnd(char const*)>
   18264:	4620      	mov	r0, r4
   18266:	4945      	ldr	r1, [pc, #276]	; (1837c <CommandProcessor::handleCommand(str&, CharDev&)+0x12c>)
   18268:	2220      	movs	r2, #32
   1826a:	f000 fe77 	bl	18f5c <str::beginsWithWholeWordIgnoreCase(char const*, char) const>
   1826e:	b908      	cbnz	r0, 18274 <CommandProcessor::handleCommand(str&, CharDev&)+0x24>
   18270:	4680      	mov	r8, r0
   18272:	e015      	b.n	182a0 <CommandProcessor::handleCommand(str&, CharDev&)+0x50>
   18274:	4630      	mov	r0, r6
   18276:	4621      	mov	r1, r4
   18278:	4a40      	ldr	r2, [pc, #256]	; (1837c <CommandProcessor::handleCommand(str&, CharDev&)+0x12c>)
   1827a:	f7ff ffcb 	bl	18214 <CommandProcessor::prepareCmdParam(str&, char const*)>
   1827e:	4630      	mov	r0, r6
   18280:	4621      	mov	r1, r4
   18282:	462a      	mov	r2, r5
   18284:	f7ff ff8c 	bl	181a0 <CommandProcessor::getHelpText(str&, CharDev&)>
   18288:	e06a      	b.n	18360 <CommandProcessor::handleCommand(str&, CharDev&)+0x110>
   1828a:	68f3      	ldr	r3, [r6, #12]
   1828c:	4620      	mov	r0, r4
   1828e:	f853 7028 	ldr.w	r7, [r3, r8, lsl #2]
   18292:	2220      	movs	r2, #32
   18294:	6839      	ldr	r1, [r7, #0]
   18296:	f000 fe61 	bl	18f5c <str::beginsWithWholeWordIgnoreCase(char const*, char) const>
   1829a:	b928      	cbnz	r0, 182a8 <CommandProcessor::handleCommand(str&, CharDev&)+0x58>
   1829c:	f108 0801 	add.w	r8, r8, #1
   182a0:	68b3      	ldr	r3, [r6, #8]
   182a2:	4598      	cmp	r8, r3
   182a4:	d3f1      	bcc.n	1828a <CommandProcessor::handleCommand(str&, CharDev&)+0x3a>
   182a6:	e018      	b.n	182da <CommandProcessor::handleCommand(str&, CharDev&)+0x8a>
   182a8:	4630      	mov	r0, r6
   182aa:	4621      	mov	r1, r4
   182ac:	683a      	ldr	r2, [r7, #0]
   182ae:	f7ff ffb1 	bl	18214 <CommandProcessor::prepareCmdParam(str&, char const*)>
   182b2:	68bb      	ldr	r3, [r7, #8]
   182b4:	4620      	mov	r0, r4
   182b6:	4629      	mov	r1, r5
   182b8:	68fa      	ldr	r2, [r7, #12]
   182ba:	4798      	blx	r3
   182bc:	2800      	cmp	r0, #0
   182be:	d14f      	bne.n	18360 <CommandProcessor::handleCommand(str&, CharDev&)+0x110>
   182c0:	4628      	mov	r0, r5
   182c2:	492f      	ldr	r1, [pc, #188]	; (18380 <CommandProcessor::handleCommand(str&, CharDev&)+0x130>)
   182c4:	f04f 32ff 	mov.w	r2, #4294967295
   182c8:	f001 ffc4 	bl	1a254 <CharDev::putline(char const*, unsigned int)>
   182cc:	4628      	mov	r0, r5
   182ce:	6879      	ldr	r1, [r7, #4]
   182d0:	f04f 32ff 	mov.w	r2, #4294967295
   182d4:	f001 ffbe 	bl	1a254 <CharDev::putline(char const*, unsigned int)>
   182d8:	e042      	b.n	18360 <CommandProcessor::handleCommand(str&, CharDev&)+0x110>
   182da:	f04f 0800 	mov.w	r8, #0
   182de:	68b3      	ldr	r3, [r6, #8]
   182e0:	4598      	cmp	r8, r3
   182e2:	d23f      	bcs.n	18364 <CommandProcessor::handleCommand(str&, CharDev&)+0x114>
   182e4:	68f3      	ldr	r3, [r6, #12]
   182e6:	2220      	movs	r2, #32
   182e8:	f853 7028 	ldr.w	r7, [r3, r8, lsl #2]
   182ec:	a908      	add	r1, sp, #32
   182ee:	a803      	add	r0, sp, #12
   182f0:	f000 fd32 	bl	18d58 <str::str(char*, int)>
   182f4:	a803      	add	r0, sp, #12
   182f6:	6839      	ldr	r1, [r7, #0]
   182f8:	f000 ffaf 	bl	1925a <str::operator=(char const*)>
   182fc:	2300      	movs	r3, #0
   182fe:	4921      	ldr	r1, [pc, #132]	; (18384 <CommandProcessor::handleCommand(str&, CharDev&)+0x134>)
   18300:	aa01      	add	r2, sp, #4
   18302:	4620      	mov	r0, r4
   18304:	9301      	str	r3, [sp, #4]
   18306:	9302      	str	r3, [sp, #8]
   18308:	f000 fd56 	bl	18db8 <str::scanf(char const*, ...)>
   1830c:	a801      	add	r0, sp, #4
   1830e:	f006 fddb 	bl	1eec8 <strlen>
   18312:	2801      	cmp	r0, #1
   18314:	d904      	bls.n	18320 <CommandProcessor::handleCommand(str&, CharDev&)+0xd0>
   18316:	a803      	add	r0, sp, #12
   18318:	a901      	add	r1, sp, #4
   1831a:	f000 fe07 	bl	18f2c <str::beginsWithIgnoreCase(char const*) const>
   1831e:	b928      	cbnz	r0, 1832c <CommandProcessor::handleCommand(str&, CharDev&)+0xdc>
   18320:	a803      	add	r0, sp, #12
   18322:	f000 fd2e 	bl	18d82 <str::~str()>
   18326:	f108 0801 	add.w	r8, r8, #1
   1832a:	e7d8      	b.n	182de <CommandProcessor::handleCommand(str&, CharDev&)+0x8e>
   1832c:	4630      	mov	r0, r6
   1832e:	4621      	mov	r1, r4
   18330:	683a      	ldr	r2, [r7, #0]
   18332:	f7ff ff6f 	bl	18214 <CommandProcessor::prepareCmdParam(str&, char const*)>
   18336:	68bb      	ldr	r3, [r7, #8]
   18338:	4620      	mov	r0, r4
   1833a:	4629      	mov	r1, r5
   1833c:	68fa      	ldr	r2, [r7, #12]
   1833e:	4798      	blx	r3
   18340:	b958      	cbnz	r0, 1835a <CommandProcessor::handleCommand(str&, CharDev&)+0x10a>
   18342:	4628      	mov	r0, r5
   18344:	490e      	ldr	r1, [pc, #56]	; (18380 <CommandProcessor::handleCommand(str&, CharDev&)+0x130>)
   18346:	f04f 32ff 	mov.w	r2, #4294967295
   1834a:	f001 ff83 	bl	1a254 <CharDev::putline(char const*, unsigned int)>
   1834e:	4628      	mov	r0, r5
   18350:	6879      	ldr	r1, [r7, #4]
   18352:	f04f 32ff 	mov.w	r2, #4294967295
   18356:	f001 ff7d 	bl	1a254 <CharDev::putline(char const*, unsigned int)>
   1835a:	a803      	add	r0, sp, #12
   1835c:	f000 fd11 	bl	18d82 <str::~str()>
   18360:	2001      	movs	r0, #1
   18362:	e006      	b.n	18372 <CommandProcessor::handleCommand(str&, CharDev&)+0x122>
   18364:	4628      	mov	r0, r5
   18366:	4908      	ldr	r1, [pc, #32]	; (18388 <CommandProcessor::handleCommand(str&, CharDev&)+0x138>)
   18368:	f04f 32ff 	mov.w	r2, #4294967295
   1836c:	f001 ff72 	bl	1a254 <CharDev::putline(char const*, unsigned int)>
   18370:	2000      	movs	r0, #0
   18372:	b010      	add	sp, #64	; 0x40
   18374:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   18378:	00026662 	.word	0x00026662
   1837c:	00024dcd 	.word	0x00024dcd
   18380:	00026665 	.word	0x00026665
   18384:	0002668a 	.word	0x0002668a
   18388:	0002663d 	.word	0x0002663d

0001838c <logger_get_buffer_ptr>:
logger_get_buffer_ptr():
   1838c:	b537      	push	{r0, r1, r2, r4, r5, lr}
   1838e:	2300      	movs	r3, #0
   18390:	ac02      	add	r4, sp, #8
   18392:	4d0d      	ldr	r5, [pc, #52]	; (183c8 <logger_get_buffer_ptr+0x3c>)
   18394:	f844 3d04 	str.w	r3, [r4, #-4]!
   18398:	4602      	mov	r2, r0
   1839a:	4621      	mov	r1, r4
   1839c:	6828      	ldr	r0, [r5, #0]
   1839e:	b90a      	cbnz	r2, 183a4 <logger_get_buffer_ptr+0x18>
   183a0:	4613      	mov	r3, r2
   183a2:	e00c      	b.n	183be <logger_get_buffer_ptr+0x32>
   183a4:	220a      	movs	r2, #10
   183a6:	f002 fcff 	bl	1ada8 <xQueueGenericReceive>
   183aa:	4603      	mov	r3, r0
   183ac:	b948      	cbnz	r0, 183c2 <logger_get_buffer_ptr+0x36>
   183ae:	4a07      	ldr	r2, [pc, #28]	; (183cc <logger_get_buffer_ptr+0x40>)
   183b0:	6828      	ldr	r0, [r5, #0]
   183b2:	8811      	ldrh	r1, [r2, #0]
   183b4:	3101      	adds	r1, #1
   183b6:	8011      	strh	r1, [r2, #0]
   183b8:	4621      	mov	r1, r4
   183ba:	f04f 32ff 	mov.w	r2, #4294967295
   183be:	f002 fcf3 	bl	1ada8 <xQueueGenericReceive>
   183c2:	9801      	ldr	r0, [sp, #4]
   183c4:	b003      	add	sp, #12
   183c6:	bd30      	pop	{r4, r5, pc}
   183c8:	2007c978 	.word	0x2007c978
   183cc:	2007c962 	.word	0x2007c962

000183d0 <logger_write_to_file>:
logger_write_to_file():
   183d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   183d4:	2600      	movs	r6, #0
   183d6:	f5ad 7d0c 	sub.w	sp, sp, #560	; 0x230
   183da:	460f      	mov	r7, r1
   183dc:	4680      	mov	r8, r0
   183de:	9602      	str	r6, [sp, #8]
   183e0:	f003 fde2 	bl	1bfa8 <sys_get_uptime_us>
   183e4:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   183e8:	2300      	movs	r3, #0
   183ea:	f005 f8c9 	bl	1d580 <__aeabi_uldivmod>
   183ee:	4631      	mov	r1, r6
   183f0:	4604      	mov	r4, r0
   183f2:	f44f 7209 	mov.w	r2, #548	; 0x224
   183f6:	a803      	add	r0, sp, #12
   183f8:	f005 fd39 	bl	1de6e <memset>
   183fc:	b1df      	cbz	r7, 18436 <logger_write_to_file+0x66>
   183fe:	a803      	add	r0, sp, #12
   18400:	491c      	ldr	r1, [pc, #112]	; (18474 <logger_write_to_file+0xa4>)
   18402:	2212      	movs	r2, #18
   18404:	f7fe fe48 	bl	17098 <f_open>
   18408:	4606      	mov	r6, r0
   1840a:	b980      	cbnz	r0, 1842e <logger_write_to_file+0x5e>
   1840c:	a803      	add	r0, sp, #12
   1840e:	9906      	ldr	r1, [sp, #24]
   18410:	f7ff f8c8 	bl	175a4 <f_lseek>
   18414:	4606      	mov	r6, r0
   18416:	b930      	cbnz	r0, 18426 <logger_write_to_file+0x56>
   18418:	a803      	add	r0, sp, #12
   1841a:	4641      	mov	r1, r8
   1841c:	463a      	mov	r2, r7
   1841e:	ab02      	add	r3, sp, #8
   18420:	f7fe ff8a 	bl	17338 <f_write>
   18424:	4606      	mov	r6, r0
   18426:	a803      	add	r0, sp, #12
   18428:	f7ff f8aa 	bl	17580 <f_close>
   1842c:	e004      	b.n	18438 <logger_write_to_file+0x68>
   1842e:	4812      	ldr	r0, [pc, #72]	; (18478 <logger_write_to_file+0xa8>)
   18430:	f006 fa24 	bl	1e87c <iprintf>
   18434:	e000      	b.n	18438 <logger_write_to_file+0x68>
   18436:	463e      	mov	r6, r7
   18438:	f003 fdb6 	bl	1bfa8 <sys_get_uptime_us>
   1843c:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   18440:	2300      	movs	r3, #0
   18442:	f005 f89d 	bl	1d580 <__aeabi_uldivmod>
   18446:	4b0d      	ldr	r3, [pc, #52]	; (1847c <logger_write_to_file+0xac>)
   18448:	1b00      	subs	r0, r0, r4
   1844a:	881a      	ldrh	r2, [r3, #0]
   1844c:	4290      	cmp	r0, r2
   1844e:	9a02      	ldr	r2, [sp, #8]
   18450:	bf88      	it	hi
   18452:	8018      	strhhi	r0, [r3, #0]
   18454:	1abb      	subs	r3, r7, r2
   18456:	425c      	negs	r4, r3
   18458:	415c      	adcs	r4, r3
   1845a:	b934      	cbnz	r4, 1846a <logger_write_to_file+0x9a>
   1845c:	9b05      	ldr	r3, [sp, #20]
   1845e:	4808      	ldr	r0, [pc, #32]	; (18480 <logger_write_to_file+0xb0>)
   18460:	9300      	str	r3, [sp, #0]
   18462:	4631      	mov	r1, r6
   18464:	463b      	mov	r3, r7
   18466:	f006 fa09 	bl	1e87c <iprintf>
   1846a:	4620      	mov	r0, r4
   1846c:	f50d 7d0c 	add.w	sp, sp, #560	; 0x230
   18470:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   18474:	000266a0 	.word	0x000266a0
   18478:	000266aa 	.word	0x000266aa
   1847c:	2007c960 	.word	0x2007c960
   18480:	000266be 	.word	0x000266be

00018484 <logger_task>:
logger_task():
   18484:	4b2e      	ldr	r3, [pc, #184]	; (18540 <logger_task+0xbc>)
   18486:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   1848a:	681c      	ldr	r4, [r3, #0]
   1848c:	f504 6780 	add.w	r7, r4, #1024	; 0x400
   18490:	4625      	mov	r5, r4
   18492:	ae02      	add	r6, sp, #8
   18494:	2300      	movs	r3, #0
   18496:	f8df 80b4 	ldr.w	r8, [pc, #180]	; 1854c <logger_task+0xc8>
   1849a:	f846 3d04 	str.w	r3, [r6, #-4]!
   1849e:	f8d8 0000 	ldr.w	r0, [r8]
   184a2:	4631      	mov	r1, r6
   184a4:	f64e 2260 	movw	r2, #60000	; 0xea60
   184a8:	f002 fc7e 	bl	1ada8 <xQueueGenericReceive>
   184ac:	b108      	cbz	r0, 184b2 <logger_task+0x2e>
   184ae:	9b01      	ldr	r3, [sp, #4]
   184b0:	b923      	cbnz	r3, 184bc <logger_task+0x38>
   184b2:	4620      	mov	r0, r4
   184b4:	1b29      	subs	r1, r5, r4
   184b6:	f7ff ff8b 	bl	183d0 <logger_write_to_file>
   184ba:	e7e9      	b.n	18490 <logger_task+0xc>
   184bc:	f8d8 0000 	ldr.w	r0, [r8]
   184c0:	f002 fd1c 	bl	1aefc <uxQueueMessagesWaiting>
   184c4:	4b1f      	ldr	r3, [pc, #124]	; (18544 <logger_task+0xc0>)
   184c6:	f8dd 8004 	ldr.w	r8, [sp, #4]
   184ca:	881a      	ldrh	r2, [r3, #0]
   184cc:	3001      	adds	r0, #1
   184ce:	4290      	cmp	r0, r2
   184d0:	bf88      	it	hi
   184d2:	8018      	strhhi	r0, [r3, #0]
   184d4:	4640      	mov	r0, r8
   184d6:	f006 fcf7 	bl	1eec8 <strlen>
   184da:	230a      	movs	r3, #10
   184dc:	f808 3000 	strb.w	r3, [r8, r0]
   184e0:	f100 0901 	add.w	r9, r0, #1
   184e4:	9b01      	ldr	r3, [sp, #4]
   184e6:	2200      	movs	r2, #0
   184e8:	eb05 0809 	add.w	r8, r5, r9
   184ec:	f803 2009 	strb.w	r2, [r3, r9]
   184f0:	45b8      	cmp	r8, r7
   184f2:	9901      	ldr	r1, [sp, #4]
   184f4:	d316      	bcc.n	18524 <logger_task+0xa0>
   184f6:	4628      	mov	r0, r5
   184f8:	1b7a      	subs	r2, r7, r5
   184fa:	f005 fc94 	bl	1de26 <memcpy>
   184fe:	ebc7 0808 	rsb	r8, r7, r8
   18502:	4620      	mov	r0, r4
   18504:	1b39      	subs	r1, r7, r4
   18506:	f7ff ff63 	bl	183d0 <logger_write_to_file>
   1850a:	f1b8 0f00 	cmp.w	r8, #0
   1850e:	d007      	beq.n	18520 <logger_task+0x9c>
   18510:	9b01      	ldr	r3, [sp, #4]
   18512:	ebc8 0109 	rsb	r1, r8, r9
   18516:	4620      	mov	r0, r4
   18518:	4419      	add	r1, r3
   1851a:	4642      	mov	r2, r8
   1851c:	f005 fc83 	bl	1de26 <memcpy>
   18520:	44a0      	add	r8, r4
   18522:	e003      	b.n	1852c <logger_task+0xa8>
   18524:	4628      	mov	r0, r5
   18526:	464a      	mov	r2, r9
   18528:	f005 fc7d 	bl	1de26 <memcpy>
   1852c:	4b06      	ldr	r3, [pc, #24]	; (18548 <logger_task+0xc4>)
   1852e:	4631      	mov	r1, r6
   18530:	6818      	ldr	r0, [r3, #0]
   18532:	f04f 32ff 	mov.w	r2, #4294967295
   18536:	2300      	movs	r3, #0
   18538:	f002 fb66 	bl	1ac08 <xQueueGenericSend>
   1853c:	4645      	mov	r5, r8
   1853e:	e7a8      	b.n	18492 <logger_task+0xe>
   18540:	2007c970 	.word	0x2007c970
   18544:	2007c97c 	.word	0x2007c97c
   18548:	2007c978 	.word	0x2007c978
   1854c:	2007c95c 	.word	0x2007c95c

00018550 <logger_write_log_message>:
logger_write_log_message():
   18550:	b573      	push	{r0, r1, r4, r5, r6, lr}
   18552:	ac02      	add	r4, sp, #8
   18554:	f844 0d04 	str.w	r0, [r4, #-4]!
   18558:	460d      	mov	r5, r1
   1855a:	b131      	cbz	r1, 1856a <logger_write_log_message+0x1a>
   1855c:	4b0d      	ldr	r3, [pc, #52]	; (18594 <logger_write_log_message+0x44>)
   1855e:	4621      	mov	r1, r4
   18560:	6818      	ldr	r0, [r3, #0]
   18562:	f04f 32ff 	mov.w	r2, #4294967295
   18566:	2300      	movs	r3, #0
   18568:	e00f      	b.n	1858a <logger_write_log_message+0x3a>
   1856a:	4606      	mov	r6, r0
   1856c:	f006 fcac 	bl	1eec8 <strlen>
   18570:	230a      	movs	r3, #10
   18572:	5433      	strb	r3, [r6, r0]
   18574:	9b01      	ldr	r3, [sp, #4]
   18576:	1c41      	adds	r1, r0, #1
   18578:	545d      	strb	r5, [r3, r1]
   1857a:	9801      	ldr	r0, [sp, #4]
   1857c:	f7ff ff28 	bl	183d0 <logger_write_to_file>
   18580:	4b05      	ldr	r3, [pc, #20]	; (18598 <logger_write_log_message+0x48>)
   18582:	4621      	mov	r1, r4
   18584:	6818      	ldr	r0, [r3, #0]
   18586:	462a      	mov	r2, r5
   18588:	462b      	mov	r3, r5
   1858a:	f002 fb3d 	bl	1ac08 <xQueueGenericSend>
   1858e:	b002      	add	sp, #8
   18590:	bd70      	pop	{r4, r5, r6, pc}
   18592:	bf00      	nop
   18594:	2007c95c 	.word	0x2007c95c
   18598:	2007c978 	.word	0x2007c978

0001859c <logger_send_flush_request>:
logger_send_flush_request():
   1859c:	b507      	push	{r0, r1, r2, lr}
   1859e:	f003 f975 	bl	1b88c <xTaskGetSchedulerState>
   185a2:	2802      	cmp	r0, #2
   185a4:	d10c      	bne.n	185c0 <logger_send_flush_request+0x24>
   185a6:	4b08      	ldr	r3, [pc, #32]	; (185c8 <logger_send_flush_request+0x2c>)
   185a8:	681b      	ldr	r3, [r3, #0]
   185aa:	b14b      	cbz	r3, 185c0 <logger_send_flush_request+0x24>
   185ac:	4a07      	ldr	r2, [pc, #28]	; (185cc <logger_send_flush_request+0x30>)
   185ae:	2300      	movs	r3, #0
   185b0:	a902      	add	r1, sp, #8
   185b2:	6810      	ldr	r0, [r2, #0]
   185b4:	f841 3d04 	str.w	r3, [r1, #-4]!
   185b8:	f04f 32ff 	mov.w	r2, #4294967295
   185bc:	f002 fb24 	bl	1ac08 <xQueueGenericSend>
   185c0:	b003      	add	sp, #12
   185c2:	f85d fb04 	ldr.w	pc, [sp], #4
   185c6:	bf00      	nop
   185c8:	2007c970 	.word	0x2007c970
   185cc:	2007c95c 	.word	0x2007c95c

000185d0 <logger_init>:
logger_init():
   185d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   185d4:	4e2f      	ldr	r6, [pc, #188]	; (18694 <logger_init+0xc4>)
   185d6:	b086      	sub	sp, #24
   185d8:	6834      	ldr	r4, [r6, #0]
   185da:	4680      	mov	r8, r0
   185dc:	2c00      	cmp	r4, #0
   185de:	d155      	bne.n	1868c <logger_init+0xbc>
   185e0:	f44f 6080 	mov.w	r0, #1024	; 0x400
   185e4:	9405      	str	r4, [sp, #20]
   185e6:	f005 fbf1 	bl	1ddcc <malloc>
   185ea:	4d2b      	ldr	r5, [pc, #172]	; (18698 <logger_init+0xc8>)
   185ec:	6030      	str	r0, [r6, #0]
   185ee:	b940      	cbnz	r0, 18602 <logger_init+0x32>
   185f0:	6830      	ldr	r0, [r6, #0]
   185f2:	2800      	cmp	r0, #0
   185f4:	d035      	beq.n	18662 <logger_init+0x92>
   185f6:	f005 fbf1 	bl	1dddc <free>
   185fa:	4b26      	ldr	r3, [pc, #152]	; (18694 <logger_init+0xc4>)
   185fc:	2200      	movs	r2, #0
   185fe:	601a      	str	r2, [r3, #0]
   18600:	e02f      	b.n	18662 <logger_init+0x92>
   18602:	2104      	movs	r1, #4
   18604:	4622      	mov	r2, r4
   18606:	200a      	movs	r0, #10
   18608:	f002 facd 	bl	1aba6 <xQueueGenericCreate>
   1860c:	4f23      	ldr	r7, [pc, #140]	; (1869c <logger_init+0xcc>)
   1860e:	2104      	movs	r1, #4
   18610:	6038      	str	r0, [r7, #0]
   18612:	4622      	mov	r2, r4
   18614:	200a      	movs	r0, #10
   18616:	f002 fac6 	bl	1aba6 <xQueueGenericCreate>
   1861a:	683b      	ldr	r3, [r7, #0]
   1861c:	6028      	str	r0, [r5, #0]
   1861e:	2b00      	cmp	r3, #0
   18620:	d0e6      	beq.n	185f0 <logger_init+0x20>
   18622:	2800      	cmp	r0, #0
   18624:	d0e4      	beq.n	185f0 <logger_init+0x20>
   18626:	240a      	movs	r4, #10
   18628:	2096      	movs	r0, #150	; 0x96
   1862a:	f005 fbcf 	bl	1ddcc <malloc>
   1862e:	9005      	str	r0, [sp, #20]
   18630:	2800      	cmp	r0, #0
   18632:	d0dd      	beq.n	185f0 <logger_init+0x20>
   18634:	2200      	movs	r2, #0
   18636:	6828      	ldr	r0, [r5, #0]
   18638:	a905      	add	r1, sp, #20
   1863a:	4613      	mov	r3, r2
   1863c:	f002 fae4 	bl	1ac08 <xQueueGenericSend>
   18640:	3c01      	subs	r4, #1
   18642:	d1f1      	bne.n	18628 <logger_init+0x58>
   18644:	f8cd 8000 	str.w	r8, [sp]
   18648:	9401      	str	r4, [sp, #4]
   1864a:	9402      	str	r4, [sp, #8]
   1864c:	9403      	str	r4, [sp, #12]
   1864e:	4814      	ldr	r0, [pc, #80]	; (186a0 <logger_init+0xd0>)
   18650:	4914      	ldr	r1, [pc, #80]	; (186a4 <logger_init+0xd4>)
   18652:	f44f 72c0 	mov.w	r2, #384	; 0x180
   18656:	4623      	mov	r3, r4
   18658:	f002 fd0c 	bl	1b074 <xTaskGenericCreate>
   1865c:	2800      	cmp	r0, #0
   1865e:	d0c7      	beq.n	185f0 <logger_init+0x20>
   18660:	e014      	b.n	1868c <logger_init+0xbc>
   18662:	682b      	ldr	r3, [r5, #0]
   18664:	240a      	movs	r4, #10
   18666:	b92b      	cbnz	r3, 18674 <logger_init+0xa4>
   18668:	480f      	ldr	r0, [pc, #60]	; (186a8 <logger_init+0xd8>)
   1866a:	f006 f97f 	bl	1e96c <puts>
   1866e:	e00d      	b.n	1868c <logger_init+0xbc>
   18670:	3c01      	subs	r4, #1
   18672:	d0f9      	beq.n	18668 <logger_init+0x98>
   18674:	2200      	movs	r2, #0
   18676:	6828      	ldr	r0, [r5, #0]
   18678:	a905      	add	r1, sp, #20
   1867a:	4613      	mov	r3, r2
   1867c:	f002 fb94 	bl	1ada8 <xQueueGenericReceive>
   18680:	2800      	cmp	r0, #0
   18682:	d0f5      	beq.n	18670 <logger_init+0xa0>
   18684:	9805      	ldr	r0, [sp, #20]
   18686:	f005 fba9 	bl	1dddc <free>
   1868a:	e7f1      	b.n	18670 <logger_init+0xa0>
   1868c:	b006      	add	sp, #24
   1868e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   18692:	bf00      	nop
   18694:	2007c970 	.word	0x2007c970
   18698:	2007c978 	.word	0x2007c978
   1869c:	2007c95c 	.word	0x2007c95c
   186a0:	00018485 	.word	0x00018485
   186a4:	000266f1 	.word	0x000266f1
   186a8:	000266f8 	.word	0x000266f8

000186ac <logger_set_printf>:
logger_set_printf():
   186ac:	2301      	movs	r3, #1
   186ae:	fa03 f000 	lsl.w	r0, r3, r0
   186b2:	4b04      	ldr	r3, [pc, #16]	; (186c4 <logger_set_printf+0x18>)
   186b4:	781a      	ldrb	r2, [r3, #0]
   186b6:	b109      	cbz	r1, 186bc <logger_set_printf+0x10>
   186b8:	4310      	orrs	r0, r2
   186ba:	e001      	b.n	186c0 <logger_set_printf+0x14>
   186bc:	ea22 0000 	bic.w	r0, r2, r0
   186c0:	7018      	strb	r0, [r3, #0]
   186c2:	4770      	bx	lr
   186c4:	2007c974 	.word	0x2007c974

000186c8 <logger_log>:
logger_log():
   186c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   186cc:	469a      	mov	sl, r3
   186ce:	4b47      	ldr	r3, [pc, #284]	; (187ec <logger_log+0x124>)
   186d0:	b099      	sub	sp, #100	; 0x64
   186d2:	681b      	ldr	r3, [r3, #0]
   186d4:	4606      	mov	r6, r0
   186d6:	460c      	mov	r4, r1
   186d8:	4615      	mov	r5, r2
   186da:	2b00      	cmp	r3, #0
   186dc:	f000 8083 	beq.w	187e6 <logger_log+0x11e>
   186e0:	a811      	add	r0, sp, #68	; 0x44
   186e2:	f001 fb51 	bl	19d88 <rtc_gettime>
   186e6:	f003 fc5f 	bl	1bfa8 <sys_get_uptime_us>
   186ea:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   186ee:	2300      	movs	r3, #0
   186f0:	f004 ff46 	bl	1d580 <__aeabi_uldivmod>
   186f4:	e9cd 010e 	strd	r0, r1, [sp, #56]	; 0x38
   186f8:	f003 f8c8 	bl	1b88c <xTaskGetSchedulerState>
   186fc:	4b3c      	ldr	r3, [pc, #240]	; (187f0 <logger_log+0x128>)
   186fe:	1e82      	subs	r2, r0, #2
   18700:	f1d2 0800 	rsbs	r8, r2, #0
   18704:	af18      	add	r7, sp, #96	; 0x60
   18706:	eb58 0802 	adcs.w	r8, r8, r2
   1870a:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
   1870c:	e907 000f 	stmdb	r7, {r0, r1, r2, r3}
   18710:	b15c      	cbz	r4, 1872a <logger_log+0x62>
   18712:	4620      	mov	r0, r4
   18714:	212f      	movs	r1, #47	; 0x2f
   18716:	f006 fc29 	bl	1ef6c <strrchr>
   1871a:	b920      	cbnz	r0, 18726 <logger_log+0x5e>
   1871c:	4620      	mov	r0, r4
   1871e:	215c      	movs	r1, #92	; 0x5c
   18720:	f006 fc24 	bl	1ef6c <strrchr>
   18724:	b110      	cbz	r0, 1872c <logger_log+0x64>
   18726:	1c44      	adds	r4, r0, #1
   18728:	e000      	b.n	1872c <logger_log+0x64>
   1872a:	4c32      	ldr	r4, [pc, #200]	; (187f4 <logger_log+0x12c>)
   1872c:	4640      	mov	r0, r8
   1872e:	f7ff fe2d 	bl	1838c <logger_get_buffer_ptr>
   18732:	f89d 1045 	ldrb.w	r1, [sp, #69]	; 0x45
   18736:	f10d 0c60 	add.w	ip, sp, #96	; 0x60
   1873a:	f001 013f 	and.w	r1, r1, #63	; 0x3f
   1873e:	910c      	str	r1, [sp, #48]	; 0x30
   18740:	f89d 1044 	ldrb.w	r1, [sp, #68]	; 0x44
   18744:	f8df 90ac 	ldr.w	r9, [pc, #172]	; 187f4 <logger_log+0x12c>
   18748:	f001 013f 	and.w	r1, r1, #63	; 0x3f
   1874c:	910d      	str	r1, [sp, #52]	; 0x34
   1874e:	eb0c 0186 	add.w	r1, ip, r6, lsl #2
   18752:	f851 1c10 	ldr.w	r1, [r1, #-16]
   18756:	2d00      	cmp	r5, #0
   18758:	bf08      	it	eq
   1875a:	464d      	moveq	r5, r9
   1875c:	910b      	str	r1, [sp, #44]	; 0x2c
   1875e:	990c      	ldr	r1, [sp, #48]	; 0x30
   18760:	f995 b000 	ldrsb.w	fp, [r5]
   18764:	9101      	str	r1, [sp, #4]
   18766:	990d      	ldr	r1, [sp, #52]	; 0x34
   18768:	f8df c098 	ldr.w	ip, [pc, #152]	; 18804 <logger_log+0x13c>
   1876c:	9102      	str	r1, [sp, #8]
   1876e:	990e      	ldr	r1, [sp, #56]	; 0x38
   18770:	f89d e046 	ldrb.w	lr, [sp, #70]	; 0x46
   18774:	f89d 2049 	ldrb.w	r2, [sp, #73]	; 0x49
   18778:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
   1877c:	9103      	str	r1, [sp, #12]
   1877e:	990b      	ldr	r1, [sp, #44]	; 0x2c
   18780:	f1bb 0f00 	cmp.w	fp, #0
   18784:	bf18      	it	ne
   18786:	46e1      	movne	r9, ip
   18788:	f00e 0e1f 	and.w	lr, lr, #31
   1878c:	f8cd e000 	str.w	lr, [sp]
   18790:	9104      	str	r1, [sp, #16]
   18792:	f002 020f 	and.w	r2, r2, #15
   18796:	4918      	ldr	r1, [pc, #96]	; (187f8 <logger_log+0x130>)
   18798:	f003 031f 	and.w	r3, r3, #31
   1879c:	9405      	str	r4, [sp, #20]
   1879e:	9506      	str	r5, [sp, #24]
   187a0:	f8cd 901c 	str.w	r9, [sp, #28]
   187a4:	f8cd a020 	str.w	sl, [sp, #32]
   187a8:	4607      	mov	r7, r0
   187aa:	f006 fad9 	bl	1ed60 <siprintf>
   187ae:	4601      	mov	r1, r0
   187b0:	ab23      	add	r3, sp, #140	; 0x8c
   187b2:	f1c1 0195 	rsb	r1, r1, #149	; 0x95
   187b6:	9a22      	ldr	r2, [sp, #136]	; 0x88
   187b8:	1838      	adds	r0, r7, r0
   187ba:	9310      	str	r3, [sp, #64]	; 0x40
   187bc:	f009 f920 	bl	21a00 <vsniprintf>
   187c0:	4b0e      	ldr	r3, [pc, #56]	; (187fc <logger_log+0x134>)
   187c2:	4638      	mov	r0, r7
   187c4:	f853 2026 	ldr.w	r2, [r3, r6, lsl #2]
   187c8:	4641      	mov	r1, r8
   187ca:	3201      	adds	r2, #1
   187cc:	f843 2026 	str.w	r2, [r3, r6, lsl #2]
   187d0:	f7ff febe 	bl	18550 <logger_write_log_message>
   187d4:	4b0a      	ldr	r3, [pc, #40]	; (18800 <logger_log+0x138>)
   187d6:	781b      	ldrb	r3, [r3, #0]
   187d8:	fa43 f606 	asr.w	r6, r3, r6
   187dc:	07f3      	lsls	r3, r6, #31
   187de:	d502      	bpl.n	187e6 <logger_log+0x11e>
   187e0:	4638      	mov	r0, r7
   187e2:	f006 f8c3 	bl	1e96c <puts>
   187e6:	b019      	add	sp, #100	; 0x64
   187e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   187ec:	2007c970 	.word	0x2007c970
   187f0:	00026690 	.word	0x00026690
   187f4:	000249f1 	.word	0x000249f1
   187f8:	0002671d 	.word	0x0002671d
   187fc:	2007c964 	.word	0x2007c964
   18800:	2007c974 	.word	0x2007c974
   18804:	00026878 	.word	0x00026878

00018808 <logger_log_raw>:
logger_log_raw():
   18808:	b40f      	push	{r0, r1, r2, r3}
   1880a:	4b0e      	ldr	r3, [pc, #56]	; (18844 <logger_log_raw+0x3c>)
   1880c:	b537      	push	{r0, r1, r2, r4, r5, lr}
   1880e:	681b      	ldr	r3, [r3, #0]
   18810:	b193      	cbz	r3, 18838 <logger_log_raw+0x30>
   18812:	f003 f83b 	bl	1b88c <xTaskGetSchedulerState>
   18816:	1e83      	subs	r3, r0, #2
   18818:	425c      	negs	r4, r3
   1881a:	415c      	adcs	r4, r3
   1881c:	4620      	mov	r0, r4
   1881e:	f7ff fdb5 	bl	1838c <logger_get_buffer_ptr>
   18822:	ab07      	add	r3, sp, #28
   18824:	4605      	mov	r5, r0
   18826:	2195      	movs	r1, #149	; 0x95
   18828:	9a06      	ldr	r2, [sp, #24]
   1882a:	9301      	str	r3, [sp, #4]
   1882c:	f009 f8e8 	bl	21a00 <vsniprintf>
   18830:	4628      	mov	r0, r5
   18832:	4621      	mov	r1, r4
   18834:	f7ff fe8c 	bl	18550 <logger_write_log_message>
   18838:	b003      	add	sp, #12
   1883a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
   1883e:	b004      	add	sp, #16
   18840:	4770      	bx	lr
   18842:	bf00      	nop
   18844:	2007c970 	.word	0x2007c970

00018848 <for_each_recur_alarm_callback>:
for_each_recur_alarm_callback():
   18848:	b513      	push	{r0, r1, r4, lr}
   1884a:	460c      	mov	r4, r1
   1884c:	aa02      	add	r2, sp, #8
   1884e:	2100      	movs	r1, #0
   18850:	460b      	mov	r3, r1
   18852:	f842 1d04 	str.w	r1, [r2, #-4]!
   18856:	6800      	ldr	r0, [r0, #0]
   18858:	f002 fa6d 	bl	1ad36 <xQueueGenericSendFromISR>
   1885c:	9b01      	ldr	r3, [sp, #4]
   1885e:	b11b      	cbz	r3, 18868 <for_each_recur_alarm_callback+0x20>
   18860:	6823      	ldr	r3, [r4, #0]
   18862:	f043 0301 	orr.w	r3, r3, #1
   18866:	6023      	str	r3, [r4, #0]
   18868:	2001      	movs	r0, #1
   1886a:	b002      	add	sp, #8
   1886c:	bd10      	pop	{r4, pc}

0001886e <for_each_alarm_callback>:
for_each_alarm_callback():
   1886e:	b530      	push	{r4, r5, lr}
   18870:	b085      	sub	sp, #20
   18872:	4604      	mov	r4, r0
   18874:	a801      	add	r0, sp, #4
   18876:	460d      	mov	r5, r1
   18878:	f001 fa86 	bl	19d88 <rtc_gettime>
   1887c:	f89d 3006 	ldrb.w	r3, [sp, #6]
   18880:	7922      	ldrb	r2, [r4, #4]
   18882:	f003 031f 	and.w	r3, r3, #31
   18886:	429a      	cmp	r2, r3
   18888:	d11d      	bne.n	188c6 <for_each_alarm_callback+0x58>
   1888a:	f89d 3005 	ldrb.w	r3, [sp, #5]
   1888e:	7962      	ldrb	r2, [r4, #5]
   18890:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   18894:	429a      	cmp	r2, r3
   18896:	d116      	bne.n	188c6 <for_each_alarm_callback+0x58>
   18898:	f89d 3004 	ldrb.w	r3, [sp, #4]
   1889c:	79a2      	ldrb	r2, [r4, #6]
   1889e:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   188a2:	429a      	cmp	r2, r3
   188a4:	d10f      	bne.n	188c6 <for_each_alarm_callback+0x58>
   188a6:	6823      	ldr	r3, [r4, #0]
   188a8:	2100      	movs	r1, #0
   188aa:	aa04      	add	r2, sp, #16
   188ac:	f842 1d10 	str.w	r1, [r2, #-16]!
   188b0:	6818      	ldr	r0, [r3, #0]
   188b2:	466a      	mov	r2, sp
   188b4:	460b      	mov	r3, r1
   188b6:	f002 fa3e 	bl	1ad36 <xQueueGenericSendFromISR>
   188ba:	9b00      	ldr	r3, [sp, #0]
   188bc:	b11b      	cbz	r3, 188c6 <for_each_alarm_callback+0x58>
   188be:	682b      	ldr	r3, [r5, #0]
   188c0:	f043 0301 	orr.w	r3, r3, #1
   188c4:	602b      	str	r3, [r5, #0]
   188c6:	2001      	movs	r0, #1
   188c8:	b005      	add	sp, #20
   188ca:	bd30      	pop	{r4, r5, pc}

000188cc <RTC_IRQHandler>:
RTC_IRQHandler():
   188cc:	b530      	push	{r4, r5, lr}
   188ce:	4b22      	ldr	r3, [pc, #136]	; (18958 <RTC_IRQHandler+0x8c>)
   188d0:	b087      	sub	sp, #28
   188d2:	781a      	ldrb	r2, [r3, #0]
   188d4:	4c21      	ldr	r4, [pc, #132]	; (1895c <RTC_IRQHandler+0x90>)
   188d6:	f042 0201 	orr.w	r2, r2, #1
   188da:	701a      	strb	r2, [r3, #0]
   188dc:	2500      	movs	r5, #0
   188de:	a803      	add	r0, sp, #12
   188e0:	9502      	str	r5, [sp, #8]
   188e2:	f001 fa51 	bl	19d88 <rtc_gettime>
   188e6:	462b      	mov	r3, r5
   188e8:	9500      	str	r5, [sp, #0]
   188ea:	6820      	ldr	r0, [r4, #0]
   188ec:	491c      	ldr	r1, [pc, #112]	; (18960 <RTC_IRQHandler+0x94>)
   188ee:	aa02      	add	r2, sp, #8
   188f0:	f7ff fbb2 	bl	18058 <c_list_for_each_elm>
   188f4:	f89d 300c 	ldrb.w	r3, [sp, #12]
   188f8:	f013 033f 	ands.w	r3, r3, #63	; 0x3f
   188fc:	d11b      	bne.n	18936 <RTC_IRQHandler+0x6a>
   188fe:	9300      	str	r3, [sp, #0]
   18900:	6860      	ldr	r0, [r4, #4]
   18902:	4917      	ldr	r1, [pc, #92]	; (18960 <RTC_IRQHandler+0x94>)
   18904:	aa02      	add	r2, sp, #8
   18906:	f7ff fba7 	bl	18058 <c_list_for_each_elm>
   1890a:	f89d 300d 	ldrb.w	r3, [sp, #13]
   1890e:	f013 033f 	ands.w	r3, r3, #63	; 0x3f
   18912:	d110      	bne.n	18936 <RTC_IRQHandler+0x6a>
   18914:	9300      	str	r3, [sp, #0]
   18916:	68a0      	ldr	r0, [r4, #8]
   18918:	4911      	ldr	r1, [pc, #68]	; (18960 <RTC_IRQHandler+0x94>)
   1891a:	aa02      	add	r2, sp, #8
   1891c:	f7ff fb9c 	bl	18058 <c_list_for_each_elm>
   18920:	f89d 300e 	ldrb.w	r3, [sp, #14]
   18924:	f013 031f 	ands.w	r3, r3, #31
   18928:	d105      	bne.n	18936 <RTC_IRQHandler+0x6a>
   1892a:	9300      	str	r3, [sp, #0]
   1892c:	68e0      	ldr	r0, [r4, #12]
   1892e:	490c      	ldr	r1, [pc, #48]	; (18960 <RTC_IRQHandler+0x94>)
   18930:	aa02      	add	r2, sp, #8
   18932:	f7ff fb91 	bl	18058 <c_list_for_each_elm>
   18936:	2300      	movs	r3, #0
   18938:	4a0a      	ldr	r2, [pc, #40]	; (18964 <RTC_IRQHandler+0x98>)
   1893a:	9300      	str	r3, [sp, #0]
   1893c:	6810      	ldr	r0, [r2, #0]
   1893e:	490a      	ldr	r1, [pc, #40]	; (18968 <RTC_IRQHandler+0x9c>)
   18940:	aa02      	add	r2, sp, #8
   18942:	f7ff fb89 	bl	18058 <c_list_for_each_elm>
   18946:	9b02      	ldr	r3, [sp, #8]
   18948:	b11b      	cbz	r3, 18952 <RTC_IRQHandler+0x86>
   1894a:	4b08      	ldr	r3, [pc, #32]	; (1896c <RTC_IRQHandler+0xa0>)
   1894c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   18950:	601a      	str	r2, [r3, #0]
   18952:	b007      	add	sp, #28
   18954:	bd30      	pop	{r4, r5, pc}
   18956:	bf00      	nop
   18958:	40024000 	.word	0x40024000
   1895c:	2007c980 	.word	0x2007c980
   18960:	00018849 	.word	0x00018849
   18964:	2007c990 	.word	0x2007c990
   18968:	0001886f 	.word	0x0001886f
   1896c:	e000ed04 	.word	0xe000ed04

00018970 <printline(char const*, char const*)>:
_ZL9printlinePKcS0_():
   18970:	b570      	push	{r4, r5, r6, lr}
   18972:	460e      	mov	r6, r1
   18974:	4604      	mov	r4, r0
   18976:	f814 3b01 	ldrb.w	r3, [r4], #1
   1897a:	b333      	cbz	r3, 189ca <printline(char const*, char const*)+0x5a>
   1897c:	4b28      	ldr	r3, [pc, #160]	; (18a20 <printline(char const*, char const*)+0xb0>)
   1897e:	6818      	ldr	r0, [r3, #0]
   18980:	6882      	ldr	r2, [r0, #8]
   18982:	6895      	ldr	r5, [r2, #8]
   18984:	3d01      	subs	r5, #1
   18986:	2d00      	cmp	r5, #0
   18988:	6095      	str	r5, [r2, #8]
   1898a:	da14      	bge.n	189b6 <printline(char const*, char const*)+0x46>
   1898c:	6991      	ldr	r1, [r2, #24]
   1898e:	428d      	cmp	r5, r1
   18990:	db0c      	blt.n	189ac <printline(char const*, char const*)+0x3c>
   18992:	6812      	ldr	r2, [r2, #0]
   18994:	f814 1c01 	ldrb.w	r1, [r4, #-1]
   18998:	7011      	strb	r1, [r2, #0]
   1899a:	6818      	ldr	r0, [r3, #0]
   1899c:	6882      	ldr	r2, [r0, #8]
   1899e:	6813      	ldr	r3, [r2, #0]
   189a0:	7819      	ldrb	r1, [r3, #0]
   189a2:	290a      	cmp	r1, #10
   189a4:	d004      	beq.n	189b0 <printline(char const*, char const*)+0x40>
   189a6:	3301      	adds	r3, #1
   189a8:	6013      	str	r3, [r2, #0]
   189aa:	e7e4      	b.n	18976 <printline(char const*, char const*)+0x6>
   189ac:	f914 1c01 	ldrsb.w	r1, [r4, #-1]
   189b0:	f009 f868 	bl	21a84 <__swbuf_r>
   189b4:	e7df      	b.n	18976 <printline(char const*, char const*)+0x6>
   189b6:	6812      	ldr	r2, [r2, #0]
   189b8:	f814 1c01 	ldrb.w	r1, [r4, #-1]
   189bc:	7011      	strb	r1, [r2, #0]
   189be:	681b      	ldr	r3, [r3, #0]
   189c0:	689b      	ldr	r3, [r3, #8]
   189c2:	681a      	ldr	r2, [r3, #0]
   189c4:	3201      	adds	r2, #1
   189c6:	601a      	str	r2, [r3, #0]
   189c8:	e7d5      	b.n	18976 <printline(char const*, char const*)+0x6>
   189ca:	b126      	cbz	r6, 189d6 <printline(char const*, char const*)+0x66>
   189cc:	4630      	mov	r0, r6
   189ce:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
   189d2:	f005 bfcb 	b.w	1e96c <puts>
   189d6:	4b12      	ldr	r3, [pc, #72]	; (18a20 <printline(char const*, char const*)+0xb0>)
   189d8:	6818      	ldr	r0, [r3, #0]
   189da:	6882      	ldr	r2, [r0, #8]
   189dc:	6891      	ldr	r1, [r2, #8]
   189de:	3901      	subs	r1, #1
   189e0:	2900      	cmp	r1, #0
   189e2:	6091      	str	r1, [r2, #8]
   189e4:	da13      	bge.n	18a0e <printline(char const*, char const*)+0x9e>
   189e6:	6994      	ldr	r4, [r2, #24]
   189e8:	42a1      	cmp	r1, r4
   189ea:	db0b      	blt.n	18a04 <printline(char const*, char const*)+0x94>
   189ec:	6812      	ldr	r2, [r2, #0]
   189ee:	210a      	movs	r1, #10
   189f0:	7011      	strb	r1, [r2, #0]
   189f2:	6818      	ldr	r0, [r3, #0]
   189f4:	6882      	ldr	r2, [r0, #8]
   189f6:	6813      	ldr	r3, [r2, #0]
   189f8:	7819      	ldrb	r1, [r3, #0]
   189fa:	290a      	cmp	r1, #10
   189fc:	d003      	beq.n	18a06 <printline(char const*, char const*)+0x96>
   189fe:	3301      	adds	r3, #1
   18a00:	6013      	str	r3, [r2, #0]
   18a02:	bd70      	pop	{r4, r5, r6, pc}
   18a04:	210a      	movs	r1, #10
   18a06:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
   18a0a:	f009 b83b 	b.w	21a84 <__swbuf_r>
   18a0e:	6812      	ldr	r2, [r2, #0]
   18a10:	210a      	movs	r1, #10
   18a12:	7011      	strb	r1, [r2, #0]
   18a14:	681b      	ldr	r3, [r3, #0]
   18a16:	689b      	ldr	r3, [r3, #8]
   18a18:	681a      	ldr	r2, [r3, #0]
   18a1a:	3201      	adds	r2, #1
   18a1c:	601a      	str	r2, [r3, #0]
   18a1e:	bd70      	pop	{r4, r5, r6, pc}
   18a20:	2007c150 	.word	0x2007c150

00018a24 <dbg_print(char const*, char const*)>:
_ZL9dbg_printPKcS0_():
   18a24:	4b1b      	ldr	r3, [pc, #108]	; (18a94 <dbg_print(char const*, char const*)+0x70>)
   18a26:	b570      	push	{r4, r5, r6, lr}
   18a28:	781b      	ldrb	r3, [r3, #0]
   18a2a:	460e      	mov	r6, r1
   18a2c:	2b00      	cmp	r3, #0
   18a2e:	d030      	beq.n	18a92 <dbg_print(char const*, char const*)+0x6e>
   18a30:	4604      	mov	r4, r0
   18a32:	f814 3b01 	ldrb.w	r3, [r4], #1
   18a36:	b333      	cbz	r3, 18a86 <dbg_print(char const*, char const*)+0x62>
   18a38:	4b17      	ldr	r3, [pc, #92]	; (18a98 <dbg_print(char const*, char const*)+0x74>)
   18a3a:	6818      	ldr	r0, [r3, #0]
   18a3c:	6882      	ldr	r2, [r0, #8]
   18a3e:	6895      	ldr	r5, [r2, #8]
   18a40:	3d01      	subs	r5, #1
   18a42:	2d00      	cmp	r5, #0
   18a44:	6095      	str	r5, [r2, #8]
   18a46:	da14      	bge.n	18a72 <dbg_print(char const*, char const*)+0x4e>
   18a48:	6991      	ldr	r1, [r2, #24]
   18a4a:	428d      	cmp	r5, r1
   18a4c:	db0c      	blt.n	18a68 <dbg_print(char const*, char const*)+0x44>
   18a4e:	6812      	ldr	r2, [r2, #0]
   18a50:	f814 1c01 	ldrb.w	r1, [r4, #-1]
   18a54:	7011      	strb	r1, [r2, #0]
   18a56:	6818      	ldr	r0, [r3, #0]
   18a58:	6882      	ldr	r2, [r0, #8]
   18a5a:	6813      	ldr	r3, [r2, #0]
   18a5c:	7819      	ldrb	r1, [r3, #0]
   18a5e:	290a      	cmp	r1, #10
   18a60:	d004      	beq.n	18a6c <dbg_print(char const*, char const*)+0x48>
   18a62:	3301      	adds	r3, #1
   18a64:	6013      	str	r3, [r2, #0]
   18a66:	e7e4      	b.n	18a32 <dbg_print(char const*, char const*)+0xe>
   18a68:	f914 1c01 	ldrsb.w	r1, [r4, #-1]
   18a6c:	f009 f80a 	bl	21a84 <__swbuf_r>
   18a70:	e7df      	b.n	18a32 <dbg_print(char const*, char const*)+0xe>
   18a72:	6812      	ldr	r2, [r2, #0]
   18a74:	f814 1c01 	ldrb.w	r1, [r4, #-1]
   18a78:	7011      	strb	r1, [r2, #0]
   18a7a:	681b      	ldr	r3, [r3, #0]
   18a7c:	689b      	ldr	r3, [r3, #8]
   18a7e:	681a      	ldr	r2, [r3, #0]
   18a80:	3201      	adds	r2, #1
   18a82:	601a      	str	r2, [r3, #0]
   18a84:	e7d5      	b.n	18a32 <dbg_print(char const*, char const*)+0xe>
   18a86:	b126      	cbz	r6, 18a92 <dbg_print(char const*, char const*)+0x6e>
   18a88:	4630      	mov	r0, r6
   18a8a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
   18a8e:	f005 bf6d 	b.w	1e96c <puts>
   18a92:	bd70      	pop	{r4, r5, r6, pc}
   18a94:	2007c994 	.word	0x2007c994
   18a98:	2007c150 	.word	0x2007c150

00018a9c <scheduler_c_task_private(void*)>:
_Z24scheduler_c_task_privatePv():
   18a9c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
   18aa0:	4b3c      	ldr	r3, [pc, #240]	; (18b94 <scheduler_c_task_private(void*)+0xf8>)
   18aa2:	4604      	mov	r4, r0
   18aa4:	681a      	ldr	r2, [r3, #0]
   18aa6:	6903      	ldr	r3, [r0, #16]
   18aa8:	429a      	cmp	r2, r3
   18aaa:	d137      	bne.n	18b1c <scheduler_c_task_private(void*)+0x80>
   18aac:	483a      	ldr	r0, [pc, #232]	; (18b98 <scheduler_c_task_private(void*)+0xfc>)
   18aae:	2100      	movs	r1, #0
   18ab0:	f7ff ffb8 	bl	18a24 <dbg_print(char const*, char const*)>
   18ab4:	6a60      	ldr	r0, [r4, #36]	; 0x24
   18ab6:	4939      	ldr	r1, [pc, #228]	; (18b9c <scheduler_c_task_private(void*)+0x100>)
   18ab8:	f7ff ffb4 	bl	18a24 <dbg_print(char const*, char const*)>
   18abc:	4838      	ldr	r0, [pc, #224]	; (18ba0 <scheduler_c_task_private(void*)+0x104>)
   18abe:	2100      	movs	r1, #0
   18ac0:	f7ff ffb0 	bl	18a24 <dbg_print(char const*, char const*)>
   18ac4:	4b37      	ldr	r3, [pc, #220]	; (18ba4 <scheduler_c_task_private(void*)+0x108>)
   18ac6:	2600      	movs	r6, #0
   18ac8:	681d      	ldr	r5, [r3, #0]
   18aca:	4637      	mov	r7, r6
   18acc:	b18d      	cbz	r5, 18af2 <scheduler_c_task_private(void*)+0x56>
   18ace:	f8d5 8000 	ldr.w	r8, [r5]
   18ad2:	3601      	adds	r6, #1
   18ad4:	f8d8 3000 	ldr.w	r3, [r8]
   18ad8:	4640      	mov	r0, r8
   18ada:	691b      	ldr	r3, [r3, #16]
   18adc:	686d      	ldr	r5, [r5, #4]
   18ade:	4798      	blx	r3
   18ae0:	2800      	cmp	r0, #0
   18ae2:	d1f3      	bne.n	18acc <scheduler_c_task_private(void*)+0x30>
   18ae4:	f8d8 0024 	ldr.w	r0, [r8, #36]	; 0x24
   18ae8:	492f      	ldr	r1, [pc, #188]	; (18ba8 <scheduler_c_task_private(void*)+0x10c>)
   18aea:	f7ff ff41 	bl	18970 <printline(char const*, char const*)>
   18aee:	2701      	movs	r7, #1
   18af0:	e7ec      	b.n	18acc <scheduler_c_task_private(void*)+0x30>
   18af2:	b90f      	cbnz	r7, 18af8 <scheduler_c_task_private(void*)+0x5c>
   18af4:	463d      	mov	r5, r7
   18af6:	e006      	b.n	18b06 <scheduler_c_task_private(void*)+0x6a>
   18af8:	482c      	ldr	r0, [pc, #176]	; (18bac <scheduler_c_task_private(void*)+0x110>)
   18afa:	4629      	mov	r1, r5
   18afc:	f7ff ff38 	bl	18970 <printline(char const*, char const*)>
   18b00:	f002 fba6 	bl	1b250 <vTaskEndScheduler>
   18b04:	e00a      	b.n	18b1c <scheduler_c_task_private(void*)+0x80>
   18b06:	42b5      	cmp	r5, r6
   18b08:	d008      	beq.n	18b1c <scheduler_c_task_private(void*)+0x80>
   18b0a:	4b29      	ldr	r3, [pc, #164]	; (18bb0 <scheduler_c_task_private(void*)+0x114>)
   18b0c:	2100      	movs	r1, #0
   18b0e:	6818      	ldr	r0, [r3, #0]
   18b10:	460a      	mov	r2, r1
   18b12:	460b      	mov	r3, r1
   18b14:	f002 f878 	bl	1ac08 <xQueueGenericSend>
   18b18:	3501      	adds	r5, #1
   18b1a:	e7f4      	b.n	18b06 <scheduler_c_task_private(void*)+0x6a>
   18b1c:	4b24      	ldr	r3, [pc, #144]	; (18bb0 <scheduler_c_task_private(void*)+0x114>)
   18b1e:	2100      	movs	r1, #0
   18b20:	f04f 32ff 	mov.w	r2, #4294967295
   18b24:	6818      	ldr	r0, [r3, #0]
   18b26:	460b      	mov	r3, r1
   18b28:	f002 f93e 	bl	1ada8 <xQueueGenericReceive>
   18b2c:	f002 fba4 	bl	1b278 <xTaskGetTickCount>
   18b30:	9001      	str	r0, [sp, #4]
   18b32:	f002 fba1 	bl	1b278 <xTaskGetTickCount>
   18b36:	4605      	mov	r5, r0
   18b38:	6860      	ldr	r0, [r4, #4]
   18b3a:	b118      	cbz	r0, 18b44 <scheduler_c_task_private(void*)+0xa8>
   18b3c:	68e1      	ldr	r1, [r4, #12]
   18b3e:	f002 f9e8 	bl	1af12 <xQueueSelectFromSet>
   18b42:	60a0      	str	r0, [r4, #8]
   18b44:	6823      	ldr	r3, [r4, #0]
   18b46:	4620      	mov	r0, r4
   18b48:	695b      	ldr	r3, [r3, #20]
   18b4a:	6aa1      	ldr	r1, [r4, #40]	; 0x28
   18b4c:	4798      	blx	r3
   18b4e:	4606      	mov	r6, r0
   18b50:	b930      	cbnz	r0, 18b60 <scheduler_c_task_private(void*)+0xc4>
   18b52:	6a60      	ldr	r0, [r4, #36]	; 0x24
   18b54:	4917      	ldr	r1, [pc, #92]	; (18bb4 <scheduler_c_task_private(void*)+0x118>)
   18b56:	f7ff ff0b 	bl	18970 <printline(char const*, char const*)>
   18b5a:	4630      	mov	r0, r6
   18b5c:	f002 fd94 	bl	1b688 <vTaskSuspend>
   18b60:	69a3      	ldr	r3, [r4, #24]
   18b62:	3301      	adds	r3, #1
   18b64:	61a3      	str	r3, [r4, #24]
   18b66:	6a23      	ldr	r3, [r4, #32]
   18b68:	b11b      	cbz	r3, 18b72 <scheduler_c_task_private(void*)+0xd6>
   18b6a:	f002 fb85 	bl	1b278 <xTaskGetTickCount>
   18b6e:	42a8      	cmp	r0, r5
   18b70:	d806      	bhi.n	18b80 <scheduler_c_task_private(void*)+0xe4>
   18b72:	69e1      	ldr	r1, [r4, #28]
   18b74:	2900      	cmp	r1, #0
   18b76:	d0df      	beq.n	18b38 <scheduler_c_task_private(void*)+0x9c>
   18b78:	a801      	add	r0, sp, #4
   18b7a:	f002 fc79 	bl	1b470 <vTaskDelayUntil>
   18b7e:	e7db      	b.n	18b38 <scheduler_c_task_private(void*)+0x9c>
   18b80:	f002 fb7a 	bl	1b278 <xTaskGetTickCount>
   18b84:	6a25      	ldr	r5, [r4, #32]
   18b86:	4405      	add	r5, r0
   18b88:	6920      	ldr	r0, [r4, #16]
   18b8a:	f002 fe69 	bl	1b860 <uxTaskGetStackHighWaterMark>
   18b8e:	0080      	lsls	r0, r0, #2
   18b90:	6160      	str	r0, [r4, #20]
   18b92:	e7ee      	b.n	18b72 <scheduler_c_task_private(void*)+0xd6>
   18b94:	2007c9a4 	.word	0x2007c9a4
   18b98:	0002674c 	.word	0x0002674c
   18b9c:	00026750 	.word	0x00026750
   18ba0:	0002677d 	.word	0x0002677d
   18ba4:	2007c9a8 	.word	0x2007c9a8
   18ba8:	000267aa 	.word	0x000267aa
   18bac:	000267c3 	.word	0x000267c3
   18bb0:	2007c9a0 	.word	0x2007c9a0
   18bb4:	000267eb 	.word	0x000267eb

00018bb8 <scheduler_init_all(bool)>:
_Z18scheduler_init_allb():
   18bb8:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
   18bbc:	4b30      	ldr	r3, [pc, #192]	; (18c80 <scheduler_init_all(bool)+0xc8>)
   18bbe:	6819      	ldr	r1, [r3, #0]
   18bc0:	4698      	mov	r8, r3
   18bc2:	b921      	cbnz	r1, 18bce <scheduler_init_all(bool)+0x16>
   18bc4:	482f      	ldr	r0, [pc, #188]	; (18c84 <scheduler_init_all(bool)+0xcc>)
   18bc6:	f7ff fed3 	bl	18970 <printline(char const*, char const*)>
   18bca:	2001      	movs	r0, #1
   18bcc:	e054      	b.n	18c78 <scheduler_init_all(bool)+0xc0>
   18bce:	482e      	ldr	r0, [pc, #184]	; (18c88 <scheduler_init_all(bool)+0xd0>)
   18bd0:	2100      	movs	r1, #0
   18bd2:	f7ff ff27 	bl	18a24 <dbg_print(char const*, char const*)>
   18bd6:	2700      	movs	r7, #0
   18bd8:	f8d8 4000 	ldr.w	r4, [r8]
   18bdc:	463e      	mov	r6, r7
   18bde:	b1dc      	cbz	r4, 18c18 <scheduler_init_all(bool)+0x60>
   18be0:	6825      	ldr	r5, [r4, #0]
   18be2:	6864      	ldr	r4, [r4, #4]
   18be4:	f895 3030 	ldrb.w	r3, [r5, #48]	; 0x30
   18be8:	6aea      	ldr	r2, [r5, #44]	; 0x2c
   18bea:	9300      	str	r3, [sp, #0]
   18bec:	f105 0310 	add.w	r3, r5, #16
   18bf0:	9301      	str	r3, [sp, #4]
   18bf2:	2300      	movs	r3, #0
   18bf4:	9302      	str	r3, [sp, #8]
   18bf6:	9303      	str	r3, [sp, #12]
   18bf8:	4824      	ldr	r0, [pc, #144]	; (18c8c <scheduler_init_all(bool)+0xd4>)
   18bfa:	6a69      	ldr	r1, [r5, #36]	; 0x24
   18bfc:	f3c2 028f 	ubfx	r2, r2, #2, #16
   18c00:	462b      	mov	r3, r5
   18c02:	3701      	adds	r7, #1
   18c04:	f002 fa36 	bl	1b074 <xTaskGenericCreate>
   18c08:	2800      	cmp	r0, #0
   18c0a:	d1e8      	bne.n	18bde <scheduler_init_all(bool)+0x26>
   18c0c:	6a68      	ldr	r0, [r5, #36]	; 0x24
   18c0e:	4920      	ldr	r1, [pc, #128]	; (18c90 <scheduler_init_all(bool)+0xd8>)
   18c10:	f7ff feae 	bl	18970 <printline(char const*, char const*)>
   18c14:	2601      	movs	r6, #1
   18c16:	e7e2      	b.n	18bde <scheduler_init_all(bool)+0x26>
   18c18:	4638      	mov	r0, r7
   18c1a:	4621      	mov	r1, r4
   18c1c:	f001 ffeb 	bl	1abf6 <xQueueCreateCountingSemaphore>
   18c20:	4b1c      	ldr	r3, [pc, #112]	; (18c94 <scheduler_init_all(bool)+0xdc>)
   18c22:	6018      	str	r0, [r3, #0]
   18c24:	b920      	cbnz	r0, 18c30 <scheduler_init_all(bool)+0x78>
   18c26:	481c      	ldr	r0, [pc, #112]	; (18c98 <scheduler_init_all(bool)+0xe0>)
   18c28:	4621      	mov	r1, r4
   18c2a:	f7ff fea1 	bl	18970 <printline(char const*, char const*)>
   18c2e:	2601      	movs	r6, #1
   18c30:	481a      	ldr	r0, [pc, #104]	; (18c9c <scheduler_init_all(bool)+0xe4>)
   18c32:	2100      	movs	r1, #0
   18c34:	f7ff fef6 	bl	18a24 <dbg_print(char const*, char const*)>
   18c38:	f8d8 4000 	ldr.w	r4, [r8]
   18c3c:	b16c      	cbz	r4, 18c5a <scheduler_init_all(bool)+0xa2>
   18c3e:	6825      	ldr	r5, [r4, #0]
   18c40:	6864      	ldr	r4, [r4, #4]
   18c42:	682b      	ldr	r3, [r5, #0]
   18c44:	4628      	mov	r0, r5
   18c46:	689b      	ldr	r3, [r3, #8]
   18c48:	4798      	blx	r3
   18c4a:	2800      	cmp	r0, #0
   18c4c:	d1f6      	bne.n	18c3c <scheduler_init_all(bool)+0x84>
   18c4e:	6a68      	ldr	r0, [r5, #36]	; 0x24
   18c50:	4913      	ldr	r1, [pc, #76]	; (18ca0 <scheduler_init_all(bool)+0xe8>)
   18c52:	f7ff fe8d 	bl	18970 <printline(char const*, char const*)>
   18c56:	2601      	movs	r6, #1
   18c58:	e7f0      	b.n	18c3c <scheduler_init_all(bool)+0x84>
   18c5a:	4912      	ldr	r1, [pc, #72]	; (18ca4 <scheduler_init_all(bool)+0xec>)
   18c5c:	f8d8 3000 	ldr.w	r3, [r8]
   18c60:	680a      	ldr	r2, [r1, #0]
   18c62:	460d      	mov	r5, r1
   18c64:	b133      	cbz	r3, 18c74 <scheduler_init_all(bool)+0xbc>
   18c66:	cb09      	ldmia	r3, {r0, r3}
   18c68:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
   18c6a:	42a1      	cmp	r1, r4
   18c6c:	bf84      	itt	hi
   18c6e:	6902      	ldrhi	r2, [r0, #16]
   18c70:	460c      	movhi	r4, r1
   18c72:	e7f7      	b.n	18c64 <scheduler_init_all(bool)+0xac>
   18c74:	602a      	str	r2, [r5, #0]
   18c76:	4630      	mov	r0, r6
   18c78:	b004      	add	sp, #16
   18c7a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   18c7e:	bf00      	nop
   18c80:	2007c9a8 	.word	0x2007c9a8
   18c84:	0002681b 	.word	0x0002681b
   18c88:	00026849 	.word	0x00026849
   18c8c:	00018a9d 	.word	0x00018a9d
   18c90:	00026860 	.word	0x00026860
   18c94:	2007c9a0 	.word	0x2007c9a0
   18c98:	0002687b 	.word	0x0002687b
   18c9c:	0002689e 	.word	0x0002689e
   18ca0:	000268b9 	.word	0x000268b9
   18ca4:	2007c9a4 	.word	0x2007c9a4

00018ca8 <scheduler_add_task(scheduler_task*)>:
_Z18scheduler_add_taskP14scheduler_task():
   18ca8:	b510      	push	{r4, lr}
   18caa:	4604      	mov	r4, r0
   18cac:	b140      	cbz	r0, 18cc0 <scheduler_add_task(scheduler_task*)+0x18>
   18cae:	2008      	movs	r0, #8
   18cb0:	f7f7 fade 	bl	10270 <operator new(unsigned int)>
   18cb4:	b120      	cbz	r0, 18cc0 <scheduler_add_task(scheduler_task*)+0x18>
   18cb6:	4a03      	ldr	r2, [pc, #12]	; (18cc4 <scheduler_add_task(scheduler_task*)+0x1c>)
   18cb8:	6004      	str	r4, [r0, #0]
   18cba:	6811      	ldr	r1, [r2, #0]
   18cbc:	6010      	str	r0, [r2, #0]
   18cbe:	6041      	str	r1, [r0, #4]
   18cc0:	bd10      	pop	{r4, pc}
   18cc2:	bf00      	nop
   18cc4:	2007c9a8 	.word	0x2007c9a8

00018cc8 <scheduler_start(bool, bool)>:
_Z15scheduler_startbb():
   18cc8:	4b0c      	ldr	r3, [pc, #48]	; (18cfc <scheduler_start(bool, bool)+0x34>)
   18cca:	b510      	push	{r4, lr}
   18ccc:	7018      	strb	r0, [r3, #0]
   18cce:	4608      	mov	r0, r1
   18cd0:	f7ff ff72 	bl	18bb8 <scheduler_init_all(bool)>
   18cd4:	4604      	mov	r4, r0
   18cd6:	b950      	cbnz	r0, 18cee <scheduler_start(bool, bool)+0x26>
   18cd8:	4809      	ldr	r0, [pc, #36]	; (18d00 <scheduler_start(bool, bool)+0x38>)
   18cda:	4621      	mov	r1, r4
   18cdc:	f7ff fea2 	bl	18a24 <dbg_print(char const*, char const*)>
   18ce0:	f002 fe62 	bl	1b9a8 <vTaskResetRunTimeStats>
   18ce4:	f002 fa8a 	bl	1b1fc <vTaskStartScheduler>
   18ce8:	4806      	ldr	r0, [pc, #24]	; (18d04 <scheduler_start(bool, bool)+0x3c>)
   18cea:	4621      	mov	r1, r4
   18cec:	e001      	b.n	18cf2 <scheduler_start(bool, bool)+0x2a>
   18cee:	4806      	ldr	r0, [pc, #24]	; (18d08 <scheduler_start(bool, bool)+0x40>)
   18cf0:	2100      	movs	r1, #0
   18cf2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   18cf6:	f7ff be3b 	b.w	18970 <printline(char const*, char const*)>
   18cfa:	bf00      	nop
   18cfc:	2007c994 	.word	0x2007c994
   18d00:	000268cd 	.word	0x000268cd
   18d04:	000268e8 	.word	0x000268e8
   18d08:	0002690c 	.word	0x0002690c

00018d0c <scheduler_task::scheduler_task(char const*, unsigned long, unsigned char, void*)>:
_ZN14scheduler_taskC2EPKcmhPv():
   18d0c:	b570      	push	{r4, r5, r6, lr}
   18d0e:	4d0b      	ldr	r5, [pc, #44]	; (18d3c <scheduler_task::scheduler_task(char const*, unsigned long, unsigned char, void*)+0x30>)
   18d10:	6241      	str	r1, [r0, #36]	; 0x24
   18d12:	6005      	str	r5, [r0, #0]
   18d14:	9904      	ldr	r1, [sp, #16]
   18d16:	2500      	movs	r5, #0
   18d18:	6045      	str	r5, [r0, #4]
   18d1a:	6085      	str	r5, [r0, #8]
   18d1c:	f44f 767a 	mov.w	r6, #1000	; 0x3e8
   18d20:	6105      	str	r5, [r0, #16]
   18d22:	6145      	str	r5, [r0, #20]
   18d24:	6185      	str	r5, [r0, #24]
   18d26:	61c5      	str	r5, [r0, #28]
   18d28:	f64e 2560 	movw	r5, #60000	; 0xea60
   18d2c:	60c6      	str	r6, [r0, #12]
   18d2e:	6205      	str	r5, [r0, #32]
   18d30:	6281      	str	r1, [r0, #40]	; 0x28
   18d32:	62c2      	str	r2, [r0, #44]	; 0x2c
   18d34:	f880 3030 	strb.w	r3, [r0, #48]	; 0x30
   18d38:	bd70      	pop	{r4, r5, r6, pc}
   18d3a:	bf00      	nop
   18d3c:	000252d8 	.word	0x000252d8

00018d40 <scheduler_task::getSharedObject(unsigned char)>:
_ZN14scheduler_task15getSharedObjectEh():
   18d40:	4b04      	ldr	r3, [pc, #16]	; (18d54 <scheduler_task::getSharedObject(unsigned char)+0x14>)
   18d42:	681a      	ldr	r2, [r3, #0]
   18d44:	4290      	cmp	r0, r2
   18d46:	bf3a      	itte	cc
   18d48:	685b      	ldrcc	r3, [r3, #4]
   18d4a:	f853 0020 	ldrcc.w	r0, [r3, r0, lsl #2]
   18d4e:	2000      	movcs	r0, #0
   18d50:	4770      	bx	lr
   18d52:	bf00      	nop
   18d54:	2007c998 	.word	0x2007c998

00018d58 <str::str(char*, int)>:
_ZN3strC2EPci():
   18d58:	b510      	push	{r4, lr}
   18d5a:	2301      	movs	r3, #1
   18d5c:	2a00      	cmp	r2, #0
   18d5e:	7003      	strb	r3, [r0, #0]
   18d60:	f04f 0300 	mov.w	r3, #0
   18d64:	bfcc      	ite	gt
   18d66:	f102 32ff 	addgt.w	r2, r2, #4294967295
   18d6a:	461a      	movle	r2, r3
   18d6c:	4604      	mov	r4, r0
   18d6e:	6081      	str	r1, [r0, #8]
   18d70:	60c3      	str	r3, [r0, #12]
   18d72:	6103      	str	r3, [r0, #16]
   18d74:	6042      	str	r2, [r0, #4]
   18d76:	4608      	mov	r0, r1
   18d78:	2100      	movs	r1, #0
   18d7a:	f005 f878 	bl	1de6e <memset>
   18d7e:	4620      	mov	r0, r4
   18d80:	bd10      	pop	{r4, pc}

00018d82 <str::~str()>:
_ZN3strD1Ev():
   18d82:	b538      	push	{r3, r4, r5, lr}
   18d84:	4604      	mov	r4, r0
   18d86:	6880      	ldr	r0, [r0, #8]
   18d88:	b118      	cbz	r0, 18d92 <str::~str()+0x10>
   18d8a:	7823      	ldrb	r3, [r4, #0]
   18d8c:	b90b      	cbnz	r3, 18d92 <str::~str()+0x10>
   18d8e:	f005 f825 	bl	1dddc <free>
   18d92:	68e5      	ldr	r5, [r4, #12]
   18d94:	b12d      	cbz	r5, 18da2 <str::~str()+0x20>
   18d96:	4628      	mov	r0, r5
   18d98:	f7ff fff3 	bl	18d82 <str::~str()>
   18d9c:	4628      	mov	r0, r5
   18d9e:	f7f7 fa69 	bl	10274 <operator delete(void*)>
   18da2:	4620      	mov	r0, r4
   18da4:	bd38      	pop	{r3, r4, r5, pc}

00018da6 <str::getLen() const>:
_ZNK3str6getLenEv():
   18da6:	6880      	ldr	r0, [r0, #8]
   18da8:	f006 b88e 	b.w	1eec8 <strlen>

00018dac <str::getCapacity() const>:
_ZNK3str11getCapacityEv():
   18dac:	6840      	ldr	r0, [r0, #4]
   18dae:	4770      	bx	lr

00018db0 <str::clear()>:
_ZN3str5clearEv():
   18db0:	6883      	ldr	r3, [r0, #8]
   18db2:	2200      	movs	r2, #0
   18db4:	701a      	strb	r2, [r3, #0]
   18db6:	4770      	bx	lr

00018db8 <str::scanf(char const*, ...)>:
_ZN3str5scanfEPKcz():
   18db8:	b40e      	push	{r1, r2, r3}
   18dba:	b503      	push	{r0, r1, lr}
   18dbc:	aa03      	add	r2, sp, #12
   18dbe:	f852 1b04 	ldr.w	r1, [r2], #4
   18dc2:	6880      	ldr	r0, [r0, #8]
   18dc4:	9201      	str	r2, [sp, #4]
   18dc6:	f008 fe4f 	bl	21a68 <vsiscanf>
   18dca:	b002      	add	sp, #8
   18dcc:	f85d eb04 	ldr.w	lr, [sp], #4
   18dd0:	b003      	add	sp, #12
   18dd2:	4770      	bx	lr

00018dd4 <str::tokenize(char const*, int, ...)>:
_ZN3str8tokenizeEPKciz():
   18dd4:	b40c      	push	{r2, r3}
   18dd6:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   18dd8:	2400      	movs	r4, #0
   18dda:	ab08      	add	r3, sp, #32
   18ddc:	ad02      	add	r5, sp, #8
   18dde:	f853 6b04 	ldr.w	r6, [r3], #4
   18de2:	f845 4d04 	str.w	r4, [r5, #-4]!
   18de6:	6880      	ldr	r0, [r0, #8]
   18de8:	462a      	mov	r2, r5
   18dea:	460f      	mov	r7, r1
   18dec:	9300      	str	r3, [sp, #0]
   18dee:	f006 ff66 	bl	1fcbe <strtok_r>
   18df2:	b178      	cbz	r0, 18e14 <str::tokenize(char const*, int, ...)+0x40>
   18df4:	1b33      	subs	r3, r6, r4
   18df6:	2b00      	cmp	r3, #0
   18df8:	dd0c      	ble.n	18e14 <str::tokenize(char const*, int, ...)+0x40>
   18dfa:	9b00      	ldr	r3, [sp, #0]
   18dfc:	1d1a      	adds	r2, r3, #4
   18dfe:	681b      	ldr	r3, [r3, #0]
   18e00:	9200      	str	r2, [sp, #0]
   18e02:	b103      	cbz	r3, 18e06 <str::tokenize(char const*, int, ...)+0x32>
   18e04:	6018      	str	r0, [r3, #0]
   18e06:	2000      	movs	r0, #0
   18e08:	4639      	mov	r1, r7
   18e0a:	462a      	mov	r2, r5
   18e0c:	f006 ff57 	bl	1fcbe <strtok_r>
   18e10:	3401      	adds	r4, #1
   18e12:	e7ee      	b.n	18df2 <str::tokenize(char const*, int, ...)+0x1e>
   18e14:	4620      	mov	r0, r4
   18e16:	b003      	add	sp, #12
   18e18:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
   18e1c:	b002      	add	sp, #8
   18e1e:	4770      	bx	lr

00018e20 <str::compareTo(char const*) const>:
_ZNK3str9compareToEPKc():
   18e20:	b508      	push	{r3, lr}
   18e22:	4603      	mov	r3, r0
   18e24:	4608      	mov	r0, r1
   18e26:	6899      	ldr	r1, [r3, #8]
   18e28:	f006 f83c 	bl	1eea4 <strcmp>
   18e2c:	f1d0 0001 	rsbs	r0, r0, #1
   18e30:	bf38      	it	cc
   18e32:	2000      	movcc	r0, #0
   18e34:	bd08      	pop	{r3, pc}

00018e36 <str::compareToIgnoreCase(char const*) const>:
_ZNK3str19compareToIgnoreCaseEPKc():
   18e36:	b508      	push	{r3, lr}
   18e38:	6880      	ldr	r0, [r0, #8]
   18e3a:	f005 fffb 	bl	1ee34 <strcasecmp>
   18e3e:	f1d0 0001 	rsbs	r0, r0, #1
   18e42:	bf38      	it	cc
   18e44:	2000      	movcc	r0, #0
   18e46:	bd08      	pop	{r3, pc}

00018e48 <str::firstIndexOfIgnoreCase(char const*) const>:
_ZNK3str22firstIndexOfIgnoreCaseEPKc():
   18e48:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18e4c:	780f      	ldrb	r7, [r1, #0]
   18e4e:	4688      	mov	r8, r1
   18e50:	2f00      	cmp	r7, #0
   18e52:	d03b      	beq.n	18ecc <str::firstIndexOfIgnoreCase(char const*) const+0x84>
   18e54:	6884      	ldr	r4, [r0, #8]
   18e56:	f04f 35ff 	mov.w	r5, #4294967295
   18e5a:	f994 3000 	ldrsb.w	r3, [r4]
   18e5e:	2b00      	cmp	r3, #0
   18e60:	d036      	beq.n	18ed0 <str::firstIndexOfIgnoreCase(char const*) const+0x88>
   18e62:	f994 3000 	ldrsb.w	r3, [r4]
   18e66:	2b00      	cmp	r3, #0
   18e68:	d032      	beq.n	18ed0 <str::firstIndexOfIgnoreCase(char const*) const+0x88>
   18e6a:	b27d      	sxtb	r5, r7
   18e6c:	4628      	mov	r0, r5
   18e6e:	f007 facb 	bl	20408 <tolower>
   18e72:	4601      	mov	r1, r0
   18e74:	4620      	mov	r0, r4
   18e76:	f006 f808 	bl	1ee8a <strchr>
   18e7a:	b938      	cbnz	r0, 18e8c <str::firstIndexOfIgnoreCase(char const*) const+0x44>
   18e7c:	4628      	mov	r0, r5
   18e7e:	f007 facf 	bl	20420 <toupper>
   18e82:	4601      	mov	r1, r0
   18e84:	4620      	mov	r0, r4
   18e86:	f006 f800 	bl	1ee8a <strchr>
   18e8a:	b1f8      	cbz	r0, 18ecc <str::firstIndexOfIgnoreCase(char const*) const+0x84>
   18e8c:	1b05      	subs	r5, r0, r4
   18e8e:	4683      	mov	fp, r0
   18e90:	1c44      	adds	r4, r0, #1
   18e92:	f108 0601 	add.w	r6, r8, #1
   18e96:	f81b 0f01 	ldrb.w	r0, [fp, #1]!
   18e9a:	46b1      	mov	r9, r6
   18e9c:	b198      	cbz	r0, 18ec6 <str::firstIndexOfIgnoreCase(char const*) const+0x7e>
   18e9e:	f896 a000 	ldrb.w	sl, [r6]
   18ea2:	3601      	adds	r6, #1
   18ea4:	f1ba 0f00 	cmp.w	sl, #0
   18ea8:	d00d      	beq.n	18ec6 <str::firstIndexOfIgnoreCase(char const*) const+0x7e>
   18eaa:	b240      	sxtb	r0, r0
   18eac:	f007 faac 	bl	20408 <tolower>
   18eb0:	4603      	mov	r3, r0
   18eb2:	fa4f f08a 	sxtb.w	r0, sl
   18eb6:	9301      	str	r3, [sp, #4]
   18eb8:	f007 faa6 	bl	20408 <tolower>
   18ebc:	9b01      	ldr	r3, [sp, #4]
   18ebe:	4283      	cmp	r3, r0
   18ec0:	d0e9      	beq.n	18e96 <str::firstIndexOfIgnoreCase(char const*) const+0x4e>
   18ec2:	f04f 35ff 	mov.w	r5, #4294967295
   18ec6:	f999 3000 	ldrsb.w	r3, [r9]
   18eca:	e7c8      	b.n	18e5e <str::firstIndexOfIgnoreCase(char const*) const+0x16>
   18ecc:	f04f 35ff 	mov.w	r5, #4294967295
   18ed0:	4628      	mov	r0, r5
   18ed2:	b003      	add	sp, #12
   18ed4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00018ed8 <str::containsIgnoreCase(char const*) const>:
_ZNK3str18containsIgnoreCaseEPKc():
   18ed8:	b508      	push	{r3, lr}
   18eda:	f7ff ffb5 	bl	18e48 <str::firstIndexOfIgnoreCase(char const*) const>
   18ede:	3001      	adds	r0, #1
   18ee0:	bf18      	it	ne
   18ee2:	2001      	movne	r0, #1
   18ee4:	bd08      	pop	{r3, pc}

00018ee6 <str::firstIndexOf(char const*) const>:
_ZNK3str12firstIndexOfEPKc():
   18ee6:	b510      	push	{r4, lr}
   18ee8:	6884      	ldr	r4, [r0, #8]
   18eea:	4620      	mov	r0, r4
   18eec:	f006 f851 	bl	1ef92 <strstr>
   18ef0:	b108      	cbz	r0, 18ef6 <str::firstIndexOf(char const*) const+0x10>
   18ef2:	1b00      	subs	r0, r0, r4
   18ef4:	bd10      	pop	{r4, pc}
   18ef6:	f04f 30ff 	mov.w	r0, #4294967295
   18efa:	bd10      	pop	{r4, pc}

00018efc <str::beginsWith(char const*) const>:
_ZNK3str10beginsWithEPKc():
   18efc:	b570      	push	{r4, r5, r6, lr}
   18efe:	4604      	mov	r4, r0
   18f00:	4608      	mov	r0, r1
   18f02:	460e      	mov	r6, r1
   18f04:	f005 ffe0 	bl	1eec8 <strlen>
   18f08:	4605      	mov	r5, r0
   18f0a:	4620      	mov	r0, r4
   18f0c:	f7ff ff4b 	bl	18da6 <str::getLen() const>
   18f10:	42a8      	cmp	r0, r5
   18f12:	db09      	blt.n	18f28 <str::beginsWith(char const*) const+0x2c>
   18f14:	68a0      	ldr	r0, [r4, #8]
   18f16:	4631      	mov	r1, r6
   18f18:	462a      	mov	r2, r5
   18f1a:	f005 ffff 	bl	1ef1c <strncmp>
   18f1e:	f1d0 0001 	rsbs	r0, r0, #1
   18f22:	bf38      	it	cc
   18f24:	2000      	movcc	r0, #0
   18f26:	bd70      	pop	{r4, r5, r6, pc}
   18f28:	2000      	movs	r0, #0
   18f2a:	bd70      	pop	{r4, r5, r6, pc}

00018f2c <str::beginsWithIgnoreCase(char const*) const>:
_ZNK3str20beginsWithIgnoreCaseEPKc():
   18f2c:	b570      	push	{r4, r5, r6, lr}
   18f2e:	4604      	mov	r4, r0
   18f30:	4608      	mov	r0, r1
   18f32:	460e      	mov	r6, r1
   18f34:	f005 ffc8 	bl	1eec8 <strlen>
   18f38:	4605      	mov	r5, r0
   18f3a:	4620      	mov	r0, r4
   18f3c:	f7ff ff33 	bl	18da6 <str::getLen() const>
   18f40:	42a8      	cmp	r0, r5
   18f42:	db09      	blt.n	18f58 <str::beginsWithIgnoreCase(char const*) const+0x2c>
   18f44:	4630      	mov	r0, r6
   18f46:	68a1      	ldr	r1, [r4, #8]
   18f48:	462a      	mov	r2, r5
   18f4a:	f005 ffc5 	bl	1eed8 <strncasecmp>
   18f4e:	f1d0 0001 	rsbs	r0, r0, #1
   18f52:	bf38      	it	cc
   18f54:	2000      	movcc	r0, #0
   18f56:	bd70      	pop	{r4, r5, r6, pc}
   18f58:	2000      	movs	r0, #0
   18f5a:	bd70      	pop	{r4, r5, r6, pc}

00018f5c <str::beginsWithWholeWordIgnoreCase(char const*, char) const>:
_ZNK3str29beginsWithWholeWordIgnoreCaseEPKcc():
   18f5c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   18f5e:	4604      	mov	r4, r0
   18f60:	4608      	mov	r0, r1
   18f62:	460d      	mov	r5, r1
   18f64:	4617      	mov	r7, r2
   18f66:	f005 ffaf 	bl	1eec8 <strlen>
   18f6a:	4606      	mov	r6, r0
   18f6c:	4620      	mov	r0, r4
   18f6e:	f7ff ff1a 	bl	18da6 <str::getLen() const>
   18f72:	4286      	cmp	r6, r0
   18f74:	dc0e      	bgt.n	18f94 <str::beginsWithWholeWordIgnoreCase(char const*, char) const+0x38>
   18f76:	68a3      	ldr	r3, [r4, #8]
   18f78:	4620      	mov	r0, r4
   18f7a:	4629      	mov	r1, r5
   18f7c:	5d9e      	ldrb	r6, [r3, r6]
   18f7e:	f7ff ffd5 	bl	18f2c <str::beginsWithIgnoreCase(char const*) const>
   18f82:	b140      	cbz	r0, 18f96 <str::beginsWithWholeWordIgnoreCase(char const*, char) const+0x3a>
   18f84:	b273      	sxtb	r3, r6
   18f86:	429f      	cmp	r7, r3
   18f88:	d005      	beq.n	18f96 <str::beginsWithWholeWordIgnoreCase(char const*, char) const+0x3a>
   18f8a:	f1d3 0001 	rsbs	r0, r3, #1
   18f8e:	bf38      	it	cc
   18f90:	2000      	movcc	r0, #0
   18f92:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   18f94:	2000      	movs	r0, #0
   18f96:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00018f98 <str::eraseFirst(int)>:
_ZN3str10eraseFirstEi():
   18f98:	b538      	push	{r3, r4, r5, lr}
   18f9a:	460c      	mov	r4, r1
   18f9c:	4605      	mov	r5, r0
   18f9e:	f7ff ff02 	bl	18da6 <str::getLen() const>
   18fa2:	2c00      	cmp	r4, #0
   18fa4:	4602      	mov	r2, r0
   18fa6:	dd09      	ble.n	18fbc <str::eraseFirst(int)+0x24>
   18fa8:	4284      	cmp	r4, r0
   18faa:	dc07      	bgt.n	18fbc <str::eraseFirst(int)+0x24>
   18fac:	68a8      	ldr	r0, [r5, #8]
   18fae:	1b12      	subs	r2, r2, r4
   18fb0:	1901      	adds	r1, r0, r4
   18fb2:	3201      	adds	r2, #1
   18fb4:	f004 ff40 	bl	1de38 <memmove>
   18fb8:	2001      	movs	r0, #1
   18fba:	bd38      	pop	{r3, r4, r5, pc}
   18fbc:	2000      	movs	r0, #0
   18fbe:	bd38      	pop	{r3, r4, r5, pc}

00018fc0 <str::eraseLast(int)>:
_ZN3str9eraseLastEi():
   18fc0:	b538      	push	{r3, r4, r5, lr}
   18fc2:	460c      	mov	r4, r1
   18fc4:	4605      	mov	r5, r0
   18fc6:	f7ff feee 	bl	18da6 <str::getLen() const>
   18fca:	4284      	cmp	r4, r0
   18fcc:	f04f 0300 	mov.w	r3, #0
   18fd0:	dc04      	bgt.n	18fdc <str::eraseLast(int)+0x1c>
   18fd2:	68aa      	ldr	r2, [r5, #8]
   18fd4:	1b04      	subs	r4, r0, r4
   18fd6:	5513      	strb	r3, [r2, r4]
   18fd8:	2001      	movs	r0, #1
   18fda:	bd38      	pop	{r3, r4, r5, pc}
   18fdc:	4618      	mov	r0, r3
   18fde:	bd38      	pop	{r3, r4, r5, pc}

00018fe0 <str::eraseAfter(int, int)>:
_ZN3str10eraseAfterEii():
   18fe0:	b570      	push	{r4, r5, r6, lr}
   18fe2:	460c      	mov	r4, r1
   18fe4:	4606      	mov	r6, r0
   18fe6:	4615      	mov	r5, r2
   18fe8:	f7ff fedd 	bl	18da6 <str::getLen() const>
   18fec:	2c00      	cmp	r4, #0
   18fee:	db11      	blt.n	19014 <str::eraseAfter(int, int)+0x34>
   18ff0:	4284      	cmp	r4, r0
   18ff2:	da0f      	bge.n	19014 <str::eraseAfter(int, int)+0x34>
   18ff4:	2d00      	cmp	r5, #0
   18ff6:	dd0d      	ble.n	19014 <str::eraseAfter(int, int)+0x34>
   18ff8:	1b02      	subs	r2, r0, r4
   18ffa:	68b3      	ldr	r3, [r6, #8]
   18ffc:	42aa      	cmp	r2, r5
   18ffe:	bfb8      	it	lt
   19000:	4615      	movlt	r5, r2
   19002:	1929      	adds	r1, r5, r4
   19004:	1b52      	subs	r2, r2, r5
   19006:	1918      	adds	r0, r3, r4
   19008:	4419      	add	r1, r3
   1900a:	3201      	adds	r2, #1
   1900c:	f004 ff14 	bl	1de38 <memmove>
   19010:	2001      	movs	r0, #1
   19012:	bd70      	pop	{r4, r5, r6, pc}
   19014:	2000      	movs	r0, #0
   19016:	bd70      	pop	{r4, r5, r6, pc}

00019018 <str::erase(char const*)>:
_ZN3str5eraseEPKc():
   19018:	b570      	push	{r4, r5, r6, lr}
   1901a:	4605      	mov	r5, r0
   1901c:	460e      	mov	r6, r1
   1901e:	f7ff ff62 	bl	18ee6 <str::firstIndexOf(char const*) const>
   19022:	1c43      	adds	r3, r0, #1
   19024:	4604      	mov	r4, r0
   19026:	d009      	beq.n	1903c <str::erase(char const*)+0x24>
   19028:	4630      	mov	r0, r6
   1902a:	f005 ff4d 	bl	1eec8 <strlen>
   1902e:	4621      	mov	r1, r4
   19030:	4602      	mov	r2, r0
   19032:	4628      	mov	r0, r5
   19034:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
   19038:	f7ff bfd2 	b.w	18fe0 <str::eraseAfter(int, int)>
   1903c:	2000      	movs	r0, #0
   1903e:	bd70      	pop	{r4, r5, r6, pc}

00019040 <str::eraseFirstWords(int, char)>:
_ZN3str15eraseFirstWordsEic():
   19040:	b570      	push	{r4, r5, r6, lr}
   19042:	2400      	movs	r4, #0
   19044:	6886      	ldr	r6, [r0, #8]
   19046:	4623      	mov	r3, r4
   19048:	5cf5      	ldrb	r5, [r6, r3]
   1904a:	b155      	cbz	r5, 19062 <str::eraseFirstWords(int, char)+0x22>
   1904c:	428c      	cmp	r4, r1
   1904e:	d005      	beq.n	1905c <str::eraseFirstWords(int, char)+0x1c>
   19050:	b26d      	sxtb	r5, r5
   19052:	4295      	cmp	r5, r2
   19054:	bf08      	it	eq
   19056:	3401      	addeq	r4, #1
   19058:	3301      	adds	r3, #1
   1905a:	e7f5      	b.n	19048 <str::eraseFirstWords(int, char)+0x8>
   1905c:	4619      	mov	r1, r3
   1905e:	f7ff ff9b 	bl	18f98 <str::eraseFirst(int)>
   19062:	1c20      	adds	r0, r4, #0
   19064:	bf18      	it	ne
   19066:	2001      	movne	r0, #1
   19068:	bd70      	pop	{r4, r5, r6, pc}

0001906a <str::trimStart(char const*)>:
_ZN3str9trimStartEPKc():
   1906a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1906c:	4606      	mov	r6, r0
   1906e:	460d      	mov	r5, r1
   19070:	f7ff fe99 	bl	18da6 <str::getLen() const>
   19074:	2400      	movs	r4, #0
   19076:	4607      	mov	r7, r0
   19078:	42bc      	cmp	r4, r7
   1907a:	da0e      	bge.n	1909a <str::trimStart(char const*)+0x30>
   1907c:	4628      	mov	r0, r5
   1907e:	f005 ff23 	bl	1eec8 <strlen>
   19082:	2300      	movs	r3, #0
   19084:	4283      	cmp	r3, r0
   19086:	da08      	bge.n	1909a <str::trimStart(char const*)+0x30>
   19088:	68b2      	ldr	r2, [r6, #8]
   1908a:	56e9      	ldrsb	r1, [r5, r3]
   1908c:	5712      	ldrsb	r2, [r2, r4]
   1908e:	4291      	cmp	r1, r2
   19090:	d101      	bne.n	19096 <str::trimStart(char const*)+0x2c>
   19092:	3401      	adds	r4, #1
   19094:	e7f0      	b.n	19078 <str::trimStart(char const*)+0xe>
   19096:	3301      	adds	r3, #1
   19098:	e7f4      	b.n	19084 <str::trimStart(char const*)+0x1a>
   1909a:	b904      	cbnz	r4, 1909e <str::trimStart(char const*)+0x34>
   1909c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1909e:	4630      	mov	r0, r6
   190a0:	4621      	mov	r1, r4
   190a2:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
   190a6:	f7ff bf77 	b.w	18f98 <str::eraseFirst(int)>

000190aa <str::trimEnd(char const*)>:
_ZN3str7trimEndEPKc():
   190aa:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   190ac:	4604      	mov	r4, r0
   190ae:	4608      	mov	r0, r1
   190b0:	460d      	mov	r5, r1
   190b2:	f005 ff09 	bl	1eec8 <strlen>
   190b6:	4606      	mov	r6, r0
   190b8:	4620      	mov	r0, r4
   190ba:	f7ff fe74 	bl	18da6 <str::getLen() const>
   190be:	1e43      	subs	r3, r0, #1
   190c0:	2b00      	cmp	r3, #0
   190c2:	db0f      	blt.n	190e4 <str::trimEnd(char const*)+0x3a>
   190c4:	2200      	movs	r2, #0
   190c6:	42b2      	cmp	r2, r6
   190c8:	da0b      	bge.n	190e2 <str::trimEnd(char const*)+0x38>
   190ca:	68a1      	ldr	r1, [r4, #8]
   190cc:	56af      	ldrsb	r7, [r5, r2]
   190ce:	18c8      	adds	r0, r1, r3
   190d0:	56c9      	ldrsb	r1, [r1, r3]
   190d2:	428f      	cmp	r7, r1
   190d4:	d103      	bne.n	190de <str::trimEnd(char const*)+0x34>
   190d6:	2200      	movs	r2, #0
   190d8:	7002      	strb	r2, [r0, #0]
   190da:	3b01      	subs	r3, #1
   190dc:	e7f0      	b.n	190c0 <str::trimEnd(char const*)+0x16>
   190de:	3201      	adds	r2, #1
   190e0:	e7f1      	b.n	190c6 <str::trimEnd(char const*)+0x1c>
   190e2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   190e4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

000190e6 <str::operator==(char const*) const>:
_ZNK3streqEPKc():
   190e6:	f7ff be9b 	b.w	18e20 <str::compareTo(char const*) const>

000190ea <str::operator()() const>:
_ZNK3strclEv():
   190ea:	6880      	ldr	r0, [r0, #8]
   190ec:	4770      	bx	lr

000190ee <str::operator int() const>:
_ZNK3strcviEv():
   190ee:	6880      	ldr	r0, [r0, #8]
   190f0:	f004 bd2d 	b.w	1db4e <atoi>

000190f4 <str::operator[](int)>:
_ZN3strixEi():
   190f4:	b538      	push	{r3, r4, r5, lr}
   190f6:	460c      	mov	r4, r1
   190f8:	4605      	mov	r5, r0
   190fa:	f7ff fe54 	bl	18da6 <str::getLen() const>
   190fe:	4284      	cmp	r4, r0
   19100:	68a8      	ldr	r0, [r5, #8]
   19102:	bfb8      	it	lt
   19104:	1900      	addlt	r0, r0, r4
   19106:	bd38      	pop	{r3, r4, r5, pc}

00019108 <str::reAllocateMem(int)>:
_ZN3str13reAllocateMemEi():
   19108:	7803      	ldrb	r3, [r0, #0]
   1910a:	b570      	push	{r4, r5, r6, lr}
   1910c:	4604      	mov	r4, r0
   1910e:	b9fb      	cbnz	r3, 19150 <str::reAllocateMem(int)+0x48>
   19110:	b109      	cbz	r1, 19116 <str::reAllocateMem(int)+0xe>
   19112:	3101      	adds	r1, #1
   19114:	e000      	b.n	19118 <str::reAllocateMem(int)+0x10>
   19116:	2104      	movs	r1, #4
   19118:	2510      	movs	r5, #16
   1911a:	fb91 f1f5 	sdiv	r1, r1, r5
   1911e:	1c4d      	adds	r5, r1, #1
   19120:	68a6      	ldr	r6, [r4, #8]
   19122:	012d      	lsls	r5, r5, #4
   19124:	6065      	str	r5, [r4, #4]
   19126:	b94e      	cbnz	r6, 1913c <str::reAllocateMem(int)+0x34>
   19128:	4628      	mov	r0, r5
   1912a:	f004 fe4f 	bl	1ddcc <malloc>
   1912e:	60a0      	str	r0, [r4, #8]
   19130:	b148      	cbz	r0, 19146 <str::reAllocateMem(int)+0x3e>
   19132:	4631      	mov	r1, r6
   19134:	462a      	mov	r2, r5
   19136:	f004 fe9a 	bl	1de6e <memset>
   1913a:	e004      	b.n	19146 <str::reAllocateMem(int)+0x3e>
   1913c:	4630      	mov	r0, r6
   1913e:	1c69      	adds	r1, r5, #1
   19140:	f005 fc80 	bl	1ea44 <realloc>
   19144:	60a0      	str	r0, [r4, #8]
   19146:	68a0      	ldr	r0, [r4, #8]
   19148:	3000      	adds	r0, #0
   1914a:	bf18      	it	ne
   1914c:	2001      	movne	r0, #1
   1914e:	bd70      	pop	{r4, r5, r6, pc}
   19150:	2000      	movs	r0, #0
   19152:	bd70      	pop	{r4, r5, r6, pc}

00019154 <str::init(int)>:
_ZN3str4initEi():
   19154:	2200      	movs	r2, #0
   19156:	7002      	strb	r2, [r0, #0]
   19158:	6042      	str	r2, [r0, #4]
   1915a:	6082      	str	r2, [r0, #8]
   1915c:	60c2      	str	r2, [r0, #12]
   1915e:	6102      	str	r2, [r0, #16]
   19160:	f7ff bfd2 	b.w	19108 <str::reAllocateMem(int)>

00019164 <str::str(int)>:
_ZN3strC1Ei():
   19164:	b510      	push	{r4, lr}
   19166:	4604      	mov	r4, r0
   19168:	f7ff fff4 	bl	19154 <str::init(int)>
   1916c:	4620      	mov	r0, r4
   1916e:	bd10      	pop	{r4, pc}

00019170 <str::reserve(int)>:
_ZN3str7reserveEi():
   19170:	6843      	ldr	r3, [r0, #4]
   19172:	428b      	cmp	r3, r1
   19174:	da01      	bge.n	1917a <str::reserve(int)+0xa>
   19176:	f7ff bfc7 	b.w	19108 <str::reAllocateMem(int)>
   1917a:	2001      	movs	r0, #1
   1917c:	4770      	bx	lr

0001917e <str::printf(char const*, ...)>:
_ZN3str6printfEPKcz():
   1917e:	b40e      	push	{r1, r2, r3}
   19180:	b5f3      	push	{r0, r1, r4, r5, r6, r7, lr}
   19182:	ab07      	add	r3, sp, #28
   19184:	f853 6b04 	ldr.w	r6, [r3], #4
   19188:	4605      	mov	r5, r0
   1918a:	9300      	str	r3, [sp, #0]
   1918c:	2400      	movs	r4, #0
   1918e:	68a8      	ldr	r0, [r5, #8]
   19190:	b180      	cbz	r0, 191b4 <str::printf(char const*, ...)+0x36>
   19192:	686f      	ldr	r7, [r5, #4]
   19194:	9b00      	ldr	r3, [sp, #0]
   19196:	3701      	adds	r7, #1
   19198:	4639      	mov	r1, r7
   1919a:	4632      	mov	r2, r6
   1919c:	9301      	str	r3, [sp, #4]
   1919e:	f008 fc2f 	bl	21a00 <vsniprintf>
   191a2:	42b8      	cmp	r0, r7
   191a4:	4604      	mov	r4, r0
   191a6:	db05      	blt.n	191b4 <str::printf(char const*, ...)+0x36>
   191a8:	4628      	mov	r0, r5
   191aa:	1c61      	adds	r1, r4, #1
   191ac:	f7ff ffe0 	bl	19170 <str::reserve(int)>
   191b0:	2800      	cmp	r0, #0
   191b2:	d1ec      	bne.n	1918e <str::printf(char const*, ...)+0x10>
   191b4:	4620      	mov	r0, r4
   191b6:	b002      	add	sp, #8
   191b8:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
   191bc:	b003      	add	sp, #12
   191be:	4770      	bx	lr

000191c0 <str::ensureMemoryToInsertNChars(int)>:
_ZN3str26ensureMemoryToInsertNCharsEi():
   191c0:	b538      	push	{r3, r4, r5, lr}
   191c2:	4604      	mov	r4, r0
   191c4:	460d      	mov	r5, r1
   191c6:	f7ff fdee 	bl	18da6 <str::getLen() const>
   191ca:	6863      	ldr	r3, [r4, #4]
   191cc:	1829      	adds	r1, r5, r0
   191ce:	428b      	cmp	r3, r1
   191d0:	da05      	bge.n	191de <str::ensureMemoryToInsertNChars(int)+0x1e>
   191d2:	4620      	mov	r0, r4
   191d4:	3120      	adds	r1, #32
   191d6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   191da:	f7ff bf95 	b.w	19108 <str::reAllocateMem(int)>
   191de:	2001      	movs	r0, #1
   191e0:	bd38      	pop	{r3, r4, r5, pc}

000191e2 <str::insertAtEnd(char const*)>:
_ZN3str11insertAtEndEPKc():
   191e2:	b538      	push	{r3, r4, r5, lr}
   191e4:	4604      	mov	r4, r0
   191e6:	4608      	mov	r0, r1
   191e8:	460d      	mov	r5, r1
   191ea:	f005 fe6d 	bl	1eec8 <strlen>
   191ee:	4601      	mov	r1, r0
   191f0:	4620      	mov	r0, r4
   191f2:	f7ff ffe5 	bl	191c0 <str::ensureMemoryToInsertNChars(int)>
   191f6:	b120      	cbz	r0, 19202 <str::insertAtEnd(char const*)+0x20>
   191f8:	68a0      	ldr	r0, [r4, #8]
   191fa:	4629      	mov	r1, r5
   191fc:	f005 fe38 	bl	1ee70 <strcat>
   19200:	2001      	movs	r0, #1
   19202:	bd38      	pop	{r3, r4, r5, pc}

00019204 <str::operator+=(char)>:
_ZN3strpLEc():
   19204:	b507      	push	{r0, r1, r2, lr}
   19206:	2300      	movs	r3, #0
   19208:	f8ad 3004 	strh.w	r3, [sp, #4]
   1920c:	ab02      	add	r3, sp, #8
   1920e:	f803 1d04 	strb.w	r1, [r3, #-4]!
   19212:	4619      	mov	r1, r3
   19214:	f7ff ffe5 	bl	191e2 <str::insertAtEnd(char const*)>
   19218:	b003      	add	sp, #12
   1921a:	f85d fb04 	ldr.w	pc, [sp], #4

0001921e <str::copyFrom(char const*)>:
_ZN3str8copyFromEPKc():
   1921e:	b570      	push	{r4, r5, r6, lr}
   19220:	4604      	mov	r4, r0
   19222:	4608      	mov	r0, r1
   19224:	460d      	mov	r5, r1
   19226:	f005 fe4f 	bl	1eec8 <strlen>
   1922a:	6863      	ldr	r3, [r4, #4]
   1922c:	4601      	mov	r1, r0
   1922e:	4298      	cmp	r0, r3
   19230:	dd0d      	ble.n	1924e <str::copyFrom(char const*)+0x30>
   19232:	4620      	mov	r0, r4
   19234:	f7ff ff68 	bl	19108 <str::reAllocateMem(int)>
   19238:	4606      	mov	r6, r0
   1923a:	b940      	cbnz	r0, 1924e <str::copyFrom(char const*)+0x30>
   1923c:	6862      	ldr	r2, [r4, #4]
   1923e:	68a0      	ldr	r0, [r4, #8]
   19240:	4629      	mov	r1, r5
   19242:	f005 fe81 	bl	1ef48 <strncpy>
   19246:	68a2      	ldr	r2, [r4, #8]
   19248:	6863      	ldr	r3, [r4, #4]
   1924a:	54d6      	strb	r6, [r2, r3]
   1924c:	bd70      	pop	{r4, r5, r6, pc}
   1924e:	68a0      	ldr	r0, [r4, #8]
   19250:	4629      	mov	r1, r5
   19252:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
   19256:	f005 be2f 	b.w	1eeb8 <strcpy>

0001925a <str::operator=(char const*)>:
_ZN3straSEPKc():
   1925a:	f7ff bfe0 	b.w	1921e <str::copyFrom(char const*)>

0001925e <delay_us>:
delay_us():
   1925e:	b570      	push	{r4, r5, r6, lr}
   19260:	4606      	mov	r6, r0
   19262:	f002 fea1 	bl	1bfa8 <sys_get_uptime_us>
   19266:	1984      	adds	r4, r0, r6
   19268:	f141 0500 	adc.w	r5, r1, #0
   1926c:	f002 fe9c 	bl	1bfa8 <sys_get_uptime_us>
   19270:	42a9      	cmp	r1, r5
   19272:	bf08      	it	eq
   19274:	42a0      	cmpeq	r0, r4
   19276:	d3f9      	bcc.n	1926c <delay_us+0xe>
   19278:	bd70      	pop	{r4, r5, r6, pc}

0001927a <is_freertos_running>:
is_freertos_running():
   1927a:	b508      	push	{r3, lr}
   1927c:	f002 fb06 	bl	1b88c <xTaskGetSchedulerState>
   19280:	1e83      	subs	r3, r0, #2
   19282:	4258      	negs	r0, r3
   19284:	4158      	adcs	r0, r3
   19286:	bd08      	pop	{r3, pc}

00019288 <delay_ms>:
delay_ms():
   19288:	b510      	push	{r4, lr}
   1928a:	4604      	mov	r4, r0
   1928c:	f7ff fff5 	bl	1927a <is_freertos_running>
   19290:	b120      	cbz	r0, 1929c <delay_ms+0x14>
   19292:	4620      	mov	r0, r4
   19294:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   19298:	f002 b926 	b.w	1b4e8 <vTaskDelay>
   1929c:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
   192a0:	4360      	muls	r0, r4
   192a2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   192a6:	f7ff bfda 	b.w	1925e <delay_us>
	...

000192ac <adc0_start_conversion>:
adc0_start_conversion():
   192ac:	2101      	movs	r1, #1
   192ae:	fa01 f000 	lsl.w	r0, r1, r0
   192b2:	4b06      	ldr	r3, [pc, #24]	; (192cc <adc0_start_conversion+0x20>)
   192b4:	681a      	ldr	r2, [r3, #0]
   192b6:	f022 62e0 	bic.w	r2, r2, #117440512	; 0x7000000
   192ba:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
   192be:	601a      	str	r2, [r3, #0]
   192c0:	681a      	ldr	r2, [r3, #0]
   192c2:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
   192c6:	4302      	orrs	r2, r0
   192c8:	601a      	str	r2, [r3, #0]
   192ca:	4770      	bx	lr
   192cc:	40034000 	.word	0x40034000

000192d0 <ADC_IRQHandler>:
ADC_IRQHandler():
   192d0:	b507      	push	{r0, r1, r2, lr}
   192d2:	2300      	movs	r3, #0
   192d4:	4a0a      	ldr	r2, [pc, #40]	; (19300 <ADC_IRQHandler+0x30>)
   192d6:	9301      	str	r3, [sp, #4]
   192d8:	6852      	ldr	r2, [r2, #4]
   192da:	a902      	add	r1, sp, #8
   192dc:	f3c2 120b 	ubfx	r2, r2, #4, #12
   192e0:	f821 2d06 	strh.w	r2, [r1, #-6]!
   192e4:	4a07      	ldr	r2, [pc, #28]	; (19304 <ADC_IRQHandler+0x34>)
   192e6:	6810      	ldr	r0, [r2, #0]
   192e8:	aa01      	add	r2, sp, #4
   192ea:	f001 fd24 	bl	1ad36 <xQueueGenericSendFromISR>
   192ee:	9b01      	ldr	r3, [sp, #4]
   192f0:	b11b      	cbz	r3, 192fa <ADC_IRQHandler+0x2a>
   192f2:	4b05      	ldr	r3, [pc, #20]	; (19308 <ADC_IRQHandler+0x38>)
   192f4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   192f8:	601a      	str	r2, [r3, #0]
   192fa:	b003      	add	sp, #12
   192fc:	f85d fb04 	ldr.w	pc, [sp], #4
   19300:	40034000 	.word	0x40034000
   19304:	2007c9ac 	.word	0x2007c9ac
   19308:	e000ed04 	.word	0xe000ed04

0001930c <adc0_init>:
adc0_init():
   1930c:	b510      	push	{r4, lr}
   1930e:	f002 ffc1 	bl	1c294 <sys_get_cpu_clock>
   19312:	2101      	movs	r1, #1
   19314:	08c4      	lsrs	r4, r0, #3
   19316:	200c      	movs	r0, #12
   19318:	f002 fde0 	bl	1bedc <lpc_pconp>
   1931c:	200c      	movs	r0, #12
   1931e:	2103      	movs	r1, #3
   19320:	f002 fdf4 	bl	1bf0c <lpc_pclk>
   19324:	4a11      	ldr	r2, [pc, #68]	; (1936c <adc0_init+0x60>)
   19326:	f44f 1300 	mov.w	r3, #2097152	; 0x200000
   1932a:	6013      	str	r3, [r2, #0]
   1932c:	2302      	movs	r3, #2
   1932e:	4910      	ldr	r1, [pc, #64]	; (19370 <adc0_init+0x64>)
   19330:	fbb4 f0f3 	udiv	r0, r4, r3
   19334:	4288      	cmp	r0, r1
   19336:	d804      	bhi.n	19342 <adc0_init+0x36>
   19338:	6811      	ldr	r1, [r2, #0]
   1933a:	ea41 2303 	orr.w	r3, r1, r3, lsl #8
   1933e:	6013      	str	r3, [r2, #0]
   19340:	e003      	b.n	1934a <adc0_init+0x3e>
   19342:	3302      	adds	r3, #2
   19344:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
   19348:	d1f1      	bne.n	1932e <adc0_init+0x22>
   1934a:	2001      	movs	r0, #1
   1934c:	f001 fccd 	bl	1acea <xQueueCreateMutex>
   19350:	4b08      	ldr	r3, [pc, #32]	; (19374 <adc0_init+0x68>)
   19352:	2200      	movs	r2, #0
   19354:	6018      	str	r0, [r3, #0]
   19356:	2102      	movs	r1, #2
   19358:	2001      	movs	r0, #1
   1935a:	f001 fc24 	bl	1aba6 <xQueueGenericCreate>
   1935e:	4b06      	ldr	r3, [pc, #24]	; (19378 <adc0_init+0x6c>)
   19360:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
   19364:	6018      	str	r0, [r3, #0]
   19366:	4b05      	ldr	r3, [pc, #20]	; (1937c <adc0_init+0x70>)
   19368:	601a      	str	r2, [r3, #0]
   1936a:	bd10      	pop	{r4, pc}
   1936c:	40034000 	.word	0x40034000
   19370:	00c65d3f 	.word	0x00c65d3f
   19374:	2007c9b0 	.word	0x2007c9b0
   19378:	2007c9ac 	.word	0x2007c9ac
   1937c:	e000e100 	.word	0xe000e100

00019380 <adc0_get_reading>:
adc0_get_reading():
   19380:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   19382:	2807      	cmp	r0, #7
   19384:	f04f 0400 	mov.w	r4, #0
   19388:	4605      	mov	r5, r0
   1938a:	f8ad 4006 	strh.w	r4, [sp, #6]
   1938e:	d82a      	bhi.n	193e6 <adc0_get_reading+0x66>
   19390:	f002 fa7c 	bl	1b88c <xTaskGetSchedulerState>
   19394:	2802      	cmp	r0, #2
   19396:	4e16      	ldr	r6, [pc, #88]	; (193f0 <adc0_get_reading+0x70>)
   19398:	d119      	bne.n	193ce <adc0_get_reading+0x4e>
   1939a:	4f16      	ldr	r7, [pc, #88]	; (193f4 <adc0_get_reading+0x74>)
   1939c:	4621      	mov	r1, r4
   1939e:	4623      	mov	r3, r4
   193a0:	f04f 32ff 	mov.w	r2, #4294967295
   193a4:	6838      	ldr	r0, [r7, #0]
   193a6:	f001 fcff 	bl	1ada8 <xQueueGenericReceive>
   193aa:	4628      	mov	r0, r5
   193ac:	f7ff ff7e 	bl	192ac <adc0_start_conversion>
   193b0:	f10d 0106 	add.w	r1, sp, #6
   193b4:	4623      	mov	r3, r4
   193b6:	6830      	ldr	r0, [r6, #0]
   193b8:	f04f 32ff 	mov.w	r2, #4294967295
   193bc:	f001 fcf4 	bl	1ada8 <xQueueGenericReceive>
   193c0:	6838      	ldr	r0, [r7, #0]
   193c2:	4621      	mov	r1, r4
   193c4:	4622      	mov	r2, r4
   193c6:	4623      	mov	r3, r4
   193c8:	f001 fc1e 	bl	1ac08 <xQueueGenericSend>
   193cc:	e00b      	b.n	193e6 <adc0_get_reading+0x66>
   193ce:	4628      	mov	r0, r5
   193d0:	f7ff ff6c 	bl	192ac <adc0_start_conversion>
   193d4:	2200      	movs	r2, #0
   193d6:	6830      	ldr	r0, [r6, #0]
   193d8:	f10d 0106 	add.w	r1, sp, #6
   193dc:	4613      	mov	r3, r2
   193de:	f001 fce3 	bl	1ada8 <xQueueGenericReceive>
   193e2:	2800      	cmp	r0, #0
   193e4:	d0f6      	beq.n	193d4 <adc0_get_reading+0x54>
   193e6:	f8bd 0006 	ldrh.w	r0, [sp, #6]
   193ea:	b003      	add	sp, #12
   193ec:	bdf0      	pop	{r4, r5, r6, r7, pc}
   193ee:	bf00      	nop
   193f0:	2007c9ac 	.word	0x2007c9ac
   193f4:	2007c9b0 	.word	0x2007c9b0

000193f8 <CAN_tx_now>:
CAN_tx_now():
   193f8:	6803      	ldr	r3, [r0, #0]
   193fa:	b530      	push	{r4, r5, lr}
   193fc:	69da      	ldr	r2, [r3, #28]
   193fe:	f012 0204 	ands.w	r2, r2, #4
   19402:	d010      	beq.n	19426 <CAN_tx_now+0x2e>
   19404:	f103 0230 	add.w	r2, r3, #48	; 0x30
   19408:	f101 0410 	add.w	r4, r1, #16
   1940c:	f851 5b04 	ldr.w	r5, [r1], #4
   19410:	42a1      	cmp	r1, r4
   19412:	f842 5b04 	str.w	r5, [r2], #4
   19416:	d1f9      	bne.n	1940c <CAN_tx_now+0x14>
   19418:	8a42      	ldrh	r2, [r0, #18]
   1941a:	3201      	adds	r2, #1
   1941c:	8242      	strh	r2, [r0, #18]
   1941e:	2221      	movs	r2, #33	; 0x21
   19420:	605a      	str	r2, [r3, #4]
   19422:	2001      	movs	r0, #1
   19424:	bd30      	pop	{r4, r5, pc}
   19426:	4610      	mov	r0, r2
   19428:	bd30      	pop	{r4, r5, pc}
	...

0001942c <CAN_handle_isr>:
CAN_handle_isr():
   1942c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   1942e:	4b21      	ldr	r3, [pc, #132]	; (194b4 <CAN_handle_isr+0x88>)
   19430:	0140      	lsls	r0, r0, #5
   19432:	581e      	ldr	r6, [r3, r0]
   19434:	181c      	adds	r4, r3, r0
   19436:	68f5      	ldr	r5, [r6, #12]
   19438:	68b3      	ldr	r3, [r6, #8]
   1943a:	432b      	orrs	r3, r5
   1943c:	07d9      	lsls	r1, r3, #31
   1943e:	d517      	bpl.n	19470 <CAN_handle_isr+0x44>
   19440:	6860      	ldr	r0, [r4, #4]
   19442:	f001 fd64 	bl	1af0e <uxQueueMessagesWaitingFromISR>
   19446:	89e3      	ldrh	r3, [r4, #14]
   19448:	2200      	movs	r2, #0
   1944a:	4298      	cmp	r0, r3
   1944c:	bf88      	it	hi
   1944e:	81e0      	strhhi	r0, [r4, #14]
   19450:	f106 0120 	add.w	r1, r6, #32
   19454:	6860      	ldr	r0, [r4, #4]
   19456:	4613      	mov	r3, r2
   19458:	f001 fc6d 	bl	1ad36 <xQueueGenericSendFromISR>
   1945c:	b118      	cbz	r0, 19466 <CAN_handle_isr+0x3a>
   1945e:	8aa3      	ldrh	r3, [r4, #20]
   19460:	3301      	adds	r3, #1
   19462:	82a3      	strh	r3, [r4, #20]
   19464:	e002      	b.n	1946c <CAN_handle_isr+0x40>
   19466:	89a3      	ldrh	r3, [r4, #12]
   19468:	3301      	adds	r3, #1
   1946a:	81a3      	strh	r3, [r4, #12]
   1946c:	2304      	movs	r3, #4
   1946e:	6073      	str	r3, [r6, #4]
   19470:	f240 6302 	movw	r3, #1538	; 0x602
   19474:	402b      	ands	r3, r5
   19476:	b183      	cbz	r3, 1949a <CAN_handle_isr+0x6e>
   19478:	68a0      	ldr	r0, [r4, #8]
   1947a:	f001 fd48 	bl	1af0e <uxQueueMessagesWaitingFromISR>
   1947e:	8a23      	ldrh	r3, [r4, #16]
   19480:	4669      	mov	r1, sp
   19482:	4298      	cmp	r0, r3
   19484:	bf88      	it	hi
   19486:	8220      	strhhi	r0, [r4, #16]
   19488:	2200      	movs	r2, #0
   1948a:	68a0      	ldr	r0, [r4, #8]
   1948c:	f001 fd0d 	bl	1aeaa <xQueueReceiveFromISR>
   19490:	b118      	cbz	r0, 1949a <CAN_handle_isr+0x6e>
   19492:	4620      	mov	r0, r4
   19494:	4669      	mov	r1, sp
   19496:	f7ff ffaf 	bl	193f8 <CAN_tx_now>
   1949a:	06aa      	lsls	r2, r5, #26
   1949c:	d502      	bpl.n	194a4 <CAN_handle_isr+0x78>
   1949e:	69a3      	ldr	r3, [r4, #24]
   194a0:	4628      	mov	r0, r5
   194a2:	4798      	blx	r3
   194a4:	072b      	lsls	r3, r5, #28
   194a6:	d502      	bpl.n	194ae <CAN_handle_isr+0x82>
   194a8:	69e3      	ldr	r3, [r4, #28]
   194aa:	4628      	mov	r0, r5
   194ac:	4798      	blx	r3
   194ae:	b004      	add	sp, #16
   194b0:	bd70      	pop	{r4, r5, r6, pc}
   194b2:	bf00      	nop
   194b4:	2007c018 	.word	0x2007c018

000194b8 <CAN_IRQHandler>:
CAN_IRQHandler():
   194b8:	4b08      	ldr	r3, [pc, #32]	; (194dc <CAN_IRQHandler+0x24>)
   194ba:	b510      	push	{r4, lr}
   194bc:	f8d3 40c4 	ldr.w	r4, [r3, #196]	; 0xc4
   194c0:	04a2      	lsls	r2, r4, #18
   194c2:	d502      	bpl.n	194ca <CAN_IRQHandler+0x12>
   194c4:	2000      	movs	r0, #0
   194c6:	f7ff ffb1 	bl	1942c <CAN_handle_isr>
   194ca:	0463      	lsls	r3, r4, #17
   194cc:	d504      	bpl.n	194d8 <CAN_IRQHandler+0x20>
   194ce:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   194d2:	2001      	movs	r0, #1
   194d4:	f7ff bfaa 	b.w	1942c <CAN_handle_isr>
   194d8:	bd10      	pop	{r4, pc}
   194da:	bf00      	nop
   194dc:	400fc000 	.word	0x400fc000

000194e0 <CAN_init>:
CAN_init():
   194e0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   194e4:	2801      	cmp	r0, #1
   194e6:	468a      	mov	sl, r1
   194e8:	461e      	mov	r6, r3
   194ea:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
   194ee:	f8dd 802c 	ldr.w	r8, [sp, #44]	; 0x2c
   194f2:	f200 809f 	bhi.w	19634 <CAN_init+0x154>
   194f6:	4951      	ldr	r1, [pc, #324]	; (1963c <CAN_init+0x15c>)
   194f8:	0143      	lsls	r3, r0, #5
   194fa:	18cf      	adds	r7, r1, r3
   194fc:	58cc      	ldr	r4, [r1, r3]
   194fe:	4950      	ldr	r1, [pc, #320]	; (19640 <CAN_init+0x160>)
   19500:	4d50      	ldr	r5, [pc, #320]	; (19644 <CAN_init+0x164>)
   19502:	f8d1 30c4 	ldr.w	r3, [r1, #196]	; 0xc4
   19506:	b960      	cbnz	r0, 19522 <CAN_init+0x42>
   19508:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
   1950c:	f8c1 30c4 	str.w	r3, [r1, #196]	; 0xc4
   19510:	682b      	ldr	r3, [r5, #0]
   19512:	f023 030f 	bic.w	r3, r3, #15
   19516:	602b      	str	r3, [r5, #0]
   19518:	682b      	ldr	r3, [r5, #0]
   1951a:	f043 0305 	orr.w	r3, r3, #5
   1951e:	602b      	str	r3, [r5, #0]
   19520:	e00b      	b.n	1953a <CAN_init+0x5a>
   19522:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
   19526:	f8c1 30c4 	str.w	r3, [r1, #196]	; 0xc4
   1952a:	692b      	ldr	r3, [r5, #16]
   1952c:	f423 3370 	bic.w	r3, r3, #245760	; 0x3c000
   19530:	612b      	str	r3, [r5, #16]
   19532:	692b      	ldr	r3, [r5, #16]
   19534:	f443 33a0 	orr.w	r3, r3, #81920	; 0x14000
   19538:	612b      	str	r3, [r5, #16]
   1953a:	687b      	ldr	r3, [r7, #4]
   1953c:	b943      	cbnz	r3, 19550 <CAN_init+0x70>
   1953e:	2a00      	cmp	r2, #0
   19540:	bf14      	ite	ne
   19542:	4610      	movne	r0, r2
   19544:	2001      	moveq	r0, #1
   19546:	2110      	movs	r1, #16
   19548:	461a      	mov	r2, r3
   1954a:	f001 fb2c 	bl	1aba6 <xQueueGenericCreate>
   1954e:	6078      	str	r0, [r7, #4]
   19550:	68ba      	ldr	r2, [r7, #8]
   19552:	b93a      	cbnz	r2, 19564 <CAN_init+0x84>
   19554:	2e00      	cmp	r6, #0
   19556:	bf14      	ite	ne
   19558:	4630      	movne	r0, r6
   1955a:	2001      	moveq	r0, #1
   1955c:	2110      	movs	r1, #16
   1955e:	f001 fb22 	bl	1aba6 <xQueueGenericCreate>
   19562:	60b8      	str	r0, [r7, #8]
   19564:	200d      	movs	r0, #13
   19566:	2101      	movs	r1, #1
   19568:	f002 fcd0 	bl	1bf0c <lpc_pclk>
   1956c:	200e      	movs	r0, #14
   1956e:	2101      	movs	r1, #1
   19570:	4e35      	ldr	r6, [pc, #212]	; (19648 <CAN_init+0x168>)
   19572:	f002 fccb 	bl	1bf0c <lpc_pclk>
   19576:	200f      	movs	r0, #15
   19578:	2101      	movs	r1, #1
   1957a:	f002 fcc7 	bl	1bf0c <lpc_pclk>
   1957e:	2500      	movs	r5, #0
   19580:	f04f 0b01 	mov.w	fp, #1
   19584:	230e      	movs	r3, #14
   19586:	f8c4 b000 	str.w	fp, [r4]
   1958a:	6125      	str	r5, [r4, #16]
   1958c:	60a5      	str	r5, [r4, #8]
   1958e:	6063      	str	r3, [r4, #4]
   19590:	f8c6 b000 	str.w	fp, [r6]
   19594:	68e3      	ldr	r3, [r4, #12]
   19596:	482d      	ldr	r0, [pc, #180]	; (1964c <CAN_init+0x16c>)
   19598:	4629      	mov	r1, r5
   1959a:	6003      	str	r3, [r0, #0]
   1959c:	f44f 6200 	mov.w	r2, #2048	; 0x800
   195a0:	f004 fc65 	bl	1de6e <memset>
   195a4:	6075      	str	r5, [r6, #4]
   195a6:	60b5      	str	r5, [r6, #8]
   195a8:	60f5      	str	r5, [r6, #12]
   195aa:	6135      	str	r5, [r6, #16]
   195ac:	6175      	str	r5, [r6, #20]
   195ae:	f8c6 b000 	str.w	fp, [r6]
   195b2:	f002 fe6f 	bl	1c294 <sys_get_cpu_clock>
   195b6:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
   195ba:	fb03 fa0a 	mul.w	sl, r3, sl
   195be:	2318      	movs	r3, #24
   195c0:	fbb0 f0fa 	udiv	r0, r0, sl
   195c4:	fbb0 f1f3 	udiv	r1, r0, r3
   195c8:	fb03 0511 	mls	r5, r3, r1, r0
   195cc:	1e9a      	subs	r2, r3, #2
   195ce:	b9d5      	cbnz	r5, 19606 <CAN_init+0x126>
   195d0:	2003      	movs	r0, #3
   195d2:	3b01      	subs	r3, #1
   195d4:	fbb3 f3f0 	udiv	r3, r3, r0
   195d8:	3901      	subs	r1, #1
   195da:	1e58      	subs	r0, r3, #1
   195dc:	f441 4140 	orr.w	r1, r1, #49152	; 0xc000
   195e0:	ea41 5100 	orr.w	r1, r1, r0, lsl #20
   195e4:	1ad3      	subs	r3, r2, r3
   195e6:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
   195ea:	6163      	str	r3, [r4, #20]
   195ec:	f240 6303 	movw	r3, #1539	; 0x603
   195f0:	6123      	str	r3, [r4, #16]
   195f2:	f1b9 0f00 	cmp.w	r9, #0
   195f6:	d00b      	beq.n	19610 <CAN_init+0x130>
   195f8:	6923      	ldr	r3, [r4, #16]
   195fa:	f8c7 9018 	str.w	r9, [r7, #24]
   195fe:	f043 0320 	orr.w	r3, r3, #32
   19602:	6123      	str	r3, [r4, #16]
   19604:	e004      	b.n	19610 <CAN_init+0x130>
   19606:	4613      	mov	r3, r2
   19608:	2a00      	cmp	r2, #0
   1960a:	d1db      	bne.n	195c4 <CAN_init+0xe4>
   1960c:	2001      	movs	r0, #1
   1960e:	e00d      	b.n	1962c <CAN_init+0x14c>
   19610:	f1b8 0f00 	cmp.w	r8, #0
   19614:	d005      	beq.n	19622 <CAN_init+0x142>
   19616:	6923      	ldr	r3, [r4, #16]
   19618:	f8c7 801c 	str.w	r8, [r7, #28]
   1961c:	f043 0308 	orr.w	r3, r3, #8
   19620:	6123      	str	r3, [r4, #16]
   19622:	4b0b      	ldr	r3, [pc, #44]	; (19650 <CAN_init+0x170>)
   19624:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
   19628:	601a      	str	r2, [r3, #0]
   1962a:	2000      	movs	r0, #0
   1962c:	f080 0001 	eor.w	r0, r0, #1
   19630:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19634:	2000      	movs	r0, #0
   19636:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1963a:	bf00      	nop
   1963c:	2007c018 	.word	0x2007c018
   19640:	400fc000 	.word	0x400fc000
   19644:	4002c000 	.word	0x4002c000
   19648:	4003c000 	.word	0x4003c000
   1964c:	40038000 	.word	0x40038000
   19650:	e000e100 	.word	0xe000e100

00019654 <CAN_rx>:
CAN_rx():
   19654:	2801      	cmp	r0, #1
   19656:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   1965a:	4607      	mov	r7, r0
   1965c:	460e      	mov	r6, r1
   1965e:	4691      	mov	r9, r2
   19660:	d902      	bls.n	19668 <CAN_rx+0x14>
   19662:	2000      	movs	r0, #0
   19664:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   19668:	2900      	cmp	r1, #0
   1966a:	d0fa      	beq.n	19662 <CAN_rx+0xe>
   1966c:	f002 f90e 	bl	1b88c <xTaskGetSchedulerState>
   19670:	2802      	cmp	r0, #2
   19672:	f8df 8068 	ldr.w	r8, [pc, #104]	; 196dc <CAN_rx+0x88>
   19676:	ea4f 1747 	mov.w	r7, r7, lsl #5
   1967a:	d10b      	bne.n	19694 <CAN_rx+0x40>
   1967c:	4447      	add	r7, r8
   1967e:	6878      	ldr	r0, [r7, #4]
   19680:	4631      	mov	r1, r6
   19682:	464a      	mov	r2, r9
   19684:	2300      	movs	r3, #0
   19686:	f001 fb8f 	bl	1ada8 <xQueueGenericReceive>
   1968a:	3000      	adds	r0, #0
   1968c:	bf18      	it	ne
   1968e:	2001      	movne	r0, #1
   19690:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   19694:	f002 fc88 	bl	1bfa8 <sys_get_uptime_us>
   19698:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   1969c:	2300      	movs	r3, #0
   1969e:	f003 ff6f 	bl	1d580 <__aeabi_uldivmod>
   196a2:	eb10 0409 	adds.w	r4, r0, r9
   196a6:	f141 0500 	adc.w	r5, r1, #0
   196aa:	eb08 0307 	add.w	r3, r8, r7
   196ae:	2200      	movs	r2, #0
   196b0:	6858      	ldr	r0, [r3, #4]
   196b2:	4631      	mov	r1, r6
   196b4:	4613      	mov	r3, r2
   196b6:	f001 fb77 	bl	1ada8 <xQueueGenericReceive>
   196ba:	b958      	cbnz	r0, 196d4 <CAN_rx+0x80>
   196bc:	f002 fc74 	bl	1bfa8 <sys_get_uptime_us>
   196c0:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   196c4:	2300      	movs	r3, #0
   196c6:	f003 ff5b 	bl	1d580 <__aeabi_uldivmod>
   196ca:	428d      	cmp	r5, r1
   196cc:	bf08      	it	eq
   196ce:	4284      	cmpeq	r4, r0
   196d0:	d2eb      	bcs.n	196aa <CAN_rx+0x56>
   196d2:	e7c6      	b.n	19662 <CAN_rx+0xe>
   196d4:	2001      	movs	r0, #1
   196d6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   196da:	bf00      	nop
   196dc:	2007c018 	.word	0x2007c018

000196e0 <CAN_is_bus_off>:
CAN_is_bus_off():
   196e0:	2801      	cmp	r0, #1
   196e2:	d806      	bhi.n	196f2 <CAN_is_bus_off+0x12>
   196e4:	4b04      	ldr	r3, [pc, #16]	; (196f8 <CAN_is_bus_off+0x18>)
   196e6:	0140      	lsls	r0, r0, #5
   196e8:	581b      	ldr	r3, [r3, r0]
   196ea:	6898      	ldr	r0, [r3, #8]
   196ec:	f3c0 10c0 	ubfx	r0, r0, #7, #1
   196f0:	4770      	bx	lr
   196f2:	2001      	movs	r0, #1
   196f4:	4770      	bx	lr
   196f6:	bf00      	nop
   196f8:	2007c018 	.word	0x2007c018

000196fc <CAN_tx>:
CAN_tx():
   196fc:	2801      	cmp	r0, #1
   196fe:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
   19702:	4604      	mov	r4, r0
   19704:	460d      	mov	r5, r1
   19706:	4690      	mov	r8, r2
   19708:	d901      	bls.n	1970e <CAN_tx+0x12>
   1970a:	2000      	movs	r0, #0
   1970c:	e03d      	b.n	1978a <CAN_tx+0x8e>
   1970e:	2900      	cmp	r1, #0
   19710:	d0fb      	beq.n	1970a <CAN_tx+0xe>
   19712:	f7ff ffe5 	bl	196e0 <CAN_is_bus_off>
   19716:	2800      	cmp	r0, #0
   19718:	d1f7      	bne.n	1970a <CAN_tx+0xe>
   1971a:	491d      	ldr	r1, [pc, #116]	; (19790 <CAN_tx+0x94>)
   1971c:	0163      	lsls	r3, r4, #5
   1971e:	18cc      	adds	r4, r1, r3
   19720:	58cf      	ldr	r7, [r1, r3]
   19722:	f002 f9cd 	bl	1bac0 <vPortEnterCritical>
   19726:	4620      	mov	r0, r4
   19728:	4629      	mov	r1, r5
   1972a:	f7ff fe65 	bl	193f8 <CAN_tx_now>
   1972e:	4606      	mov	r6, r0
   19730:	f002 f9d8 	bl	1bae4 <vPortExitCritical>
   19734:	bb46      	cbnz	r6, 19788 <CAN_tx+0x8c>
   19736:	f002 f8a9 	bl	1b88c <xTaskGetSchedulerState>
   1973a:	2802      	cmp	r0, #2
   1973c:	bf19      	ittee	ne
   1973e:	4632      	movne	r2, r6
   19740:	4613      	movne	r3, r2
   19742:	4642      	moveq	r2, r8
   19744:	4633      	moveq	r3, r6
   19746:	4629      	mov	r1, r5
   19748:	68a0      	ldr	r0, [r4, #8]
   1974a:	f001 fa5d 	bl	1ac08 <xQueueGenericSend>
   1974e:	1c05      	adds	r5, r0, #0
   19750:	bf18      	it	ne
   19752:	2501      	movne	r5, #1
   19754:	f002 f9b4 	bl	1bac0 <vPortEnterCritical>
   19758:	69fb      	ldr	r3, [r7, #28]
   1975a:	4a0e      	ldr	r2, [pc, #56]	; (19794 <CAN_tx+0x98>)
   1975c:	f003 3304 	and.w	r3, r3, #67372036	; 0x4040404
   19760:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
   19764:	4293      	cmp	r3, r2
   19766:	d10b      	bne.n	19780 <CAN_tx+0x84>
   19768:	2200      	movs	r2, #0
   1976a:	68a0      	ldr	r0, [r4, #8]
   1976c:	4669      	mov	r1, sp
   1976e:	4613      	mov	r3, r2
   19770:	f001 fb1a 	bl	1ada8 <xQueueGenericReceive>
   19774:	b120      	cbz	r0, 19780 <CAN_tx+0x84>
   19776:	4620      	mov	r0, r4
   19778:	4669      	mov	r1, sp
   1977a:	f7ff fe3d 	bl	193f8 <CAN_tx_now>
   1977e:	4605      	mov	r5, r0
   19780:	f002 f9b0 	bl	1bae4 <vPortExitCritical>
   19784:	4628      	mov	r0, r5
   19786:	e000      	b.n	1978a <CAN_tx+0x8e>
   19788:	2001      	movs	r0, #1
   1978a:	b004      	add	sp, #16
   1978c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   19790:	2007c018 	.word	0x2007c018
   19794:	00040404 	.word	0x00040404

00019798 <CAN_reset_bus>:
CAN_reset_bus():
   19798:	2801      	cmp	r0, #1
   1979a:	d806      	bhi.n	197aa <CAN_reset_bus+0x12>
   1979c:	4b03      	ldr	r3, [pc, #12]	; (197ac <CAN_reset_bus+0x14>)
   1979e:	0140      	lsls	r0, r0, #5
   197a0:	581b      	ldr	r3, [r3, r0]
   197a2:	2201      	movs	r2, #1
   197a4:	601a      	str	r2, [r3, #0]
   197a6:	2208      	movs	r2, #8
   197a8:	601a      	str	r2, [r3, #0]
   197aa:	4770      	bx	lr
   197ac:	2007c018 	.word	0x2007c018

000197b0 <CAN_bypass_filter_accept_all_msgs>:
CAN_bypass_filter_accept_all_msgs():
   197b0:	4b01      	ldr	r3, [pc, #4]	; (197b8 <CAN_bypass_filter_accept_all_msgs+0x8>)
   197b2:	2202      	movs	r2, #2
   197b4:	601a      	str	r2, [r3, #0]
   197b6:	4770      	bx	lr
   197b8:	4003c000 	.word	0x4003c000

000197bc <CAN_gen_sid>:
CAN_gen_sid():
   197bc:	b513      	push	{r0, r1, r4, lr}
   197be:	f8bd 3004 	ldrh.w	r3, [sp, #4]
   197c2:	f64f 74ff 	movw	r4, #65535	; 0xffff
   197c6:	f361 030a 	bfi	r3, r1, #0, #11
   197ca:	1b0c      	subs	r4, r1, r4
   197cc:	0a1a      	lsrs	r2, r3, #8
   197ce:	4261      	negs	r1, r4
   197d0:	4161      	adcs	r1, r4
   197d2:	f002 02f7 	and.w	r2, r2, #247	; 0xf7
   197d6:	f361 1204 	bfi	r2, r1, #4, #1
   197da:	f360 1247 	bfi	r2, r0, #5, #3
   197de:	b2db      	uxtb	r3, r3
   197e0:	2000      	movs	r0, #0
   197e2:	f363 0007 	bfi	r0, r3, #0, #8
   197e6:	b2d2      	uxtb	r2, r2
   197e8:	f362 200f 	bfi	r0, r2, #8, #8
   197ec:	b002      	add	sp, #8
   197ee:	bd10      	pop	{r4, pc}

000197f0 <CAN_setup_filter>:
CAN_setup_filter():
   197f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   197f4:	f011 0701 	ands.w	r7, r1, #1
   197f8:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   197fc:	f040 8089 	bne.w	19912 <CAN_setup_filter+0x122>
   19800:	4c45      	ldr	r4, [pc, #276]	; (19918 <CAN_setup_filter+0x128>)
   19802:	2601      	movs	r6, #1
   19804:	6026      	str	r6, [r4, #0]
   19806:	6865      	ldr	r5, [r4, #4]
   19808:	f04f 080c 	mov.w	r8, #12
   1980c:	f3c5 0547 	ubfx	r5, r5, #1, #8
   19810:	fb08 f505 	mul.w	r5, r8, r5
   19814:	f8d4 8004 	ldr.w	r8, [r4, #4]
   19818:	f1c5 4580 	rsb	r5, r5, #1073741824	; 0x40000000
   1981c:	f108 4480 	add.w	r4, r8, #1073741824	; 0x40000000
   19820:	f505 3562 	add.w	r5, r5, #231424	; 0x38800
   19824:	f504 3460 	add.w	r4, r4, #229376	; 0x38000
   19828:	b1b0      	cbz	r0, 19858 <CAN_setup_filter+0x68>
   1982a:	40b1      	lsls	r1, r6
   1982c:	190e      	adds	r6, r1, r4
   1982e:	42ae      	cmp	r6, r5
   19830:	d214      	bcs.n	1985c <CAN_setup_filter+0x6c>
   19832:	0889      	lsrs	r1, r1, #2
   19834:	0089      	lsls	r1, r1, #2
   19836:	eb00 0901 	add.w	r9, r0, r1
   1983a:	4606      	mov	r6, r0
   1983c:	454e      	cmp	r6, r9
   1983e:	d00a      	beq.n	19856 <CAN_setup_filter+0x66>
   19840:	f856 ab04 	ldr.w	sl, [r6], #4
   19844:	4f35      	ldr	r7, [pc, #212]	; (1991c <CAN_setup_filter+0x12c>)
   19846:	ebc0 0b06 	rsb	fp, r0, r6
   1984a:	44c3      	add	fp, r8
   1984c:	ea4f 4a3a 	mov.w	sl, sl, ror #16
   19850:	f847 a00b 	str.w	sl, [r7, fp]
   19854:	e7f2      	b.n	1983c <CAN_setup_filter+0x4c>
   19856:	440c      	add	r4, r1
   19858:	2001      	movs	r0, #1
   1985a:	e000      	b.n	1985e <CAN_setup_filter+0x6e>
   1985c:	4638      	mov	r0, r7
   1985e:	f104 4140 	add.w	r1, r4, #3221225472	; 0xc0000000
   19862:	4e2d      	ldr	r6, [pc, #180]	; (19918 <CAN_setup_filter+0x128>)
   19864:	f5a1 3160 	sub.w	r1, r1, #229376	; 0x38000
   19868:	60b1      	str	r1, [r6, #8]
   1986a:	b17a      	cbz	r2, 1988c <CAN_setup_filter+0x9c>
   1986c:	009b      	lsls	r3, r3, #2
   1986e:	18e1      	adds	r1, r4, r3
   19870:	42a9      	cmp	r1, r5
   19872:	d20a      	bcs.n	1988a <CAN_setup_filter+0x9a>
   19874:	2100      	movs	r1, #0
   19876:	4299      	cmp	r1, r3
   19878:	d005      	beq.n	19886 <CAN_setup_filter+0x96>
   1987a:	5856      	ldr	r6, [r2, r1]
   1987c:	ea4f 4636 	mov.w	r6, r6, ror #16
   19880:	5066      	str	r6, [r4, r1]
   19882:	3104      	adds	r1, #4
   19884:	e7f7      	b.n	19876 <CAN_setup_filter+0x86>
   19886:	440c      	add	r4, r1
   19888:	e000      	b.n	1988c <CAN_setup_filter+0x9c>
   1988a:	2000      	movs	r0, #0
   1988c:	f104 4340 	add.w	r3, r4, #3221225472	; 0xc0000000
   19890:	4a21      	ldr	r2, [pc, #132]	; (19918 <CAN_setup_filter+0x128>)
   19892:	f5a3 3360 	sub.w	r3, r3, #229376	; 0x38000
   19896:	60d3      	str	r3, [r2, #12]
   19898:	f1bc 0f00 	cmp.w	ip, #0
   1989c:	d011      	beq.n	198c2 <CAN_setup_filter+0xd2>
   1989e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
   198a2:	009b      	lsls	r3, r3, #2
   198a4:	18e2      	adds	r2, r4, r3
   198a6:	42aa      	cmp	r2, r5
   198a8:	d20a      	bcs.n	198c0 <CAN_setup_filter+0xd0>
   198aa:	4619      	mov	r1, r3
   198ac:	2300      	movs	r3, #0
   198ae:	428b      	cmp	r3, r1
   198b0:	d004      	beq.n	198bc <CAN_setup_filter+0xcc>
   198b2:	f85c 2003 	ldr.w	r2, [ip, r3]
   198b6:	50e2      	str	r2, [r4, r3]
   198b8:	3304      	adds	r3, #4
   198ba:	e7f8      	b.n	198ae <CAN_setup_filter+0xbe>
   198bc:	441c      	add	r4, r3
   198be:	e000      	b.n	198c2 <CAN_setup_filter+0xd2>
   198c0:	2000      	movs	r0, #0
   198c2:	f104 4340 	add.w	r3, r4, #3221225472	; 0xc0000000
   198c6:	4a14      	ldr	r2, [pc, #80]	; (19918 <CAN_setup_filter+0x128>)
   198c8:	f5a3 3360 	sub.w	r3, r3, #229376	; 0x38000
   198cc:	6113      	str	r3, [r2, #16]
   198ce:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   198d0:	b18b      	cbz	r3, 198f6 <CAN_setup_filter+0x106>
   198d2:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
   198d6:	00db      	lsls	r3, r3, #3
   198d8:	18e2      	adds	r2, r4, r3
   198da:	42aa      	cmp	r2, r5
   198dc:	d20a      	bcs.n	198f4 <CAN_setup_filter+0x104>
   198de:	4619      	mov	r1, r3
   198e0:	2300      	movs	r3, #0
   198e2:	428b      	cmp	r3, r1
   198e4:	d004      	beq.n	198f0 <CAN_setup_filter+0x100>
   198e6:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   198e8:	58ea      	ldr	r2, [r5, r3]
   198ea:	50e2      	str	r2, [r4, r3]
   198ec:	3304      	adds	r3, #4
   198ee:	e7f8      	b.n	198e2 <CAN_setup_filter+0xf2>
   198f0:	441c      	add	r4, r3
   198f2:	e000      	b.n	198f6 <CAN_setup_filter+0x106>
   198f4:	2000      	movs	r0, #0
   198f6:	4b08      	ldr	r3, [pc, #32]	; (19918 <CAN_setup_filter+0x128>)
   198f8:	f104 4440 	add.w	r4, r4, #3221225472	; 0xc0000000
   198fc:	f5a4 3460 	sub.w	r4, r4, #229376	; 0x38000
   19900:	615c      	str	r4, [r3, #20]
   19902:	685a      	ldr	r2, [r3, #4]
   19904:	2a00      	cmp	r2, #0
   19906:	bf14      	ite	ne
   19908:	2204      	movne	r2, #4
   1990a:	2200      	moveq	r2, #0
   1990c:	601a      	str	r2, [r3, #0]
   1990e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19912:	2000      	movs	r0, #0
   19914:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19918:	4003c000 	.word	0x4003c000
   1991c:	40037ffc 	.word	0x40037ffc

00019920 <handle_eint_list>:
handle_eint_list():
   19920:	b570      	push	{r4, r5, r6, lr}
   19922:	4605      	mov	r5, r0
   19924:	460e      	mov	r6, r1
   19926:	4614      	mov	r4, r2
   19928:	b17c      	cbz	r4, 1994a <handle_eint_list+0x2a>
   1992a:	682b      	ldr	r3, [r5, #0]
   1992c:	b16b      	cbz	r3, 1994a <handle_eint_list+0x2a>
   1992e:	6822      	ldr	r2, [r4, #0]
   19930:	4213      	tst	r3, r2
   19932:	d008      	beq.n	19946 <handle_eint_list+0x26>
   19934:	6863      	ldr	r3, [r4, #4]
   19936:	4798      	blx	r3
   19938:	6822      	ldr	r2, [r4, #0]
   1993a:	682b      	ldr	r3, [r5, #0]
   1993c:	ea23 0302 	bic.w	r3, r3, r2
   19940:	602b      	str	r3, [r5, #0]
   19942:	6823      	ldr	r3, [r4, #0]
   19944:	6033      	str	r3, [r6, #0]
   19946:	68a4      	ldr	r4, [r4, #8]
   19948:	e7ee      	b.n	19928 <handle_eint_list+0x8>
   1994a:	bd70      	pop	{r4, r5, r6, pc}

0001994c <eint3_enable.isra.0>:
eint3_enable.isra.0():
   1994c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1994e:	2701      	movs	r7, #1
   19950:	4087      	lsls	r7, r0
   19952:	460c      	mov	r4, r1
   19954:	4615      	mov	r5, r2
   19956:	461e      	mov	r6, r3
   19958:	d010      	beq.n	1997c <eint3_enable.isra.0+0x30>
   1995a:	b179      	cbz	r1, 1997c <eint3_enable.isra.0+0x30>
   1995c:	200c      	movs	r0, #12
   1995e:	f004 fa35 	bl	1ddcc <malloc>
   19962:	b158      	cbz	r0, 1997c <eint3_enable.isra.0+0x30>
   19964:	6044      	str	r4, [r0, #4]
   19966:	682b      	ldr	r3, [r5, #0]
   19968:	6007      	str	r7, [r0, #0]
   1996a:	6083      	str	r3, [r0, #8]
   1996c:	6833      	ldr	r3, [r6, #0]
   1996e:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
   19972:	431f      	orrs	r7, r3
   19974:	4b02      	ldr	r3, [pc, #8]	; (19980 <eint3_enable.isra.0+0x34>)
   19976:	6028      	str	r0, [r5, #0]
   19978:	6037      	str	r7, [r6, #0]
   1997a:	601a      	str	r2, [r3, #0]
   1997c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1997e:	bf00      	nop
   19980:	e000e100 	.word	0xe000e100

00019984 <EINT3_IRQHandler>:
EINT3_IRQHandler():
   19984:	b51f      	push	{r0, r1, r2, r3, r4, lr}
   19986:	4c18      	ldr	r4, [pc, #96]	; (199e8 <EINT3_IRQHandler+0x64>)
   19988:	4668      	mov	r0, sp
   1998a:	6863      	ldr	r3, [r4, #4]
   1998c:	4917      	ldr	r1, [pc, #92]	; (199ec <EINT3_IRQHandler+0x68>)
   1998e:	9300      	str	r3, [sp, #0]
   19990:	68a3      	ldr	r3, [r4, #8]
   19992:	9301      	str	r3, [sp, #4]
   19994:	6a63      	ldr	r3, [r4, #36]	; 0x24
   19996:	9302      	str	r3, [sp, #8]
   19998:	6aa3      	ldr	r3, [r4, #40]	; 0x28
   1999a:	9303      	str	r3, [sp, #12]
   1999c:	4b14      	ldr	r3, [pc, #80]	; (199f0 <EINT3_IRQHandler+0x6c>)
   1999e:	681a      	ldr	r2, [r3, #0]
   199a0:	f7ff ffbe 	bl	19920 <handle_eint_list>
   199a4:	4b13      	ldr	r3, [pc, #76]	; (199f4 <EINT3_IRQHandler+0x70>)
   199a6:	a801      	add	r0, sp, #4
   199a8:	681a      	ldr	r2, [r3, #0]
   199aa:	4910      	ldr	r1, [pc, #64]	; (199ec <EINT3_IRQHandler+0x68>)
   199ac:	f7ff ffb8 	bl	19920 <handle_eint_list>
   199b0:	4b11      	ldr	r3, [pc, #68]	; (199f8 <EINT3_IRQHandler+0x74>)
   199b2:	a802      	add	r0, sp, #8
   199b4:	681a      	ldr	r2, [r3, #0]
   199b6:	4911      	ldr	r1, [pc, #68]	; (199fc <EINT3_IRQHandler+0x78>)
   199b8:	f7ff ffb2 	bl	19920 <handle_eint_list>
   199bc:	4b10      	ldr	r3, [pc, #64]	; (19a00 <EINT3_IRQHandler+0x7c>)
   199be:	a803      	add	r0, sp, #12
   199c0:	681a      	ldr	r2, [r3, #0]
   199c2:	490e      	ldr	r1, [pc, #56]	; (199fc <EINT3_IRQHandler+0x78>)
   199c4:	f7ff ffac 	bl	19920 <handle_eint_list>
   199c8:	9b00      	ldr	r3, [sp, #0]
   199ca:	b90b      	cbnz	r3, 199d0 <EINT3_IRQHandler+0x4c>
   199cc:	9b01      	ldr	r3, [sp, #4]
   199ce:	b113      	cbz	r3, 199d6 <EINT3_IRQHandler+0x52>
   199d0:	f04f 33ff 	mov.w	r3, #4294967295
   199d4:	60e3      	str	r3, [r4, #12]
   199d6:	9b02      	ldr	r3, [sp, #8]
   199d8:	b90b      	cbnz	r3, 199de <EINT3_IRQHandler+0x5a>
   199da:	9b03      	ldr	r3, [sp, #12]
   199dc:	b113      	cbz	r3, 199e4 <EINT3_IRQHandler+0x60>
   199de:	f04f 33ff 	mov.w	r3, #4294967295
   199e2:	62e3      	str	r3, [r4, #44]	; 0x2c
   199e4:	b004      	add	sp, #16
   199e6:	bd10      	pop	{r4, pc}
   199e8:	40028080 	.word	0x40028080
   199ec:	4002808c 	.word	0x4002808c
   199f0:	2007c9bc 	.word	0x2007c9bc
   199f4:	2007c9c0 	.word	0x2007c9c0
   199f8:	2007c9b4 	.word	0x2007c9b4
   199fc:	400280ac 	.word	0x400280ac
   19a00:	2007c9b8 	.word	0x2007c9b8

00019a04 <eint3_enable_port0>:
eint3_enable_port0():
   19a04:	b510      	push	{r4, lr}
   19a06:	2900      	cmp	r1, #0
   19a08:	4b06      	ldr	r3, [pc, #24]	; (19a24 <eint3_enable_port0+0x20>)
   19a0a:	4611      	mov	r1, r2
   19a0c:	4a06      	ldr	r2, [pc, #24]	; (19a28 <eint3_enable_port0+0x24>)
   19a0e:	4c07      	ldr	r4, [pc, #28]	; (19a2c <eint3_enable_port0+0x28>)
   19a10:	bf18      	it	ne
   19a12:	461a      	movne	r2, r3
   19a14:	4b06      	ldr	r3, [pc, #24]	; (19a30 <eint3_enable_port0+0x2c>)
   19a16:	bf08      	it	eq
   19a18:	4623      	moveq	r3, r4
   19a1a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   19a1e:	f7ff bf95 	b.w	1994c <eint3_enable.isra.0>
   19a22:	bf00      	nop
   19a24:	2007c9c0 	.word	0x2007c9c0
   19a28:	2007c9bc 	.word	0x2007c9bc
   19a2c:	40028090 	.word	0x40028090
   19a30:	40028094 	.word	0x40028094

00019a34 <I2C2::init(unsigned int)>:
_ZN4I2C24initEj():
   19a34:	b570      	push	{r4, r5, r6, lr}
   19a36:	4b18      	ldr	r3, [pc, #96]	; (19a98 <I2C2::init(unsigned int)+0x64>)
   19a38:	4604      	mov	r4, r0
   19a3a:	695d      	ldr	r5, [r3, #20]
   19a3c:	4b17      	ldr	r3, [pc, #92]	; (19a9c <I2C2::init(unsigned int)+0x68>)
   19a3e:	201a      	movs	r0, #26
   19a40:	6c1a      	ldr	r2, [r3, #64]	; 0x40
   19a42:	460e      	mov	r6, r1
   19a44:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
   19a48:	641a      	str	r2, [r3, #64]	; 0x40
   19a4a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
   19a4c:	2103      	movs	r1, #3
   19a4e:	f442 0220 	orr.w	r2, r2, #10485760	; 0xa00000
   19a52:	641a      	str	r2, [r3, #64]	; 0x40
   19a54:	6e9a      	ldr	r2, [r3, #104]	; 0x68
   19a56:	f405 6540 	and.w	r5, r5, #3072	; 0xc00
   19a5a:	f442 6240 	orr.w	r2, r2, #3072	; 0xc00
   19a5e:	669a      	str	r2, [r3, #104]	; 0x68
   19a60:	681a      	ldr	r2, [r3, #0]
   19a62:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
   19a66:	601a      	str	r2, [r3, #0]
   19a68:	681a      	ldr	r2, [r3, #0]
   19a6a:	f442 0220 	orr.w	r2, r2, #10485760	; 0xa00000
   19a6e:	601a      	str	r2, [r3, #0]
   19a70:	f002 fa4c 	bl	1bf0c <lpc_pclk>
   19a74:	f002 fc0e 	bl	1c294 <sys_get_cpu_clock>
   19a78:	f5b5 6f40 	cmp.w	r5, #3072	; 0xc00
   19a7c:	4601      	mov	r1, r0
   19a7e:	d106      	bne.n	19a8e <I2C2::init(unsigned int)+0x5a>
   19a80:	4620      	mov	r0, r4
   19a82:	4632      	mov	r2, r6
   19a84:	08c9      	lsrs	r1, r1, #3
   19a86:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
   19a8a:	f000 bd33 	b.w	1a4f4 <I2C_Base::init(unsigned int, unsigned int)>
   19a8e:	2301      	movs	r3, #1
   19a90:	7163      	strb	r3, [r4, #5]
   19a92:	2000      	movs	r0, #0
   19a94:	bd70      	pop	{r4, r5, r6, pc}
   19a96:	bf00      	nop
   19a98:	2009c000 	.word	0x2009c000
   19a9c:	4002c000 	.word	0x4002c000

00019aa0 <I2C2::I2C2()>:
_ZN4I2C2C1Ev():
   19aa0:	b510      	push	{r4, lr}
   19aa2:	4903      	ldr	r1, [pc, #12]	; (19ab0 <I2C2::I2C2()+0x10>)
   19aa4:	4604      	mov	r4, r0
   19aa6:	f000 fcf7 	bl	1a498 <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)>
   19aaa:	4620      	mov	r0, r4
   19aac:	bd10      	pop	{r4, pc}
   19aae:	bf00      	nop
   19ab0:	400a0000 	.word	0x400a0000

00019ab4 <I2C2_IRQHandler>:
I2C2_IRQHandler():
   19ab4:	b538      	push	{r3, r4, r5, lr}
   19ab6:	4c07      	ldr	r4, [pc, #28]	; (19ad4 <I2C2_IRQHandler+0x20>)
   19ab8:	6823      	ldr	r3, [r4, #0]
   19aba:	b933      	cbnz	r3, 19aca <I2C2_IRQHandler+0x16>
   19abc:	201c      	movs	r0, #28
   19abe:	f7f6 fbd7 	bl	10270 <operator new(unsigned int)>
   19ac2:	4605      	mov	r5, r0
   19ac4:	f7ff ffec 	bl	19aa0 <I2C2::I2C2()>
   19ac8:	6025      	str	r5, [r4, #0]
   19aca:	6820      	ldr	r0, [r4, #0]
   19acc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   19ad0:	f000 bde8 	b.w	1a6a4 <I2C_Base::handleInterrupt()>
   19ad4:	2007c1f8 	.word	0x2007c1f8

00019ad8 <PWM::PWM(PWM::pwmType, unsigned int)>:
_ZN3PWMC2ENS_7pwmTypeEj():
   19ad8:	b570      	push	{r4, r5, r6, lr}
   19ada:	4d1d      	ldr	r5, [pc, #116]	; (19b50 <PWM::PWM(PWM::pwmType, unsigned int)+0x78>)
   19adc:	4604      	mov	r4, r0
   19ade:	682b      	ldr	r3, [r5, #0]
   19ae0:	7001      	strb	r1, [r0, #0]
   19ae2:	2a00      	cmp	r2, #0
   19ae4:	bf14      	ite	ne
   19ae6:	4616      	movne	r6, r2
   19ae8:	2664      	moveq	r6, #100	; 0x64
   19aea:	b9cb      	cbnz	r3, 19b20 <PWM::PWM(PWM::pwmType, unsigned int)+0x48>
   19aec:	f002 fbd2 	bl	1c294 <sys_get_cpu_clock>
   19af0:	fbb0 f0f6 	udiv	r0, r0, r6
   19af4:	6028      	str	r0, [r5, #0]
   19af6:	2101      	movs	r1, #1
   19af8:	2006      	movs	r0, #6
   19afa:	f002 f9ef 	bl	1bedc <lpc_pconp>
   19afe:	2006      	movs	r0, #6
   19b00:	2101      	movs	r1, #1
   19b02:	f002 fa03 	bl	1bf0c <lpc_pclk>
   19b06:	4b13      	ldr	r3, [pc, #76]	; (19b54 <PWM::PWM(PWM::pwmType, unsigned int)+0x7c>)
   19b08:	695a      	ldr	r2, [r3, #20]
   19b0a:	f042 0202 	orr.w	r2, r2, #2
   19b0e:	615a      	str	r2, [r3, #20]
   19b10:	682a      	ldr	r2, [r5, #0]
   19b12:	619a      	str	r2, [r3, #24]
   19b14:	2209      	movs	r2, #9
   19b16:	605a      	str	r2, [r3, #4]
   19b18:	6f1a      	ldr	r2, [r3, #112]	; 0x70
   19b1a:	f022 020f 	bic.w	r2, r2, #15
   19b1e:	671a      	str	r2, [r3, #112]	; 0x70
   19b20:	7821      	ldrb	r1, [r4, #0]
   19b22:	2203      	movs	r2, #3
   19b24:	0048      	lsls	r0, r1, #1
   19b26:	4082      	lsls	r2, r0
   19b28:	4b0b      	ldr	r3, [pc, #44]	; (19b58 <PWM::PWM(PWM::pwmType, unsigned int)+0x80>)
   19b2a:	3109      	adds	r1, #9
   19b2c:	691d      	ldr	r5, [r3, #16]
   19b2e:	ea25 0202 	bic.w	r2, r5, r2
   19b32:	611a      	str	r2, [r3, #16]
   19b34:	2201      	movs	r2, #1
   19b36:	fa02 f000 	lsl.w	r0, r2, r0
   19b3a:	408a      	lsls	r2, r1
   19b3c:	691d      	ldr	r5, [r3, #16]
   19b3e:	4328      	orrs	r0, r5
   19b40:	6118      	str	r0, [r3, #16]
   19b42:	f5a3 33a0 	sub.w	r3, r3, #81920	; 0x14000
   19b46:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
   19b48:	4302      	orrs	r2, r0
   19b4a:	64da      	str	r2, [r3, #76]	; 0x4c
   19b4c:	4620      	mov	r0, r4
   19b4e:	bd70      	pop	{r4, r5, r6, pc}
   19b50:	2007c9c4 	.word	0x2007c9c4
   19b54:	40018000 	.word	0x40018000
   19b58:	4002c000 	.word	0x4002c000

00019b5c <PWM::set(float)>:
_ZN3PWM3setEf():
   19b5c:	b538      	push	{r3, r4, r5, lr}
   19b5e:	4605      	mov	r5, r0
   19b60:	460c      	mov	r4, r1
   19b62:	4608      	mov	r0, r1
   19b64:	491a      	ldr	r1, [pc, #104]	; (19bd0 <PWM::set(float)+0x74>)
   19b66:	f003 fcbb 	bl	1d4e0 <__aeabi_fcmpgt>
   19b6a:	2800      	cmp	r0, #0
   19b6c:	d12e      	bne.n	19bcc <PWM::set(float)+0x70>
   19b6e:	4b19      	ldr	r3, [pc, #100]	; (19bd4 <PWM::set(float)+0x78>)
   19b70:	6818      	ldr	r0, [r3, #0]
   19b72:	f003 faa1 	bl	1d0b8 <__aeabi_ui2f>
   19b76:	4601      	mov	r1, r0
   19b78:	4620      	mov	r0, r4
   19b7a:	f003 faf5 	bl	1d168 <__aeabi_fmul>
   19b7e:	4914      	ldr	r1, [pc, #80]	; (19bd0 <PWM::set(float)+0x74>)
   19b80:	f003 fba6 	bl	1d2d0 <__aeabi_fdiv>
   19b84:	f003 fcdc 	bl	1d540 <__aeabi_f2uiz>
   19b88:	782a      	ldrb	r2, [r5, #0]
   19b8a:	2a05      	cmp	r2, #5
   19b8c:	d81e      	bhi.n	19bcc <PWM::set(float)+0x70>
   19b8e:	e8df f002 	tbb	[pc, r2]
   19b92:	0603      	.short	0x0603
   19b94:	120f0c09 	.word	0x120f0c09
   19b98:	490f      	ldr	r1, [pc, #60]	; (19bd8 <PWM::set(float)+0x7c>)
   19b9a:	61c8      	str	r0, [r1, #28]
   19b9c:	e00d      	b.n	19bba <PWM::set(float)+0x5e>
   19b9e:	490e      	ldr	r1, [pc, #56]	; (19bd8 <PWM::set(float)+0x7c>)
   19ba0:	6208      	str	r0, [r1, #32]
   19ba2:	e00a      	b.n	19bba <PWM::set(float)+0x5e>
   19ba4:	490c      	ldr	r1, [pc, #48]	; (19bd8 <PWM::set(float)+0x7c>)
   19ba6:	6248      	str	r0, [r1, #36]	; 0x24
   19ba8:	e007      	b.n	19bba <PWM::set(float)+0x5e>
   19baa:	490b      	ldr	r1, [pc, #44]	; (19bd8 <PWM::set(float)+0x7c>)
   19bac:	6408      	str	r0, [r1, #64]	; 0x40
   19bae:	e004      	b.n	19bba <PWM::set(float)+0x5e>
   19bb0:	4909      	ldr	r1, [pc, #36]	; (19bd8 <PWM::set(float)+0x7c>)
   19bb2:	6448      	str	r0, [r1, #68]	; 0x44
   19bb4:	e001      	b.n	19bba <PWM::set(float)+0x5e>
   19bb6:	4908      	ldr	r1, [pc, #32]	; (19bd8 <PWM::set(float)+0x7c>)
   19bb8:	6488      	str	r0, [r1, #72]	; 0x48
   19bba:	2001      	movs	r0, #1
   19bbc:	3201      	adds	r2, #1
   19bbe:	fa00 f202 	lsl.w	r2, r0, r2
   19bc2:	4b05      	ldr	r3, [pc, #20]	; (19bd8 <PWM::set(float)+0x7c>)
   19bc4:	6d19      	ldr	r1, [r3, #80]	; 0x50
   19bc6:	430a      	orrs	r2, r1
   19bc8:	651a      	str	r2, [r3, #80]	; 0x50
   19bca:	bd38      	pop	{r3, r4, r5, pc}
   19bcc:	2000      	movs	r0, #0
   19bce:	bd38      	pop	{r3, r4, r5, pc}
   19bd0:	42c80000 	.word	0x42c80000
   19bd4:	2007c9c4 	.word	0x2007c9c4
   19bd8:	40018000 	.word	0x40018000

00019bdc <RIT_IRQHandler>:
RIT_IRQHandler():
   19bdc:	b508      	push	{r3, lr}
   19bde:	4b04      	ldr	r3, [pc, #16]	; (19bf0 <RIT_IRQHandler+0x14>)
   19be0:	681b      	ldr	r3, [r3, #0]
   19be2:	4798      	blx	r3
   19be4:	4b03      	ldr	r3, [pc, #12]	; (19bf4 <RIT_IRQHandler+0x18>)
   19be6:	7a1a      	ldrb	r2, [r3, #8]
   19be8:	f042 0201 	orr.w	r2, r2, #1
   19bec:	721a      	strb	r2, [r3, #8]
   19bee:	bd08      	pop	{r3, pc}
   19bf0:	2007c9c8 	.word	0x2007c9c8
   19bf4:	400b0000 	.word	0x400b0000

00019bf8 <lpc_timer_get_struct>:
lpc_timer_get_struct():
   19bf8:	b530      	push	{r4, r5, lr}
   19bfa:	4b06      	ldr	r3, [pc, #24]	; (19c14 <lpc_timer_get_struct+0x1c>)
   19bfc:	b085      	sub	sp, #20
   19bfe:	ad04      	add	r5, sp, #16
   19c00:	4604      	mov	r4, r0
   19c02:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
   19c04:	e905 000f 	stmdb	r5, {r0, r1, r2, r3}
   19c08:	eb05 0484 	add.w	r4, r5, r4, lsl #2
   19c0c:	f854 0c10 	ldr.w	r0, [r4, #-16]
   19c10:	b005      	add	sp, #20
   19c12:	bd30      	pop	{r4, r5, pc}
   19c14:	00026944 	.word	0x00026944

00019c18 <lpc_timer_enable>:
lpc_timer_enable():
   19c18:	b573      	push	{r0, r1, r4, r5, r6, lr}
   19c1a:	460e      	mov	r6, r1
   19c1c:	4605      	mov	r5, r0
   19c1e:	f7ff ffeb 	bl	19bf8 <lpc_timer_get_struct>
   19c22:	4b0f      	ldr	r3, [pc, #60]	; (19c60 <lpc_timer_enable+0x48>)
   19c24:	4604      	mov	r4, r0
   19c26:	6818      	ldr	r0, [r3, #0]
   19c28:	ab02      	add	r3, sp, #8
   19c2a:	441d      	add	r5, r3
   19c2c:	9000      	str	r0, [sp, #0]
   19c2e:	9001      	str	r0, [sp, #4]
   19c30:	2101      	movs	r1, #1
   19c32:	f815 0c08 	ldrb.w	r0, [r5, #-8]
   19c36:	f002 f951 	bl	1bedc <lpc_pconp>
   19c3a:	f815 0c04 	ldrb.w	r0, [r5, #-4]
   19c3e:	2101      	movs	r1, #1
   19c40:	f002 f964 	bl	1bf0c <lpc_pclk>
   19c44:	2300      	movs	r3, #0
   19c46:	2201      	movs	r2, #1
   19c48:	60a3      	str	r3, [r4, #8]
   19c4a:	6062      	str	r2, [r4, #4]
   19c4c:	6723      	str	r3, [r4, #112]	; 0x70
   19c4e:	f002 fb21 	bl	1c294 <sys_get_cpu_clock>
   19c52:	4b04      	ldr	r3, [pc, #16]	; (19c64 <lpc_timer_enable+0x4c>)
   19c54:	fbb0 f0f3 	udiv	r0, r0, r3
   19c58:	4346      	muls	r6, r0
   19c5a:	60e6      	str	r6, [r4, #12]
   19c5c:	b002      	add	sp, #8
   19c5e:	bd70      	pop	{r4, r5, r6, pc}
   19c60:	00026954 	.word	0x00026954
   19c64:	000f4240 	.word	0x000f4240

00019c68 <NordicStream::flush()>:
_ZN12NordicStream5flushEv():
   19c68:	b5f0      	push	{r4, r5, r6, r7, lr}
   19c6a:	f890 5053 	ldrb.w	r5, [r0, #83]	; 0x53
   19c6e:	b08b      	sub	sp, #44	; 0x2c
   19c70:	4604      	mov	r4, r0
   19c72:	b905      	cbnz	r5, 19c76 <NordicStream::flush()+0xe>
   19c74:	7c45      	ldrb	r5, [r0, #17]
   19c76:	4628      	mov	r0, r5
   19c78:	f7fa fc60 	bl	1453c <mesh_get_max_timeout_before_packet_fails>
   19c7c:	f894 2054 	ldrb.w	r2, [r4, #84]	; 0x54
   19c80:	2600      	movs	r6, #0
   19c82:	4607      	mov	r7, r0
   19c84:	f894 3052 	ldrb.w	r3, [r4, #82]	; 0x52
   19c88:	9200      	str	r2, [sp, #0]
   19c8a:	f884 6052 	strb.w	r6, [r4, #82]	; 0x52
   19c8e:	4628      	mov	r0, r5
   19c90:	2101      	movs	r1, #1
   19c92:	f104 023a 	add.w	r2, r4, #58	; 0x3a
   19c96:	f7fa fa8d 	bl	141b4 <mesh_send>
   19c9a:	b908      	cbnz	r0, 19ca0 <NordicStream::flush()+0x38>
   19c9c:	2000      	movs	r0, #0
   19c9e:	e011      	b.n	19cc4 <NordicStream::flush()+0x5c>
   19ca0:	a802      	add	r0, sp, #8
   19ca2:	4639      	mov	r1, r7
   19ca4:	f7fb f800 	bl	14ca8 <wireless_get_ack_pkt>
   19ca8:	2800      	cmp	r0, #0
   19caa:	d0f7      	beq.n	19c9c <NordicStream::flush()+0x34>
   19cac:	f89d 300c 	ldrb.w	r3, [sp, #12]
   19cb0:	099b      	lsrs	r3, r3, #6
   19cb2:	2b03      	cmp	r3, #3
   19cb4:	d105      	bne.n	19cc2 <NordicStream::flush()+0x5a>
   19cb6:	f89d 0008 	ldrb.w	r0, [sp, #8]
   19cba:	1b43      	subs	r3, r0, r5
   19cbc:	4258      	negs	r0, r3
   19cbe:	4158      	adcs	r0, r3
   19cc0:	e000      	b.n	19cc4 <NordicStream::flush()+0x5c>
   19cc2:	4630      	mov	r0, r6
   19cc4:	b00b      	add	sp, #44	; 0x2c
   19cc6:	bdf0      	pop	{r4, r5, r6, r7, pc}

00019cc8 <NordicStream::~NordicStream()>:
_ZN12NordicStreamD2Ev():
   19cc8:	b510      	push	{r4, lr}
   19cca:	4b03      	ldr	r3, [pc, #12]	; (19cd8 <NordicStream::~NordicStream()+0x10>)
   19ccc:	4604      	mov	r4, r0
   19cce:	6003      	str	r3, [r0, #0]
   19cd0:	f000 fa96 	bl	1a200 <CharDev::~CharDev()>
   19cd4:	4620      	mov	r0, r4
   19cd6:	bd10      	pop	{r4, pc}
   19cd8:	000269a0 	.word	0x000269a0

00019cdc <NordicStream::~NordicStream()>:
_ZN12NordicStreamD0Ev():
   19cdc:	b510      	push	{r4, lr}
   19cde:	4604      	mov	r4, r0
   19ce0:	f7ff fff2 	bl	19cc8 <NordicStream::~NordicStream()>
   19ce4:	4620      	mov	r0, r4
   19ce6:	f7f6 fac5 	bl	10274 <operator delete(void*)>
   19cea:	4620      	mov	r0, r4
   19cec:	bd10      	pop	{r4, pc}

00019cee <NordicStream::putChar(char, unsigned int)>:
_ZN12NordicStream7putCharEcj():
   19cee:	b510      	push	{r4, lr}
   19cf0:	f890 4052 	ldrb.w	r4, [r0, #82]	; 0x52
   19cf4:	1c62      	adds	r2, r4, #1
   19cf6:	b2d2      	uxtb	r2, r2
   19cf8:	4404      	add	r4, r0
   19cfa:	2a17      	cmp	r2, #23
   19cfc:	f880 2052 	strb.w	r2, [r0, #82]	; 0x52
   19d00:	f884 103a 	strb.w	r1, [r4, #58]	; 0x3a
   19d04:	d902      	bls.n	19d0c <NordicStream::putChar(char, unsigned int)+0x1e>
   19d06:	6803      	ldr	r3, [r0, #0]
   19d08:	689b      	ldr	r3, [r3, #8]
   19d0a:	4798      	blx	r3
   19d0c:	2001      	movs	r0, #1
   19d0e:	bd10      	pop	{r4, pc}

00019d10 <NordicStream::getChar(char*, unsigned int)>:
_ZN12NordicStream7getCharEPcj():
   19d10:	b538      	push	{r3, r4, r5, lr}
   19d12:	460d      	mov	r5, r1
   19d14:	7e03      	ldrb	r3, [r0, #24]
   19d16:	f890 1031 	ldrb.w	r1, [r0, #49]	; 0x31
   19d1a:	4604      	mov	r4, r0
   19d1c:	4299      	cmp	r1, r3
   19d1e:	d309      	bcc.n	19d34 <NordicStream::getChar(char*, unsigned int)+0x24>
   19d20:	3011      	adds	r0, #17
   19d22:	4611      	mov	r1, r2
   19d24:	f7fa ffb6 	bl	14c94 <wireless_get_rx_pkt>
   19d28:	b168      	cbz	r0, 19d46 <NordicStream::getChar(char*, unsigned int)+0x36>
   19d2a:	7e20      	ldrb	r0, [r4, #24]
   19d2c:	2300      	movs	r3, #0
   19d2e:	f884 3031 	strb.w	r3, [r4, #49]	; 0x31
   19d32:	b140      	cbz	r0, 19d46 <NordicStream::getChar(char*, unsigned int)+0x36>
   19d34:	f894 3031 	ldrb.w	r3, [r4, #49]	; 0x31
   19d38:	2001      	movs	r0, #1
   19d3a:	1c5a      	adds	r2, r3, #1
   19d3c:	f884 2031 	strb.w	r2, [r4, #49]	; 0x31
   19d40:	441c      	add	r4, r3
   19d42:	7e63      	ldrb	r3, [r4, #25]
   19d44:	702b      	strb	r3, [r5, #0]
   19d46:	bd38      	pop	{r3, r4, r5, pc}

00019d48 <NordicStream::NordicStream()>:
_ZN12NordicStreamC1Ev():
   19d48:	b570      	push	{r4, r5, r6, lr}
   19d4a:	4604      	mov	r4, r0
   19d4c:	f000 faf6 	bl	1a33c <CharDev::CharDev()>
   19d50:	4b0c      	ldr	r3, [pc, #48]	; (19d84 <NordicStream::NordicStream()+0x3c>)
   19d52:	2500      	movs	r5, #0
   19d54:	6023      	str	r3, [r4, #0]
   19d56:	2621      	movs	r6, #33	; 0x21
   19d58:	2303      	movs	r3, #3
   19d5a:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
   19d5e:	4629      	mov	r1, r5
   19d60:	4632      	mov	r2, r6
   19d62:	f884 5053 	strb.w	r5, [r4, #83]	; 0x53
   19d66:	f104 0011 	add.w	r0, r4, #17
   19d6a:	f004 f880 	bl	1de6e <memset>
   19d6e:	4629      	mov	r1, r5
   19d70:	4632      	mov	r2, r6
   19d72:	f104 0032 	add.w	r0, r4, #50	; 0x32
   19d76:	f004 f87a 	bl	1de6e <memset>
   19d7a:	2007      	movs	r0, #7
   19d7c:	f7fa f8ec 	bl	13f58 <mesh_set_retry_count>
   19d80:	4620      	mov	r0, r4
   19d82:	bd70      	pop	{r4, r5, r6, pc}
   19d84:	000269a0 	.word	0x000269a0

00019d88 <rtc_gettime>:
rtc_gettime():
   19d88:	b5f0      	push	{r4, r5, r6, r7, lr}
   19d8a:	4b13      	ldr	r3, [pc, #76]	; (19dd8 <rtc_gettime+0x50>)
   19d8c:	b087      	sub	sp, #28
   19d8e:	4607      	mov	r7, r0
   19d90:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
   19d94:	e88d 0007 	stmia.w	sp, {r0, r1, r2}
   19d98:	ad03      	add	r5, sp, #12
   19d9a:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
   19d9e:	e885 0007 	stmia.w	r5, {r0, r1, r2}
   19da2:	466c      	mov	r4, sp
   19da4:	461e      	mov	r6, r3
   19da6:	4668      	mov	r0, sp
   19da8:	4629      	mov	r1, r5
   19daa:	220c      	movs	r2, #12
   19dac:	f004 f82c 	bl	1de08 <memcmp>
   19db0:	b140      	cbz	r0, 19dc4 <rtc_gettime+0x3c>
   19db2:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
   19db6:	e884 0007 	stmia.w	r4, {r0, r1, r2}
   19dba:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
   19dbe:	e885 0007 	stmia.w	r5, {r0, r1, r2}
   19dc2:	e7f0      	b.n	19da6 <rtc_gettime+0x1e>
   19dc4:	466c      	mov	r4, sp
   19dc6:	cc03      	ldmia	r4!, {r0, r1}
   19dc8:	6038      	str	r0, [r7, #0]
   19dca:	6820      	ldr	r0, [r4, #0]
   19dcc:	6079      	str	r1, [r7, #4]
   19dce:	60b8      	str	r0, [r7, #8]
   19dd0:	4638      	mov	r0, r7
   19dd2:	b007      	add	sp, #28
   19dd4:	bdf0      	pop	{r4, r5, r6, r7, pc}
   19dd6:	bf00      	nop
   19dd8:	40024014 	.word	0x40024014

00019ddc <rtc_settime>:
rtc_settime():
   19ddc:	4b18      	ldr	r3, [pc, #96]	; (19e40 <rtc_settime+0x64>)
   19dde:	2200      	movs	r2, #0
   19de0:	721a      	strb	r2, [r3, #8]
   19de2:	7802      	ldrb	r2, [r0, #0]
   19de4:	f3c2 0205 	ubfx	r2, r2, #0, #6
   19de8:	f883 2020 	strb.w	r2, [r3, #32]
   19dec:	7842      	ldrb	r2, [r0, #1]
   19dee:	f3c2 0205 	ubfx	r2, r2, #0, #6
   19df2:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
   19df6:	7882      	ldrb	r2, [r0, #2]
   19df8:	f3c2 0204 	ubfx	r2, r2, #0, #5
   19dfc:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
   19e00:	78c2      	ldrb	r2, [r0, #3]
   19e02:	f3c2 0202 	ubfx	r2, r2, #0, #3
   19e06:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
   19e0a:	7902      	ldrb	r2, [r0, #4]
   19e0c:	f3c2 0204 	ubfx	r2, r2, #0, #5
   19e10:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
   19e14:	7942      	ldrb	r2, [r0, #5]
   19e16:	f3c2 0203 	ubfx	r2, r2, #0, #4
   19e1a:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
   19e1e:	79c2      	ldrb	r2, [r0, #7]
   19e20:	7981      	ldrb	r1, [r0, #6]
   19e22:	f002 020f 	and.w	r2, r2, #15
   19e26:	ea41 2202 	orr.w	r2, r1, r2, lsl #8
   19e2a:	879a      	strh	r2, [r3, #60]	; 0x3c
   19e2c:	7a42      	ldrb	r2, [r0, #9]
   19e2e:	7a01      	ldrb	r1, [r0, #8]
   19e30:	f002 020f 	and.w	r2, r2, #15
   19e34:	ea41 2202 	orr.w	r2, r1, r2, lsl #8
   19e38:	869a      	strh	r2, [r3, #52]	; 0x34
   19e3a:	2201      	movs	r2, #1
   19e3c:	721a      	strb	r2, [r3, #8]
   19e3e:	4770      	bx	lr
   19e40:	40024000 	.word	0x40024000

00019e44 <rtc_init>:
rtc_init():
   19e44:	b51f      	push	{r0, r1, r2, r3, r4, lr}
   19e46:	2009      	movs	r0, #9
   19e48:	2101      	movs	r1, #1
   19e4a:	f002 f847 	bl	1bedc <lpc_pconp>
   19e4e:	4b30      	ldr	r3, [pc, #192]	; (19f10 <rtc_init+0xcc>)
   19e50:	2201      	movs	r2, #1
   19e52:	721a      	strb	r2, [r3, #8]
   19e54:	a801      	add	r0, sp, #4
   19e56:	f7ff ff97 	bl	19d88 <rtc_gettime>
   19e5a:	f8bd 300a 	ldrh.w	r3, [sp, #10]
   19e5e:	f603 0326 	addw	r3, r3, #2086	; 0x826
   19e62:	f3c3 030b 	ubfx	r3, r3, #0, #12
   19e66:	2b0f      	cmp	r3, #15
   19e68:	d81e      	bhi.n	19ea8 <rtc_init+0x64>
   19e6a:	f89d 3005 	ldrb.w	r3, [sp, #5]
   19e6e:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   19e72:	2b3b      	cmp	r3, #59	; 0x3b
   19e74:	dc18      	bgt.n	19ea8 <rtc_init+0x64>
   19e76:	f89d 3004 	ldrb.w	r3, [sp, #4]
   19e7a:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   19e7e:	2b3b      	cmp	r3, #59	; 0x3b
   19e80:	dc12      	bgt.n	19ea8 <rtc_init+0x64>
   19e82:	f89d 3006 	ldrb.w	r3, [sp, #6]
   19e86:	f003 031f 	and.w	r3, r3, #31
   19e8a:	2b17      	cmp	r3, #23
   19e8c:	dc0c      	bgt.n	19ea8 <rtc_init+0x64>
   19e8e:	f8bd 300c 	ldrh.w	r3, [sp, #12]
   19e92:	f3c3 030b 	ubfx	r3, r3, #0, #12
   19e96:	f5b3 7fb7 	cmp.w	r3, #366	; 0x16e
   19e9a:	da05      	bge.n	19ea8 <rtc_init+0x64>
   19e9c:	f89d 3009 	ldrb.w	r3, [sp, #9]
   19ea0:	f003 030f 	and.w	r3, r3, #15
   19ea4:	2b0c      	cmp	r3, #12
   19ea6:	dd2f      	ble.n	19f08 <rtc_init+0xc4>
   19ea8:	f89d 3008 	ldrb.w	r3, [sp, #8]
   19eac:	2201      	movs	r2, #1
   19eae:	f362 0304 	bfi	r3, r2, #0, #5
   19eb2:	f88d 3008 	strb.w	r3, [sp, #8]
   19eb6:	f89d 3009 	ldrb.w	r3, [sp, #9]
   19eba:	a801      	add	r0, sp, #4
   19ebc:	f362 0303 	bfi	r3, r2, #0, #4
   19ec0:	f88d 3009 	strb.w	r3, [sp, #9]
   19ec4:	f8bd 300a 	ldrh.w	r3, [sp, #10]
   19ec8:	f240 72da 	movw	r2, #2010	; 0x7da
   19ecc:	f362 030b 	bfi	r3, r2, #0, #12
   19ed0:	f8ad 300a 	strh.w	r3, [sp, #10]
   19ed4:	f89d 3007 	ldrb.w	r3, [sp, #7]
   19ed8:	f36f 0302 	bfc	r3, #0, #3
   19edc:	f88d 3007 	strb.w	r3, [sp, #7]
   19ee0:	f89d 3006 	ldrb.w	r3, [sp, #6]
   19ee4:	f36f 0304 	bfc	r3, #0, #5
   19ee8:	f88d 3006 	strb.w	r3, [sp, #6]
   19eec:	f89d 3005 	ldrb.w	r3, [sp, #5]
   19ef0:	f36f 0305 	bfc	r3, #0, #6
   19ef4:	f88d 3005 	strb.w	r3, [sp, #5]
   19ef8:	f89d 3004 	ldrb.w	r3, [sp, #4]
   19efc:	f36f 0305 	bfc	r3, #0, #6
   19f00:	f88d 3004 	strb.w	r3, [sp, #4]
   19f04:	f7ff ff6a 	bl	19ddc <rtc_settime>
   19f08:	b005      	add	sp, #20
   19f0a:	f85d fb04 	ldr.w	pc, [sp], #4
   19f0e:	bf00      	nop
   19f10:	40024000 	.word	0x40024000

00019f14 <rtc_get_date_time_str>:
rtc_get_date_time_str():
   19f14:	b507      	push	{r0, r1, r2, lr}
   19f16:	a801      	add	r0, sp, #4
   19f18:	f006 fa62 	bl	203e0 <time>
   19f1c:	a801      	add	r0, sp, #4
   19f1e:	f003 fe1a 	bl	1db56 <ctime>
   19f22:	b003      	add	sp, #12
   19f24:	f85d fb04 	ldr.w	pc, [sp], #4

00019f28 <ssp1_dma_init>:
ssp1_dma_init():
   19f28:	b508      	push	{r3, lr}
   19f2a:	201d      	movs	r0, #29
   19f2c:	2101      	movs	r1, #1
   19f2e:	f001 ffd5 	bl	1bedc <lpc_pconp>
   19f32:	4b03      	ldr	r3, [pc, #12]	; (19f40 <ssp1_dma_init+0x18>)
   19f34:	2201      	movs	r2, #1
   19f36:	631a      	str	r2, [r3, #48]	; 0x30
   19f38:	6b1a      	ldr	r2, [r3, #48]	; 0x30
   19f3a:	07d2      	lsls	r2, r2, #31
   19f3c:	d5fc      	bpl.n	19f38 <ssp1_dma_init+0x10>
   19f3e:	bd08      	pop	{r3, pc}
   19f40:	50004000 	.word	0x50004000

00019f44 <ssp1_dma_transfer_block>:
ssp1_dma_transfer_block():
   19f44:	b573      	push	{r0, r1, r4, r5, r6, lr}
   19f46:	f04f 33ff 	mov.w	r3, #4294967295
   19f4a:	f5b1 5f80 	cmp.w	r1, #4096	; 0x1000
   19f4e:	9301      	str	r3, [sp, #4]
   19f50:	d24a      	bcs.n	19fe8 <ssp1_dma_transfer_block+0xa4>
   19f52:	4c28      	ldr	r4, [pc, #160]	; (19ff4 <ssp1_dma_transfer_block+0xb0>)
   19f54:	6923      	ldr	r3, [r4, #16]
   19f56:	07db      	lsls	r3, r3, #31
   19f58:	d448      	bmi.n	19fec <ssp1_dma_transfer_block+0xa8>
   19f5a:	4b27      	ldr	r3, [pc, #156]	; (19ff8 <ssp1_dma_transfer_block+0xb4>)
   19f5c:	691b      	ldr	r3, [r3, #16]
   19f5e:	07de      	lsls	r6, r3, #31
   19f60:	d444      	bmi.n	19fec <ssp1_dma_transfer_block+0xa8>
   19f62:	4b26      	ldr	r3, [pc, #152]	; (19ffc <ssp1_dma_transfer_block+0xb8>)
   19f64:	68dd      	ldr	r5, [r3, #12]
   19f66:	076d      	lsls	r5, r5, #29
   19f68:	d501      	bpl.n	19f6e <ssp1_dma_transfer_block+0x2a>
   19f6a:	689b      	ldr	r3, [r3, #8]
   19f6c:	e7f9      	b.n	19f62 <ssp1_dma_transfer_block+0x1e>
   19f6e:	4b24      	ldr	r3, [pc, #144]	; (1a000 <ssp1_dma_transfer_block+0xbc>)
   19f70:	2503      	movs	r5, #3
   19f72:	609d      	str	r5, [r3, #8]
   19f74:	611d      	str	r5, [r3, #16]
   19f76:	4d23      	ldr	r5, [pc, #140]	; (1a004 <ssp1_dma_transfer_block+0xc0>)
   19f78:	f503 7390 	add.w	r3, r3, #288	; 0x120
   19f7c:	6025      	str	r5, [r4, #0]
   19f7e:	b122      	cbz	r2, 19f8a <ssp1_dma_transfer_block+0x46>
   19f80:	ae01      	add	r6, sp, #4
   19f82:	605e      	str	r6, [r3, #4]
   19f84:	f041 4600 	orr.w	r6, r1, #2147483648	; 0x80000000
   19f88:	e002      	b.n	19f90 <ssp1_dma_transfer_block+0x4c>
   19f8a:	6058      	str	r0, [r3, #4]
   19f8c:	f041 4608 	orr.w	r6, r1, #2281701376	; 0x88000000
   19f90:	60de      	str	r6, [r3, #12]
   19f92:	2300      	movs	r3, #0
   19f94:	60a3      	str	r3, [r4, #8]
   19f96:	f241 0306 	movw	r3, #4102	; 0x1006
   19f9a:	6123      	str	r3, [r4, #16]
   19f9c:	4b16      	ldr	r3, [pc, #88]	; (19ff8 <ssp1_dma_transfer_block+0xb4>)
   19f9e:	b11a      	cbz	r2, 19fa8 <ssp1_dma_transfer_block+0x64>
   19fa0:	6018      	str	r0, [r3, #0]
   19fa2:	f041 6180 	orr.w	r1, r1, #67108864	; 0x4000000
   19fa6:	e001      	b.n	19fac <ssp1_dma_transfer_block+0x68>
   19fa8:	aa01      	add	r2, sp, #4
   19faa:	601a      	str	r2, [r3, #0]
   19fac:	2200      	movs	r2, #0
   19fae:	60d9      	str	r1, [r3, #12]
   19fb0:	605d      	str	r5, [r3, #4]
   19fb2:	609a      	str	r2, [r3, #8]
   19fb4:	f44f 6208 	mov.w	r2, #2176	; 0x880
   19fb8:	611a      	str	r2, [r3, #16]
   19fba:	6922      	ldr	r2, [r4, #16]
   19fbc:	f042 0201 	orr.w	r2, r2, #1
   19fc0:	6122      	str	r2, [r4, #16]
   19fc2:	691a      	ldr	r2, [r3, #16]
   19fc4:	f042 0201 	orr.w	r2, r2, #1
   19fc8:	611a      	str	r2, [r3, #16]
   19fca:	4b0c      	ldr	r3, [pc, #48]	; (19ffc <ssp1_dma_transfer_block+0xb8>)
   19fcc:	6a5a      	ldr	r2, [r3, #36]	; 0x24
   19fce:	f042 0203 	orr.w	r2, r2, #3
   19fd2:	625a      	str	r2, [r3, #36]	; 0x24
   19fd4:	68e0      	ldr	r0, [r4, #12]
   19fd6:	f3c0 000b 	ubfx	r0, r0, #0, #12
   19fda:	2800      	cmp	r0, #0
   19fdc:	d1fa      	bne.n	19fd4 <ssp1_dma_transfer_block+0x90>
   19fde:	6a5a      	ldr	r2, [r3, #36]	; 0x24
   19fe0:	f022 0203 	bic.w	r2, r2, #3
   19fe4:	625a      	str	r2, [r3, #36]	; 0x24
   19fe6:	e002      	b.n	19fee <ssp1_dma_transfer_block+0xaa>
   19fe8:	2001      	movs	r0, #1
   19fea:	e000      	b.n	19fee <ssp1_dma_transfer_block+0xaa>
   19fec:	2002      	movs	r0, #2
   19fee:	b002      	add	sp, #8
   19ff0:	bd70      	pop	{r4, r5, r6, pc}
   19ff2:	bf00      	nop
   19ff4:	50004120 	.word	0x50004120
   19ff8:	50004100 	.word	0x50004100
   19ffc:	40030000 	.word	0x40030000
   1a000:	50004000 	.word	0x50004000
   1a004:	40030008 	.word	0x40030008

0001a008 <spi1_lock>:
spi1_lock():
   1a008:	b510      	push	{r4, lr}
   1a00a:	4c0a      	ldr	r4, [pc, #40]	; (1a034 <spi1_lock+0x2c>)
   1a00c:	6823      	ldr	r3, [r4, #0]
   1a00e:	b91b      	cbnz	r3, 1a018 <spi1_lock+0x10>
   1a010:	2001      	movs	r0, #1
   1a012:	f000 fe6a 	bl	1acea <xQueueCreateMutex>
   1a016:	6020      	str	r0, [r4, #0]
   1a018:	f001 fc38 	bl	1b88c <xTaskGetSchedulerState>
   1a01c:	2802      	cmp	r0, #2
   1a01e:	d108      	bne.n	1a032 <spi1_lock+0x2a>
   1a020:	2100      	movs	r1, #0
   1a022:	6820      	ldr	r0, [r4, #0]
   1a024:	f04f 32ff 	mov.w	r2, #4294967295
   1a028:	460b      	mov	r3, r1
   1a02a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   1a02e:	f000 bebb 	b.w	1ada8 <xQueueGenericReceive>
   1a032:	bd10      	pop	{r4, pc}
   1a034:	2007c9cc 	.word	0x2007c9cc

0001a038 <spi1_unlock>:
spi1_unlock():
   1a038:	b510      	push	{r4, lr}
   1a03a:	f001 fc27 	bl	1b88c <xTaskGetSchedulerState>
   1a03e:	2802      	cmp	r0, #2
   1a040:	d108      	bne.n	1a054 <spi1_unlock+0x1c>
   1a042:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   1a046:	4b04      	ldr	r3, [pc, #16]	; (1a058 <spi1_unlock+0x20>)
   1a048:	2100      	movs	r1, #0
   1a04a:	6818      	ldr	r0, [r3, #0]
   1a04c:	460a      	mov	r2, r1
   1a04e:	460b      	mov	r3, r1
   1a050:	f000 bdda 	b.w	1ac08 <xQueueGenericSend>
   1a054:	bd10      	pop	{r4, pc}
   1a056:	bf00      	nop
   1a058:	2007c9cc 	.word	0x2007c9cc

0001a05c <UartDev::~UartDev()>:
_ZN7UartDevD2Ev():
   1a05c:	b510      	push	{r4, lr}
   1a05e:	4b03      	ldr	r3, [pc, #12]	; (1a06c <UartDev::~UartDev()+0x10>)
   1a060:	4604      	mov	r4, r0
   1a062:	6003      	str	r3, [r0, #0]
   1a064:	f000 f8cc 	bl	1a200 <CharDev::~CharDev()>
   1a068:	4620      	mov	r0, r4
   1a06a:	bd10      	pop	{r4, pc}
   1a06c:	00026b70 	.word	0x00026b70

0001a070 <Uart0::~Uart0()>:
_ZN5Uart0D1Ev():
   1a070:	b510      	push	{r4, lr}
   1a072:	4b03      	ldr	r3, [pc, #12]	; (1a080 <Uart0::~Uart0()+0x10>)
   1a074:	4604      	mov	r4, r0
   1a076:	6003      	str	r3, [r0, #0]
   1a078:	f7ff fff0 	bl	1a05c <UartDev::~UartDev()>
   1a07c:	4620      	mov	r0, r4
   1a07e:	bd10      	pop	{r4, pc}
   1a080:	00026a30 	.word	0x00026a30

0001a084 <UartDev::~UartDev()>:
_ZN7UartDevD0Ev():
   1a084:	b510      	push	{r4, lr}
   1a086:	4604      	mov	r4, r0
   1a088:	f7ff ffe8 	bl	1a05c <UartDev::~UartDev()>
   1a08c:	4620      	mov	r0, r4
   1a08e:	f7f6 f8f1 	bl	10274 <operator delete(void*)>
   1a092:	4620      	mov	r0, r4
   1a094:	bd10      	pop	{r4, pc}

0001a096 <Uart0::~Uart0()>:
_ZN5Uart0D0Ev():
   1a096:	b510      	push	{r4, lr}
   1a098:	4604      	mov	r4, r0
   1a09a:	f7ff ffe9 	bl	1a070 <Uart0::~Uart0()>
   1a09e:	4620      	mov	r0, r4
   1a0a0:	f7f6 f8e8 	bl	10274 <operator delete(void*)>
   1a0a4:	4620      	mov	r0, r4
   1a0a6:	bd10      	pop	{r4, pc}

0001a0a8 <Uart0::init(unsigned int, int, int)>:
_ZN5Uart04initEjii():
   1a0a8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
   1a0ac:	4c0e      	ldr	r4, [pc, #56]	; (1a0e8 <Uart0::init(unsigned int, int, int)+0x40>)
   1a0ae:	4698      	mov	r8, r3
   1a0b0:	6823      	ldr	r3, [r4, #0]
   1a0b2:	4607      	mov	r7, r0
   1a0b4:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
   1a0b8:	6023      	str	r3, [r4, #0]
   1a0ba:	6823      	ldr	r3, [r4, #0]
   1a0bc:	460e      	mov	r6, r1
   1a0be:	f043 0350 	orr.w	r3, r3, #80	; 0x50
   1a0c2:	6023      	str	r3, [r4, #0]
   1a0c4:	2101      	movs	r1, #1
   1a0c6:	2003      	movs	r0, #3
   1a0c8:	4615      	mov	r5, r2
   1a0ca:	f001 ff1f 	bl	1bf0c <lpc_pclk>
   1a0ce:	f002 f8e1 	bl	1c294 <sys_get_cpu_clock>
   1a0d2:	f8cd 8000 	str.w	r8, [sp]
   1a0d6:	4601      	mov	r1, r0
   1a0d8:	4632      	mov	r2, r6
   1a0da:	4638      	mov	r0, r7
   1a0dc:	462b      	mov	r3, r5
   1a0de:	f000 fbff 	bl	1a8e0 <UartDev::init(unsigned int, unsigned int, int, int)>
   1a0e2:	b002      	add	sp, #8
   1a0e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1a0e8:	4002c000 	.word	0x4002c000

0001a0ec <Uart0::Uart0()>:
_ZN5Uart0C1Ev():
   1a0ec:	b510      	push	{r4, lr}
   1a0ee:	4904      	ldr	r1, [pc, #16]	; (1a100 <Uart0::Uart0()+0x14>)
   1a0f0:	4604      	mov	r4, r0
   1a0f2:	f000 fbe1 	bl	1a8b8 <UartDev::UartDev(unsigned int*)>
   1a0f6:	4b03      	ldr	r3, [pc, #12]	; (1a104 <Uart0::Uart0()+0x18>)
   1a0f8:	4620      	mov	r0, r4
   1a0fa:	6023      	str	r3, [r4, #0]
   1a0fc:	bd10      	pop	{r4, pc}
   1a0fe:	bf00      	nop
   1a100:	4000c000 	.word	0x4000c000
   1a104:	00026a30 	.word	0x00026a30

0001a108 <UART0_IRQHandler>:
UART0_IRQHandler():
   1a108:	b538      	push	{r3, r4, r5, lr}
   1a10a:	4c07      	ldr	r4, [pc, #28]	; (1a128 <UART0_IRQHandler+0x20>)
   1a10c:	6823      	ldr	r3, [r4, #0]
   1a10e:	b933      	cbnz	r3, 1a11e <UART0_IRQHandler+0x16>
   1a110:	202c      	movs	r0, #44	; 0x2c
   1a112:	f7f6 f8ad 	bl	10270 <operator new(unsigned int)>
   1a116:	4605      	mov	r5, r0
   1a118:	f7ff ffe8 	bl	1a0ec <Uart0::Uart0()>
   1a11c:	6025      	str	r5, [r4, #0]
   1a11e:	6820      	ldr	r0, [r4, #0]
   1a120:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   1a124:	f000 bb6e 	b.w	1a804 <UartDev::handleInterrupt()>
   1a128:	2007c1fc 	.word	0x2007c1fc

0001a12c <Uart2::~Uart2()>:
_ZN5Uart2D2Ev():
   1a12c:	b510      	push	{r4, lr}
   1a12e:	4b03      	ldr	r3, [pc, #12]	; (1a13c <Uart2::~Uart2()+0x10>)
   1a130:	4604      	mov	r4, r0
   1a132:	6003      	str	r3, [r0, #0]
   1a134:	f7ff ff92 	bl	1a05c <UartDev::~UartDev()>
   1a138:	4620      	mov	r0, r4
   1a13a:	bd10      	pop	{r4, pc}
   1a13c:	00026aa0 	.word	0x00026aa0

0001a140 <Uart2::~Uart2()>:
_ZN5Uart2D0Ev():
   1a140:	b510      	push	{r4, lr}
   1a142:	4604      	mov	r4, r0
   1a144:	f7ff fff2 	bl	1a12c <Uart2::~Uart2()>
   1a148:	4620      	mov	r0, r4
   1a14a:	f7f6 f893 	bl	10274 <operator delete(void*)>
   1a14e:	4620      	mov	r0, r4
   1a150:	bd10      	pop	{r4, pc}
	...

0001a154 <Uart2::Uart2()>:
_ZN5Uart2C2Ev():
   1a154:	b510      	push	{r4, lr}
   1a156:	4904      	ldr	r1, [pc, #16]	; (1a168 <Uart2::Uart2()+0x14>)
   1a158:	4604      	mov	r4, r0
   1a15a:	f000 fbad 	bl	1a8b8 <UartDev::UartDev(unsigned int*)>
   1a15e:	4b03      	ldr	r3, [pc, #12]	; (1a16c <Uart2::Uart2()+0x18>)
   1a160:	4620      	mov	r0, r4
   1a162:	6023      	str	r3, [r4, #0]
   1a164:	bd10      	pop	{r4, pc}
   1a166:	bf00      	nop
   1a168:	40098000 	.word	0x40098000
   1a16c:	00026aa0 	.word	0x00026aa0

0001a170 <UART2_IRQHandler>:
UART2_IRQHandler():
   1a170:	b538      	push	{r3, r4, r5, lr}
   1a172:	4c07      	ldr	r4, [pc, #28]	; (1a190 <UART2_IRQHandler+0x20>)
   1a174:	6823      	ldr	r3, [r4, #0]
   1a176:	b933      	cbnz	r3, 1a186 <UART2_IRQHandler+0x16>
   1a178:	202c      	movs	r0, #44	; 0x2c
   1a17a:	f7f6 f879 	bl	10270 <operator new(unsigned int)>
   1a17e:	4605      	mov	r5, r0
   1a180:	f7ff ffe8 	bl	1a154 <Uart2::Uart2()>
   1a184:	6025      	str	r5, [r4, #0]
   1a186:	6820      	ldr	r0, [r4, #0]
   1a188:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   1a18c:	f000 bb3a 	b.w	1a804 <UartDev::handleInterrupt()>
   1a190:	2007c9d0 	.word	0x2007c9d0

0001a194 <Uart3::~Uart3()>:
_ZN5Uart3D1Ev():
   1a194:	b510      	push	{r4, lr}
   1a196:	4b03      	ldr	r3, [pc, #12]	; (1a1a4 <Uart3::~Uart3()+0x10>)
   1a198:	4604      	mov	r4, r0
   1a19a:	6003      	str	r3, [r0, #0]
   1a19c:	f7ff ff5e 	bl	1a05c <UartDev::~UartDev()>
   1a1a0:	4620      	mov	r0, r4
   1a1a2:	bd10      	pop	{r4, pc}
   1a1a4:	00026b10 	.word	0x00026b10

0001a1a8 <Uart3::~Uart3()>:
_ZN5Uart3D0Ev():
   1a1a8:	b510      	push	{r4, lr}
   1a1aa:	4604      	mov	r4, r0
   1a1ac:	f7ff fff2 	bl	1a194 <Uart3::~Uart3()>
   1a1b0:	4620      	mov	r0, r4
   1a1b2:	f7f6 f85f 	bl	10274 <operator delete(void*)>
   1a1b6:	4620      	mov	r0, r4
   1a1b8:	bd10      	pop	{r4, pc}
	...

0001a1bc <Uart3::Uart3()>:
_ZN5Uart3C2Ev():
   1a1bc:	b510      	push	{r4, lr}
   1a1be:	4904      	ldr	r1, [pc, #16]	; (1a1d0 <Uart3::Uart3()+0x14>)
   1a1c0:	4604      	mov	r4, r0
   1a1c2:	f000 fb79 	bl	1a8b8 <UartDev::UartDev(unsigned int*)>
   1a1c6:	4b03      	ldr	r3, [pc, #12]	; (1a1d4 <Uart3::Uart3()+0x18>)
   1a1c8:	4620      	mov	r0, r4
   1a1ca:	6023      	str	r3, [r4, #0]
   1a1cc:	bd10      	pop	{r4, pc}
   1a1ce:	bf00      	nop
   1a1d0:	4009c000 	.word	0x4009c000
   1a1d4:	00026b10 	.word	0x00026b10

0001a1d8 <UART3_IRQHandler>:
UART3_IRQHandler():
   1a1d8:	b538      	push	{r3, r4, r5, lr}
   1a1da:	4c07      	ldr	r4, [pc, #28]	; (1a1f8 <UART3_IRQHandler+0x20>)
   1a1dc:	6823      	ldr	r3, [r4, #0]
   1a1de:	b933      	cbnz	r3, 1a1ee <UART3_IRQHandler+0x16>
   1a1e0:	202c      	movs	r0, #44	; 0x2c
   1a1e2:	f7f6 f845 	bl	10270 <operator new(unsigned int)>
   1a1e6:	4605      	mov	r5, r0
   1a1e8:	f7ff ffe8 	bl	1a1bc <Uart3::Uart3()>
   1a1ec:	6025      	str	r5, [r4, #0]
   1a1ee:	6820      	ldr	r0, [r4, #0]
   1a1f0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   1a1f4:	f000 bb06 	b.w	1a804 <UartDev::handleInterrupt()>
   1a1f8:	2007c9d4 	.word	0x2007c9d4

0001a1fc <CharDev::flush()>:
_ZN7CharDev5flushEv():
   1a1fc:	2001      	movs	r0, #1
   1a1fe:	4770      	bx	lr

0001a200 <CharDev::~CharDev()>:
_ZN7CharDevD2Ev():
   1a200:	4b04      	ldr	r3, [pc, #16]	; (1a214 <CharDev::~CharDev()+0x14>)
   1a202:	b510      	push	{r4, lr}
   1a204:	4604      	mov	r4, r0
   1a206:	6003      	str	r3, [r0, #0]
   1a208:	6840      	ldr	r0, [r0, #4]
   1a20a:	b108      	cbz	r0, 1a210 <CharDev::~CharDev()+0x10>
   1a20c:	f003 fde6 	bl	1dddc <free>
   1a210:	4620      	mov	r0, r4
   1a212:	bd10      	pop	{r4, pc}
   1a214:	00026b30 	.word	0x00026b30

0001a218 <CharDev::~CharDev()>:
_ZN7CharDevD0Ev():
   1a218:	b510      	push	{r4, lr}
   1a21a:	4604      	mov	r4, r0
   1a21c:	f7ff fff0 	bl	1a200 <CharDev::~CharDev()>
   1a220:	4620      	mov	r0, r4
   1a222:	f7f6 f827 	bl	10274 <operator delete(void*)>
   1a226:	4620      	mov	r0, r4
   1a228:	bd10      	pop	{r4, pc}

0001a22a <CharDev::put(char const*, unsigned int)>:
_ZN7CharDev3putEPKcj():
   1a22a:	b570      	push	{r4, r5, r6, lr}
   1a22c:	4605      	mov	r5, r0
   1a22e:	4616      	mov	r6, r2
   1a230:	b159      	cbz	r1, 1a24a <CharDev::put(char const*, unsigned int)+0x20>
   1a232:	1e4c      	subs	r4, r1, #1
   1a234:	f814 1f01 	ldrb.w	r1, [r4, #1]!
   1a238:	b149      	cbz	r1, 1a24e <CharDev::put(char const*, unsigned int)+0x24>
   1a23a:	682b      	ldr	r3, [r5, #0]
   1a23c:	4628      	mov	r0, r5
   1a23e:	685b      	ldr	r3, [r3, #4]
   1a240:	b249      	sxtb	r1, r1
   1a242:	4632      	mov	r2, r6
   1a244:	4798      	blx	r3
   1a246:	2800      	cmp	r0, #0
   1a248:	d1f4      	bne.n	1a234 <CharDev::put(char const*, unsigned int)+0xa>
   1a24a:	2000      	movs	r0, #0
   1a24c:	bd70      	pop	{r4, r5, r6, pc}
   1a24e:	2001      	movs	r0, #1
   1a250:	bd70      	pop	{r4, r5, r6, pc}
	...

0001a254 <CharDev::putline(char const*, unsigned int)>:
_ZN7CharDev7putlineEPKcj():
   1a254:	b538      	push	{r3, r4, r5, lr}
   1a256:	4605      	mov	r5, r0
   1a258:	4614      	mov	r4, r2
   1a25a:	f7ff ffe6 	bl	1a22a <CharDev::put(char const*, unsigned int)>
   1a25e:	4628      	mov	r0, r5
   1a260:	4622      	mov	r2, r4
   1a262:	4902      	ldr	r1, [pc, #8]	; (1a26c <CharDev::putline(char const*, unsigned int)+0x18>)
   1a264:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   1a268:	f7ff bfdf 	b.w	1a22a <CharDev::put(char const*, unsigned int)>
   1a26c:	00026662 	.word	0x00026662

0001a270 <CharDev::gets(char*, int, unsigned int)>:
_ZN7CharDev4getsEPcij():
   1a270:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
   1a274:	2500      	movs	r5, #0
   1a276:	4606      	mov	r6, r0
   1a278:	460c      	mov	r4, r1
   1a27a:	4617      	mov	r7, r2
   1a27c:	4698      	mov	r8, r3
   1a27e:	f88d 5007 	strb.w	r5, [sp, #7]
   1a282:	6831      	ldr	r1, [r6, #0]
   1a284:	4630      	mov	r0, r6
   1a286:	680b      	ldr	r3, [r1, #0]
   1a288:	4642      	mov	r2, r8
   1a28a:	f10d 0107 	add.w	r1, sp, #7
   1a28e:	4798      	blx	r3
   1a290:	b180      	cbz	r0, 1a2b4 <CharDev::gets(char*, int, unsigned int)+0x44>
   1a292:	f89d 0007 	ldrb.w	r0, [sp, #7]
   1a296:	b241      	sxtb	r1, r0
   1a298:	290d      	cmp	r1, #13
   1a29a:	d003      	beq.n	1a2a4 <CharDev::gets(char*, int, unsigned int)+0x34>
   1a29c:	290a      	cmp	r1, #10
   1a29e:	bf1c      	itt	ne
   1a2a0:	7020      	strbne	r0, [r4, #0]
   1a2a2:	3401      	addne	r4, #1
   1a2a4:	3501      	adds	r5, #1
   1a2a6:	42bd      	cmp	r5, r7
   1a2a8:	da03      	bge.n	1a2b2 <CharDev::gets(char*, int, unsigned int)+0x42>
   1a2aa:	290a      	cmp	r1, #10
   1a2ac:	d1e9      	bne.n	1a282 <CharDev::gets(char*, int, unsigned int)+0x12>
   1a2ae:	2001      	movs	r0, #1
   1a2b0:	e000      	b.n	1a2b4 <CharDev::gets(char*, int, unsigned int)+0x44>
   1a2b2:	2000      	movs	r0, #0
   1a2b4:	2d00      	cmp	r5, #0
   1a2b6:	bfc4      	itt	gt
   1a2b8:	2300      	movgt	r3, #0
   1a2ba:	7023      	strbgt	r3, [r4, #0]
   1a2bc:	b002      	add	sp, #8
   1a2be:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0001a2c2 <CharDev::printf(char const*, ...)>:
_ZN7CharDev6printfEPKcz():
   1a2c2:	b40e      	push	{r1, r2, r3}
   1a2c4:	b577      	push	{r0, r1, r2, r4, r5, r6, lr}
   1a2c6:	9e07      	ldr	r6, [sp, #28]
   1a2c8:	4604      	mov	r4, r0
   1a2ca:	f001 fadf 	bl	1b88c <xTaskGetSchedulerState>
   1a2ce:	2802      	cmp	r0, #2
   1a2d0:	d106      	bne.n	1a2e0 <CharDev::printf(char const*, ...)+0x1e>
   1a2d2:	2100      	movs	r1, #0
   1a2d4:	68e0      	ldr	r0, [r4, #12]
   1a2d6:	f04f 32ff 	mov.w	r2, #4294967295
   1a2da:	460b      	mov	r3, r1
   1a2dc:	f000 fd64 	bl	1ada8 <xQueueGenericReceive>
   1a2e0:	ab08      	add	r3, sp, #32
   1a2e2:	9300      	str	r3, [sp, #0]
   1a2e4:	9b00      	ldr	r3, [sp, #0]
   1a2e6:	6860      	ldr	r0, [r4, #4]
   1a2e8:	8921      	ldrh	r1, [r4, #8]
   1a2ea:	4632      	mov	r2, r6
   1a2ec:	9301      	str	r3, [sp, #4]
   1a2ee:	f007 fb87 	bl	21a00 <vsniprintf>
   1a2f2:	8923      	ldrh	r3, [r4, #8]
   1a2f4:	4605      	mov	r5, r0
   1a2f6:	4298      	cmp	r0, r3
   1a2f8:	db0a      	blt.n	1a310 <CharDev::printf(char const*, ...)+0x4e>
   1a2fa:	f020 010f 	bic.w	r1, r0, #15
   1a2fe:	3110      	adds	r1, #16
   1a300:	b289      	uxth	r1, r1
   1a302:	8121      	strh	r1, [r4, #8]
   1a304:	6860      	ldr	r0, [r4, #4]
   1a306:	f004 fb9d 	bl	1ea44 <realloc>
   1a30a:	6060      	str	r0, [r4, #4]
   1a30c:	2800      	cmp	r0, #0
   1a30e:	d1e9      	bne.n	1a2e4 <CharDev::printf(char const*, ...)+0x22>
   1a310:	6861      	ldr	r1, [r4, #4]
   1a312:	f04f 32ff 	mov.w	r2, #4294967295
   1a316:	4620      	mov	r0, r4
   1a318:	f7ff ff87 	bl	1a22a <CharDev::put(char const*, unsigned int)>
   1a31c:	f001 fab6 	bl	1b88c <xTaskGetSchedulerState>
   1a320:	2802      	cmp	r0, #2
   1a322:	d105      	bne.n	1a330 <CharDev::printf(char const*, ...)+0x6e>
   1a324:	2100      	movs	r1, #0
   1a326:	68e0      	ldr	r0, [r4, #12]
   1a328:	460a      	mov	r2, r1
   1a32a:	460b      	mov	r3, r1
   1a32c:	f000 fc6c 	bl	1ac08 <xQueueGenericSend>
   1a330:	4628      	mov	r0, r5
   1a332:	b003      	add	sp, #12
   1a334:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
   1a338:	b003      	add	sp, #12
   1a33a:	4770      	bx	lr

0001a33c <CharDev::CharDev()>:
_ZN7CharDevC2Ev():
   1a33c:	4b06      	ldr	r3, [pc, #24]	; (1a358 <CharDev::CharDev()+0x1c>)
   1a33e:	b510      	push	{r4, lr}
   1a340:	6003      	str	r3, [r0, #0]
   1a342:	2300      	movs	r3, #0
   1a344:	4604      	mov	r4, r0
   1a346:	6043      	str	r3, [r0, #4]
   1a348:	8103      	strh	r3, [r0, #8]
   1a34a:	7403      	strb	r3, [r0, #16]
   1a34c:	2001      	movs	r0, #1
   1a34e:	f000 fccc 	bl	1acea <xQueueCreateMutex>
   1a352:	60e0      	str	r0, [r4, #12]
   1a354:	4620      	mov	r0, r4
   1a356:	bd10      	pop	{r4, pc}
   1a358:	00026b30 	.word	0x00026b30

0001a35c <I2C_Base::transfer(char, char, char*, unsigned int)>:
_ZN8I2C_Base8transferEccPcj():
   1a35c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   1a360:	7944      	ldrb	r4, [r0, #5]
   1a362:	4606      	mov	r6, r0
   1a364:	4689      	mov	r9, r1
   1a366:	4690      	mov	r8, r2
   1a368:	461d      	mov	r5, r3
   1a36a:	9f08      	ldr	r7, [sp, #32]
   1a36c:	2c00      	cmp	r4, #0
   1a36e:	d162      	bne.n	1a436 <I2C_Base::transfer(char, char, char*, unsigned int)+0xda>
   1a370:	2b00      	cmp	r3, #0
   1a372:	d062      	beq.n	1a43a <I2C_Base::transfer(char, char, char*, unsigned int)+0xde>
   1a374:	f001 fa8a 	bl	1b88c <xTaskGetSchedulerState>
   1a378:	2802      	cmp	r0, #2
   1a37a:	d02c      	beq.n	1a3d6 <I2C_Base::transfer(char, char, char*, unsigned int)+0x7a>
   1a37c:	6833      	ldr	r3, [r6, #0]
   1a37e:	2220      	movs	r2, #32
   1a380:	75b4      	strb	r4, [r6, #22]
   1a382:	61b5      	str	r5, [r6, #24]
   1a384:	f886 9014 	strb.w	r9, [r6, #20]
   1a388:	f886 8015 	strb.w	r8, [r6, #21]
   1a38c:	6137      	str	r7, [r6, #16]
   1a38e:	601a      	str	r2, [r3, #0]
   1a390:	f001 fe0a 	bl	1bfa8 <sys_get_uptime_us>
   1a394:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   1a398:	2300      	movs	r3, #0
   1a39a:	f003 f8f1 	bl	1d580 <__aeabi_uldivmod>
   1a39e:	f510 747a 	adds.w	r4, r0, #1000	; 0x3e8
   1a3a2:	f141 0500 	adc.w	r5, r1, #0
   1a3a6:	2100      	movs	r1, #0
   1a3a8:	68f0      	ldr	r0, [r6, #12]
   1a3aa:	460a      	mov	r2, r1
   1a3ac:	460b      	mov	r3, r1
   1a3ae:	f000 fcfb 	bl	1ada8 <xQueueGenericReceive>
   1a3b2:	b950      	cbnz	r0, 1a3ca <I2C_Base::transfer(char, char, char*, unsigned int)+0x6e>
   1a3b4:	f001 fdf8 	bl	1bfa8 <sys_get_uptime_us>
   1a3b8:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   1a3bc:	2300      	movs	r3, #0
   1a3be:	f003 f8df 	bl	1d580 <__aeabi_uldivmod>
   1a3c2:	428d      	cmp	r5, r1
   1a3c4:	bf08      	it	eq
   1a3c6:	4284      	cmpeq	r4, r0
   1a3c8:	d2ed      	bcs.n	1a3a6 <I2C_Base::transfer(char, char, char*, unsigned int)+0x4a>
   1a3ca:	7db4      	ldrb	r4, [r6, #22]
   1a3cc:	f1d4 0401 	rsbs	r4, r4, #1
   1a3d0:	bf38      	it	cc
   1a3d2:	2400      	movcc	r4, #0
   1a3d4:	e032      	b.n	1a43c <I2C_Base::transfer(char, char, char*, unsigned int)+0xe0>
   1a3d6:	68b0      	ldr	r0, [r6, #8]
   1a3d8:	4621      	mov	r1, r4
   1a3da:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   1a3de:	4623      	mov	r3, r4
   1a3e0:	f000 fce2 	bl	1ada8 <xQueueGenericReceive>
   1a3e4:	b328      	cbz	r0, 1a432 <I2C_Base::transfer(char, char, char*, unsigned int)+0xd6>
   1a3e6:	4621      	mov	r1, r4
   1a3e8:	4622      	mov	r2, r4
   1a3ea:	4623      	mov	r3, r4
   1a3ec:	68f0      	ldr	r0, [r6, #12]
   1a3ee:	f000 fcdb 	bl	1ada8 <xQueueGenericReceive>
   1a3f2:	6833      	ldr	r3, [r6, #0]
   1a3f4:	2220      	movs	r2, #32
   1a3f6:	75b4      	strb	r4, [r6, #22]
   1a3f8:	f886 9014 	strb.w	r9, [r6, #20]
   1a3fc:	f886 8015 	strb.w	r8, [r6, #21]
   1a400:	6137      	str	r7, [r6, #16]
   1a402:	61b5      	str	r5, [r6, #24]
   1a404:	68f0      	ldr	r0, [r6, #12]
   1a406:	601a      	str	r2, [r3, #0]
   1a408:	4621      	mov	r1, r4
   1a40a:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   1a40e:	4623      	mov	r3, r4
   1a410:	f000 fcca 	bl	1ada8 <xQueueGenericReceive>
   1a414:	b128      	cbz	r0, 1a422 <I2C_Base::transfer(char, char, char*, unsigned int)+0xc6>
   1a416:	7db4      	ldrb	r4, [r6, #22]
   1a418:	f1d4 0401 	rsbs	r4, r4, #1
   1a41c:	bf38      	it	cc
   1a41e:	2400      	movcc	r4, #0
   1a420:	e000      	b.n	1a424 <I2C_Base::transfer(char, char, char*, unsigned int)+0xc8>
   1a422:	4604      	mov	r4, r0
   1a424:	2100      	movs	r1, #0
   1a426:	68b0      	ldr	r0, [r6, #8]
   1a428:	460a      	mov	r2, r1
   1a42a:	460b      	mov	r3, r1
   1a42c:	f000 fbec 	bl	1ac08 <xQueueGenericSend>
   1a430:	e004      	b.n	1a43c <I2C_Base::transfer(char, char, char*, unsigned int)+0xe0>
   1a432:	4604      	mov	r4, r0
   1a434:	e002      	b.n	1a43c <I2C_Base::transfer(char, char, char*, unsigned int)+0xe0>
   1a436:	2400      	movs	r4, #0
   1a438:	e000      	b.n	1a43c <I2C_Base::transfer(char, char, char*, unsigned int)+0xe0>
   1a43a:	461c      	mov	r4, r3
   1a43c:	4620      	mov	r0, r4
   1a43e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

0001a442 <I2C_Base::readRegisters(char, char, char*, unsigned int)>:
_ZN8I2C_Base13readRegistersEccPcj():
   1a442:	f041 0101 	orr.w	r1, r1, #1
   1a446:	f7ff bf89 	b.w	1a35c <I2C_Base::transfer(char, char, char*, unsigned int)>

0001a44a <I2C_Base::readReg(char, char)>:
_ZN8I2C_Base7readRegEcc():
   1a44a:	b51f      	push	{r0, r1, r2, r3, r4, lr}
   1a44c:	2400      	movs	r4, #0
   1a44e:	ab04      	add	r3, sp, #16
   1a450:	f803 4d01 	strb.w	r4, [r3, #-1]!
   1a454:	2401      	movs	r4, #1
   1a456:	9400      	str	r4, [sp, #0]
   1a458:	f7ff fff3 	bl	1a442 <I2C_Base::readRegisters(char, char, char*, unsigned int)>
   1a45c:	f99d 000f 	ldrsb.w	r0, [sp, #15]
   1a460:	b004      	add	sp, #16
   1a462:	bd10      	pop	{r4, pc}

0001a464 <I2C_Base::writeRegisters(char, char, char*, unsigned int)>:
_ZN8I2C_Base14writeRegistersEccPcj():
   1a464:	f021 0101 	bic.w	r1, r1, #1
   1a468:	f7ff bf78 	b.w	1a35c <I2C_Base::transfer(char, char, char*, unsigned int)>

0001a46c <I2C_Base::writeReg(char, char, char)>:
_ZN8I2C_Base8writeRegEccc():
   1a46c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
   1a46e:	ac04      	add	r4, sp, #16
   1a470:	f804 3d01 	strb.w	r3, [r4, #-1]!
   1a474:	2301      	movs	r3, #1
   1a476:	9300      	str	r3, [sp, #0]
   1a478:	4623      	mov	r3, r4
   1a47a:	f7ff fff3 	bl	1a464 <I2C_Base::writeRegisters(char, char, char*, unsigned int)>
   1a47e:	b004      	add	sp, #16
   1a480:	bd10      	pop	{r4, pc}

0001a482 <I2C_Base::checkDeviceResponse(char)>:
_ZN8I2C_Base19checkDeviceResponseEc():
   1a482:	b51f      	push	{r0, r1, r2, r3, r4, lr}
   1a484:	2200      	movs	r2, #0
   1a486:	ab04      	add	r3, sp, #16
   1a488:	f803 2d01 	strb.w	r2, [r3, #-1]!
   1a48c:	9200      	str	r2, [sp, #0]
   1a48e:	f7ff ffd8 	bl	1a442 <I2C_Base::readRegisters(char, char, char*, unsigned int)>
   1a492:	b005      	add	sp, #20
   1a494:	f85d fb04 	ldr.w	pc, [sp], #4

0001a498 <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)>:
_ZN8I2C_BaseC1EP15LPC_I2C_TypeDef():
   1a498:	b538      	push	{r3, r4, r5, lr}
   1a49a:	2500      	movs	r5, #0
   1a49c:	4604      	mov	r4, r0
   1a49e:	6001      	str	r1, [r0, #0]
   1a4a0:	7145      	strb	r5, [r0, #5]
   1a4a2:	2001      	movs	r0, #1
   1a4a4:	f000 fc21 	bl	1acea <xQueueCreateMutex>
   1a4a8:	4629      	mov	r1, r5
   1a4aa:	60a0      	str	r0, [r4, #8]
   1a4ac:	2203      	movs	r2, #3
   1a4ae:	2001      	movs	r0, #1
   1a4b0:	f000 fb79 	bl	1aba6 <xQueueGenericCreate>
   1a4b4:	462a      	mov	r2, r5
   1a4b6:	462b      	mov	r3, r5
   1a4b8:	60e0      	str	r0, [r4, #12]
   1a4ba:	4629      	mov	r1, r5
   1a4bc:	f000 fc74 	bl	1ada8 <xQueueGenericReceive>
   1a4c0:	6823      	ldr	r3, [r4, #0]
   1a4c2:	4a09      	ldr	r2, [pc, #36]	; (1a4e8 <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)+0x50>)
   1a4c4:	4293      	cmp	r3, r2
   1a4c6:	d101      	bne.n	1a4cc <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)+0x34>
   1a4c8:	230a      	movs	r3, #10
   1a4ca:	e009      	b.n	1a4e0 <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)+0x48>
   1a4cc:	4a07      	ldr	r2, [pc, #28]	; (1a4ec <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)+0x54>)
   1a4ce:	4293      	cmp	r3, r2
   1a4d0:	d101      	bne.n	1a4d6 <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)+0x3e>
   1a4d2:	230b      	movs	r3, #11
   1a4d4:	e004      	b.n	1a4e0 <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)+0x48>
   1a4d6:	4a06      	ldr	r2, [pc, #24]	; (1a4f0 <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)+0x58>)
   1a4d8:	4293      	cmp	r3, r2
   1a4da:	bf0c      	ite	eq
   1a4dc:	230c      	moveq	r3, #12
   1a4de:	2363      	movne	r3, #99	; 0x63
   1a4e0:	7123      	strb	r3, [r4, #4]
   1a4e2:	4620      	mov	r0, r4
   1a4e4:	bd38      	pop	{r3, r4, r5, pc}
   1a4e6:	bf00      	nop
   1a4e8:	4001c000 	.word	0x4001c000
   1a4ec:	4005c000 	.word	0x4005c000
   1a4f0:	400a0000 	.word	0x400a0000

0001a4f4 <I2C_Base::init(unsigned int, unsigned int)>:
_ZN8I2C_Base4initEjj():
   1a4f4:	f990 3004 	ldrsb.w	r3, [r0, #4]
   1a4f8:	b570      	push	{r4, r5, r6, lr}
   1a4fa:	2b0b      	cmp	r3, #11
   1a4fc:	4604      	mov	r4, r0
   1a4fe:	460e      	mov	r6, r1
   1a500:	4615      	mov	r5, r2
   1a502:	d005      	beq.n	1a510 <I2C_Base::init(unsigned int, unsigned int)+0x1c>
   1a504:	2b0c      	cmp	r3, #12
   1a506:	d005      	beq.n	1a514 <I2C_Base::init(unsigned int, unsigned int)+0x20>
   1a508:	2b0a      	cmp	r3, #10
   1a50a:	d133      	bne.n	1a574 <I2C_Base::init(unsigned int, unsigned int)+0x80>
   1a50c:	2007      	movs	r0, #7
   1a50e:	e002      	b.n	1a516 <I2C_Base::init(unsigned int, unsigned int)+0x22>
   1a510:	2013      	movs	r0, #19
   1a512:	e000      	b.n	1a516 <I2C_Base::init(unsigned int, unsigned int)+0x22>
   1a514:	201a      	movs	r0, #26
   1a516:	2101      	movs	r1, #1
   1a518:	f001 fce0 	bl	1bedc <lpc_pconp>
   1a51c:	6823      	ldr	r3, [r4, #0]
   1a51e:	f5b5 7f7a 	cmp.w	r5, #1000	; 0x3e8
   1a522:	f04f 026c 	mov.w	r2, #108	; 0x6c
   1a526:	619a      	str	r2, [r3, #24]
   1a528:	bf9a      	itte	ls
   1a52a:	f44f 727a 	movls.w	r2, #1000	; 0x3e8
   1a52e:	4355      	mulls	r5, r2
   1a530:	4d11      	ldrhi	r5, [pc, #68]	; (1a578 <I2C_Base::init(unsigned int, unsigned int)+0x84>)
   1a532:	2128      	movs	r1, #40	; 0x28
   1a534:	fbb6 f5f5 	udiv	r5, r6, r5
   1a538:	086d      	lsrs	r5, r5, #1
   1a53a:	4369      	muls	r1, r5
   1a53c:	2264      	movs	r2, #100	; 0x64
   1a53e:	fbb1 f1f2 	udiv	r1, r1, r2
   1a542:	6119      	str	r1, [r3, #16]
   1a544:	213c      	movs	r1, #60	; 0x3c
   1a546:	434d      	muls	r5, r1
   1a548:	fbb5 f2f2 	udiv	r2, r5, r2
   1a54c:	615a      	str	r2, [r3, #20]
   1a54e:	2200      	movs	r2, #0
   1a550:	60da      	str	r2, [r3, #12]
   1a552:	621a      	str	r2, [r3, #32]
   1a554:	625a      	str	r2, [r3, #36]	; 0x24
   1a556:	629a      	str	r2, [r3, #40]	; 0x28
   1a558:	2240      	movs	r2, #64	; 0x40
   1a55a:	601a      	str	r2, [r3, #0]
   1a55c:	7923      	ldrb	r3, [r4, #4]
   1a55e:	2001      	movs	r0, #1
   1a560:	b259      	sxtb	r1, r3
   1a562:	f003 031f 	and.w	r3, r3, #31
   1a566:	fa00 f303 	lsl.w	r3, r0, r3
   1a56a:	4a04      	ldr	r2, [pc, #16]	; (1a57c <I2C_Base::init(unsigned int, unsigned int)+0x88>)
   1a56c:	0949      	lsrs	r1, r1, #5
   1a56e:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
   1a572:	bd70      	pop	{r4, r5, r6, pc}
   1a574:	2000      	movs	r0, #0
   1a576:	bd70      	pop	{r4, r5, r6, pc}
   1a578:	000186a0 	.word	0x000186a0
   1a57c:	e000e100 	.word	0xe000e100

0001a580 <I2C_Base::i2cStateMachine()>:
_ZN8I2C_Base15i2cStateMachineEv():
   1a580:	6803      	ldr	r3, [r0, #0]
   1a582:	b530      	push	{r4, r5, lr}
   1a584:	6859      	ldr	r1, [r3, #4]
   1a586:	4602      	mov	r2, r0
   1a588:	2928      	cmp	r1, #40	; 0x28
   1a58a:	d045      	beq.n	1a618 <I2C_Base::i2cStateMachine()+0x98>
   1a58c:	d809      	bhi.n	1a5a2 <I2C_Base::i2cStateMachine()+0x22>
   1a58e:	2910      	cmp	r1, #16
   1a590:	d024      	beq.n	1a5dc <I2C_Base::i2cStateMachine()+0x5c>
   1a592:	2918      	cmp	r1, #24
   1a594:	d02a      	beq.n	1a5ec <I2C_Base::i2cStateMachine()+0x6c>
   1a596:	2908      	cmp	r1, #8
   1a598:	d177      	bne.n	1a68a <I2C_Base::i2cStateMachine()+0x10a>
   1a59a:	7d02      	ldrb	r2, [r0, #20]
   1a59c:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
   1a5a0:	e037      	b.n	1a612 <I2C_Base::i2cStateMachine()+0x92>
   1a5a2:	2940      	cmp	r1, #64	; 0x40
   1a5a4:	d054      	beq.n	1a650 <I2C_Base::i2cStateMachine()+0xd0>
   1a5a6:	d80a      	bhi.n	1a5be <I2C_Base::i2cStateMachine()+0x3e>
   1a5a8:	2938      	cmp	r1, #56	; 0x38
   1a5aa:	d16e      	bne.n	1a68a <I2C_Base::i2cStateMachine()+0x10a>
   1a5ac:	7d01      	ldrb	r1, [r0, #20]
   1a5ae:	685b      	ldr	r3, [r3, #4]
   1a5b0:	f011 0f01 	tst.w	r1, #1
   1a5b4:	7593      	strb	r3, [r2, #22]
   1a5b6:	bf0c      	ite	eq
   1a5b8:	2002      	moveq	r0, #2
   1a5ba:	2001      	movne	r0, #1
   1a5bc:	bd30      	pop	{r4, r5, pc}
   1a5be:	2950      	cmp	r1, #80	; 0x50
   1a5c0:	d04e      	beq.n	1a660 <I2C_Base::i2cStateMachine()+0xe0>
   1a5c2:	2958      	cmp	r1, #88	; 0x58
   1a5c4:	d161      	bne.n	1a68a <I2C_Base::i2cStateMachine()+0x10a>
   1a5c6:	6981      	ldr	r1, [r0, #24]
   1a5c8:	689b      	ldr	r3, [r3, #8]
   1a5ca:	700b      	strb	r3, [r1, #0]
   1a5cc:	6803      	ldr	r3, [r0, #0]
   1a5ce:	2120      	movs	r1, #32
   1a5d0:	6199      	str	r1, [r3, #24]
   1a5d2:	2110      	movs	r1, #16
   1a5d4:	6019      	str	r1, [r3, #0]
   1a5d6:	2108      	movs	r1, #8
   1a5d8:	6199      	str	r1, [r3, #24]
   1a5da:	e052      	b.n	1a682 <I2C_Base::i2cStateMachine()+0x102>
   1a5dc:	7d02      	ldrb	r2, [r0, #20]
   1a5de:	f042 0201 	orr.w	r2, r2, #1
   1a5e2:	609a      	str	r2, [r3, #8]
   1a5e4:	2208      	movs	r2, #8
   1a5e6:	619a      	str	r2, [r3, #24]
   1a5e8:	2000      	movs	r0, #0
   1a5ea:	bd30      	pop	{r4, r5, pc}
   1a5ec:	6914      	ldr	r4, [r2, #16]
   1a5ee:	2020      	movs	r0, #32
   1a5f0:	6198      	str	r0, [r3, #24]
   1a5f2:	2108      	movs	r1, #8
   1a5f4:	b964      	cbnz	r4, 1a610 <I2C_Base::i2cStateMachine()+0x90>
   1a5f6:	6198      	str	r0, [r3, #24]
   1a5f8:	2010      	movs	r0, #16
   1a5fa:	6018      	str	r0, [r3, #0]
   1a5fc:	6199      	str	r1, [r3, #24]
   1a5fe:	6819      	ldr	r1, [r3, #0]
   1a600:	06c9      	lsls	r1, r1, #27
   1a602:	d4fc      	bmi.n	1a5fe <I2C_Base::i2cStateMachine()+0x7e>
   1a604:	7d13      	ldrb	r3, [r2, #20]
   1a606:	07dd      	lsls	r5, r3, #31
   1a608:	bf4c      	ite	mi
   1a60a:	2001      	movmi	r0, #1
   1a60c:	2002      	movpl	r0, #2
   1a60e:	bd30      	pop	{r4, r5, pc}
   1a610:	7d52      	ldrb	r2, [r2, #21]
   1a612:	609a      	str	r2, [r3, #8]
   1a614:	6199      	str	r1, [r3, #24]
   1a616:	e7e7      	b.n	1a5e8 <I2C_Base::i2cStateMachine()+0x68>
   1a618:	7d00      	ldrb	r0, [r0, #20]
   1a61a:	f010 0001 	ands.w	r0, r0, #1
   1a61e:	d001      	beq.n	1a624 <I2C_Base::i2cStateMachine()+0xa4>
   1a620:	2220      	movs	r2, #32
   1a622:	e02c      	b.n	1a67e <I2C_Base::i2cStateMachine()+0xfe>
   1a624:	6914      	ldr	r4, [r2, #16]
   1a626:	b94c      	cbnz	r4, 1a63c <I2C_Base::i2cStateMachine()+0xbc>
   1a628:	2120      	movs	r1, #32
   1a62a:	6199      	str	r1, [r3, #24]
   1a62c:	2110      	movs	r1, #16
   1a62e:	6019      	str	r1, [r3, #0]
   1a630:	2108      	movs	r1, #8
   1a632:	6199      	str	r1, [r3, #24]
   1a634:	6819      	ldr	r1, [r3, #0]
   1a636:	06cc      	lsls	r4, r1, #27
   1a638:	d4fc      	bmi.n	1a634 <I2C_Base::i2cStateMachine()+0xb4>
   1a63a:	e7e3      	b.n	1a604 <I2C_Base::i2cStateMachine()+0x84>
   1a63c:	6991      	ldr	r1, [r2, #24]
   1a63e:	3c01      	subs	r4, #1
   1a640:	f911 5b01 	ldrsb.w	r5, [r1], #1
   1a644:	609d      	str	r5, [r3, #8]
   1a646:	6191      	str	r1, [r2, #24]
   1a648:	6114      	str	r4, [r2, #16]
   1a64a:	2208      	movs	r2, #8
   1a64c:	619a      	str	r2, [r3, #24]
   1a64e:	bd30      	pop	{r4, r5, pc}
   1a650:	6902      	ldr	r2, [r0, #16]
   1a652:	2120      	movs	r1, #32
   1a654:	2a01      	cmp	r2, #1
   1a656:	6199      	str	r1, [r3, #24]
   1a658:	f04f 0204 	mov.w	r2, #4
   1a65c:	d80f      	bhi.n	1a67e <I2C_Base::i2cStateMachine()+0xfe>
   1a65e:	e00c      	b.n	1a67a <I2C_Base::i2cStateMachine()+0xfa>
   1a660:	689b      	ldr	r3, [r3, #8]
   1a662:	6981      	ldr	r1, [r0, #24]
   1a664:	2204      	movs	r2, #4
   1a666:	700b      	strb	r3, [r1, #0]
   1a668:	6983      	ldr	r3, [r0, #24]
   1a66a:	3301      	adds	r3, #1
   1a66c:	6183      	str	r3, [r0, #24]
   1a66e:	6903      	ldr	r3, [r0, #16]
   1a670:	3b01      	subs	r3, #1
   1a672:	2b01      	cmp	r3, #1
   1a674:	6103      	str	r3, [r0, #16]
   1a676:	6803      	ldr	r3, [r0, #0]
   1a678:	d101      	bne.n	1a67e <I2C_Base::i2cStateMachine()+0xfe>
   1a67a:	619a      	str	r2, [r3, #24]
   1a67c:	e7b2      	b.n	1a5e4 <I2C_Base::i2cStateMachine()+0x64>
   1a67e:	601a      	str	r2, [r3, #0]
   1a680:	e7b0      	b.n	1a5e4 <I2C_Base::i2cStateMachine()+0x64>
   1a682:	6819      	ldr	r1, [r3, #0]
   1a684:	06c8      	lsls	r0, r1, #27
   1a686:	d4fc      	bmi.n	1a682 <I2C_Base::i2cStateMachine()+0x102>
   1a688:	e7bc      	b.n	1a604 <I2C_Base::i2cStateMachine()+0x84>
   1a68a:	6859      	ldr	r1, [r3, #4]
   1a68c:	7591      	strb	r1, [r2, #22]
   1a68e:	2120      	movs	r1, #32
   1a690:	6199      	str	r1, [r3, #24]
   1a692:	2110      	movs	r1, #16
   1a694:	6019      	str	r1, [r3, #0]
   1a696:	2108      	movs	r1, #8
   1a698:	6199      	str	r1, [r3, #24]
   1a69a:	6819      	ldr	r1, [r3, #0]
   1a69c:	06c9      	lsls	r1, r1, #27
   1a69e:	d4fc      	bmi.n	1a69a <I2C_Base::i2cStateMachine()+0x11a>
   1a6a0:	e7b0      	b.n	1a604 <I2C_Base::i2cStateMachine()+0x84>
	...

0001a6a4 <I2C_Base::handleInterrupt()>:
_ZN8I2C_Base15handleInterruptEv():
   1a6a4:	b513      	push	{r0, r1, r4, lr}
   1a6a6:	4604      	mov	r4, r0
   1a6a8:	f7ff ff6a 	bl	1a580 <I2C_Base::i2cStateMachine()>
   1a6ac:	b168      	cbz	r0, 1a6ca <I2C_Base::handleInterrupt()+0x26>
   1a6ae:	2100      	movs	r1, #0
   1a6b0:	aa02      	add	r2, sp, #8
   1a6b2:	460b      	mov	r3, r1
   1a6b4:	f842 1d04 	str.w	r1, [r2, #-4]!
   1a6b8:	68e0      	ldr	r0, [r4, #12]
   1a6ba:	f000 fb3c 	bl	1ad36 <xQueueGenericSendFromISR>
   1a6be:	9b01      	ldr	r3, [sp, #4]
   1a6c0:	b11b      	cbz	r3, 1a6ca <I2C_Base::handleInterrupt()+0x26>
   1a6c2:	4b03      	ldr	r3, [pc, #12]	; (1a6d0 <I2C_Base::handleInterrupt()+0x2c>)
   1a6c4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   1a6c8:	601a      	str	r2, [r3, #0]
   1a6ca:	b002      	add	sp, #8
   1a6cc:	bd10      	pop	{r4, pc}
   1a6ce:	bf00      	nop
   1a6d0:	e000ed04 	.word	0xe000ed04

0001a6d4 <UartDev::putChar(char, unsigned int)>:
_ZN7UartDev7putCharEcj():
   1a6d4:	b537      	push	{r0, r1, r2, r4, r5, lr}
   1a6d6:	4604      	mov	r4, r0
   1a6d8:	4615      	mov	r5, r2
   1a6da:	f88d 1007 	strb.w	r1, [sp, #7]
   1a6de:	f001 f8d5 	bl	1b88c <xTaskGetSchedulerState>
   1a6e2:	2802      	cmp	r0, #2
   1a6e4:	d008      	beq.n	1a6f8 <UartDev::putChar(char, unsigned int)+0x24>
   1a6e6:	f89d 2007 	ldrb.w	r2, [sp, #7]
   1a6ea:	6963      	ldr	r3, [r4, #20]
   1a6ec:	701a      	strb	r2, [r3, #0]
   1a6ee:	6962      	ldr	r2, [r4, #20]
   1a6f0:	7d13      	ldrb	r3, [r2, #20]
   1a6f2:	0659      	lsls	r1, r3, #25
   1a6f4:	d5fc      	bpl.n	1a6f0 <UartDev::putChar(char, unsigned int)+0x1c>
   1a6f6:	e017      	b.n	1a728 <UartDev::putChar(char, unsigned int)+0x54>
   1a6f8:	69e0      	ldr	r0, [r4, #28]
   1a6fa:	f10d 0107 	add.w	r1, sp, #7
   1a6fe:	462a      	mov	r2, r5
   1a700:	2300      	movs	r3, #0
   1a702:	f000 fa81 	bl	1ac08 <xQueueGenericSend>
   1a706:	b180      	cbz	r0, 1a72a <UartDev::putChar(char, unsigned int)+0x56>
   1a708:	6963      	ldr	r3, [r4, #20]
   1a70a:	7d1b      	ldrb	r3, [r3, #20]
   1a70c:	065b      	lsls	r3, r3, #25
   1a70e:	d50b      	bpl.n	1a728 <UartDev::putChar(char, unsigned int)+0x54>
   1a710:	2200      	movs	r2, #0
   1a712:	69e0      	ldr	r0, [r4, #28]
   1a714:	f10d 0107 	add.w	r1, sp, #7
   1a718:	4613      	mov	r3, r2
   1a71a:	f000 fb45 	bl	1ada8 <xQueueGenericReceive>
   1a71e:	b118      	cbz	r0, 1a728 <UartDev::putChar(char, unsigned int)+0x54>
   1a720:	6963      	ldr	r3, [r4, #20]
   1a722:	f89d 2007 	ldrb.w	r2, [sp, #7]
   1a726:	701a      	strb	r2, [r3, #0]
   1a728:	2001      	movs	r0, #1
   1a72a:	b003      	add	sp, #12
   1a72c:	bd30      	pop	{r4, r5, pc}

0001a72e <UartDev::flush()>:
_ZN7UartDev5flushEv():
   1a72e:	b510      	push	{r4, lr}
   1a730:	4604      	mov	r4, r0
   1a732:	f001 f8ab 	bl	1b88c <xTaskGetSchedulerState>
   1a736:	2802      	cmp	r0, #2
   1a738:	d107      	bne.n	1a74a <UartDev::flush()+0x1c>
   1a73a:	69e0      	ldr	r0, [r4, #28]
   1a73c:	f000 fbde 	bl	1aefc <uxQueueMessagesWaiting>
   1a740:	b118      	cbz	r0, 1a74a <UartDev::flush()+0x1c>
   1a742:	2001      	movs	r0, #1
   1a744:	f000 fed0 	bl	1b4e8 <vTaskDelay>
   1a748:	e7f7      	b.n	1a73a <UartDev::flush()+0xc>
   1a74a:	2001      	movs	r0, #1
   1a74c:	bd10      	pop	{r4, pc}

0001a74e <UartDev::getChar(char*, unsigned int)>:
_ZN7UartDev7getCharEPcj():
   1a74e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1a752:	4607      	mov	r7, r0
   1a754:	4614      	mov	r4, r2
   1a756:	460e      	mov	r6, r1
   1a758:	b911      	cbnz	r1, 1a760 <UartDev::getChar(char*, unsigned int)+0x12>
   1a75a:	2000      	movs	r0, #0
   1a75c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1a760:	6983      	ldr	r3, [r0, #24]
   1a762:	2b00      	cmp	r3, #0
   1a764:	d0f9      	beq.n	1a75a <UartDev::getChar(char*, unsigned int)+0xc>
   1a766:	f001 f891 	bl	1b88c <xTaskGetSchedulerState>
   1a76a:	2802      	cmp	r0, #2
   1a76c:	d10a      	bne.n	1a784 <UartDev::getChar(char*, unsigned int)+0x36>
   1a76e:	69b8      	ldr	r0, [r7, #24]
   1a770:	4631      	mov	r1, r6
   1a772:	4622      	mov	r2, r4
   1a774:	2300      	movs	r3, #0
   1a776:	f000 fb17 	bl	1ada8 <xQueueGenericReceive>
   1a77a:	3000      	adds	r0, #0
   1a77c:	bf18      	it	ne
   1a77e:	2001      	movne	r0, #1
   1a780:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1a784:	f001 fc10 	bl	1bfa8 <sys_get_uptime_us>
   1a788:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   1a78c:	2300      	movs	r3, #0
   1a78e:	f002 fef7 	bl	1d580 <__aeabi_uldivmod>
   1a792:	eb04 0800 	add.w	r8, r4, r0
   1a796:	2200      	movs	r2, #0
   1a798:	69b8      	ldr	r0, [r7, #24]
   1a79a:	4631      	mov	r1, r6
   1a79c:	4613      	mov	r3, r2
   1a79e:	f000 fb03 	bl	1ada8 <xQueueGenericReceive>
   1a7a2:	b968      	cbnz	r0, 1a7c0 <UartDev::getChar(char*, unsigned int)+0x72>
   1a7a4:	f001 fc00 	bl	1bfa8 <sys_get_uptime_us>
   1a7a8:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   1a7ac:	2300      	movs	r3, #0
   1a7ae:	f002 fee7 	bl	1d580 <__aeabi_uldivmod>
   1a7b2:	4644      	mov	r4, r8
   1a7b4:	2500      	movs	r5, #0
   1a7b6:	428d      	cmp	r5, r1
   1a7b8:	bf08      	it	eq
   1a7ba:	4284      	cmpeq	r4, r0
   1a7bc:	d2eb      	bcs.n	1a796 <UartDev::getChar(char*, unsigned int)+0x48>
   1a7be:	e7cc      	b.n	1a75a <UartDev::getChar(char*, unsigned int)+0xc>
   1a7c0:	2001      	movs	r0, #1
   1a7c2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

0001a7c8 <UartDev::setBaudRate(unsigned int)>:
_ZN7UartDev11setBaudRateEj():
   1a7c8:	6943      	ldr	r3, [r0, #20]
   1a7ca:	2280      	movs	r2, #128	; 0x80
   1a7cc:	b510      	push	{r4, lr}
   1a7ce:	731a      	strb	r2, [r3, #12]
   1a7d0:	4604      	mov	r4, r0
   1a7d2:	6a00      	ldr	r0, [r0, #32]
   1a7d4:	0109      	lsls	r1, r1, #4
   1a7d6:	fbb0 f0f1 	udiv	r0, r0, r1
   1a7da:	f002 fad1 	bl	1cd80 <__aeabi_ui2d>
   1a7de:	2200      	movs	r2, #0
   1a7e0:	4b07      	ldr	r3, [pc, #28]	; (1a800 <UartDev::setBaudRate(unsigned int)+0x38>)
   1a7e2:	f002 f991 	bl	1cb08 <__adddf3>
   1a7e6:	f002 fb41 	bl	1ce6c <__aeabi_d2uiz>
   1a7ea:	6963      	ldr	r3, [r4, #20]
   1a7ec:	b280      	uxth	r0, r0
   1a7ee:	0a02      	lsrs	r2, r0, #8
   1a7f0:	711a      	strb	r2, [r3, #4]
   1a7f2:	6963      	ldr	r3, [r4, #20]
   1a7f4:	b2c0      	uxtb	r0, r0
   1a7f6:	7018      	strb	r0, [r3, #0]
   1a7f8:	6963      	ldr	r3, [r4, #20]
   1a7fa:	2203      	movs	r2, #3
   1a7fc:	731a      	strb	r2, [r3, #12]
   1a7fe:	bd10      	pop	{r4, pc}
   1a800:	3fe00000 	.word	0x3fe00000

0001a804 <UartDev::handleInterrupt()>:
_ZN7UartDev15handleInterruptEv():
   1a804:	b573      	push	{r0, r1, r4, r5, r6, lr}
   1a806:	6942      	ldr	r2, [r0, #20]
   1a808:	2300      	movs	r3, #0
   1a80a:	9301      	str	r3, [sp, #4]
   1a80c:	f88d 3003 	strb.w	r3, [sp, #3]
   1a810:	6893      	ldr	r3, [r2, #8]
   1a812:	4604      	mov	r4, r0
   1a814:	f003 030e 	and.w	r3, r3, #14
   1a818:	2b04      	cmp	r3, #4
   1a81a:	d017      	beq.n	1a84c <UartDev::handleInterrupt()+0x48>
   1a81c:	2b0c      	cmp	r3, #12
   1a81e:	d015      	beq.n	1a84c <UartDev::handleInterrupt()+0x48>
   1a820:	2b02      	cmp	r3, #2
   1a822:	d134      	bne.n	1a88e <UartDev::handleInterrupt()+0x8a>
   1a824:	69c0      	ldr	r0, [r0, #28]
   1a826:	f000 fb72 	bl	1af0e <uxQueueMessagesWaitingFromISR>
   1a82a:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
   1a82c:	4298      	cmp	r0, r3
   1a82e:	d903      	bls.n	1a838 <UartDev::handleInterrupt()+0x34>
   1a830:	69e0      	ldr	r0, [r4, #28]
   1a832:	f000 fb6c 	bl	1af0e <uxQueueMessagesWaitingFromISR>
   1a836:	84e0      	strh	r0, [r4, #38]	; 0x26
   1a838:	2610      	movs	r6, #16
   1a83a:	2500      	movs	r5, #0
   1a83c:	69e0      	ldr	r0, [r4, #28]
   1a83e:	f10d 0103 	add.w	r1, sp, #3
   1a842:	aa01      	add	r2, sp, #4
   1a844:	f000 fb31 	bl	1aeaa <xQueueReceiveFromISR>
   1a848:	bb18      	cbnz	r0, 1a892 <UartDev::handleInterrupt()+0x8e>
   1a84a:	e02c      	b.n	1a8a6 <UartDev::handleInterrupt()+0xa2>
   1a84c:	f000 fd20 	bl	1b290 <xTaskGetTickCountFromISR>
   1a850:	2500      	movs	r5, #0
   1a852:	62a0      	str	r0, [r4, #40]	; 0x28
   1a854:	6963      	ldr	r3, [r4, #20]
   1a856:	7d1a      	ldrb	r2, [r3, #20]
   1a858:	07d2      	lsls	r2, r2, #31
   1a85a:	d50d      	bpl.n	1a878 <UartDev::handleInterrupt()+0x74>
   1a85c:	781b      	ldrb	r3, [r3, #0]
   1a85e:	a902      	add	r1, sp, #8
   1a860:	f801 3d05 	strb.w	r3, [r1, #-5]!
   1a864:	69a0      	ldr	r0, [r4, #24]
   1a866:	2300      	movs	r3, #0
   1a868:	aa01      	add	r2, sp, #4
   1a86a:	f000 fa64 	bl	1ad36 <xQueueGenericSendFromISR>
   1a86e:	9b01      	ldr	r3, [sp, #4]
   1a870:	2b00      	cmp	r3, #0
   1a872:	bf18      	it	ne
   1a874:	2501      	movne	r5, #1
   1a876:	e7ed      	b.n	1a854 <UartDev::handleInterrupt()+0x50>
   1a878:	69a0      	ldr	r0, [r4, #24]
   1a87a:	f000 fb48 	bl	1af0e <uxQueueMessagesWaitingFromISR>
   1a87e:	8ca3      	ldrh	r3, [r4, #36]	; 0x24
   1a880:	4298      	cmp	r0, r3
   1a882:	d910      	bls.n	1a8a6 <UartDev::handleInterrupt()+0xa2>
   1a884:	69a0      	ldr	r0, [r4, #24]
   1a886:	f000 fb42 	bl	1af0e <uxQueueMessagesWaitingFromISR>
   1a88a:	84a0      	strh	r0, [r4, #36]	; 0x24
   1a88c:	e00b      	b.n	1a8a6 <UartDev::handleInterrupt()+0xa2>
   1a88e:	7d13      	ldrb	r3, [r2, #20]
   1a890:	e00e      	b.n	1a8b0 <UartDev::handleInterrupt()+0xac>
   1a892:	6963      	ldr	r3, [r4, #20]
   1a894:	f89d 2003 	ldrb.w	r2, [sp, #3]
   1a898:	701a      	strb	r2, [r3, #0]
   1a89a:	9b01      	ldr	r3, [sp, #4]
   1a89c:	2b00      	cmp	r3, #0
   1a89e:	bf18      	it	ne
   1a8a0:	2501      	movne	r5, #1
   1a8a2:	3e01      	subs	r6, #1
   1a8a4:	d1ca      	bne.n	1a83c <UartDev::handleInterrupt()+0x38>
   1a8a6:	b11d      	cbz	r5, 1a8b0 <UartDev::handleInterrupt()+0xac>
   1a8a8:	4b02      	ldr	r3, [pc, #8]	; (1a8b4 <UartDev::handleInterrupt()+0xb0>)
   1a8aa:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   1a8ae:	601a      	str	r2, [r3, #0]
   1a8b0:	b002      	add	sp, #8
   1a8b2:	bd70      	pop	{r4, r5, r6, pc}
   1a8b4:	e000ed04 	.word	0xe000ed04

0001a8b8 <UartDev::UartDev(unsigned int*)>:
_ZN7UartDevC2EPj():
   1a8b8:	b538      	push	{r3, r4, r5, lr}
   1a8ba:	4604      	mov	r4, r0
   1a8bc:	460d      	mov	r5, r1
   1a8be:	f7ff fd3d 	bl	1a33c <CharDev::CharDev()>
   1a8c2:	4b06      	ldr	r3, [pc, #24]	; (1a8dc <UartDev::UartDev(unsigned int*)+0x24>)
   1a8c4:	6165      	str	r5, [r4, #20]
   1a8c6:	6023      	str	r3, [r4, #0]
   1a8c8:	2300      	movs	r3, #0
   1a8ca:	61a3      	str	r3, [r4, #24]
   1a8cc:	61e3      	str	r3, [r4, #28]
   1a8ce:	6223      	str	r3, [r4, #32]
   1a8d0:	84a3      	strh	r3, [r4, #36]	; 0x24
   1a8d2:	84e3      	strh	r3, [r4, #38]	; 0x26
   1a8d4:	62a3      	str	r3, [r4, #40]	; 0x28
   1a8d6:	4620      	mov	r0, r4
   1a8d8:	bd38      	pop	{r3, r4, r5, pc}
   1a8da:	bf00      	nop
   1a8dc:	00026b70 	.word	0x00026b70

0001a8e0 <UartDev::init(unsigned int, unsigned int, int, int)>:
_ZN7UartDev4initEjjii():
   1a8e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1a8e2:	461e      	mov	r6, r3
   1a8e4:	6945      	ldr	r5, [r0, #20]
   1a8e6:	4b26      	ldr	r3, [pc, #152]	; (1a980 <UartDev::init(unsigned int, unsigned int, int, int)+0xa0>)
   1a8e8:	4604      	mov	r4, r0
   1a8ea:	429d      	cmp	r5, r3
   1a8ec:	4617      	mov	r7, r2
   1a8ee:	6201      	str	r1, [r0, #32]
   1a8f0:	d105      	bne.n	1a8fe <UartDev::init(unsigned int, unsigned int, int, int)+0x1e>
   1a8f2:	2003      	movs	r0, #3
   1a8f4:	2101      	movs	r1, #1
   1a8f6:	f001 faf1 	bl	1bedc <lpc_pconp>
   1a8fa:	2220      	movs	r2, #32
   1a8fc:	e011      	b.n	1a922 <UartDev::init(unsigned int, unsigned int, int, int)+0x42>
   1a8fe:	4b21      	ldr	r3, [pc, #132]	; (1a984 <UartDev::init(unsigned int, unsigned int, int, int)+0xa4>)
   1a900:	429d      	cmp	r5, r3
   1a902:	d105      	bne.n	1a910 <UartDev::init(unsigned int, unsigned int, int, int)+0x30>
   1a904:	2018      	movs	r0, #24
   1a906:	2101      	movs	r1, #1
   1a908:	f001 fae8 	bl	1bedc <lpc_pconp>
   1a90c:	2280      	movs	r2, #128	; 0x80
   1a90e:	e008      	b.n	1a922 <UartDev::init(unsigned int, unsigned int, int, int)+0x42>
   1a910:	4b1d      	ldr	r3, [pc, #116]	; (1a988 <UartDev::init(unsigned int, unsigned int, int, int)+0xa8>)
   1a912:	429d      	cmp	r5, r3
   1a914:	d131      	bne.n	1a97a <UartDev::init(unsigned int, unsigned int, int, int)+0x9a>
   1a916:	2019      	movs	r0, #25
   1a918:	2101      	movs	r1, #1
   1a91a:	f001 fadf 	bl	1bedc <lpc_pconp>
   1a91e:	f44f 7280 	mov.w	r2, #256	; 0x100
   1a922:	4b1a      	ldr	r3, [pc, #104]	; (1a98c <UartDev::init(unsigned int, unsigned int, int, int)+0xac>)
   1a924:	4620      	mov	r0, r4
   1a926:	601a      	str	r2, [r3, #0]
   1a928:	6963      	ldr	r3, [r4, #20]
   1a92a:	2241      	movs	r2, #65	; 0x41
   1a92c:	721a      	strb	r2, [r3, #8]
   1a92e:	6965      	ldr	r5, [r4, #20]
   1a930:	4639      	mov	r1, r7
   1a932:	7a2b      	ldrb	r3, [r5, #8]
   1a934:	f043 0306 	orr.w	r3, r3, #6
   1a938:	722b      	strb	r3, [r5, #8]
   1a93a:	f7ff ff45 	bl	1a7c8 <UartDev::setBaudRate(unsigned int)>
   1a93e:	69a2      	ldr	r2, [r4, #24]
   1a940:	b93a      	cbnz	r2, 1a952 <UartDev::init(unsigned int, unsigned int, int, int)+0x72>
   1a942:	2e08      	cmp	r6, #8
   1a944:	bfac      	ite	ge
   1a946:	4630      	movge	r0, r6
   1a948:	2008      	movlt	r0, #8
   1a94a:	2101      	movs	r1, #1
   1a94c:	f000 f92b 	bl	1aba6 <xQueueGenericCreate>
   1a950:	61a0      	str	r0, [r4, #24]
   1a952:	69e2      	ldr	r2, [r4, #28]
   1a954:	b93a      	cbnz	r2, 1a966 <UartDev::init(unsigned int, unsigned int, int, int)+0x86>
   1a956:	9806      	ldr	r0, [sp, #24]
   1a958:	2101      	movs	r1, #1
   1a95a:	2808      	cmp	r0, #8
   1a95c:	bfb8      	it	lt
   1a95e:	2008      	movlt	r0, #8
   1a960:	f000 f921 	bl	1aba6 <xQueueGenericCreate>
   1a964:	61e0      	str	r0, [r4, #28]
   1a966:	6963      	ldr	r3, [r4, #20]
   1a968:	2207      	movs	r2, #7
   1a96a:	605a      	str	r2, [r3, #4]
   1a96c:	69a0      	ldr	r0, [r4, #24]
   1a96e:	b128      	cbz	r0, 1a97c <UartDev::init(unsigned int, unsigned int, int, int)+0x9c>
   1a970:	69e0      	ldr	r0, [r4, #28]
   1a972:	3000      	adds	r0, #0
   1a974:	bf18      	it	ne
   1a976:	2001      	movne	r0, #1
   1a978:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1a97a:	2000      	movs	r0, #0
   1a97c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1a97e:	bf00      	nop
   1a980:	4000c000 	.word	0x4000c000
   1a984:	40098000 	.word	0x40098000
   1a988:	4009c000 	.word	0x4009c000
   1a98c:	e000e100 	.word	0xe000e100

0001a990 <vListInitialise>:
vListInitialise():
   1a990:	f100 0308 	add.w	r3, r0, #8
   1a994:	6043      	str	r3, [r0, #4]
   1a996:	f04f 32ff 	mov.w	r2, #4294967295
   1a99a:	60c3      	str	r3, [r0, #12]
   1a99c:	6103      	str	r3, [r0, #16]
   1a99e:	2300      	movs	r3, #0
   1a9a0:	6082      	str	r2, [r0, #8]
   1a9a2:	6003      	str	r3, [r0, #0]
   1a9a4:	4770      	bx	lr

0001a9a6 <vListInitialiseItem>:
vListInitialiseItem():
   1a9a6:	2300      	movs	r3, #0
   1a9a8:	6103      	str	r3, [r0, #16]
   1a9aa:	4770      	bx	lr

0001a9ac <vListInsertEnd>:
vListInsertEnd():
   1a9ac:	6843      	ldr	r3, [r0, #4]
   1a9ae:	689a      	ldr	r2, [r3, #8]
   1a9b0:	604b      	str	r3, [r1, #4]
   1a9b2:	608a      	str	r2, [r1, #8]
   1a9b4:	689a      	ldr	r2, [r3, #8]
   1a9b6:	6051      	str	r1, [r2, #4]
   1a9b8:	6099      	str	r1, [r3, #8]
   1a9ba:	6803      	ldr	r3, [r0, #0]
   1a9bc:	6108      	str	r0, [r1, #16]
   1a9be:	3301      	adds	r3, #1
   1a9c0:	6003      	str	r3, [r0, #0]
   1a9c2:	4770      	bx	lr

0001a9c4 <vListInsert>:
vListInsert():
   1a9c4:	b530      	push	{r4, r5, lr}
   1a9c6:	680c      	ldr	r4, [r1, #0]
   1a9c8:	1c63      	adds	r3, r4, #1
   1a9ca:	d101      	bne.n	1a9d0 <vListInsert+0xc>
   1a9cc:	6903      	ldr	r3, [r0, #16]
   1a9ce:	e007      	b.n	1a9e0 <vListInsert+0x1c>
   1a9d0:	f100 0308 	add.w	r3, r0, #8
   1a9d4:	685a      	ldr	r2, [r3, #4]
   1a9d6:	6815      	ldr	r5, [r2, #0]
   1a9d8:	42a5      	cmp	r5, r4
   1a9da:	d801      	bhi.n	1a9e0 <vListInsert+0x1c>
   1a9dc:	4613      	mov	r3, r2
   1a9de:	e7f9      	b.n	1a9d4 <vListInsert+0x10>
   1a9e0:	685a      	ldr	r2, [r3, #4]
   1a9e2:	604a      	str	r2, [r1, #4]
   1a9e4:	6091      	str	r1, [r2, #8]
   1a9e6:	608b      	str	r3, [r1, #8]
   1a9e8:	6059      	str	r1, [r3, #4]
   1a9ea:	6803      	ldr	r3, [r0, #0]
   1a9ec:	6108      	str	r0, [r1, #16]
   1a9ee:	3301      	adds	r3, #1
   1a9f0:	6003      	str	r3, [r0, #0]
   1a9f2:	bd30      	pop	{r4, r5, pc}

0001a9f4 <uxListRemove>:
uxListRemove():
   1a9f4:	6841      	ldr	r1, [r0, #4]
   1a9f6:	6882      	ldr	r2, [r0, #8]
   1a9f8:	6903      	ldr	r3, [r0, #16]
   1a9fa:	608a      	str	r2, [r1, #8]
   1a9fc:	6882      	ldr	r2, [r0, #8]
   1a9fe:	6051      	str	r1, [r2, #4]
   1aa00:	6859      	ldr	r1, [r3, #4]
   1aa02:	4281      	cmp	r1, r0
   1aa04:	bf08      	it	eq
   1aa06:	605a      	streq	r2, [r3, #4]
   1aa08:	2200      	movs	r2, #0
   1aa0a:	6102      	str	r2, [r0, #16]
   1aa0c:	6818      	ldr	r0, [r3, #0]
   1aa0e:	3801      	subs	r0, #1
   1aa10:	6018      	str	r0, [r3, #0]
   1aa12:	4770      	bx	lr

0001aa14 <prvCopyDataToQueue>:
prvCopyDataToQueue():
   1aa14:	b538      	push	{r3, r4, r5, lr}
   1aa16:	4615      	mov	r5, r2
   1aa18:	6c02      	ldr	r2, [r0, #64]	; 0x40
   1aa1a:	4604      	mov	r4, r0
   1aa1c:	b932      	cbnz	r2, 1aa2c <prvCopyDataToQueue+0x18>
   1aa1e:	6805      	ldr	r5, [r0, #0]
   1aa20:	bb3d      	cbnz	r5, 1aa72 <prvCopyDataToQueue+0x5e>
   1aa22:	6840      	ldr	r0, [r0, #4]
   1aa24:	f000 ff8c 	bl	1b940 <vTaskPriorityDisinherit>
   1aa28:	6065      	str	r5, [r4, #4]
   1aa2a:	e022      	b.n	1aa72 <prvCopyDataToQueue+0x5e>
   1aa2c:	b965      	cbnz	r5, 1aa48 <prvCopyDataToQueue+0x34>
   1aa2e:	6880      	ldr	r0, [r0, #8]
   1aa30:	f003 f9f9 	bl	1de26 <memcpy>
   1aa34:	68a2      	ldr	r2, [r4, #8]
   1aa36:	6c23      	ldr	r3, [r4, #64]	; 0x40
   1aa38:	4413      	add	r3, r2
   1aa3a:	6862      	ldr	r2, [r4, #4]
   1aa3c:	60a3      	str	r3, [r4, #8]
   1aa3e:	4293      	cmp	r3, r2
   1aa40:	d317      	bcc.n	1aa72 <prvCopyDataToQueue+0x5e>
   1aa42:	6823      	ldr	r3, [r4, #0]
   1aa44:	60a3      	str	r3, [r4, #8]
   1aa46:	e014      	b.n	1aa72 <prvCopyDataToQueue+0x5e>
   1aa48:	68c0      	ldr	r0, [r0, #12]
   1aa4a:	f003 f9ec 	bl	1de26 <memcpy>
   1aa4e:	6c23      	ldr	r3, [r4, #64]	; 0x40
   1aa50:	68e2      	ldr	r2, [r4, #12]
   1aa52:	425b      	negs	r3, r3
   1aa54:	6821      	ldr	r1, [r4, #0]
   1aa56:	441a      	add	r2, r3
   1aa58:	428a      	cmp	r2, r1
   1aa5a:	60e2      	str	r2, [r4, #12]
   1aa5c:	d202      	bcs.n	1aa64 <prvCopyDataToQueue+0x50>
   1aa5e:	6862      	ldr	r2, [r4, #4]
   1aa60:	4413      	add	r3, r2
   1aa62:	60e3      	str	r3, [r4, #12]
   1aa64:	2d02      	cmp	r5, #2
   1aa66:	d104      	bne.n	1aa72 <prvCopyDataToQueue+0x5e>
   1aa68:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   1aa6a:	b113      	cbz	r3, 1aa72 <prvCopyDataToQueue+0x5e>
   1aa6c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   1aa6e:	3b01      	subs	r3, #1
   1aa70:	63a3      	str	r3, [r4, #56]	; 0x38
   1aa72:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   1aa74:	3301      	adds	r3, #1
   1aa76:	63a3      	str	r3, [r4, #56]	; 0x38
   1aa78:	bd38      	pop	{r3, r4, r5, pc}

0001aa7a <prvNotifyQueueSetContainer>:
prvNotifyQueueSetContainer():
   1aa7a:	b513      	push	{r0, r1, r4, lr}
   1aa7c:	6d44      	ldr	r4, [r0, #84]	; 0x54
   1aa7e:	460a      	mov	r2, r1
   1aa80:	6be3      	ldr	r3, [r4, #60]	; 0x3c
   1aa82:	6ba1      	ldr	r1, [r4, #56]	; 0x38
   1aa84:	9001      	str	r0, [sp, #4]
   1aa86:	4299      	cmp	r1, r3
   1aa88:	d301      	bcc.n	1aa8e <prvNotifyQueueSetContainer+0x14>
   1aa8a:	2000      	movs	r0, #0
   1aa8c:	e00d      	b.n	1aaaa <prvNotifyQueueSetContainer+0x30>
   1aa8e:	4620      	mov	r0, r4
   1aa90:	a901      	add	r1, sp, #4
   1aa92:	f7ff ffbf 	bl	1aa14 <prvCopyDataToQueue>
   1aa96:	6a63      	ldr	r3, [r4, #36]	; 0x24
   1aa98:	2b00      	cmp	r3, #0
   1aa9a:	d0f6      	beq.n	1aa8a <prvNotifyQueueSetContainer+0x10>
   1aa9c:	f104 0024 	add.w	r0, r4, #36	; 0x24
   1aaa0:	f000 fe70 	bl	1b784 <xTaskRemoveFromEventList>
   1aaa4:	3000      	adds	r0, #0
   1aaa6:	bf18      	it	ne
   1aaa8:	2001      	movne	r0, #1
   1aaaa:	b002      	add	sp, #8
   1aaac:	bd10      	pop	{r4, pc}

0001aaae <prvCopyDataFromQueue>:
prvCopyDataFromQueue():
   1aaae:	b570      	push	{r4, r5, r6, lr}
   1aab0:	6804      	ldr	r4, [r0, #0]
   1aab2:	4603      	mov	r3, r0
   1aab4:	b16c      	cbz	r4, 1aad2 <prvCopyDataFromQueue+0x24>
   1aab6:	68c5      	ldr	r5, [r0, #12]
   1aab8:	6c02      	ldr	r2, [r0, #64]	; 0x40
   1aaba:	6846      	ldr	r6, [r0, #4]
   1aabc:	4415      	add	r5, r2
   1aabe:	42b5      	cmp	r5, r6
   1aac0:	60c5      	str	r5, [r0, #12]
   1aac2:	bf28      	it	cs
   1aac4:	60c4      	strcs	r4, [r0, #12]
   1aac6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
   1aaca:	4608      	mov	r0, r1
   1aacc:	68d9      	ldr	r1, [r3, #12]
   1aace:	f003 b9aa 	b.w	1de26 <memcpy>
   1aad2:	bd70      	pop	{r4, r5, r6, pc}

0001aad4 <prvUnlockQueue>:
prvUnlockQueue():
   1aad4:	b510      	push	{r4, lr}
   1aad6:	4604      	mov	r4, r0
   1aad8:	f000 fff2 	bl	1bac0 <vPortEnterCritical>
   1aadc:	6ca3      	ldr	r3, [r4, #72]	; 0x48
   1aade:	2b00      	cmp	r3, #0
   1aae0:	dd16      	ble.n	1ab10 <prvUnlockQueue+0x3c>
   1aae2:	6d63      	ldr	r3, [r4, #84]	; 0x54
   1aae4:	b143      	cbz	r3, 1aaf8 <prvUnlockQueue+0x24>
   1aae6:	4620      	mov	r0, r4
   1aae8:	2100      	movs	r1, #0
   1aaea:	f7ff ffc6 	bl	1aa7a <prvNotifyQueueSetContainer>
   1aaee:	2801      	cmp	r0, #1
   1aaf0:	d10a      	bne.n	1ab08 <prvUnlockQueue+0x34>
   1aaf2:	f000 feaf 	bl	1b854 <vTaskMissedYield>
   1aaf6:	e007      	b.n	1ab08 <prvUnlockQueue+0x34>
   1aaf8:	6a63      	ldr	r3, [r4, #36]	; 0x24
   1aafa:	b14b      	cbz	r3, 1ab10 <prvUnlockQueue+0x3c>
   1aafc:	f104 0024 	add.w	r0, r4, #36	; 0x24
   1ab00:	f000 fe40 	bl	1b784 <xTaskRemoveFromEventList>
   1ab04:	2800      	cmp	r0, #0
   1ab06:	d1f4      	bne.n	1aaf2 <prvUnlockQueue+0x1e>
   1ab08:	6ca3      	ldr	r3, [r4, #72]	; 0x48
   1ab0a:	3b01      	subs	r3, #1
   1ab0c:	64a3      	str	r3, [r4, #72]	; 0x48
   1ab0e:	e7e5      	b.n	1aadc <prvUnlockQueue+0x8>
   1ab10:	f04f 33ff 	mov.w	r3, #4294967295
   1ab14:	64a3      	str	r3, [r4, #72]	; 0x48
   1ab16:	f000 ffe5 	bl	1bae4 <vPortExitCritical>
   1ab1a:	f000 ffd1 	bl	1bac0 <vPortEnterCritical>
   1ab1e:	6c63      	ldr	r3, [r4, #68]	; 0x44
   1ab20:	2b00      	cmp	r3, #0
   1ab22:	dd0c      	ble.n	1ab3e <prvUnlockQueue+0x6a>
   1ab24:	6923      	ldr	r3, [r4, #16]
   1ab26:	b153      	cbz	r3, 1ab3e <prvUnlockQueue+0x6a>
   1ab28:	f104 0010 	add.w	r0, r4, #16
   1ab2c:	f000 fe2a 	bl	1b784 <xTaskRemoveFromEventList>
   1ab30:	b108      	cbz	r0, 1ab36 <prvUnlockQueue+0x62>
   1ab32:	f000 fe8f 	bl	1b854 <vTaskMissedYield>
   1ab36:	6c63      	ldr	r3, [r4, #68]	; 0x44
   1ab38:	3b01      	subs	r3, #1
   1ab3a:	6463      	str	r3, [r4, #68]	; 0x44
   1ab3c:	e7ef      	b.n	1ab1e <prvUnlockQueue+0x4a>
   1ab3e:	f04f 33ff 	mov.w	r3, #4294967295
   1ab42:	6463      	str	r3, [r4, #68]	; 0x44
   1ab44:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   1ab48:	f000 bfcc 	b.w	1bae4 <vPortExitCritical>

0001ab4c <xQueueGenericReset>:
xQueueGenericReset():
   1ab4c:	b538      	push	{r3, r4, r5, lr}
   1ab4e:	4604      	mov	r4, r0
   1ab50:	460d      	mov	r5, r1
   1ab52:	f000 ffb5 	bl	1bac0 <vPortEnterCritical>
   1ab56:	6c22      	ldr	r2, [r4, #64]	; 0x40
   1ab58:	6be0      	ldr	r0, [r4, #60]	; 0x3c
   1ab5a:	6823      	ldr	r3, [r4, #0]
   1ab5c:	4350      	muls	r0, r2
   1ab5e:	1a82      	subs	r2, r0, r2
   1ab60:	1819      	adds	r1, r3, r0
   1ab62:	60a3      	str	r3, [r4, #8]
   1ab64:	4413      	add	r3, r2
   1ab66:	6061      	str	r1, [r4, #4]
   1ab68:	60e3      	str	r3, [r4, #12]
   1ab6a:	2100      	movs	r1, #0
   1ab6c:	f04f 33ff 	mov.w	r3, #4294967295
   1ab70:	63a1      	str	r1, [r4, #56]	; 0x38
   1ab72:	6463      	str	r3, [r4, #68]	; 0x44
   1ab74:	64a3      	str	r3, [r4, #72]	; 0x48
   1ab76:	b955      	cbnz	r5, 1ab8e <xQueueGenericReset+0x42>
   1ab78:	6923      	ldr	r3, [r4, #16]
   1ab7a:	b183      	cbz	r3, 1ab9e <xQueueGenericReset+0x52>
   1ab7c:	f104 0010 	add.w	r0, r4, #16
   1ab80:	f000 fe00 	bl	1b784 <xTaskRemoveFromEventList>
   1ab84:	2801      	cmp	r0, #1
   1ab86:	d10a      	bne.n	1ab9e <xQueueGenericReset+0x52>
   1ab88:	f000 ff86 	bl	1ba98 <vPortYield>
   1ab8c:	e007      	b.n	1ab9e <xQueueGenericReset+0x52>
   1ab8e:	f104 0010 	add.w	r0, r4, #16
   1ab92:	f7ff fefd 	bl	1a990 <vListInitialise>
   1ab96:	f104 0024 	add.w	r0, r4, #36	; 0x24
   1ab9a:	f7ff fef9 	bl	1a990 <vListInitialise>
   1ab9e:	f000 ffa1 	bl	1bae4 <vPortExitCritical>
   1aba2:	2001      	movs	r0, #1
   1aba4:	bd38      	pop	{r3, r4, r5, pc}

0001aba6 <xQueueGenericCreate>:
xQueueGenericCreate():
   1aba6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1abaa:	460f      	mov	r7, r1
   1abac:	4690      	mov	r8, r2
   1abae:	4605      	mov	r5, r0
   1abb0:	b908      	cbnz	r0, 1abb6 <xQueueGenericCreate+0x10>
   1abb2:	2400      	movs	r4, #0
   1abb4:	e01c      	b.n	1abf0 <xQueueGenericCreate+0x4a>
   1abb6:	2058      	movs	r0, #88	; 0x58
   1abb8:	f001 f83e 	bl	1bc38 <pvPortMalloc>
   1abbc:	4604      	mov	r4, r0
   1abbe:	2800      	cmp	r0, #0
   1abc0:	d0f7      	beq.n	1abb2 <xQueueGenericCreate+0xc>
   1abc2:	fb07 f005 	mul.w	r0, r7, r5
   1abc6:	3001      	adds	r0, #1
   1abc8:	f001 f836 	bl	1bc38 <pvPortMalloc>
   1abcc:	4606      	mov	r6, r0
   1abce:	6020      	str	r0, [r4, #0]
   1abd0:	b150      	cbz	r0, 1abe8 <xQueueGenericCreate+0x42>
   1abd2:	63e5      	str	r5, [r4, #60]	; 0x3c
   1abd4:	6427      	str	r7, [r4, #64]	; 0x40
   1abd6:	4620      	mov	r0, r4
   1abd8:	2101      	movs	r1, #1
   1abda:	f7ff ffb7 	bl	1ab4c <xQueueGenericReset>
   1abde:	2300      	movs	r3, #0
   1abe0:	f884 8050 	strb.w	r8, [r4, #80]	; 0x50
   1abe4:	6563      	str	r3, [r4, #84]	; 0x54
   1abe6:	e003      	b.n	1abf0 <xQueueGenericCreate+0x4a>
   1abe8:	4620      	mov	r0, r4
   1abea:	f001 f834 	bl	1bc56 <vPortFree>
   1abee:	4634      	mov	r4, r6
   1abf0:	4620      	mov	r0, r4
   1abf2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0001abf6 <xQueueCreateCountingSemaphore>:
xQueueCreateCountingSemaphore():
   1abf6:	b510      	push	{r4, lr}
   1abf8:	2202      	movs	r2, #2
   1abfa:	460c      	mov	r4, r1
   1abfc:	2100      	movs	r1, #0
   1abfe:	f7ff ffd2 	bl	1aba6 <xQueueGenericCreate>
   1ac02:	b100      	cbz	r0, 1ac06 <xQueueCreateCountingSemaphore+0x10>
   1ac04:	6384      	str	r4, [r0, #56]	; 0x38
   1ac06:	bd10      	pop	{r4, pc}

0001ac08 <xQueueGenericSend>:
xQueueGenericSend():
   1ac08:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
   1ac0c:	4604      	mov	r4, r0
   1ac0e:	4688      	mov	r8, r1
   1ac10:	9201      	str	r2, [sp, #4]
   1ac12:	461d      	mov	r5, r3
   1ac14:	2600      	movs	r6, #0
   1ac16:	f000 ff53 	bl	1bac0 <vPortEnterCritical>
   1ac1a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
   1ac1c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
   1ac1e:	429a      	cmp	r2, r3
   1ac20:	d301      	bcc.n	1ac26 <xQueueGenericSend+0x1e>
   1ac22:	2d02      	cmp	r5, #2
   1ac24:	d11a      	bne.n	1ac5c <xQueueGenericSend+0x54>
   1ac26:	4620      	mov	r0, r4
   1ac28:	4641      	mov	r1, r8
   1ac2a:	462a      	mov	r2, r5
   1ac2c:	f7ff fef2 	bl	1aa14 <prvCopyDataToQueue>
   1ac30:	6d63      	ldr	r3, [r4, #84]	; 0x54
   1ac32:	b143      	cbz	r3, 1ac46 <xQueueGenericSend+0x3e>
   1ac34:	4620      	mov	r0, r4
   1ac36:	4629      	mov	r1, r5
   1ac38:	f7ff ff1f 	bl	1aa7a <prvNotifyQueueSetContainer>
   1ac3c:	2801      	cmp	r0, #1
   1ac3e:	d109      	bne.n	1ac54 <xQueueGenericSend+0x4c>
   1ac40:	f000 ff2a 	bl	1ba98 <vPortYield>
   1ac44:	e006      	b.n	1ac54 <xQueueGenericSend+0x4c>
   1ac46:	6a63      	ldr	r3, [r4, #36]	; 0x24
   1ac48:	b123      	cbz	r3, 1ac54 <xQueueGenericSend+0x4c>
   1ac4a:	f104 0024 	add.w	r0, r4, #36	; 0x24
   1ac4e:	f000 fd99 	bl	1b784 <xTaskRemoveFromEventList>
   1ac52:	e7f3      	b.n	1ac3c <xQueueGenericSend+0x34>
   1ac54:	f000 ff46 	bl	1bae4 <vPortExitCritical>
   1ac58:	2001      	movs	r0, #1
   1ac5a:	e043      	b.n	1ace4 <xQueueGenericSend+0xdc>
   1ac5c:	9f01      	ldr	r7, [sp, #4]
   1ac5e:	b917      	cbnz	r7, 1ac66 <xQueueGenericSend+0x5e>
   1ac60:	f000 ff40 	bl	1bae4 <vPortExitCritical>
   1ac64:	e03d      	b.n	1ace2 <xQueueGenericSend+0xda>
   1ac66:	b916      	cbnz	r6, 1ac6e <xQueueGenericSend+0x66>
   1ac68:	a802      	add	r0, sp, #8
   1ac6a:	f000 fdc1 	bl	1b7f0 <vTaskSetTimeOutState>
   1ac6e:	f000 ff39 	bl	1bae4 <vPortExitCritical>
   1ac72:	f000 faf9 	bl	1b268 <vTaskSuspendAll>
   1ac76:	f000 ff23 	bl	1bac0 <vPortEnterCritical>
   1ac7a:	6c63      	ldr	r3, [r4, #68]	; 0x44
   1ac7c:	3301      	adds	r3, #1
   1ac7e:	bf04      	itt	eq
   1ac80:	2300      	moveq	r3, #0
   1ac82:	6463      	streq	r3, [r4, #68]	; 0x44
   1ac84:	6ca3      	ldr	r3, [r4, #72]	; 0x48
   1ac86:	3301      	adds	r3, #1
   1ac88:	bf04      	itt	eq
   1ac8a:	2300      	moveq	r3, #0
   1ac8c:	64a3      	streq	r3, [r4, #72]	; 0x48
   1ac8e:	f000 ff29 	bl	1bae4 <vPortExitCritical>
   1ac92:	a802      	add	r0, sp, #8
   1ac94:	a901      	add	r1, sp, #4
   1ac96:	f000 fdb7 	bl	1b808 <xTaskCheckForTimeOut>
   1ac9a:	b9e8      	cbnz	r0, 1acd8 <xQueueGenericSend+0xd0>
   1ac9c:	f000 ff10 	bl	1bac0 <vPortEnterCritical>
   1aca0:	6ba7      	ldr	r7, [r4, #56]	; 0x38
   1aca2:	6be6      	ldr	r6, [r4, #60]	; 0x3c
   1aca4:	f000 ff1e 	bl	1bae4 <vPortExitCritical>
   1aca8:	42b7      	cmp	r7, r6
   1acaa:	d10f      	bne.n	1accc <xQueueGenericSend+0xc4>
   1acac:	f104 0010 	add.w	r0, r4, #16
   1acb0:	9901      	ldr	r1, [sp, #4]
   1acb2:	f000 fd39 	bl	1b728 <vTaskPlaceOnEventList>
   1acb6:	4620      	mov	r0, r4
   1acb8:	f7ff ff0c 	bl	1aad4 <prvUnlockQueue>
   1acbc:	f000 fb78 	bl	1b3b0 <xTaskResumeAll>
   1acc0:	b108      	cbz	r0, 1acc6 <xQueueGenericSend+0xbe>
   1acc2:	2601      	movs	r6, #1
   1acc4:	e7a7      	b.n	1ac16 <xQueueGenericSend+0xe>
   1acc6:	f000 fee7 	bl	1ba98 <vPortYield>
   1acca:	e7fa      	b.n	1acc2 <xQueueGenericSend+0xba>
   1accc:	4620      	mov	r0, r4
   1acce:	f7ff ff01 	bl	1aad4 <prvUnlockQueue>
   1acd2:	f000 fb6d 	bl	1b3b0 <xTaskResumeAll>
   1acd6:	e7f4      	b.n	1acc2 <xQueueGenericSend+0xba>
   1acd8:	4620      	mov	r0, r4
   1acda:	f7ff fefb 	bl	1aad4 <prvUnlockQueue>
   1acde:	f000 fb67 	bl	1b3b0 <xTaskResumeAll>
   1ace2:	2000      	movs	r0, #0
   1ace4:	b004      	add	sp, #16
   1ace6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0001acea <xQueueCreateMutex>:
xQueueCreateMutex():
   1acea:	b570      	push	{r4, r5, r6, lr}
   1acec:	4606      	mov	r6, r0
   1acee:	2058      	movs	r0, #88	; 0x58
   1acf0:	f000 ffa2 	bl	1bc38 <pvPortMalloc>
   1acf4:	4604      	mov	r4, r0
   1acf6:	b1e0      	cbz	r0, 1ad32 <xQueueCreateMutex+0x48>
   1acf8:	2301      	movs	r3, #1
   1acfa:	2500      	movs	r5, #0
   1acfc:	63c3      	str	r3, [r0, #60]	; 0x3c
   1acfe:	f04f 33ff 	mov.w	r3, #4294967295
   1ad02:	6385      	str	r5, [r0, #56]	; 0x38
   1ad04:	6045      	str	r5, [r0, #4]
   1ad06:	6443      	str	r3, [r0, #68]	; 0x44
   1ad08:	6005      	str	r5, [r0, #0]
   1ad0a:	6483      	str	r3, [r0, #72]	; 0x48
   1ad0c:	6085      	str	r5, [r0, #8]
   1ad0e:	60c5      	str	r5, [r0, #12]
   1ad10:	6405      	str	r5, [r0, #64]	; 0x40
   1ad12:	f880 6050 	strb.w	r6, [r0, #80]	; 0x50
   1ad16:	6545      	str	r5, [r0, #84]	; 0x54
   1ad18:	3010      	adds	r0, #16
   1ad1a:	f7ff fe39 	bl	1a990 <vListInitialise>
   1ad1e:	f104 0024 	add.w	r0, r4, #36	; 0x24
   1ad22:	f7ff fe35 	bl	1a990 <vListInitialise>
   1ad26:	4620      	mov	r0, r4
   1ad28:	4629      	mov	r1, r5
   1ad2a:	462a      	mov	r2, r5
   1ad2c:	462b      	mov	r3, r5
   1ad2e:	f7ff ff6b 	bl	1ac08 <xQueueGenericSend>
   1ad32:	4620      	mov	r0, r4
   1ad34:	bd70      	pop	{r4, r5, r6, pc}

0001ad36 <xQueueGenericSendFromISR>:
xQueueGenericSendFromISR():
   1ad36:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1ad3a:	4604      	mov	r4, r0
   1ad3c:	4615      	mov	r5, r2
   1ad3e:	461e      	mov	r6, r3
   1ad40:	4688      	mov	r8, r1
   1ad42:	f000 feb5 	bl	1bab0 <ulPortSetInterruptMask>
   1ad46:	6ba2      	ldr	r2, [r4, #56]	; 0x38
   1ad48:	6be3      	ldr	r3, [r4, #60]	; 0x3c
   1ad4a:	4607      	mov	r7, r0
   1ad4c:	429a      	cmp	r2, r3
   1ad4e:	d301      	bcc.n	1ad54 <xQueueGenericSendFromISR+0x1e>
   1ad50:	2e02      	cmp	r6, #2
   1ad52:	d122      	bne.n	1ad9a <xQueueGenericSendFromISR+0x64>
   1ad54:	4620      	mov	r0, r4
   1ad56:	4641      	mov	r1, r8
   1ad58:	4632      	mov	r2, r6
   1ad5a:	f7ff fe5b 	bl	1aa14 <prvCopyDataToQueue>
   1ad5e:	6ca3      	ldr	r3, [r4, #72]	; 0x48
   1ad60:	3301      	adds	r3, #1
   1ad62:	d115      	bne.n	1ad90 <xQueueGenericSendFromISR+0x5a>
   1ad64:	6d63      	ldr	r3, [r4, #84]	; 0x54
   1ad66:	b143      	cbz	r3, 1ad7a <xQueueGenericSendFromISR+0x44>
   1ad68:	4620      	mov	r0, r4
   1ad6a:	4631      	mov	r1, r6
   1ad6c:	f7ff fe85 	bl	1aa7a <prvNotifyQueueSetContainer>
   1ad70:	2801      	cmp	r0, #1
   1ad72:	d110      	bne.n	1ad96 <xQueueGenericSendFromISR+0x60>
   1ad74:	b17d      	cbz	r5, 1ad96 <xQueueGenericSendFromISR+0x60>
   1ad76:	6028      	str	r0, [r5, #0]
   1ad78:	e00d      	b.n	1ad96 <xQueueGenericSendFromISR+0x60>
   1ad7a:	6a63      	ldr	r3, [r4, #36]	; 0x24
   1ad7c:	b15b      	cbz	r3, 1ad96 <xQueueGenericSendFromISR+0x60>
   1ad7e:	f104 0024 	add.w	r0, r4, #36	; 0x24
   1ad82:	f000 fcff 	bl	1b784 <xTaskRemoveFromEventList>
   1ad86:	b130      	cbz	r0, 1ad96 <xQueueGenericSendFromISR+0x60>
   1ad88:	b12d      	cbz	r5, 1ad96 <xQueueGenericSendFromISR+0x60>
   1ad8a:	2401      	movs	r4, #1
   1ad8c:	602c      	str	r4, [r5, #0]
   1ad8e:	e005      	b.n	1ad9c <xQueueGenericSendFromISR+0x66>
   1ad90:	6ca3      	ldr	r3, [r4, #72]	; 0x48
   1ad92:	3301      	adds	r3, #1
   1ad94:	64a3      	str	r3, [r4, #72]	; 0x48
   1ad96:	2401      	movs	r4, #1
   1ad98:	e000      	b.n	1ad9c <xQueueGenericSendFromISR+0x66>
   1ad9a:	2400      	movs	r4, #0
   1ad9c:	4638      	mov	r0, r7
   1ad9e:	f000 fe9d 	bl	1badc <vPortClearInterruptMask>
   1ada2:	4620      	mov	r0, r4
   1ada4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0001ada8 <xQueueGenericReceive>:
xQueueGenericReceive():
   1ada8:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
   1adac:	4604      	mov	r4, r0
   1adae:	460f      	mov	r7, r1
   1adb0:	9201      	str	r2, [sp, #4]
   1adb2:	4698      	mov	r8, r3
   1adb4:	2500      	movs	r5, #0
   1adb6:	f000 fe83 	bl	1bac0 <vPortEnterCritical>
   1adba:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   1adbc:	b33b      	cbz	r3, 1ae0e <xQueueGenericReceive+0x66>
   1adbe:	4620      	mov	r0, r4
   1adc0:	4639      	mov	r1, r7
   1adc2:	68e5      	ldr	r5, [r4, #12]
   1adc4:	f7ff fe73 	bl	1aaae <prvCopyDataFromQueue>
   1adc8:	f1b8 0f00 	cmp.w	r8, #0
   1adcc:	d112      	bne.n	1adf4 <xQueueGenericReceive+0x4c>
   1adce:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   1add0:	3b01      	subs	r3, #1
   1add2:	63a3      	str	r3, [r4, #56]	; 0x38
   1add4:	6823      	ldr	r3, [r4, #0]
   1add6:	b913      	cbnz	r3, 1adde <xQueueGenericReceive+0x36>
   1add8:	f000 fd52 	bl	1b880 <xTaskGetCurrentTaskHandle>
   1addc:	6060      	str	r0, [r4, #4]
   1adde:	6923      	ldr	r3, [r4, #16]
   1ade0:	b18b      	cbz	r3, 1ae06 <xQueueGenericReceive+0x5e>
   1ade2:	f104 0010 	add.w	r0, r4, #16
   1ade6:	f000 fccd 	bl	1b784 <xTaskRemoveFromEventList>
   1adea:	2801      	cmp	r0, #1
   1adec:	d10b      	bne.n	1ae06 <xQueueGenericReceive+0x5e>
   1adee:	f000 fe53 	bl	1ba98 <vPortYield>
   1adf2:	e008      	b.n	1ae06 <xQueueGenericReceive+0x5e>
   1adf4:	6a63      	ldr	r3, [r4, #36]	; 0x24
   1adf6:	60e5      	str	r5, [r4, #12]
   1adf8:	b12b      	cbz	r3, 1ae06 <xQueueGenericReceive+0x5e>
   1adfa:	f104 0024 	add.w	r0, r4, #36	; 0x24
   1adfe:	f000 fcc1 	bl	1b784 <xTaskRemoveFromEventList>
   1ae02:	2800      	cmp	r0, #0
   1ae04:	d1f3      	bne.n	1adee <xQueueGenericReceive+0x46>
   1ae06:	f000 fe6d 	bl	1bae4 <vPortExitCritical>
   1ae0a:	2001      	movs	r0, #1
   1ae0c:	e04a      	b.n	1aea4 <xQueueGenericReceive+0xfc>
   1ae0e:	9e01      	ldr	r6, [sp, #4]
   1ae10:	b916      	cbnz	r6, 1ae18 <xQueueGenericReceive+0x70>
   1ae12:	f000 fe67 	bl	1bae4 <vPortExitCritical>
   1ae16:	e044      	b.n	1aea2 <xQueueGenericReceive+0xfa>
   1ae18:	b915      	cbnz	r5, 1ae20 <xQueueGenericReceive+0x78>
   1ae1a:	a802      	add	r0, sp, #8
   1ae1c:	f000 fce8 	bl	1b7f0 <vTaskSetTimeOutState>
   1ae20:	f000 fe60 	bl	1bae4 <vPortExitCritical>
   1ae24:	f000 fa20 	bl	1b268 <vTaskSuspendAll>
   1ae28:	f000 fe4a 	bl	1bac0 <vPortEnterCritical>
   1ae2c:	6c63      	ldr	r3, [r4, #68]	; 0x44
   1ae2e:	3301      	adds	r3, #1
   1ae30:	bf04      	itt	eq
   1ae32:	2300      	moveq	r3, #0
   1ae34:	6463      	streq	r3, [r4, #68]	; 0x44
   1ae36:	6ca3      	ldr	r3, [r4, #72]	; 0x48
   1ae38:	3301      	adds	r3, #1
   1ae3a:	bf04      	itt	eq
   1ae3c:	2300      	moveq	r3, #0
   1ae3e:	64a3      	streq	r3, [r4, #72]	; 0x48
   1ae40:	f000 fe50 	bl	1bae4 <vPortExitCritical>
   1ae44:	a802      	add	r0, sp, #8
   1ae46:	a901      	add	r1, sp, #4
   1ae48:	f000 fcde 	bl	1b808 <xTaskCheckForTimeOut>
   1ae4c:	bb20      	cbnz	r0, 1ae98 <xQueueGenericReceive+0xf0>
   1ae4e:	f000 fe37 	bl	1bac0 <vPortEnterCritical>
   1ae52:	6ba5      	ldr	r5, [r4, #56]	; 0x38
   1ae54:	f000 fe46 	bl	1bae4 <vPortExitCritical>
   1ae58:	b9c5      	cbnz	r5, 1ae8c <xQueueGenericReceive+0xe4>
   1ae5a:	6823      	ldr	r3, [r4, #0]
   1ae5c:	b933      	cbnz	r3, 1ae6c <xQueueGenericReceive+0xc4>
   1ae5e:	f000 fe2f 	bl	1bac0 <vPortEnterCritical>
   1ae62:	6860      	ldr	r0, [r4, #4]
   1ae64:	f000 fd22 	bl	1b8ac <vTaskPriorityInherit>
   1ae68:	f000 fe3c 	bl	1bae4 <vPortExitCritical>
   1ae6c:	f104 0024 	add.w	r0, r4, #36	; 0x24
   1ae70:	9901      	ldr	r1, [sp, #4]
   1ae72:	f000 fc59 	bl	1b728 <vTaskPlaceOnEventList>
   1ae76:	4620      	mov	r0, r4
   1ae78:	f7ff fe2c 	bl	1aad4 <prvUnlockQueue>
   1ae7c:	f000 fa98 	bl	1b3b0 <xTaskResumeAll>
   1ae80:	b108      	cbz	r0, 1ae86 <xQueueGenericReceive+0xde>
   1ae82:	2501      	movs	r5, #1
   1ae84:	e797      	b.n	1adb6 <xQueueGenericReceive+0xe>
   1ae86:	f000 fe07 	bl	1ba98 <vPortYield>
   1ae8a:	e7fa      	b.n	1ae82 <xQueueGenericReceive+0xda>
   1ae8c:	4620      	mov	r0, r4
   1ae8e:	f7ff fe21 	bl	1aad4 <prvUnlockQueue>
   1ae92:	f000 fa8d 	bl	1b3b0 <xTaskResumeAll>
   1ae96:	e7f4      	b.n	1ae82 <xQueueGenericReceive+0xda>
   1ae98:	4620      	mov	r0, r4
   1ae9a:	f7ff fe1b 	bl	1aad4 <prvUnlockQueue>
   1ae9e:	f000 fa87 	bl	1b3b0 <xTaskResumeAll>
   1aea2:	2000      	movs	r0, #0
   1aea4:	b004      	add	sp, #16
   1aea6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0001aeaa <xQueueReceiveFromISR>:
xQueueReceiveFromISR():
   1aeaa:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1aeac:	4604      	mov	r4, r0
   1aeae:	460f      	mov	r7, r1
   1aeb0:	4615      	mov	r5, r2
   1aeb2:	f000 fdfd 	bl	1bab0 <ulPortSetInterruptMask>
   1aeb6:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   1aeb8:	4606      	mov	r6, r0
   1aeba:	b1cb      	cbz	r3, 1aef0 <xQueueReceiveFromISR+0x46>
   1aebc:	4620      	mov	r0, r4
   1aebe:	4639      	mov	r1, r7
   1aec0:	f7ff fdf5 	bl	1aaae <prvCopyDataFromQueue>
   1aec4:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   1aec6:	3b01      	subs	r3, #1
   1aec8:	63a3      	str	r3, [r4, #56]	; 0x38
   1aeca:	6c63      	ldr	r3, [r4, #68]	; 0x44
   1aecc:	3301      	adds	r3, #1
   1aece:	d10a      	bne.n	1aee6 <xQueueReceiveFromISR+0x3c>
   1aed0:	6923      	ldr	r3, [r4, #16]
   1aed2:	b15b      	cbz	r3, 1aeec <xQueueReceiveFromISR+0x42>
   1aed4:	f104 0010 	add.w	r0, r4, #16
   1aed8:	f000 fc54 	bl	1b784 <xTaskRemoveFromEventList>
   1aedc:	b130      	cbz	r0, 1aeec <xQueueReceiveFromISR+0x42>
   1aede:	b12d      	cbz	r5, 1aeec <xQueueReceiveFromISR+0x42>
   1aee0:	2401      	movs	r4, #1
   1aee2:	602c      	str	r4, [r5, #0]
   1aee4:	e005      	b.n	1aef2 <xQueueReceiveFromISR+0x48>
   1aee6:	6c63      	ldr	r3, [r4, #68]	; 0x44
   1aee8:	3301      	adds	r3, #1
   1aeea:	6463      	str	r3, [r4, #68]	; 0x44
   1aeec:	2401      	movs	r4, #1
   1aeee:	e000      	b.n	1aef2 <xQueueReceiveFromISR+0x48>
   1aef0:	461c      	mov	r4, r3
   1aef2:	4630      	mov	r0, r6
   1aef4:	f000 fdf2 	bl	1badc <vPortClearInterruptMask>
   1aef8:	4620      	mov	r0, r4
   1aefa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0001aefc <uxQueueMessagesWaiting>:
uxQueueMessagesWaiting():
   1aefc:	b510      	push	{r4, lr}
   1aefe:	4604      	mov	r4, r0
   1af00:	f000 fdde 	bl	1bac0 <vPortEnterCritical>
   1af04:	6ba4      	ldr	r4, [r4, #56]	; 0x38
   1af06:	f000 fded 	bl	1bae4 <vPortExitCritical>
   1af0a:	4620      	mov	r0, r4
   1af0c:	bd10      	pop	{r4, pc}

0001af0e <uxQueueMessagesWaitingFromISR>:
uxQueueMessagesWaitingFromISR():
   1af0e:	6b80      	ldr	r0, [r0, #56]	; 0x38
   1af10:	4770      	bx	lr

0001af12 <xQueueSelectFromSet>:
xQueueSelectFromSet():
   1af12:	b507      	push	{r0, r1, r2, lr}
   1af14:	2300      	movs	r3, #0
   1af16:	460a      	mov	r2, r1
   1af18:	a902      	add	r1, sp, #8
   1af1a:	f841 3d04 	str.w	r3, [r1, #-4]!
   1af1e:	f7ff ff43 	bl	1ada8 <xQueueGenericReceive>
   1af22:	9801      	ldr	r0, [sp, #4]
   1af24:	b003      	add	sp, #12
   1af26:	f85d fb04 	ldr.w	pc, [sp], #4

0001af2a <prvResetRunTimeStatsInList>:
prvResetRunTimeStatsInList():
   1af2a:	6843      	ldr	r3, [r0, #4]
   1af2c:	f100 0208 	add.w	r2, r0, #8
   1af30:	685b      	ldr	r3, [r3, #4]
   1af32:	b530      	push	{r4, r5, lr}
   1af34:	4293      	cmp	r3, r2
   1af36:	6043      	str	r3, [r0, #4]
   1af38:	bf04      	itt	eq
   1af3a:	6853      	ldreq	r3, [r2, #4]
   1af3c:	6043      	streq	r3, [r0, #4]
   1af3e:	6843      	ldr	r3, [r0, #4]
   1af40:	68dc      	ldr	r4, [r3, #12]
   1af42:	685b      	ldr	r3, [r3, #4]
   1af44:	2500      	movs	r5, #0
   1af46:	4293      	cmp	r3, r2
   1af48:	bf08      	it	eq
   1af4a:	68c3      	ldreq	r3, [r0, #12]
   1af4c:	68d9      	ldr	r1, [r3, #12]
   1af4e:	42a1      	cmp	r1, r4
   1af50:	648d      	str	r5, [r1, #72]	; 0x48
   1af52:	d1f6      	bne.n	1af42 <prvResetRunTimeStatsInList+0x18>
   1af54:	6043      	str	r3, [r0, #4]
   1af56:	bd30      	pop	{r4, r5, pc}

0001af58 <prvIdleTask>:
prvIdleTask():
   1af58:	b508      	push	{r3, lr}
   1af5a:	4b04      	ldr	r3, [pc, #16]	; (1af6c <prvIdleTask+0x14>)
   1af5c:	681b      	ldr	r3, [r3, #0]
   1af5e:	2b01      	cmp	r3, #1
   1af60:	d901      	bls.n	1af66 <prvIdleTask+0xe>
   1af62:	f000 fd99 	bl	1ba98 <vPortYield>
   1af66:	f000 fe37 	bl	1bbd8 <vApplicationIdleHook>
   1af6a:	e7f6      	b.n	1af5a <prvIdleTask+0x2>
   1af6c:	2007ca14 	.word	0x2007ca14

0001af70 <prvListTaskWithinSingleList>:
prvListTaskWithinSingleList():
   1af70:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1af74:	680c      	ldr	r4, [r1, #0]
   1af76:	2c00      	cmp	r4, #0
   1af78:	d03e      	beq.n	1aff8 <prvListTaskWithinSingleList+0x88>
   1af7a:	684c      	ldr	r4, [r1, #4]
   1af7c:	f101 0608 	add.w	r6, r1, #8
   1af80:	6864      	ldr	r4, [r4, #4]
   1af82:	4603      	mov	r3, r0
   1af84:	42b4      	cmp	r4, r6
   1af86:	604c      	str	r4, [r1, #4]
   1af88:	bf08      	it	eq
   1af8a:	6874      	ldreq	r4, [r6, #4]
   1af8c:	f04f 0000 	mov.w	r0, #0
   1af90:	bf08      	it	eq
   1af92:	604c      	streq	r4, [r1, #4]
   1af94:	684c      	ldr	r4, [r1, #4]
   1af96:	68e7      	ldr	r7, [r4, #12]
   1af98:	684c      	ldr	r4, [r1, #4]
   1af9a:	6864      	ldr	r4, [r4, #4]
   1af9c:	42b4      	cmp	r4, r6
   1af9e:	604c      	str	r4, [r1, #4]
   1afa0:	bf04      	itt	eq
   1afa2:	68cc      	ldreq	r4, [r1, #12]
   1afa4:	604c      	streq	r4, [r1, #4]
   1afa6:	684c      	ldr	r4, [r1, #4]
   1afa8:	2a03      	cmp	r2, #3
   1afaa:	68e4      	ldr	r4, [r4, #12]
   1afac:	f104 0534 	add.w	r5, r4, #52	; 0x34
   1afb0:	601c      	str	r4, [r3, #0]
   1afb2:	605d      	str	r5, [r3, #4]
   1afb4:	6be5      	ldr	r5, [r4, #60]	; 0x3c
   1afb6:	731a      	strb	r2, [r3, #12]
   1afb8:	609d      	str	r5, [r3, #8]
   1afba:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
   1afbc:	611d      	str	r5, [r3, #16]
   1afbe:	d103      	bne.n	1afc8 <prvListTaskWithinSingleList+0x58>
   1afc0:	6aa5      	ldr	r5, [r4, #40]	; 0x28
   1afc2:	b10d      	cbz	r5, 1afc8 <prvListTaskWithinSingleList+0x58>
   1afc4:	2502      	movs	r5, #2
   1afc6:	731d      	strb	r5, [r3, #12]
   1afc8:	6c65      	ldr	r5, [r4, #68]	; 0x44
   1afca:	615d      	str	r5, [r3, #20]
   1afcc:	6ca5      	ldr	r5, [r4, #72]	; 0x48
   1afce:	619d      	str	r5, [r3, #24]
   1afd0:	f8d4 8030 	ldr.w	r8, [r4, #48]	; 0x30
   1afd4:	2500      	movs	r5, #0
   1afd6:	f818 c005 	ldrb.w	ip, [r8, r5]
   1afda:	f1bc 0fa5 	cmp.w	ip, #165	; 0xa5
   1afde:	d101      	bne.n	1afe4 <prvListTaskWithinSingleList+0x74>
   1afe0:	3501      	adds	r5, #1
   1afe2:	e7f8      	b.n	1afd6 <prvListTaskWithinSingleList+0x66>
   1afe4:	08ad      	lsrs	r5, r5, #2
   1afe6:	42bc      	cmp	r4, r7
   1afe8:	839d      	strh	r5, [r3, #28]
   1afea:	f100 0001 	add.w	r0, r0, #1
   1afee:	f103 0320 	add.w	r3, r3, #32
   1aff2:	d1d1      	bne.n	1af98 <prvListTaskWithinSingleList+0x28>
   1aff4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1aff8:	4620      	mov	r0, r4
   1affa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

0001b000 <prvResetNextTaskUnblockTime>:
prvResetNextTaskUnblockTime():
   1b000:	4a06      	ldr	r2, [pc, #24]	; (1b01c <prvResetNextTaskUnblockTime+0x1c>)
   1b002:	6813      	ldr	r3, [r2, #0]
   1b004:	6819      	ldr	r1, [r3, #0]
   1b006:	4b06      	ldr	r3, [pc, #24]	; (1b020 <prvResetNextTaskUnblockTime+0x20>)
   1b008:	b911      	cbnz	r1, 1b010 <prvResetNextTaskUnblockTime+0x10>
   1b00a:	f04f 32ff 	mov.w	r2, #4294967295
   1b00e:	e003      	b.n	1b018 <prvResetNextTaskUnblockTime+0x18>
   1b010:	6812      	ldr	r2, [r2, #0]
   1b012:	68d2      	ldr	r2, [r2, #12]
   1b014:	68d2      	ldr	r2, [r2, #12]
   1b016:	6852      	ldr	r2, [r2, #4]
   1b018:	601a      	str	r2, [r3, #0]
   1b01a:	4770      	bx	lr
   1b01c:	2007c9e0 	.word	0x2007c9e0
   1b020:	2007c058 	.word	0x2007c058

0001b024 <prvAddCurrentTaskToDelayedList>:
prvAddCurrentTaskToDelayedList():
   1b024:	4b0e      	ldr	r3, [pc, #56]	; (1b060 <prvAddCurrentTaskToDelayedList+0x3c>)
   1b026:	b510      	push	{r4, lr}
   1b028:	681a      	ldr	r2, [r3, #0]
   1b02a:	4604      	mov	r4, r0
   1b02c:	6050      	str	r0, [r2, #4]
   1b02e:	4a0d      	ldr	r2, [pc, #52]	; (1b064 <prvAddCurrentTaskToDelayedList+0x40>)
   1b030:	6812      	ldr	r2, [r2, #0]
   1b032:	4290      	cmp	r0, r2
   1b034:	d207      	bcs.n	1b046 <prvAddCurrentTaskToDelayedList+0x22>
   1b036:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   1b03a:	4a0b      	ldr	r2, [pc, #44]	; (1b068 <prvAddCurrentTaskToDelayedList+0x44>)
   1b03c:	6810      	ldr	r0, [r2, #0]
   1b03e:	6819      	ldr	r1, [r3, #0]
   1b040:	3104      	adds	r1, #4
   1b042:	f7ff bcbf 	b.w	1a9c4 <vListInsert>
   1b046:	4a09      	ldr	r2, [pc, #36]	; (1b06c <prvAddCurrentTaskToDelayedList+0x48>)
   1b048:	6810      	ldr	r0, [r2, #0]
   1b04a:	6819      	ldr	r1, [r3, #0]
   1b04c:	3104      	adds	r1, #4
   1b04e:	f7ff fcb9 	bl	1a9c4 <vListInsert>
   1b052:	4b07      	ldr	r3, [pc, #28]	; (1b070 <prvAddCurrentTaskToDelayedList+0x4c>)
   1b054:	681a      	ldr	r2, [r3, #0]
   1b056:	4294      	cmp	r4, r2
   1b058:	bf38      	it	cc
   1b05a:	601c      	strcc	r4, [r3, #0]
   1b05c:	bd10      	pop	{r4, pc}
   1b05e:	bf00      	nop
   1b060:	2007ca80 	.word	0x2007ca80
   1b064:	2007ca98 	.word	0x2007ca98
   1b068:	2007ca9c 	.word	0x2007ca9c
   1b06c:	2007c9e0 	.word	0x2007c9e0
   1b070:	2007c058 	.word	0x2007c058

0001b074 <xTaskGenericCreate>:
xTaskGenericCreate():
   1b074:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b078:	4682      	mov	sl, r0
   1b07a:	204c      	movs	r0, #76	; 0x4c
   1b07c:	4688      	mov	r8, r1
   1b07e:	4615      	mov	r5, r2
   1b080:	4699      	mov	r9, r3
   1b082:	9f0a      	ldr	r7, [sp, #40]	; 0x28
   1b084:	9e0c      	ldr	r6, [sp, #48]	; 0x30
   1b086:	f000 fdd7 	bl	1bc38 <pvPortMalloc>
   1b08a:	4604      	mov	r4, r0
   1b08c:	2800      	cmp	r0, #0
   1b08e:	f000 8098 	beq.w	1b1c2 <xTaskGenericCreate+0x14e>
   1b092:	4630      	mov	r0, r6
   1b094:	b916      	cbnz	r6, 1b09c <xTaskGenericCreate+0x28>
   1b096:	00a8      	lsls	r0, r5, #2
   1b098:	f000 fdce 	bl	1bc38 <pvPortMalloc>
   1b09c:	6320      	str	r0, [r4, #48]	; 0x30
   1b09e:	b918      	cbnz	r0, 1b0a8 <xTaskGenericCreate+0x34>
   1b0a0:	4620      	mov	r0, r4
   1b0a2:	f000 fdd8 	bl	1bc56 <vPortFree>
   1b0a6:	e08c      	b.n	1b1c2 <xTaskGenericCreate+0x14e>
   1b0a8:	00ad      	lsls	r5, r5, #2
   1b0aa:	462a      	mov	r2, r5
   1b0ac:	21a5      	movs	r1, #165	; 0xa5
   1b0ae:	f002 fede 	bl	1de6e <memset>
   1b0b2:	6b23      	ldr	r3, [r4, #48]	; 0x30
   1b0b4:	3d04      	subs	r5, #4
   1b0b6:	442b      	add	r3, r5
   1b0b8:	f023 0607 	bic.w	r6, r3, #7
   1b0bc:	2500      	movs	r5, #0
   1b0be:	f818 1005 	ldrb.w	r1, [r8, r5]
   1b0c2:	1962      	adds	r2, r4, r5
   1b0c4:	f882 1034 	strb.w	r1, [r2, #52]	; 0x34
   1b0c8:	f918 2005 	ldrsb.w	r2, [r8, r5]
   1b0cc:	b112      	cbz	r2, 1b0d4 <xTaskGenericCreate+0x60>
   1b0ce:	3501      	adds	r5, #1
   1b0d0:	2d08      	cmp	r5, #8
   1b0d2:	d1f4      	bne.n	1b0be <xTaskGenericCreate+0x4a>
   1b0d4:	2f04      	cmp	r7, #4
   1b0d6:	bf34      	ite	cc
   1b0d8:	463d      	movcc	r5, r7
   1b0da:	2504      	movcs	r5, #4
   1b0dc:	f04f 0b00 	mov.w	fp, #0
   1b0e0:	f104 0804 	add.w	r8, r4, #4
   1b0e4:	62e5      	str	r5, [r4, #44]	; 0x2c
   1b0e6:	6465      	str	r5, [r4, #68]	; 0x44
   1b0e8:	4640      	mov	r0, r8
   1b0ea:	f884 b03b 	strb.w	fp, [r4, #59]	; 0x3b
   1b0ee:	f7ff fc5a 	bl	1a9a6 <vListInitialiseItem>
   1b0f2:	f1c5 0505 	rsb	r5, r5, #5
   1b0f6:	f104 0018 	add.w	r0, r4, #24
   1b0fa:	f7ff fc54 	bl	1a9a6 <vListInitialiseItem>
   1b0fe:	6124      	str	r4, [r4, #16]
   1b100:	61a5      	str	r5, [r4, #24]
   1b102:	6264      	str	r4, [r4, #36]	; 0x24
   1b104:	f8c4 b048 	str.w	fp, [r4, #72]	; 0x48
   1b108:	4630      	mov	r0, r6
   1b10a:	4651      	mov	r1, sl
   1b10c:	464a      	mov	r2, r9
   1b10e:	f000 fca5 	bl	1ba5c <pxPortInitialiseStack>
   1b112:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   1b114:	6020      	str	r0, [r4, #0]
   1b116:	b103      	cbz	r3, 1b11a <xTaskGenericCreate+0xa6>
   1b118:	601c      	str	r4, [r3, #0]
   1b11a:	f000 fcd1 	bl	1bac0 <vPortEnterCritical>
   1b11e:	4b2b      	ldr	r3, [pc, #172]	; (1b1cc <xTaskGenericCreate+0x158>)
   1b120:	4d2b      	ldr	r5, [pc, #172]	; (1b1d0 <xTaskGenericCreate+0x15c>)
   1b122:	681a      	ldr	r2, [r3, #0]
   1b124:	f8df 90cc 	ldr.w	r9, [pc, #204]	; 1b1f4 <xTaskGenericCreate+0x180>
   1b128:	3201      	adds	r2, #1
   1b12a:	601a      	str	r2, [r3, #0]
   1b12c:	682e      	ldr	r6, [r5, #0]
   1b12e:	b9fe      	cbnz	r6, 1b170 <xTaskGenericCreate+0xfc>
   1b130:	602c      	str	r4, [r5, #0]
   1b132:	681b      	ldr	r3, [r3, #0]
   1b134:	2b01      	cmp	r3, #1
   1b136:	d123      	bne.n	1b180 <xTaskGenericCreate+0x10c>
   1b138:	eb09 0006 	add.w	r0, r9, r6
   1b13c:	3614      	adds	r6, #20
   1b13e:	f7ff fc27 	bl	1a990 <vListInitialise>
   1b142:	2e64      	cmp	r6, #100	; 0x64
   1b144:	d1f8      	bne.n	1b138 <xTaskGenericCreate+0xc4>
   1b146:	f8df a0b0 	ldr.w	sl, [pc, #176]	; 1b1f8 <xTaskGenericCreate+0x184>
   1b14a:	4e22      	ldr	r6, [pc, #136]	; (1b1d4 <xTaskGenericCreate+0x160>)
   1b14c:	4650      	mov	r0, sl
   1b14e:	f7ff fc1f 	bl	1a990 <vListInitialise>
   1b152:	4630      	mov	r0, r6
   1b154:	f7ff fc1c 	bl	1a990 <vListInitialise>
   1b158:	481f      	ldr	r0, [pc, #124]	; (1b1d8 <xTaskGenericCreate+0x164>)
   1b15a:	f7ff fc19 	bl	1a990 <vListInitialise>
   1b15e:	481f      	ldr	r0, [pc, #124]	; (1b1dc <xTaskGenericCreate+0x168>)
   1b160:	f7ff fc16 	bl	1a990 <vListInitialise>
   1b164:	4b1e      	ldr	r3, [pc, #120]	; (1b1e0 <xTaskGenericCreate+0x16c>)
   1b166:	f8c3 a000 	str.w	sl, [r3]
   1b16a:	4b1e      	ldr	r3, [pc, #120]	; (1b1e4 <xTaskGenericCreate+0x170>)
   1b16c:	601e      	str	r6, [r3, #0]
   1b16e:	e007      	b.n	1b180 <xTaskGenericCreate+0x10c>
   1b170:	4b1d      	ldr	r3, [pc, #116]	; (1b1e8 <xTaskGenericCreate+0x174>)
   1b172:	681b      	ldr	r3, [r3, #0]
   1b174:	b923      	cbnz	r3, 1b180 <xTaskGenericCreate+0x10c>
   1b176:	682b      	ldr	r3, [r5, #0]
   1b178:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   1b17a:	42bb      	cmp	r3, r7
   1b17c:	bf98      	it	ls
   1b17e:	602c      	strls	r4, [r5, #0]
   1b180:	4a1a      	ldr	r2, [pc, #104]	; (1b1ec <xTaskGenericCreate+0x178>)
   1b182:	6813      	ldr	r3, [r2, #0]
   1b184:	3301      	adds	r3, #1
   1b186:	6013      	str	r3, [r2, #0]
   1b188:	63e3      	str	r3, [r4, #60]	; 0x3c
   1b18a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
   1b18c:	2401      	movs	r4, #1
   1b18e:	fa04 f003 	lsl.w	r0, r4, r3
   1b192:	4a17      	ldr	r2, [pc, #92]	; (1b1f0 <xTaskGenericCreate+0x17c>)
   1b194:	6811      	ldr	r1, [r2, #0]
   1b196:	4301      	orrs	r1, r0
   1b198:	2014      	movs	r0, #20
   1b19a:	6011      	str	r1, [r2, #0]
   1b19c:	fb00 9003 	mla	r0, r0, r3, r9
   1b1a0:	4641      	mov	r1, r8
   1b1a2:	f7ff fc03 	bl	1a9ac <vListInsertEnd>
   1b1a6:	f000 fc9d 	bl	1bae4 <vPortExitCritical>
   1b1aa:	4b0f      	ldr	r3, [pc, #60]	; (1b1e8 <xTaskGenericCreate+0x174>)
   1b1ac:	681b      	ldr	r3, [r3, #0]
   1b1ae:	b12b      	cbz	r3, 1b1bc <xTaskGenericCreate+0x148>
   1b1b0:	682b      	ldr	r3, [r5, #0]
   1b1b2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   1b1b4:	42bb      	cmp	r3, r7
   1b1b6:	d201      	bcs.n	1b1bc <xTaskGenericCreate+0x148>
   1b1b8:	f000 fc6e 	bl	1ba98 <vPortYield>
   1b1bc:	4620      	mov	r0, r4
   1b1be:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b1c2:	f04f 30ff 	mov.w	r0, #4294967295
   1b1c6:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b1ca:	bf00      	nop
   1b1cc:	2007caa4 	.word	0x2007caa4
   1b1d0:	2007ca80 	.word	0x2007ca80
   1b1d4:	2007c9fc 	.word	0x2007c9fc
   1b1d8:	2007ca84 	.word	0x2007ca84
   1b1dc:	2007caac 	.word	0x2007caac
   1b1e0:	2007c9e0 	.word	0x2007c9e0
   1b1e4:	2007ca9c 	.word	0x2007ca9c
   1b1e8:	2007c9e4 	.word	0x2007c9e4
   1b1ec:	2007caa0 	.word	0x2007caa0
   1b1f0:	2007cac0 	.word	0x2007cac0
   1b1f4:	2007ca14 	.word	0x2007ca14
   1b1f8:	2007c9e8 	.word	0x2007c9e8

0001b1fc <vTaskStartScheduler>:
vTaskStartScheduler():
   1b1fc:	b530      	push	{r4, r5, lr}
   1b1fe:	4b0f      	ldr	r3, [pc, #60]	; (1b23c <vTaskStartScheduler+0x40>)
   1b200:	b085      	sub	sp, #20
   1b202:	2400      	movs	r4, #0
   1b204:	9301      	str	r3, [sp, #4]
   1b206:	9400      	str	r4, [sp, #0]
   1b208:	9402      	str	r4, [sp, #8]
   1b20a:	9403      	str	r4, [sp, #12]
   1b20c:	480c      	ldr	r0, [pc, #48]	; (1b240 <vTaskStartScheduler+0x44>)
   1b20e:	490d      	ldr	r1, [pc, #52]	; (1b244 <vTaskStartScheduler+0x48>)
   1b210:	2280      	movs	r2, #128	; 0x80
   1b212:	4623      	mov	r3, r4
   1b214:	f7ff ff2e 	bl	1b074 <xTaskGenericCreate>
   1b218:	2801      	cmp	r0, #1
   1b21a:	4605      	mov	r5, r0
   1b21c:	d10c      	bne.n	1b238 <vTaskStartScheduler+0x3c>
   1b21e:	f000 fc47 	bl	1bab0 <ulPortSetInterruptMask>
   1b222:	4b09      	ldr	r3, [pc, #36]	; (1b248 <vTaskStartScheduler+0x4c>)
   1b224:	601d      	str	r5, [r3, #0]
   1b226:	4b09      	ldr	r3, [pc, #36]	; (1b24c <vTaskStartScheduler+0x50>)
   1b228:	601c      	str	r4, [r3, #0]
   1b22a:	f000 fcb7 	bl	1bb9c <vConfigureTimerForRunTimeStats>
   1b22e:	b005      	add	sp, #20
   1b230:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
   1b234:	f000 bc9a 	b.w	1bb6c <xPortStartScheduler>
   1b238:	b005      	add	sp, #20
   1b23a:	bd30      	pop	{r4, r5, pc}
   1b23c:	2007caa8 	.word	0x2007caa8
   1b240:	0001af59 	.word	0x0001af59
   1b244:	00026ba8 	.word	0x00026ba8
   1b248:	2007c9e4 	.word	0x2007c9e4
   1b24c:	2007ca98 	.word	0x2007ca98

0001b250 <vTaskEndScheduler>:
vTaskEndScheduler():
   1b250:	b508      	push	{r3, lr}
   1b252:	f000 fc2d 	bl	1bab0 <ulPortSetInterruptMask>
   1b256:	4b03      	ldr	r3, [pc, #12]	; (1b264 <vTaskEndScheduler+0x14>)
   1b258:	2200      	movs	r2, #0
   1b25a:	601a      	str	r2, [r3, #0]
   1b25c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
   1b260:	f000 bc18 	b.w	1ba94 <vPortEndScheduler>
   1b264:	2007c9e4 	.word	0x2007c9e4

0001b268 <vTaskSuspendAll>:
vTaskSuspendAll():
   1b268:	4b02      	ldr	r3, [pc, #8]	; (1b274 <vTaskSuspendAll+0xc>)
   1b26a:	681a      	ldr	r2, [r3, #0]
   1b26c:	3201      	adds	r2, #1
   1b26e:	601a      	str	r2, [r3, #0]
   1b270:	4770      	bx	lr
   1b272:	bf00      	nop
   1b274:	2007ca78 	.word	0x2007ca78

0001b278 <xTaskGetTickCount>:
xTaskGetTickCount():
   1b278:	b510      	push	{r4, lr}
   1b27a:	f000 fc21 	bl	1bac0 <vPortEnterCritical>
   1b27e:	4b03      	ldr	r3, [pc, #12]	; (1b28c <xTaskGetTickCount+0x14>)
   1b280:	681c      	ldr	r4, [r3, #0]
   1b282:	f000 fc2f 	bl	1bae4 <vPortExitCritical>
   1b286:	4620      	mov	r0, r4
   1b288:	bd10      	pop	{r4, pc}
   1b28a:	bf00      	nop
   1b28c:	2007ca98 	.word	0x2007ca98

0001b290 <xTaskGetTickCountFromISR>:
xTaskGetTickCountFromISR():
   1b290:	b510      	push	{r4, lr}
   1b292:	f000 fc0d 	bl	1bab0 <ulPortSetInterruptMask>
   1b296:	4b03      	ldr	r3, [pc, #12]	; (1b2a4 <xTaskGetTickCountFromISR+0x14>)
   1b298:	681c      	ldr	r4, [r3, #0]
   1b29a:	f000 fc1f 	bl	1badc <vPortClearInterruptMask>
   1b29e:	4620      	mov	r0, r4
   1b2a0:	bd10      	pop	{r4, pc}
   1b2a2:	bf00      	nop
   1b2a4:	2007ca98 	.word	0x2007ca98

0001b2a8 <uxTaskGetNumberOfTasks>:
uxTaskGetNumberOfTasks():
   1b2a8:	4b01      	ldr	r3, [pc, #4]	; (1b2b0 <uxTaskGetNumberOfTasks+0x8>)
   1b2aa:	6818      	ldr	r0, [r3, #0]
   1b2ac:	4770      	bx	lr
   1b2ae:	bf00      	nop
   1b2b0:	2007caa4 	.word	0x2007caa4

0001b2b4 <xTaskIncrementTick>:
xTaskIncrementTick():
   1b2b4:	4b33      	ldr	r3, [pc, #204]	; (1b384 <xTaskIncrementTick+0xd0>)
   1b2b6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   1b2ba:	681b      	ldr	r3, [r3, #0]
   1b2bc:	2b00      	cmp	r3, #0
   1b2be:	d133      	bne.n	1b328 <xTaskIncrementTick+0x74>
   1b2c0:	4b31      	ldr	r3, [pc, #196]	; (1b388 <xTaskIncrementTick+0xd4>)
   1b2c2:	681a      	ldr	r2, [r3, #0]
   1b2c4:	3201      	adds	r2, #1
   1b2c6:	601a      	str	r2, [r3, #0]
   1b2c8:	681e      	ldr	r6, [r3, #0]
   1b2ca:	b95e      	cbnz	r6, 1b2e4 <xTaskIncrementTick+0x30>
   1b2cc:	4a2f      	ldr	r2, [pc, #188]	; (1b38c <xTaskIncrementTick+0xd8>)
   1b2ce:	4b30      	ldr	r3, [pc, #192]	; (1b390 <xTaskIncrementTick+0xdc>)
   1b2d0:	6811      	ldr	r1, [r2, #0]
   1b2d2:	6818      	ldr	r0, [r3, #0]
   1b2d4:	6010      	str	r0, [r2, #0]
   1b2d6:	6019      	str	r1, [r3, #0]
   1b2d8:	4b2e      	ldr	r3, [pc, #184]	; (1b394 <xTaskIncrementTick+0xe0>)
   1b2da:	681a      	ldr	r2, [r3, #0]
   1b2dc:	3201      	adds	r2, #1
   1b2de:	601a      	str	r2, [r3, #0]
   1b2e0:	f7ff fe8e 	bl	1b000 <prvResetNextTaskUnblockTime>
   1b2e4:	4f2c      	ldr	r7, [pc, #176]	; (1b398 <xTaskIncrementTick+0xe4>)
   1b2e6:	2400      	movs	r4, #0
   1b2e8:	683b      	ldr	r3, [r7, #0]
   1b2ea:	f8df 80bc 	ldr.w	r8, [pc, #188]	; 1b3a8 <xTaskIncrementTick+0xf4>
   1b2ee:	429e      	cmp	r6, r3
   1b2f0:	f8df 90b8 	ldr.w	r9, [pc, #184]	; 1b3ac <xTaskIncrementTick+0xf8>
   1b2f4:	d30d      	bcc.n	1b312 <xTaskIncrementTick+0x5e>
   1b2f6:	4b25      	ldr	r3, [pc, #148]	; (1b38c <xTaskIncrementTick+0xd8>)
   1b2f8:	681a      	ldr	r2, [r3, #0]
   1b2fa:	6812      	ldr	r2, [r2, #0]
   1b2fc:	b912      	cbnz	r2, 1b304 <xTaskIncrementTick+0x50>
   1b2fe:	f04f 33ff 	mov.w	r3, #4294967295
   1b302:	e005      	b.n	1b310 <xTaskIncrementTick+0x5c>
   1b304:	681b      	ldr	r3, [r3, #0]
   1b306:	68db      	ldr	r3, [r3, #12]
   1b308:	68dd      	ldr	r5, [r3, #12]
   1b30a:	686b      	ldr	r3, [r5, #4]
   1b30c:	429e      	cmp	r6, r3
   1b30e:	d211      	bcs.n	1b334 <xTaskIncrementTick+0x80>
   1b310:	603b      	str	r3, [r7, #0]
   1b312:	f8d9 3000 	ldr.w	r3, [r9]
   1b316:	2214      	movs	r2, #20
   1b318:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   1b31a:	4353      	muls	r3, r2
   1b31c:	f858 3003 	ldr.w	r3, [r8, r3]
   1b320:	2b02      	cmp	r3, #2
   1b322:	bf28      	it	cs
   1b324:	2401      	movcs	r4, #1
   1b326:	e025      	b.n	1b374 <xTaskIncrementTick+0xc0>
   1b328:	4b1c      	ldr	r3, [pc, #112]	; (1b39c <xTaskIncrementTick+0xe8>)
   1b32a:	2400      	movs	r4, #0
   1b32c:	681a      	ldr	r2, [r3, #0]
   1b32e:	3201      	adds	r2, #1
   1b330:	601a      	str	r2, [r3, #0]
   1b332:	e01f      	b.n	1b374 <xTaskIncrementTick+0xc0>
   1b334:	f105 0a04 	add.w	sl, r5, #4
   1b338:	4650      	mov	r0, sl
   1b33a:	f7ff fb5b 	bl	1a9f4 <uxListRemove>
   1b33e:	6aab      	ldr	r3, [r5, #40]	; 0x28
   1b340:	b11b      	cbz	r3, 1b34a <xTaskIncrementTick+0x96>
   1b342:	f105 0018 	add.w	r0, r5, #24
   1b346:	f7ff fb55 	bl	1a9f4 <uxListRemove>
   1b34a:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
   1b34c:	2101      	movs	r1, #1
   1b34e:	4099      	lsls	r1, r3
   1b350:	4a13      	ldr	r2, [pc, #76]	; (1b3a0 <xTaskIncrementTick+0xec>)
   1b352:	6810      	ldr	r0, [r2, #0]
   1b354:	4301      	orrs	r1, r0
   1b356:	2014      	movs	r0, #20
   1b358:	6011      	str	r1, [r2, #0]
   1b35a:	fb00 8003 	mla	r0, r0, r3, r8
   1b35e:	4651      	mov	r1, sl
   1b360:	f7ff fb24 	bl	1a9ac <vListInsertEnd>
   1b364:	f8d9 3000 	ldr.w	r3, [r9]
   1b368:	6aea      	ldr	r2, [r5, #44]	; 0x2c
   1b36a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   1b36c:	429a      	cmp	r2, r3
   1b36e:	bf28      	it	cs
   1b370:	2401      	movcs	r4, #1
   1b372:	e7c0      	b.n	1b2f6 <xTaskIncrementTick+0x42>
   1b374:	4b0b      	ldr	r3, [pc, #44]	; (1b3a4 <xTaskIncrementTick+0xf0>)
   1b376:	681b      	ldr	r3, [r3, #0]
   1b378:	2b00      	cmp	r3, #0
   1b37a:	bf18      	it	ne
   1b37c:	2401      	movne	r4, #1
   1b37e:	4620      	mov	r0, r4
   1b380:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1b384:	2007ca78 	.word	0x2007ca78
   1b388:	2007ca98 	.word	0x2007ca98
   1b38c:	2007c9e0 	.word	0x2007c9e0
   1b390:	2007ca9c 	.word	0x2007ca9c
   1b394:	2007c9dc 	.word	0x2007c9dc
   1b398:	2007c058 	.word	0x2007c058
   1b39c:	2007ca10 	.word	0x2007ca10
   1b3a0:	2007cac0 	.word	0x2007cac0
   1b3a4:	2007cac4 	.word	0x2007cac4
   1b3a8:	2007ca14 	.word	0x2007ca14
   1b3ac:	2007ca80 	.word	0x2007ca80

0001b3b0 <xTaskResumeAll>:
xTaskResumeAll():
   1b3b0:	b570      	push	{r4, r5, r6, lr}
   1b3b2:	f000 fb85 	bl	1bac0 <vPortEnterCritical>
   1b3b6:	4b26      	ldr	r3, [pc, #152]	; (1b450 <xTaskResumeAll+0xa0>)
   1b3b8:	681a      	ldr	r2, [r3, #0]
   1b3ba:	3a01      	subs	r2, #1
   1b3bc:	601a      	str	r2, [r3, #0]
   1b3be:	681b      	ldr	r3, [r3, #0]
   1b3c0:	b10b      	cbz	r3, 1b3c6 <xTaskResumeAll+0x16>
   1b3c2:	2400      	movs	r4, #0
   1b3c4:	e03f      	b.n	1b446 <xTaskResumeAll+0x96>
   1b3c6:	4b23      	ldr	r3, [pc, #140]	; (1b454 <xTaskResumeAll+0xa4>)
   1b3c8:	681b      	ldr	r3, [r3, #0]
   1b3ca:	2b00      	cmp	r3, #0
   1b3cc:	d0f9      	beq.n	1b3c2 <xTaskResumeAll+0x12>
   1b3ce:	4b22      	ldr	r3, [pc, #136]	; (1b458 <xTaskResumeAll+0xa8>)
   1b3d0:	681a      	ldr	r2, [r3, #0]
   1b3d2:	b30a      	cbz	r2, 1b418 <xTaskResumeAll+0x68>
   1b3d4:	68db      	ldr	r3, [r3, #12]
   1b3d6:	2501      	movs	r5, #1
   1b3d8:	68dc      	ldr	r4, [r3, #12]
   1b3da:	1d26      	adds	r6, r4, #4
   1b3dc:	f104 0018 	add.w	r0, r4, #24
   1b3e0:	f7ff fb08 	bl	1a9f4 <uxListRemove>
   1b3e4:	4630      	mov	r0, r6
   1b3e6:	f7ff fb05 	bl	1a9f4 <uxListRemove>
   1b3ea:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
   1b3ec:	4a1b      	ldr	r2, [pc, #108]	; (1b45c <xTaskResumeAll+0xac>)
   1b3ee:	fa05 f003 	lsl.w	r0, r5, r3
   1b3f2:	6811      	ldr	r1, [r2, #0]
   1b3f4:	4301      	orrs	r1, r0
   1b3f6:	6011      	str	r1, [r2, #0]
   1b3f8:	4a19      	ldr	r2, [pc, #100]	; (1b460 <xTaskResumeAll+0xb0>)
   1b3fa:	2014      	movs	r0, #20
   1b3fc:	fb00 2003 	mla	r0, r0, r3, r2
   1b400:	4631      	mov	r1, r6
   1b402:	f7ff fad3 	bl	1a9ac <vListInsertEnd>
   1b406:	4b17      	ldr	r3, [pc, #92]	; (1b464 <xTaskResumeAll+0xb4>)
   1b408:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
   1b40a:	681b      	ldr	r3, [r3, #0]
   1b40c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   1b40e:	429a      	cmp	r2, r3
   1b410:	bf24      	itt	cs
   1b412:	4b15      	ldrcs	r3, [pc, #84]	; (1b468 <xTaskResumeAll+0xb8>)
   1b414:	601d      	strcs	r5, [r3, #0]
   1b416:	e7da      	b.n	1b3ce <xTaskResumeAll+0x1e>
   1b418:	4c14      	ldr	r4, [pc, #80]	; (1b46c <xTaskResumeAll+0xbc>)
   1b41a:	6823      	ldr	r3, [r4, #0]
   1b41c:	b97b      	cbnz	r3, 1b43e <xTaskResumeAll+0x8e>
   1b41e:	4b12      	ldr	r3, [pc, #72]	; (1b468 <xTaskResumeAll+0xb8>)
   1b420:	681c      	ldr	r4, [r3, #0]
   1b422:	2c01      	cmp	r4, #1
   1b424:	d1cd      	bne.n	1b3c2 <xTaskResumeAll+0x12>
   1b426:	f000 fb37 	bl	1ba98 <vPortYield>
   1b42a:	e00c      	b.n	1b446 <xTaskResumeAll+0x96>
   1b42c:	f7ff ff42 	bl	1b2b4 <xTaskIncrementTick>
   1b430:	b110      	cbz	r0, 1b438 <xTaskResumeAll+0x88>
   1b432:	4b0d      	ldr	r3, [pc, #52]	; (1b468 <xTaskResumeAll+0xb8>)
   1b434:	2201      	movs	r2, #1
   1b436:	601a      	str	r2, [r3, #0]
   1b438:	6823      	ldr	r3, [r4, #0]
   1b43a:	3b01      	subs	r3, #1
   1b43c:	6023      	str	r3, [r4, #0]
   1b43e:	6823      	ldr	r3, [r4, #0]
   1b440:	2b00      	cmp	r3, #0
   1b442:	d1f3      	bne.n	1b42c <xTaskResumeAll+0x7c>
   1b444:	e7eb      	b.n	1b41e <xTaskResumeAll+0x6e>
   1b446:	f000 fb4d 	bl	1bae4 <vPortExitCritical>
   1b44a:	4620      	mov	r0, r4
   1b44c:	bd70      	pop	{r4, r5, r6, pc}
   1b44e:	bf00      	nop
   1b450:	2007ca78 	.word	0x2007ca78
   1b454:	2007caa4 	.word	0x2007caa4
   1b458:	2007ca84 	.word	0x2007ca84
   1b45c:	2007cac0 	.word	0x2007cac0
   1b460:	2007ca14 	.word	0x2007ca14
   1b464:	2007ca80 	.word	0x2007ca80
   1b468:	2007cac4 	.word	0x2007cac4
   1b46c:	2007ca10 	.word	0x2007ca10

0001b470 <vTaskDelayUntil>:
vTaskDelayUntil():
   1b470:	b538      	push	{r3, r4, r5, lr}
   1b472:	4605      	mov	r5, r0
   1b474:	460c      	mov	r4, r1
   1b476:	f7ff fef7 	bl	1b268 <vTaskSuspendAll>
   1b47a:	4b18      	ldr	r3, [pc, #96]	; (1b4dc <vTaskDelayUntil+0x6c>)
   1b47c:	682a      	ldr	r2, [r5, #0]
   1b47e:	681b      	ldr	r3, [r3, #0]
   1b480:	4414      	add	r4, r2
   1b482:	4293      	cmp	r3, r2
   1b484:	d202      	bcs.n	1b48c <vTaskDelayUntil+0x1c>
   1b486:	4294      	cmp	r4, r2
   1b488:	d207      	bcs.n	1b49a <vTaskDelayUntil+0x2a>
   1b48a:	e001      	b.n	1b490 <vTaskDelayUntil+0x20>
   1b48c:	4294      	cmp	r4, r2
   1b48e:	d306      	bcc.n	1b49e <vTaskDelayUntil+0x2e>
   1b490:	429c      	cmp	r4, r3
   1b492:	bf94      	ite	ls
   1b494:	2300      	movls	r3, #0
   1b496:	2301      	movhi	r3, #1
   1b498:	e002      	b.n	1b4a0 <vTaskDelayUntil+0x30>
   1b49a:	2300      	movs	r3, #0
   1b49c:	e000      	b.n	1b4a0 <vTaskDelayUntil+0x30>
   1b49e:	2301      	movs	r3, #1
   1b4a0:	602c      	str	r4, [r5, #0]
   1b4a2:	b193      	cbz	r3, 1b4ca <vTaskDelayUntil+0x5a>
   1b4a4:	4d0e      	ldr	r5, [pc, #56]	; (1b4e0 <vTaskDelayUntil+0x70>)
   1b4a6:	6828      	ldr	r0, [r5, #0]
   1b4a8:	3004      	adds	r0, #4
   1b4aa:	f7ff faa3 	bl	1a9f4 <uxListRemove>
   1b4ae:	b948      	cbnz	r0, 1b4c4 <vTaskDelayUntil+0x54>
   1b4b0:	4b0c      	ldr	r3, [pc, #48]	; (1b4e4 <vTaskDelayUntil+0x74>)
   1b4b2:	2001      	movs	r0, #1
   1b4b4:	6819      	ldr	r1, [r3, #0]
   1b4b6:	682a      	ldr	r2, [r5, #0]
   1b4b8:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
   1b4ba:	fa00 f202 	lsl.w	r2, r0, r2
   1b4be:	ea21 0202 	bic.w	r2, r1, r2
   1b4c2:	601a      	str	r2, [r3, #0]
   1b4c4:	4620      	mov	r0, r4
   1b4c6:	f7ff fdad 	bl	1b024 <prvAddCurrentTaskToDelayedList>
   1b4ca:	f7ff ff71 	bl	1b3b0 <xTaskResumeAll>
   1b4ce:	b918      	cbnz	r0, 1b4d8 <vTaskDelayUntil+0x68>
   1b4d0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   1b4d4:	f000 bae0 	b.w	1ba98 <vPortYield>
   1b4d8:	bd38      	pop	{r3, r4, r5, pc}
   1b4da:	bf00      	nop
   1b4dc:	2007ca98 	.word	0x2007ca98
   1b4e0:	2007ca80 	.word	0x2007ca80
   1b4e4:	2007cac0 	.word	0x2007cac0

0001b4e8 <vTaskDelay>:
vTaskDelay():
   1b4e8:	b538      	push	{r3, r4, r5, lr}
   1b4ea:	4604      	mov	r4, r0
   1b4ec:	b918      	cbnz	r0, 1b4f6 <vTaskDelay+0xe>
   1b4ee:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   1b4f2:	f000 bad1 	b.w	1ba98 <vPortYield>
   1b4f6:	f7ff feb7 	bl	1b268 <vTaskSuspendAll>
   1b4fa:	4b0d      	ldr	r3, [pc, #52]	; (1b530 <vTaskDelay+0x48>)
   1b4fc:	681d      	ldr	r5, [r3, #0]
   1b4fe:	4425      	add	r5, r4
   1b500:	4c0c      	ldr	r4, [pc, #48]	; (1b534 <vTaskDelay+0x4c>)
   1b502:	6820      	ldr	r0, [r4, #0]
   1b504:	3004      	adds	r0, #4
   1b506:	f7ff fa75 	bl	1a9f4 <uxListRemove>
   1b50a:	b948      	cbnz	r0, 1b520 <vTaskDelay+0x38>
   1b50c:	4b0a      	ldr	r3, [pc, #40]	; (1b538 <vTaskDelay+0x50>)
   1b50e:	2001      	movs	r0, #1
   1b510:	6819      	ldr	r1, [r3, #0]
   1b512:	6822      	ldr	r2, [r4, #0]
   1b514:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
   1b516:	fa00 f202 	lsl.w	r2, r0, r2
   1b51a:	ea21 0202 	bic.w	r2, r1, r2
   1b51e:	601a      	str	r2, [r3, #0]
   1b520:	4628      	mov	r0, r5
   1b522:	f7ff fd7f 	bl	1b024 <prvAddCurrentTaskToDelayedList>
   1b526:	f7ff ff43 	bl	1b3b0 <xTaskResumeAll>
   1b52a:	2800      	cmp	r0, #0
   1b52c:	d0df      	beq.n	1b4ee <vTaskDelay+0x6>
   1b52e:	bd38      	pop	{r3, r4, r5, pc}
   1b530:	2007ca98 	.word	0x2007ca98
   1b534:	2007ca80 	.word	0x2007ca80
   1b538:	2007cac0 	.word	0x2007cac0

0001b53c <uxTaskGetSystemState>:
uxTaskGetSystemState():
   1b53c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1b540:	460c      	mov	r4, r1
   1b542:	4606      	mov	r6, r0
   1b544:	4617      	mov	r7, r2
   1b546:	f7ff fe8f 	bl	1b268 <vTaskSuspendAll>
   1b54a:	4b1a      	ldr	r3, [pc, #104]	; (1b5b4 <uxTaskGetSystemState+0x78>)
   1b54c:	681b      	ldr	r3, [r3, #0]
   1b54e:	429c      	cmp	r4, r3
   1b550:	d329      	bcc.n	1b5a6 <uxTaskGetSystemState+0x6a>
   1b552:	4d19      	ldr	r5, [pc, #100]	; (1b5b8 <uxTaskGetSystemState+0x7c>)
   1b554:	2400      	movs	r4, #0
   1b556:	f1a5 0864 	sub.w	r8, r5, #100	; 0x64
   1b55a:	eb06 1044 	add.w	r0, r6, r4, lsl #5
   1b55e:	4629      	mov	r1, r5
   1b560:	2201      	movs	r2, #1
   1b562:	f7ff fd05 	bl	1af70 <prvListTaskWithinSingleList>
   1b566:	3d14      	subs	r5, #20
   1b568:	4545      	cmp	r5, r8
   1b56a:	4404      	add	r4, r0
   1b56c:	d1f5      	bne.n	1b55a <uxTaskGetSystemState+0x1e>
   1b56e:	4b13      	ldr	r3, [pc, #76]	; (1b5bc <uxTaskGetSystemState+0x80>)
   1b570:	eb06 1044 	add.w	r0, r6, r4, lsl #5
   1b574:	6819      	ldr	r1, [r3, #0]
   1b576:	2202      	movs	r2, #2
   1b578:	f7ff fcfa 	bl	1af70 <prvListTaskWithinSingleList>
   1b57c:	4b10      	ldr	r3, [pc, #64]	; (1b5c0 <uxTaskGetSystemState+0x84>)
   1b57e:	4404      	add	r4, r0
   1b580:	6819      	ldr	r1, [r3, #0]
   1b582:	eb06 1044 	add.w	r0, r6, r4, lsl #5
   1b586:	2202      	movs	r2, #2
   1b588:	f7ff fcf2 	bl	1af70 <prvListTaskWithinSingleList>
   1b58c:	4404      	add	r4, r0
   1b58e:	eb06 1044 	add.w	r0, r6, r4, lsl #5
   1b592:	490c      	ldr	r1, [pc, #48]	; (1b5c4 <uxTaskGetSystemState+0x88>)
   1b594:	2203      	movs	r2, #3
   1b596:	f7ff fceb 	bl	1af70 <prvListTaskWithinSingleList>
   1b59a:	4404      	add	r4, r0
   1b59c:	b127      	cbz	r7, 1b5a8 <uxTaskGetSystemState+0x6c>
   1b59e:	f000 fb07 	bl	1bbb0 <uxGetTimerForRunTimeStats>
   1b5a2:	6038      	str	r0, [r7, #0]
   1b5a4:	e000      	b.n	1b5a8 <uxTaskGetSystemState+0x6c>
   1b5a6:	2400      	movs	r4, #0
   1b5a8:	f7ff ff02 	bl	1b3b0 <xTaskResumeAll>
   1b5ac:	4620      	mov	r0, r4
   1b5ae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1b5b2:	bf00      	nop
   1b5b4:	2007caa4 	.word	0x2007caa4
   1b5b8:	2007ca64 	.word	0x2007ca64
   1b5bc:	2007c9e0 	.word	0x2007c9e0
   1b5c0:	2007ca9c 	.word	0x2007ca9c
   1b5c4:	2007caac 	.word	0x2007caac

0001b5c8 <vTaskSwitchContext>:
vTaskSwitchContext():
   1b5c8:	b538      	push	{r3, r4, r5, lr}
   1b5ca:	4b26      	ldr	r3, [pc, #152]	; (1b664 <vTaskSwitchContext+0x9c>)
   1b5cc:	681a      	ldr	r2, [r3, #0]
   1b5ce:	4b26      	ldr	r3, [pc, #152]	; (1b668 <vTaskSwitchContext+0xa0>)
   1b5d0:	b112      	cbz	r2, 1b5d8 <vTaskSwitchContext+0x10>
   1b5d2:	2201      	movs	r2, #1
   1b5d4:	601a      	str	r2, [r3, #0]
   1b5d6:	bd38      	pop	{r3, r4, r5, pc}
   1b5d8:	601a      	str	r2, [r3, #0]
   1b5da:	f000 fae9 	bl	1bbb0 <uxGetTimerForRunTimeStats>
   1b5de:	4b23      	ldr	r3, [pc, #140]	; (1b66c <vTaskSwitchContext+0xa4>)
   1b5e0:	4c23      	ldr	r4, [pc, #140]	; (1b670 <vTaskSwitchContext+0xa8>)
   1b5e2:	6018      	str	r0, [r3, #0]
   1b5e4:	4b23      	ldr	r3, [pc, #140]	; (1b674 <vTaskSwitchContext+0xac>)
   1b5e6:	681a      	ldr	r2, [r3, #0]
   1b5e8:	461d      	mov	r5, r3
   1b5ea:	4290      	cmp	r0, r2
   1b5ec:	d904      	bls.n	1b5f8 <vTaskSwitchContext+0x30>
   1b5ee:	6823      	ldr	r3, [r4, #0]
   1b5f0:	6c99      	ldr	r1, [r3, #72]	; 0x48
   1b5f2:	1a8a      	subs	r2, r1, r2
   1b5f4:	4402      	add	r2, r0
   1b5f6:	649a      	str	r2, [r3, #72]	; 0x48
   1b5f8:	6821      	ldr	r1, [r4, #0]
   1b5fa:	6822      	ldr	r2, [r4, #0]
   1b5fc:	6809      	ldr	r1, [r1, #0]
   1b5fe:	6b12      	ldr	r2, [r2, #48]	; 0x30
   1b600:	6028      	str	r0, [r5, #0]
   1b602:	4291      	cmp	r1, r2
   1b604:	4b1a      	ldr	r3, [pc, #104]	; (1b670 <vTaskSwitchContext+0xa8>)
   1b606:	d804      	bhi.n	1b612 <vTaskSwitchContext+0x4a>
   1b608:	6818      	ldr	r0, [r3, #0]
   1b60a:	6819      	ldr	r1, [r3, #0]
   1b60c:	3134      	adds	r1, #52	; 0x34
   1b60e:	f000 fae5 	bl	1bbdc <vApplicationStackOverflowHook>
   1b612:	6823      	ldr	r3, [r4, #0]
   1b614:	4918      	ldr	r1, [pc, #96]	; (1b678 <vTaskSwitchContext+0xb0>)
   1b616:	6b18      	ldr	r0, [r3, #48]	; 0x30
   1b618:	2214      	movs	r2, #20
   1b61a:	4d15      	ldr	r5, [pc, #84]	; (1b670 <vTaskSwitchContext+0xa8>)
   1b61c:	f002 fbf4 	bl	1de08 <memcmp>
   1b620:	b120      	cbz	r0, 1b62c <vTaskSwitchContext+0x64>
   1b622:	6828      	ldr	r0, [r5, #0]
   1b624:	6829      	ldr	r1, [r5, #0]
   1b626:	3134      	adds	r1, #52	; 0x34
   1b628:	f000 fad8 	bl	1bbdc <vApplicationStackOverflowHook>
   1b62c:	4b13      	ldr	r3, [pc, #76]	; (1b67c <vTaskSwitchContext+0xb4>)
   1b62e:	681b      	ldr	r3, [r3, #0]
   1b630:	fab3 f383 	clz	r3, r3
   1b634:	4a12      	ldr	r2, [pc, #72]	; (1b680 <vTaskSwitchContext+0xb8>)
   1b636:	b2db      	uxtb	r3, r3
   1b638:	2114      	movs	r1, #20
   1b63a:	f1c3 031f 	rsb	r3, r3, #31
   1b63e:	fb01 2303 	mla	r3, r1, r3, r2
   1b642:	685a      	ldr	r2, [r3, #4]
   1b644:	f103 0108 	add.w	r1, r3, #8
   1b648:	6852      	ldr	r2, [r2, #4]
   1b64a:	428a      	cmp	r2, r1
   1b64c:	605a      	str	r2, [r3, #4]
   1b64e:	bf04      	itt	eq
   1b650:	6852      	ldreq	r2, [r2, #4]
   1b652:	605a      	streq	r2, [r3, #4]
   1b654:	685b      	ldr	r3, [r3, #4]
   1b656:	68db      	ldr	r3, [r3, #12]
   1b658:	6023      	str	r3, [r4, #0]
   1b65a:	6823      	ldr	r3, [r4, #0]
   1b65c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
   1b65e:	4b09      	ldr	r3, [pc, #36]	; (1b684 <vTaskSwitchContext+0xbc>)
   1b660:	645a      	str	r2, [r3, #68]	; 0x44
   1b662:	bd38      	pop	{r3, r4, r5, pc}
   1b664:	2007ca78 	.word	0x2007ca78
   1b668:	2007cac4 	.word	0x2007cac4
   1b66c:	2007ca7c 	.word	0x2007ca7c
   1b670:	2007ca80 	.word	0x2007ca80
   1b674:	2007c9d8 	.word	0x2007c9d8
   1b678:	00026b94 	.word	0x00026b94
   1b67c:	2007cac0 	.word	0x2007cac0
   1b680:	2007ca14 	.word	0x2007ca14
   1b684:	40024000 	.word	0x40024000

0001b688 <vTaskSuspend>:
vTaskSuspend():
   1b688:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1b68a:	4604      	mov	r4, r0
   1b68c:	4d20      	ldr	r5, [pc, #128]	; (1b710 <vTaskSuspend+0x88>)
   1b68e:	f000 fa17 	bl	1bac0 <vPortEnterCritical>
   1b692:	b904      	cbnz	r4, 1b696 <vTaskSuspend+0xe>
   1b694:	682c      	ldr	r4, [r5, #0]
   1b696:	1d26      	adds	r6, r4, #4
   1b698:	4630      	mov	r0, r6
   1b69a:	f7ff f9ab 	bl	1a9f4 <uxListRemove>
   1b69e:	b968      	cbnz	r0, 1b6bc <vTaskSuspend+0x34>
   1b6a0:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
   1b6a2:	2314      	movs	r3, #20
   1b6a4:	4353      	muls	r3, r2
   1b6a6:	491b      	ldr	r1, [pc, #108]	; (1b714 <vTaskSuspend+0x8c>)
   1b6a8:	58cb      	ldr	r3, [r1, r3]
   1b6aa:	b93b      	cbnz	r3, 1b6bc <vTaskSuspend+0x34>
   1b6ac:	2001      	movs	r0, #1
   1b6ae:	fa00 f202 	lsl.w	r2, r0, r2
   1b6b2:	4b19      	ldr	r3, [pc, #100]	; (1b718 <vTaskSuspend+0x90>)
   1b6b4:	6819      	ldr	r1, [r3, #0]
   1b6b6:	ea21 0202 	bic.w	r2, r1, r2
   1b6ba:	601a      	str	r2, [r3, #0]
   1b6bc:	6aa3      	ldr	r3, [r4, #40]	; 0x28
   1b6be:	b11b      	cbz	r3, 1b6c8 <vTaskSuspend+0x40>
   1b6c0:	f104 0018 	add.w	r0, r4, #24
   1b6c4:	f7ff f996 	bl	1a9f4 <uxListRemove>
   1b6c8:	4f14      	ldr	r7, [pc, #80]	; (1b71c <vTaskSuspend+0x94>)
   1b6ca:	4631      	mov	r1, r6
   1b6cc:	4638      	mov	r0, r7
   1b6ce:	f7ff f96d 	bl	1a9ac <vListInsertEnd>
   1b6d2:	f000 fa07 	bl	1bae4 <vPortExitCritical>
   1b6d6:	682b      	ldr	r3, [r5, #0]
   1b6d8:	429c      	cmp	r4, r3
   1b6da:	4b11      	ldr	r3, [pc, #68]	; (1b720 <vTaskSuspend+0x98>)
   1b6dc:	681b      	ldr	r3, [r3, #0]
   1b6de:	d110      	bne.n	1b702 <vTaskSuspend+0x7a>
   1b6e0:	b11b      	cbz	r3, 1b6ea <vTaskSuspend+0x62>
   1b6e2:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
   1b6e6:	f000 b9d7 	b.w	1ba98 <vPortYield>
   1b6ea:	4a0e      	ldr	r2, [pc, #56]	; (1b724 <vTaskSuspend+0x9c>)
   1b6ec:	6839      	ldr	r1, [r7, #0]
   1b6ee:	6812      	ldr	r2, [r2, #0]
   1b6f0:	4291      	cmp	r1, r2
   1b6f2:	d102      	bne.n	1b6fa <vTaskSuspend+0x72>
   1b6f4:	4a06      	ldr	r2, [pc, #24]	; (1b710 <vTaskSuspend+0x88>)
   1b6f6:	6013      	str	r3, [r2, #0]
   1b6f8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1b6fa:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
   1b6fe:	f7ff bf63 	b.w	1b5c8 <vTaskSwitchContext>
   1b702:	b11b      	cbz	r3, 1b70c <vTaskSuspend+0x84>
   1b704:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
   1b708:	f7ff bc7a 	b.w	1b000 <prvResetNextTaskUnblockTime>
   1b70c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1b70e:	bf00      	nop
   1b710:	2007ca80 	.word	0x2007ca80
   1b714:	2007ca14 	.word	0x2007ca14
   1b718:	2007cac0 	.word	0x2007cac0
   1b71c:	2007caac 	.word	0x2007caac
   1b720:	2007c9e4 	.word	0x2007c9e4
   1b724:	2007caa4 	.word	0x2007caa4

0001b728 <vTaskPlaceOnEventList>:
vTaskPlaceOnEventList():
   1b728:	b538      	push	{r3, r4, r5, lr}
   1b72a:	4c12      	ldr	r4, [pc, #72]	; (1b774 <vTaskPlaceOnEventList+0x4c>)
   1b72c:	460d      	mov	r5, r1
   1b72e:	6821      	ldr	r1, [r4, #0]
   1b730:	3118      	adds	r1, #24
   1b732:	f7ff f947 	bl	1a9c4 <vListInsert>
   1b736:	6820      	ldr	r0, [r4, #0]
   1b738:	3004      	adds	r0, #4
   1b73a:	f7ff f95b 	bl	1a9f4 <uxListRemove>
   1b73e:	b948      	cbnz	r0, 1b754 <vTaskPlaceOnEventList+0x2c>
   1b740:	4b0d      	ldr	r3, [pc, #52]	; (1b778 <vTaskPlaceOnEventList+0x50>)
   1b742:	2001      	movs	r0, #1
   1b744:	6819      	ldr	r1, [r3, #0]
   1b746:	6822      	ldr	r2, [r4, #0]
   1b748:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
   1b74a:	fa00 f202 	lsl.w	r2, r0, r2
   1b74e:	ea21 0202 	bic.w	r2, r1, r2
   1b752:	601a      	str	r2, [r3, #0]
   1b754:	1c6b      	adds	r3, r5, #1
   1b756:	d106      	bne.n	1b766 <vTaskPlaceOnEventList+0x3e>
   1b758:	6821      	ldr	r1, [r4, #0]
   1b75a:	4808      	ldr	r0, [pc, #32]	; (1b77c <vTaskPlaceOnEventList+0x54>)
   1b75c:	3104      	adds	r1, #4
   1b75e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   1b762:	f7ff b923 	b.w	1a9ac <vListInsertEnd>
   1b766:	4b06      	ldr	r3, [pc, #24]	; (1b780 <vTaskPlaceOnEventList+0x58>)
   1b768:	6818      	ldr	r0, [r3, #0]
   1b76a:	4428      	add	r0, r5
   1b76c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   1b770:	f7ff bc58 	b.w	1b024 <prvAddCurrentTaskToDelayedList>
   1b774:	2007ca80 	.word	0x2007ca80
   1b778:	2007cac0 	.word	0x2007cac0
   1b77c:	2007caac 	.word	0x2007caac
   1b780:	2007ca98 	.word	0x2007ca98

0001b784 <xTaskRemoveFromEventList>:
xTaskRemoveFromEventList():
   1b784:	b538      	push	{r3, r4, r5, lr}
   1b786:	68c3      	ldr	r3, [r0, #12]
   1b788:	68dc      	ldr	r4, [r3, #12]
   1b78a:	f104 0518 	add.w	r5, r4, #24
   1b78e:	4628      	mov	r0, r5
   1b790:	f7ff f930 	bl	1a9f4 <uxListRemove>
   1b794:	4b10      	ldr	r3, [pc, #64]	; (1b7d8 <xTaskRemoveFromEventList+0x54>)
   1b796:	681b      	ldr	r3, [r3, #0]
   1b798:	b97b      	cbnz	r3, 1b7ba <xTaskRemoveFromEventList+0x36>
   1b79a:	1d25      	adds	r5, r4, #4
   1b79c:	4628      	mov	r0, r5
   1b79e:	f7ff f929 	bl	1a9f4 <uxListRemove>
   1b7a2:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
   1b7a4:	2101      	movs	r1, #1
   1b7a6:	4099      	lsls	r1, r3
   1b7a8:	4a0c      	ldr	r2, [pc, #48]	; (1b7dc <xTaskRemoveFromEventList+0x58>)
   1b7aa:	6810      	ldr	r0, [r2, #0]
   1b7ac:	4301      	orrs	r1, r0
   1b7ae:	6011      	str	r1, [r2, #0]
   1b7b0:	4a0b      	ldr	r2, [pc, #44]	; (1b7e0 <xTaskRemoveFromEventList+0x5c>)
   1b7b2:	2014      	movs	r0, #20
   1b7b4:	fb00 2003 	mla	r0, r0, r3, r2
   1b7b8:	e000      	b.n	1b7bc <xTaskRemoveFromEventList+0x38>
   1b7ba:	480a      	ldr	r0, [pc, #40]	; (1b7e4 <xTaskRemoveFromEventList+0x60>)
   1b7bc:	4629      	mov	r1, r5
   1b7be:	f7ff f8f5 	bl	1a9ac <vListInsertEnd>
   1b7c2:	4b09      	ldr	r3, [pc, #36]	; (1b7e8 <xTaskRemoveFromEventList+0x64>)
   1b7c4:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
   1b7c6:	681b      	ldr	r3, [r3, #0]
   1b7c8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   1b7ca:	429a      	cmp	r2, r3
   1b7cc:	bf83      	ittte	hi
   1b7ce:	4b07      	ldrhi	r3, [pc, #28]	; (1b7ec <xTaskRemoveFromEventList+0x68>)
   1b7d0:	2001      	movhi	r0, #1
   1b7d2:	6018      	strhi	r0, [r3, #0]
   1b7d4:	2000      	movls	r0, #0
   1b7d6:	bd38      	pop	{r3, r4, r5, pc}
   1b7d8:	2007ca78 	.word	0x2007ca78
   1b7dc:	2007cac0 	.word	0x2007cac0
   1b7e0:	2007ca14 	.word	0x2007ca14
   1b7e4:	2007ca84 	.word	0x2007ca84
   1b7e8:	2007ca80 	.word	0x2007ca80
   1b7ec:	2007cac4 	.word	0x2007cac4

0001b7f0 <vTaskSetTimeOutState>:
vTaskSetTimeOutState():
   1b7f0:	4b03      	ldr	r3, [pc, #12]	; (1b800 <vTaskSetTimeOutState+0x10>)
   1b7f2:	681b      	ldr	r3, [r3, #0]
   1b7f4:	6003      	str	r3, [r0, #0]
   1b7f6:	4b03      	ldr	r3, [pc, #12]	; (1b804 <vTaskSetTimeOutState+0x14>)
   1b7f8:	681b      	ldr	r3, [r3, #0]
   1b7fa:	6043      	str	r3, [r0, #4]
   1b7fc:	4770      	bx	lr
   1b7fe:	bf00      	nop
   1b800:	2007c9dc 	.word	0x2007c9dc
   1b804:	2007ca98 	.word	0x2007ca98

0001b808 <xTaskCheckForTimeOut>:
xTaskCheckForTimeOut():
   1b808:	b538      	push	{r3, r4, r5, lr}
   1b80a:	460d      	mov	r5, r1
   1b80c:	4604      	mov	r4, r0
   1b80e:	f000 f957 	bl	1bac0 <vPortEnterCritical>
   1b812:	4b0e      	ldr	r3, [pc, #56]	; (1b84c <xTaskCheckForTimeOut+0x44>)
   1b814:	681a      	ldr	r2, [r3, #0]
   1b816:	682b      	ldr	r3, [r5, #0]
   1b818:	1c59      	adds	r1, r3, #1
   1b81a:	d010      	beq.n	1b83e <xTaskCheckForTimeOut+0x36>
   1b81c:	490c      	ldr	r1, [pc, #48]	; (1b850 <xTaskCheckForTimeOut+0x48>)
   1b81e:	6808      	ldr	r0, [r1, #0]
   1b820:	6821      	ldr	r1, [r4, #0]
   1b822:	4288      	cmp	r0, r1
   1b824:	6860      	ldr	r0, [r4, #4]
   1b826:	d001      	beq.n	1b82c <xTaskCheckForTimeOut+0x24>
   1b828:	4282      	cmp	r2, r0
   1b82a:	d20a      	bcs.n	1b842 <xTaskCheckForTimeOut+0x3a>
   1b82c:	1a11      	subs	r1, r2, r0
   1b82e:	4299      	cmp	r1, r3
   1b830:	d207      	bcs.n	1b842 <xTaskCheckForTimeOut+0x3a>
   1b832:	1a82      	subs	r2, r0, r2
   1b834:	4413      	add	r3, r2
   1b836:	602b      	str	r3, [r5, #0]
   1b838:	4620      	mov	r0, r4
   1b83a:	f7ff ffd9 	bl	1b7f0 <vTaskSetTimeOutState>
   1b83e:	2400      	movs	r4, #0
   1b840:	e000      	b.n	1b844 <xTaskCheckForTimeOut+0x3c>
   1b842:	2401      	movs	r4, #1
   1b844:	f000 f94e 	bl	1bae4 <vPortExitCritical>
   1b848:	4620      	mov	r0, r4
   1b84a:	bd38      	pop	{r3, r4, r5, pc}
   1b84c:	2007ca98 	.word	0x2007ca98
   1b850:	2007c9dc 	.word	0x2007c9dc

0001b854 <vTaskMissedYield>:
vTaskMissedYield():
   1b854:	4b01      	ldr	r3, [pc, #4]	; (1b85c <vTaskMissedYield+0x8>)
   1b856:	2201      	movs	r2, #1
   1b858:	601a      	str	r2, [r3, #0]
   1b85a:	4770      	bx	lr
   1b85c:	2007cac4 	.word	0x2007cac4

0001b860 <uxTaskGetStackHighWaterMark>:
uxTaskGetStackHighWaterMark():
   1b860:	b908      	cbnz	r0, 1b866 <uxTaskGetStackHighWaterMark+0x6>
   1b862:	4b06      	ldr	r3, [pc, #24]	; (1b87c <uxTaskGetStackHighWaterMark+0x1c>)
   1b864:	6818      	ldr	r0, [r3, #0]
   1b866:	6b02      	ldr	r2, [r0, #48]	; 0x30
   1b868:	2000      	movs	r0, #0
   1b86a:	5c13      	ldrb	r3, [r2, r0]
   1b86c:	2ba5      	cmp	r3, #165	; 0xa5
   1b86e:	d101      	bne.n	1b874 <uxTaskGetStackHighWaterMark+0x14>
   1b870:	3001      	adds	r0, #1
   1b872:	e7fa      	b.n	1b86a <uxTaskGetStackHighWaterMark+0xa>
   1b874:	f3c0 008f 	ubfx	r0, r0, #2, #16
   1b878:	4770      	bx	lr
   1b87a:	bf00      	nop
   1b87c:	2007ca80 	.word	0x2007ca80

0001b880 <xTaskGetCurrentTaskHandle>:
xTaskGetCurrentTaskHandle():
   1b880:	4b01      	ldr	r3, [pc, #4]	; (1b888 <xTaskGetCurrentTaskHandle+0x8>)
   1b882:	6818      	ldr	r0, [r3, #0]
   1b884:	4770      	bx	lr
   1b886:	bf00      	nop
   1b888:	2007ca80 	.word	0x2007ca80

0001b88c <xTaskGetSchedulerState>:
xTaskGetSchedulerState():
   1b88c:	4b05      	ldr	r3, [pc, #20]	; (1b8a4 <xTaskGetSchedulerState+0x18>)
   1b88e:	681b      	ldr	r3, [r3, #0]
   1b890:	b133      	cbz	r3, 1b8a0 <xTaskGetSchedulerState+0x14>
   1b892:	4b05      	ldr	r3, [pc, #20]	; (1b8a8 <xTaskGetSchedulerState+0x1c>)
   1b894:	681b      	ldr	r3, [r3, #0]
   1b896:	2b00      	cmp	r3, #0
   1b898:	bf14      	ite	ne
   1b89a:	2000      	movne	r0, #0
   1b89c:	2002      	moveq	r0, #2
   1b89e:	4770      	bx	lr
   1b8a0:	2001      	movs	r0, #1
   1b8a2:	4770      	bx	lr
   1b8a4:	2007c9e4 	.word	0x2007c9e4
   1b8a8:	2007ca78 	.word	0x2007ca78

0001b8ac <vTaskPriorityInherit>:
vTaskPriorityInherit():
   1b8ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1b8b0:	4604      	mov	r4, r0
   1b8b2:	2800      	cmp	r0, #0
   1b8b4:	d03b      	beq.n	1b92e <vTaskPriorityInherit+0x82>
   1b8b6:	4d1f      	ldr	r5, [pc, #124]	; (1b934 <vTaskPriorityInherit+0x88>)
   1b8b8:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
   1b8ba:	682a      	ldr	r2, [r5, #0]
   1b8bc:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
   1b8be:	4293      	cmp	r3, r2
   1b8c0:	d235      	bcs.n	1b92e <vTaskPriorityInherit+0x82>
   1b8c2:	6982      	ldr	r2, [r0, #24]
   1b8c4:	2a00      	cmp	r2, #0
   1b8c6:	db04      	blt.n	1b8d2 <vTaskPriorityInherit+0x26>
   1b8c8:	682a      	ldr	r2, [r5, #0]
   1b8ca:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
   1b8cc:	f1c2 0205 	rsb	r2, r2, #5
   1b8d0:	6182      	str	r2, [r0, #24]
   1b8d2:	4f19      	ldr	r7, [pc, #100]	; (1b938 <vTaskPriorityInherit+0x8c>)
   1b8d4:	f04f 0814 	mov.w	r8, #20
   1b8d8:	fb08 7303 	mla	r3, r8, r3, r7
   1b8dc:	6962      	ldr	r2, [r4, #20]
   1b8de:	429a      	cmp	r2, r3
   1b8e0:	d122      	bne.n	1b928 <vTaskPriorityInherit+0x7c>
   1b8e2:	1d26      	adds	r6, r4, #4
   1b8e4:	4630      	mov	r0, r6
   1b8e6:	f7ff f885 	bl	1a9f4 <uxListRemove>
   1b8ea:	4b14      	ldr	r3, [pc, #80]	; (1b93c <vTaskPriorityInherit+0x90>)
   1b8ec:	b960      	cbnz	r0, 1b908 <vTaskPriorityInherit+0x5c>
   1b8ee:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
   1b8f0:	fb08 f802 	mul.w	r8, r8, r2
   1b8f4:	f857 1008 	ldr.w	r1, [r7, r8]
   1b8f8:	b931      	cbnz	r1, 1b908 <vTaskPriorityInherit+0x5c>
   1b8fa:	2001      	movs	r0, #1
   1b8fc:	fa00 f202 	lsl.w	r2, r0, r2
   1b900:	6819      	ldr	r1, [r3, #0]
   1b902:	ea21 0202 	bic.w	r2, r1, r2
   1b906:	601a      	str	r2, [r3, #0]
   1b908:	682a      	ldr	r2, [r5, #0]
   1b90a:	2101      	movs	r1, #1
   1b90c:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
   1b90e:	6818      	ldr	r0, [r3, #0]
   1b910:	4091      	lsls	r1, r2
   1b912:	4301      	orrs	r1, r0
   1b914:	2014      	movs	r0, #20
   1b916:	62e2      	str	r2, [r4, #44]	; 0x2c
   1b918:	6019      	str	r1, [r3, #0]
   1b91a:	fb00 7002 	mla	r0, r0, r2, r7
   1b91e:	4631      	mov	r1, r6
   1b920:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   1b924:	f7ff b842 	b.w	1a9ac <vListInsertEnd>
   1b928:	682b      	ldr	r3, [r5, #0]
   1b92a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   1b92c:	62e3      	str	r3, [r4, #44]	; 0x2c
   1b92e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1b932:	bf00      	nop
   1b934:	2007ca80 	.word	0x2007ca80
   1b938:	2007ca14 	.word	0x2007ca14
   1b93c:	2007cac0 	.word	0x2007cac0

0001b940 <vTaskPriorityDisinherit>:
vTaskPriorityDisinherit():
   1b940:	b570      	push	{r4, r5, r6, lr}
   1b942:	4604      	mov	r4, r0
   1b944:	b358      	cbz	r0, 1b99e <vTaskPriorityDisinherit+0x5e>
   1b946:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
   1b948:	6c43      	ldr	r3, [r0, #68]	; 0x44
   1b94a:	429a      	cmp	r2, r3
   1b94c:	d027      	beq.n	1b99e <vTaskPriorityDisinherit+0x5e>
   1b94e:	1d05      	adds	r5, r0, #4
   1b950:	4628      	mov	r0, r5
   1b952:	f7ff f84f 	bl	1a9f4 <uxListRemove>
   1b956:	4912      	ldr	r1, [pc, #72]	; (1b9a0 <vTaskPriorityDisinherit+0x60>)
   1b958:	4b12      	ldr	r3, [pc, #72]	; (1b9a4 <vTaskPriorityDisinherit+0x64>)
   1b95a:	b958      	cbnz	r0, 1b974 <vTaskPriorityDisinherit+0x34>
   1b95c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
   1b95e:	2014      	movs	r0, #20
   1b960:	4350      	muls	r0, r2
   1b962:	5808      	ldr	r0, [r1, r0]
   1b964:	b930      	cbnz	r0, 1b974 <vTaskPriorityDisinherit+0x34>
   1b966:	2601      	movs	r6, #1
   1b968:	fa06 f202 	lsl.w	r2, r6, r2
   1b96c:	6818      	ldr	r0, [r3, #0]
   1b96e:	ea20 0202 	bic.w	r2, r0, r2
   1b972:	601a      	str	r2, [r3, #0]
   1b974:	69a0      	ldr	r0, [r4, #24]
   1b976:	6c62      	ldr	r2, [r4, #68]	; 0x44
   1b978:	2800      	cmp	r0, #0
   1b97a:	bfa4      	itt	ge
   1b97c:	f1c2 0005 	rsbge	r0, r2, #5
   1b980:	61a0      	strge	r0, [r4, #24]
   1b982:	2001      	movs	r0, #1
   1b984:	4090      	lsls	r0, r2
   1b986:	62e2      	str	r2, [r4, #44]	; 0x2c
   1b988:	681c      	ldr	r4, [r3, #0]
   1b98a:	4320      	orrs	r0, r4
   1b98c:	6018      	str	r0, [r3, #0]
   1b98e:	2014      	movs	r0, #20
   1b990:	fb00 1002 	mla	r0, r0, r2, r1
   1b994:	4629      	mov	r1, r5
   1b996:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
   1b99a:	f7ff b807 	b.w	1a9ac <vListInsertEnd>
   1b99e:	bd70      	pop	{r4, r5, r6, pc}
   1b9a0:	2007ca14 	.word	0x2007ca14
   1b9a4:	2007cac0 	.word	0x2007cac0

0001b9a8 <vTaskResetRunTimeStats>:
vTaskResetRunTimeStats():
   1b9a8:	b538      	push	{r3, r4, r5, lr}
   1b9aa:	f7ff fc5d 	bl	1b268 <vTaskSuspendAll>
   1b9ae:	4c13      	ldr	r4, [pc, #76]	; (1b9fc <vTaskResetRunTimeStats+0x54>)
   1b9b0:	f1a4 0564 	sub.w	r5, r4, #100	; 0x64
   1b9b4:	6823      	ldr	r3, [r4, #0]
   1b9b6:	b113      	cbz	r3, 1b9be <vTaskResetRunTimeStats+0x16>
   1b9b8:	4620      	mov	r0, r4
   1b9ba:	f7ff fab6 	bl	1af2a <prvResetRunTimeStatsInList>
   1b9be:	3c14      	subs	r4, #20
   1b9c0:	42ac      	cmp	r4, r5
   1b9c2:	d1f7      	bne.n	1b9b4 <vTaskResetRunTimeStats+0xc>
   1b9c4:	4b0e      	ldr	r3, [pc, #56]	; (1ba00 <vTaskResetRunTimeStats+0x58>)
   1b9c6:	681a      	ldr	r2, [r3, #0]
   1b9c8:	6812      	ldr	r2, [r2, #0]
   1b9ca:	b112      	cbz	r2, 1b9d2 <vTaskResetRunTimeStats+0x2a>
   1b9cc:	6818      	ldr	r0, [r3, #0]
   1b9ce:	f7ff faac 	bl	1af2a <prvResetRunTimeStatsInList>
   1b9d2:	4b0c      	ldr	r3, [pc, #48]	; (1ba04 <vTaskResetRunTimeStats+0x5c>)
   1b9d4:	681a      	ldr	r2, [r3, #0]
   1b9d6:	6812      	ldr	r2, [r2, #0]
   1b9d8:	b112      	cbz	r2, 1b9e0 <vTaskResetRunTimeStats+0x38>
   1b9da:	6818      	ldr	r0, [r3, #0]
   1b9dc:	f7ff faa5 	bl	1af2a <prvResetRunTimeStatsInList>
   1b9e0:	4809      	ldr	r0, [pc, #36]	; (1ba08 <vTaskResetRunTimeStats+0x60>)
   1b9e2:	6803      	ldr	r3, [r0, #0]
   1b9e4:	b10b      	cbz	r3, 1b9ea <vTaskResetRunTimeStats+0x42>
   1b9e6:	f7ff faa0 	bl	1af2a <prvResetRunTimeStatsInList>
   1b9ea:	4b08      	ldr	r3, [pc, #32]	; (1ba0c <vTaskResetRunTimeStats+0x64>)
   1b9ec:	2200      	movs	r2, #0
   1b9ee:	601a      	str	r2, [r3, #0]
   1b9f0:	f000 f8e8 	bl	1bbc4 <resetRunTimeCounter>
   1b9f4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   1b9f8:	f7ff bcda 	b.w	1b3b0 <xTaskResumeAll>
   1b9fc:	2007ca64 	.word	0x2007ca64
   1ba00:	2007c9e0 	.word	0x2007c9e0
   1ba04:	2007ca9c 	.word	0x2007ca9c
   1ba08:	2007caac 	.word	0x2007caac
   1ba0c:	2007c9d8 	.word	0x2007c9d8

0001ba10 <vRunTimeStatIsrEntry>:
vRunTimeStatIsrEntry():
   1ba10:	b510      	push	{r4, lr}
   1ba12:	f000 f8cd 	bl	1bbb0 <uxGetTimerForRunTimeStats>
   1ba16:	4a06      	ldr	r2, [pc, #24]	; (1ba30 <vRunTimeStatIsrEntry+0x20>)
   1ba18:	4b06      	ldr	r3, [pc, #24]	; (1ba34 <vRunTimeStatIsrEntry+0x24>)
   1ba1a:	6811      	ldr	r1, [r2, #0]
   1ba1c:	b129      	cbz	r1, 1ba2a <vRunTimeStatIsrEntry+0x1a>
   1ba1e:	6812      	ldr	r2, [r2, #0]
   1ba20:	6819      	ldr	r1, [r3, #0]
   1ba22:	6c94      	ldr	r4, [r2, #72]	; 0x48
   1ba24:	1a61      	subs	r1, r4, r1
   1ba26:	4401      	add	r1, r0
   1ba28:	6491      	str	r1, [r2, #72]	; 0x48
   1ba2a:	6018      	str	r0, [r3, #0]
   1ba2c:	bd10      	pop	{r4, pc}
   1ba2e:	bf00      	nop
   1ba30:	2007ca80 	.word	0x2007ca80
   1ba34:	2007c9d8 	.word	0x2007c9d8

0001ba38 <vRunTimeStatIsrExit>:
vRunTimeStatIsrExit():
   1ba38:	b508      	push	{r3, lr}
   1ba3a:	f000 f8b9 	bl	1bbb0 <uxGetTimerForRunTimeStats>
   1ba3e:	4b01      	ldr	r3, [pc, #4]	; (1ba44 <vRunTimeStatIsrExit+0xc>)
   1ba40:	6018      	str	r0, [r3, #0]
   1ba42:	bd08      	pop	{r3, pc}
   1ba44:	2007c9d8 	.word	0x2007c9d8

0001ba48 <prvPortStartFirstTask>:
prvPortStartFirstTask():
   1ba48:	4803      	ldr	r0, [pc, #12]	; (1ba58 <prvPortStartFirstTask+0x10>)
   1ba4a:	6800      	ldr	r0, [r0, #0]
   1ba4c:	6800      	ldr	r0, [r0, #0]
   1ba4e:	f380 8808 	msr	MSP, r0
   1ba52:	b662      	cpsie	i
   1ba54:	df00      	svc	0
   1ba56:	bf00      	nop
$d():
   1ba58:	e000ed08 	.word	0xe000ed08

0001ba5c <pxPortInitialiseStack>:
pxPortInitialiseStack():
   1ba5c:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
   1ba60:	e900 000a 	stmdb	r0, {r1, r3}
   1ba64:	2300      	movs	r3, #0
   1ba66:	f840 3c0c 	str.w	r3, [r0, #-12]
   1ba6a:	f840 2c20 	str.w	r2, [r0, #-32]
   1ba6e:	3840      	subs	r0, #64	; 0x40
   1ba70:	4770      	bx	lr
	...

0001ba74 <vPortSVCHandler>:
vPortSVCHandler():
   1ba74:	4b06      	ldr	r3, [pc, #24]	; (1ba90 <pxCurrentTCBConst2>)
   1ba76:	6819      	ldr	r1, [r3, #0]
   1ba78:	6808      	ldr	r0, [r1, #0]
   1ba7a:	e8b0 0ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
   1ba7e:	f380 8809 	msr	PSP, r0
   1ba82:	f04f 0000 	mov.w	r0, #0
   1ba86:	f380 8811 	msr	BASEPRI, r0
   1ba8a:	f04e 0e0d 	orr.w	lr, lr, #13
   1ba8e:	4770      	bx	lr

0001ba90 <pxCurrentTCBConst2>:
   1ba90:	2007ca80 	.word	0x2007ca80

0001ba94 <vPortEndScheduler>:
vPortEndScheduler():
   1ba94:	4770      	bx	lr
	...

0001ba98 <vPortYield>:
vPortYield():
   1ba98:	4b04      	ldr	r3, [pc, #16]	; (1baac <vPortYield+0x14>)
   1ba9a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   1ba9e:	601a      	str	r2, [r3, #0]
   1baa0:	f3bf 8f4f 	dsb	sy
   1baa4:	f3bf 8f6f 	isb	sy
   1baa8:	4770      	bx	lr
   1baaa:	bf00      	nop
   1baac:	e000ed04 	.word	0xe000ed04

0001bab0 <ulPortSetInterruptMask>:
ulPortSetInterruptMask():
   1bab0:	f3ef 8011 	mrs	r0, BASEPRI
   1bab4:	f04f 0110 	mov.w	r1, #16
   1bab8:	f381 8811 	msr	BASEPRI, r1
   1babc:	4770      	bx	lr
   1babe:	2000      	movs	r0, #0

0001bac0 <vPortEnterCritical>:
vPortEnterCritical():
   1bac0:	b508      	push	{r3, lr}
   1bac2:	f7ff fff5 	bl	1bab0 <ulPortSetInterruptMask>
   1bac6:	4b04      	ldr	r3, [pc, #16]	; (1bad8 <vPortEnterCritical+0x18>)
   1bac8:	681a      	ldr	r2, [r3, #0]
   1baca:	3201      	adds	r2, #1
   1bacc:	601a      	str	r2, [r3, #0]
   1bace:	f3bf 8f4f 	dsb	sy
   1bad2:	f3bf 8f6f 	isb	sy
   1bad6:	bd08      	pop	{r3, pc}
   1bad8:	2007cac8 	.word	0x2007cac8

0001badc <vPortClearInterruptMask>:
vPortClearInterruptMask():
   1badc:	f380 8811 	msr	BASEPRI, r0
   1bae0:	4770      	bx	lr
	...

0001bae4 <vPortExitCritical>:
vPortExitCritical():
   1bae4:	4b03      	ldr	r3, [pc, #12]	; (1baf4 <vPortExitCritical+0x10>)
   1bae6:	6818      	ldr	r0, [r3, #0]
   1bae8:	3801      	subs	r0, #1
   1baea:	6018      	str	r0, [r3, #0]
   1baec:	b908      	cbnz	r0, 1baf2 <vPortExitCritical+0xe>
   1baee:	f7ff bff5 	b.w	1badc <vPortClearInterruptMask>
   1baf2:	4770      	bx	lr
   1baf4:	2007cac8 	.word	0x2007cac8

0001baf8 <xPortPendSVHandler>:
xPortPendSVHandler():
   1baf8:	f3ef 8009 	mrs	r0, PSP
   1bafc:	4b0c      	ldr	r3, [pc, #48]	; (1bb30 <pxCurrentTCBConst>)
   1bafe:	681a      	ldr	r2, [r3, #0]
   1bb00:	e920 0ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
   1bb04:	6010      	str	r0, [r2, #0]
   1bb06:	e92d 4008 	stmdb	sp!, {r3, lr}
   1bb0a:	f04f 0010 	mov.w	r0, #16
   1bb0e:	f380 8811 	msr	BASEPRI, r0
   1bb12:	f7ff fd59 	bl	1b5c8 <vTaskSwitchContext>
   1bb16:	f04f 0000 	mov.w	r0, #0
   1bb1a:	f380 8811 	msr	BASEPRI, r0
   1bb1e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
   1bb22:	6819      	ldr	r1, [r3, #0]
   1bb24:	6808      	ldr	r0, [r1, #0]
   1bb26:	e8b0 0ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
   1bb2a:	f380 8809 	msr	PSP, r0
   1bb2e:	4770      	bx	lr

0001bb30 <pxCurrentTCBConst>:
   1bb30:	2007ca80 	.word	0x2007ca80

0001bb34 <xPortSysTickHandler>:
xPortSysTickHandler():
   1bb34:	b508      	push	{r3, lr}
   1bb36:	f7ff ffbb 	bl	1bab0 <ulPortSetInterruptMask>
   1bb3a:	f7ff fbbb 	bl	1b2b4 <xTaskIncrementTick>
   1bb3e:	b118      	cbz	r0, 1bb48 <xPortSysTickHandler+0x14>
   1bb40:	4b04      	ldr	r3, [pc, #16]	; (1bb54 <xPortSysTickHandler+0x20>)
   1bb42:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   1bb46:	601a      	str	r2, [r3, #0]
   1bb48:	2000      	movs	r0, #0
   1bb4a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
   1bb4e:	f7ff bfc5 	b.w	1badc <vPortClearInterruptMask>
   1bb52:	bf00      	nop
   1bb54:	e000ed04 	.word	0xe000ed04

0001bb58 <vPortSetupTimerInterrupt>:
vPortSetupTimerInterrupt():
   1bb58:	4b03      	ldr	r3, [pc, #12]	; (1bb68 <vPortSetupTimerInterrupt+0x10>)
   1bb5a:	f64b 327f 	movw	r2, #47999	; 0xbb7f
   1bb5e:	601a      	str	r2, [r3, #0]
   1bb60:	2207      	movs	r2, #7
   1bb62:	f843 2c04 	str.w	r2, [r3, #-4]
   1bb66:	4770      	bx	lr
   1bb68:	e000e014 	.word	0xe000e014

0001bb6c <xPortStartScheduler>:
xPortStartScheduler():
   1bb6c:	4b09      	ldr	r3, [pc, #36]	; (1bb94 <xPortStartScheduler+0x28>)
   1bb6e:	b510      	push	{r4, lr}
   1bb70:	681a      	ldr	r2, [r3, #0]
   1bb72:	2400      	movs	r4, #0
   1bb74:	f442 0278 	orr.w	r2, r2, #16252928	; 0xf80000
   1bb78:	601a      	str	r2, [r3, #0]
   1bb7a:	681a      	ldr	r2, [r3, #0]
   1bb7c:	f042 4278 	orr.w	r2, r2, #4160749568	; 0xf8000000
   1bb80:	601a      	str	r2, [r3, #0]
   1bb82:	f7ff ffe9 	bl	1bb58 <vPortSetupTimerInterrupt>
   1bb86:	4b04      	ldr	r3, [pc, #16]	; (1bb98 <xPortStartScheduler+0x2c>)
   1bb88:	601c      	str	r4, [r3, #0]
   1bb8a:	f7ff ff5d 	bl	1ba48 <prvPortStartFirstTask>
   1bb8e:	4620      	mov	r0, r4
   1bb90:	bd10      	pop	{r4, pc}
   1bb92:	bf00      	nop
   1bb94:	e000ed20 	.word	0xe000ed20
   1bb98:	2007cac8 	.word	0x2007cac8

0001bb9c <vConfigureTimerForRunTimeStats>:
vConfigureTimerForRunTimeStats():
   1bb9c:	b508      	push	{r3, lr}
   1bb9e:	f000 fa03 	bl	1bfa8 <sys_get_uptime_us>
   1bba2:	4b02      	ldr	r3, [pc, #8]	; (1bbac <vConfigureTimerForRunTimeStats+0x10>)
   1bba4:	e9c3 0100 	strd	r0, r1, [r3]
   1bba8:	bd08      	pop	{r3, pc}
   1bbaa:	bf00      	nop
   1bbac:	2007cad0 	.word	0x2007cad0

0001bbb0 <uxGetTimerForRunTimeStats>:
uxGetTimerForRunTimeStats():
   1bbb0:	b508      	push	{r3, lr}
   1bbb2:	f000 f9f9 	bl	1bfa8 <sys_get_uptime_us>
   1bbb6:	4b02      	ldr	r3, [pc, #8]	; (1bbc0 <uxGetTimerForRunTimeStats+0x10>)
   1bbb8:	681b      	ldr	r3, [r3, #0]
   1bbba:	1ac0      	subs	r0, r0, r3
   1bbbc:	bd08      	pop	{r3, pc}
   1bbbe:	bf00      	nop
   1bbc0:	2007cad0 	.word	0x2007cad0

0001bbc4 <resetRunTimeCounter>:
resetRunTimeCounter():
   1bbc4:	b508      	push	{r3, lr}
   1bbc6:	f000 f9ef 	bl	1bfa8 <sys_get_uptime_us>
   1bbca:	4b02      	ldr	r3, [pc, #8]	; (1bbd4 <resetRunTimeCounter+0x10>)
   1bbcc:	e9c3 0100 	strd	r0, r1, [r3]
   1bbd0:	bd08      	pop	{r3, pc}
   1bbd2:	bf00      	nop
   1bbd4:	2007cad0 	.word	0x2007cad0

0001bbd8 <vApplicationIdleHook>:
vApplicationIdleHook():
   1bbd8:	bf30      	wfi
   1bbda:	4770      	bx	lr

0001bbdc <vApplicationStackOverflowHook>:
vApplicationStackOverflowHook():
   1bbdc:	b510      	push	{r4, lr}
   1bbde:	480a      	ldr	r0, [pc, #40]	; (1bc08 <vApplicationStackOverflowHook+0x2c>)
   1bbe0:	460c      	mov	r4, r1
   1bbe2:	f7f4 fc47 	bl	10474 <u0_dbg_put>
   1bbe6:	4620      	mov	r0, r4
   1bbe8:	f7f4 fc44 	bl	10474 <u0_dbg_put>
   1bbec:	4807      	ldr	r0, [pc, #28]	; (1bc0c <vApplicationStackOverflowHook+0x30>)
   1bbee:	f7f4 fc41 	bl	10474 <u0_dbg_put>
   1bbf2:	4807      	ldr	r0, [pc, #28]	; (1bc10 <vApplicationStackOverflowHook+0x34>)
   1bbf4:	f7fd fb33 	bl	1925e <delay_us>
   1bbf8:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
   1bbfc:	22aa      	movs	r2, #170	; 0xaa
   1bbfe:	721a      	strb	r2, [r3, #8]
   1bc00:	2200      	movs	r2, #0
   1bc02:	701a      	strb	r2, [r3, #0]
   1bc04:	bd10      	pop	{r4, pc}
   1bc06:	bf00      	nop
   1bc08:	00026bad 	.word	0x00026bad
   1bc0c:	00026bd6 	.word	0x00026bd6
   1bc10:	002dc6c0 	.word	0x002dc6c0

0001bc14 <vApplicationMallocFailedHook>:
vApplicationMallocFailedHook():
   1bc14:	b508      	push	{r3, lr}
   1bc16:	4806      	ldr	r0, [pc, #24]	; (1bc30 <vApplicationMallocFailedHook+0x1c>)
   1bc18:	f7f4 fc2c 	bl	10474 <u0_dbg_put>
   1bc1c:	4805      	ldr	r0, [pc, #20]	; (1bc34 <vApplicationMallocFailedHook+0x20>)
   1bc1e:	f7fd fb1e 	bl	1925e <delay_us>
   1bc22:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
   1bc26:	22aa      	movs	r2, #170	; 0xaa
   1bc28:	721a      	strb	r2, [r3, #8]
   1bc2a:	2200      	movs	r2, #0
   1bc2c:	701a      	strb	r2, [r3, #0]
   1bc2e:	bd08      	pop	{r3, pc}
   1bc30:	00026c02 	.word	0x00026c02
   1bc34:	002dc6c0 	.word	0x002dc6c0

0001bc38 <pvPortMalloc>:
pvPortMalloc():
   1bc38:	b510      	push	{r4, lr}
   1bc3a:	4604      	mov	r4, r0
   1bc3c:	f7ff fb14 	bl	1b268 <vTaskSuspendAll>
   1bc40:	4620      	mov	r0, r4
   1bc42:	f002 f8c3 	bl	1ddcc <malloc>
   1bc46:	4604      	mov	r4, r0
   1bc48:	f7ff fbb2 	bl	1b3b0 <xTaskResumeAll>
   1bc4c:	b90c      	cbnz	r4, 1bc52 <pvPortMalloc+0x1a>
   1bc4e:	f7ff ffe1 	bl	1bc14 <vApplicationMallocFailedHook>
   1bc52:	4620      	mov	r0, r4
   1bc54:	bd10      	pop	{r4, pc}

0001bc56 <vPortFree>:
vPortFree():
   1bc56:	b510      	push	{r4, lr}
   1bc58:	4604      	mov	r4, r0
   1bc5a:	b140      	cbz	r0, 1bc6e <vPortFree+0x18>
   1bc5c:	f7ff fb04 	bl	1b268 <vTaskSuspendAll>
   1bc60:	4620      	mov	r0, r4
   1bc62:	f002 f8bb 	bl	1dddc <free>
   1bc66:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   1bc6a:	f7ff bba1 	b.w	1b3b0 <xTaskResumeAll>
   1bc6e:	bd10      	pop	{r4, pc}

0001bc70 <__set_PSP>:
__set_PSP():
   1bc70:	f380 8809 	msr	PSP, r0
   1bc74:	4770      	bx	lr

0001bc76 <__set_MSP>:
__set_MSP():
   1bc76:	f380 8808 	msr	MSP, r0
   1bc7a:	4770      	bx	lr

0001bc7c <__set_BASEPRI>:
__set_BASEPRI():
   1bc7c:	f380 8811 	msr	BASEPRI, r0
   1bc80:	4770      	bx	lr
	...

0001bc84 <sys_get_boot_type>:
sys_get_boot_type():
   1bc84:	4b01      	ldr	r3, [pc, #4]	; (1bc8c <sys_get_boot_type+0x8>)
   1bc86:	7818      	ldrb	r0, [r3, #0]
   1bc88:	4770      	bx	lr
   1bc8a:	bf00      	nop
   1bc8c:	2007cad8 	.word	0x2007cad8

0001bc90 <sys_get_boot_time>:
sys_get_boot_time():
   1bc90:	4903      	ldr	r1, [pc, #12]	; (1bca0 <sys_get_boot_time+0x10>)
   1bc92:	680b      	ldr	r3, [r1, #0]
   1bc94:	6003      	str	r3, [r0, #0]
   1bc96:	684b      	ldr	r3, [r1, #4]
   1bc98:	6043      	str	r3, [r0, #4]
   1bc9a:	688b      	ldr	r3, [r1, #8]
   1bc9c:	6083      	str	r3, [r0, #8]
   1bc9e:	4770      	bx	lr
   1bca0:	2007cad9 	.word	0x2007cad9

0001bca4 <low_level_init()>:
_Z14low_level_initv():
   1bca4:	b530      	push	{r4, r5, lr}
   1bca6:	b085      	sub	sp, #20
   1bca8:	f7fe f8cc 	bl	19e44 <rtc_init>
   1bcac:	4668      	mov	r0, sp
   1bcae:	f7fe f86b 	bl	19d88 <rtc_gettime>
   1bcb2:	4c7a      	ldr	r4, [pc, #488]	; (1be9c <low_level_init()+0x1f8>)
   1bcb4:	9b00      	ldr	r3, [sp, #0]
   1bcb6:	6023      	str	r3, [r4, #0]
   1bcb8:	9b01      	ldr	r3, [sp, #4]
   1bcba:	6063      	str	r3, [r4, #4]
   1bcbc:	9b02      	ldr	r3, [sp, #8]
   1bcbe:	60a3      	str	r3, [r4, #8]
   1bcc0:	f000 fa90 	bl	1c1e4 <sys_clock_configure()>
   1bcc4:	f000 fae6 	bl	1c294 <sys_get_cpu_clock>
   1bcc8:	4b75      	ldr	r3, [pc, #468]	; (1bea0 <low_level_init()+0x1fc>)
   1bcca:	fbb0 f0f3 	udiv	r0, r0, r3
   1bcce:	283c      	cmp	r0, #60	; 0x3c
   1bcd0:	4b74      	ldr	r3, [pc, #464]	; (1bea4 <low_level_init()+0x200>)
   1bcd2:	d805      	bhi.n	1bce0 <low_level_init()+0x3c>
   1bcd4:	2829      	cmp	r0, #41	; 0x29
   1bcd6:	d20d      	bcs.n	1bcf4 <low_level_init()+0x50>
   1bcd8:	2814      	cmp	r0, #20
   1bcda:	d808      	bhi.n	1bcee <low_level_init()+0x4a>
   1bcdc:	223a      	movs	r2, #58	; 0x3a
   1bcde:	e011      	b.n	1bd04 <low_level_init()+0x60>
   1bce0:	2850      	cmp	r0, #80	; 0x50
   1bce2:	d90a      	bls.n	1bcfa <low_level_init()+0x56>
   1bce4:	2864      	cmp	r0, #100	; 0x64
   1bce6:	d80b      	bhi.n	1bd00 <low_level_init()+0x5c>
   1bce8:	f244 023a 	movw	r2, #16442	; 0x403a
   1bcec:	e00a      	b.n	1bd04 <low_level_init()+0x60>
   1bcee:	f241 023a 	movw	r2, #4154	; 0x103a
   1bcf2:	e007      	b.n	1bd04 <low_level_init()+0x60>
   1bcf4:	f242 023a 	movw	r2, #8250	; 0x203a
   1bcf8:	e004      	b.n	1bd04 <low_level_init()+0x60>
   1bcfa:	f243 023a 	movw	r2, #12346	; 0x303a
   1bcfe:	e001      	b.n	1bd04 <low_level_init()+0x60>
   1bd00:	f245 023a 	movw	r2, #20538	; 0x503a
   1bd04:	4968      	ldr	r1, [pc, #416]	; (1bea8 <low_level_init()+0x204>)
   1bd06:	601a      	str	r2, [r3, #0]
   1bd08:	2308      	movs	r3, #8
   1bd0a:	760b      	strb	r3, [r1, #24]
   1bd0c:	764b      	strb	r3, [r1, #25]
   1bd0e:	768b      	strb	r3, [r1, #26]
   1bd10:	f881 3020 	strb.w	r3, [r1, #32]
   1bd14:	4b65      	ldr	r3, [pc, #404]	; (1beac <low_level_init()+0x208>)
   1bd16:	2298      	movs	r2, #152	; 0x98
   1bd18:	f883 2305 	strb.w	r2, [r3, #773]	; 0x305
   1bd1c:	f883 2306 	strb.w	r2, [r3, #774]	; 0x306
   1bd20:	f883 2307 	strb.w	r2, [r3, #775]	; 0x307
   1bd24:	f883 2308 	strb.w	r2, [r3, #776]	; 0x308
   1bd28:	2290      	movs	r2, #144	; 0x90
   1bd2a:	f883 230a 	strb.w	r2, [r3, #778]	; 0x30a
   1bd2e:	f883 230b 	strb.w	r2, [r3, #779]	; 0x30b
   1bd32:	f883 230c 	strb.w	r2, [r3, #780]	; 0x30c
   1bd36:	2270      	movs	r2, #112	; 0x70
   1bd38:	f883 230e 	strb.w	r2, [r3, #782]	; 0x30e
   1bd3c:	f883 230f 	strb.w	r2, [r3, #783]	; 0x30f
   1bd40:	2258      	movs	r2, #88	; 0x58
   1bd42:	f883 2312 	strb.w	r2, [r3, #786]	; 0x312
   1bd46:	f883 2313 	strb.w	r2, [r3, #787]	; 0x313
   1bd4a:	f883 2314 	strb.w	r2, [r3, #788]	; 0x314
   1bd4e:	f883 2315 	strb.w	r2, [r3, #789]	; 0x315
   1bd52:	2278      	movs	r2, #120	; 0x78
   1bd54:	f883 2319 	strb.w	r2, [r3, #793]	; 0x319
   1bd58:	22a0      	movs	r2, #160	; 0xa0
   1bd5a:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
   1bd5e:	f883 2301 	strb.w	r2, [r3, #769]	; 0x301
   1bd62:	f883 2302 	strb.w	r2, [r3, #770]	; 0x302
   1bd66:	f883 2303 	strb.w	r2, [r3, #771]	; 0x303
   1bd6a:	f883 2304 	strb.w	r2, [r3, #772]	; 0x304
   1bd6e:	f883 2309 	strb.w	r2, [r3, #777]	; 0x309
   1bd72:	f883 230d 	strb.w	r2, [r3, #781]	; 0x30d
   1bd76:	f883 2310 	strb.w	r2, [r3, #784]	; 0x310
   1bd7a:	f883 2311 	strb.w	r2, [r3, #785]	; 0x311
   1bd7e:	f883 2316 	strb.w	r2, [r3, #790]	; 0x316
   1bd82:	f883 2317 	strb.w	r2, [r3, #791]	; 0x317
   1bd86:	f883 2318 	strb.w	r2, [r3, #792]	; 0x318
   1bd8a:	f883 231a 	strb.w	r2, [r3, #794]	; 0x31a
   1bd8e:	f883 231b 	strb.w	r2, [r3, #795]	; 0x31b
   1bd92:	f883 231c 	strb.w	r2, [r3, #796]	; 0x31c
   1bd96:	f883 231e 	strb.w	r2, [r3, #798]	; 0x31e
   1bd9a:	f883 231f 	strb.w	r2, [r3, #799]	; 0x31f
   1bd9e:	f883 2320 	strb.w	r2, [r3, #800]	; 0x320
   1bda2:	f883 231d 	strb.w	r2, [r3, #797]	; 0x31d
   1bda6:	f883 2321 	strb.w	r2, [r3, #801]	; 0x321
   1bdaa:	f883 2322 	strb.w	r2, [r3, #802]	; 0x322
   1bdae:	68ca      	ldr	r2, [r1, #12]
   1bdb0:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
   1bdb4:	4013      	ands	r3, r2
   1bdb6:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
   1bdba:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
   1bdbe:	60cb      	str	r3, [r1, #12]
   1bdc0:	2000      	movs	r0, #0
   1bdc2:	f7ff ff5b 	bl	1bc7c <__set_BASEPRI>
   1bdc6:	b661      	cpsie	f
   1bdc8:	b662      	cpsie	i
   1bdca:	f44f 4016 	mov.w	r0, #38400	; 0x9600
   1bdce:	f000 fabb 	bl	1c348 <uart0_init>
   1bdd2:	4c37      	ldr	r4, [pc, #220]	; (1beb0 <low_level_init()+0x20c>)
   1bdd4:	4837      	ldr	r0, [pc, #220]	; (1beb4 <low_level_init()+0x210>)
   1bdd6:	f7f4 faab 	bl	10330 <sys_set_outchar_func>
   1bdda:	4837      	ldr	r0, [pc, #220]	; (1beb8 <low_level_init()+0x214>)
   1bddc:	f7f4 faae 	bl	1033c <sys_set_inchar_func>
   1bde0:	6823      	ldr	r3, [r4, #0]
   1bde2:	2100      	movs	r1, #0
   1bde4:	6898      	ldr	r0, [r3, #8]
   1bde6:	2202      	movs	r2, #2
   1bde8:	460b      	mov	r3, r1
   1bdea:	f002 feed 	bl	1ebc8 <setvbuf>
   1bdee:	6823      	ldr	r3, [r4, #0]
   1bdf0:	2100      	movs	r1, #0
   1bdf2:	2202      	movs	r2, #2
   1bdf4:	6858      	ldr	r0, [r3, #4]
   1bdf6:	460b      	mov	r3, r1
   1bdf8:	f002 fee6 	bl	1ebc8 <setvbuf>
   1bdfc:	f7f4 fae2 	bl	103c4 <syscalls_init>
   1be00:	4a2e      	ldr	r2, [pc, #184]	; (1bebc <low_level_init()+0x218>)
   1be02:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
   1be06:	605a      	str	r2, [r3, #4]
   1be08:	2203      	movs	r2, #3
   1be0a:	701a      	strb	r2, [r3, #0]
   1be0c:	22aa      	movs	r2, #170	; 0xaa
   1be0e:	721a      	strb	r2, [r3, #8]
   1be10:	4c24      	ldr	r4, [pc, #144]	; (1bea4 <low_level_init()+0x200>)
   1be12:	2255      	movs	r2, #85	; 0x55
   1be14:	721a      	strb	r2, [r3, #8]
   1be16:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   1be1a:	4d29      	ldr	r5, [pc, #164]	; (1bec0 <low_level_init()+0x21c>)
   1be1c:	f013 0f01 	tst.w	r3, #1
   1be20:	d009      	beq.n	1be36 <low_level_init()+0x192>
   1be22:	4828      	ldr	r0, [pc, #160]	; (1bec4 <low_level_init()+0x220>)
   1be24:	f000 fada 	bl	1c3dc <uart0_puts>
   1be28:	2301      	movs	r3, #1
   1be2a:	702b      	strb	r3, [r5, #0]
   1be2c:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   1be30:	f043 0301 	orr.w	r3, r3, #1
   1be34:	e00c      	b.n	1be50 <low_level_init()+0x1ac>
   1be36:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   1be3a:	079b      	lsls	r3, r3, #30
   1be3c:	d50b      	bpl.n	1be56 <low_level_init()+0x1b2>
   1be3e:	4822      	ldr	r0, [pc, #136]	; (1bec8 <low_level_init()+0x224>)
   1be40:	f000 facc 	bl	1c3dc <uart0_puts>
   1be44:	2302      	movs	r3, #2
   1be46:	702b      	strb	r3, [r5, #0]
   1be48:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   1be4c:	f043 0302 	orr.w	r3, r3, #2
   1be50:	f8c4 3180 	str.w	r3, [r4, #384]	; 0x180
   1be54:	e01f      	b.n	1be96 <low_level_init()+0x1f2>
   1be56:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   1be5a:	f013 0304 	ands.w	r3, r3, #4
   1be5e:	d019      	beq.n	1be94 <low_level_init()+0x1f0>
   1be60:	4b1a      	ldr	r3, [pc, #104]	; (1becc <low_level_init()+0x228>)
   1be62:	6c9a      	ldr	r2, [r3, #72]	; 0x48
   1be64:	4b1a      	ldr	r3, [pc, #104]	; (1bed0 <low_level_init()+0x22c>)
   1be66:	429a      	cmp	r2, r3
   1be68:	d105      	bne.n	1be76 <low_level_init()+0x1d2>
   1be6a:	2305      	movs	r3, #5
   1be6c:	4819      	ldr	r0, [pc, #100]	; (1bed4 <low_level_init()+0x230>)
   1be6e:	702b      	strb	r3, [r5, #0]
   1be70:	f000 fab4 	bl	1c3dc <uart0_puts>
   1be74:	e00a      	b.n	1be8c <low_level_init()+0x1e8>
   1be76:	2304      	movs	r3, #4
   1be78:	4817      	ldr	r0, [pc, #92]	; (1bed8 <low_level_init()+0x234>)
   1be7a:	702b      	strb	r3, [r5, #0]
   1be7c:	f000 faae 	bl	1c3dc <uart0_puts>
   1be80:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   1be84:	f043 0304 	orr.w	r3, r3, #4
   1be88:	f8c4 3180 	str.w	r3, [r4, #384]	; 0x180
   1be8c:	4b0f      	ldr	r3, [pc, #60]	; (1becc <low_level_init()+0x228>)
   1be8e:	2200      	movs	r2, #0
   1be90:	649a      	str	r2, [r3, #72]	; 0x48
   1be92:	e000      	b.n	1be96 <low_level_init()+0x1f2>
   1be94:	702b      	strb	r3, [r5, #0]
   1be96:	b005      	add	sp, #20
   1be98:	bd30      	pop	{r4, r5, pc}
   1be9a:	bf00      	nop
   1be9c:	2007cad9 	.word	0x2007cad9
   1bea0:	000f4240 	.word	0x000f4240
   1bea4:	400fc000 	.word	0x400fc000
   1bea8:	e000ed00 	.word	0xe000ed00
   1beac:	e000e100 	.word	0xe000e100
   1beb0:	2007c150 	.word	0x2007c150
   1beb4:	0001c3c1 	.word	0x0001c3c1
   1beb8:	0001c3a9 	.word	0x0001c3a9
   1bebc:	002dc6c0 	.word	0x002dc6c0
   1bec0:	2007cad8 	.word	0x2007cad8
   1bec4:	00026c38 	.word	0x00026c38
   1bec8:	00026c7b 	.word	0x00026c7b
   1becc:	40024000 	.word	0x40024000
   1bed0:	deadbeef 	.word	0xdeadbeef
   1bed4:	00026c55 	.word	0x00026c55
   1bed8:	00026c72 	.word	0x00026c72

0001bedc <lpc_pconp>:
lpc_pconp():
   1bedc:	b538      	push	{r3, r4, r5, lr}
   1bede:	4604      	mov	r4, r0
   1bee0:	460d      	mov	r5, r1
   1bee2:	f7ff fded 	bl	1bac0 <vPortEnterCritical>
   1bee6:	4b08      	ldr	r3, [pc, #32]	; (1bf08 <lpc_pconp+0x2c>)
   1bee8:	2201      	movs	r2, #1
   1beea:	f8d3 10c4 	ldr.w	r1, [r3, #196]	; 0xc4
   1beee:	40a2      	lsls	r2, r4
   1bef0:	b10d      	cbz	r5, 1bef6 <lpc_pconp+0x1a>
   1bef2:	430a      	orrs	r2, r1
   1bef4:	e001      	b.n	1befa <lpc_pconp+0x1e>
   1bef6:	ea21 0202 	bic.w	r2, r1, r2
   1befa:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
   1befe:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   1bf02:	f7ff bdef 	b.w	1bae4 <vPortExitCritical>
   1bf06:	bf00      	nop
   1bf08:	400fc000 	.word	0x400fc000

0001bf0c <lpc_pclk>:
lpc_pclk():
   1bf0c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1bf10:	4607      	mov	r7, r0
   1bf12:	007f      	lsls	r7, r7, #1
   1bf14:	4688      	mov	r8, r1
   1bf16:	f7ff fdd3 	bl	1bac0 <vPortEnterCritical>
   1bf1a:	463a      	mov	r2, r7
   1bf1c:	2003      	movs	r0, #3
   1bf1e:	2100      	movs	r1, #0
   1bf20:	f000 fde0 	bl	1cae4 <__aeabi_llsl>
   1bf24:	4e0a      	ldr	r6, [pc, #40]	; (1bf50 <lpc_pclk+0x44>)
   1bf26:	463a      	mov	r2, r7
   1bf28:	e9d6 4500 	ldrd	r4, r5, [r6]
   1bf2c:	ea24 0400 	bic.w	r4, r4, r0
   1bf30:	f008 0003 	and.w	r0, r8, #3
   1bf34:	ea25 0501 	bic.w	r5, r5, r1
   1bf38:	b2c0      	uxtb	r0, r0
   1bf3a:	2100      	movs	r1, #0
   1bf3c:	f000 fdd2 	bl	1cae4 <__aeabi_llsl>
   1bf40:	4320      	orrs	r0, r4
   1bf42:	4329      	orrs	r1, r5
   1bf44:	e9c6 0100 	strd	r0, r1, [r6]
   1bf48:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   1bf4c:	f7ff bdca 	b.w	1bae4 <vPortExitCritical>
   1bf50:	400fc1a8 	.word	0x400fc1a8

0001bf54 <lpc_sys_setup_system_timer>:
lpc_sys_setup_system_timer():
   1bf54:	b510      	push	{r4, lr}
   1bf56:	4b10      	ldr	r3, [pc, #64]	; (1bf98 <lpc_sys_setup_system_timer+0x44>)
   1bf58:	4c10      	ldr	r4, [pc, #64]	; (1bf9c <lpc_sys_setup_system_timer+0x48>)
   1bf5a:	2001      	movs	r0, #1
   1bf5c:	4601      	mov	r1, r0
   1bf5e:	6023      	str	r3, [r4, #0]
   1bf60:	f7fd fe5a 	bl	19c18 <lpc_timer_enable>
   1bf64:	6823      	ldr	r3, [r4, #0]
   1bf66:	f04f 32ff 	mov.w	r2, #4294967295
   1bf6a:	619a      	str	r2, [r3, #24]
   1bf6c:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   1bf70:	61da      	str	r2, [r3, #28]
   1bf72:	2200      	movs	r2, #0
   1bf74:	621a      	str	r2, [r3, #32]
   1bf76:	4a0a      	ldr	r2, [pc, #40]	; (1bfa0 <lpc_sys_setup_system_timer+0x4c>)
   1bf78:	625a      	str	r2, [r3, #36]	; 0x24
   1bf7a:	f240 2209 	movw	r2, #521	; 0x209
   1bf7e:	615a      	str	r2, [r3, #20]
   1bf80:	695a      	ldr	r2, [r3, #20]
   1bf82:	f042 0240 	orr.w	r2, r2, #64	; 0x40
   1bf86:	615a      	str	r2, [r3, #20]
   1bf88:	4b06      	ldr	r3, [pc, #24]	; (1bfa4 <lpc_sys_setup_system_timer+0x50>)
   1bf8a:	2204      	movs	r2, #4
   1bf8c:	601a      	str	r2, [r3, #0]
   1bf8e:	2218      	movs	r2, #24
   1bf90:	f883 2302 	strb.w	r2, [r3, #770]	; 0x302
   1bf94:	bd10      	pop	{r4, pc}
   1bf96:	bf00      	nop
   1bf98:	40008000 	.word	0x40008000
   1bf9c:	2007cae8 	.word	0x2007cae8
   1bfa0:	0016e360 	.word	0x0016e360
   1bfa4:	e000e100 	.word	0xe000e100

0001bfa8 <sys_get_uptime_us>:
sys_get_uptime_us():
   1bfa8:	b530      	push	{r4, r5, lr}
   1bfaa:	4b07      	ldr	r3, [pc, #28]	; (1bfc8 <sys_get_uptime_us+0x20>)
   1bfac:	681b      	ldr	r3, [r3, #0]
   1bfae:	4907      	ldr	r1, [pc, #28]	; (1bfcc <sys_get_uptime_us+0x24>)
   1bfb0:	689a      	ldr	r2, [r3, #8]
   1bfb2:	8809      	ldrh	r1, [r1, #0]
   1bfb4:	6898      	ldr	r0, [r3, #8]
   1bfb6:	b289      	uxth	r1, r1
   1bfb8:	4290      	cmp	r0, r2
   1bfba:	d3f8      	bcc.n	1bfae <sys_get_uptime_us+0x6>
   1bfbc:	2200      	movs	r2, #0
   1bfbe:	ea42 0400 	orr.w	r4, r2, r0
   1bfc2:	4620      	mov	r0, r4
   1bfc4:	bd30      	pop	{r4, r5, pc}
   1bfc6:	bf00      	nop
   1bfc8:	2007cae8 	.word	0x2007cae8
   1bfcc:	2007cae6 	.word	0x2007cae6

0001bfd0 <sys_get_mem_info_str>:
sys_get_mem_info_str():
   1bfd0:	b510      	push	{r4, lr}
   1bfd2:	b08e      	sub	sp, #56	; 0x38
   1bfd4:	4604      	mov	r4, r0
   1bfd6:	a806      	add	r0, sp, #24
   1bfd8:	f7f4 f950 	bl	1027c <sys_get_mem_info>
   1bfdc:	9b08      	ldr	r3, [sp, #32]
   1bfde:	4620      	mov	r0, r4
   1bfe0:	9300      	str	r3, [sp, #0]
   1bfe2:	9b09      	ldr	r3, [sp, #36]	; 0x24
   1bfe4:	4907      	ldr	r1, [pc, #28]	; (1c004 <sys_get_mem_info_str+0x34>)
   1bfe6:	9301      	str	r3, [sp, #4]
   1bfe8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   1bfea:	9a06      	ldr	r2, [sp, #24]
   1bfec:	9302      	str	r3, [sp, #8]
   1bfee:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   1bff0:	9303      	str	r3, [sp, #12]
   1bff2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   1bff4:	9304      	str	r3, [sp, #16]
   1bff6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   1bff8:	9305      	str	r3, [sp, #20]
   1bffa:	9b07      	ldr	r3, [sp, #28]
   1bffc:	f002 feb0 	bl	1ed60 <siprintf>
   1c000:	b00e      	add	sp, #56	; 0x38
   1c002:	bd10      	pop	{r4, pc}
   1c004:	00026c95 	.word	0x00026c95

0001c008 <TIMER1_IRQHandler>:
TIMER1_IRQHandler():
   1c008:	b538      	push	{r3, r4, r5, lr}
   1c00a:	4c2b      	ldr	r4, [pc, #172]	; (1c0b8 <TIMER1_IRQHandler+0xb0>)
   1c00c:	6823      	ldr	r3, [r4, #0]
   1c00e:	4625      	mov	r5, r4
   1c010:	681a      	ldr	r2, [r3, #0]
   1c012:	f012 0f10 	tst.w	r2, #16
   1c016:	d00e      	beq.n	1c036 <TIMER1_IRQHandler+0x2e>
   1c018:	2210      	movs	r2, #16
   1c01a:	601a      	str	r2, [r3, #0]
   1c01c:	f7f7 f9ea 	bl	133f4 <SingletonTemplate<IR_Sensor>::getInstance()>
   1c020:	6823      	ldr	r3, [r4, #0]
   1c022:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
   1c024:	f7f8 fea6 	bl	14d74 <IR_Sensor::storeIrCode(unsigned long)>
   1c028:	6822      	ldr	r2, [r4, #0]
   1c02a:	6893      	ldr	r3, [r2, #8]
   1c02c:	f503 531c 	add.w	r3, r3, #9984	; 0x2700
   1c030:	3310      	adds	r3, #16
   1c032:	6213      	str	r3, [r2, #32]
   1c034:	bd38      	pop	{r3, r4, r5, pc}
   1c036:	0754      	lsls	r4, r2, #29
   1c038:	d507      	bpl.n	1c04a <TIMER1_IRQHandler+0x42>
   1c03a:	2204      	movs	r2, #4
   1c03c:	601a      	str	r2, [r3, #0]
   1c03e:	f7f7 f9d9 	bl	133f4 <SingletonTemplate<IR_Sensor>::getInstance()>
   1c042:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   1c046:	f7f8 bea3 	b.w	14d90 <IR_Sensor::decodeIrCode()>
   1c04a:	07d0      	lsls	r0, r2, #31
   1c04c:	d507      	bpl.n	1c05e <TIMER1_IRQHandler+0x56>
   1c04e:	2201      	movs	r2, #1
   1c050:	601a      	str	r2, [r3, #0]
   1c052:	4b1a      	ldr	r3, [pc, #104]	; (1c0bc <TIMER1_IRQHandler+0xb4>)
   1c054:	881a      	ldrh	r2, [r3, #0]
   1c056:	3201      	adds	r2, #1
   1c058:	b292      	uxth	r2, r2
   1c05a:	801a      	strh	r2, [r3, #0]
   1c05c:	bd38      	pop	{r3, r4, r5, pc}
   1c05e:	0791      	lsls	r1, r2, #30
   1c060:	d515      	bpl.n	1c08e <TIMER1_IRQHandler+0x86>
   1c062:	2202      	movs	r2, #2
   1c064:	601a      	str	r2, [r3, #0]
   1c066:	f7ff fc11 	bl	1b88c <xTaskGetSchedulerState>
   1c06a:	2802      	cmp	r0, #2
   1c06c:	d002      	beq.n	1c074 <TIMER1_IRQHandler+0x6c>
   1c06e:	f7f8 fe25 	bl	14cbc <wireless_service>
   1c072:	e004      	b.n	1c07e <TIMER1_IRQHandler+0x76>
   1c074:	682b      	ldr	r3, [r5, #0]
   1c076:	695a      	ldr	r2, [r3, #20]
   1c078:	f022 0208 	bic.w	r2, r2, #8
   1c07c:	615a      	str	r2, [r3, #20]
   1c07e:	682b      	ldr	r3, [r5, #0]
   1c080:	6899      	ldr	r1, [r3, #8]
   1c082:	69da      	ldr	r2, [r3, #28]
   1c084:	440a      	add	r2, r1
   1c086:	f502 727a 	add.w	r2, r2, #1000	; 0x3e8
   1c08a:	61da      	str	r2, [r3, #28]
   1c08c:	bd38      	pop	{r3, r4, r5, pc}
   1c08e:	0712      	lsls	r2, r2, #28
   1c090:	d50e      	bpl.n	1c0b0 <TIMER1_IRQHandler+0xa8>
   1c092:	2208      	movs	r2, #8
   1c094:	601a      	str	r2, [r3, #0]
   1c096:	21aa      	movs	r1, #170	; 0xaa
   1c098:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
   1c09c:	7211      	strb	r1, [r2, #8]
   1c09e:	2155      	movs	r1, #85	; 0x55
   1c0a0:	7211      	strb	r1, [r2, #8]
   1c0a2:	689a      	ldr	r2, [r3, #8]
   1c0a4:	f502 12b7 	add.w	r2, r2, #1499136	; 0x16e000
   1c0a8:	f502 7258 	add.w	r2, r2, #864	; 0x360
   1c0ac:	625a      	str	r2, [r3, #36]	; 0x24
   1c0ae:	bd38      	pop	{r3, r4, r5, pc}
   1c0b0:	4803      	ldr	r0, [pc, #12]	; (1c0c0 <TIMER1_IRQHandler+0xb8>)
   1c0b2:	f002 fc5b 	bl	1e96c <puts>
   1c0b6:	e7fe      	b.n	1c0b6 <TIMER1_IRQHandler+0xae>
   1c0b8:	2007cae8 	.word	0x2007cae8
   1c0bc:	2007cae6 	.word	0x2007cae6
   1c0c0:	00026d5a 	.word	0x00026d5a

0001c0c4 <isr_forwarder_routine>:
isr_forwarder_routine():
   1c0c4:	b508      	push	{r3, lr}
   1c0c6:	f7ff fca3 	bl	1ba10 <vRunTimeStatIsrEntry>
   1c0ca:	4b09      	ldr	r3, [pc, #36]	; (1c0f0 <isr_forwarder_routine+0x2c>)
   1c0cc:	4a09      	ldr	r2, [pc, #36]	; (1c0f4 <isr_forwarder_routine+0x30>)
   1c0ce:	7819      	ldrb	r1, [r3, #0]
   1c0d0:	4b09      	ldr	r3, [pc, #36]	; (1c0f8 <isr_forwarder_routine+0x34>)
   1c0d2:	3910      	subs	r1, #16
   1c0d4:	b2c9      	uxtb	r1, r1
   1c0d6:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
   1c0da:	4293      	cmp	r3, r2
   1c0dc:	d103      	bne.n	1c0e6 <isr_forwarder_routine+0x22>
   1c0de:	4807      	ldr	r0, [pc, #28]	; (1c0fc <isr_forwarder_routine+0x38>)
   1c0e0:	f7f4 f9d8 	bl	10494 <u0_dbg_printf>
   1c0e4:	e7fe      	b.n	1c0e4 <isr_forwarder_routine+0x20>
   1c0e6:	4798      	blx	r3
   1c0e8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
   1c0ec:	f7ff bca4 	b.w	1ba38 <vRunTimeStatIsrExit>
   1c0f0:	e000ed04 	.word	0xe000ed04
   1c0f4:	0001014d 	.word	0x0001014d
   1c0f8:	2007c05c 	.word	0x2007c05c
   1c0fc:	00026d7b 	.word	0x00026d7b

0001c100 <isr_hard_fault_handler>:
isr_hard_fault_handler():
   1c100:	6803      	ldr	r3, [r0, #0]
   1c102:	b088      	sub	sp, #32
   1c104:	9300      	str	r3, [sp, #0]
   1c106:	6843      	ldr	r3, [r0, #4]
   1c108:	4a11      	ldr	r2, [pc, #68]	; (1c150 <isr_hard_fault_handler+0x50>)
   1c10a:	9301      	str	r3, [sp, #4]
   1c10c:	6883      	ldr	r3, [r0, #8]
   1c10e:	9302      	str	r3, [sp, #8]
   1c110:	68c3      	ldr	r3, [r0, #12]
   1c112:	9303      	str	r3, [sp, #12]
   1c114:	6903      	ldr	r3, [r0, #16]
   1c116:	9304      	str	r3, [sp, #16]
   1c118:	6943      	ldr	r3, [r0, #20]
   1c11a:	9305      	str	r3, [sp, #20]
   1c11c:	6983      	ldr	r3, [r0, #24]
   1c11e:	9306      	str	r3, [sp, #24]
   1c120:	69c3      	ldr	r3, [r0, #28]
   1c122:	9307      	str	r3, [sp, #28]
   1c124:	4b0b      	ldr	r3, [pc, #44]	; (1c154 <isr_hard_fault_handler+0x54>)
   1c126:	649a      	str	r2, [r3, #72]	; 0x48
   1c128:	9a06      	ldr	r2, [sp, #24]
   1c12a:	64da      	str	r2, [r3, #76]	; 0x4c
   1c12c:	9a05      	ldr	r2, [sp, #20]
   1c12e:	3a01      	subs	r2, #1
   1c130:	651a      	str	r2, [r3, #80]	; 0x50
   1c132:	9a07      	ldr	r2, [sp, #28]
   1c134:	655a      	str	r2, [r3, #84]	; 0x54
   1c136:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
   1c13a:	22aa      	movs	r2, #170	; 0xaa
   1c13c:	721a      	strb	r2, [r3, #8]
   1c13e:	2200      	movs	r2, #0
   1c140:	701a      	strb	r2, [r3, #0]
   1c142:	9b00      	ldr	r3, [sp, #0]
   1c144:	9b01      	ldr	r3, [sp, #4]
   1c146:	9b02      	ldr	r3, [sp, #8]
   1c148:	9b03      	ldr	r3, [sp, #12]
   1c14a:	9b04      	ldr	r3, [sp, #16]
   1c14c:	b008      	add	sp, #32
   1c14e:	4770      	bx	lr
   1c150:	deadbeef 	.word	0xdeadbeef
   1c154:	40024000 	.word	0x40024000

0001c158 <sys_clock_pll0_feed()>:
_ZL19sys_clock_pll0_feedv():
   1c158:	4b03      	ldr	r3, [pc, #12]	; (1c168 <sys_clock_pll0_feed()+0x10>)
   1c15a:	22aa      	movs	r2, #170	; 0xaa
   1c15c:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
   1c160:	2255      	movs	r2, #85	; 0x55
   1c162:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
   1c166:	4770      	bx	lr
   1c168:	400fc000 	.word	0x400fc000

0001c16c <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]>:
_ZL23sys_clock_configure_plljjPiS_S_.constprop.0():
   1c16c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c170:	2400      	movs	r4, #0
   1c172:	600c      	str	r4, [r1, #0]
   1c174:	6014      	str	r4, [r2, #0]
   1c176:	601c      	str	r4, [r3, #0]
   1c178:	f240 14ff 	movw	r4, #511	; 0x1ff
   1c17c:	f44f 55fa 	mov.w	r5, #8000	; 0x1f40
   1c180:	fb04 5a05 	mla	sl, r4, r5, r5
   1c184:	2500      	movs	r5, #0
   1c186:	f105 0c01 	add.w	ip, r5, #1
   1c18a:	fbba f8fc 	udiv	r8, sl, ip
   1c18e:	f5a8 2686 	sub.w	r6, r8, #274432	; 0x43000
   1c192:	4f12      	ldr	r7, [pc, #72]	; (1c1dc <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x70>)
   1c194:	f5a6 760e 	sub.w	r6, r6, #568	; 0x238
   1c198:	42be      	cmp	r6, r7
   1c19a:	d904      	bls.n	1c1a6 <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x3a>
   1c19c:	f1bc 0f20 	cmp.w	ip, #32
   1c1a0:	d016      	beq.n	1c1d0 <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x64>
   1c1a2:	4665      	mov	r5, ip
   1c1a4:	e7ef      	b.n	1c186 <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x1a>
   1c1a6:	2603      	movs	r6, #3
   1c1a8:	1c77      	adds	r7, r6, #1
   1c1aa:	f8df b034 	ldr.w	fp, [pc, #52]	; 1c1e0 <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x74>
   1c1ae:	fbb8 f9f7 	udiv	r9, r8, r7
   1c1b2:	45d9      	cmp	r9, fp
   1c1b4:	d904      	bls.n	1c1c0 <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x54>
   1c1b6:	f5b7 7f80 	cmp.w	r7, #256	; 0x100
   1c1ba:	d0ef      	beq.n	1c19c <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x30>
   1c1bc:	463e      	mov	r6, r7
   1c1be:	e7f3      	b.n	1c1a8 <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x3c>
   1c1c0:	4581      	cmp	r9, r0
   1c1c2:	600c      	str	r4, [r1, #0]
   1c1c4:	6015      	str	r5, [r2, #0]
   1c1c6:	601e      	str	r6, [r3, #0]
   1c1c8:	d1f5      	bne.n	1c1b6 <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x4a>
   1c1ca:	2001      	movs	r0, #1
   1c1cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c1d0:	3c01      	subs	r4, #1
   1c1d2:	2c05      	cmp	r4, #5
   1c1d4:	d1d2      	bne.n	1c17c <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x10>
   1c1d6:	2000      	movs	r0, #0
   1c1d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c1dc:	00043238 	.word	0x00043238
   1c1e0:	000186a0 	.word	0x000186a0

0001c1e4 <sys_clock_configure()>:
_Z19sys_clock_configurev():
   1c1e4:	b530      	push	{r4, r5, lr}
   1c1e6:	4d2a      	ldr	r5, [pc, #168]	; (1c290 <sys_clock_configure()+0xac>)
   1c1e8:	b085      	sub	sp, #20
   1c1ea:	f8d5 3080 	ldr.w	r3, [r5, #128]	; 0x80
   1c1ee:	2400      	movs	r4, #0
   1c1f0:	f023 0302 	bic.w	r3, r3, #2
   1c1f4:	9401      	str	r4, [sp, #4]
   1c1f6:	9402      	str	r4, [sp, #8]
   1c1f8:	9403      	str	r4, [sp, #12]
   1c1fa:	f8c5 3080 	str.w	r3, [r5, #128]	; 0x80
   1c1fe:	f7ff ffab 	bl	1c158 <sys_clock_pll0_feed()>
   1c202:	f8d5 3080 	ldr.w	r3, [r5, #128]	; 0x80
   1c206:	f023 0301 	bic.w	r3, r3, #1
   1c20a:	f8c5 3080 	str.w	r3, [r5, #128]	; 0x80
   1c20e:	f7ff ffa3 	bl	1c158 <sys_clock_pll0_feed()>
   1c212:	f8c5 410c 	str.w	r4, [r5, #268]	; 0x10c
   1c216:	f8c5 4084 	str.w	r4, [r5, #132]	; 0x84
   1c21a:	f7ff ff9d 	bl	1c158 <sys_clock_pll0_feed()>
   1c21e:	f8c5 4104 	str.w	r4, [r5, #260]	; 0x104
   1c222:	f64b 3080 	movw	r0, #48000	; 0xbb80
   1c226:	a901      	add	r1, sp, #4
   1c228:	aa02      	add	r2, sp, #8
   1c22a:	ab03      	add	r3, sp, #12
   1c22c:	f7ff ff9e 	bl	1c16c <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]>
   1c230:	b930      	cbnz	r0, 1c240 <sys_clock_configure()+0x5c>
   1c232:	f645 50c0 	movw	r0, #24000	; 0x5dc0
   1c236:	a901      	add	r1, sp, #4
   1c238:	aa02      	add	r2, sp, #8
   1c23a:	ab03      	add	r3, sp, #12
   1c23c:	f7ff ff96 	bl	1c16c <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]>
   1c240:	9b01      	ldr	r3, [sp, #4]
   1c242:	4d13      	ldr	r5, [pc, #76]	; (1c290 <sys_clock_configure()+0xac>)
   1c244:	f363 040f 	bfi	r4, r3, #0, #16
   1c248:	9b02      	ldr	r3, [sp, #8]
   1c24a:	f363 4417 	bfi	r4, r3, #16, #8
   1c24e:	2300      	movs	r3, #0
   1c250:	f8c5 310c 	str.w	r3, [r5, #268]	; 0x10c
   1c254:	f8c5 4084 	str.w	r4, [r5, #132]	; 0x84
   1c258:	f7ff ff7e 	bl	1c158 <sys_clock_pll0_feed()>
   1c25c:	2301      	movs	r3, #1
   1c25e:	f8c5 3080 	str.w	r3, [r5, #128]	; 0x80
   1c262:	f7ff ff79 	bl	1c158 <sys_clock_pll0_feed()>
   1c266:	f8d5 2088 	ldr.w	r2, [r5, #136]	; 0x88
   1c26a:	4b09      	ldr	r3, [pc, #36]	; (1c290 <sys_clock_configure()+0xac>)
   1c26c:	0152      	lsls	r2, r2, #5
   1c26e:	d5fa      	bpl.n	1c266 <sys_clock_configure()+0x82>
   1c270:	9a03      	ldr	r2, [sp, #12]
   1c272:	f8c3 2104 	str.w	r2, [r3, #260]	; 0x104
   1c276:	2203      	movs	r2, #3
   1c278:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
   1c27c:	f7ff ff6c 	bl	1c158 <sys_clock_pll0_feed()>
   1c280:	4b03      	ldr	r3, [pc, #12]	; (1c290 <sys_clock_configure()+0xac>)
   1c282:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
   1c286:	f013 7f40 	tst.w	r3, #50331648	; 0x3000000
   1c28a:	d0f9      	beq.n	1c280 <sys_clock_configure()+0x9c>
   1c28c:	b005      	add	sp, #20
   1c28e:	bd30      	pop	{r4, r5, pc}
   1c290:	400fc000 	.word	0x400fc000

0001c294 <sys_get_cpu_clock>:
sys_get_cpu_clock():
   1c294:	4b27      	ldr	r3, [pc, #156]	; (1c334 <sys_get_cpu_clock+0xa0>)
   1c296:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
   1c29a:	f3c2 6201 	ubfx	r2, r2, #24, #2
   1c29e:	2a03      	cmp	r2, #3
   1c2a0:	f8d3 210c 	ldr.w	r2, [r3, #268]	; 0x10c
   1c2a4:	f002 0203 	and.w	r2, r2, #3
   1c2a8:	d132      	bne.n	1c310 <sys_get_cpu_clock+0x7c>
   1c2aa:	2a01      	cmp	r2, #1
   1c2ac:	f8d3 0088 	ldr.w	r0, [r3, #136]	; 0x88
   1c2b0:	d009      	beq.n	1c2c6 <sys_get_cpu_clock+0x32>
   1c2b2:	2a02      	cmp	r2, #2
   1c2b4:	d01a      	beq.n	1c2ec <sys_get_cpu_clock+0x58>
   1c2b6:	f8d3 1088 	ldr.w	r1, [r3, #136]	; 0x88
   1c2ba:	f3c0 000e 	ubfx	r0, r0, #0, #15
   1c2be:	f8d3 2104 	ldr.w	r2, [r3, #260]	; 0x104
   1c2c2:	4b1d      	ldr	r3, [pc, #116]	; (1c338 <sys_get_cpu_clock+0xa4>)
   1c2c4:	e006      	b.n	1c2d4 <sys_get_cpu_clock+0x40>
   1c2c6:	f8d3 1088 	ldr.w	r1, [r3, #136]	; 0x88
   1c2ca:	f8d3 2104 	ldr.w	r2, [r3, #260]	; 0x104
   1c2ce:	4b1b      	ldr	r3, [pc, #108]	; (1c33c <sys_get_cpu_clock+0xa8>)
   1c2d0:	f3c0 000e 	ubfx	r0, r0, #0, #15
   1c2d4:	fb00 3303 	mla	r3, r0, r3, r3
   1c2d8:	f3c1 4107 	ubfx	r1, r1, #16, #8
   1c2dc:	3101      	adds	r1, #1
   1c2de:	b2d2      	uxtb	r2, r2
   1c2e0:	fbb3 f0f1 	udiv	r0, r3, r1
   1c2e4:	3201      	adds	r2, #1
   1c2e6:	fbb0 f0f2 	udiv	r0, r0, r2
   1c2ea:	4770      	bx	lr
   1c2ec:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
   1c2f0:	f3c0 000e 	ubfx	r0, r0, #0, #15
   1c2f4:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
   1c2f8:	3001      	adds	r0, #1
   1c2fa:	f3c2 4207 	ubfx	r2, r2, #16, #8
   1c2fe:	3201      	adds	r2, #1
   1c300:	0400      	lsls	r0, r0, #16
   1c302:	b2db      	uxtb	r3, r3
   1c304:	fbb0 f0f2 	udiv	r0, r0, r2
   1c308:	3301      	adds	r3, #1
   1c30a:	fbb0 f0f3 	udiv	r0, r0, r3
   1c30e:	4770      	bx	lr
   1c310:	f8d3 0104 	ldr.w	r0, [r3, #260]	; 0x104
   1c314:	2a01      	cmp	r2, #1
   1c316:	b2c0      	uxtb	r0, r0
   1c318:	f100 0001 	add.w	r0, r0, #1
   1c31c:	d003      	beq.n	1c326 <sys_get_cpu_clock+0x92>
   1c31e:	2a02      	cmp	r2, #2
   1c320:	d003      	beq.n	1c32a <sys_get_cpu_clock+0x96>
   1c322:	4b07      	ldr	r3, [pc, #28]	; (1c340 <sys_get_cpu_clock+0xac>)
   1c324:	e003      	b.n	1c32e <sys_get_cpu_clock+0x9a>
   1c326:	4b07      	ldr	r3, [pc, #28]	; (1c344 <sys_get_cpu_clock+0xb0>)
   1c328:	e001      	b.n	1c32e <sys_get_cpu_clock+0x9a>
   1c32a:	f44f 4300 	mov.w	r3, #32768	; 0x8000
   1c32e:	fbb3 f0f0 	udiv	r0, r3, r0
   1c332:	4770      	bx	lr
   1c334:	400fc000 	.word	0x400fc000
   1c338:	007a1200 	.word	0x007a1200
   1c33c:	016e3600 	.word	0x016e3600
   1c340:	003d0900 	.word	0x003d0900
   1c344:	00b71b00 	.word	0x00b71b00

0001c348 <uart0_init>:
uart0_init():
   1c348:	b510      	push	{r4, lr}
   1c34a:	4604      	mov	r4, r0
   1c34c:	f7ff ffa2 	bl	1c294 <sys_get_cpu_clock>
   1c350:	0124      	lsls	r4, r4, #4
   1c352:	fbb0 f0f4 	udiv	r0, r0, r4
   1c356:	f000 fd13 	bl	1cd80 <__aeabi_ui2d>
   1c35a:	2200      	movs	r2, #0
   1c35c:	4b10      	ldr	r3, [pc, #64]	; (1c3a0 <uart0_init+0x58>)
   1c35e:	f000 fbd3 	bl	1cb08 <__adddf3>
   1c362:	f000 fd83 	bl	1ce6c <__aeabi_d2uiz>
   1c366:	2101      	movs	r1, #1
   1c368:	b284      	uxth	r4, r0
   1c36a:	2003      	movs	r0, #3
   1c36c:	f7ff fdb6 	bl	1bedc <lpc_pconp>
   1c370:	2003      	movs	r0, #3
   1c372:	2101      	movs	r1, #1
   1c374:	f7ff fdca 	bl	1bf0c <lpc_pclk>
   1c378:	4b0a      	ldr	r3, [pc, #40]	; (1c3a4 <uart0_init+0x5c>)
   1c37a:	681a      	ldr	r2, [r3, #0]
   1c37c:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
   1c380:	601a      	str	r2, [r3, #0]
   1c382:	681a      	ldr	r2, [r3, #0]
   1c384:	f042 0250 	orr.w	r2, r2, #80	; 0x50
   1c388:	601a      	str	r2, [r3, #0]
   1c38a:	f5a3 3300 	sub.w	r3, r3, #131072	; 0x20000
   1c38e:	2280      	movs	r2, #128	; 0x80
   1c390:	731a      	strb	r2, [r3, #12]
   1c392:	0a22      	lsrs	r2, r4, #8
   1c394:	711a      	strb	r2, [r3, #4]
   1c396:	b2e4      	uxtb	r4, r4
   1c398:	2203      	movs	r2, #3
   1c39a:	701c      	strb	r4, [r3, #0]
   1c39c:	731a      	strb	r2, [r3, #12]
   1c39e:	bd10      	pop	{r4, pc}
   1c3a0:	3fe00000 	.word	0x3fe00000
   1c3a4:	4002c000 	.word	0x4002c000

0001c3a8 <uart0_getchar>:
uart0_getchar():
   1c3a8:	4b03      	ldr	r3, [pc, #12]	; (1c3b8 <uart0_getchar+0x10>)
   1c3aa:	681b      	ldr	r3, [r3, #0]
   1c3ac:	07db      	lsls	r3, r3, #31
   1c3ae:	d5fb      	bpl.n	1c3a8 <uart0_getchar>
   1c3b0:	4b02      	ldr	r3, [pc, #8]	; (1c3bc <uart0_getchar+0x14>)
   1c3b2:	7818      	ldrb	r0, [r3, #0]
   1c3b4:	b240      	sxtb	r0, r0
   1c3b6:	4770      	bx	lr
   1c3b8:	4000c014 	.word	0x4000c014
   1c3bc:	4000c000 	.word	0x4000c000

0001c3c0 <uart0_putchar>:
uart0_putchar():
   1c3c0:	4b04      	ldr	r3, [pc, #16]	; (1c3d4 <uart0_putchar+0x14>)
   1c3c2:	b2c0      	uxtb	r0, r0
   1c3c4:	7018      	strb	r0, [r3, #0]
   1c3c6:	4b04      	ldr	r3, [pc, #16]	; (1c3d8 <uart0_putchar+0x18>)
   1c3c8:	681b      	ldr	r3, [r3, #0]
   1c3ca:	065b      	lsls	r3, r3, #25
   1c3cc:	d5fb      	bpl.n	1c3c6 <uart0_putchar+0x6>
   1c3ce:	2001      	movs	r0, #1
   1c3d0:	4770      	bx	lr
   1c3d2:	bf00      	nop
   1c3d4:	4000c000 	.word	0x4000c000
   1c3d8:	4000c014 	.word	0x4000c014

0001c3dc <uart0_puts>:
uart0_puts():
   1c3dc:	b510      	push	{r4, lr}
   1c3de:	1e44      	subs	r4, r0, #1
   1c3e0:	f814 0f01 	ldrb.w	r0, [r4, #1]!
   1c3e4:	b118      	cbz	r0, 1c3ee <uart0_puts+0x12>
   1c3e6:	b240      	sxtb	r0, r0
   1c3e8:	f7ff ffea 	bl	1c3c0 <uart0_putchar>
   1c3ec:	e7f8      	b.n	1c3e0 <uart0_puts+0x4>
   1c3ee:	200a      	movs	r0, #10
   1c3f0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   1c3f4:	f7ff bfe4 	b.w	1c3c0 <uart0_putchar>

0001c3f8 <__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()>:
_ZN10__cxxabiv121__vmi_class_type_infoD1Ev():
   1c3f8:	b510      	push	{r4, lr}
   1c3fa:	4b03      	ldr	r3, [pc, #12]	; (1c408 <__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()+0x10>)
   1c3fc:	4604      	mov	r4, r0
   1c3fe:	6003      	str	r3, [r0, #0]
   1c400:	f000 fa96 	bl	1c930 <__cxxabiv1::__class_type_info::~__class_type_info()>
   1c404:	4620      	mov	r0, r4
   1c406:	bd10      	pop	{r4, pc}
   1c408:	00026e68 	.word	0x00026e68

0001c40c <__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()>:
_ZN10__cxxabiv121__vmi_class_type_infoD0Ev():
   1c40c:	b510      	push	{r4, lr}
   1c40e:	4604      	mov	r4, r0
   1c410:	f7ff fff2 	bl	1c3f8 <__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()>
   1c414:	4620      	mov	r0, r4
   1c416:	f7f3 ff2d 	bl	10274 <operator delete(void*)>
   1c41a:	4620      	mov	r0, r4
   1c41c:	bd10      	pop	{r4, pc}

0001c41e <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>:
_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_():
   1c41e:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
   1c422:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
   1c426:	4604      	mov	r4, r0
   1c428:	454a      	cmp	r2, r9
   1c42a:	460f      	mov	r7, r1
   1c42c:	4616      	mov	r6, r2
   1c42e:	4698      	mov	r8, r3
   1c430:	d105      	bne.n	1c43e <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x20>
   1c432:	4619      	mov	r1, r3
   1c434:	f000 fa42 	bl	1c8bc <std::type_info::operator==(std::type_info const&) const>
   1c438:	b108      	cbz	r0, 1c43e <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x20>
   1c43a:	2006      	movs	r0, #6
   1c43c:	e029      	b.n	1c492 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x74>
   1c43e:	68e3      	ldr	r3, [r4, #12]
   1c440:	eb04 04c3 	add.w	r4, r4, r3, lsl #3
   1c444:	1e5d      	subs	r5, r3, #1
   1c446:	3404      	adds	r4, #4
   1c448:	1c6b      	adds	r3, r5, #1
   1c44a:	d021      	beq.n	1c490 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x72>
   1c44c:	68a0      	ldr	r0, [r4, #8]
   1c44e:	0783      	lsls	r3, r0, #30
   1c450:	d51b      	bpl.n	1c48a <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x6c>
   1c452:	f010 0a01 	ands.w	sl, r0, #1
   1c456:	ea4f 2220 	mov.w	r2, r0, asr #8
   1c45a:	d003      	beq.n	1c464 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x46>
   1c45c:	1cf9      	adds	r1, r7, #3
   1c45e:	d014      	beq.n	1c48a <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x6c>
   1c460:	6833      	ldr	r3, [r6, #0]
   1c462:	589a      	ldr	r2, [r3, r2]
   1c464:	6860      	ldr	r0, [r4, #4]
   1c466:	4639      	mov	r1, r7
   1c468:	6803      	ldr	r3, [r0, #0]
   1c46a:	f8cd 9000 	str.w	r9, [sp]
   1c46e:	f8d3 c020 	ldr.w	ip, [r3, #32]
   1c472:	4432      	add	r2, r6
   1c474:	4643      	mov	r3, r8
   1c476:	47e0      	blx	ip
   1c478:	2803      	cmp	r0, #3
   1c47a:	d906      	bls.n	1c48a <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x6c>
   1c47c:	f1ba 0f00 	cmp.w	sl, #0
   1c480:	d007      	beq.n	1c492 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x74>
   1c482:	f040 0001 	orr.w	r0, r0, #1
   1c486:	b2c0      	uxtb	r0, r0
   1c488:	e003      	b.n	1c492 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x74>
   1c48a:	3d01      	subs	r5, #1
   1c48c:	3c08      	subs	r4, #8
   1c48e:	e7db      	b.n	1c448 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x2a>
   1c490:	2001      	movs	r0, #1
   1c492:	b002      	add	sp, #8
   1c494:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0001c498 <__cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>:
_ZNK10__cxxabiv117__class_type_info17__find_public_srcEiPKvPKS0_S2_():
   1c498:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   1c49a:	1e0d      	subs	r5, r1, #0
   1c49c:	9c08      	ldr	r4, [sp, #32]
   1c49e:	db05      	blt.n	1c4ac <__cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x14>
   1c4a0:	1950      	adds	r0, r2, r5
   1c4a2:	4284      	cmp	r4, r0
   1c4a4:	bf14      	ite	ne
   1c4a6:	2001      	movne	r0, #1
   1c4a8:	2006      	moveq	r0, #6
   1c4aa:	e007      	b.n	1c4bc <__cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x24>
   1c4ac:	3502      	adds	r5, #2
   1c4ae:	d004      	beq.n	1c4ba <__cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x22>
   1c4b0:	6805      	ldr	r5, [r0, #0]
   1c4b2:	9400      	str	r4, [sp, #0]
   1c4b4:	6a2c      	ldr	r4, [r5, #32]
   1c4b6:	47a0      	blx	r4
   1c4b8:	e000      	b.n	1c4bc <__cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x24>
   1c4ba:	2001      	movs	r0, #1
   1c4bc:	b003      	add	sp, #12
   1c4be:	bdf0      	pop	{r4, r5, r6, r7, pc}

0001c4c0 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const>:
_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE():
   1c4c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c4c4:	b08f      	sub	sp, #60	; 0x3c
   1c4c6:	9c1b      	ldr	r4, [sp, #108]	; 0x6c
   1c4c8:	9305      	str	r3, [sp, #20]
   1c4ca:	68a3      	ldr	r3, [r4, #8]
   1c4cc:	4688      	mov	r8, r1
   1c4ce:	06d9      	lsls	r1, r3, #27
   1c4d0:	bf48      	it	mi
   1c4d2:	6883      	ldrmi	r3, [r0, #8]
   1c4d4:	4681      	mov	r9, r0
   1c4d6:	9e18      	ldr	r6, [sp, #96]	; 0x60
   1c4d8:	981a      	ldr	r0, [sp, #104]	; 0x68
   1c4da:	bf48      	it	mi
   1c4dc:	60a3      	strmi	r3, [r4, #8]
   1c4de:	4286      	cmp	r6, r0
   1c4e0:	4693      	mov	fp, r2
   1c4e2:	d108      	bne.n	1c4f6 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x36>
   1c4e4:	4648      	mov	r0, r9
   1c4e6:	9919      	ldr	r1, [sp, #100]	; 0x64
   1c4e8:	f000 f9e8 	bl	1c8bc <std::type_info::operator==(std::type_info const&) const>
   1c4ec:	b118      	cbz	r0, 1c4f6 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x36>
   1c4ee:	f884 b005 	strb.w	fp, [r4, #5]
   1c4f2:	2000      	movs	r0, #0
   1c4f4:	e119      	b.n	1c72a <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x26a>
   1c4f6:	4648      	mov	r0, r9
   1c4f8:	9905      	ldr	r1, [sp, #20]
   1c4fa:	f000 f9df 	bl	1c8bc <std::type_info::operator==(std::type_info const&) const>
   1c4fe:	b1b8      	cbz	r0, 1c530 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x70>
   1c500:	9e18      	ldr	r6, [sp, #96]	; 0x60
   1c502:	f1b8 0f00 	cmp.w	r8, #0
   1c506:	6026      	str	r6, [r4, #0]
   1c508:	f884 b004 	strb.w	fp, [r4, #4]
   1c50c:	db0a      	blt.n	1c524 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x64>
   1c50e:	44b0      	add	r8, r6
   1c510:	9e1a      	ldr	r6, [sp, #104]	; 0x68
   1c512:	4546      	cmp	r6, r8
   1c514:	bf14      	ite	ne
   1c516:	f04f 0801 	movne.w	r8, #1
   1c51a:	f04f 0806 	moveq.w	r8, #6
   1c51e:	f884 8006 	strb.w	r8, [r4, #6]
   1c522:	e7e6      	b.n	1c4f2 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x32>
   1c524:	f118 0f02 	cmn.w	r8, #2
   1c528:	d1e3      	bne.n	1c4f2 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x32>
   1c52a:	2301      	movs	r3, #1
   1c52c:	71a3      	strb	r3, [r4, #6]
   1c52e:	e7e0      	b.n	1c4f2 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x32>
   1c530:	f1b8 0f00 	cmp.w	r8, #0
   1c534:	bfa8      	it	ge
   1c536:	9e1a      	ldrge	r6, [sp, #104]	; 0x68
   1c538:	f04f 0700 	mov.w	r7, #0
   1c53c:	bfa6      	itte	ge
   1c53e:	ebc8 0606 	rsbge	r6, r8, r6
   1c542:	9606      	strge	r6, [sp, #24]
   1c544:	9006      	strlt	r0, [sp, #24]
   1c546:	9709      	str	r7, [sp, #36]	; 0x24
   1c548:	2601      	movs	r6, #1
   1c54a:	f8d9 300c 	ldr.w	r3, [r9, #12]
   1c54e:	9607      	str	r6, [sp, #28]
   1c550:	eb09 0ac3 	add.w	sl, r9, r3, lsl #3
   1c554:	1e5e      	subs	r6, r3, #1
   1c556:	9608      	str	r6, [sp, #32]
   1c558:	f10a 0a04 	add.w	sl, sl, #4
   1c55c:	9e08      	ldr	r6, [sp, #32]
   1c55e:	3601      	adds	r6, #1
   1c560:	f000 809e 	beq.w	1c6a0 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1e0>
   1c564:	2300      	movs	r3, #0
   1c566:	930b      	str	r3, [sp, #44]	; 0x2c
   1c568:	f88d 3030 	strb.w	r3, [sp, #48]	; 0x30
   1c56c:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
   1c570:	f88d 3032 	strb.w	r3, [sp, #50]	; 0x32
   1c574:	f8da 3008 	ldr.w	r3, [sl, #8]
   1c578:	68a5      	ldr	r5, [r4, #8]
   1c57a:	07da      	lsls	r2, r3, #31
   1c57c:	950d      	str	r5, [sp, #52]	; 0x34
   1c57e:	ea4f 2123 	mov.w	r1, r3, asr #8
   1c582:	d505      	bpl.n	1c590 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0xd0>
   1c584:	9e18      	ldr	r6, [sp, #96]	; 0x60
   1c586:	f04b 0201 	orr.w	r2, fp, #1
   1c58a:	6830      	ldr	r0, [r6, #0]
   1c58c:	5841      	ldr	r1, [r0, r1]
   1c58e:	e000      	b.n	1c592 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0xd2>
   1c590:	465a      	mov	r2, fp
   1c592:	9e18      	ldr	r6, [sp, #96]	; 0x60
   1c594:	4431      	add	r1, r6
   1c596:	9e06      	ldr	r6, [sp, #24]
   1c598:	b136      	cbz	r6, 1c5a8 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0xe8>
   1c59a:	42b1      	cmp	r1, r6
   1c59c:	9e07      	ldr	r6, [sp, #28]
   1c59e:	bf94      	ite	ls
   1c5a0:	2000      	movls	r0, #0
   1c5a2:	2001      	movhi	r0, #1
   1c5a4:	42b0      	cmp	r0, r6
   1c5a6:	d070      	beq.n	1c68a <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1ca>
   1c5a8:	079e      	lsls	r6, r3, #30
   1c5aa:	d406      	bmi.n	1c5ba <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0xfa>
   1c5ac:	f118 0f02 	cmn.w	r8, #2
   1c5b0:	d101      	bne.n	1c5b6 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0xf6>
   1c5b2:	07ad      	lsls	r5, r5, #30
   1c5b4:	d06e      	beq.n	1c694 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1d4>
   1c5b6:	f002 02fd 	and.w	r2, r2, #253	; 0xfd
   1c5ba:	f8da 0004 	ldr.w	r0, [sl, #4]
   1c5be:	9e19      	ldr	r6, [sp, #100]	; 0x64
   1c5c0:	6803      	ldr	r3, [r0, #0]
   1c5c2:	9601      	str	r6, [sp, #4]
   1c5c4:	9e1a      	ldr	r6, [sp, #104]	; 0x68
   1c5c6:	9100      	str	r1, [sp, #0]
   1c5c8:	a90b      	add	r1, sp, #44	; 0x2c
   1c5ca:	9103      	str	r1, [sp, #12]
   1c5cc:	9602      	str	r6, [sp, #8]
   1c5ce:	69dd      	ldr	r5, [r3, #28]
   1c5d0:	4641      	mov	r1, r8
   1c5d2:	9b05      	ldr	r3, [sp, #20]
   1c5d4:	47a8      	blx	r5
   1c5d6:	7962      	ldrb	r2, [r4, #5]
   1c5d8:	f89d 1031 	ldrb.w	r1, [sp, #49]	; 0x31
   1c5dc:	f89d 5032 	ldrb.w	r5, [sp, #50]	; 0x32
   1c5e0:	4311      	orrs	r1, r2
   1c5e2:	2d06      	cmp	r5, #6
   1c5e4:	4603      	mov	r3, r0
   1c5e6:	7161      	strb	r1, [r4, #5]
   1c5e8:	d001      	beq.n	1c5ee <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x12e>
   1c5ea:	2d02      	cmp	r5, #2
   1c5ec:	d106      	bne.n	1c5fc <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x13c>
   1c5ee:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   1c5f0:	71a5      	strb	r5, [r4, #6]
   1c5f2:	6023      	str	r3, [r4, #0]
   1c5f4:	f89d 3030 	ldrb.w	r3, [sp, #48]	; 0x30
   1c5f8:	7123      	strb	r3, [r4, #4]
   1c5fa:	e096      	b.n	1c72a <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x26a>
   1c5fc:	6822      	ldr	r2, [r4, #0]
   1c5fe:	b977      	cbnz	r7, 1c61e <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x15e>
   1c600:	b96a      	cbnz	r2, 1c61e <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x15e>
   1c602:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   1c604:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
   1c608:	6022      	str	r2, [r4, #0]
   1c60a:	7125      	strb	r5, [r4, #4]
   1c60c:	2a00      	cmp	r2, #0
   1c60e:	d037      	beq.n	1c680 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1c0>
   1c610:	2900      	cmp	r1, #0
   1c612:	d035      	beq.n	1c680 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1c0>
   1c614:	f8d9 2008 	ldr.w	r2, [r9, #8]
   1c618:	07d2      	lsls	r2, r2, #31
   1c61a:	d431      	bmi.n	1c680 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1c0>
   1c61c:	e085      	b.n	1c72a <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x26a>
   1c61e:	b152      	cbz	r2, 1c636 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x176>
   1c620:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   1c622:	429a      	cmp	r2, r3
   1c624:	d105      	bne.n	1c632 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x172>
   1c626:	7923      	ldrb	r3, [r4, #4]
   1c628:	f89d 2030 	ldrb.w	r2, [sp, #48]	; 0x30
   1c62c:	4313      	orrs	r3, r2
   1c62e:	7123      	strb	r3, [r4, #4]
   1c630:	e025      	b.n	1c67e <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1be>
   1c632:	b91b      	cbnz	r3, 1c63c <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x17c>
   1c634:	b910      	cbnz	r0, 1c63c <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x17c>
   1c636:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   1c638:	b30b      	cbz	r3, 1c67e <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1be>
   1c63a:	b307      	cbz	r7, 1c67e <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1be>
   1c63c:	2903      	cmp	r1, #3
   1c63e:	79a6      	ldrb	r6, [r4, #6]
   1c640:	d904      	bls.n	1c64c <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x18c>
   1c642:	07cb      	lsls	r3, r1, #31
   1c644:	d534      	bpl.n	1c6b0 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1f0>
   1c646:	68a3      	ldr	r3, [r4, #8]
   1c648:	0799      	lsls	r1, r3, #30
   1c64a:	d531      	bpl.n	1c6b0 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1f0>
   1c64c:	2e00      	cmp	r6, #0
   1c64e:	d043      	beq.n	1c6d8 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x218>
   1c650:	2d00      	cmp	r5, #0
   1c652:	d04a      	beq.n	1c6ea <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x22a>
   1c654:	ea86 0305 	eor.w	r3, r6, r5
   1c658:	b2db      	uxtb	r3, r3
   1c65a:	2b03      	cmp	r3, #3
   1c65c:	d92f      	bls.n	1c6be <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1fe>
   1c65e:	2d03      	cmp	r5, #3
   1c660:	d906      	bls.n	1c670 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1b0>
   1c662:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   1c664:	462e      	mov	r6, r5
   1c666:	6023      	str	r3, [r4, #0]
   1c668:	f89d 3030 	ldrb.w	r3, [sp, #48]	; 0x30
   1c66c:	2700      	movs	r7, #0
   1c66e:	7123      	strb	r3, [r4, #4]
   1c670:	07b3      	lsls	r3, r6, #30
   1c672:	71a6      	strb	r6, [r4, #6]
   1c674:	f53f af3d 	bmi.w	1c4f2 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x32>
   1c678:	f016 0001 	ands.w	r0, r6, #1
   1c67c:	d055      	beq.n	1c72a <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x26a>
   1c67e:	463b      	mov	r3, r7
   1c680:	7962      	ldrb	r2, [r4, #5]
   1c682:	2a04      	cmp	r2, #4
   1c684:	d004      	beq.n	1c690 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1d0>
   1c686:	461f      	mov	r7, r3
   1c688:	e004      	b.n	1c694 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1d4>
   1c68a:	2601      	movs	r6, #1
   1c68c:	9609      	str	r6, [sp, #36]	; 0x24
   1c68e:	e001      	b.n	1c694 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1d4>
   1c690:	4618      	mov	r0, r3
   1c692:	e04a      	b.n	1c72a <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x26a>
   1c694:	9e08      	ldr	r6, [sp, #32]
   1c696:	f1aa 0a08 	sub.w	sl, sl, #8
   1c69a:	3e01      	subs	r6, #1
   1c69c:	9608      	str	r6, [sp, #32]
   1c69e:	e75d      	b.n	1c55c <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x9c>
   1c6a0:	9e09      	ldr	r6, [sp, #36]	; 0x24
   1c6a2:	b11e      	cbz	r6, 1c6ac <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1ec>
   1c6a4:	9e07      	ldr	r6, [sp, #28]
   1c6a6:	b10e      	cbz	r6, 1c6ac <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1ec>
   1c6a8:	2600      	movs	r6, #0
   1c6aa:	e74e      	b.n	1c54a <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x8a>
   1c6ac:	4638      	mov	r0, r7
   1c6ae:	e03c      	b.n	1c72a <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x26a>
   1c6b0:	2e00      	cmp	r6, #0
   1c6b2:	bf08      	it	eq
   1c6b4:	2601      	moveq	r6, #1
   1c6b6:	2d00      	cmp	r5, #0
   1c6b8:	bf08      	it	eq
   1c6ba:	2501      	moveq	r5, #1
   1c6bc:	e7ca      	b.n	1c654 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x194>
   1c6be:	4035      	ands	r5, r6
   1c6c0:	b2ed      	uxtb	r5, r5
   1c6c2:	2300      	movs	r3, #0
   1c6c4:	2d03      	cmp	r5, #3
   1c6c6:	6023      	str	r3, [r4, #0]
   1c6c8:	d903      	bls.n	1c6d2 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x212>
   1c6ca:	2302      	movs	r3, #2
   1c6cc:	71a3      	strb	r3, [r4, #6]
   1c6ce:	2001      	movs	r0, #1
   1c6d0:	e02b      	b.n	1c72a <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x26a>
   1c6d2:	2301      	movs	r3, #1
   1c6d4:	71a3      	strb	r3, [r4, #6]
   1c6d6:	e7d3      	b.n	1c680 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1c0>
   1c6d8:	2d03      	cmp	r5, #3
   1c6da:	d913      	bls.n	1c704 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x244>
   1c6dc:	07eb      	lsls	r3, r5, #31
   1c6de:	d50d      	bpl.n	1c6fc <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x23c>
   1c6e0:	f8d9 3008 	ldr.w	r3, [r9, #8]
   1c6e4:	079e      	lsls	r6, r3, #30
   1c6e6:	d509      	bpl.n	1c6fc <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x23c>
   1c6e8:	e00c      	b.n	1c704 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x244>
   1c6ea:	2e03      	cmp	r6, #3
   1c6ec:	d913      	bls.n	1c716 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x256>
   1c6ee:	07f1      	lsls	r1, r6, #31
   1c6f0:	d506      	bpl.n	1c700 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x240>
   1c6f2:	f8d9 3008 	ldr.w	r3, [r9, #8]
   1c6f6:	079a      	lsls	r2, r3, #30
   1c6f8:	d40d      	bmi.n	1c716 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x256>
   1c6fa:	e001      	b.n	1c700 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x240>
   1c6fc:	2601      	movs	r6, #1
   1c6fe:	e7a9      	b.n	1c654 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x194>
   1c700:	2501      	movs	r5, #1
   1c702:	e7a7      	b.n	1c654 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x194>
   1c704:	9e1a      	ldr	r6, [sp, #104]	; 0x68
   1c706:	9805      	ldr	r0, [sp, #20]
   1c708:	9600      	str	r6, [sp, #0]
   1c70a:	4641      	mov	r1, r8
   1c70c:	9b19      	ldr	r3, [sp, #100]	; 0x64
   1c70e:	f7ff fec3 	bl	1c498 <__cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>
   1c712:	4606      	mov	r6, r0
   1c714:	e79c      	b.n	1c650 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x190>
   1c716:	981a      	ldr	r0, [sp, #104]	; 0x68
   1c718:	4641      	mov	r1, r8
   1c71a:	9000      	str	r0, [sp, #0]
   1c71c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   1c71e:	9805      	ldr	r0, [sp, #20]
   1c720:	9b19      	ldr	r3, [sp, #100]	; 0x64
   1c722:	f7ff feb9 	bl	1c498 <__cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>
   1c726:	4605      	mov	r5, r0
   1c728:	e794      	b.n	1c654 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x194>
   1c72a:	b00f      	add	sp, #60	; 0x3c
   1c72c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001c730 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const>:
_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE():
   1c730:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c734:	b087      	sub	sp, #28
   1c736:	4606      	mov	r6, r0
   1c738:	9101      	str	r1, [sp, #4]
   1c73a:	4617      	mov	r7, r2
   1c73c:	461c      	mov	r4, r3
   1c73e:	f000 f90a 	bl	1c956 <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const>
   1c742:	2800      	cmp	r0, #0
   1c744:	d17d      	bne.n	1c842 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x112>
   1c746:	f8d4 8008 	ldr.w	r8, [r4, #8]
   1c74a:	68f5      	ldr	r5, [r6, #12]
   1c74c:	f018 0f10 	tst.w	r8, #16
   1c750:	f105 39ff 	add.w	r9, r5, #4294967295
   1c754:	bf18      	it	ne
   1c756:	f8d6 8008 	ldrne.w	r8, [r6, #8]
   1c75a:	3502      	adds	r5, #2
   1c75c:	eb06 05c5 	add.w	r5, r6, r5, lsl #3
   1c760:	f1b9 3fff 	cmp.w	r9, #4294967295
   1c764:	d066      	beq.n	1c834 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x104>
   1c766:	f855 2c04 	ldr.w	r2, [r5, #-4]
   1c76a:	2300      	movs	r3, #0
   1c76c:	9302      	str	r3, [sp, #8]
   1c76e:	f88d 300c 	strb.w	r3, [sp, #12]
   1c772:	9305      	str	r3, [sp, #20]
   1c774:	f3c2 0340 	ubfx	r3, r2, #1, #1
   1c778:	f8cd 8010 	str.w	r8, [sp, #16]
   1c77c:	f002 0b01 	and.w	fp, r2, #1
   1c780:	9300      	str	r3, [sp, #0]
   1c782:	b913      	cbnz	r3, 1c78a <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x5a>
   1c784:	f018 0f01 	tst.w	r8, #1
   1c788:	d050      	beq.n	1c82c <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xfc>
   1c78a:	b13f      	cbz	r7, 1c79c <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x6c>
   1c78c:	1212      	asrs	r2, r2, #8
   1c78e:	f1bb 0f00 	cmp.w	fp, #0
   1c792:	d001      	beq.n	1c798 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x68>
   1c794:	683b      	ldr	r3, [r7, #0]
   1c796:	589a      	ldr	r2, [r3, r2]
   1c798:	443a      	add	r2, r7
   1c79a:	e000      	b.n	1c79e <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x6e>
   1c79c:	463a      	mov	r2, r7
   1c79e:	f855 0c08 	ldr.w	r0, [r5, #-8]
   1c7a2:	f10d 0a08 	add.w	sl, sp, #8
   1c7a6:	6803      	ldr	r3, [r0, #0]
   1c7a8:	9901      	ldr	r1, [sp, #4]
   1c7aa:	f8d3 c018 	ldr.w	ip, [r3, #24]
   1c7ae:	4653      	mov	r3, sl
   1c7b0:	47e0      	blx	ip
   1c7b2:	2800      	cmp	r0, #0
   1c7b4:	d03a      	beq.n	1c82c <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xfc>
   1c7b6:	9b05      	ldr	r3, [sp, #20]
   1c7b8:	2b08      	cmp	r3, #8
   1c7ba:	d105      	bne.n	1c7c8 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x98>
   1c7bc:	f1bb 0f00 	cmp.w	fp, #0
   1c7c0:	d002      	beq.n	1c7c8 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x98>
   1c7c2:	f855 3c08 	ldr.w	r3, [r5, #-8]
   1c7c6:	9305      	str	r3, [sp, #20]
   1c7c8:	f89d 300c 	ldrb.w	r3, [sp, #12]
   1c7cc:	2b03      	cmp	r3, #3
   1c7ce:	d902      	bls.n	1c7d6 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xa6>
   1c7d0:	9a00      	ldr	r2, [sp, #0]
   1c7d2:	2a00      	cmp	r2, #0
   1c7d4:	d037      	beq.n	1c846 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x116>
   1c7d6:	68e1      	ldr	r1, [r4, #12]
   1c7d8:	b999      	cbnz	r1, 1c802 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xd2>
   1c7da:	e89a 000f 	ldmia.w	sl, {r0, r1, r2, r3}
   1c7de:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
   1c7e2:	7923      	ldrb	r3, [r4, #4]
   1c7e4:	2b03      	cmp	r3, #3
   1c7e6:	d92c      	bls.n	1c842 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x112>
   1c7e8:	079a      	lsls	r2, r3, #30
   1c7ea:	d503      	bpl.n	1c7f4 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xc4>
   1c7ec:	68b3      	ldr	r3, [r6, #8]
   1c7ee:	f013 0f01 	tst.w	r3, #1
   1c7f2:	e004      	b.n	1c7fe <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xce>
   1c7f4:	07db      	lsls	r3, r3, #31
   1c7f6:	d524      	bpl.n	1c842 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x112>
   1c7f8:	68b3      	ldr	r3, [r6, #8]
   1c7fa:	f013 0f02 	tst.w	r3, #2
   1c7fe:	d115      	bne.n	1c82c <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xfc>
   1c800:	e01f      	b.n	1c842 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x112>
   1c802:	6823      	ldr	r3, [r4, #0]
   1c804:	9a02      	ldr	r2, [sp, #8]
   1c806:	4293      	cmp	r3, r2
   1c808:	d002      	beq.n	1c810 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xe0>
   1c80a:	2300      	movs	r3, #0
   1c80c:	6023      	str	r3, [r4, #0]
   1c80e:	e016      	b.n	1c83e <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x10e>
   1c810:	b93b      	cbnz	r3, 1c822 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xf2>
   1c812:	9805      	ldr	r0, [sp, #20]
   1c814:	2808      	cmp	r0, #8
   1c816:	d012      	beq.n	1c83e <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x10e>
   1c818:	2908      	cmp	r1, #8
   1c81a:	d010      	beq.n	1c83e <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x10e>
   1c81c:	f000 f84e 	bl	1c8bc <std::type_info::operator==(std::type_info const&) const>
   1c820:	b168      	cbz	r0, 1c83e <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x10e>
   1c822:	7923      	ldrb	r3, [r4, #4]
   1c824:	f89d 200c 	ldrb.w	r2, [sp, #12]
   1c828:	4313      	orrs	r3, r2
   1c82a:	7123      	strb	r3, [r4, #4]
   1c82c:	f109 39ff 	add.w	r9, r9, #4294967295
   1c830:	3d08      	subs	r5, #8
   1c832:	e795      	b.n	1c760 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x30>
   1c834:	7920      	ldrb	r0, [r4, #4]
   1c836:	3000      	adds	r0, #0
   1c838:	bf18      	it	ne
   1c83a:	2001      	movne	r0, #1
   1c83c:	e008      	b.n	1c850 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x120>
   1c83e:	2302      	movs	r3, #2
   1c840:	7123      	strb	r3, [r4, #4]
   1c842:	2001      	movs	r0, #1
   1c844:	e004      	b.n	1c850 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x120>
   1c846:	f023 0302 	bic.w	r3, r3, #2
   1c84a:	f88d 300c 	strb.w	r3, [sp, #12]
   1c84e:	e7c2      	b.n	1c7d6 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xa6>
   1c850:	b007      	add	sp, #28
   1c852:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0001c858 <__cxa_pure_virtual>:
__cxa_pure_virtual():
   1c858:	b508      	push	{r3, lr}
   1c85a:	4903      	ldr	r1, [pc, #12]	; (1c868 <__cxa_pure_virtual+0x10>)
   1c85c:	221b      	movs	r2, #27
   1c85e:	2002      	movs	r0, #2
   1c860:	f003 fdb0 	bl	203c4 <write>
   1c864:	f000 f936 	bl	1cad4 <std::terminate()>
   1c868:	00026e90 	.word	0x00026e90

0001c86c <__cxa_guard_acquire>:
__cxa_guard_acquire():
   1c86c:	b508      	push	{r3, lr}
   1c86e:	6803      	ldr	r3, [r0, #0]
   1c870:	07db      	lsls	r3, r3, #31
   1c872:	d407      	bmi.n	1c884 <__cxa_guard_acquire+0x18>
   1c874:	7843      	ldrb	r3, [r0, #1]
   1c876:	b10b      	cbz	r3, 1c87c <__cxa_guard_acquire+0x10>
   1c878:	f001 f962 	bl	1db40 <abort>
   1c87c:	2301      	movs	r3, #1
   1c87e:	7043      	strb	r3, [r0, #1]
   1c880:	4618      	mov	r0, r3
   1c882:	bd08      	pop	{r3, pc}
   1c884:	2000      	movs	r0, #0
   1c886:	bd08      	pop	{r3, pc}

0001c888 <__cxa_guard_release>:
__cxa_guard_release():
   1c888:	2301      	movs	r3, #1
   1c88a:	6003      	str	r3, [r0, #0]
   1c88c:	4770      	bx	lr
	...

0001c890 <std::type_info::~type_info()>:
_ZNSt9type_infoD1Ev():
   1c890:	4b01      	ldr	r3, [pc, #4]	; (1c898 <std::type_info::~type_info()+0x8>)
   1c892:	6003      	str	r3, [r0, #0]
   1c894:	4770      	bx	lr
   1c896:	bf00      	nop
   1c898:	00026ef0 	.word	0x00026ef0

0001c89c <std::type_info::__is_pointer_p() const>:
_ZNKSt9type_info14__is_pointer_pEv():
   1c89c:	2000      	movs	r0, #0
   1c89e:	4770      	bx	lr

0001c8a0 <std::type_info::__is_function_p() const>:
_ZNKSt9type_info15__is_function_pEv():
   1c8a0:	2000      	movs	r0, #0
   1c8a2:	4770      	bx	lr

0001c8a4 <std::type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const>:
_ZNKSt9type_info11__do_upcastEPKN10__cxxabiv117__class_type_infoEPPv():
   1c8a4:	2000      	movs	r0, #0
   1c8a6:	4770      	bx	lr

0001c8a8 <std::type_info::~type_info()>:
_ZNSt9type_infoD0Ev():
   1c8a8:	b510      	push	{r4, lr}
   1c8aa:	4b03      	ldr	r3, [pc, #12]	; (1c8b8 <std::type_info::~type_info()+0x10>)
   1c8ac:	4604      	mov	r4, r0
   1c8ae:	6003      	str	r3, [r0, #0]
   1c8b0:	f7f3 fce0 	bl	10274 <operator delete(void*)>
   1c8b4:	4620      	mov	r0, r4
   1c8b6:	bd10      	pop	{r4, pc}
   1c8b8:	00026ef0 	.word	0x00026ef0

0001c8bc <std::type_info::operator==(std::type_info const&) const>:
_ZNKSt9type_infoeqERKS_():
   1c8bc:	4281      	cmp	r1, r0
   1c8be:	b508      	push	{r3, lr}
   1c8c0:	d00f      	beq.n	1c8e2 <std::type_info::operator==(std::type_info const&) const+0x26>
   1c8c2:	6840      	ldr	r0, [r0, #4]
   1c8c4:	7803      	ldrb	r3, [r0, #0]
   1c8c6:	2b2a      	cmp	r3, #42	; 0x2a
   1c8c8:	d00d      	beq.n	1c8e6 <std::type_info::operator==(std::type_info const&) const+0x2a>
   1c8ca:	6849      	ldr	r1, [r1, #4]
   1c8cc:	780b      	ldrb	r3, [r1, #0]
   1c8ce:	2b2a      	cmp	r3, #42	; 0x2a
   1c8d0:	bf08      	it	eq
   1c8d2:	3101      	addeq	r1, #1
   1c8d4:	f002 fae6 	bl	1eea4 <strcmp>
   1c8d8:	f1d0 0001 	rsbs	r0, r0, #1
   1c8dc:	bf38      	it	cc
   1c8de:	2000      	movcc	r0, #0
   1c8e0:	bd08      	pop	{r3, pc}
   1c8e2:	2001      	movs	r0, #1
   1c8e4:	bd08      	pop	{r3, pc}
   1c8e6:	2000      	movs	r0, #0
   1c8e8:	bd08      	pop	{r3, pc}

0001c8ea <std::type_info::__do_catch(std::type_info const*, void**, unsigned int) const>:
_ZNKSt9type_info10__do_catchEPKS_PPvj():
   1c8ea:	f7ff bfe7 	b.w	1c8bc <std::type_info::operator==(std::type_info const&) const>

0001c8ee <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const>:
_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv():
   1c8ee:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   1c8f0:	2310      	movs	r3, #16
   1c8f2:	9302      	str	r3, [sp, #8]
   1c8f4:	6803      	ldr	r3, [r0, #0]
   1c8f6:	2400      	movs	r4, #0
   1c8f8:	4615      	mov	r5, r2
   1c8fa:	699e      	ldr	r6, [r3, #24]
   1c8fc:	9400      	str	r4, [sp, #0]
   1c8fe:	466b      	mov	r3, sp
   1c900:	f88d 4004 	strb.w	r4, [sp, #4]
   1c904:	9403      	str	r4, [sp, #12]
   1c906:	6812      	ldr	r2, [r2, #0]
   1c908:	47b0      	blx	r6
   1c90a:	f89d 3004 	ldrb.w	r3, [sp, #4]
   1c90e:	f003 0306 	and.w	r3, r3, #6
   1c912:	2b06      	cmp	r3, #6
   1c914:	bf05      	ittet	eq
   1c916:	9b00      	ldreq	r3, [sp, #0]
   1c918:	2001      	moveq	r0, #1
   1c91a:	4620      	movne	r0, r4
   1c91c:	602b      	streq	r3, [r5, #0]
   1c91e:	b004      	add	sp, #16
   1c920:	bd70      	pop	{r4, r5, r6, pc}

0001c922 <__cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>:
_ZNK10__cxxabiv117__class_type_info20__do_find_public_srcEiPKvPKS0_S2_():
   1c922:	9800      	ldr	r0, [sp, #0]
   1c924:	4290      	cmp	r0, r2
   1c926:	bf14      	ite	ne
   1c928:	2001      	movne	r0, #1
   1c92a:	2006      	moveq	r0, #6
   1c92c:	4770      	bx	lr
	...

0001c930 <__cxxabiv1::__class_type_info::~__class_type_info()>:
_ZN10__cxxabiv117__class_type_infoD1Ev():
   1c930:	b510      	push	{r4, lr}
   1c932:	4b03      	ldr	r3, [pc, #12]	; (1c940 <__cxxabiv1::__class_type_info::~__class_type_info()+0x10>)
   1c934:	4604      	mov	r4, r0
   1c936:	6003      	str	r3, [r0, #0]
   1c938:	f7ff ffaa 	bl	1c890 <std::type_info::~type_info()>
   1c93c:	4620      	mov	r0, r4
   1c93e:	bd10      	pop	{r4, pc}
   1c940:	00026f10 	.word	0x00026f10

0001c944 <__cxxabiv1::__class_type_info::~__class_type_info()>:
_ZN10__cxxabiv117__class_type_infoD0Ev():
   1c944:	b510      	push	{r4, lr}
   1c946:	4604      	mov	r4, r0
   1c948:	f7ff fff2 	bl	1c930 <__cxxabiv1::__class_type_info::~__class_type_info()>
   1c94c:	4620      	mov	r0, r4
   1c94e:	f7f3 fc91 	bl	10274 <operator delete(void*)>
   1c952:	4620      	mov	r0, r4
   1c954:	bd10      	pop	{r4, pc}

0001c956 <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const>:
_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE():
   1c956:	b538      	push	{r3, r4, r5, lr}
   1c958:	4615      	mov	r5, r2
   1c95a:	461c      	mov	r4, r3
   1c95c:	f7ff ffae 	bl	1c8bc <std::type_info::operator==(std::type_info const&) const>
   1c960:	b128      	cbz	r0, 1c96e <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x18>
   1c962:	2308      	movs	r3, #8
   1c964:	60e3      	str	r3, [r4, #12]
   1c966:	2306      	movs	r3, #6
   1c968:	6025      	str	r5, [r4, #0]
   1c96a:	7123      	strb	r3, [r4, #4]
   1c96c:	2001      	movs	r0, #1
   1c96e:	bd38      	pop	{r3, r4, r5, pc}

0001c970 <__cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const>:
_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj():
   1c970:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1c972:	4605      	mov	r5, r0
   1c974:	460c      	mov	r4, r1
   1c976:	4616      	mov	r6, r2
   1c978:	461f      	mov	r7, r3
   1c97a:	f7ff ff9f 	bl	1c8bc <std::type_info::operator==(std::type_info const&) const>
   1c97e:	b940      	cbnz	r0, 1c992 <__cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const+0x22>
   1c980:	2f03      	cmp	r7, #3
   1c982:	d807      	bhi.n	1c994 <__cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const+0x24>
   1c984:	6823      	ldr	r3, [r4, #0]
   1c986:	4620      	mov	r0, r4
   1c988:	695b      	ldr	r3, [r3, #20]
   1c98a:	4629      	mov	r1, r5
   1c98c:	4632      	mov	r2, r6
   1c98e:	4798      	blx	r3
   1c990:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1c992:	2001      	movs	r0, #1
   1c994:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0001c996 <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const>:
_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE():
   1c996:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1c99a:	9e06      	ldr	r6, [sp, #24]
   1c99c:	4615      	mov	r5, r2
   1c99e:	9a08      	ldr	r2, [sp, #32]
   1c9a0:	4607      	mov	r7, r0
   1c9a2:	4296      	cmp	r6, r2
   1c9a4:	4698      	mov	r8, r3
   1c9a6:	9c09      	ldr	r4, [sp, #36]	; 0x24
   1c9a8:	d103      	bne.n	1c9b2 <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1c>
   1c9aa:	9907      	ldr	r1, [sp, #28]
   1c9ac:	f7ff ff86 	bl	1c8bc <std::type_info::operator==(std::type_info const&) const>
   1c9b0:	b948      	cbnz	r0, 1c9c6 <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x30>
   1c9b2:	4638      	mov	r0, r7
   1c9b4:	4641      	mov	r1, r8
   1c9b6:	f7ff ff81 	bl	1c8bc <std::type_info::operator==(std::type_info const&) const>
   1c9ba:	b128      	cbz	r0, 1c9c8 <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x32>
   1c9bc:	2301      	movs	r3, #1
   1c9be:	6026      	str	r6, [r4, #0]
   1c9c0:	7125      	strb	r5, [r4, #4]
   1c9c2:	71a3      	strb	r3, [r4, #6]
   1c9c4:	e000      	b.n	1c9c8 <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x32>
   1c9c6:	7165      	strb	r5, [r4, #5]
   1c9c8:	2000      	movs	r0, #0
   1c9ca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

0001c9d0 <__cxxabiv1::__si_class_type_info::~__si_class_type_info()>:
_ZN10__cxxabiv120__si_class_type_infoD2Ev():
   1c9d0:	b510      	push	{r4, lr}
   1c9d2:	4b03      	ldr	r3, [pc, #12]	; (1c9e0 <__cxxabiv1::__si_class_type_info::~__si_class_type_info()+0x10>)
   1c9d4:	4604      	mov	r4, r0
   1c9d6:	6003      	str	r3, [r0, #0]
   1c9d8:	f7ff ffaa 	bl	1c930 <__cxxabiv1::__class_type_info::~__class_type_info()>
   1c9dc:	4620      	mov	r0, r4
   1c9de:	bd10      	pop	{r4, pc}
   1c9e0:	00026f70 	.word	0x00026f70

0001c9e4 <__cxxabiv1::__si_class_type_info::~__si_class_type_info()>:
_ZN10__cxxabiv120__si_class_type_infoD0Ev():
   1c9e4:	b510      	push	{r4, lr}
   1c9e6:	4604      	mov	r4, r0
   1c9e8:	f7ff fff2 	bl	1c9d0 <__cxxabiv1::__si_class_type_info::~__si_class_type_info()>
   1c9ec:	4620      	mov	r0, r4
   1c9ee:	f7f3 fc41 	bl	10274 <operator delete(void*)>
   1c9f2:	4620      	mov	r0, r4
   1c9f4:	bd10      	pop	{r4, pc}

0001c9f6 <__cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>:
_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_():
   1c9f6:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
   1c9fa:	9c08      	ldr	r4, [sp, #32]
   1c9fc:	4607      	mov	r7, r0
   1c9fe:	4294      	cmp	r4, r2
   1ca00:	4688      	mov	r8, r1
   1ca02:	4616      	mov	r6, r2
   1ca04:	461d      	mov	r5, r3
   1ca06:	d105      	bne.n	1ca14 <__cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x1e>
   1ca08:	4619      	mov	r1, r3
   1ca0a:	f7ff ff57 	bl	1c8bc <std::type_info::operator==(std::type_info const&) const>
   1ca0e:	b108      	cbz	r0, 1ca14 <__cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x1e>
   1ca10:	2006      	movs	r0, #6
   1ca12:	e007      	b.n	1ca24 <__cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x2e>
   1ca14:	68b8      	ldr	r0, [r7, #8]
   1ca16:	4641      	mov	r1, r8
   1ca18:	6803      	ldr	r3, [r0, #0]
   1ca1a:	9400      	str	r4, [sp, #0]
   1ca1c:	6a1c      	ldr	r4, [r3, #32]
   1ca1e:	4632      	mov	r2, r6
   1ca20:	462b      	mov	r3, r5
   1ca22:	47a0      	blx	r4
   1ca24:	b002      	add	sp, #8
   1ca26:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0001ca2a <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const>:
_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE():
   1ca2a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ca2e:	460e      	mov	r6, r1
   1ca30:	b085      	sub	sp, #20
   1ca32:	4619      	mov	r1, r3
   1ca34:	4683      	mov	fp, r0
   1ca36:	4690      	mov	r8, r2
   1ca38:	4699      	mov	r9, r3
   1ca3a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
   1ca3c:	9f10      	ldr	r7, [sp, #64]	; 0x40
   1ca3e:	9c11      	ldr	r4, [sp, #68]	; 0x44
   1ca40:	f7ff ff3c 	bl	1c8bc <std::type_info::operator==(std::type_info const&) const>
   1ca44:	4682      	mov	sl, r0
   1ca46:	b180      	cbz	r0, 1ca6a <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x40>
   1ca48:	2e00      	cmp	r6, #0
   1ca4a:	6025      	str	r5, [r4, #0]
   1ca4c:	f884 8004 	strb.w	r8, [r4, #4]
   1ca50:	db06      	blt.n	1ca60 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x36>
   1ca52:	4435      	add	r5, r6
   1ca54:	42af      	cmp	r7, r5
   1ca56:	bf14      	ite	ne
   1ca58:	2701      	movne	r7, #1
   1ca5a:	2706      	moveq	r7, #6
   1ca5c:	71a7      	strb	r7, [r4, #6]
   1ca5e:	e00c      	b.n	1ca7a <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x50>
   1ca60:	3602      	adds	r6, #2
   1ca62:	d10a      	bne.n	1ca7a <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x50>
   1ca64:	2301      	movs	r3, #1
   1ca66:	71a3      	strb	r3, [r4, #6]
   1ca68:	e007      	b.n	1ca7a <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x50>
   1ca6a:	42bd      	cmp	r5, r7
   1ca6c:	d107      	bne.n	1ca7e <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x54>
   1ca6e:	4658      	mov	r0, fp
   1ca70:	990f      	ldr	r1, [sp, #60]	; 0x3c
   1ca72:	f7ff ff23 	bl	1c8bc <std::type_info::operator==(std::type_info const&) const>
   1ca76:	b980      	cbnz	r0, 1ca9a <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x70>
   1ca78:	e001      	b.n	1ca7e <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x54>
   1ca7a:	2000      	movs	r0, #0
   1ca7c:	e010      	b.n	1caa0 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x76>
   1ca7e:	f8db 0008 	ldr.w	r0, [fp, #8]
   1ca82:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   1ca84:	6803      	ldr	r3, [r0, #0]
   1ca86:	9201      	str	r2, [sp, #4]
   1ca88:	9500      	str	r5, [sp, #0]
   1ca8a:	9702      	str	r7, [sp, #8]
   1ca8c:	9403      	str	r4, [sp, #12]
   1ca8e:	69dc      	ldr	r4, [r3, #28]
   1ca90:	4631      	mov	r1, r6
   1ca92:	4642      	mov	r2, r8
   1ca94:	464b      	mov	r3, r9
   1ca96:	47a0      	blx	r4
   1ca98:	e002      	b.n	1caa0 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x76>
   1ca9a:	f884 8005 	strb.w	r8, [r4, #5]
   1ca9e:	4650      	mov	r0, sl
   1caa0:	b005      	add	sp, #20
   1caa2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001caa6 <__cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const>:
_ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE():
   1caa6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1caa8:	4604      	mov	r4, r0
   1caaa:	460f      	mov	r7, r1
   1caac:	4616      	mov	r6, r2
   1caae:	461d      	mov	r5, r3
   1cab0:	f7ff ff51 	bl	1c956 <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const>
   1cab4:	b938      	cbnz	r0, 1cac6 <__cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x20>
   1cab6:	68a0      	ldr	r0, [r4, #8]
   1cab8:	4639      	mov	r1, r7
   1caba:	6804      	ldr	r4, [r0, #0]
   1cabc:	4632      	mov	r2, r6
   1cabe:	69a4      	ldr	r4, [r4, #24]
   1cac0:	462b      	mov	r3, r5
   1cac2:	47a0      	blx	r4
   1cac4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1cac6:	2001      	movs	r0, #1
   1cac8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0001caca <__cxxabiv1::__terminate(void (*)())>:
_ZN10__cxxabiv111__terminateEPFvvE():
   1caca:	b508      	push	{r3, lr}
   1cacc:	4780      	blx	r0
   1cace:	f001 f837 	bl	1db40 <abort>
	...

0001cad4 <std::terminate()>:
_ZSt9terminatev():
   1cad4:	b508      	push	{r3, lr}
   1cad6:	4b02      	ldr	r3, [pc, #8]	; (1cae0 <std::terminate()+0xc>)
   1cad8:	6818      	ldr	r0, [r3, #0]
   1cada:	f7ff fff6 	bl	1caca <__cxxabiv1::__terminate(void (*)())>
   1cade:	bf00      	nop
   1cae0:	2007c0e8 	.word	0x2007c0e8

0001cae4 <__aeabi_llsl>:
__ashldi3():
   1cae4:	4091      	lsls	r1, r2
   1cae6:	1c03      	adds	r3, r0, #0
   1cae8:	4090      	lsls	r0, r2
   1caea:	469c      	mov	ip, r3
   1caec:	3a20      	subs	r2, #32
   1caee:	4093      	lsls	r3, r2
   1caf0:	4319      	orrs	r1, r3
   1caf2:	4252      	negs	r2, r2
   1caf4:	4663      	mov	r3, ip
   1caf6:	40d3      	lsrs	r3, r2
   1caf8:	4319      	orrs	r1, r3
   1cafa:	4770      	bx	lr

0001cafc <__aeabi_drsub>:
$t():
   1cafc:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
   1cb00:	e002      	b.n	1cb08 <__adddf3>
   1cb02:	bf00      	nop

0001cb04 <__aeabi_dsub>:
__aeabi_dsub():
   1cb04:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0001cb08 <__adddf3>:
   1cb08:	b530      	push	{r4, r5, lr}
   1cb0a:	ea4f 0441 	mov.w	r4, r1, lsl #1
   1cb0e:	ea4f 0543 	mov.w	r5, r3, lsl #1
   1cb12:	ea94 0f05 	teq	r4, r5
   1cb16:	bf08      	it	eq
   1cb18:	ea90 0f02 	teqeq	r0, r2
   1cb1c:	bf1f      	itttt	ne
   1cb1e:	ea54 0c00 	orrsne.w	ip, r4, r0
   1cb22:	ea55 0c02 	orrsne.w	ip, r5, r2
   1cb26:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
   1cb2a:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   1cb2e:	f000 80e2 	beq.w	1ccf6 <__adddf3+0x1ee>
   1cb32:	ea4f 5454 	mov.w	r4, r4, lsr #21
   1cb36:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
   1cb3a:	bfb8      	it	lt
   1cb3c:	426d      	neglt	r5, r5
   1cb3e:	dd0c      	ble.n	1cb5a <__adddf3+0x52>
   1cb40:	442c      	add	r4, r5
   1cb42:	ea80 0202 	eor.w	r2, r0, r2
   1cb46:	ea81 0303 	eor.w	r3, r1, r3
   1cb4a:	ea82 0000 	eor.w	r0, r2, r0
   1cb4e:	ea83 0101 	eor.w	r1, r3, r1
   1cb52:	ea80 0202 	eor.w	r2, r0, r2
   1cb56:	ea81 0303 	eor.w	r3, r1, r3
   1cb5a:	2d36      	cmp	r5, #54	; 0x36
   1cb5c:	bf88      	it	hi
   1cb5e:	bd30      	pophi	{r4, r5, pc}
   1cb60:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   1cb64:	ea4f 3101 	mov.w	r1, r1, lsl #12
   1cb68:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
   1cb6c:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
   1cb70:	d002      	beq.n	1cb78 <__adddf3+0x70>
   1cb72:	4240      	negs	r0, r0
   1cb74:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   1cb78:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
   1cb7c:	ea4f 3303 	mov.w	r3, r3, lsl #12
   1cb80:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
   1cb84:	d002      	beq.n	1cb8c <__adddf3+0x84>
   1cb86:	4252      	negs	r2, r2
   1cb88:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
   1cb8c:	ea94 0f05 	teq	r4, r5
   1cb90:	f000 80a7 	beq.w	1cce2 <__adddf3+0x1da>
   1cb94:	f1a4 0401 	sub.w	r4, r4, #1
   1cb98:	f1d5 0e20 	rsbs	lr, r5, #32
   1cb9c:	db0d      	blt.n	1cbba <__adddf3+0xb2>
   1cb9e:	fa02 fc0e 	lsl.w	ip, r2, lr
   1cba2:	fa22 f205 	lsr.w	r2, r2, r5
   1cba6:	1880      	adds	r0, r0, r2
   1cba8:	f141 0100 	adc.w	r1, r1, #0
   1cbac:	fa03 f20e 	lsl.w	r2, r3, lr
   1cbb0:	1880      	adds	r0, r0, r2
   1cbb2:	fa43 f305 	asr.w	r3, r3, r5
   1cbb6:	4159      	adcs	r1, r3
   1cbb8:	e00e      	b.n	1cbd8 <__adddf3+0xd0>
   1cbba:	f1a5 0520 	sub.w	r5, r5, #32
   1cbbe:	f10e 0e20 	add.w	lr, lr, #32
   1cbc2:	2a01      	cmp	r2, #1
   1cbc4:	fa03 fc0e 	lsl.w	ip, r3, lr
   1cbc8:	bf28      	it	cs
   1cbca:	f04c 0c02 	orrcs.w	ip, ip, #2
   1cbce:	fa43 f305 	asr.w	r3, r3, r5
   1cbd2:	18c0      	adds	r0, r0, r3
   1cbd4:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
   1cbd8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   1cbdc:	d507      	bpl.n	1cbee <__adddf3+0xe6>
   1cbde:	f04f 0e00 	mov.w	lr, #0
   1cbe2:	f1dc 0c00 	rsbs	ip, ip, #0
   1cbe6:	eb7e 0000 	sbcs.w	r0, lr, r0
   1cbea:	eb6e 0101 	sbc.w	r1, lr, r1
   1cbee:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
   1cbf2:	d31b      	bcc.n	1cc2c <__adddf3+0x124>
   1cbf4:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
   1cbf8:	d30c      	bcc.n	1cc14 <__adddf3+0x10c>
   1cbfa:	0849      	lsrs	r1, r1, #1
   1cbfc:	ea5f 0030 	movs.w	r0, r0, rrx
   1cc00:	ea4f 0c3c 	mov.w	ip, ip, rrx
   1cc04:	f104 0401 	add.w	r4, r4, #1
   1cc08:	ea4f 5244 	mov.w	r2, r4, lsl #21
   1cc0c:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
   1cc10:	f080 809a 	bcs.w	1cd48 <__adddf3+0x240>
   1cc14:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
   1cc18:	bf08      	it	eq
   1cc1a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   1cc1e:	f150 0000 	adcs.w	r0, r0, #0
   1cc22:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   1cc26:	ea41 0105 	orr.w	r1, r1, r5
   1cc2a:	bd30      	pop	{r4, r5, pc}
   1cc2c:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
   1cc30:	4140      	adcs	r0, r0
   1cc32:	eb41 0101 	adc.w	r1, r1, r1
   1cc36:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   1cc3a:	f1a4 0401 	sub.w	r4, r4, #1
   1cc3e:	d1e9      	bne.n	1cc14 <__adddf3+0x10c>
   1cc40:	f091 0f00 	teq	r1, #0
   1cc44:	bf04      	itt	eq
   1cc46:	4601      	moveq	r1, r0
   1cc48:	2000      	moveq	r0, #0
   1cc4a:	fab1 f381 	clz	r3, r1
   1cc4e:	bf08      	it	eq
   1cc50:	3320      	addeq	r3, #32
   1cc52:	f1a3 030b 	sub.w	r3, r3, #11
   1cc56:	f1b3 0220 	subs.w	r2, r3, #32
   1cc5a:	da0c      	bge.n	1cc76 <__adddf3+0x16e>
   1cc5c:	320c      	adds	r2, #12
   1cc5e:	dd08      	ble.n	1cc72 <__adddf3+0x16a>
   1cc60:	f102 0c14 	add.w	ip, r2, #20
   1cc64:	f1c2 020c 	rsb	r2, r2, #12
   1cc68:	fa01 f00c 	lsl.w	r0, r1, ip
   1cc6c:	fa21 f102 	lsr.w	r1, r1, r2
   1cc70:	e00c      	b.n	1cc8c <__adddf3+0x184>
   1cc72:	f102 0214 	add.w	r2, r2, #20
   1cc76:	bfd8      	it	le
   1cc78:	f1c2 0c20 	rsble	ip, r2, #32
   1cc7c:	fa01 f102 	lsl.w	r1, r1, r2
   1cc80:	fa20 fc0c 	lsr.w	ip, r0, ip
   1cc84:	bfdc      	itt	le
   1cc86:	ea41 010c 	orrle.w	r1, r1, ip
   1cc8a:	4090      	lslle	r0, r2
   1cc8c:	1ae4      	subs	r4, r4, r3
   1cc8e:	bfa2      	ittt	ge
   1cc90:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
   1cc94:	4329      	orrge	r1, r5
   1cc96:	bd30      	popge	{r4, r5, pc}
   1cc98:	ea6f 0404 	mvn.w	r4, r4
   1cc9c:	3c1f      	subs	r4, #31
   1cc9e:	da1c      	bge.n	1ccda <__adddf3+0x1d2>
   1cca0:	340c      	adds	r4, #12
   1cca2:	dc0e      	bgt.n	1ccc2 <__adddf3+0x1ba>
   1cca4:	f104 0414 	add.w	r4, r4, #20
   1cca8:	f1c4 0220 	rsb	r2, r4, #32
   1ccac:	fa20 f004 	lsr.w	r0, r0, r4
   1ccb0:	fa01 f302 	lsl.w	r3, r1, r2
   1ccb4:	ea40 0003 	orr.w	r0, r0, r3
   1ccb8:	fa21 f304 	lsr.w	r3, r1, r4
   1ccbc:	ea45 0103 	orr.w	r1, r5, r3
   1ccc0:	bd30      	pop	{r4, r5, pc}
   1ccc2:	f1c4 040c 	rsb	r4, r4, #12
   1ccc6:	f1c4 0220 	rsb	r2, r4, #32
   1ccca:	fa20 f002 	lsr.w	r0, r0, r2
   1ccce:	fa01 f304 	lsl.w	r3, r1, r4
   1ccd2:	ea40 0003 	orr.w	r0, r0, r3
   1ccd6:	4629      	mov	r1, r5
   1ccd8:	bd30      	pop	{r4, r5, pc}
   1ccda:	fa21 f004 	lsr.w	r0, r1, r4
   1ccde:	4629      	mov	r1, r5
   1cce0:	bd30      	pop	{r4, r5, pc}
   1cce2:	f094 0f00 	teq	r4, #0
   1cce6:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
   1ccea:	bf06      	itte	eq
   1ccec:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
   1ccf0:	3401      	addeq	r4, #1
   1ccf2:	3d01      	subne	r5, #1
   1ccf4:	e74e      	b.n	1cb94 <__adddf3+0x8c>
   1ccf6:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   1ccfa:	bf18      	it	ne
   1ccfc:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   1cd00:	d029      	beq.n	1cd56 <__adddf3+0x24e>
   1cd02:	ea94 0f05 	teq	r4, r5
   1cd06:	bf08      	it	eq
   1cd08:	ea90 0f02 	teqeq	r0, r2
   1cd0c:	d005      	beq.n	1cd1a <__adddf3+0x212>
   1cd0e:	ea54 0c00 	orrs.w	ip, r4, r0
   1cd12:	bf04      	itt	eq
   1cd14:	4619      	moveq	r1, r3
   1cd16:	4610      	moveq	r0, r2
   1cd18:	bd30      	pop	{r4, r5, pc}
   1cd1a:	ea91 0f03 	teq	r1, r3
   1cd1e:	bf1e      	ittt	ne
   1cd20:	2100      	movne	r1, #0
   1cd22:	2000      	movne	r0, #0
   1cd24:	bd30      	popne	{r4, r5, pc}
   1cd26:	ea5f 5c54 	movs.w	ip, r4, lsr #21
   1cd2a:	d105      	bne.n	1cd38 <__adddf3+0x230>
   1cd2c:	0040      	lsls	r0, r0, #1
   1cd2e:	4149      	adcs	r1, r1
   1cd30:	bf28      	it	cs
   1cd32:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
   1cd36:	bd30      	pop	{r4, r5, pc}
   1cd38:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
   1cd3c:	bf3c      	itt	cc
   1cd3e:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
   1cd42:	bd30      	popcc	{r4, r5, pc}
   1cd44:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   1cd48:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
   1cd4c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   1cd50:	f04f 0000 	mov.w	r0, #0
   1cd54:	bd30      	pop	{r4, r5, pc}
   1cd56:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   1cd5a:	bf1a      	itte	ne
   1cd5c:	4619      	movne	r1, r3
   1cd5e:	4610      	movne	r0, r2
   1cd60:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
   1cd64:	bf1c      	itt	ne
   1cd66:	460b      	movne	r3, r1
   1cd68:	4602      	movne	r2, r0
   1cd6a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   1cd6e:	bf06      	itte	eq
   1cd70:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
   1cd74:	ea91 0f03 	teqeq	r1, r3
   1cd78:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
   1cd7c:	bd30      	pop	{r4, r5, pc}
__adddf3():
   1cd7e:	bf00      	nop

0001cd80 <__aeabi_ui2d>:
__aeabi_ui2d():
   1cd80:	f090 0f00 	teq	r0, #0
   1cd84:	bf04      	itt	eq
   1cd86:	2100      	moveq	r1, #0
   1cd88:	4770      	bxeq	lr
   1cd8a:	b530      	push	{r4, r5, lr}
   1cd8c:	f44f 6480 	mov.w	r4, #1024	; 0x400
   1cd90:	f104 0432 	add.w	r4, r4, #50	; 0x32
   1cd94:	f04f 0500 	mov.w	r5, #0
   1cd98:	f04f 0100 	mov.w	r1, #0
   1cd9c:	e750      	b.n	1cc40 <__adddf3+0x138>
   1cd9e:	bf00      	nop

0001cda0 <__aeabi_i2d>:
__floatsidf():
   1cda0:	f090 0f00 	teq	r0, #0
   1cda4:	bf04      	itt	eq
   1cda6:	2100      	moveq	r1, #0
   1cda8:	4770      	bxeq	lr
   1cdaa:	b530      	push	{r4, r5, lr}
   1cdac:	f44f 6480 	mov.w	r4, #1024	; 0x400
   1cdb0:	f104 0432 	add.w	r4, r4, #50	; 0x32
   1cdb4:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
   1cdb8:	bf48      	it	mi
   1cdba:	4240      	negmi	r0, r0
   1cdbc:	f04f 0100 	mov.w	r1, #0
   1cdc0:	e73e      	b.n	1cc40 <__adddf3+0x138>
   1cdc2:	bf00      	nop

0001cdc4 <__aeabi_f2d>:
__extendsfdf2():
   1cdc4:	0042      	lsls	r2, r0, #1
   1cdc6:	ea4f 01e2 	mov.w	r1, r2, asr #3
   1cdca:	ea4f 0131 	mov.w	r1, r1, rrx
   1cdce:	ea4f 7002 	mov.w	r0, r2, lsl #28
   1cdd2:	bf1f      	itttt	ne
   1cdd4:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
   1cdd8:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   1cddc:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
   1cde0:	4770      	bxne	lr
   1cde2:	f092 0f00 	teq	r2, #0
   1cde6:	bf14      	ite	ne
   1cde8:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   1cdec:	4770      	bxeq	lr
   1cdee:	b530      	push	{r4, r5, lr}
   1cdf0:	f44f 7460 	mov.w	r4, #896	; 0x380
   1cdf4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   1cdf8:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   1cdfc:	e720      	b.n	1cc40 <__adddf3+0x138>
   1cdfe:	bf00      	nop

0001ce00 <__aeabi_ul2d>:
__aeabi_ul2d():
   1ce00:	ea50 0201 	orrs.w	r2, r0, r1
   1ce04:	bf08      	it	eq
   1ce06:	4770      	bxeq	lr
   1ce08:	b530      	push	{r4, r5, lr}
   1ce0a:	f04f 0500 	mov.w	r5, #0
   1ce0e:	e00a      	b.n	1ce26 <__aeabi_l2d+0x16>

0001ce10 <__aeabi_l2d>:
   1ce10:	ea50 0201 	orrs.w	r2, r0, r1
   1ce14:	bf08      	it	eq
   1ce16:	4770      	bxeq	lr
   1ce18:	b530      	push	{r4, r5, lr}
   1ce1a:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
   1ce1e:	d502      	bpl.n	1ce26 <__aeabi_l2d+0x16>
   1ce20:	4240      	negs	r0, r0
   1ce22:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   1ce26:	f44f 6480 	mov.w	r4, #1024	; 0x400
   1ce2a:	f104 0432 	add.w	r4, r4, #50	; 0x32
   1ce2e:	ea5f 5c91 	movs.w	ip, r1, lsr #22
   1ce32:	f43f aedc 	beq.w	1cbee <__adddf3+0xe6>
   1ce36:	f04f 0203 	mov.w	r2, #3
   1ce3a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   1ce3e:	bf18      	it	ne
   1ce40:	3203      	addne	r2, #3
   1ce42:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   1ce46:	bf18      	it	ne
   1ce48:	3203      	addne	r2, #3
   1ce4a:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
   1ce4e:	f1c2 0320 	rsb	r3, r2, #32
   1ce52:	fa00 fc03 	lsl.w	ip, r0, r3
   1ce56:	fa20 f002 	lsr.w	r0, r0, r2
   1ce5a:	fa01 fe03 	lsl.w	lr, r1, r3
   1ce5e:	ea40 000e 	orr.w	r0, r0, lr
   1ce62:	fa21 f102 	lsr.w	r1, r1, r2
   1ce66:	4414      	add	r4, r2
   1ce68:	e6c1      	b.n	1cbee <__adddf3+0xe6>
__floatdidf():
   1ce6a:	bf00      	nop

0001ce6c <__aeabi_d2uiz>:
__fixunsdfsi():
   1ce6c:	004a      	lsls	r2, r1, #1
   1ce6e:	d211      	bcs.n	1ce94 <__aeabi_d2uiz+0x28>
   1ce70:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
   1ce74:	d211      	bcs.n	1ce9a <__aeabi_d2uiz+0x2e>
   1ce76:	d50d      	bpl.n	1ce94 <__aeabi_d2uiz+0x28>
   1ce78:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
   1ce7c:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
   1ce80:	d40e      	bmi.n	1cea0 <__aeabi_d2uiz+0x34>
   1ce82:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   1ce86:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   1ce8a:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
   1ce8e:	fa23 f002 	lsr.w	r0, r3, r2
   1ce92:	4770      	bx	lr
   1ce94:	f04f 0000 	mov.w	r0, #0
   1ce98:	4770      	bx	lr
   1ce9a:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
   1ce9e:	d102      	bne.n	1cea6 <__aeabi_d2uiz+0x3a>
   1cea0:	f04f 30ff 	mov.w	r0, #4294967295
   1cea4:	4770      	bx	lr
   1cea6:	f04f 0000 	mov.w	r0, #0
   1ceaa:	4770      	bx	lr

0001ceac <__aeabi_d2f>:
__aeabi_d2f():
   1ceac:	ea4f 0241 	mov.w	r2, r1, lsl #1
   1ceb0:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
   1ceb4:	bf24      	itt	cs
   1ceb6:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
   1ceba:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
   1cebe:	d90d      	bls.n	1cedc <__aeabi_d2f+0x30>
   1cec0:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
   1cec4:	ea4f 02c0 	mov.w	r2, r0, lsl #3
   1cec8:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
   1cecc:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
   1ced0:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
   1ced4:	bf08      	it	eq
   1ced6:	f020 0001 	biceq.w	r0, r0, #1
   1ceda:	4770      	bx	lr
   1cedc:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
   1cee0:	d121      	bne.n	1cf26 <__aeabi_d2f+0x7a>
   1cee2:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
   1cee6:	bfbc      	itt	lt
   1cee8:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
   1ceec:	4770      	bxlt	lr
   1ceee:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   1cef2:	ea4f 5252 	mov.w	r2, r2, lsr #21
   1cef6:	f1c2 0218 	rsb	r2, r2, #24
   1cefa:	f1c2 0c20 	rsb	ip, r2, #32
   1cefe:	fa10 f30c 	lsls.w	r3, r0, ip
   1cf02:	fa20 f002 	lsr.w	r0, r0, r2
   1cf06:	bf18      	it	ne
   1cf08:	f040 0001 	orrne.w	r0, r0, #1
   1cf0c:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   1cf10:	ea4f 23d3 	mov.w	r3, r3, lsr #11
   1cf14:	fa03 fc0c 	lsl.w	ip, r3, ip
   1cf18:	ea40 000c 	orr.w	r0, r0, ip
   1cf1c:	fa23 f302 	lsr.w	r3, r3, r2
   1cf20:	ea4f 0343 	mov.w	r3, r3, lsl #1
   1cf24:	e7cc      	b.n	1cec0 <__aeabi_d2f+0x14>
   1cf26:	ea7f 5362 	mvns.w	r3, r2, asr #21
   1cf2a:	d107      	bne.n	1cf3c <__aeabi_d2f+0x90>
   1cf2c:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
   1cf30:	bf1e      	ittt	ne
   1cf32:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
   1cf36:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
   1cf3a:	4770      	bxne	lr
   1cf3c:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
   1cf40:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
   1cf44:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   1cf48:	4770      	bx	lr
   1cf4a:	bf00      	nop

0001cf4c <__aeabi_frsub>:
__aeabi_frsub():
   1cf4c:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
   1cf50:	e002      	b.n	1cf58 <__addsf3>
   1cf52:	bf00      	nop

0001cf54 <__aeabi_fsub>:
   1cf54:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

0001cf58 <__addsf3>:
   1cf58:	0042      	lsls	r2, r0, #1
   1cf5a:	bf1f      	itttt	ne
   1cf5c:	ea5f 0341 	movsne.w	r3, r1, lsl #1
   1cf60:	ea92 0f03 	teqne	r2, r3
   1cf64:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
   1cf68:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
   1cf6c:	d06a      	beq.n	1d044 <__addsf3+0xec>
   1cf6e:	ea4f 6212 	mov.w	r2, r2, lsr #24
   1cf72:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
   1cf76:	bfc1      	itttt	gt
   1cf78:	18d2      	addgt	r2, r2, r3
   1cf7a:	4041      	eorgt	r1, r0
   1cf7c:	4048      	eorgt	r0, r1
   1cf7e:	4041      	eorgt	r1, r0
   1cf80:	bfb8      	it	lt
   1cf82:	425b      	neglt	r3, r3
   1cf84:	2b19      	cmp	r3, #25
   1cf86:	bf88      	it	hi
   1cf88:	4770      	bxhi	lr
   1cf8a:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
   1cf8e:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   1cf92:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
   1cf96:	bf18      	it	ne
   1cf98:	4240      	negne	r0, r0
   1cf9a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   1cf9e:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
   1cfa2:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
   1cfa6:	bf18      	it	ne
   1cfa8:	4249      	negne	r1, r1
   1cfaa:	ea92 0f03 	teq	r2, r3
   1cfae:	d03f      	beq.n	1d030 <__addsf3+0xd8>
   1cfb0:	f1a2 0201 	sub.w	r2, r2, #1
   1cfb4:	fa41 fc03 	asr.w	ip, r1, r3
   1cfb8:	eb10 000c 	adds.w	r0, r0, ip
   1cfbc:	f1c3 0320 	rsb	r3, r3, #32
   1cfc0:	fa01 f103 	lsl.w	r1, r1, r3
   1cfc4:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
   1cfc8:	d502      	bpl.n	1cfd0 <__addsf3+0x78>
   1cfca:	4249      	negs	r1, r1
   1cfcc:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
   1cfd0:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
   1cfd4:	d313      	bcc.n	1cffe <__addsf3+0xa6>
   1cfd6:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
   1cfda:	d306      	bcc.n	1cfea <__addsf3+0x92>
   1cfdc:	0840      	lsrs	r0, r0, #1
   1cfde:	ea4f 0131 	mov.w	r1, r1, rrx
   1cfe2:	f102 0201 	add.w	r2, r2, #1
   1cfe6:	2afe      	cmp	r2, #254	; 0xfe
   1cfe8:	d251      	bcs.n	1d08e <__addsf3+0x136>
   1cfea:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
   1cfee:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
   1cff2:	bf08      	it	eq
   1cff4:	f020 0001 	biceq.w	r0, r0, #1
   1cff8:	ea40 0003 	orr.w	r0, r0, r3
   1cffc:	4770      	bx	lr
   1cffe:	0049      	lsls	r1, r1, #1
   1d000:	eb40 0000 	adc.w	r0, r0, r0
   1d004:	f410 0f00 	tst.w	r0, #8388608	; 0x800000
   1d008:	f1a2 0201 	sub.w	r2, r2, #1
   1d00c:	d1ed      	bne.n	1cfea <__addsf3+0x92>
   1d00e:	fab0 fc80 	clz	ip, r0
   1d012:	f1ac 0c08 	sub.w	ip, ip, #8
   1d016:	ebb2 020c 	subs.w	r2, r2, ip
   1d01a:	fa00 f00c 	lsl.w	r0, r0, ip
   1d01e:	bfaa      	itet	ge
   1d020:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
   1d024:	4252      	neglt	r2, r2
   1d026:	4318      	orrge	r0, r3
   1d028:	bfbc      	itt	lt
   1d02a:	40d0      	lsrlt	r0, r2
   1d02c:	4318      	orrlt	r0, r3
   1d02e:	4770      	bx	lr
   1d030:	f092 0f00 	teq	r2, #0
   1d034:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
   1d038:	bf06      	itte	eq
   1d03a:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
   1d03e:	3201      	addeq	r2, #1
   1d040:	3b01      	subne	r3, #1
   1d042:	e7b5      	b.n	1cfb0 <__addsf3+0x58>
   1d044:	ea4f 0341 	mov.w	r3, r1, lsl #1
   1d048:	ea7f 6c22 	mvns.w	ip, r2, asr #24
   1d04c:	bf18      	it	ne
   1d04e:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
   1d052:	d021      	beq.n	1d098 <__addsf3+0x140>
   1d054:	ea92 0f03 	teq	r2, r3
   1d058:	d004      	beq.n	1d064 <__addsf3+0x10c>
   1d05a:	f092 0f00 	teq	r2, #0
   1d05e:	bf08      	it	eq
   1d060:	4608      	moveq	r0, r1
   1d062:	4770      	bx	lr
   1d064:	ea90 0f01 	teq	r0, r1
   1d068:	bf1c      	itt	ne
   1d06a:	2000      	movne	r0, #0
   1d06c:	4770      	bxne	lr
   1d06e:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
   1d072:	d104      	bne.n	1d07e <__addsf3+0x126>
   1d074:	0040      	lsls	r0, r0, #1
   1d076:	bf28      	it	cs
   1d078:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
   1d07c:	4770      	bx	lr
   1d07e:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
   1d082:	bf3c      	itt	cc
   1d084:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
   1d088:	4770      	bxcc	lr
   1d08a:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
   1d08e:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
   1d092:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   1d096:	4770      	bx	lr
   1d098:	ea7f 6222 	mvns.w	r2, r2, asr #24
   1d09c:	bf16      	itet	ne
   1d09e:	4608      	movne	r0, r1
   1d0a0:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
   1d0a4:	4601      	movne	r1, r0
   1d0a6:	0242      	lsls	r2, r0, #9
   1d0a8:	bf06      	itte	eq
   1d0aa:	ea5f 2341 	movseq.w	r3, r1, lsl #9
   1d0ae:	ea90 0f01 	teqeq	r0, r1
   1d0b2:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
   1d0b6:	4770      	bx	lr

0001d0b8 <__aeabi_ui2f>:
__aeabi_ui2f():
   1d0b8:	f04f 0300 	mov.w	r3, #0
   1d0bc:	e004      	b.n	1d0c8 <__aeabi_i2f+0x8>
   1d0be:	bf00      	nop

0001d0c0 <__aeabi_i2f>:
   1d0c0:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
   1d0c4:	bf48      	it	mi
   1d0c6:	4240      	negmi	r0, r0
   1d0c8:	ea5f 0c00 	movs.w	ip, r0
   1d0cc:	bf08      	it	eq
   1d0ce:	4770      	bxeq	lr
   1d0d0:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
   1d0d4:	4601      	mov	r1, r0
   1d0d6:	f04f 0000 	mov.w	r0, #0
   1d0da:	e01c      	b.n	1d116 <__aeabi_l2f+0x2a>

0001d0dc <__aeabi_ul2f>:
__floatundisf():
   1d0dc:	ea50 0201 	orrs.w	r2, r0, r1
   1d0e0:	bf08      	it	eq
   1d0e2:	4770      	bxeq	lr
   1d0e4:	f04f 0300 	mov.w	r3, #0
   1d0e8:	e00a      	b.n	1d100 <__aeabi_l2f+0x14>
   1d0ea:	bf00      	nop

0001d0ec <__aeabi_l2f>:
   1d0ec:	ea50 0201 	orrs.w	r2, r0, r1
   1d0f0:	bf08      	it	eq
   1d0f2:	4770      	bxeq	lr
   1d0f4:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
   1d0f8:	d502      	bpl.n	1d100 <__aeabi_l2f+0x14>
   1d0fa:	4240      	negs	r0, r0
   1d0fc:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   1d100:	ea5f 0c01 	movs.w	ip, r1
   1d104:	bf02      	ittt	eq
   1d106:	4684      	moveq	ip, r0
   1d108:	4601      	moveq	r1, r0
   1d10a:	2000      	moveq	r0, #0
   1d10c:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
   1d110:	bf08      	it	eq
   1d112:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
   1d116:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
   1d11a:	fabc f28c 	clz	r2, ip
   1d11e:	3a08      	subs	r2, #8
   1d120:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
   1d124:	db10      	blt.n	1d148 <__aeabi_l2f+0x5c>
   1d126:	fa01 fc02 	lsl.w	ip, r1, r2
   1d12a:	4463      	add	r3, ip
   1d12c:	fa00 fc02 	lsl.w	ip, r0, r2
   1d130:	f1c2 0220 	rsb	r2, r2, #32
   1d134:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
   1d138:	fa20 f202 	lsr.w	r2, r0, r2
   1d13c:	eb43 0002 	adc.w	r0, r3, r2
   1d140:	bf08      	it	eq
   1d142:	f020 0001 	biceq.w	r0, r0, #1
   1d146:	4770      	bx	lr
   1d148:	f102 0220 	add.w	r2, r2, #32
   1d14c:	fa01 fc02 	lsl.w	ip, r1, r2
   1d150:	f1c2 0220 	rsb	r2, r2, #32
   1d154:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
   1d158:	fa21 f202 	lsr.w	r2, r1, r2
   1d15c:	eb43 0002 	adc.w	r0, r3, r2
   1d160:	bf08      	it	eq
   1d162:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
   1d166:	4770      	bx	lr

0001d168 <__aeabi_fmul>:
__mulsf3():
   1d168:	f04f 0cff 	mov.w	ip, #255	; 0xff
   1d16c:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
   1d170:	bf1e      	ittt	ne
   1d172:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
   1d176:	ea92 0f0c 	teqne	r2, ip
   1d17a:	ea93 0f0c 	teqne	r3, ip
   1d17e:	d06f      	beq.n	1d260 <__aeabi_fmul+0xf8>
   1d180:	441a      	add	r2, r3
   1d182:	ea80 0c01 	eor.w	ip, r0, r1
   1d186:	0240      	lsls	r0, r0, #9
   1d188:	bf18      	it	ne
   1d18a:	ea5f 2141 	movsne.w	r1, r1, lsl #9
   1d18e:	d01e      	beq.n	1d1ce <__aeabi_fmul+0x66>
   1d190:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
   1d194:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
   1d198:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
   1d19c:	fba0 3101 	umull	r3, r1, r0, r1
   1d1a0:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
   1d1a4:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
   1d1a8:	bf3e      	ittt	cc
   1d1aa:	0049      	lslcc	r1, r1, #1
   1d1ac:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
   1d1b0:	005b      	lslcc	r3, r3, #1
   1d1b2:	ea40 0001 	orr.w	r0, r0, r1
   1d1b6:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
   1d1ba:	2afd      	cmp	r2, #253	; 0xfd
   1d1bc:	d81d      	bhi.n	1d1fa <__aeabi_fmul+0x92>
   1d1be:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
   1d1c2:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
   1d1c6:	bf08      	it	eq
   1d1c8:	f020 0001 	biceq.w	r0, r0, #1
   1d1cc:	4770      	bx	lr
   1d1ce:	f090 0f00 	teq	r0, #0
   1d1d2:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
   1d1d6:	bf08      	it	eq
   1d1d8:	0249      	lsleq	r1, r1, #9
   1d1da:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
   1d1de:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
   1d1e2:	3a7f      	subs	r2, #127	; 0x7f
   1d1e4:	bfc2      	ittt	gt
   1d1e6:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
   1d1ea:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
   1d1ee:	4770      	bxgt	lr
   1d1f0:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   1d1f4:	f04f 0300 	mov.w	r3, #0
   1d1f8:	3a01      	subs	r2, #1
   1d1fa:	dc5d      	bgt.n	1d2b8 <__aeabi_fmul+0x150>
   1d1fc:	f112 0f19 	cmn.w	r2, #25
   1d200:	bfdc      	itt	le
   1d202:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
   1d206:	4770      	bxle	lr
   1d208:	f1c2 0200 	rsb	r2, r2, #0
   1d20c:	0041      	lsls	r1, r0, #1
   1d20e:	fa21 f102 	lsr.w	r1, r1, r2
   1d212:	f1c2 0220 	rsb	r2, r2, #32
   1d216:	fa00 fc02 	lsl.w	ip, r0, r2
   1d21a:	ea5f 0031 	movs.w	r0, r1, rrx
   1d21e:	f140 0000 	adc.w	r0, r0, #0
   1d222:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
   1d226:	bf08      	it	eq
   1d228:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
   1d22c:	4770      	bx	lr
   1d22e:	f092 0f00 	teq	r2, #0
   1d232:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
   1d236:	bf02      	ittt	eq
   1d238:	0040      	lsleq	r0, r0, #1
   1d23a:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
   1d23e:	3a01      	subeq	r2, #1
   1d240:	d0f9      	beq.n	1d236 <__aeabi_fmul+0xce>
   1d242:	ea40 000c 	orr.w	r0, r0, ip
   1d246:	f093 0f00 	teq	r3, #0
   1d24a:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
   1d24e:	bf02      	ittt	eq
   1d250:	0049      	lsleq	r1, r1, #1
   1d252:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
   1d256:	3b01      	subeq	r3, #1
   1d258:	d0f9      	beq.n	1d24e <__aeabi_fmul+0xe6>
   1d25a:	ea41 010c 	orr.w	r1, r1, ip
   1d25e:	e78f      	b.n	1d180 <__aeabi_fmul+0x18>
   1d260:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
   1d264:	ea92 0f0c 	teq	r2, ip
   1d268:	bf18      	it	ne
   1d26a:	ea93 0f0c 	teqne	r3, ip
   1d26e:	d00a      	beq.n	1d286 <__aeabi_fmul+0x11e>
   1d270:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
   1d274:	bf18      	it	ne
   1d276:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
   1d27a:	d1d8      	bne.n	1d22e <__aeabi_fmul+0xc6>
   1d27c:	ea80 0001 	eor.w	r0, r0, r1
   1d280:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
   1d284:	4770      	bx	lr
   1d286:	f090 0f00 	teq	r0, #0
   1d28a:	bf17      	itett	ne
   1d28c:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
   1d290:	4608      	moveq	r0, r1
   1d292:	f091 0f00 	teqne	r1, #0
   1d296:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
   1d29a:	d014      	beq.n	1d2c6 <__aeabi_fmul+0x15e>
   1d29c:	ea92 0f0c 	teq	r2, ip
   1d2a0:	d101      	bne.n	1d2a6 <__aeabi_fmul+0x13e>
   1d2a2:	0242      	lsls	r2, r0, #9
   1d2a4:	d10f      	bne.n	1d2c6 <__aeabi_fmul+0x15e>
   1d2a6:	ea93 0f0c 	teq	r3, ip
   1d2aa:	d103      	bne.n	1d2b4 <__aeabi_fmul+0x14c>
   1d2ac:	024b      	lsls	r3, r1, #9
   1d2ae:	bf18      	it	ne
   1d2b0:	4608      	movne	r0, r1
   1d2b2:	d108      	bne.n	1d2c6 <__aeabi_fmul+0x15e>
   1d2b4:	ea80 0001 	eor.w	r0, r0, r1
   1d2b8:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
   1d2bc:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
   1d2c0:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   1d2c4:	4770      	bx	lr
   1d2c6:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
   1d2ca:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
   1d2ce:	4770      	bx	lr

0001d2d0 <__aeabi_fdiv>:
__divsf3():
   1d2d0:	f04f 0cff 	mov.w	ip, #255	; 0xff
   1d2d4:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
   1d2d8:	bf1e      	ittt	ne
   1d2da:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
   1d2de:	ea92 0f0c 	teqne	r2, ip
   1d2e2:	ea93 0f0c 	teqne	r3, ip
   1d2e6:	d069      	beq.n	1d3bc <__aeabi_fdiv+0xec>
   1d2e8:	eba2 0203 	sub.w	r2, r2, r3
   1d2ec:	ea80 0c01 	eor.w	ip, r0, r1
   1d2f0:	0249      	lsls	r1, r1, #9
   1d2f2:	ea4f 2040 	mov.w	r0, r0, lsl #9
   1d2f6:	d037      	beq.n	1d368 <__aeabi_fdiv+0x98>
   1d2f8:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
   1d2fc:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
   1d300:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
   1d304:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
   1d308:	428b      	cmp	r3, r1
   1d30a:	bf38      	it	cc
   1d30c:	005b      	lslcc	r3, r3, #1
   1d30e:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
   1d312:	f44f 0c00 	mov.w	ip, #8388608	; 0x800000
   1d316:	428b      	cmp	r3, r1
   1d318:	bf24      	itt	cs
   1d31a:	1a5b      	subcs	r3, r3, r1
   1d31c:	ea40 000c 	orrcs.w	r0, r0, ip
   1d320:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
   1d324:	bf24      	itt	cs
   1d326:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
   1d32a:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
   1d32e:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
   1d332:	bf24      	itt	cs
   1d334:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
   1d338:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
   1d33c:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
   1d340:	bf24      	itt	cs
   1d342:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
   1d346:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
   1d34a:	011b      	lsls	r3, r3, #4
   1d34c:	bf18      	it	ne
   1d34e:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
   1d352:	d1e0      	bne.n	1d316 <__aeabi_fdiv+0x46>
   1d354:	2afd      	cmp	r2, #253	; 0xfd
   1d356:	f63f af50 	bhi.w	1d1fa <__aeabi_fmul+0x92>
   1d35a:	428b      	cmp	r3, r1
   1d35c:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
   1d360:	bf08      	it	eq
   1d362:	f020 0001 	biceq.w	r0, r0, #1
   1d366:	4770      	bx	lr
   1d368:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
   1d36c:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
   1d370:	327f      	adds	r2, #127	; 0x7f
   1d372:	bfc2      	ittt	gt
   1d374:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
   1d378:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
   1d37c:	4770      	bxgt	lr
   1d37e:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   1d382:	f04f 0300 	mov.w	r3, #0
   1d386:	3a01      	subs	r2, #1
   1d388:	e737      	b.n	1d1fa <__aeabi_fmul+0x92>
   1d38a:	f092 0f00 	teq	r2, #0
   1d38e:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
   1d392:	bf02      	ittt	eq
   1d394:	0040      	lsleq	r0, r0, #1
   1d396:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
   1d39a:	3a01      	subeq	r2, #1
   1d39c:	d0f9      	beq.n	1d392 <__aeabi_fdiv+0xc2>
   1d39e:	ea40 000c 	orr.w	r0, r0, ip
   1d3a2:	f093 0f00 	teq	r3, #0
   1d3a6:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
   1d3aa:	bf02      	ittt	eq
   1d3ac:	0049      	lsleq	r1, r1, #1
   1d3ae:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
   1d3b2:	3b01      	subeq	r3, #1
   1d3b4:	d0f9      	beq.n	1d3aa <__aeabi_fdiv+0xda>
   1d3b6:	ea41 010c 	orr.w	r1, r1, ip
   1d3ba:	e795      	b.n	1d2e8 <__aeabi_fdiv+0x18>
   1d3bc:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
   1d3c0:	ea92 0f0c 	teq	r2, ip
   1d3c4:	d108      	bne.n	1d3d8 <__aeabi_fdiv+0x108>
   1d3c6:	0242      	lsls	r2, r0, #9
   1d3c8:	f47f af7d 	bne.w	1d2c6 <__aeabi_fmul+0x15e>
   1d3cc:	ea93 0f0c 	teq	r3, ip
   1d3d0:	f47f af70 	bne.w	1d2b4 <__aeabi_fmul+0x14c>
   1d3d4:	4608      	mov	r0, r1
   1d3d6:	e776      	b.n	1d2c6 <__aeabi_fmul+0x15e>
   1d3d8:	ea93 0f0c 	teq	r3, ip
   1d3dc:	d104      	bne.n	1d3e8 <__aeabi_fdiv+0x118>
   1d3de:	024b      	lsls	r3, r1, #9
   1d3e0:	f43f af4c 	beq.w	1d27c <__aeabi_fmul+0x114>
   1d3e4:	4608      	mov	r0, r1
   1d3e6:	e76e      	b.n	1d2c6 <__aeabi_fmul+0x15e>
   1d3e8:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
   1d3ec:	bf18      	it	ne
   1d3ee:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
   1d3f2:	d1ca      	bne.n	1d38a <__aeabi_fdiv+0xba>
   1d3f4:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
   1d3f8:	f47f af5c 	bne.w	1d2b4 <__aeabi_fmul+0x14c>
   1d3fc:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
   1d400:	f47f af3c 	bne.w	1d27c <__aeabi_fmul+0x114>
   1d404:	e75f      	b.n	1d2c6 <__aeabi_fmul+0x15e>
   1d406:	bf00      	nop

0001d408 <__gesf2>:
__gtsf2():
   1d408:	f04f 3cff 	mov.w	ip, #4294967295
   1d40c:	e006      	b.n	1d41c <__cmpsf2+0x4>
   1d40e:	bf00      	nop

0001d410 <__lesf2>:
   1d410:	f04f 0c01 	mov.w	ip, #1
   1d414:	e002      	b.n	1d41c <__cmpsf2+0x4>
   1d416:	bf00      	nop

0001d418 <__cmpsf2>:
   1d418:	f04f 0c01 	mov.w	ip, #1
   1d41c:	f84d cd04 	str.w	ip, [sp, #-4]!
   1d420:	ea4f 0240 	mov.w	r2, r0, lsl #1
   1d424:	ea4f 0341 	mov.w	r3, r1, lsl #1
   1d428:	ea7f 6c22 	mvns.w	ip, r2, asr #24
   1d42c:	bf18      	it	ne
   1d42e:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
   1d432:	d011      	beq.n	1d458 <__cmpsf2+0x40>
   1d434:	b001      	add	sp, #4
   1d436:	ea52 0c53 	orrs.w	ip, r2, r3, lsr #1
   1d43a:	bf18      	it	ne
   1d43c:	ea90 0f01 	teqne	r0, r1
   1d440:	bf58      	it	pl
   1d442:	ebb2 0003 	subspl.w	r0, r2, r3
   1d446:	bf88      	it	hi
   1d448:	17c8      	asrhi	r0, r1, #31
   1d44a:	bf38      	it	cc
   1d44c:	ea6f 70e1 	mvncc.w	r0, r1, asr #31
   1d450:	bf18      	it	ne
   1d452:	f040 0001 	orrne.w	r0, r0, #1
   1d456:	4770      	bx	lr
   1d458:	ea7f 6c22 	mvns.w	ip, r2, asr #24
   1d45c:	d102      	bne.n	1d464 <__cmpsf2+0x4c>
   1d45e:	ea5f 2c40 	movs.w	ip, r0, lsl #9
   1d462:	d105      	bne.n	1d470 <__cmpsf2+0x58>
   1d464:	ea7f 6c23 	mvns.w	ip, r3, asr #24
   1d468:	d1e4      	bne.n	1d434 <__cmpsf2+0x1c>
   1d46a:	ea5f 2c41 	movs.w	ip, r1, lsl #9
   1d46e:	d0e1      	beq.n	1d434 <__cmpsf2+0x1c>
   1d470:	f85d 0b04 	ldr.w	r0, [sp], #4
   1d474:	4770      	bx	lr
__nesf2():
   1d476:	bf00      	nop

0001d478 <__aeabi_cfrcmple>:
__aeabi_cfrcmple():
   1d478:	4684      	mov	ip, r0
   1d47a:	4608      	mov	r0, r1
   1d47c:	4661      	mov	r1, ip
   1d47e:	e7ff      	b.n	1d480 <__aeabi_cfcmpeq>

0001d480 <__aeabi_cfcmpeq>:
   1d480:	b50f      	push	{r0, r1, r2, r3, lr}
   1d482:	f7ff ffc9 	bl	1d418 <__cmpsf2>
   1d486:	2800      	cmp	r0, #0
   1d488:	bf48      	it	mi
   1d48a:	f110 0f00 	cmnmi.w	r0, #0
   1d48e:	bd0f      	pop	{r0, r1, r2, r3, pc}

0001d490 <__aeabi_fcmpeq>:
__aeabi_fcmpeq():
   1d490:	f84d ed08 	str.w	lr, [sp, #-8]!
   1d494:	f7ff fff4 	bl	1d480 <__aeabi_cfcmpeq>
   1d498:	bf0c      	ite	eq
   1d49a:	2001      	moveq	r0, #1
   1d49c:	2000      	movne	r0, #0
   1d49e:	f85d fb08 	ldr.w	pc, [sp], #8
   1d4a2:	bf00      	nop

0001d4a4 <__aeabi_fcmplt>:
__aeabi_fcmplt():
   1d4a4:	f84d ed08 	str.w	lr, [sp, #-8]!
   1d4a8:	f7ff ffea 	bl	1d480 <__aeabi_cfcmpeq>
   1d4ac:	bf34      	ite	cc
   1d4ae:	2001      	movcc	r0, #1
   1d4b0:	2000      	movcs	r0, #0
   1d4b2:	f85d fb08 	ldr.w	pc, [sp], #8
   1d4b6:	bf00      	nop

0001d4b8 <__aeabi_fcmple>:
__aeabi_fcmple():
   1d4b8:	f84d ed08 	str.w	lr, [sp, #-8]!
   1d4bc:	f7ff ffe0 	bl	1d480 <__aeabi_cfcmpeq>
   1d4c0:	bf94      	ite	ls
   1d4c2:	2001      	movls	r0, #1
   1d4c4:	2000      	movhi	r0, #0
   1d4c6:	f85d fb08 	ldr.w	pc, [sp], #8
   1d4ca:	bf00      	nop

0001d4cc <__aeabi_fcmpge>:
__aeabi_fcmpge():
   1d4cc:	f84d ed08 	str.w	lr, [sp, #-8]!
   1d4d0:	f7ff ffd2 	bl	1d478 <__aeabi_cfrcmple>
   1d4d4:	bf94      	ite	ls
   1d4d6:	2001      	movls	r0, #1
   1d4d8:	2000      	movhi	r0, #0
   1d4da:	f85d fb08 	ldr.w	pc, [sp], #8
   1d4de:	bf00      	nop

0001d4e0 <__aeabi_fcmpgt>:
__aeabi_fcmpgt():
   1d4e0:	f84d ed08 	str.w	lr, [sp, #-8]!
   1d4e4:	f7ff ffc8 	bl	1d478 <__aeabi_cfrcmple>
   1d4e8:	bf34      	ite	cc
   1d4ea:	2001      	movcc	r0, #1
   1d4ec:	2000      	movcs	r0, #0
   1d4ee:	f85d fb08 	ldr.w	pc, [sp], #8
   1d4f2:	bf00      	nop

0001d4f4 <__aeabi_f2iz>:
__fixsfsi():
   1d4f4:	ea4f 0240 	mov.w	r2, r0, lsl #1
   1d4f8:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
   1d4fc:	d30f      	bcc.n	1d51e <__aeabi_f2iz+0x2a>
   1d4fe:	f04f 039e 	mov.w	r3, #158	; 0x9e
   1d502:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
   1d506:	d90d      	bls.n	1d524 <__aeabi_f2iz+0x30>
   1d508:	ea4f 2300 	mov.w	r3, r0, lsl #8
   1d50c:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   1d510:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
   1d514:	fa23 f002 	lsr.w	r0, r3, r2
   1d518:	bf18      	it	ne
   1d51a:	4240      	negne	r0, r0
   1d51c:	4770      	bx	lr
   1d51e:	f04f 0000 	mov.w	r0, #0
   1d522:	4770      	bx	lr
   1d524:	f112 0f61 	cmn.w	r2, #97	; 0x61
   1d528:	d101      	bne.n	1d52e <__aeabi_f2iz+0x3a>
   1d52a:	0242      	lsls	r2, r0, #9
   1d52c:	d105      	bne.n	1d53a <__aeabi_f2iz+0x46>
   1d52e:	f010 4000 	ands.w	r0, r0, #2147483648	; 0x80000000
   1d532:	bf08      	it	eq
   1d534:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
   1d538:	4770      	bx	lr
   1d53a:	f04f 0000 	mov.w	r0, #0
   1d53e:	4770      	bx	lr

0001d540 <__aeabi_f2uiz>:
__aeabi_f2uiz():
   1d540:	0042      	lsls	r2, r0, #1
   1d542:	d20e      	bcs.n	1d562 <__aeabi_f2uiz+0x22>
   1d544:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
   1d548:	d30b      	bcc.n	1d562 <__aeabi_f2uiz+0x22>
   1d54a:	f04f 039e 	mov.w	r3, #158	; 0x9e
   1d54e:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
   1d552:	d409      	bmi.n	1d568 <__aeabi_f2uiz+0x28>
   1d554:	ea4f 2300 	mov.w	r3, r0, lsl #8
   1d558:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   1d55c:	fa23 f002 	lsr.w	r0, r3, r2
   1d560:	4770      	bx	lr
   1d562:	f04f 0000 	mov.w	r0, #0
   1d566:	4770      	bx	lr
   1d568:	f112 0f61 	cmn.w	r2, #97	; 0x61
   1d56c:	d101      	bne.n	1d572 <__aeabi_f2uiz+0x32>
   1d56e:	0242      	lsls	r2, r0, #9
   1d570:	d102      	bne.n	1d578 <__aeabi_f2uiz+0x38>
   1d572:	f04f 30ff 	mov.w	r0, #4294967295
   1d576:	4770      	bx	lr
   1d578:	f04f 0000 	mov.w	r0, #0
   1d57c:	4770      	bx	lr
   1d57e:	bf00      	nop

0001d580 <__aeabi_uldivmod>:
$t():
   1d580:	b94b      	cbnz	r3, 1d596 <__aeabi_uldivmod+0x16>
   1d582:	b942      	cbnz	r2, 1d596 <__aeabi_uldivmod+0x16>
   1d584:	2900      	cmp	r1, #0
   1d586:	bf08      	it	eq
   1d588:	2800      	cmpeq	r0, #0
   1d58a:	d002      	beq.n	1d592 <__aeabi_uldivmod+0x12>
   1d58c:	f04f 31ff 	mov.w	r1, #4294967295
   1d590:	4608      	mov	r0, r1
   1d592:	f000 b83b 	b.w	1d60c <__aeabi_idiv0>
   1d596:	b082      	sub	sp, #8
   1d598:	46ec      	mov	ip, sp
   1d59a:	e92d 5000 	stmdb	sp!, {ip, lr}
   1d59e:	f000 f81d 	bl	1d5dc <__gnu_uldivmod_helper>
   1d5a2:	f8dd e004 	ldr.w	lr, [sp, #4]
   1d5a6:	b002      	add	sp, #8
   1d5a8:	bc0c      	pop	{r2, r3}
   1d5aa:	4770      	bx	lr

0001d5ac <__gnu_ldivmod_helper>:
__gnu_ldivmod_helper():
   1d5ac:	e92d 4f70 	stmdb	sp!, {r4, r5, r6, r8, r9, sl, fp, lr}
   1d5b0:	9e08      	ldr	r6, [sp, #32]
   1d5b2:	4614      	mov	r4, r2
   1d5b4:	461d      	mov	r5, r3
   1d5b6:	4680      	mov	r8, r0
   1d5b8:	4689      	mov	r9, r1
   1d5ba:	f000 f829 	bl	1d610 <__divdi3>
   1d5be:	fb04 f301 	mul.w	r3, r4, r1
   1d5c2:	fba4 ab00 	umull	sl, fp, r4, r0
   1d5c6:	fb00 3205 	mla	r2, r0, r5, r3
   1d5ca:	4493      	add	fp, r2
   1d5cc:	ebb8 080a 	subs.w	r8, r8, sl
   1d5d0:	eb69 090b 	sbc.w	r9, r9, fp
   1d5d4:	e9c6 8900 	strd	r8, r9, [r6]
   1d5d8:	e8bd 8f70 	ldmia.w	sp!, {r4, r5, r6, r8, r9, sl, fp, pc}

0001d5dc <__gnu_uldivmod_helper>:
__gnu_uldivmod_helper():
   1d5dc:	e92d 4f70 	stmdb	sp!, {r4, r5, r6, r8, r9, sl, fp, lr}
   1d5e0:	9e08      	ldr	r6, [sp, #32]
   1d5e2:	4614      	mov	r4, r2
   1d5e4:	461d      	mov	r5, r3
   1d5e6:	4680      	mov	r8, r0
   1d5e8:	4689      	mov	r9, r1
   1d5ea:	f000 f961 	bl	1d8b0 <__udivdi3>
   1d5ee:	fb00 f505 	mul.w	r5, r0, r5
   1d5f2:	fba0 ab04 	umull	sl, fp, r0, r4
   1d5f6:	fb04 5401 	mla	r4, r4, r1, r5
   1d5fa:	44a3      	add	fp, r4
   1d5fc:	ebb8 080a 	subs.w	r8, r8, sl
   1d600:	eb69 090b 	sbc.w	r9, r9, fp
   1d604:	e9c6 8900 	strd	r8, r9, [r6]
   1d608:	e8bd 8f70 	ldmia.w	sp!, {r4, r5, r6, r8, r9, sl, fp, pc}

0001d60c <__aeabi_idiv0>:
__aeabi_ldiv0():
   1d60c:	4770      	bx	lr
   1d60e:	bf00      	nop

0001d610 <__divdi3>:
__divdi3():
   1d610:	2900      	cmp	r1, #0
   1d612:	e92d 0ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   1d616:	f2c0 80a1 	blt.w	1d75c <__divdi3+0x14c>
   1d61a:	2400      	movs	r4, #0
   1d61c:	2b00      	cmp	r3, #0
   1d61e:	f2c0 8098 	blt.w	1d752 <__divdi3+0x142>
   1d622:	4615      	mov	r5, r2
   1d624:	4606      	mov	r6, r0
   1d626:	460f      	mov	r7, r1
   1d628:	2b00      	cmp	r3, #0
   1d62a:	d13f      	bne.n	1d6ac <__divdi3+0x9c>
   1d62c:	428a      	cmp	r2, r1
   1d62e:	d958      	bls.n	1d6e2 <__divdi3+0xd2>
   1d630:	fab2 f382 	clz	r3, r2
   1d634:	b14b      	cbz	r3, 1d64a <__divdi3+0x3a>
   1d636:	f1c3 0220 	rsb	r2, r3, #32
   1d63a:	fa01 f703 	lsl.w	r7, r1, r3
   1d63e:	fa20 f202 	lsr.w	r2, r0, r2
   1d642:	409d      	lsls	r5, r3
   1d644:	fa00 f603 	lsl.w	r6, r0, r3
   1d648:	4317      	orrs	r7, r2
   1d64a:	0c29      	lsrs	r1, r5, #16
   1d64c:	fbb7 f2f1 	udiv	r2, r7, r1
   1d650:	fb01 7712 	mls	r7, r1, r2, r7
   1d654:	b2a8      	uxth	r0, r5
   1d656:	fb00 f302 	mul.w	r3, r0, r2
   1d65a:	ea4f 4c16 	mov.w	ip, r6, lsr #16
   1d65e:	ea4c 4707 	orr.w	r7, ip, r7, lsl #16
   1d662:	42bb      	cmp	r3, r7
   1d664:	d909      	bls.n	1d67a <__divdi3+0x6a>
   1d666:	197f      	adds	r7, r7, r5
   1d668:	f102 3cff 	add.w	ip, r2, #4294967295
   1d66c:	f080 8105 	bcs.w	1d87a <__divdi3+0x26a>
   1d670:	42bb      	cmp	r3, r7
   1d672:	f240 8102 	bls.w	1d87a <__divdi3+0x26a>
   1d676:	3a02      	subs	r2, #2
   1d678:	442f      	add	r7, r5
   1d67a:	1aff      	subs	r7, r7, r3
   1d67c:	fbb7 f3f1 	udiv	r3, r7, r1
   1d680:	fb01 7113 	mls	r1, r1, r3, r7
   1d684:	fb00 f003 	mul.w	r0, r0, r3
   1d688:	b2b6      	uxth	r6, r6
   1d68a:	ea46 4101 	orr.w	r1, r6, r1, lsl #16
   1d68e:	4288      	cmp	r0, r1
   1d690:	d908      	bls.n	1d6a4 <__divdi3+0x94>
   1d692:	1949      	adds	r1, r1, r5
   1d694:	f103 37ff 	add.w	r7, r3, #4294967295
   1d698:	f080 80f1 	bcs.w	1d87e <__divdi3+0x26e>
   1d69c:	4288      	cmp	r0, r1
   1d69e:	f240 80ee 	bls.w	1d87e <__divdi3+0x26e>
   1d6a2:	3b02      	subs	r3, #2
   1d6a4:	ea43 4202 	orr.w	r2, r3, r2, lsl #16
   1d6a8:	2300      	movs	r3, #0
   1d6aa:	e003      	b.n	1d6b4 <__divdi3+0xa4>
   1d6ac:	428b      	cmp	r3, r1
   1d6ae:	d90a      	bls.n	1d6c6 <__divdi3+0xb6>
   1d6b0:	2300      	movs	r3, #0
   1d6b2:	461a      	mov	r2, r3
   1d6b4:	4610      	mov	r0, r2
   1d6b6:	4619      	mov	r1, r3
   1d6b8:	b114      	cbz	r4, 1d6c0 <__divdi3+0xb0>
   1d6ba:	4240      	negs	r0, r0
   1d6bc:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   1d6c0:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   1d6c4:	4770      	bx	lr
   1d6c6:	fab3 f883 	clz	r8, r3
   1d6ca:	f1b8 0f00 	cmp.w	r8, #0
   1d6ce:	f040 8088 	bne.w	1d7e2 <__divdi3+0x1d2>
   1d6d2:	428b      	cmp	r3, r1
   1d6d4:	d302      	bcc.n	1d6dc <__divdi3+0xcc>
   1d6d6:	4282      	cmp	r2, r0
   1d6d8:	f200 80e2 	bhi.w	1d8a0 <__divdi3+0x290>
   1d6dc:	2300      	movs	r3, #0
   1d6de:	2201      	movs	r2, #1
   1d6e0:	e7e8      	b.n	1d6b4 <__divdi3+0xa4>
   1d6e2:	b912      	cbnz	r2, 1d6ea <__divdi3+0xda>
   1d6e4:	2301      	movs	r3, #1
   1d6e6:	fbb3 f5f2 	udiv	r5, r3, r2
   1d6ea:	fab5 f285 	clz	r2, r5
   1d6ee:	2a00      	cmp	r2, #0
   1d6f0:	d13a      	bne.n	1d768 <__divdi3+0x158>
   1d6f2:	1b7f      	subs	r7, r7, r5
   1d6f4:	0c28      	lsrs	r0, r5, #16
   1d6f6:	fa1f fc85 	uxth.w	ip, r5
   1d6fa:	2301      	movs	r3, #1
   1d6fc:	fbb7 f1f0 	udiv	r1, r7, r0
   1d700:	fb00 7711 	mls	r7, r0, r1, r7
   1d704:	fb0c f201 	mul.w	r2, ip, r1
   1d708:	ea4f 4816 	mov.w	r8, r6, lsr #16
   1d70c:	ea48 4707 	orr.w	r7, r8, r7, lsl #16
   1d710:	42ba      	cmp	r2, r7
   1d712:	d907      	bls.n	1d724 <__divdi3+0x114>
   1d714:	197f      	adds	r7, r7, r5
   1d716:	f101 38ff 	add.w	r8, r1, #4294967295
   1d71a:	d202      	bcs.n	1d722 <__divdi3+0x112>
   1d71c:	42ba      	cmp	r2, r7
   1d71e:	f200 80c4 	bhi.w	1d8aa <__divdi3+0x29a>
   1d722:	4641      	mov	r1, r8
   1d724:	1abf      	subs	r7, r7, r2
   1d726:	fbb7 f2f0 	udiv	r2, r7, r0
   1d72a:	fb00 7012 	mls	r0, r0, r2, r7
   1d72e:	fb0c fc02 	mul.w	ip, ip, r2
   1d732:	b2b6      	uxth	r6, r6
   1d734:	ea46 4000 	orr.w	r0, r6, r0, lsl #16
   1d738:	4584      	cmp	ip, r0
   1d73a:	d907      	bls.n	1d74c <__divdi3+0x13c>
   1d73c:	1940      	adds	r0, r0, r5
   1d73e:	f102 37ff 	add.w	r7, r2, #4294967295
   1d742:	d202      	bcs.n	1d74a <__divdi3+0x13a>
   1d744:	4584      	cmp	ip, r0
   1d746:	f200 80ae 	bhi.w	1d8a6 <__divdi3+0x296>
   1d74a:	463a      	mov	r2, r7
   1d74c:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
   1d750:	e7b0      	b.n	1d6b4 <__divdi3+0xa4>
   1d752:	43e4      	mvns	r4, r4
   1d754:	4252      	negs	r2, r2
   1d756:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
   1d75a:	e762      	b.n	1d622 <__divdi3+0x12>
   1d75c:	4240      	negs	r0, r0
   1d75e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   1d762:	f04f 34ff 	mov.w	r4, #4294967295
   1d766:	e759      	b.n	1d61c <__divdi3+0xc>
   1d768:	4095      	lsls	r5, r2
   1d76a:	f1c2 0920 	rsb	r9, r2, #32
   1d76e:	fa27 f109 	lsr.w	r1, r7, r9
   1d772:	fa26 f909 	lsr.w	r9, r6, r9
   1d776:	4097      	lsls	r7, r2
   1d778:	0c28      	lsrs	r0, r5, #16
   1d77a:	fbb1 f8f0 	udiv	r8, r1, r0
   1d77e:	fb00 1118 	mls	r1, r0, r8, r1
   1d782:	fa1f fc85 	uxth.w	ip, r5
   1d786:	fb0c f308 	mul.w	r3, ip, r8
   1d78a:	ea49 0907 	orr.w	r9, r9, r7
   1d78e:	ea4f 4719 	mov.w	r7, r9, lsr #16
   1d792:	ea47 4101 	orr.w	r1, r7, r1, lsl #16
   1d796:	428b      	cmp	r3, r1
   1d798:	fa06 f602 	lsl.w	r6, r6, r2
   1d79c:	d908      	bls.n	1d7b0 <__divdi3+0x1a0>
   1d79e:	1949      	adds	r1, r1, r5
   1d7a0:	f108 32ff 	add.w	r2, r8, #4294967295
   1d7a4:	d27a      	bcs.n	1d89c <__divdi3+0x28c>
   1d7a6:	428b      	cmp	r3, r1
   1d7a8:	d978      	bls.n	1d89c <__divdi3+0x28c>
   1d7aa:	f1a8 0802 	sub.w	r8, r8, #2
   1d7ae:	4429      	add	r1, r5
   1d7b0:	1ac9      	subs	r1, r1, r3
   1d7b2:	fbb1 f3f0 	udiv	r3, r1, r0
   1d7b6:	fb00 1713 	mls	r7, r0, r3, r1
   1d7ba:	fb0c f203 	mul.w	r2, ip, r3
   1d7be:	fa1f f989 	uxth.w	r9, r9
   1d7c2:	ea49 4707 	orr.w	r7, r9, r7, lsl #16
   1d7c6:	42ba      	cmp	r2, r7
   1d7c8:	d907      	bls.n	1d7da <__divdi3+0x1ca>
   1d7ca:	197f      	adds	r7, r7, r5
   1d7cc:	f103 31ff 	add.w	r1, r3, #4294967295
   1d7d0:	d260      	bcs.n	1d894 <__divdi3+0x284>
   1d7d2:	42ba      	cmp	r2, r7
   1d7d4:	d95e      	bls.n	1d894 <__divdi3+0x284>
   1d7d6:	3b02      	subs	r3, #2
   1d7d8:	442f      	add	r7, r5
   1d7da:	1abf      	subs	r7, r7, r2
   1d7dc:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
   1d7e0:	e78c      	b.n	1d6fc <__divdi3+0xec>
   1d7e2:	f1c8 0220 	rsb	r2, r8, #32
   1d7e6:	fa25 f102 	lsr.w	r1, r5, r2
   1d7ea:	fa03 fc08 	lsl.w	ip, r3, r8
   1d7ee:	fa27 f302 	lsr.w	r3, r7, r2
   1d7f2:	fa20 f202 	lsr.w	r2, r0, r2
   1d7f6:	fa07 f708 	lsl.w	r7, r7, r8
   1d7fa:	ea41 0c0c 	orr.w	ip, r1, ip
   1d7fe:	ea4f 491c 	mov.w	r9, ip, lsr #16
   1d802:	fbb3 f1f9 	udiv	r1, r3, r9
   1d806:	fb09 3311 	mls	r3, r9, r1, r3
   1d80a:	fa1f fa8c 	uxth.w	sl, ip
   1d80e:	fb0a fb01 	mul.w	fp, sl, r1
   1d812:	4317      	orrs	r7, r2
   1d814:	0c3a      	lsrs	r2, r7, #16
   1d816:	ea42 4303 	orr.w	r3, r2, r3, lsl #16
   1d81a:	459b      	cmp	fp, r3
   1d81c:	fa05 f008 	lsl.w	r0, r5, r8
   1d820:	d908      	bls.n	1d834 <__divdi3+0x224>
   1d822:	eb13 030c 	adds.w	r3, r3, ip
   1d826:	f101 32ff 	add.w	r2, r1, #4294967295
   1d82a:	d235      	bcs.n	1d898 <__divdi3+0x288>
   1d82c:	459b      	cmp	fp, r3
   1d82e:	d933      	bls.n	1d898 <__divdi3+0x288>
   1d830:	3902      	subs	r1, #2
   1d832:	4463      	add	r3, ip
   1d834:	ebcb 0303 	rsb	r3, fp, r3
   1d838:	fbb3 f2f9 	udiv	r2, r3, r9
   1d83c:	fb09 3312 	mls	r3, r9, r2, r3
   1d840:	fb0a fa02 	mul.w	sl, sl, r2
   1d844:	b2bf      	uxth	r7, r7
   1d846:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
   1d84a:	45ba      	cmp	sl, r7
   1d84c:	d908      	bls.n	1d860 <__divdi3+0x250>
   1d84e:	eb17 070c 	adds.w	r7, r7, ip
   1d852:	f102 33ff 	add.w	r3, r2, #4294967295
   1d856:	d21b      	bcs.n	1d890 <__divdi3+0x280>
   1d858:	45ba      	cmp	sl, r7
   1d85a:	d919      	bls.n	1d890 <__divdi3+0x280>
   1d85c:	3a02      	subs	r2, #2
   1d85e:	4467      	add	r7, ip
   1d860:	ea42 4501 	orr.w	r5, r2, r1, lsl #16
   1d864:	fba5 0100 	umull	r0, r1, r5, r0
   1d868:	ebca 0707 	rsb	r7, sl, r7
   1d86c:	428f      	cmp	r7, r1
   1d86e:	f04f 0300 	mov.w	r3, #0
   1d872:	d30a      	bcc.n	1d88a <__divdi3+0x27a>
   1d874:	d005      	beq.n	1d882 <__divdi3+0x272>
   1d876:	462a      	mov	r2, r5
   1d878:	e71c      	b.n	1d6b4 <__divdi3+0xa4>
   1d87a:	4662      	mov	r2, ip
   1d87c:	e6fd      	b.n	1d67a <__divdi3+0x6a>
   1d87e:	463b      	mov	r3, r7
   1d880:	e710      	b.n	1d6a4 <__divdi3+0x94>
   1d882:	fa06 f608 	lsl.w	r6, r6, r8
   1d886:	4286      	cmp	r6, r0
   1d888:	d2f5      	bcs.n	1d876 <__divdi3+0x266>
   1d88a:	1e6a      	subs	r2, r5, #1
   1d88c:	2300      	movs	r3, #0
   1d88e:	e711      	b.n	1d6b4 <__divdi3+0xa4>
   1d890:	461a      	mov	r2, r3
   1d892:	e7e5      	b.n	1d860 <__divdi3+0x250>
   1d894:	460b      	mov	r3, r1
   1d896:	e7a0      	b.n	1d7da <__divdi3+0x1ca>
   1d898:	4611      	mov	r1, r2
   1d89a:	e7cb      	b.n	1d834 <__divdi3+0x224>
   1d89c:	4690      	mov	r8, r2
   1d89e:	e787      	b.n	1d7b0 <__divdi3+0x1a0>
   1d8a0:	4643      	mov	r3, r8
   1d8a2:	4642      	mov	r2, r8
   1d8a4:	e706      	b.n	1d6b4 <__divdi3+0xa4>
   1d8a6:	3a02      	subs	r2, #2
   1d8a8:	e750      	b.n	1d74c <__divdi3+0x13c>
   1d8aa:	3902      	subs	r1, #2
   1d8ac:	442f      	add	r7, r5
   1d8ae:	e739      	b.n	1d724 <__divdi3+0x114>

0001d8b0 <__udivdi3>:
__udivdi3():
   1d8b0:	e92d 0ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   1d8b4:	4614      	mov	r4, r2
   1d8b6:	4605      	mov	r5, r0
   1d8b8:	460e      	mov	r6, r1
   1d8ba:	2b00      	cmp	r3, #0
   1d8bc:	d143      	bne.n	1d946 <__udivdi3+0x96>
   1d8be:	428a      	cmp	r2, r1
   1d8c0:	d953      	bls.n	1d96a <__udivdi3+0xba>
   1d8c2:	fab2 f782 	clz	r7, r2
   1d8c6:	b157      	cbz	r7, 1d8de <__udivdi3+0x2e>
   1d8c8:	f1c7 0620 	rsb	r6, r7, #32
   1d8cc:	fa20 f606 	lsr.w	r6, r0, r6
   1d8d0:	fa01 f307 	lsl.w	r3, r1, r7
   1d8d4:	fa02 f407 	lsl.w	r4, r2, r7
   1d8d8:	fa00 f507 	lsl.w	r5, r0, r7
   1d8dc:	431e      	orrs	r6, r3
   1d8de:	0c21      	lsrs	r1, r4, #16
   1d8e0:	fbb6 f2f1 	udiv	r2, r6, r1
   1d8e4:	fb01 6612 	mls	r6, r1, r2, r6
   1d8e8:	b2a0      	uxth	r0, r4
   1d8ea:	fb00 f302 	mul.w	r3, r0, r2
   1d8ee:	0c2f      	lsrs	r7, r5, #16
   1d8f0:	ea47 4606 	orr.w	r6, r7, r6, lsl #16
   1d8f4:	42b3      	cmp	r3, r6
   1d8f6:	d909      	bls.n	1d90c <__udivdi3+0x5c>
   1d8f8:	1936      	adds	r6, r6, r4
   1d8fa:	f102 37ff 	add.w	r7, r2, #4294967295
   1d8fe:	f080 80fd 	bcs.w	1dafc <__udivdi3+0x24c>
   1d902:	42b3      	cmp	r3, r6
   1d904:	f240 80fa 	bls.w	1dafc <__udivdi3+0x24c>
   1d908:	3a02      	subs	r2, #2
   1d90a:	4426      	add	r6, r4
   1d90c:	1af6      	subs	r6, r6, r3
   1d90e:	fbb6 f3f1 	udiv	r3, r6, r1
   1d912:	fb01 6113 	mls	r1, r1, r3, r6
   1d916:	fb00 f003 	mul.w	r0, r0, r3
   1d91a:	b2ad      	uxth	r5, r5
   1d91c:	ea45 4101 	orr.w	r1, r5, r1, lsl #16
   1d920:	4288      	cmp	r0, r1
   1d922:	d908      	bls.n	1d936 <__udivdi3+0x86>
   1d924:	1909      	adds	r1, r1, r4
   1d926:	f103 36ff 	add.w	r6, r3, #4294967295
   1d92a:	f080 80e9 	bcs.w	1db00 <__udivdi3+0x250>
   1d92e:	4288      	cmp	r0, r1
   1d930:	f240 80e6 	bls.w	1db00 <__udivdi3+0x250>
   1d934:	3b02      	subs	r3, #2
   1d936:	ea43 4202 	orr.w	r2, r3, r2, lsl #16
   1d93a:	2300      	movs	r3, #0
   1d93c:	4610      	mov	r0, r2
   1d93e:	4619      	mov	r1, r3
   1d940:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   1d944:	4770      	bx	lr
   1d946:	428b      	cmp	r3, r1
   1d948:	d84c      	bhi.n	1d9e4 <__udivdi3+0x134>
   1d94a:	fab3 f683 	clz	r6, r3
   1d94e:	2e00      	cmp	r6, #0
   1d950:	d14f      	bne.n	1d9f2 <__udivdi3+0x142>
   1d952:	428b      	cmp	r3, r1
   1d954:	d302      	bcc.n	1d95c <__udivdi3+0xac>
   1d956:	4282      	cmp	r2, r0
   1d958:	f200 80dd 	bhi.w	1db16 <__udivdi3+0x266>
   1d95c:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   1d960:	2300      	movs	r3, #0
   1d962:	2201      	movs	r2, #1
   1d964:	4610      	mov	r0, r2
   1d966:	4619      	mov	r1, r3
   1d968:	4770      	bx	lr
   1d96a:	b912      	cbnz	r2, 1d972 <__udivdi3+0xc2>
   1d96c:	2401      	movs	r4, #1
   1d96e:	fbb4 f4f2 	udiv	r4, r4, r2
   1d972:	fab4 f284 	clz	r2, r4
   1d976:	2a00      	cmp	r2, #0
   1d978:	f040 8082 	bne.w	1da80 <__udivdi3+0x1d0>
   1d97c:	1b09      	subs	r1, r1, r4
   1d97e:	0c26      	lsrs	r6, r4, #16
   1d980:	b2a7      	uxth	r7, r4
   1d982:	2301      	movs	r3, #1
   1d984:	fbb1 f0f6 	udiv	r0, r1, r6
   1d988:	fb06 1110 	mls	r1, r6, r0, r1
   1d98c:	fb07 f200 	mul.w	r2, r7, r0
   1d990:	ea4f 4c15 	mov.w	ip, r5, lsr #16
   1d994:	ea4c 4101 	orr.w	r1, ip, r1, lsl #16
   1d998:	428a      	cmp	r2, r1
   1d99a:	d907      	bls.n	1d9ac <__udivdi3+0xfc>
   1d99c:	1909      	adds	r1, r1, r4
   1d99e:	f100 3cff 	add.w	ip, r0, #4294967295
   1d9a2:	d202      	bcs.n	1d9aa <__udivdi3+0xfa>
   1d9a4:	428a      	cmp	r2, r1
   1d9a6:	f200 80c8 	bhi.w	1db3a <__udivdi3+0x28a>
   1d9aa:	4660      	mov	r0, ip
   1d9ac:	1a89      	subs	r1, r1, r2
   1d9ae:	fbb1 f2f6 	udiv	r2, r1, r6
   1d9b2:	fb06 1112 	mls	r1, r6, r2, r1
   1d9b6:	fb07 f702 	mul.w	r7, r7, r2
   1d9ba:	b2ad      	uxth	r5, r5
   1d9bc:	ea45 4501 	orr.w	r5, r5, r1, lsl #16
   1d9c0:	42af      	cmp	r7, r5
   1d9c2:	d908      	bls.n	1d9d6 <__udivdi3+0x126>
   1d9c4:	192c      	adds	r4, r5, r4
   1d9c6:	f102 31ff 	add.w	r1, r2, #4294967295
   1d9ca:	f080 809b 	bcs.w	1db04 <__udivdi3+0x254>
   1d9ce:	42a7      	cmp	r7, r4
   1d9d0:	f240 8098 	bls.w	1db04 <__udivdi3+0x254>
   1d9d4:	3a02      	subs	r2, #2
   1d9d6:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
   1d9da:	4610      	mov	r0, r2
   1d9dc:	4619      	mov	r1, r3
   1d9de:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   1d9e2:	4770      	bx	lr
   1d9e4:	2300      	movs	r3, #0
   1d9e6:	461a      	mov	r2, r3
   1d9e8:	4610      	mov	r0, r2
   1d9ea:	4619      	mov	r1, r3
   1d9ec:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   1d9f0:	4770      	bx	lr
   1d9f2:	f1c6 0520 	rsb	r5, r6, #32
   1d9f6:	fa22 f705 	lsr.w	r7, r2, r5
   1d9fa:	fa03 f406 	lsl.w	r4, r3, r6
   1d9fe:	fa21 f305 	lsr.w	r3, r1, r5
   1da02:	fa01 fb06 	lsl.w	fp, r1, r6
   1da06:	fa20 f505 	lsr.w	r5, r0, r5
   1da0a:	433c      	orrs	r4, r7
   1da0c:	ea4f 4814 	mov.w	r8, r4, lsr #16
   1da10:	fbb3 fcf8 	udiv	ip, r3, r8
   1da14:	fb08 331c 	mls	r3, r8, ip, r3
   1da18:	fa1f f984 	uxth.w	r9, r4
   1da1c:	fb09 fa0c 	mul.w	sl, r9, ip
   1da20:	ea45 0b0b 	orr.w	fp, r5, fp
   1da24:	ea4f 451b 	mov.w	r5, fp, lsr #16
   1da28:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
   1da2c:	459a      	cmp	sl, r3
   1da2e:	fa02 f206 	lsl.w	r2, r2, r6
   1da32:	d904      	bls.n	1da3e <__udivdi3+0x18e>
   1da34:	191b      	adds	r3, r3, r4
   1da36:	f10c 35ff 	add.w	r5, ip, #4294967295
   1da3a:	d36f      	bcc.n	1db1c <__udivdi3+0x26c>
   1da3c:	46ac      	mov	ip, r5
   1da3e:	ebca 0303 	rsb	r3, sl, r3
   1da42:	fbb3 f5f8 	udiv	r5, r3, r8
   1da46:	fb08 3315 	mls	r3, r8, r5, r3
   1da4a:	fb09 f905 	mul.w	r9, r9, r5
   1da4e:	fa1f fb8b 	uxth.w	fp, fp
   1da52:	ea4b 4703 	orr.w	r7, fp, r3, lsl #16
   1da56:	45b9      	cmp	r9, r7
   1da58:	d904      	bls.n	1da64 <__udivdi3+0x1b4>
   1da5a:	193f      	adds	r7, r7, r4
   1da5c:	f105 33ff 	add.w	r3, r5, #4294967295
   1da60:	d362      	bcc.n	1db28 <__udivdi3+0x278>
   1da62:	461d      	mov	r5, r3
   1da64:	ea45 4c0c 	orr.w	ip, r5, ip, lsl #16
   1da68:	fbac 2302 	umull	r2, r3, ip, r2
   1da6c:	ebc9 0707 	rsb	r7, r9, r7
   1da70:	429f      	cmp	r7, r3
   1da72:	f04f 0500 	mov.w	r5, #0
   1da76:	d34a      	bcc.n	1db0e <__udivdi3+0x25e>
   1da78:	d046      	beq.n	1db08 <__udivdi3+0x258>
   1da7a:	4662      	mov	r2, ip
   1da7c:	462b      	mov	r3, r5
   1da7e:	e75d      	b.n	1d93c <__udivdi3+0x8c>
   1da80:	4094      	lsls	r4, r2
   1da82:	f1c2 0920 	rsb	r9, r2, #32
   1da86:	fa21 fc09 	lsr.w	ip, r1, r9
   1da8a:	4091      	lsls	r1, r2
   1da8c:	fa20 f909 	lsr.w	r9, r0, r9
   1da90:	0c26      	lsrs	r6, r4, #16
   1da92:	fbbc f8f6 	udiv	r8, ip, r6
   1da96:	fb06 cc18 	mls	ip, r6, r8, ip
   1da9a:	b2a7      	uxth	r7, r4
   1da9c:	fb07 f308 	mul.w	r3, r7, r8
   1daa0:	ea49 0901 	orr.w	r9, r9, r1
   1daa4:	ea4f 4119 	mov.w	r1, r9, lsr #16
   1daa8:	ea41 4c0c 	orr.w	ip, r1, ip, lsl #16
   1daac:	4563      	cmp	r3, ip
   1daae:	fa00 f502 	lsl.w	r5, r0, r2
   1dab2:	d909      	bls.n	1dac8 <__udivdi3+0x218>
   1dab4:	eb1c 0c04 	adds.w	ip, ip, r4
   1dab8:	f108 32ff 	add.w	r2, r8, #4294967295
   1dabc:	d23b      	bcs.n	1db36 <__udivdi3+0x286>
   1dabe:	4563      	cmp	r3, ip
   1dac0:	d939      	bls.n	1db36 <__udivdi3+0x286>
   1dac2:	f1a8 0802 	sub.w	r8, r8, #2
   1dac6:	44a4      	add	ip, r4
   1dac8:	ebc3 0c0c 	rsb	ip, r3, ip
   1dacc:	fbbc f3f6 	udiv	r3, ip, r6
   1dad0:	fb06 c113 	mls	r1, r6, r3, ip
   1dad4:	fb07 f203 	mul.w	r2, r7, r3
   1dad8:	fa1f f989 	uxth.w	r9, r9
   1dadc:	ea49 4101 	orr.w	r1, r9, r1, lsl #16
   1dae0:	428a      	cmp	r2, r1
   1dae2:	d907      	bls.n	1daf4 <__udivdi3+0x244>
   1dae4:	1909      	adds	r1, r1, r4
   1dae6:	f103 30ff 	add.w	r0, r3, #4294967295
   1daea:	d222      	bcs.n	1db32 <__udivdi3+0x282>
   1daec:	428a      	cmp	r2, r1
   1daee:	d920      	bls.n	1db32 <__udivdi3+0x282>
   1daf0:	3b02      	subs	r3, #2
   1daf2:	4421      	add	r1, r4
   1daf4:	1a89      	subs	r1, r1, r2
   1daf6:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
   1dafa:	e743      	b.n	1d984 <__udivdi3+0xd4>
   1dafc:	463a      	mov	r2, r7
   1dafe:	e705      	b.n	1d90c <__udivdi3+0x5c>
   1db00:	4633      	mov	r3, r6
   1db02:	e718      	b.n	1d936 <__udivdi3+0x86>
   1db04:	460a      	mov	r2, r1
   1db06:	e766      	b.n	1d9d6 <__udivdi3+0x126>
   1db08:	40b0      	lsls	r0, r6
   1db0a:	4290      	cmp	r0, r2
   1db0c:	d2b5      	bcs.n	1da7a <__udivdi3+0x1ca>
   1db0e:	f10c 32ff 	add.w	r2, ip, #4294967295
   1db12:	2300      	movs	r3, #0
   1db14:	e712      	b.n	1d93c <__udivdi3+0x8c>
   1db16:	4633      	mov	r3, r6
   1db18:	4632      	mov	r2, r6
   1db1a:	e70f      	b.n	1d93c <__udivdi3+0x8c>
   1db1c:	459a      	cmp	sl, r3
   1db1e:	d98d      	bls.n	1da3c <__udivdi3+0x18c>
   1db20:	f1ac 0c02 	sub.w	ip, ip, #2
   1db24:	4423      	add	r3, r4
   1db26:	e78a      	b.n	1da3e <__udivdi3+0x18e>
   1db28:	45b9      	cmp	r9, r7
   1db2a:	d99a      	bls.n	1da62 <__udivdi3+0x1b2>
   1db2c:	3d02      	subs	r5, #2
   1db2e:	4427      	add	r7, r4
   1db30:	e798      	b.n	1da64 <__udivdi3+0x1b4>
   1db32:	4603      	mov	r3, r0
   1db34:	e7de      	b.n	1daf4 <__udivdi3+0x244>
   1db36:	4690      	mov	r8, r2
   1db38:	e7c6      	b.n	1dac8 <__udivdi3+0x218>
   1db3a:	3802      	subs	r0, #2
   1db3c:	4421      	add	r1, r4
   1db3e:	e735      	b.n	1d9ac <__udivdi3+0xfc>

0001db40 <abort>:
abort():
   1db40:	b508      	push	{r3, lr}
   1db42:	2006      	movs	r0, #6
   1db44:	f001 f8f0 	bl	1ed28 <raise>
   1db48:	2001      	movs	r0, #1
   1db4a:	f7f2 fc05 	bl	10358 <_exit>

0001db4e <atoi>:
atoi():
   1db4e:	2100      	movs	r1, #0
   1db50:	220a      	movs	r2, #10
   1db52:	f002 b939 	b.w	1fdc8 <strtol>

0001db56 <ctime>:
ctime():
   1db56:	b508      	push	{r3, lr}
   1db58:	f000 f922 	bl	1dda0 <localtime>
   1db5c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
   1db60:	f004 b864 	b.w	21c2c <asctime>

0001db64 <_cleanup_r>:
_cleanup_r():
   1db64:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1db66:	4607      	mov	r7, r0
   1db68:	f100 0448 	add.w	r4, r0, #72	; 0x48
   1db6c:	b194      	cbz	r4, 1db94 <_cleanup_r+0x30>
   1db6e:	68a5      	ldr	r5, [r4, #8]
   1db70:	6866      	ldr	r6, [r4, #4]
   1db72:	3e01      	subs	r6, #1
   1db74:	d40c      	bmi.n	1db90 <_cleanup_r+0x2c>
   1db76:	89ab      	ldrh	r3, [r5, #12]
   1db78:	2b01      	cmp	r3, #1
   1db7a:	d907      	bls.n	1db8c <_cleanup_r+0x28>
   1db7c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
   1db80:	3301      	adds	r3, #1
   1db82:	d003      	beq.n	1db8c <_cleanup_r+0x28>
   1db84:	4638      	mov	r0, r7
   1db86:	4629      	mov	r1, r5
   1db88:	f004 ff86 	bl	22a98 <_fflush_r>
   1db8c:	3568      	adds	r5, #104	; 0x68
   1db8e:	e7f0      	b.n	1db72 <_cleanup_r+0xe>
   1db90:	6824      	ldr	r4, [r4, #0]
   1db92:	e7eb      	b.n	1db6c <_cleanup_r+0x8>
   1db94:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0001db98 <std.isra.0>:
std.isra.0():
   1db98:	2300      	movs	r3, #0
   1db9a:	b510      	push	{r4, lr}
   1db9c:	4604      	mov	r4, r0
   1db9e:	6003      	str	r3, [r0, #0]
   1dba0:	6043      	str	r3, [r0, #4]
   1dba2:	6083      	str	r3, [r0, #8]
   1dba4:	8181      	strh	r1, [r0, #12]
   1dba6:	6643      	str	r3, [r0, #100]	; 0x64
   1dba8:	81c2      	strh	r2, [r0, #14]
   1dbaa:	6103      	str	r3, [r0, #16]
   1dbac:	6143      	str	r3, [r0, #20]
   1dbae:	6183      	str	r3, [r0, #24]
   1dbb0:	4619      	mov	r1, r3
   1dbb2:	305c      	adds	r0, #92	; 0x5c
   1dbb4:	2208      	movs	r2, #8
   1dbb6:	f000 f95a 	bl	1de6e <memset>
   1dbba:	4b05      	ldr	r3, [pc, #20]	; (1dbd0 <std.isra.0+0x38>)
   1dbbc:	6224      	str	r4, [r4, #32]
   1dbbe:	6263      	str	r3, [r4, #36]	; 0x24
   1dbc0:	4b04      	ldr	r3, [pc, #16]	; (1dbd4 <std.isra.0+0x3c>)
   1dbc2:	62a3      	str	r3, [r4, #40]	; 0x28
   1dbc4:	4b04      	ldr	r3, [pc, #16]	; (1dbd8 <std.isra.0+0x40>)
   1dbc6:	62e3      	str	r3, [r4, #44]	; 0x2c
   1dbc8:	4b04      	ldr	r3, [pc, #16]	; (1dbdc <std.isra.0+0x44>)
   1dbca:	6323      	str	r3, [r4, #48]	; 0x30
   1dbcc:	bd10      	pop	{r4, pc}
   1dbce:	bf00      	nop
   1dbd0:	0001eda9 	.word	0x0001eda9
   1dbd4:	0001edcf 	.word	0x0001edcf
   1dbd8:	0001ee07 	.word	0x0001ee07
   1dbdc:	0001ee2b 	.word	0x0001ee2b

0001dbe0 <__sfmoreglue>:
__sfmoreglue():
   1dbe0:	b570      	push	{r4, r5, r6, lr}
   1dbe2:	1e4b      	subs	r3, r1, #1
   1dbe4:	2568      	movs	r5, #104	; 0x68
   1dbe6:	435d      	muls	r5, r3
   1dbe8:	460e      	mov	r6, r1
   1dbea:	f105 0174 	add.w	r1, r5, #116	; 0x74
   1dbee:	f000 fdf1 	bl	1e7d4 <_malloc_r>
   1dbf2:	4604      	mov	r4, r0
   1dbf4:	b140      	cbz	r0, 1dc08 <__sfmoreglue+0x28>
   1dbf6:	2100      	movs	r1, #0
   1dbf8:	e880 0042 	stmia.w	r0, {r1, r6}
   1dbfc:	300c      	adds	r0, #12
   1dbfe:	60a0      	str	r0, [r4, #8]
   1dc00:	f105 0268 	add.w	r2, r5, #104	; 0x68
   1dc04:	f000 f933 	bl	1de6e <memset>
   1dc08:	4620      	mov	r0, r4
   1dc0a:	bd70      	pop	{r4, r5, r6, pc}

0001dc0c <__sinit>:
__sinit():
   1dc0c:	6983      	ldr	r3, [r0, #24]
   1dc0e:	b510      	push	{r4, lr}
   1dc10:	4604      	mov	r4, r0
   1dc12:	bb33      	cbnz	r3, 1dc62 <__sinit+0x56>
   1dc14:	6483      	str	r3, [r0, #72]	; 0x48
   1dc16:	64c3      	str	r3, [r0, #76]	; 0x4c
   1dc18:	6503      	str	r3, [r0, #80]	; 0x50
   1dc1a:	4b12      	ldr	r3, [pc, #72]	; (1dc64 <__sinit+0x58>)
   1dc1c:	4a12      	ldr	r2, [pc, #72]	; (1dc68 <__sinit+0x5c>)
   1dc1e:	681b      	ldr	r3, [r3, #0]
   1dc20:	6282      	str	r2, [r0, #40]	; 0x28
   1dc22:	4298      	cmp	r0, r3
   1dc24:	bf04      	itt	eq
   1dc26:	2301      	moveq	r3, #1
   1dc28:	6183      	streq	r3, [r0, #24]
   1dc2a:	f000 f81f 	bl	1dc6c <__sfp>
   1dc2e:	6060      	str	r0, [r4, #4]
   1dc30:	4620      	mov	r0, r4
   1dc32:	f000 f81b 	bl	1dc6c <__sfp>
   1dc36:	60a0      	str	r0, [r4, #8]
   1dc38:	4620      	mov	r0, r4
   1dc3a:	f000 f817 	bl	1dc6c <__sfp>
   1dc3e:	2104      	movs	r1, #4
   1dc40:	60e0      	str	r0, [r4, #12]
   1dc42:	2200      	movs	r2, #0
   1dc44:	6860      	ldr	r0, [r4, #4]
   1dc46:	f7ff ffa7 	bl	1db98 <std.isra.0>
   1dc4a:	68a0      	ldr	r0, [r4, #8]
   1dc4c:	2109      	movs	r1, #9
   1dc4e:	2201      	movs	r2, #1
   1dc50:	f7ff ffa2 	bl	1db98 <std.isra.0>
   1dc54:	68e0      	ldr	r0, [r4, #12]
   1dc56:	2112      	movs	r1, #18
   1dc58:	2202      	movs	r2, #2
   1dc5a:	f7ff ff9d 	bl	1db98 <std.isra.0>
   1dc5e:	2301      	movs	r3, #1
   1dc60:	61a3      	str	r3, [r4, #24]
   1dc62:	bd10      	pop	{r4, pc}
   1dc64:	00027130 	.word	0x00027130
   1dc68:	0001db65 	.word	0x0001db65

0001dc6c <__sfp>:
__sfp():
   1dc6c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1dc6e:	4b1b      	ldr	r3, [pc, #108]	; (1dcdc <__sfp+0x70>)
   1dc70:	4607      	mov	r7, r0
   1dc72:	681e      	ldr	r6, [r3, #0]
   1dc74:	69b3      	ldr	r3, [r6, #24]
   1dc76:	b913      	cbnz	r3, 1dc7e <__sfp+0x12>
   1dc78:	4630      	mov	r0, r6
   1dc7a:	f7ff ffc7 	bl	1dc0c <__sinit>
   1dc7e:	3648      	adds	r6, #72	; 0x48
   1dc80:	68b4      	ldr	r4, [r6, #8]
   1dc82:	6873      	ldr	r3, [r6, #4]
   1dc84:	3b01      	subs	r3, #1
   1dc86:	d404      	bmi.n	1dc92 <__sfp+0x26>
   1dc88:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
   1dc8c:	b175      	cbz	r5, 1dcac <__sfp+0x40>
   1dc8e:	3468      	adds	r4, #104	; 0x68
   1dc90:	e7f8      	b.n	1dc84 <__sfp+0x18>
   1dc92:	6833      	ldr	r3, [r6, #0]
   1dc94:	b92b      	cbnz	r3, 1dca2 <__sfp+0x36>
   1dc96:	4638      	mov	r0, r7
   1dc98:	2104      	movs	r1, #4
   1dc9a:	f7ff ffa1 	bl	1dbe0 <__sfmoreglue>
   1dc9e:	6030      	str	r0, [r6, #0]
   1dca0:	b108      	cbz	r0, 1dca6 <__sfp+0x3a>
   1dca2:	6836      	ldr	r6, [r6, #0]
   1dca4:	e7ec      	b.n	1dc80 <__sfp+0x14>
   1dca6:	230c      	movs	r3, #12
   1dca8:	603b      	str	r3, [r7, #0]
   1dcaa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1dcac:	f64f 73ff 	movw	r3, #65535	; 0xffff
   1dcb0:	81e3      	strh	r3, [r4, #14]
   1dcb2:	2301      	movs	r3, #1
   1dcb4:	81a3      	strh	r3, [r4, #12]
   1dcb6:	6665      	str	r5, [r4, #100]	; 0x64
   1dcb8:	6025      	str	r5, [r4, #0]
   1dcba:	60a5      	str	r5, [r4, #8]
   1dcbc:	6065      	str	r5, [r4, #4]
   1dcbe:	6125      	str	r5, [r4, #16]
   1dcc0:	6165      	str	r5, [r4, #20]
   1dcc2:	61a5      	str	r5, [r4, #24]
   1dcc4:	f104 005c 	add.w	r0, r4, #92	; 0x5c
   1dcc8:	4629      	mov	r1, r5
   1dcca:	2208      	movs	r2, #8
   1dccc:	f000 f8cf 	bl	1de6e <memset>
   1dcd0:	6365      	str	r5, [r4, #52]	; 0x34
   1dcd2:	63a5      	str	r5, [r4, #56]	; 0x38
   1dcd4:	64a5      	str	r5, [r4, #72]	; 0x48
   1dcd6:	64e5      	str	r5, [r4, #76]	; 0x4c
   1dcd8:	4620      	mov	r0, r4
   1dcda:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1dcdc:	00027130 	.word	0x00027130

0001dce0 <_fwalk>:
_fwalk():
   1dce0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1dce4:	4688      	mov	r8, r1
   1dce6:	f100 0448 	add.w	r4, r0, #72	; 0x48
   1dcea:	2600      	movs	r6, #0
   1dcec:	b18c      	cbz	r4, 1dd12 <_fwalk+0x32>
   1dcee:	68a5      	ldr	r5, [r4, #8]
   1dcf0:	6867      	ldr	r7, [r4, #4]
   1dcf2:	3f01      	subs	r7, #1
   1dcf4:	d40b      	bmi.n	1dd0e <_fwalk+0x2e>
   1dcf6:	89ab      	ldrh	r3, [r5, #12]
   1dcf8:	2b01      	cmp	r3, #1
   1dcfa:	d906      	bls.n	1dd0a <_fwalk+0x2a>
   1dcfc:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
   1dd00:	3301      	adds	r3, #1
   1dd02:	d002      	beq.n	1dd0a <_fwalk+0x2a>
   1dd04:	4628      	mov	r0, r5
   1dd06:	47c0      	blx	r8
   1dd08:	4306      	orrs	r6, r0
   1dd0a:	3568      	adds	r5, #104	; 0x68
   1dd0c:	e7f1      	b.n	1dcf2 <_fwalk+0x12>
   1dd0e:	6824      	ldr	r4, [r4, #0]
   1dd10:	e7ec      	b.n	1dcec <_fwalk+0xc>
   1dd12:	4630      	mov	r0, r6
   1dd14:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0001dd18 <_fwalk_reent>:
_fwalk_reent():
   1dd18:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   1dd1c:	4680      	mov	r8, r0
   1dd1e:	4689      	mov	r9, r1
   1dd20:	f100 0448 	add.w	r4, r0, #72	; 0x48
   1dd24:	2600      	movs	r6, #0
   1dd26:	b194      	cbz	r4, 1dd4e <_fwalk_reent+0x36>
   1dd28:	68a5      	ldr	r5, [r4, #8]
   1dd2a:	6867      	ldr	r7, [r4, #4]
   1dd2c:	3f01      	subs	r7, #1
   1dd2e:	d40c      	bmi.n	1dd4a <_fwalk_reent+0x32>
   1dd30:	89ab      	ldrh	r3, [r5, #12]
   1dd32:	2b01      	cmp	r3, #1
   1dd34:	d907      	bls.n	1dd46 <_fwalk_reent+0x2e>
   1dd36:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
   1dd3a:	3301      	adds	r3, #1
   1dd3c:	d003      	beq.n	1dd46 <_fwalk_reent+0x2e>
   1dd3e:	4640      	mov	r0, r8
   1dd40:	4629      	mov	r1, r5
   1dd42:	47c8      	blx	r9
   1dd44:	4306      	orrs	r6, r0
   1dd46:	3568      	adds	r5, #104	; 0x68
   1dd48:	e7f0      	b.n	1dd2c <_fwalk_reent+0x14>
   1dd4a:	6824      	ldr	r4, [r4, #0]
   1dd4c:	e7eb      	b.n	1dd26 <_fwalk_reent+0xe>
   1dd4e:	4630      	mov	r0, r6
   1dd50:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

0001dd54 <__libc_init_array>:
__libc_init_array():
   1dd54:	b570      	push	{r4, r5, r6, lr}
   1dd56:	4b0e      	ldr	r3, [pc, #56]	; (1dd90 <__libc_init_array+0x3c>)
   1dd58:	4d0e      	ldr	r5, [pc, #56]	; (1dd94 <__libc_init_array+0x40>)
   1dd5a:	2400      	movs	r4, #0
   1dd5c:	1aed      	subs	r5, r5, r3
   1dd5e:	10ad      	asrs	r5, r5, #2
   1dd60:	461e      	mov	r6, r3
   1dd62:	42ac      	cmp	r4, r5
   1dd64:	d004      	beq.n	1dd70 <__libc_init_array+0x1c>
   1dd66:	f856 2024 	ldr.w	r2, [r6, r4, lsl #2]
   1dd6a:	4790      	blx	r2
   1dd6c:	3401      	adds	r4, #1
   1dd6e:	e7f8      	b.n	1dd62 <__libc_init_array+0xe>
   1dd70:	f7f2 fafc 	bl	1036c <_init>
   1dd74:	4d08      	ldr	r5, [pc, #32]	; (1dd98 <__libc_init_array+0x44>)
   1dd76:	4b09      	ldr	r3, [pc, #36]	; (1dd9c <__libc_init_array+0x48>)
   1dd78:	2400      	movs	r4, #0
   1dd7a:	1aed      	subs	r5, r5, r3
   1dd7c:	10ad      	asrs	r5, r5, #2
   1dd7e:	461e      	mov	r6, r3
   1dd80:	42ac      	cmp	r4, r5
   1dd82:	d004      	beq.n	1dd8e <__libc_init_array+0x3a>
   1dd84:	f856 2024 	ldr.w	r2, [r6, r4, lsl #2]
   1dd88:	4790      	blx	r2
   1dd8a:	3401      	adds	r4, #1
   1dd8c:	e7f8      	b.n	1dd80 <__libc_init_array+0x2c>
   1dd8e:	bd70      	pop	{r4, r5, r6, pc}
   1dd90:	0002742c 	.word	0x0002742c
   1dd94:	0002742c 	.word	0x0002742c
   1dd98:	00027430 	.word	0x00027430
   1dd9c:	0002742c 	.word	0x0002742c

0001dda0 <localtime>:
localtime():
   1dda0:	b538      	push	{r3, r4, r5, lr}
   1dda2:	4b07      	ldr	r3, [pc, #28]	; (1ddc0 <localtime+0x20>)
   1dda4:	4605      	mov	r5, r0
   1dda6:	681c      	ldr	r4, [r3, #0]
   1dda8:	6be3      	ldr	r3, [r4, #60]	; 0x3c
   1ddaa:	b91b      	cbnz	r3, 1ddb4 <localtime+0x14>
   1ddac:	2024      	movs	r0, #36	; 0x24
   1ddae:	f000 f80d 	bl	1ddcc <malloc>
   1ddb2:	63e0      	str	r0, [r4, #60]	; 0x3c
   1ddb4:	4628      	mov	r0, r5
   1ddb6:	6be1      	ldr	r1, [r4, #60]	; 0x3c
   1ddb8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   1ddbc:	f000 b802 	b.w	1ddc4 <localtime_r>
   1ddc0:	2007c150 	.word	0x2007c150

0001ddc4 <localtime_r>:
localtime_r():
   1ddc4:	2200      	movs	r2, #0
   1ddc6:	f000 bb41 	b.w	1e44c <_mktm_r>
	...

0001ddcc <malloc>:
malloc():
   1ddcc:	4b02      	ldr	r3, [pc, #8]	; (1ddd8 <malloc+0xc>)
   1ddce:	4601      	mov	r1, r0
   1ddd0:	6818      	ldr	r0, [r3, #0]
   1ddd2:	f000 bcff 	b.w	1e7d4 <_malloc_r>
   1ddd6:	bf00      	nop
   1ddd8:	2007c150 	.word	0x2007c150

0001dddc <free>:
free():
   1dddc:	4b02      	ldr	r3, [pc, #8]	; (1dde8 <free+0xc>)
   1ddde:	4601      	mov	r1, r0
   1dde0:	6818      	ldr	r0, [r3, #0]
   1dde2:	f000 bc85 	b.w	1e6f0 <_free_r>
   1dde6:	bf00      	nop
   1dde8:	2007c150 	.word	0x2007c150

0001ddec <memchr>:
memchr():
   1ddec:	b510      	push	{r4, lr}
   1ddee:	b2c9      	uxtb	r1, r1
   1ddf0:	4402      	add	r2, r0
   1ddf2:	4290      	cmp	r0, r2
   1ddf4:	4603      	mov	r3, r0
   1ddf6:	d005      	beq.n	1de04 <memchr+0x18>
   1ddf8:	781c      	ldrb	r4, [r3, #0]
   1ddfa:	3001      	adds	r0, #1
   1ddfc:	428c      	cmp	r4, r1
   1ddfe:	d1f8      	bne.n	1ddf2 <memchr+0x6>
   1de00:	4618      	mov	r0, r3
   1de02:	bd10      	pop	{r4, pc}
   1de04:	2000      	movs	r0, #0
   1de06:	bd10      	pop	{r4, pc}

0001de08 <memcmp>:
memcmp():
   1de08:	b530      	push	{r4, r5, lr}
   1de0a:	2300      	movs	r3, #0
   1de0c:	4293      	cmp	r3, r2
   1de0e:	d008      	beq.n	1de22 <memcmp+0x1a>
   1de10:	5cc5      	ldrb	r5, [r0, r3]
   1de12:	3301      	adds	r3, #1
   1de14:	18cc      	adds	r4, r1, r3
   1de16:	f814 4c01 	ldrb.w	r4, [r4, #-1]
   1de1a:	42a5      	cmp	r5, r4
   1de1c:	d0f6      	beq.n	1de0c <memcmp+0x4>
   1de1e:	1b28      	subs	r0, r5, r4
   1de20:	bd30      	pop	{r4, r5, pc}
   1de22:	2000      	movs	r0, #0
   1de24:	bd30      	pop	{r4, r5, pc}

0001de26 <memcpy>:
memcpy():
   1de26:	b510      	push	{r4, lr}
   1de28:	2300      	movs	r3, #0
   1de2a:	4293      	cmp	r3, r2
   1de2c:	d003      	beq.n	1de36 <memcpy+0x10>
   1de2e:	5ccc      	ldrb	r4, [r1, r3]
   1de30:	54c4      	strb	r4, [r0, r3]
   1de32:	3301      	adds	r3, #1
   1de34:	e7f9      	b.n	1de2a <memcpy+0x4>
   1de36:	bd10      	pop	{r4, pc}

0001de38 <memmove>:
memmove():
   1de38:	4281      	cmp	r1, r0
   1de3a:	b570      	push	{r4, r5, r6, lr}
   1de3c:	d301      	bcc.n	1de42 <memmove+0xa>
   1de3e:	2300      	movs	r3, #0
   1de40:	e00e      	b.n	1de60 <memmove+0x28>
   1de42:	188c      	adds	r4, r1, r2
   1de44:	42a0      	cmp	r0, r4
   1de46:	d2fa      	bcs.n	1de3e <memmove+0x6>
   1de48:	1885      	adds	r5, r0, r2
   1de4a:	4613      	mov	r3, r2
   1de4c:	f113 33ff 	adds.w	r3, r3, #4294967295
   1de50:	d305      	bcc.n	1de5e <memmove+0x26>
   1de52:	4251      	negs	r1, r2
   1de54:	1866      	adds	r6, r4, r1
   1de56:	5cf6      	ldrb	r6, [r6, r3]
   1de58:	4429      	add	r1, r5
   1de5a:	54ce      	strb	r6, [r1, r3]
   1de5c:	e7f6      	b.n	1de4c <memmove+0x14>
   1de5e:	bd70      	pop	{r4, r5, r6, pc}
   1de60:	4293      	cmp	r3, r2
   1de62:	d003      	beq.n	1de6c <memmove+0x34>
   1de64:	5ccc      	ldrb	r4, [r1, r3]
   1de66:	54c4      	strb	r4, [r0, r3]
   1de68:	3301      	adds	r3, #1
   1de6a:	e7f9      	b.n	1de60 <memmove+0x28>
   1de6c:	bd70      	pop	{r4, r5, r6, pc}

0001de6e <memset>:
memset():
   1de6e:	4402      	add	r2, r0
   1de70:	4603      	mov	r3, r0
   1de72:	4293      	cmp	r3, r2
   1de74:	d002      	beq.n	1de7c <memset+0xe>
   1de76:	f803 1b01 	strb.w	r1, [r3], #1
   1de7a:	e7fa      	b.n	1de72 <memset+0x4>
   1de7c:	4770      	bx	lr
	...

0001de80 <validate_structure>:
validate_structure():
   1de80:	b537      	push	{r0, r1, r2, r4, r5, lr}
   1de82:	6801      	ldr	r1, [r0, #0]
   1de84:	4604      	mov	r4, r0
   1de86:	293b      	cmp	r1, #59	; 0x3b
   1de88:	d910      	bls.n	1deac <validate_structure+0x2c>
   1de8a:	223c      	movs	r2, #60	; 0x3c
   1de8c:	4668      	mov	r0, sp
   1de8e:	f003 ff19 	bl	21cc4 <div>
   1de92:	6861      	ldr	r1, [r4, #4]
   1de94:	9b01      	ldr	r3, [sp, #4]
   1de96:	9a00      	ldr	r2, [sp, #0]
   1de98:	2b00      	cmp	r3, #0
   1de9a:	440a      	add	r2, r1
   1de9c:	6062      	str	r2, [r4, #4]
   1de9e:	db01      	blt.n	1dea4 <validate_structure+0x24>
   1dea0:	6023      	str	r3, [r4, #0]
   1dea2:	e003      	b.n	1deac <validate_structure+0x2c>
   1dea4:	333c      	adds	r3, #60	; 0x3c
   1dea6:	3a01      	subs	r2, #1
   1dea8:	6023      	str	r3, [r4, #0]
   1deaa:	6062      	str	r2, [r4, #4]
   1deac:	6861      	ldr	r1, [r4, #4]
   1deae:	293b      	cmp	r1, #59	; 0x3b
   1deb0:	d910      	bls.n	1ded4 <validate_structure+0x54>
   1deb2:	223c      	movs	r2, #60	; 0x3c
   1deb4:	4668      	mov	r0, sp
   1deb6:	f003 ff05 	bl	21cc4 <div>
   1deba:	68a1      	ldr	r1, [r4, #8]
   1debc:	9b01      	ldr	r3, [sp, #4]
   1debe:	9a00      	ldr	r2, [sp, #0]
   1dec0:	2b00      	cmp	r3, #0
   1dec2:	440a      	add	r2, r1
   1dec4:	60a2      	str	r2, [r4, #8]
   1dec6:	db01      	blt.n	1decc <validate_structure+0x4c>
   1dec8:	6063      	str	r3, [r4, #4]
   1deca:	e003      	b.n	1ded4 <validate_structure+0x54>
   1decc:	333c      	adds	r3, #60	; 0x3c
   1dece:	3a01      	subs	r2, #1
   1ded0:	6063      	str	r3, [r4, #4]
   1ded2:	60a2      	str	r2, [r4, #8]
   1ded4:	68a1      	ldr	r1, [r4, #8]
   1ded6:	2917      	cmp	r1, #23
   1ded8:	d910      	bls.n	1defc <validate_structure+0x7c>
   1deda:	2218      	movs	r2, #24
   1dedc:	4668      	mov	r0, sp
   1dede:	f003 fef1 	bl	21cc4 <div>
   1dee2:	68e1      	ldr	r1, [r4, #12]
   1dee4:	9b01      	ldr	r3, [sp, #4]
   1dee6:	9a00      	ldr	r2, [sp, #0]
   1dee8:	2b00      	cmp	r3, #0
   1deea:	440a      	add	r2, r1
   1deec:	60e2      	str	r2, [r4, #12]
   1deee:	db01      	blt.n	1def4 <validate_structure+0x74>
   1def0:	60a3      	str	r3, [r4, #8]
   1def2:	e003      	b.n	1defc <validate_structure+0x7c>
   1def4:	3318      	adds	r3, #24
   1def6:	3a01      	subs	r2, #1
   1def8:	60a3      	str	r3, [r4, #8]
   1defa:	60e2      	str	r2, [r4, #12]
   1defc:	6921      	ldr	r1, [r4, #16]
   1defe:	290b      	cmp	r1, #11
   1df00:	d910      	bls.n	1df24 <validate_structure+0xa4>
   1df02:	220c      	movs	r2, #12
   1df04:	4668      	mov	r0, sp
   1df06:	f003 fedd 	bl	21cc4 <div>
   1df0a:	6961      	ldr	r1, [r4, #20]
   1df0c:	9b01      	ldr	r3, [sp, #4]
   1df0e:	9a00      	ldr	r2, [sp, #0]
   1df10:	2b00      	cmp	r3, #0
   1df12:	440a      	add	r2, r1
   1df14:	6162      	str	r2, [r4, #20]
   1df16:	db01      	blt.n	1df1c <validate_structure+0x9c>
   1df18:	6123      	str	r3, [r4, #16]
   1df1a:	e003      	b.n	1df24 <validate_structure+0xa4>
   1df1c:	330c      	adds	r3, #12
   1df1e:	3a01      	subs	r2, #1
   1df20:	6123      	str	r3, [r4, #16]
   1df22:	6162      	str	r2, [r4, #20]
   1df24:	6963      	ldr	r3, [r4, #20]
   1df26:	079d      	lsls	r5, r3, #30
   1df28:	d112      	bne.n	1df50 <validate_structure+0xd0>
   1df2a:	2264      	movs	r2, #100	; 0x64
   1df2c:	fb93 f1f2 	sdiv	r1, r3, r2
   1df30:	fb02 3211 	mls	r2, r2, r1, r3
   1df34:	b972      	cbnz	r2, 1df54 <validate_structure+0xd4>
   1df36:	f203 736c 	addw	r3, r3, #1900	; 0x76c
   1df3a:	f44f 72c8 	mov.w	r2, #400	; 0x190
   1df3e:	fb93 f1f2 	sdiv	r1, r3, r2
   1df42:	fb02 3311 	mls	r3, r2, r1, r3
   1df46:	2b00      	cmp	r3, #0
   1df48:	bf0c      	ite	eq
   1df4a:	231d      	moveq	r3, #29
   1df4c:	231c      	movne	r3, #28
   1df4e:	e002      	b.n	1df56 <validate_structure+0xd6>
   1df50:	231c      	movs	r3, #28
   1df52:	e000      	b.n	1df56 <validate_structure+0xd6>
   1df54:	231d      	movs	r3, #29
   1df56:	68e2      	ldr	r2, [r4, #12]
   1df58:	2a00      	cmp	r2, #0
   1df5a:	dc37      	bgt.n	1dfcc <validate_structure+0x14c>
   1df5c:	68e2      	ldr	r2, [r4, #12]
   1df5e:	2a00      	cmp	r2, #0
   1df60:	dc5c      	bgt.n	1e01c <validate_structure+0x19c>
   1df62:	6921      	ldr	r1, [r4, #16]
   1df64:	3901      	subs	r1, #1
   1df66:	6121      	str	r1, [r4, #16]
   1df68:	3101      	adds	r1, #1
   1df6a:	d11c      	bne.n	1dfa6 <validate_structure+0x126>
   1df6c:	6961      	ldr	r1, [r4, #20]
   1df6e:	200b      	movs	r0, #11
   1df70:	1e4b      	subs	r3, r1, #1
   1df72:	6120      	str	r0, [r4, #16]
   1df74:	0798      	lsls	r0, r3, #30
   1df76:	6163      	str	r3, [r4, #20]
   1df78:	d112      	bne.n	1dfa0 <validate_structure+0x120>
   1df7a:	2064      	movs	r0, #100	; 0x64
   1df7c:	fb93 f5f0 	sdiv	r5, r3, r0
   1df80:	fb00 3315 	mls	r3, r0, r5, r3
   1df84:	b973      	cbnz	r3, 1dfa4 <validate_structure+0x124>
   1df86:	f201 716b 	addw	r1, r1, #1899	; 0x76b
   1df8a:	f44f 73c8 	mov.w	r3, #400	; 0x190
   1df8e:	fb91 f0f3 	sdiv	r0, r1, r3
   1df92:	fb03 1310 	mls	r3, r3, r0, r1
   1df96:	2b00      	cmp	r3, #0
   1df98:	bf0c      	ite	eq
   1df9a:	231d      	moveq	r3, #29
   1df9c:	231c      	movne	r3, #28
   1df9e:	e002      	b.n	1dfa6 <validate_structure+0x126>
   1dfa0:	231c      	movs	r3, #28
   1dfa2:	e000      	b.n	1dfa6 <validate_structure+0x126>
   1dfa4:	231d      	movs	r3, #29
   1dfa6:	6921      	ldr	r1, [r4, #16]
   1dfa8:	2901      	cmp	r1, #1
   1dfaa:	bf16      	itet	ne
   1dfac:	481c      	ldrne	r0, [pc, #112]	; (1e020 <validate_structure+0x1a0>)
   1dfae:	4619      	moveq	r1, r3
   1dfb0:	f850 1021 	ldrne.w	r1, [r0, r1, lsl #2]
   1dfb4:	440a      	add	r2, r1
   1dfb6:	60e2      	str	r2, [r4, #12]
   1dfb8:	e7d0      	b.n	1df5c <validate_structure+0xdc>
   1dfba:	429a      	cmp	r2, r3
   1dfbc:	dd2e      	ble.n	1e01c <validate_structure+0x19c>
   1dfbe:	4618      	mov	r0, r3
   1dfc0:	3101      	adds	r1, #1
   1dfc2:	1a10      	subs	r0, r2, r0
   1dfc4:	290c      	cmp	r1, #12
   1dfc6:	60e0      	str	r0, [r4, #12]
   1dfc8:	6121      	str	r1, [r4, #16]
   1dfca:	d009      	beq.n	1dfe0 <validate_structure+0x160>
   1dfcc:	6921      	ldr	r1, [r4, #16]
   1dfce:	68e2      	ldr	r2, [r4, #12]
   1dfd0:	2901      	cmp	r1, #1
   1dfd2:	d0f2      	beq.n	1dfba <validate_structure+0x13a>
   1dfd4:	4812      	ldr	r0, [pc, #72]	; (1e020 <validate_structure+0x1a0>)
   1dfd6:	f850 0021 	ldr.w	r0, [r0, r1, lsl #2]
   1dfda:	4282      	cmp	r2, r0
   1dfdc:	dcf0      	bgt.n	1dfc0 <validate_structure+0x140>
   1dfde:	e01d      	b.n	1e01c <validate_structure+0x19c>
   1dfe0:	6962      	ldr	r2, [r4, #20]
   1dfe2:	2100      	movs	r1, #0
   1dfe4:	1c53      	adds	r3, r2, #1
   1dfe6:	6121      	str	r1, [r4, #16]
   1dfe8:	0799      	lsls	r1, r3, #30
   1dfea:	6163      	str	r3, [r4, #20]
   1dfec:	d112      	bne.n	1e014 <validate_structure+0x194>
   1dfee:	2164      	movs	r1, #100	; 0x64
   1dff0:	fb93 f0f1 	sdiv	r0, r3, r1
   1dff4:	fb01 3310 	mls	r3, r1, r0, r3
   1dff8:	b973      	cbnz	r3, 1e018 <validate_structure+0x198>
   1dffa:	f202 726d 	addw	r2, r2, #1901	; 0x76d
   1dffe:	f44f 73c8 	mov.w	r3, #400	; 0x190
   1e002:	fb92 f1f3 	sdiv	r1, r2, r3
   1e006:	fb03 2311 	mls	r3, r3, r1, r2
   1e00a:	2b00      	cmp	r3, #0
   1e00c:	bf0c      	ite	eq
   1e00e:	231d      	moveq	r3, #29
   1e010:	231c      	movne	r3, #28
   1e012:	e7db      	b.n	1dfcc <validate_structure+0x14c>
   1e014:	231c      	movs	r3, #28
   1e016:	e7d9      	b.n	1dfcc <validate_structure+0x14c>
   1e018:	231d      	movs	r3, #29
   1e01a:	e7d7      	b.n	1dfcc <validate_structure+0x14c>
   1e01c:	b003      	add	sp, #12
   1e01e:	bd30      	pop	{r4, r5, pc}
   1e020:	00027164 	.word	0x00027164

0001e024 <mktime>:
mktime():
   1e024:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   1e028:	4604      	mov	r4, r0
   1e02a:	f005 f89f 	bl	2316c <__gettzinfo>
   1e02e:	4681      	mov	r9, r0
   1e030:	4620      	mov	r0, r4
   1e032:	f7ff ff25 	bl	1de80 <validate_structure>
   1e036:	6823      	ldr	r3, [r4, #0]
   1e038:	6862      	ldr	r2, [r4, #4]
   1e03a:	f04f 083c 	mov.w	r8, #60	; 0x3c
   1e03e:	fb08 3202 	mla	r2, r8, r2, r3
   1e042:	68a3      	ldr	r3, [r4, #8]
   1e044:	f44f 6861 	mov.w	r8, #3600	; 0xe10
   1e048:	fb08 2803 	mla	r8, r8, r3, r2
   1e04c:	6923      	ldr	r3, [r4, #16]
   1e04e:	4aa5      	ldr	r2, [pc, #660]	; (1e2e4 <mktime+0x2c0>)
   1e050:	68e5      	ldr	r5, [r4, #12]
   1e052:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
   1e056:	3d01      	subs	r5, #1
   1e058:	2b01      	cmp	r3, #1
   1e05a:	4415      	add	r5, r2
   1e05c:	6963      	ldr	r3, [r4, #20]
   1e05e:	dd11      	ble.n	1e084 <mktime+0x60>
   1e060:	079e      	lsls	r6, r3, #30
   1e062:	d10f      	bne.n	1e084 <mktime+0x60>
   1e064:	2264      	movs	r2, #100	; 0x64
   1e066:	fb93 f1f2 	sdiv	r1, r3, r2
   1e06a:	fb02 3211 	mls	r2, r2, r1, r3
   1e06e:	b942      	cbnz	r2, 1e082 <mktime+0x5e>
   1e070:	f203 716c 	addw	r1, r3, #1900	; 0x76c
   1e074:	f44f 72c8 	mov.w	r2, #400	; 0x190
   1e078:	fb91 f0f2 	sdiv	r0, r1, r2
   1e07c:	fb02 1210 	mls	r2, r2, r0, r1
   1e080:	b902      	cbnz	r2, 1e084 <mktime+0x60>
   1e082:	3501      	adds	r5, #1
   1e084:	f503 521c 	add.w	r2, r3, #9984	; 0x2700
   1e088:	3210      	adds	r2, #16
   1e08a:	f644 6120 	movw	r1, #20000	; 0x4e20
   1e08e:	428a      	cmp	r2, r1
   1e090:	61e5      	str	r5, [r4, #28]
   1e092:	461e      	mov	r6, r3
   1e094:	f200 8122 	bhi.w	1e2dc <mktime+0x2b8>
   1e098:	2b46      	cmp	r3, #70	; 0x46
   1e09a:	dd21      	ble.n	1e0e0 <mktime+0xbc>
   1e09c:	2246      	movs	r2, #70	; 0x46
   1e09e:	0790      	lsls	r0, r2, #30
   1e0a0:	d114      	bne.n	1e0cc <mktime+0xa8>
   1e0a2:	2164      	movs	r1, #100	; 0x64
   1e0a4:	fb92 f0f1 	sdiv	r0, r2, r1
   1e0a8:	fb01 2110 	mls	r1, r1, r0, r2
   1e0ac:	b989      	cbnz	r1, 1e0d2 <mktime+0xae>
   1e0ae:	f202 706c 	addw	r0, r2, #1900	; 0x76c
   1e0b2:	f44f 71c8 	mov.w	r1, #400	; 0x190
   1e0b6:	fb90 f7f1 	sdiv	r7, r0, r1
   1e0ba:	fb01 0117 	mls	r1, r1, r7, r0
   1e0be:	2900      	cmp	r1, #0
   1e0c0:	f240 116d 	movw	r1, #365	; 0x16d
   1e0c4:	bf08      	it	eq
   1e0c6:	f44f 71b7 	moveq.w	r1, #366	; 0x16e
   1e0ca:	e004      	b.n	1e0d6 <mktime+0xb2>
   1e0cc:	f240 116d 	movw	r1, #365	; 0x16d
   1e0d0:	e001      	b.n	1e0d6 <mktime+0xb2>
   1e0d2:	f44f 71b7 	mov.w	r1, #366	; 0x16e
   1e0d6:	3201      	adds	r2, #1
   1e0d8:	429a      	cmp	r2, r3
   1e0da:	440d      	add	r5, r1
   1e0dc:	d1df      	bne.n	1e09e <mktime+0x7a>
   1e0de:	e043      	b.n	1e168 <mktime+0x144>
   1e0e0:	d042      	beq.n	1e168 <mktime+0x144>
   1e0e2:	2245      	movs	r2, #69	; 0x45
   1e0e4:	429a      	cmp	r2, r3
   1e0e6:	dd1e      	ble.n	1e126 <mktime+0x102>
   1e0e8:	0791      	lsls	r1, r2, #30
   1e0ea:	d114      	bne.n	1e116 <mktime+0xf2>
   1e0ec:	2164      	movs	r1, #100	; 0x64
   1e0ee:	fb92 f0f1 	sdiv	r0, r2, r1
   1e0f2:	fb01 2110 	mls	r1, r1, r0, r2
   1e0f6:	b989      	cbnz	r1, 1e11c <mktime+0xf8>
   1e0f8:	f202 706c 	addw	r0, r2, #1900	; 0x76c
   1e0fc:	f44f 71c8 	mov.w	r1, #400	; 0x190
   1e100:	fb90 f6f1 	sdiv	r6, r0, r1
   1e104:	fb01 0116 	mls	r1, r1, r6, r0
   1e108:	2900      	cmp	r1, #0
   1e10a:	f240 116d 	movw	r1, #365	; 0x16d
   1e10e:	bf08      	it	eq
   1e110:	f44f 71b7 	moveq.w	r1, #366	; 0x16e
   1e114:	e004      	b.n	1e120 <mktime+0xfc>
   1e116:	f240 116d 	movw	r1, #365	; 0x16d
   1e11a:	e001      	b.n	1e120 <mktime+0xfc>
   1e11c:	f44f 71b7 	mov.w	r1, #366	; 0x16e
   1e120:	1a6d      	subs	r5, r5, r1
   1e122:	3a01      	subs	r2, #1
   1e124:	e7de      	b.n	1e0e4 <mktime+0xc0>
   1e126:	2b45      	cmp	r3, #69	; 0x45
   1e128:	bfb4      	ite	lt
   1e12a:	461e      	movlt	r6, r3
   1e12c:	2645      	movge	r6, #69	; 0x45
   1e12e:	07b7      	lsls	r7, r6, #30
   1e130:	d114      	bne.n	1e15c <mktime+0x138>
   1e132:	2364      	movs	r3, #100	; 0x64
   1e134:	fb96 f2f3 	sdiv	r2, r6, r3
   1e138:	fb03 6312 	mls	r3, r3, r2, r6
   1e13c:	b98b      	cbnz	r3, 1e162 <mktime+0x13e>
   1e13e:	f206 726c 	addw	r2, r6, #1900	; 0x76c
   1e142:	f44f 73c8 	mov.w	r3, #400	; 0x190
   1e146:	fb92 f1f3 	sdiv	r1, r2, r3
   1e14a:	fb03 2311 	mls	r3, r3, r1, r2
   1e14e:	2b00      	cmp	r3, #0
   1e150:	f240 136d 	movw	r3, #365	; 0x16d
   1e154:	bf08      	it	eq
   1e156:	f44f 73b7 	moveq.w	r3, #366	; 0x16e
   1e15a:	e004      	b.n	1e166 <mktime+0x142>
   1e15c:	f240 136d 	movw	r3, #365	; 0x16d
   1e160:	e001      	b.n	1e166 <mktime+0x142>
   1e162:	f44f 73b7 	mov.w	r3, #366	; 0x16e
   1e166:	1aed      	subs	r5, r5, r3
   1e168:	4b5f      	ldr	r3, [pc, #380]	; (1e2e8 <mktime+0x2c4>)
   1e16a:	fb03 8805 	mla	r8, r3, r5, r8
   1e16e:	f002 f963 	bl	20438 <__tz_lock>
   1e172:	4b5e      	ldr	r3, [pc, #376]	; (1e2ec <mktime+0x2c8>)
   1e174:	681f      	ldr	r7, [r3, #0]
   1e176:	2f00      	cmp	r7, #0
   1e178:	f000 809d 	beq.w	1e2b6 <mktime+0x292>
   1e17c:	6a23      	ldr	r3, [r4, #32]
   1e17e:	6960      	ldr	r0, [r4, #20]
   1e180:	2b01      	cmp	r3, #1
   1e182:	bfb4      	ite	lt
   1e184:	469a      	movlt	sl, r3
   1e186:	f04f 0a01 	movge.w	sl, #1
   1e18a:	f8d9 3004 	ldr.w	r3, [r9, #4]
   1e18e:	f200 706c 	addw	r0, r0, #1900	; 0x76c
   1e192:	4298      	cmp	r0, r3
   1e194:	d10d      	bne.n	1e1b2 <mktime+0x18e>
   1e196:	f8d9 2038 	ldr.w	r2, [r9, #56]	; 0x38
   1e19a:	f8d9 1020 	ldr.w	r1, [r9, #32]
   1e19e:	f8d9 303c 	ldr.w	r3, [r9, #60]	; 0x3c
   1e1a2:	f8d9 001c 	ldr.w	r0, [r9, #28]
   1e1a6:	1a57      	subs	r7, r2, r1
   1e1a8:	45b8      	cmp	r8, r7
   1e1aa:	ebc3 0000 	rsb	r0, r3, r0
   1e1ae:	da05      	bge.n	1e1bc <mktime+0x198>
   1e1b0:	e007      	b.n	1e1c2 <mktime+0x19e>
   1e1b2:	f000 f89d 	bl	1e2f0 <__tzcalc_limits>
   1e1b6:	2800      	cmp	r0, #0
   1e1b8:	d1ed      	bne.n	1e196 <mktime+0x172>
   1e1ba:	e076      	b.n	1e2aa <mktime+0x286>
   1e1bc:	1ad2      	subs	r2, r2, r3
   1e1be:	4590      	cmp	r8, r2
   1e1c0:	db73      	blt.n	1e2aa <mktime+0x286>
   1e1c2:	f8d9 2000 	ldr.w	r2, [r9]
   1e1c6:	b112      	cbz	r2, 1e1ce <mktime+0x1aa>
   1e1c8:	4580      	cmp	r8, r0
   1e1ca:	db07      	blt.n	1e1dc <mktime+0x1b8>
   1e1cc:	e001      	b.n	1e1d2 <mktime+0x1ae>
   1e1ce:	4580      	cmp	r8, r0
   1e1d0:	da06      	bge.n	1e1e0 <mktime+0x1bc>
   1e1d2:	45b8      	cmp	r8, r7
   1e1d4:	bfac      	ite	ge
   1e1d6:	2700      	movge	r7, #0
   1e1d8:	2701      	movlt	r7, #1
   1e1da:	e002      	b.n	1e1e2 <mktime+0x1be>
   1e1dc:	2700      	movs	r7, #0
   1e1de:	e000      	b.n	1e1e2 <mktime+0x1be>
   1e1e0:	2701      	movs	r7, #1
   1e1e2:	f1ba 0f00 	cmp.w	sl, #0
   1e1e6:	db61      	blt.n	1e2ac <mktime+0x288>
   1e1e8:	ea87 0a0a 	eor.w	sl, r7, sl
   1e1ec:	f1ba 0f01 	cmp.w	sl, #1
   1e1f0:	d15c      	bne.n	1e2ac <mktime+0x288>
   1e1f2:	1acb      	subs	r3, r1, r3
   1e1f4:	b907      	cbnz	r7, 1e1f8 <mktime+0x1d4>
   1e1f6:	425b      	negs	r3, r3
   1e1f8:	6822      	ldr	r2, [r4, #0]
   1e1fa:	4620      	mov	r0, r4
   1e1fc:	441a      	add	r2, r3
   1e1fe:	6022      	str	r2, [r4, #0]
   1e200:	4498      	add	r8, r3
   1e202:	f8d4 a00c 	ldr.w	sl, [r4, #12]
   1e206:	f7ff fe3b 	bl	1de80 <validate_structure>
   1e20a:	68e3      	ldr	r3, [r4, #12]
   1e20c:	ebb3 030a 	subs.w	r3, r3, sl
   1e210:	d04c      	beq.n	1e2ac <mktime+0x288>
   1e212:	2b01      	cmp	r3, #1
   1e214:	dc03      	bgt.n	1e21e <mktime+0x1fa>
   1e216:	1c98      	adds	r0, r3, #2
   1e218:	bfd8      	it	le
   1e21a:	2301      	movle	r3, #1
   1e21c:	e001      	b.n	1e222 <mktime+0x1fe>
   1e21e:	f04f 33ff 	mov.w	r3, #4294967295
   1e222:	69e2      	ldr	r2, [r4, #28]
   1e224:	441d      	add	r5, r3
   1e226:	189b      	adds	r3, r3, r2
   1e228:	d51d      	bpl.n	1e266 <mktime+0x242>
   1e22a:	1e73      	subs	r3, r6, #1
   1e22c:	0799      	lsls	r1, r3, #30
   1e22e:	d114      	bne.n	1e25a <mktime+0x236>
   1e230:	2264      	movs	r2, #100	; 0x64
   1e232:	fb93 f1f2 	sdiv	r1, r3, r2
   1e236:	fb02 3311 	mls	r3, r2, r1, r3
   1e23a:	b98b      	cbnz	r3, 1e260 <mktime+0x23c>
   1e23c:	f44f 73c8 	mov.w	r3, #400	; 0x190
   1e240:	f206 766b 	addw	r6, r6, #1899	; 0x76b
   1e244:	fb96 f2f3 	sdiv	r2, r6, r3
   1e248:	fb03 6612 	mls	r6, r3, r2, r6
   1e24c:	f240 136d 	movw	r3, #365	; 0x16d
   1e250:	2e00      	cmp	r6, #0
   1e252:	bf18      	it	ne
   1e254:	f44f 73b6 	movne.w	r3, #364	; 0x16c
   1e258:	e025      	b.n	1e2a6 <mktime+0x282>
   1e25a:	f44f 73b6 	mov.w	r3, #364	; 0x16c
   1e25e:	e022      	b.n	1e2a6 <mktime+0x282>
   1e260:	f240 136d 	movw	r3, #365	; 0x16d
   1e264:	e01f      	b.n	1e2a6 <mktime+0x282>
   1e266:	07b2      	lsls	r2, r6, #30
   1e268:	d114      	bne.n	1e294 <mktime+0x270>
   1e26a:	2264      	movs	r2, #100	; 0x64
   1e26c:	fb96 f1f2 	sdiv	r1, r6, r2
   1e270:	fb02 6211 	mls	r2, r2, r1, r6
   1e274:	b98a      	cbnz	r2, 1e29a <mktime+0x276>
   1e276:	f44f 72c8 	mov.w	r2, #400	; 0x190
   1e27a:	f206 766c 	addw	r6, r6, #1900	; 0x76c
   1e27e:	fb96 f1f2 	sdiv	r1, r6, r2
   1e282:	fb02 6611 	mls	r6, r2, r1, r6
   1e286:	f240 126d 	movw	r2, #365	; 0x16d
   1e28a:	2e00      	cmp	r6, #0
   1e28c:	bf08      	it	eq
   1e28e:	f44f 72b7 	moveq.w	r2, #366	; 0x16e
   1e292:	e004      	b.n	1e29e <mktime+0x27a>
   1e294:	f240 126d 	movw	r2, #365	; 0x16d
   1e298:	e001      	b.n	1e29e <mktime+0x27a>
   1e29a:	f44f 72b7 	mov.w	r2, #366	; 0x16e
   1e29e:	429a      	cmp	r2, r3
   1e2a0:	bfd8      	it	le
   1e2a2:	ebc2 0303 	rsble	r3, r2, r3
   1e2a6:	61e3      	str	r3, [r4, #28]
   1e2a8:	e000      	b.n	1e2ac <mktime+0x288>
   1e2aa:	4657      	mov	r7, sl
   1e2ac:	2f01      	cmp	r7, #1
   1e2ae:	d102      	bne.n	1e2b6 <mktime+0x292>
   1e2b0:	f8d9 003c 	ldr.w	r0, [r9, #60]	; 0x3c
   1e2b4:	e001      	b.n	1e2ba <mktime+0x296>
   1e2b6:	f8d9 0020 	ldr.w	r0, [r9, #32]
   1e2ba:	4480      	add	r8, r0
   1e2bc:	3504      	adds	r5, #4
   1e2be:	f002 f8bc 	bl	2043a <__tz_unlock>
   1e2c2:	2307      	movs	r3, #7
   1e2c4:	fb95 f3f3 	sdiv	r3, r5, r3
   1e2c8:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
   1e2cc:	1aed      	subs	r5, r5, r3
   1e2ce:	bf48      	it	mi
   1e2d0:	3507      	addmi	r5, #7
   1e2d2:	6227      	str	r7, [r4, #32]
   1e2d4:	61a5      	str	r5, [r4, #24]
   1e2d6:	4640      	mov	r0, r8
   1e2d8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1e2dc:	f04f 30ff 	mov.w	r0, #4294967295
   1e2e0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1e2e4:	00027134 	.word	0x00027134
   1e2e8:	00015180 	.word	0x00015180
   1e2ec:	2007cb1c 	.word	0x2007cb1c

0001e2f0 <__tzcalc_limits>:
__tzcalc_limits():
   1e2f0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e2f4:	4604      	mov	r4, r0
   1e2f6:	f004 ff39 	bl	2316c <__gettzinfo>
   1e2fa:	f240 73b1 	movw	r3, #1969	; 0x7b1
   1e2fe:	429c      	cmp	r4, r3
   1e300:	f340 809d 	ble.w	1e43e <__tzcalc_limits+0x14e>
   1e304:	f46f 63f6 	mvn.w	r3, #1968	; 0x7b0
   1e308:	18e3      	adds	r3, r4, r3
   1e30a:	109b      	asrs	r3, r3, #2
   1e30c:	f240 126d 	movw	r2, #365	; 0x16d
   1e310:	f2a4 77b2 	subw	r7, r4, #1970	; 0x7b2
   1e314:	fb02 3707 	mla	r7, r2, r7, r3
   1e318:	f2a4 726d 	subw	r2, r4, #1901	; 0x76d
   1e31c:	f06f 0363 	mvn.w	r3, #99	; 0x63
   1e320:	fb92 f3f3 	sdiv	r3, r2, r3
   1e324:	f46f 62c8 	mvn.w	r2, #1600	; 0x640
   1e328:	441f      	add	r7, r3
   1e32a:	18a2      	adds	r2, r4, r2
   1e32c:	f44f 73c8 	mov.w	r3, #400	; 0x190
   1e330:	fb92 f2f3 	sdiv	r2, r2, r3
   1e334:	4417      	add	r7, r2
   1e336:	2264      	movs	r2, #100	; 0x64
   1e338:	fb94 fcf2 	sdiv	ip, r4, r2
   1e33c:	fb02 4c1c 	mls	ip, r2, ip, r4
   1e340:	fb94 f2f3 	sdiv	r2, r4, r3
   1e344:	fb03 4212 	mls	r2, r3, r2, r4
   1e348:	f1d2 0201 	rsbs	r2, r2, #1
   1e34c:	6044      	str	r4, [r0, #4]
   1e34e:	bf38      	it	cc
   1e350:	2200      	movcc	r2, #0
   1e352:	4603      	mov	r3, r0
   1e354:	2600      	movs	r6, #0
   1e356:	7a19      	ldrb	r1, [r3, #8]
   1e358:	294a      	cmp	r1, #74	; 0x4a
   1e35a:	d113      	bne.n	1e384 <__tzcalc_limits+0x94>
   1e35c:	6959      	ldr	r1, [r3, #20]
   1e35e:	f014 0f03 	tst.w	r4, #3
   1e362:	eb07 0501 	add.w	r5, r7, r1
   1e366:	d102      	bne.n	1e36e <__tzcalc_limits+0x7e>
   1e368:	f1bc 0f00 	cmp.w	ip, #0
   1e36c:	d100      	bne.n	1e370 <__tzcalc_limits+0x80>
   1e36e:	b122      	cbz	r2, 1e37a <__tzcalc_limits+0x8a>
   1e370:	293b      	cmp	r1, #59	; 0x3b
   1e372:	bfd4      	ite	le
   1e374:	2100      	movle	r1, #0
   1e376:	2101      	movgt	r1, #1
   1e378:	e000      	b.n	1e37c <__tzcalc_limits+0x8c>
   1e37a:	4611      	mov	r1, r2
   1e37c:	4429      	add	r1, r5
   1e37e:	f101 38ff 	add.w	r8, r1, #4294967295
   1e382:	e047      	b.n	1e414 <__tzcalc_limits+0x124>
   1e384:	2944      	cmp	r1, #68	; 0x44
   1e386:	d103      	bne.n	1e390 <__tzcalc_limits+0xa0>
   1e388:	6959      	ldr	r1, [r3, #20]
   1e38a:	eb01 0807 	add.w	r8, r1, r7
   1e38e:	e041      	b.n	1e414 <__tzcalc_limits+0x124>
   1e390:	07a1      	lsls	r1, r4, #30
   1e392:	d105      	bne.n	1e3a0 <__tzcalc_limits+0xb0>
   1e394:	f1bc 0f00 	cmp.w	ip, #0
   1e398:	bf0c      	ite	eq
   1e39a:	4611      	moveq	r1, r2
   1e39c:	2101      	movne	r1, #1
   1e39e:	e000      	b.n	1e3a2 <__tzcalc_limits+0xb2>
   1e3a0:	4611      	mov	r1, r2
   1e3a2:	4d28      	ldr	r5, [pc, #160]	; (1e444 <__tzcalc_limits+0x154>)
   1e3a4:	f04f 0830 	mov.w	r8, #48	; 0x30
   1e3a8:	f8d3 900c 	ldr.w	r9, [r3, #12]
   1e3ac:	fb08 5801 	mla	r8, r8, r1, r5
   1e3b0:	463d      	mov	r5, r7
   1e3b2:	2101      	movs	r1, #1
   1e3b4:	4549      	cmp	r1, r9
   1e3b6:	da06      	bge.n	1e3c6 <__tzcalc_limits+0xd6>
   1e3b8:	eb08 0a81 	add.w	sl, r8, r1, lsl #2
   1e3bc:	f85a ac04 	ldr.w	sl, [sl, #-4]
   1e3c0:	3101      	adds	r1, #1
   1e3c2:	4455      	add	r5, sl
   1e3c4:	e7f6      	b.n	1e3b4 <__tzcalc_limits+0xc4>
   1e3c6:	f105 0b04 	add.w	fp, r5, #4
   1e3ca:	f04f 0a07 	mov.w	sl, #7
   1e3ce:	fb9b fafa 	sdiv	sl, fp, sl
   1e3d2:	6959      	ldr	r1, [r3, #20]
   1e3d4:	ebca 0aca 	rsb	sl, sl, sl, lsl #3
   1e3d8:	ebca 0a0b 	rsb	sl, sl, fp
   1e3dc:	f1b9 0f01 	cmp.w	r9, #1
   1e3e0:	bfb8      	it	lt
   1e3e2:	f04f 0901 	movlt.w	r9, #1
   1e3e6:	ebb1 0a0a 	subs.w	sl, r1, sl
   1e3ea:	6919      	ldr	r1, [r3, #16]
   1e3ec:	f109 4980 	add.w	r9, r9, #1073741824	; 0x40000000
   1e3f0:	f101 3bff 	add.w	fp, r1, #4294967295
   1e3f4:	f109 39ff 	add.w	r9, r9, #4294967295
   1e3f8:	bf48      	it	mi
   1e3fa:	f10a 0a07 	addmi.w	sl, sl, #7
   1e3fe:	ebcb 01cb 	rsb	r1, fp, fp, lsl #3
   1e402:	f858 8029 	ldr.w	r8, [r8, r9, lsl #2]
   1e406:	4451      	add	r1, sl
   1e408:	4541      	cmp	r1, r8
   1e40a:	db01      	blt.n	1e410 <__tzcalc_limits+0x120>
   1e40c:	3907      	subs	r1, #7
   1e40e:	e7fb      	b.n	1e408 <__tzcalc_limits+0x118>
   1e410:	eb01 0805 	add.w	r8, r1, r5
   1e414:	6999      	ldr	r1, [r3, #24]
   1e416:	4d0c      	ldr	r5, [pc, #48]	; (1e448 <__tzcalc_limits+0x158>)
   1e418:	3601      	adds	r6, #1
   1e41a:	fb05 1808 	mla	r8, r5, r8, r1
   1e41e:	6a19      	ldr	r1, [r3, #32]
   1e420:	2e02      	cmp	r6, #2
   1e422:	4441      	add	r1, r8
   1e424:	f843 1f1c 	str.w	r1, [r3, #28]!
   1e428:	d195      	bne.n	1e356 <__tzcalc_limits+0x66>
   1e42a:	6b83      	ldr	r3, [r0, #56]	; 0x38
   1e42c:	69c2      	ldr	r2, [r0, #28]
   1e42e:	429a      	cmp	r2, r3
   1e430:	bfac      	ite	ge
   1e432:	2300      	movge	r3, #0
   1e434:	2301      	movlt	r3, #1
   1e436:	6003      	str	r3, [r0, #0]
   1e438:	2001      	movs	r0, #1
   1e43a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e43e:	2000      	movs	r0, #0
   1e440:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e444:	00027194 	.word	0x00027194
   1e448:	00015180 	.word	0x00015180

0001e44c <_mktm_r>:
_mktm_r():
   1e44c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   1e450:	4680      	mov	r8, r0
   1e452:	460c      	mov	r4, r1
   1e454:	4617      	mov	r7, r2
   1e456:	f004 fe89 	bl	2316c <__gettzinfo>
   1e45a:	f8d8 1000 	ldr.w	r1, [r8]
   1e45e:	4a9b      	ldr	r2, [pc, #620]	; (1e6cc <_mktm_r+0x280>)
   1e460:	4606      	mov	r6, r0
   1e462:	fb91 f3f2 	sdiv	r3, r1, r2
   1e466:	fb02 1113 	mls	r1, r2, r3, r1
   1e46a:	2900      	cmp	r1, #0
   1e46c:	da05      	bge.n	1e47a <_mktm_r+0x2e>
   1e46e:	f501 31a8 	add.w	r1, r1, #86016	; 0x15000
   1e472:	f501 71c0 	add.w	r1, r1, #384	; 0x180
   1e476:	3b01      	subs	r3, #1
   1e478:	e7f7      	b.n	1e46a <_mktm_r+0x1e>
   1e47a:	f44f 6061 	mov.w	r0, #3600	; 0xe10
   1e47e:	fb91 f2f0 	sdiv	r2, r1, r0
   1e482:	fb00 1112 	mls	r1, r0, r2, r1
   1e486:	203c      	movs	r0, #60	; 0x3c
   1e488:	60a2      	str	r2, [r4, #8]
   1e48a:	fb91 f2f0 	sdiv	r2, r1, r0
   1e48e:	fb00 1112 	mls	r1, r0, r2, r1
   1e492:	6062      	str	r2, [r4, #4]
   1e494:	6021      	str	r1, [r4, #0]
   1e496:	1d1a      	adds	r2, r3, #4
   1e498:	2107      	movs	r1, #7
   1e49a:	fb92 f1f1 	sdiv	r1, r2, r1
   1e49e:	ebc1 01c1 	rsb	r1, r1, r1, lsl #3
   1e4a2:	1a52      	subs	r2, r2, r1
   1e4a4:	bf48      	it	mi
   1e4a6:	3207      	addmi	r2, #7
   1e4a8:	2b00      	cmp	r3, #0
   1e4aa:	61a2      	str	r2, [r4, #24]
   1e4ac:	f240 75b2 	movw	r5, #1970	; 0x7b2
   1e4b0:	4887      	ldr	r0, [pc, #540]	; (1e6d0 <_mktm_r+0x284>)
   1e4b2:	db2e      	blt.n	1e512 <_mktm_r+0xc6>
   1e4b4:	07a9      	lsls	r1, r5, #30
   1e4b6:	d105      	bne.n	1e4c4 <_mktm_r+0x78>
   1e4b8:	2264      	movs	r2, #100	; 0x64
   1e4ba:	fb95 f1f2 	sdiv	r1, r5, r2
   1e4be:	fb02 5211 	mls	r2, r2, r1, r5
   1e4c2:	b952      	cbnz	r2, 1e4da <_mktm_r+0x8e>
   1e4c4:	f44f 72c8 	mov.w	r2, #400	; 0x190
   1e4c8:	fb95 f1f2 	sdiv	r1, r5, r2
   1e4cc:	fb02 5111 	mls	r1, r2, r1, r5
   1e4d0:	f1d1 0101 	rsbs	r1, r1, #1
   1e4d4:	bf38      	it	cc
   1e4d6:	2100      	movcc	r1, #0
   1e4d8:	e000      	b.n	1e4dc <_mktm_r+0x90>
   1e4da:	2101      	movs	r1, #1
   1e4dc:	f850 2021 	ldr.w	r2, [r0, r1, lsl #2]
   1e4e0:	4293      	cmp	r3, r2
   1e4e2:	db1c      	blt.n	1e51e <_mktm_r+0xd2>
   1e4e4:	3501      	adds	r5, #1
   1e4e6:	1a9b      	subs	r3, r3, r2
   1e4e8:	e7e4      	b.n	1e4b4 <_mktm_r+0x68>
   1e4ea:	2264      	movs	r2, #100	; 0x64
   1e4ec:	fb95 f1f2 	sdiv	r1, r5, r2
   1e4f0:	fb02 5211 	mls	r2, r2, r1, r5
   1e4f4:	b98a      	cbnz	r2, 1e51a <_mktm_r+0xce>
   1e4f6:	f44f 72c8 	mov.w	r2, #400	; 0x190
   1e4fa:	fb95 f1f2 	sdiv	r1, r5, r2
   1e4fe:	fb02 5111 	mls	r1, r2, r1, r5
   1e502:	f1d1 0101 	rsbs	r1, r1, #1
   1e506:	bf38      	it	cc
   1e508:	2100      	movcc	r1, #0
   1e50a:	f850 2021 	ldr.w	r2, [r0, r1, lsl #2]
   1e50e:	189b      	adds	r3, r3, r2
   1e510:	d505      	bpl.n	1e51e <_mktm_r+0xd2>
   1e512:	3d01      	subs	r5, #1
   1e514:	07aa      	lsls	r2, r5, #30
   1e516:	d1ee      	bne.n	1e4f6 <_mktm_r+0xaa>
   1e518:	e7e7      	b.n	1e4ea <_mktm_r+0x9e>
   1e51a:	2101      	movs	r1, #1
   1e51c:	e7f5      	b.n	1e50a <_mktm_r+0xbe>
   1e51e:	f2a5 726c 	subw	r2, r5, #1900	; 0x76c
   1e522:	6162      	str	r2, [r4, #20]
   1e524:	4a6b      	ldr	r2, [pc, #428]	; (1e6d4 <_mktm_r+0x288>)
   1e526:	f04f 0930 	mov.w	r9, #48	; 0x30
   1e52a:	fb09 2901 	mla	r9, r9, r1, r2
   1e52e:	2200      	movs	r2, #0
   1e530:	61e3      	str	r3, [r4, #28]
   1e532:	6122      	str	r2, [r4, #16]
   1e534:	6921      	ldr	r1, [r4, #16]
   1e536:	f859 2021 	ldr.w	r2, [r9, r1, lsl #2]
   1e53a:	4293      	cmp	r3, r2
   1e53c:	db03      	blt.n	1e546 <_mktm_r+0xfa>
   1e53e:	3101      	adds	r1, #1
   1e540:	1a9b      	subs	r3, r3, r2
   1e542:	6121      	str	r1, [r4, #16]
   1e544:	e7f6      	b.n	1e534 <_mktm_r+0xe8>
   1e546:	3301      	adds	r3, #1
   1e548:	60e3      	str	r3, [r4, #12]
   1e54a:	2f00      	cmp	r7, #0
   1e54c:	f040 80b9 	bne.w	1e6c2 <_mktm_r+0x276>
   1e550:	f001 ff72 	bl	20438 <__tz_lock>
   1e554:	4b60      	ldr	r3, [pc, #384]	; (1e6d8 <_mktm_r+0x28c>)
   1e556:	681b      	ldr	r3, [r3, #0]
   1e558:	b303      	cbz	r3, 1e59c <_mktm_r+0x150>
   1e55a:	6873      	ldr	r3, [r6, #4]
   1e55c:	429d      	cmp	r5, r3
   1e55e:	d105      	bne.n	1e56c <_mktm_r+0x120>
   1e560:	6831      	ldr	r1, [r6, #0]
   1e562:	f8d8 3000 	ldr.w	r3, [r8]
   1e566:	69f2      	ldr	r2, [r6, #28]
   1e568:	b941      	cbnz	r1, 1e57c <_mktm_r+0x130>
   1e56a:	e00a      	b.n	1e582 <_mktm_r+0x136>
   1e56c:	4628      	mov	r0, r5
   1e56e:	f7ff febf 	bl	1e2f0 <__tzcalc_limits>
   1e572:	2800      	cmp	r0, #0
   1e574:	d1f4      	bne.n	1e560 <_mktm_r+0x114>
   1e576:	f04f 33ff 	mov.w	r3, #4294967295
   1e57a:	e00d      	b.n	1e598 <_mktm_r+0x14c>
   1e57c:	4293      	cmp	r3, r2
   1e57e:	db08      	blt.n	1e592 <_mktm_r+0x146>
   1e580:	e001      	b.n	1e586 <_mktm_r+0x13a>
   1e582:	4293      	cmp	r3, r2
   1e584:	da07      	bge.n	1e596 <_mktm_r+0x14a>
   1e586:	6bb2      	ldr	r2, [r6, #56]	; 0x38
   1e588:	4293      	cmp	r3, r2
   1e58a:	bfac      	ite	ge
   1e58c:	2300      	movge	r3, #0
   1e58e:	2301      	movlt	r3, #1
   1e590:	e002      	b.n	1e598 <_mktm_r+0x14c>
   1e592:	2300      	movs	r3, #0
   1e594:	e000      	b.n	1e598 <_mktm_r+0x14c>
   1e596:	2301      	movs	r3, #1
   1e598:	6223      	str	r3, [r4, #32]
   1e59a:	e000      	b.n	1e59e <_mktm_r+0x152>
   1e59c:	6227      	str	r7, [r4, #32]
   1e59e:	6a23      	ldr	r3, [r4, #32]
   1e5a0:	f44f 6061 	mov.w	r0, #3600	; 0xe10
   1e5a4:	2b01      	cmp	r3, #1
   1e5a6:	bf0c      	ite	eq
   1e5a8:	6bf3      	ldreq	r3, [r6, #60]	; 0x3c
   1e5aa:	6a33      	ldrne	r3, [r6, #32]
   1e5ac:	6825      	ldr	r5, [r4, #0]
   1e5ae:	fb93 f2f0 	sdiv	r2, r3, r0
   1e5b2:	fb00 3312 	mls	r3, r0, r2, r3
   1e5b6:	203c      	movs	r0, #60	; 0x3c
   1e5b8:	fb93 f1f0 	sdiv	r1, r3, r0
   1e5bc:	fb00 3311 	mls	r3, r0, r1, r3
   1e5c0:	6860      	ldr	r0, [r4, #4]
   1e5c2:	1aeb      	subs	r3, r5, r3
   1e5c4:	1a41      	subs	r1, r0, r1
   1e5c6:	68a0      	ldr	r0, [r4, #8]
   1e5c8:	2b3b      	cmp	r3, #59	; 0x3b
   1e5ca:	ebc2 0200 	rsb	r2, r2, r0
   1e5ce:	6023      	str	r3, [r4, #0]
   1e5d0:	6061      	str	r1, [r4, #4]
   1e5d2:	60a2      	str	r2, [r4, #8]
   1e5d4:	dd03      	ble.n	1e5de <_mktm_r+0x192>
   1e5d6:	3101      	adds	r1, #1
   1e5d8:	6061      	str	r1, [r4, #4]
   1e5da:	3b3c      	subs	r3, #60	; 0x3c
   1e5dc:	e004      	b.n	1e5e8 <_mktm_r+0x19c>
   1e5de:	2b00      	cmp	r3, #0
   1e5e0:	da03      	bge.n	1e5ea <_mktm_r+0x19e>
   1e5e2:	3901      	subs	r1, #1
   1e5e4:	6061      	str	r1, [r4, #4]
   1e5e6:	333c      	adds	r3, #60	; 0x3c
   1e5e8:	6023      	str	r3, [r4, #0]
   1e5ea:	6863      	ldr	r3, [r4, #4]
   1e5ec:	2b3b      	cmp	r3, #59	; 0x3b
   1e5ee:	dd03      	ble.n	1e5f8 <_mktm_r+0x1ac>
   1e5f0:	3201      	adds	r2, #1
   1e5f2:	60a2      	str	r2, [r4, #8]
   1e5f4:	3b3c      	subs	r3, #60	; 0x3c
   1e5f6:	e004      	b.n	1e602 <_mktm_r+0x1b6>
   1e5f8:	2b00      	cmp	r3, #0
   1e5fa:	da03      	bge.n	1e604 <_mktm_r+0x1b8>
   1e5fc:	3a01      	subs	r2, #1
   1e5fe:	60a2      	str	r2, [r4, #8]
   1e600:	333c      	adds	r3, #60	; 0x3c
   1e602:	6063      	str	r3, [r4, #4]
   1e604:	68a3      	ldr	r3, [r4, #8]
   1e606:	2b17      	cmp	r3, #23
   1e608:	dd20      	ble.n	1e64c <_mktm_r+0x200>
   1e60a:	69e2      	ldr	r2, [r4, #28]
   1e60c:	3b18      	subs	r3, #24
   1e60e:	3201      	adds	r2, #1
   1e610:	61e2      	str	r2, [r4, #28]
   1e612:	69a2      	ldr	r2, [r4, #24]
   1e614:	60a3      	str	r3, [r4, #8]
   1e616:	3201      	adds	r2, #1
   1e618:	2a06      	cmp	r2, #6
   1e61a:	bfc8      	it	gt
   1e61c:	2200      	movgt	r2, #0
   1e61e:	61a2      	str	r2, [r4, #24]
   1e620:	68e2      	ldr	r2, [r4, #12]
   1e622:	6923      	ldr	r3, [r4, #16]
   1e624:	3201      	adds	r2, #1
   1e626:	60e2      	str	r2, [r4, #12]
   1e628:	f859 1023 	ldr.w	r1, [r9, r3, lsl #2]
   1e62c:	428a      	cmp	r2, r1
   1e62e:	dd45      	ble.n	1e6bc <_mktm_r+0x270>
   1e630:	3301      	adds	r3, #1
   1e632:	1a52      	subs	r2, r2, r1
   1e634:	2b0c      	cmp	r3, #12
   1e636:	60e2      	str	r2, [r4, #12]
   1e638:	d001      	beq.n	1e63e <_mktm_r+0x1f2>
   1e63a:	6123      	str	r3, [r4, #16]
   1e63c:	e03e      	b.n	1e6bc <_mktm_r+0x270>
   1e63e:	6962      	ldr	r2, [r4, #20]
   1e640:	2300      	movs	r3, #0
   1e642:	3201      	adds	r2, #1
   1e644:	6123      	str	r3, [r4, #16]
   1e646:	6162      	str	r2, [r4, #20]
   1e648:	61e3      	str	r3, [r4, #28]
   1e64a:	e037      	b.n	1e6bc <_mktm_r+0x270>
   1e64c:	2b00      	cmp	r3, #0
   1e64e:	da35      	bge.n	1e6bc <_mktm_r+0x270>
   1e650:	69e2      	ldr	r2, [r4, #28]
   1e652:	3318      	adds	r3, #24
   1e654:	3a01      	subs	r2, #1
   1e656:	61e2      	str	r2, [r4, #28]
   1e658:	69a2      	ldr	r2, [r4, #24]
   1e65a:	60a3      	str	r3, [r4, #8]
   1e65c:	3a01      	subs	r2, #1
   1e65e:	bf48      	it	mi
   1e660:	2206      	movmi	r2, #6
   1e662:	61a2      	str	r2, [r4, #24]
   1e664:	68e2      	ldr	r2, [r4, #12]
   1e666:	3a01      	subs	r2, #1
   1e668:	60e2      	str	r2, [r4, #12]
   1e66a:	bb3a      	cbnz	r2, 1e6bc <_mktm_r+0x270>
   1e66c:	6923      	ldr	r3, [r4, #16]
   1e66e:	3b01      	subs	r3, #1
   1e670:	d401      	bmi.n	1e676 <_mktm_r+0x22a>
   1e672:	6123      	str	r3, [r4, #16]
   1e674:	e01e      	b.n	1e6b4 <_mktm_r+0x268>
   1e676:	230b      	movs	r3, #11
   1e678:	6123      	str	r3, [r4, #16]
   1e67a:	6963      	ldr	r3, [r4, #20]
   1e67c:	1e5a      	subs	r2, r3, #1
   1e67e:	f012 0f03 	tst.w	r2, #3
   1e682:	6162      	str	r2, [r4, #20]
   1e684:	f203 736b 	addw	r3, r3, #1899	; 0x76b
   1e688:	d105      	bne.n	1e696 <_mktm_r+0x24a>
   1e68a:	2264      	movs	r2, #100	; 0x64
   1e68c:	fb93 f1f2 	sdiv	r1, r3, r2
   1e690:	fb02 3211 	mls	r2, r2, r1, r3
   1e694:	b952      	cbnz	r2, 1e6ac <_mktm_r+0x260>
   1e696:	f44f 72c8 	mov.w	r2, #400	; 0x190
   1e69a:	fb93 f1f2 	sdiv	r1, r3, r2
   1e69e:	fb02 3311 	mls	r3, r2, r1, r3
   1e6a2:	f1d3 0301 	rsbs	r3, r3, #1
   1e6a6:	bf38      	it	cc
   1e6a8:	2300      	movcc	r3, #0
   1e6aa:	e000      	b.n	1e6ae <_mktm_r+0x262>
   1e6ac:	2301      	movs	r3, #1
   1e6ae:	f503 73b6 	add.w	r3, r3, #364	; 0x16c
   1e6b2:	61e3      	str	r3, [r4, #28]
   1e6b4:	6923      	ldr	r3, [r4, #16]
   1e6b6:	f859 3023 	ldr.w	r3, [r9, r3, lsl #2]
   1e6ba:	60e3      	str	r3, [r4, #12]
   1e6bc:	f001 febd 	bl	2043a <__tz_unlock>
   1e6c0:	e001      	b.n	1e6c6 <_mktm_r+0x27a>
   1e6c2:	2300      	movs	r3, #0
   1e6c4:	6223      	str	r3, [r4, #32]
   1e6c6:	4620      	mov	r0, r4
   1e6c8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   1e6cc:	00015180 	.word	0x00015180
   1e6d0:	000271f4 	.word	0x000271f4
   1e6d4:	00027194 	.word	0x00027194
   1e6d8:	2007cb1c 	.word	0x2007cb1c

0001e6dc <mallinfo>:
mallinfo():
   1e6dc:	b510      	push	{r4, lr}
   1e6de:	4b03      	ldr	r3, [pc, #12]	; (1e6ec <mallinfo+0x10>)
   1e6e0:	4604      	mov	r4, r0
   1e6e2:	6819      	ldr	r1, [r3, #0]
   1e6e4:	f000 f848 	bl	1e778 <_mallinfo_r>
   1e6e8:	4620      	mov	r0, r4
   1e6ea:	bd10      	pop	{r4, pc}
   1e6ec:	2007c150 	.word	0x2007c150

0001e6f0 <_free_r>:
_free_r():
   1e6f0:	b530      	push	{r4, r5, lr}
   1e6f2:	2900      	cmp	r1, #0
   1e6f4:	d03c      	beq.n	1e770 <_free_r+0x80>
   1e6f6:	f851 2c04 	ldr.w	r2, [r1, #-4]
   1e6fa:	1f0b      	subs	r3, r1, #4
   1e6fc:	491d      	ldr	r1, [pc, #116]	; (1e774 <_free_r+0x84>)
   1e6fe:	2a00      	cmp	r2, #0
   1e700:	bfb8      	it	lt
   1e702:	189b      	addlt	r3, r3, r2
   1e704:	680a      	ldr	r2, [r1, #0]
   1e706:	460c      	mov	r4, r1
   1e708:	b912      	cbnz	r2, 1e710 <_free_r+0x20>
   1e70a:	605a      	str	r2, [r3, #4]
   1e70c:	600b      	str	r3, [r1, #0]
   1e70e:	bd30      	pop	{r4, r5, pc}
   1e710:	4293      	cmp	r3, r2
   1e712:	d20d      	bcs.n	1e730 <_free_r+0x40>
   1e714:	6819      	ldr	r1, [r3, #0]
   1e716:	1858      	adds	r0, r3, r1
   1e718:	4290      	cmp	r0, r2
   1e71a:	d103      	bne.n	1e724 <_free_r+0x34>
   1e71c:	585a      	ldr	r2, [r3, r1]
   1e71e:	4411      	add	r1, r2
   1e720:	6842      	ldr	r2, [r0, #4]
   1e722:	6019      	str	r1, [r3, #0]
   1e724:	605a      	str	r2, [r3, #4]
   1e726:	6023      	str	r3, [r4, #0]
   1e728:	bd30      	pop	{r4, r5, pc}
   1e72a:	4299      	cmp	r1, r3
   1e72c:	d803      	bhi.n	1e736 <_free_r+0x46>
   1e72e:	460a      	mov	r2, r1
   1e730:	6851      	ldr	r1, [r2, #4]
   1e732:	2900      	cmp	r1, #0
   1e734:	d1f9      	bne.n	1e72a <_free_r+0x3a>
   1e736:	6814      	ldr	r4, [r2, #0]
   1e738:	1915      	adds	r5, r2, r4
   1e73a:	429d      	cmp	r5, r3
   1e73c:	d10a      	bne.n	1e754 <_free_r+0x64>
   1e73e:	681b      	ldr	r3, [r3, #0]
   1e740:	4423      	add	r3, r4
   1e742:	18d0      	adds	r0, r2, r3
   1e744:	4288      	cmp	r0, r1
   1e746:	6013      	str	r3, [r2, #0]
   1e748:	d112      	bne.n	1e770 <_free_r+0x80>
   1e74a:	6808      	ldr	r0, [r1, #0]
   1e74c:	4403      	add	r3, r0
   1e74e:	6013      	str	r3, [r2, #0]
   1e750:	684b      	ldr	r3, [r1, #4]
   1e752:	e00c      	b.n	1e76e <_free_r+0x7e>
   1e754:	d902      	bls.n	1e75c <_free_r+0x6c>
   1e756:	230c      	movs	r3, #12
   1e758:	6003      	str	r3, [r0, #0]
   1e75a:	bd30      	pop	{r4, r5, pc}
   1e75c:	6818      	ldr	r0, [r3, #0]
   1e75e:	181c      	adds	r4, r3, r0
   1e760:	428c      	cmp	r4, r1
   1e762:	d103      	bne.n	1e76c <_free_r+0x7c>
   1e764:	680c      	ldr	r4, [r1, #0]
   1e766:	6849      	ldr	r1, [r1, #4]
   1e768:	4420      	add	r0, r4
   1e76a:	6018      	str	r0, [r3, #0]
   1e76c:	6059      	str	r1, [r3, #4]
   1e76e:	6053      	str	r3, [r2, #4]
   1e770:	bd30      	pop	{r4, r5, pc}
   1e772:	bf00      	nop
   1e774:	2007cb18 	.word	0x2007cb18

0001e778 <_mallinfo_r>:
_mallinfo_r():
   1e778:	b570      	push	{r4, r5, r6, lr}
   1e77a:	4c13      	ldr	r4, [pc, #76]	; (1e7c8 <_mallinfo_r+0x50>)
   1e77c:	4606      	mov	r6, r0
   1e77e:	6822      	ldr	r2, [r4, #0]
   1e780:	b14a      	cbz	r2, 1e796 <_mallinfo_r+0x1e>
   1e782:	4608      	mov	r0, r1
   1e784:	2100      	movs	r1, #0
   1e786:	f000 f9f7 	bl	1eb78 <_sbrk_r>
   1e78a:	1c43      	adds	r3, r0, #1
   1e78c:	bf16      	itet	ne
   1e78e:	6823      	ldrne	r3, [r4, #0]
   1e790:	4602      	moveq	r2, r0
   1e792:	ebc3 0200 	rsbne	r2, r3, r0
   1e796:	4b0d      	ldr	r3, [pc, #52]	; (1e7cc <_mallinfo_r+0x54>)
   1e798:	6819      	ldr	r1, [r3, #0]
   1e79a:	2300      	movs	r3, #0
   1e79c:	b119      	cbz	r1, 1e7a6 <_mallinfo_r+0x2e>
   1e79e:	6808      	ldr	r0, [r1, #0]
   1e7a0:	6849      	ldr	r1, [r1, #4]
   1e7a2:	4403      	add	r3, r0
   1e7a4:	e7fa      	b.n	1e79c <_mallinfo_r+0x24>
   1e7a6:	4d0a      	ldr	r5, [pc, #40]	; (1e7d0 <_mallinfo_r+0x58>)
   1e7a8:	4634      	mov	r4, r6
   1e7aa:	602a      	str	r2, [r5, #0]
   1e7ac:	622b      	str	r3, [r5, #32]
   1e7ae:	1ad3      	subs	r3, r2, r3
   1e7b0:	61eb      	str	r3, [r5, #28]
   1e7b2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
   1e7b4:	c40f      	stmia	r4!, {r0, r1, r2, r3}
   1e7b6:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
   1e7b8:	c40f      	stmia	r4!, {r0, r1, r2, r3}
   1e7ba:	e895 0003 	ldmia.w	r5, {r0, r1}
   1e7be:	e884 0003 	stmia.w	r4, {r0, r1}
   1e7c2:	4630      	mov	r0, r6
   1e7c4:	bd70      	pop	{r4, r5, r6, pc}
   1e7c6:	bf00      	nop
   1e7c8:	2007cb14 	.word	0x2007cb14
   1e7cc:	2007cb18 	.word	0x2007cb18
   1e7d0:	2007caec 	.word	0x2007caec

0001e7d4 <_malloc_r>:
_malloc_r():
   1e7d4:	b570      	push	{r4, r5, r6, lr}
   1e7d6:	1ccd      	adds	r5, r1, #3
   1e7d8:	f025 0503 	bic.w	r5, r5, #3
   1e7dc:	3508      	adds	r5, #8
   1e7de:	2d0c      	cmp	r5, #12
   1e7e0:	bf38      	it	cc
   1e7e2:	250c      	movcc	r5, #12
   1e7e4:	2d00      	cmp	r5, #0
   1e7e6:	4606      	mov	r6, r0
   1e7e8:	db3f      	blt.n	1e86a <_malloc_r+0x96>
   1e7ea:	428d      	cmp	r5, r1
   1e7ec:	d33d      	bcc.n	1e86a <_malloc_r+0x96>
   1e7ee:	4b21      	ldr	r3, [pc, #132]	; (1e874 <_malloc_r+0xa0>)
   1e7f0:	681c      	ldr	r4, [r3, #0]
   1e7f2:	4618      	mov	r0, r3
   1e7f4:	4621      	mov	r1, r4
   1e7f6:	b1a1      	cbz	r1, 1e822 <_malloc_r+0x4e>
   1e7f8:	680b      	ldr	r3, [r1, #0]
   1e7fa:	1b5b      	subs	r3, r3, r5
   1e7fc:	d40e      	bmi.n	1e81c <_malloc_r+0x48>
   1e7fe:	2b0b      	cmp	r3, #11
   1e800:	d903      	bls.n	1e80a <_malloc_r+0x36>
   1e802:	600b      	str	r3, [r1, #0]
   1e804:	18cc      	adds	r4, r1, r3
   1e806:	50cd      	str	r5, [r1, r3]
   1e808:	e01f      	b.n	1e84a <_malloc_r+0x76>
   1e80a:	428c      	cmp	r4, r1
   1e80c:	d102      	bne.n	1e814 <_malloc_r+0x40>
   1e80e:	6862      	ldr	r2, [r4, #4]
   1e810:	6002      	str	r2, [r0, #0]
   1e812:	e01a      	b.n	1e84a <_malloc_r+0x76>
   1e814:	684b      	ldr	r3, [r1, #4]
   1e816:	6063      	str	r3, [r4, #4]
   1e818:	460c      	mov	r4, r1
   1e81a:	e016      	b.n	1e84a <_malloc_r+0x76>
   1e81c:	460c      	mov	r4, r1
   1e81e:	6849      	ldr	r1, [r1, #4]
   1e820:	e7e9      	b.n	1e7f6 <_malloc_r+0x22>
   1e822:	4c15      	ldr	r4, [pc, #84]	; (1e878 <_malloc_r+0xa4>)
   1e824:	6823      	ldr	r3, [r4, #0]
   1e826:	b91b      	cbnz	r3, 1e830 <_malloc_r+0x5c>
   1e828:	4630      	mov	r0, r6
   1e82a:	f000 f9a5 	bl	1eb78 <_sbrk_r>
   1e82e:	6020      	str	r0, [r4, #0]
   1e830:	4629      	mov	r1, r5
   1e832:	4630      	mov	r0, r6
   1e834:	f000 f9a0 	bl	1eb78 <_sbrk_r>
   1e838:	1c43      	adds	r3, r0, #1
   1e83a:	4601      	mov	r1, r0
   1e83c:	d015      	beq.n	1e86a <_malloc_r+0x96>
   1e83e:	1cc4      	adds	r4, r0, #3
   1e840:	f024 0403 	bic.w	r4, r4, #3
   1e844:	4284      	cmp	r4, r0
   1e846:	d10a      	bne.n	1e85e <_malloc_r+0x8a>
   1e848:	6025      	str	r5, [r4, #0]
   1e84a:	f104 000b 	add.w	r0, r4, #11
   1e84e:	1d23      	adds	r3, r4, #4
   1e850:	f020 0007 	bic.w	r0, r0, #7
   1e854:	1ac3      	subs	r3, r0, r3
   1e856:	d00b      	beq.n	1e870 <_malloc_r+0x9c>
   1e858:	425a      	negs	r2, r3
   1e85a:	50e2      	str	r2, [r4, r3]
   1e85c:	bd70      	pop	{r4, r5, r6, pc}
   1e85e:	4630      	mov	r0, r6
   1e860:	1a61      	subs	r1, r4, r1
   1e862:	f000 f989 	bl	1eb78 <_sbrk_r>
   1e866:	3001      	adds	r0, #1
   1e868:	d1ee      	bne.n	1e848 <_malloc_r+0x74>
   1e86a:	230c      	movs	r3, #12
   1e86c:	6033      	str	r3, [r6, #0]
   1e86e:	2000      	movs	r0, #0
   1e870:	bd70      	pop	{r4, r5, r6, pc}
   1e872:	bf00      	nop
   1e874:	2007cb18 	.word	0x2007cb18
   1e878:	2007cb14 	.word	0x2007cb14

0001e87c <iprintf>:
printf():
   1e87c:	b40f      	push	{r0, r1, r2, r3}
   1e87e:	4b0a      	ldr	r3, [pc, #40]	; (1e8a8 <iprintf+0x2c>)
   1e880:	b513      	push	{r0, r1, r4, lr}
   1e882:	681c      	ldr	r4, [r3, #0]
   1e884:	b124      	cbz	r4, 1e890 <iprintf+0x14>
   1e886:	69a3      	ldr	r3, [r4, #24]
   1e888:	b913      	cbnz	r3, 1e890 <iprintf+0x14>
   1e88a:	4620      	mov	r0, r4
   1e88c:	f7ff f9be 	bl	1dc0c <__sinit>
   1e890:	ab05      	add	r3, sp, #20
   1e892:	4620      	mov	r0, r4
   1e894:	68a1      	ldr	r1, [r4, #8]
   1e896:	9a04      	ldr	r2, [sp, #16]
   1e898:	9301      	str	r3, [sp, #4]
   1e89a:	f001 fea3 	bl	205e4 <_vfiprintf_r>
   1e89e:	b002      	add	sp, #8
   1e8a0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   1e8a4:	b004      	add	sp, #16
   1e8a6:	4770      	bx	lr
   1e8a8:	2007c150 	.word	0x2007c150

0001e8ac <_puts_r>:
_puts_r():
   1e8ac:	b570      	push	{r4, r5, r6, lr}
   1e8ae:	460e      	mov	r6, r1
   1e8b0:	4605      	mov	r5, r0
   1e8b2:	b118      	cbz	r0, 1e8bc <_puts_r+0x10>
   1e8b4:	6983      	ldr	r3, [r0, #24]
   1e8b6:	b90b      	cbnz	r3, 1e8bc <_puts_r+0x10>
   1e8b8:	f7ff f9a8 	bl	1dc0c <__sinit>
   1e8bc:	68ac      	ldr	r4, [r5, #8]
   1e8be:	89a3      	ldrh	r3, [r4, #12]
   1e8c0:	0719      	lsls	r1, r3, #28
   1e8c2:	d501      	bpl.n	1e8c8 <_puts_r+0x1c>
   1e8c4:	6923      	ldr	r3, [r4, #16]
   1e8c6:	b983      	cbnz	r3, 1e8ea <_puts_r+0x3e>
   1e8c8:	4628      	mov	r0, r5
   1e8ca:	4621      	mov	r1, r4
   1e8cc:	f003 f940 	bl	21b50 <__swsetup_r>
   1e8d0:	b158      	cbz	r0, 1e8ea <_puts_r+0x3e>
   1e8d2:	f04f 30ff 	mov.w	r0, #4294967295
   1e8d6:	bd70      	pop	{r4, r5, r6, pc}
   1e8d8:	2b00      	cmp	r3, #0
   1e8da:	db0e      	blt.n	1e8fa <_puts_r+0x4e>
   1e8dc:	6823      	ldr	r3, [r4, #0]
   1e8de:	f816 2c01 	ldrb.w	r2, [r6, #-1]
   1e8e2:	701a      	strb	r2, [r3, #0]
   1e8e4:	6823      	ldr	r3, [r4, #0]
   1e8e6:	3301      	adds	r3, #1
   1e8e8:	6023      	str	r3, [r4, #0]
   1e8ea:	68a3      	ldr	r3, [r4, #8]
   1e8ec:	f816 2b01 	ldrb.w	r2, [r6], #1
   1e8f0:	3b01      	subs	r3, #1
   1e8f2:	60a3      	str	r3, [r4, #8]
   1e8f4:	2a00      	cmp	r2, #0
   1e8f6:	d1ef      	bne.n	1e8d8 <_puts_r+0x2c>
   1e8f8:	e017      	b.n	1e92a <_puts_r+0x7e>
   1e8fa:	69a2      	ldr	r2, [r4, #24]
   1e8fc:	4293      	cmp	r3, r2
   1e8fe:	db09      	blt.n	1e914 <_puts_r+0x68>
   1e900:	6823      	ldr	r3, [r4, #0]
   1e902:	f816 2c01 	ldrb.w	r2, [r6, #-1]
   1e906:	701a      	strb	r2, [r3, #0]
   1e908:	6823      	ldr	r3, [r4, #0]
   1e90a:	7819      	ldrb	r1, [r3, #0]
   1e90c:	290a      	cmp	r1, #10
   1e90e:	d1ea      	bne.n	1e8e6 <_puts_r+0x3a>
   1e910:	4628      	mov	r0, r5
   1e912:	e002      	b.n	1e91a <_puts_r+0x6e>
   1e914:	f816 1c01 	ldrb.w	r1, [r6, #-1]
   1e918:	4628      	mov	r0, r5
   1e91a:	4622      	mov	r2, r4
   1e91c:	f003 f8b2 	bl	21a84 <__swbuf_r>
   1e920:	f1b0 32ff 	subs.w	r2, r0, #4294967295
   1e924:	4250      	negs	r0, r2
   1e926:	4150      	adcs	r0, r2
   1e928:	e7d2      	b.n	1e8d0 <_puts_r+0x24>
   1e92a:	2b00      	cmp	r3, #0
   1e92c:	da16      	bge.n	1e95c <_puts_r+0xb0>
   1e92e:	69a2      	ldr	r2, [r4, #24]
   1e930:	4293      	cmp	r3, r2
   1e932:	db08      	blt.n	1e946 <_puts_r+0x9a>
   1e934:	6823      	ldr	r3, [r4, #0]
   1e936:	220a      	movs	r2, #10
   1e938:	701a      	strb	r2, [r3, #0]
   1e93a:	6823      	ldr	r3, [r4, #0]
   1e93c:	7819      	ldrb	r1, [r3, #0]
   1e93e:	4291      	cmp	r1, r2
   1e940:	d110      	bne.n	1e964 <_puts_r+0xb8>
   1e942:	4628      	mov	r0, r5
   1e944:	e001      	b.n	1e94a <_puts_r+0x9e>
   1e946:	4628      	mov	r0, r5
   1e948:	210a      	movs	r1, #10
   1e94a:	4622      	mov	r2, r4
   1e94c:	f003 f89a 	bl	21a84 <__swbuf_r>
   1e950:	f1b0 33ff 	subs.w	r3, r0, #4294967295
   1e954:	4258      	negs	r0, r3
   1e956:	4158      	adcs	r0, r3
   1e958:	b130      	cbz	r0, 1e968 <_puts_r+0xbc>
   1e95a:	e7ba      	b.n	1e8d2 <_puts_r+0x26>
   1e95c:	6823      	ldr	r3, [r4, #0]
   1e95e:	220a      	movs	r2, #10
   1e960:	701a      	strb	r2, [r3, #0]
   1e962:	6823      	ldr	r3, [r4, #0]
   1e964:	3301      	adds	r3, #1
   1e966:	6023      	str	r3, [r4, #0]
   1e968:	200a      	movs	r0, #10
   1e96a:	bd70      	pop	{r4, r5, r6, pc}

0001e96c <puts>:
puts():
   1e96c:	4b02      	ldr	r3, [pc, #8]	; (1e978 <puts+0xc>)
   1e96e:	4601      	mov	r1, r0
   1e970:	6818      	ldr	r0, [r3, #0]
   1e972:	f7ff bf9b 	b.w	1e8ac <_puts_r>
   1e976:	bf00      	nop
   1e978:	2007c150 	.word	0x2007c150

0001e97c <srand>:
srand():
   1e97c:	b538      	push	{r3, r4, r5, lr}
   1e97e:	4b13      	ldr	r3, [pc, #76]	; (1e9cc <srand+0x50>)
   1e980:	4605      	mov	r5, r0
   1e982:	681c      	ldr	r4, [r3, #0]
   1e984:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   1e986:	b9d3      	cbnz	r3, 1e9be <srand+0x42>
   1e988:	2018      	movs	r0, #24
   1e98a:	f7ff fa1f 	bl	1ddcc <malloc>
   1e98e:	f243 330e 	movw	r3, #13070	; 0x330e
   1e992:	63a0      	str	r0, [r4, #56]	; 0x38
   1e994:	8003      	strh	r3, [r0, #0]
   1e996:	f64a 33cd 	movw	r3, #43981	; 0xabcd
   1e99a:	8043      	strh	r3, [r0, #2]
   1e99c:	f241 2334 	movw	r3, #4660	; 0x1234
   1e9a0:	8083      	strh	r3, [r0, #4]
   1e9a2:	f24e 636d 	movw	r3, #58989	; 0xe66d
   1e9a6:	80c3      	strh	r3, [r0, #6]
   1e9a8:	f64d 63ec 	movw	r3, #57068	; 0xdeec
   1e9ac:	8103      	strh	r3, [r0, #8]
   1e9ae:	2305      	movs	r3, #5
   1e9b0:	8143      	strh	r3, [r0, #10]
   1e9b2:	230b      	movs	r3, #11
   1e9b4:	8183      	strh	r3, [r0, #12]
   1e9b6:	2201      	movs	r2, #1
   1e9b8:	2300      	movs	r3, #0
   1e9ba:	e9c0 2304 	strd	r2, r3, [r0, #16]
   1e9be:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   1e9c0:	4628      	mov	r0, r5
   1e9c2:	2100      	movs	r1, #0
   1e9c4:	e9c3 0104 	strd	r0, r1, [r3, #16]
   1e9c8:	bd38      	pop	{r3, r4, r5, pc}
   1e9ca:	bf00      	nop
   1e9cc:	2007c150 	.word	0x2007c150

0001e9d0 <rand>:
rand():
   1e9d0:	4b19      	ldr	r3, [pc, #100]	; (1ea38 <rand+0x68>)
   1e9d2:	b510      	push	{r4, lr}
   1e9d4:	681c      	ldr	r4, [r3, #0]
   1e9d6:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   1e9d8:	b9d3      	cbnz	r3, 1ea10 <rand+0x40>
   1e9da:	2018      	movs	r0, #24
   1e9dc:	f7ff f9f6 	bl	1ddcc <malloc>
   1e9e0:	f243 330e 	movw	r3, #13070	; 0x330e
   1e9e4:	63a0      	str	r0, [r4, #56]	; 0x38
   1e9e6:	8003      	strh	r3, [r0, #0]
   1e9e8:	f64a 33cd 	movw	r3, #43981	; 0xabcd
   1e9ec:	8043      	strh	r3, [r0, #2]
   1e9ee:	f241 2334 	movw	r3, #4660	; 0x1234
   1e9f2:	8083      	strh	r3, [r0, #4]
   1e9f4:	f24e 636d 	movw	r3, #58989	; 0xe66d
   1e9f8:	80c3      	strh	r3, [r0, #6]
   1e9fa:	f64d 63ec 	movw	r3, #57068	; 0xdeec
   1e9fe:	8103      	strh	r3, [r0, #8]
   1ea00:	2305      	movs	r3, #5
   1ea02:	8143      	strh	r3, [r0, #10]
   1ea04:	230b      	movs	r3, #11
   1ea06:	8183      	strh	r3, [r0, #12]
   1ea08:	2201      	movs	r2, #1
   1ea0a:	2300      	movs	r3, #0
   1ea0c:	e9c0 2304 	strd	r2, r3, [r0, #16]
   1ea10:	6ba1      	ldr	r1, [r4, #56]	; 0x38
   1ea12:	4c0a      	ldr	r4, [pc, #40]	; (1ea3c <rand+0x6c>)
   1ea14:	690a      	ldr	r2, [r1, #16]
   1ea16:	6948      	ldr	r0, [r1, #20]
   1ea18:	4354      	muls	r4, r2
   1ea1a:	4b09      	ldr	r3, [pc, #36]	; (1ea40 <rand+0x70>)
   1ea1c:	fb03 4000 	mla	r0, r3, r0, r4
   1ea20:	fba2 2303 	umull	r2, r3, r2, r3
   1ea24:	3201      	adds	r2, #1
   1ea26:	4403      	add	r3, r0
   1ea28:	f143 0300 	adc.w	r3, r3, #0
   1ea2c:	e9c1 2304 	strd	r2, r3, [r1, #16]
   1ea30:	f023 4000 	bic.w	r0, r3, #2147483648	; 0x80000000
   1ea34:	bd10      	pop	{r4, pc}
   1ea36:	bf00      	nop
   1ea38:	2007c150 	.word	0x2007c150
   1ea3c:	5851f42d 	.word	0x5851f42d
   1ea40:	4c957f2d 	.word	0x4c957f2d

0001ea44 <realloc>:
realloc():
   1ea44:	460a      	mov	r2, r1
   1ea46:	4903      	ldr	r1, [pc, #12]	; (1ea54 <realloc+0x10>)
   1ea48:	4603      	mov	r3, r0
   1ea4a:	6808      	ldr	r0, [r1, #0]
   1ea4c:	4619      	mov	r1, r3
   1ea4e:	f004 bffe 	b.w	23a4e <_realloc_r>
   1ea52:	bf00      	nop
   1ea54:	2007c150 	.word	0x2007c150

0001ea58 <lflush>:
lflush():
   1ea58:	8983      	ldrh	r3, [r0, #12]
   1ea5a:	f003 0309 	and.w	r3, r3, #9
   1ea5e:	2b09      	cmp	r3, #9
   1ea60:	d101      	bne.n	1ea66 <lflush+0xe>
   1ea62:	f004 b843 	b.w	22aec <fflush>
   1ea66:	2000      	movs	r0, #0
   1ea68:	4770      	bx	lr
	...

0001ea6c <__srefill_r>:
__srefill_r():
   1ea6c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1ea6e:	460c      	mov	r4, r1
   1ea70:	4605      	mov	r5, r0
   1ea72:	b118      	cbz	r0, 1ea7c <__srefill_r+0x10>
   1ea74:	6983      	ldr	r3, [r0, #24]
   1ea76:	b90b      	cbnz	r3, 1ea7c <__srefill_r+0x10>
   1ea78:	f7ff f8c8 	bl	1dc0c <__sinit>
   1ea7c:	4b39      	ldr	r3, [pc, #228]	; (1eb64 <__srefill_r+0xf8>)
   1ea7e:	429c      	cmp	r4, r3
   1ea80:	d101      	bne.n	1ea86 <__srefill_r+0x1a>
   1ea82:	686c      	ldr	r4, [r5, #4]
   1ea84:	e008      	b.n	1ea98 <__srefill_r+0x2c>
   1ea86:	4b38      	ldr	r3, [pc, #224]	; (1eb68 <__srefill_r+0xfc>)
   1ea88:	429c      	cmp	r4, r3
   1ea8a:	d101      	bne.n	1ea90 <__srefill_r+0x24>
   1ea8c:	68ac      	ldr	r4, [r5, #8]
   1ea8e:	e003      	b.n	1ea98 <__srefill_r+0x2c>
   1ea90:	4b36      	ldr	r3, [pc, #216]	; (1eb6c <__srefill_r+0x100>)
   1ea92:	429c      	cmp	r4, r3
   1ea94:	bf08      	it	eq
   1ea96:	68ec      	ldreq	r4, [r5, #12]
   1ea98:	89a2      	ldrh	r2, [r4, #12]
   1ea9a:	2300      	movs	r3, #0
   1ea9c:	6063      	str	r3, [r4, #4]
   1ea9e:	b293      	uxth	r3, r2
   1eaa0:	069e      	lsls	r6, r3, #26
   1eaa2:	d45a      	bmi.n	1eb5a <__srefill_r+0xee>
   1eaa4:	0758      	lsls	r0, r3, #29
   1eaa6:	d41a      	bmi.n	1eade <__srefill_r+0x72>
   1eaa8:	06d9      	lsls	r1, r3, #27
   1eaaa:	d405      	bmi.n	1eab8 <__srefill_r+0x4c>
   1eaac:	2309      	movs	r3, #9
   1eaae:	f042 0240 	orr.w	r2, r2, #64	; 0x40
   1eab2:	602b      	str	r3, [r5, #0]
   1eab4:	81a2      	strh	r2, [r4, #12]
   1eab6:	e050      	b.n	1eb5a <__srefill_r+0xee>
   1eab8:	071a      	lsls	r2, r3, #28
   1eaba:	d50b      	bpl.n	1ead4 <__srefill_r+0x68>
   1eabc:	4628      	mov	r0, r5
   1eabe:	4621      	mov	r1, r4
   1eac0:	f003 ffea 	bl	22a98 <_fflush_r>
   1eac4:	2800      	cmp	r0, #0
   1eac6:	d148      	bne.n	1eb5a <__srefill_r+0xee>
   1eac8:	89a3      	ldrh	r3, [r4, #12]
   1eaca:	60a0      	str	r0, [r4, #8]
   1eacc:	f023 0308 	bic.w	r3, r3, #8
   1ead0:	81a3      	strh	r3, [r4, #12]
   1ead2:	61a0      	str	r0, [r4, #24]
   1ead4:	89a3      	ldrh	r3, [r4, #12]
   1ead6:	f043 0304 	orr.w	r3, r3, #4
   1eada:	81a3      	strh	r3, [r4, #12]
   1eadc:	e010      	b.n	1eb00 <__srefill_r+0x94>
   1eade:	6b61      	ldr	r1, [r4, #52]	; 0x34
   1eae0:	b171      	cbz	r1, 1eb00 <__srefill_r+0x94>
   1eae2:	f104 0344 	add.w	r3, r4, #68	; 0x44
   1eae6:	4299      	cmp	r1, r3
   1eae8:	d002      	beq.n	1eaf0 <__srefill_r+0x84>
   1eaea:	4628      	mov	r0, r5
   1eaec:	f7ff fe00 	bl	1e6f0 <_free_r>
   1eaf0:	6c23      	ldr	r3, [r4, #64]	; 0x40
   1eaf2:	2000      	movs	r0, #0
   1eaf4:	6360      	str	r0, [r4, #52]	; 0x34
   1eaf6:	6063      	str	r3, [r4, #4]
   1eaf8:	b113      	cbz	r3, 1eb00 <__srefill_r+0x94>
   1eafa:	6be3      	ldr	r3, [r4, #60]	; 0x3c
   1eafc:	6023      	str	r3, [r4, #0]
   1eafe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1eb00:	6923      	ldr	r3, [r4, #16]
   1eb02:	b91b      	cbnz	r3, 1eb0c <__srefill_r+0xa0>
   1eb04:	4628      	mov	r0, r5
   1eb06:	4621      	mov	r1, r4
   1eb08:	f004 fb4a 	bl	231a0 <__smakebuf_r>
   1eb0c:	89a7      	ldrh	r7, [r4, #12]
   1eb0e:	b2be      	uxth	r6, r7
   1eb10:	07b3      	lsls	r3, r6, #30
   1eb12:	d00f      	beq.n	1eb34 <__srefill_r+0xc8>
   1eb14:	2301      	movs	r3, #1
   1eb16:	81a3      	strh	r3, [r4, #12]
   1eb18:	4b15      	ldr	r3, [pc, #84]	; (1eb70 <__srefill_r+0x104>)
   1eb1a:	4916      	ldr	r1, [pc, #88]	; (1eb74 <__srefill_r+0x108>)
   1eb1c:	6818      	ldr	r0, [r3, #0]
   1eb1e:	f006 0609 	and.w	r6, r6, #9
   1eb22:	f7ff f8dd 	bl	1dce0 <_fwalk>
   1eb26:	2e09      	cmp	r6, #9
   1eb28:	81a7      	strh	r7, [r4, #12]
   1eb2a:	d103      	bne.n	1eb34 <__srefill_r+0xc8>
   1eb2c:	4628      	mov	r0, r5
   1eb2e:	4621      	mov	r1, r4
   1eb30:	f003 ff2e 	bl	22990 <__sflush_r>
   1eb34:	6922      	ldr	r2, [r4, #16]
   1eb36:	6a66      	ldr	r6, [r4, #36]	; 0x24
   1eb38:	6022      	str	r2, [r4, #0]
   1eb3a:	4628      	mov	r0, r5
   1eb3c:	6a21      	ldr	r1, [r4, #32]
   1eb3e:	6963      	ldr	r3, [r4, #20]
   1eb40:	47b0      	blx	r6
   1eb42:	2800      	cmp	r0, #0
   1eb44:	6060      	str	r0, [r4, #4]
   1eb46:	dc0b      	bgt.n	1eb60 <__srefill_r+0xf4>
   1eb48:	89a3      	ldrh	r3, [r4, #12]
   1eb4a:	bf17      	itett	ne
   1eb4c:	2200      	movne	r2, #0
   1eb4e:	f043 0320 	orreq.w	r3, r3, #32
   1eb52:	f043 0340 	orrne.w	r3, r3, #64	; 0x40
   1eb56:	6062      	strne	r2, [r4, #4]
   1eb58:	81a3      	strh	r3, [r4, #12]
   1eb5a:	f04f 30ff 	mov.w	r0, #4294967295
   1eb5e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1eb60:	2000      	movs	r0, #0
   1eb62:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1eb64:	000270cc 	.word	0x000270cc
   1eb68:	000270ec 	.word	0x000270ec
   1eb6c:	0002710c 	.word	0x0002710c
   1eb70:	00027130 	.word	0x00027130
   1eb74:	0001ea59 	.word	0x0001ea59

0001eb78 <_sbrk_r>:
_sbrk_r():
   1eb78:	b538      	push	{r3, r4, r5, lr}
   1eb7a:	4c06      	ldr	r4, [pc, #24]	; (1eb94 <_sbrk_r+0x1c>)
   1eb7c:	2300      	movs	r3, #0
   1eb7e:	4605      	mov	r5, r0
   1eb80:	4608      	mov	r0, r1
   1eb82:	6023      	str	r3, [r4, #0]
   1eb84:	f7f1 fb3a 	bl	101fc <_sbrk>
   1eb88:	1c43      	adds	r3, r0, #1
   1eb8a:	d102      	bne.n	1eb92 <_sbrk_r+0x1a>
   1eb8c:	6823      	ldr	r3, [r4, #0]
   1eb8e:	b103      	cbz	r3, 1eb92 <_sbrk_r+0x1a>
   1eb90:	602b      	str	r3, [r5, #0]
   1eb92:	bd38      	pop	{r3, r4, r5, pc}
   1eb94:	2007cb20 	.word	0x2007cb20

0001eb98 <iscanf>:
iscanf():
   1eb98:	b40f      	push	{r0, r1, r2, r3}
   1eb9a:	4b0a      	ldr	r3, [pc, #40]	; (1ebc4 <iscanf+0x2c>)
   1eb9c:	b513      	push	{r0, r1, r4, lr}
   1eb9e:	681c      	ldr	r4, [r3, #0]
   1eba0:	b124      	cbz	r4, 1ebac <iscanf+0x14>
   1eba2:	69a3      	ldr	r3, [r4, #24]
   1eba4:	b913      	cbnz	r3, 1ebac <iscanf+0x14>
   1eba6:	4620      	mov	r0, r4
   1eba8:	f7ff f830 	bl	1dc0c <__sinit>
   1ebac:	ab05      	add	r3, sp, #20
   1ebae:	4620      	mov	r0, r4
   1ebb0:	6861      	ldr	r1, [r4, #4]
   1ebb2:	9a04      	ldr	r2, [sp, #16]
   1ebb4:	9301      	str	r3, [sp, #4]
   1ebb6:	f002 fb8f 	bl	212d8 <_vfiscanf_r>
   1ebba:	b002      	add	sp, #8
   1ebbc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   1ebc0:	b004      	add	sp, #16
   1ebc2:	4770      	bx	lr
   1ebc4:	2007c150 	.word	0x2007c150

0001ebc8 <setvbuf>:
setvbuf():
   1ebc8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1ebcc:	461e      	mov	r6, r3
   1ebce:	4b3d      	ldr	r3, [pc, #244]	; (1ecc4 <setvbuf+0xfc>)
   1ebd0:	4604      	mov	r4, r0
   1ebd2:	681d      	ldr	r5, [r3, #0]
   1ebd4:	460f      	mov	r7, r1
   1ebd6:	4690      	mov	r8, r2
   1ebd8:	b125      	cbz	r5, 1ebe4 <setvbuf+0x1c>
   1ebda:	69ab      	ldr	r3, [r5, #24]
   1ebdc:	b913      	cbnz	r3, 1ebe4 <setvbuf+0x1c>
   1ebde:	4628      	mov	r0, r5
   1ebe0:	f7ff f814 	bl	1dc0c <__sinit>
   1ebe4:	4b38      	ldr	r3, [pc, #224]	; (1ecc8 <setvbuf+0x100>)
   1ebe6:	429c      	cmp	r4, r3
   1ebe8:	d101      	bne.n	1ebee <setvbuf+0x26>
   1ebea:	686c      	ldr	r4, [r5, #4]
   1ebec:	e008      	b.n	1ec00 <setvbuf+0x38>
   1ebee:	4b37      	ldr	r3, [pc, #220]	; (1eccc <setvbuf+0x104>)
   1ebf0:	429c      	cmp	r4, r3
   1ebf2:	d101      	bne.n	1ebf8 <setvbuf+0x30>
   1ebf4:	68ac      	ldr	r4, [r5, #8]
   1ebf6:	e003      	b.n	1ec00 <setvbuf+0x38>
   1ebf8:	4b35      	ldr	r3, [pc, #212]	; (1ecd0 <setvbuf+0x108>)
   1ebfa:	429c      	cmp	r4, r3
   1ebfc:	bf08      	it	eq
   1ebfe:	68ec      	ldreq	r4, [r5, #12]
   1ec00:	f1b8 0f02 	cmp.w	r8, #2
   1ec04:	d859      	bhi.n	1ecba <setvbuf+0xf2>
   1ec06:	2e00      	cmp	r6, #0
   1ec08:	db57      	blt.n	1ecba <setvbuf+0xf2>
   1ec0a:	4628      	mov	r0, r5
   1ec0c:	4621      	mov	r1, r4
   1ec0e:	f003 ff43 	bl	22a98 <_fflush_r>
   1ec12:	2300      	movs	r3, #0
   1ec14:	6063      	str	r3, [r4, #4]
   1ec16:	61a3      	str	r3, [r4, #24]
   1ec18:	89a3      	ldrh	r3, [r4, #12]
   1ec1a:	061b      	lsls	r3, r3, #24
   1ec1c:	d503      	bpl.n	1ec26 <setvbuf+0x5e>
   1ec1e:	4628      	mov	r0, r5
   1ec20:	6921      	ldr	r1, [r4, #16]
   1ec22:	f7ff fd65 	bl	1e6f0 <_free_r>
   1ec26:	89a3      	ldrh	r3, [r4, #12]
   1ec28:	f1b8 0f02 	cmp.w	r8, #2
   1ec2c:	f023 0383 	bic.w	r3, r3, #131	; 0x83
   1ec30:	81a3      	strh	r3, [r4, #12]
   1ec32:	d012      	beq.n	1ec5a <setvbuf+0x92>
   1ec34:	bb37      	cbnz	r7, 1ec84 <setvbuf+0xbc>
   1ec36:	2e00      	cmp	r6, #0
   1ec38:	bf08      	it	eq
   1ec3a:	f44f 6680 	moveq.w	r6, #1024	; 0x400
   1ec3e:	4630      	mov	r0, r6
   1ec40:	f7ff f8c4 	bl	1ddcc <malloc>
   1ec44:	4607      	mov	r7, r0
   1ec46:	b9c8      	cbnz	r0, 1ec7c <setvbuf+0xb4>
   1ec48:	f44f 6080 	mov.w	r0, #1024	; 0x400
   1ec4c:	f7ff f8be 	bl	1ddcc <malloc>
   1ec50:	4607      	mov	r7, r0
   1ec52:	b988      	cbnz	r0, 1ec78 <setvbuf+0xb0>
   1ec54:	f04f 30ff 	mov.w	r0, #4294967295
   1ec58:	e000      	b.n	1ec5c <setvbuf+0x94>
   1ec5a:	2000      	movs	r0, #0
   1ec5c:	89a3      	ldrh	r3, [r4, #12]
   1ec5e:	f043 0302 	orr.w	r3, r3, #2
   1ec62:	81a3      	strh	r3, [r4, #12]
   1ec64:	2300      	movs	r3, #0
   1ec66:	60a3      	str	r3, [r4, #8]
   1ec68:	f104 0347 	add.w	r3, r4, #71	; 0x47
   1ec6c:	6023      	str	r3, [r4, #0]
   1ec6e:	6123      	str	r3, [r4, #16]
   1ec70:	2301      	movs	r3, #1
   1ec72:	6163      	str	r3, [r4, #20]
   1ec74:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1ec78:	f44f 6680 	mov.w	r6, #1024	; 0x400
   1ec7c:	89a3      	ldrh	r3, [r4, #12]
   1ec7e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   1ec82:	81a3      	strh	r3, [r4, #12]
   1ec84:	f1b8 0f01 	cmp.w	r8, #1
   1ec88:	d105      	bne.n	1ec96 <setvbuf+0xce>
   1ec8a:	89a3      	ldrh	r3, [r4, #12]
   1ec8c:	f043 0301 	orr.w	r3, r3, #1
   1ec90:	81a3      	strh	r3, [r4, #12]
   1ec92:	4273      	negs	r3, r6
   1ec94:	61a3      	str	r3, [r4, #24]
   1ec96:	4b0f      	ldr	r3, [pc, #60]	; (1ecd4 <setvbuf+0x10c>)
   1ec98:	62ab      	str	r3, [r5, #40]	; 0x28
   1ec9a:	89a3      	ldrh	r3, [r4, #12]
   1ec9c:	6027      	str	r7, [r4, #0]
   1ec9e:	f003 0008 	and.w	r0, r3, #8
   1eca2:	b280      	uxth	r0, r0
   1eca4:	6127      	str	r7, [r4, #16]
   1eca6:	6166      	str	r6, [r4, #20]
   1eca8:	b148      	cbz	r0, 1ecbe <setvbuf+0xf6>
   1ecaa:	f013 0f03 	tst.w	r3, #3
   1ecae:	bf18      	it	ne
   1ecb0:	2600      	movne	r6, #0
   1ecb2:	60a6      	str	r6, [r4, #8]
   1ecb4:	2000      	movs	r0, #0
   1ecb6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1ecba:	f04f 30ff 	mov.w	r0, #4294967295
   1ecbe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1ecc2:	bf00      	nop
   1ecc4:	2007c150 	.word	0x2007c150
   1ecc8:	000270cc 	.word	0x000270cc
   1eccc:	000270ec 	.word	0x000270ec
   1ecd0:	0002710c 	.word	0x0002710c
   1ecd4:	0001db65 	.word	0x0001db65

0001ecd8 <_raise_r>:
_raise_r():
   1ecd8:	291f      	cmp	r1, #31
   1ecda:	b538      	push	{r3, r4, r5, lr}
   1ecdc:	4605      	mov	r5, r0
   1ecde:	460c      	mov	r4, r1
   1ece0:	d904      	bls.n	1ecec <_raise_r+0x14>
   1ece2:	2316      	movs	r3, #22
   1ece4:	6003      	str	r3, [r0, #0]
   1ece6:	f04f 30ff 	mov.w	r0, #4294967295
   1ecea:	bd38      	pop	{r3, r4, r5, pc}
   1ecec:	6c42      	ldr	r2, [r0, #68]	; 0x44
   1ecee:	b112      	cbz	r2, 1ecf6 <_raise_r+0x1e>
   1ecf0:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
   1ecf4:	b94b      	cbnz	r3, 1ed0a <_raise_r+0x32>
   1ecf6:	4628      	mov	r0, r5
   1ecf8:	f000 f830 	bl	1ed5c <_getpid_r>
   1ecfc:	4622      	mov	r2, r4
   1ecfe:	4601      	mov	r1, r0
   1ed00:	4628      	mov	r0, r5
   1ed02:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   1ed06:	f000 b817 	b.w	1ed38 <_kill_r>
   1ed0a:	2b01      	cmp	r3, #1
   1ed0c:	d00a      	beq.n	1ed24 <_raise_r+0x4c>
   1ed0e:	1c59      	adds	r1, r3, #1
   1ed10:	d103      	bne.n	1ed1a <_raise_r+0x42>
   1ed12:	2316      	movs	r3, #22
   1ed14:	6003      	str	r3, [r0, #0]
   1ed16:	2001      	movs	r0, #1
   1ed18:	bd38      	pop	{r3, r4, r5, pc}
   1ed1a:	2500      	movs	r5, #0
   1ed1c:	f842 5024 	str.w	r5, [r2, r4, lsl #2]
   1ed20:	4620      	mov	r0, r4
   1ed22:	4798      	blx	r3
   1ed24:	2000      	movs	r0, #0
   1ed26:	bd38      	pop	{r3, r4, r5, pc}

0001ed28 <raise>:
raise():
   1ed28:	4b02      	ldr	r3, [pc, #8]	; (1ed34 <raise+0xc>)
   1ed2a:	4601      	mov	r1, r0
   1ed2c:	6818      	ldr	r0, [r3, #0]
   1ed2e:	f7ff bfd3 	b.w	1ecd8 <_raise_r>
   1ed32:	bf00      	nop
   1ed34:	2007c150 	.word	0x2007c150

0001ed38 <_kill_r>:
_kill_r():
   1ed38:	b538      	push	{r3, r4, r5, lr}
   1ed3a:	4c07      	ldr	r4, [pc, #28]	; (1ed58 <_kill_r+0x20>)
   1ed3c:	2300      	movs	r3, #0
   1ed3e:	4605      	mov	r5, r0
   1ed40:	4608      	mov	r0, r1
   1ed42:	4611      	mov	r1, r2
   1ed44:	6023      	str	r3, [r4, #0]
   1ed46:	f7f1 faff 	bl	10348 <_kill>
   1ed4a:	1c43      	adds	r3, r0, #1
   1ed4c:	d102      	bne.n	1ed54 <_kill_r+0x1c>
   1ed4e:	6823      	ldr	r3, [r4, #0]
   1ed50:	b103      	cbz	r3, 1ed54 <_kill_r+0x1c>
   1ed52:	602b      	str	r3, [r5, #0]
   1ed54:	bd38      	pop	{r3, r4, r5, pc}
   1ed56:	bf00      	nop
   1ed58:	2007cb20 	.word	0x2007cb20

0001ed5c <_getpid_r>:
_getpid_r():
   1ed5c:	f7f1 bb04 	b.w	10368 <_getpid>

0001ed60 <siprintf>:
sprintf():
   1ed60:	b40e      	push	{r1, r2, r3}
   1ed62:	b500      	push	{lr}
   1ed64:	f44f 7102 	mov.w	r1, #520	; 0x208
   1ed68:	b09c      	sub	sp, #112	; 0x70
   1ed6a:	f8ad 1014 	strh.w	r1, [sp, #20]
   1ed6e:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
   1ed72:	9104      	str	r1, [sp, #16]
   1ed74:	9107      	str	r1, [sp, #28]
   1ed76:	f64f 71ff 	movw	r1, #65535	; 0xffff
   1ed7a:	ab1d      	add	r3, sp, #116	; 0x74
   1ed7c:	f8ad 1016 	strh.w	r1, [sp, #22]
   1ed80:	4908      	ldr	r1, [pc, #32]	; (1eda4 <siprintf+0x44>)
   1ed82:	f853 2b04 	ldr.w	r2, [r3], #4
   1ed86:	9002      	str	r0, [sp, #8]
   1ed88:	9006      	str	r0, [sp, #24]
   1ed8a:	6808      	ldr	r0, [r1, #0]
   1ed8c:	a902      	add	r1, sp, #8
   1ed8e:	9301      	str	r3, [sp, #4]
   1ed90:	f001 f884 	bl	1fe9c <_svfiprintf_r>
   1ed94:	9b02      	ldr	r3, [sp, #8]
   1ed96:	2200      	movs	r2, #0
   1ed98:	701a      	strb	r2, [r3, #0]
   1ed9a:	b01c      	add	sp, #112	; 0x70
   1ed9c:	f85d eb04 	ldr.w	lr, [sp], #4
   1eda0:	b003      	add	sp, #12
   1eda2:	4770      	bx	lr
   1eda4:	2007c150 	.word	0x2007c150

0001eda8 <__sread>:
__sread():
   1eda8:	b510      	push	{r4, lr}
   1edaa:	460c      	mov	r4, r1
   1edac:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   1edb0:	f004 fe74 	bl	23a9c <_read_r>
   1edb4:	2800      	cmp	r0, #0
   1edb6:	db03      	blt.n	1edc0 <__sread+0x18>
   1edb8:	6d63      	ldr	r3, [r4, #84]	; 0x54
   1edba:	4403      	add	r3, r0
   1edbc:	6563      	str	r3, [r4, #84]	; 0x54
   1edbe:	bd10      	pop	{r4, pc}
   1edc0:	89a3      	ldrh	r3, [r4, #12]
   1edc2:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
   1edc6:	81a3      	strh	r3, [r4, #12]
   1edc8:	bd10      	pop	{r4, pc}

0001edca <__seofread>:
__seofread():
   1edca:	2000      	movs	r0, #0
   1edcc:	4770      	bx	lr

0001edce <__swrite>:
__swrite():
   1edce:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1edd2:	461d      	mov	r5, r3
   1edd4:	898b      	ldrh	r3, [r1, #12]
   1edd6:	4607      	mov	r7, r0
   1edd8:	05db      	lsls	r3, r3, #23
   1edda:	460c      	mov	r4, r1
   1eddc:	4616      	mov	r6, r2
   1edde:	d505      	bpl.n	1edec <__swrite+0x1e>
   1ede0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   1ede4:	2200      	movs	r2, #0
   1ede6:	2302      	movs	r3, #2
   1ede8:	f004 f9c8 	bl	2317c <_lseek_r>
   1edec:	89a3      	ldrh	r3, [r4, #12]
   1edee:	4638      	mov	r0, r7
   1edf0:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
   1edf4:	81a3      	strh	r3, [r4, #12]
   1edf6:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   1edfa:	4632      	mov	r2, r6
   1edfc:	462b      	mov	r3, r5
   1edfe:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   1ee02:	f002 be93 	b.w	21b2c <_write_r>

0001ee06 <__sseek>:
__sseek():
   1ee06:	b510      	push	{r4, lr}
   1ee08:	460c      	mov	r4, r1
   1ee0a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   1ee0e:	f004 f9b5 	bl	2317c <_lseek_r>
   1ee12:	1c43      	adds	r3, r0, #1
   1ee14:	89a3      	ldrh	r3, [r4, #12]
   1ee16:	d103      	bne.n	1ee20 <__sseek+0x1a>
   1ee18:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
   1ee1c:	81a3      	strh	r3, [r4, #12]
   1ee1e:	bd10      	pop	{r4, pc}
   1ee20:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
   1ee24:	81a3      	strh	r3, [r4, #12]
   1ee26:	6560      	str	r0, [r4, #84]	; 0x54
   1ee28:	bd10      	pop	{r4, pc}

0001ee2a <__sclose>:
__sclose():
   1ee2a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   1ee2e:	f002 bf39 	b.w	21ca4 <_close_r>
	...

0001ee34 <strcasecmp>:
strcasecmp():
   1ee34:	4b0d      	ldr	r3, [pc, #52]	; (1ee6c <strcasecmp+0x38>)
   1ee36:	b570      	push	{r4, r5, r6, lr}
   1ee38:	681d      	ldr	r5, [r3, #0]
   1ee3a:	2200      	movs	r2, #0
   1ee3c:	5c84      	ldrb	r4, [r0, r2]
   1ee3e:	192b      	adds	r3, r5, r4
   1ee40:	785b      	ldrb	r3, [r3, #1]
   1ee42:	f003 0303 	and.w	r3, r3, #3
   1ee46:	2b01      	cmp	r3, #1
   1ee48:	5c8b      	ldrb	r3, [r1, r2]
   1ee4a:	bf08      	it	eq
   1ee4c:	3420      	addeq	r4, #32
   1ee4e:	18ee      	adds	r6, r5, r3
   1ee50:	7876      	ldrb	r6, [r6, #1]
   1ee52:	f006 0603 	and.w	r6, r6, #3
   1ee56:	2e01      	cmp	r6, #1
   1ee58:	bf08      	it	eq
   1ee5a:	3320      	addeq	r3, #32
   1ee5c:	1ae4      	subs	r4, r4, r3
   1ee5e:	d102      	bne.n	1ee66 <strcasecmp+0x32>
   1ee60:	3201      	adds	r2, #1
   1ee62:	2b00      	cmp	r3, #0
   1ee64:	d1ea      	bne.n	1ee3c <strcasecmp+0x8>
   1ee66:	4620      	mov	r0, r4
   1ee68:	bd70      	pop	{r4, r5, r6, pc}
   1ee6a:	bf00      	nop
   1ee6c:	2007c0ec 	.word	0x2007c0ec

0001ee70 <strcat>:
strcat():
   1ee70:	b510      	push	{r4, lr}
   1ee72:	4604      	mov	r4, r0
   1ee74:	4622      	mov	r2, r4
   1ee76:	7813      	ldrb	r3, [r2, #0]
   1ee78:	3401      	adds	r4, #1
   1ee7a:	2b00      	cmp	r3, #0
   1ee7c:	d1fa      	bne.n	1ee74 <strcat+0x4>
   1ee7e:	5ccc      	ldrb	r4, [r1, r3]
   1ee80:	54d4      	strb	r4, [r2, r3]
   1ee82:	3301      	adds	r3, #1
   1ee84:	2c00      	cmp	r4, #0
   1ee86:	d1fa      	bne.n	1ee7e <strcat+0xe>
   1ee88:	bd10      	pop	{r4, pc}

0001ee8a <strchr>:
strchr():
   1ee8a:	b2c9      	uxtb	r1, r1
   1ee8c:	4602      	mov	r2, r0
   1ee8e:	f810 3b01 	ldrb.w	r3, [r0], #1
   1ee92:	b11b      	cbz	r3, 1ee9c <strchr+0x12>
   1ee94:	428b      	cmp	r3, r1
   1ee96:	d1f9      	bne.n	1ee8c <strchr+0x2>
   1ee98:	4610      	mov	r0, r2
   1ee9a:	4770      	bx	lr
   1ee9c:	2900      	cmp	r1, #0
   1ee9e:	d0fb      	beq.n	1ee98 <strchr+0xe>
   1eea0:	4618      	mov	r0, r3
   1eea2:	4770      	bx	lr

0001eea4 <strcmp>:
$t():
   1eea4:	f810 2b01 	ldrb.w	r2, [r0], #1
   1eea8:	f811 3b01 	ldrb.w	r3, [r1], #1
   1eeac:	2a01      	cmp	r2, #1
   1eeae:	bf28      	it	cs
   1eeb0:	429a      	cmpcs	r2, r3
   1eeb2:	d0f7      	beq.n	1eea4 <strcmp>
   1eeb4:	1ad0      	subs	r0, r2, r3
   1eeb6:	4770      	bx	lr

0001eeb8 <strcpy>:
strcpy():
   1eeb8:	4603      	mov	r3, r0
   1eeba:	f811 2b01 	ldrb.w	r2, [r1], #1
   1eebe:	f803 2b01 	strb.w	r2, [r3], #1
   1eec2:	2a00      	cmp	r2, #0
   1eec4:	d1f9      	bne.n	1eeba <strcpy+0x2>
   1eec6:	4770      	bx	lr

0001eec8 <strlen>:
strlen():
   1eec8:	4603      	mov	r3, r0
   1eeca:	f813 2b01 	ldrb.w	r2, [r3], #1
   1eece:	2a00      	cmp	r2, #0
   1eed0:	d1fb      	bne.n	1eeca <strlen+0x2>
   1eed2:	1a18      	subs	r0, r3, r0
   1eed4:	3801      	subs	r0, #1
   1eed6:	4770      	bx	lr

0001eed8 <strncasecmp>:
strncasecmp():
   1eed8:	4b0f      	ldr	r3, [pc, #60]	; (1ef18 <strncasecmp+0x40>)
   1eeda:	b5f0      	push	{r4, r5, r6, r7, lr}
   1eedc:	681e      	ldr	r6, [r3, #0]
   1eede:	2300      	movs	r3, #0
   1eee0:	4293      	cmp	r3, r2
   1eee2:	d015      	beq.n	1ef10 <strncasecmp+0x38>
   1eee4:	5cc5      	ldrb	r5, [r0, r3]
   1eee6:	1974      	adds	r4, r6, r5
   1eee8:	7864      	ldrb	r4, [r4, #1]
   1eeea:	f004 0403 	and.w	r4, r4, #3
   1eeee:	2c01      	cmp	r4, #1
   1eef0:	5ccc      	ldrb	r4, [r1, r3]
   1eef2:	bf08      	it	eq
   1eef4:	3520      	addeq	r5, #32
   1eef6:	1937      	adds	r7, r6, r4
   1eef8:	787f      	ldrb	r7, [r7, #1]
   1eefa:	f007 0703 	and.w	r7, r7, #3
   1eefe:	2f01      	cmp	r7, #1
   1ef00:	bf08      	it	eq
   1ef02:	3420      	addeq	r4, #32
   1ef04:	1b2d      	subs	r5, r5, r4
   1ef06:	d104      	bne.n	1ef12 <strncasecmp+0x3a>
   1ef08:	3301      	adds	r3, #1
   1ef0a:	2c00      	cmp	r4, #0
   1ef0c:	d1e8      	bne.n	1eee0 <strncasecmp+0x8>
   1ef0e:	e000      	b.n	1ef12 <strncasecmp+0x3a>
   1ef10:	2500      	movs	r5, #0
   1ef12:	4628      	mov	r0, r5
   1ef14:	bdf0      	pop	{r4, r5, r6, r7, pc}
   1ef16:	bf00      	nop
   1ef18:	2007c0ec 	.word	0x2007c0ec

0001ef1c <strncmp>:
strncmp():
   1ef1c:	b570      	push	{r4, r5, r6, lr}
   1ef1e:	b18a      	cbz	r2, 1ef44 <strncmp+0x28>
   1ef20:	460b      	mov	r3, r1
   1ef22:	4605      	mov	r5, r0
   1ef24:	781c      	ldrb	r4, [r3, #0]
   1ef26:	f810 6b01 	ldrb.w	r6, [r0], #1
   1ef2a:	3101      	adds	r1, #1
   1ef2c:	42b4      	cmp	r4, r6
   1ef2e:	d101      	bne.n	1ef34 <strncmp+0x18>
   1ef30:	2a01      	cmp	r2, #1
   1ef32:	d103      	bne.n	1ef3c <strncmp+0x20>
   1ef34:	7828      	ldrb	r0, [r5, #0]
   1ef36:	781b      	ldrb	r3, [r3, #0]
   1ef38:	1ac0      	subs	r0, r0, r3
   1ef3a:	bd70      	pop	{r4, r5, r6, pc}
   1ef3c:	3a01      	subs	r2, #1
   1ef3e:	2c00      	cmp	r4, #0
   1ef40:	d1ee      	bne.n	1ef20 <strncmp+0x4>
   1ef42:	e7f7      	b.n	1ef34 <strncmp+0x18>
   1ef44:	4610      	mov	r0, r2
   1ef46:	bd70      	pop	{r4, r5, r6, pc}

0001ef48 <strncpy>:
strncpy():
   1ef48:	b510      	push	{r4, lr}
   1ef4a:	4603      	mov	r3, r0
   1ef4c:	b132      	cbz	r2, 1ef5c <strncpy+0x14>
   1ef4e:	f811 4b01 	ldrb.w	r4, [r1], #1
   1ef52:	3a01      	subs	r2, #1
   1ef54:	f803 4b01 	strb.w	r4, [r3], #1
   1ef58:	2c00      	cmp	r4, #0
   1ef5a:	d1f7      	bne.n	1ef4c <strncpy+0x4>
   1ef5c:	441a      	add	r2, r3
   1ef5e:	4293      	cmp	r3, r2
   1ef60:	d003      	beq.n	1ef6a <strncpy+0x22>
   1ef62:	2100      	movs	r1, #0
   1ef64:	f803 1b01 	strb.w	r1, [r3], #1
   1ef68:	e7f9      	b.n	1ef5e <strncpy+0x16>
   1ef6a:	bd10      	pop	{r4, pc}

0001ef6c <strrchr>:
strrchr():
   1ef6c:	b538      	push	{r3, r4, r5, lr}
   1ef6e:	4602      	mov	r2, r0
   1ef70:	460d      	mov	r5, r1
   1ef72:	b141      	cbz	r1, 1ef86 <strrchr+0x1a>
   1ef74:	2400      	movs	r4, #0
   1ef76:	4610      	mov	r0, r2
   1ef78:	4629      	mov	r1, r5
   1ef7a:	f7ff ff86 	bl	1ee8a <strchr>
   1ef7e:	b130      	cbz	r0, 1ef8e <strrchr+0x22>
   1ef80:	1c42      	adds	r2, r0, #1
   1ef82:	4604      	mov	r4, r0
   1ef84:	e7f7      	b.n	1ef76 <strrchr+0xa>
   1ef86:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   1ef8a:	f7ff bf7e 	b.w	1ee8a <strchr>
   1ef8e:	4620      	mov	r0, r4
   1ef90:	bd38      	pop	{r3, r4, r5, pc}

0001ef92 <strstr>:
strstr():
   1ef92:	b530      	push	{r4, r5, lr}
   1ef94:	7803      	ldrb	r3, [r0, #0]
   1ef96:	b10b      	cbz	r3, 1ef9c <strstr+0xa>
   1ef98:	4604      	mov	r4, r0
   1ef9a:	e004      	b.n	1efa6 <strstr+0x14>
   1ef9c:	780b      	ldrb	r3, [r1, #0]
   1ef9e:	2b00      	cmp	r3, #0
   1efa0:	bf18      	it	ne
   1efa2:	2000      	movne	r0, #0
   1efa4:	bd30      	pop	{r4, r5, pc}
   1efa6:	4622      	mov	r2, r4
   1efa8:	7810      	ldrb	r0, [r2, #0]
   1efaa:	3401      	adds	r4, #1
   1efac:	b138      	cbz	r0, 1efbe <strstr+0x2c>
   1efae:	2300      	movs	r3, #0
   1efb0:	5cc8      	ldrb	r0, [r1, r3]
   1efb2:	b128      	cbz	r0, 1efc0 <strstr+0x2e>
   1efb4:	5cd5      	ldrb	r5, [r2, r3]
   1efb6:	4285      	cmp	r5, r0
   1efb8:	d1f5      	bne.n	1efa6 <strstr+0x14>
   1efba:	3301      	adds	r3, #1
   1efbc:	e7f8      	b.n	1efb0 <strstr+0x1e>
   1efbe:	bd30      	pop	{r4, r5, pc}
   1efc0:	4610      	mov	r0, r2
   1efc2:	bd30      	pop	{r4, r5, pc}

0001efc4 <match>:
match():
   1efc4:	b530      	push	{r4, r5, lr}
   1efc6:	6802      	ldr	r2, [r0, #0]
   1efc8:	f811 5b01 	ldrb.w	r5, [r1], #1
   1efcc:	1c54      	adds	r4, r2, #1
   1efce:	b155      	cbz	r5, 1efe6 <match+0x22>
   1efd0:	7853      	ldrb	r3, [r2, #1]
   1efd2:	4622      	mov	r2, r4
   1efd4:	f1a3 0441 	sub.w	r4, r3, #65	; 0x41
   1efd8:	2c19      	cmp	r4, #25
   1efda:	bf98      	it	ls
   1efdc:	3320      	addls	r3, #32
   1efde:	42ab      	cmp	r3, r5
   1efe0:	d0f2      	beq.n	1efc8 <match+0x4>
   1efe2:	2000      	movs	r0, #0
   1efe4:	bd30      	pop	{r4, r5, pc}
   1efe6:	6004      	str	r4, [r0, #0]
   1efe8:	2001      	movs	r0, #1
   1efea:	bd30      	pop	{r4, r5, pc}

0001efec <sulp>:
sulp():
   1efec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1eff0:	460d      	mov	r5, r1
   1eff2:	4690      	mov	r8, r2
   1eff4:	f004 fbf4 	bl	237e0 <__ulp>
   1eff8:	4606      	mov	r6, r0
   1effa:	460f      	mov	r7, r1
   1effc:	f1b8 0f00 	cmp.w	r8, #0
   1f000:	d00f      	beq.n	1f022 <sulp+0x36>
   1f002:	f3c5 530a 	ubfx	r3, r5, #20, #11
   1f006:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
   1f00a:	2b00      	cmp	r3, #0
   1f00c:	dd09      	ble.n	1f022 <sulp+0x36>
   1f00e:	051c      	lsls	r4, r3, #20
   1f010:	f104 537f 	add.w	r3, r4, #1069547520	; 0x3fc00000
   1f014:	f503 1340 	add.w	r3, r3, #3145728	; 0x300000
   1f018:	2200      	movs	r2, #0
   1f01a:	f004 fe4d 	bl	23cb8 <__aeabi_dmul>
   1f01e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1f022:	4630      	mov	r0, r6
   1f024:	4639      	mov	r1, r7
   1f026:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1f02a:	0000      	movs	r0, r0
   1f02c:	0000      	movs	r0, r0
	...

0001f030 <_strtod_r>:
_strtod_r():
   1f030:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f034:	2300      	movs	r3, #0
   1f036:	b09f      	sub	sp, #124	; 0x7c
   1f038:	4681      	mov	r9, r0
   1f03a:	9104      	str	r1, [sp, #16]
   1f03c:	9215      	str	r2, [sp, #84]	; 0x54
   1f03e:	931a      	str	r3, [sp, #104]	; 0x68
   1f040:	f04f 0a00 	mov.w	sl, #0
   1f044:	f04f 0b00 	mov.w	fp, #0
   1f048:	9119      	str	r1, [sp, #100]	; 0x64
   1f04a:	9a19      	ldr	r2, [sp, #100]	; 0x64
   1f04c:	7813      	ldrb	r3, [r2, #0]
   1f04e:	2b0d      	cmp	r3, #13
   1f050:	d805      	bhi.n	1f05e <_strtod_r+0x2e>
   1f052:	2b09      	cmp	r3, #9
   1f054:	d214      	bcs.n	1f080 <_strtod_r+0x50>
   1f056:	2b00      	cmp	r3, #0
   1f058:	f000 81b1 	beq.w	1f3be <_strtod_r+0x38e>
   1f05c:	e013      	b.n	1f086 <_strtod_r+0x56>
   1f05e:	2b2b      	cmp	r3, #43	; 0x2b
   1f060:	d007      	beq.n	1f072 <_strtod_r+0x42>
   1f062:	2b2d      	cmp	r3, #45	; 0x2d
   1f064:	d002      	beq.n	1f06c <_strtod_r+0x3c>
   1f066:	2b20      	cmp	r3, #32
   1f068:	d10d      	bne.n	1f086 <_strtod_r+0x56>
   1f06a:	e009      	b.n	1f080 <_strtod_r+0x50>
   1f06c:	2601      	movs	r6, #1
   1f06e:	9609      	str	r6, [sp, #36]	; 0x24
   1f070:	e001      	b.n	1f076 <_strtod_r+0x46>
   1f072:	2700      	movs	r7, #0
   1f074:	9709      	str	r7, [sp, #36]	; 0x24
   1f076:	1c53      	adds	r3, r2, #1
   1f078:	9319      	str	r3, [sp, #100]	; 0x64
   1f07a:	7853      	ldrb	r3, [r2, #1]
   1f07c:	b92b      	cbnz	r3, 1f08a <_strtod_r+0x5a>
   1f07e:	e19e      	b.n	1f3be <_strtod_r+0x38e>
   1f080:	3201      	adds	r2, #1
   1f082:	9219      	str	r2, [sp, #100]	; 0x64
   1f084:	e7e1      	b.n	1f04a <_strtod_r+0x1a>
   1f086:	2600      	movs	r6, #0
   1f088:	9609      	str	r6, [sp, #36]	; 0x24
   1f08a:	9c19      	ldr	r4, [sp, #100]	; 0x64
   1f08c:	7823      	ldrb	r3, [r4, #0]
   1f08e:	2b30      	cmp	r3, #48	; 0x30
   1f090:	d15a      	bne.n	1f148 <_strtod_r+0x118>
   1f092:	7863      	ldrb	r3, [r4, #1]
   1f094:	2b58      	cmp	r3, #88	; 0x58
   1f096:	d001      	beq.n	1f09c <_strtod_r+0x6c>
   1f098:	2b78      	cmp	r3, #120	; 0x78
   1f09a:	d149      	bne.n	1f130 <_strtod_r+0x100>
   1f09c:	9f09      	ldr	r7, [sp, #36]	; 0x24
   1f09e:	ab1a      	add	r3, sp, #104	; 0x68
   1f0a0:	9300      	str	r3, [sp, #0]
   1f0a2:	9701      	str	r7, [sp, #4]
   1f0a4:	4648      	mov	r0, r9
   1f0a6:	a919      	add	r1, sp, #100	; 0x64
   1f0a8:	4a9c      	ldr	r2, [pc, #624]	; (1f31c <_strtod_r+0x2ec>)
   1f0aa:	ab1b      	add	r3, sp, #108	; 0x6c
   1f0ac:	f003 fd7a 	bl	22ba4 <__gethex>
   1f0b0:	f010 0607 	ands.w	r6, r0, #7
   1f0b4:	4605      	mov	r5, r0
   1f0b6:	f000 85ad 	beq.w	1fc14 <_strtod_r+0xbe4>
   1f0ba:	2e06      	cmp	r6, #6
   1f0bc:	d102      	bne.n	1f0c4 <_strtod_r+0x94>
   1f0be:	3401      	adds	r4, #1
   1f0c0:	9419      	str	r4, [sp, #100]	; 0x64
   1f0c2:	e17e      	b.n	1f3c2 <_strtod_r+0x392>
   1f0c4:	9a1a      	ldr	r2, [sp, #104]	; 0x68
   1f0c6:	b13a      	cbz	r2, 1f0d8 <_strtod_r+0xa8>
   1f0c8:	a81c      	add	r0, sp, #112	; 0x70
   1f0ca:	2135      	movs	r1, #53	; 0x35
   1f0cc:	f004 fc74 	bl	239b8 <__copybits>
   1f0d0:	4648      	mov	r0, r9
   1f0d2:	991a      	ldr	r1, [sp, #104]	; 0x68
   1f0d4:	f004 f8e5 	bl	232a2 <_Bfree>
   1f0d8:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
   1f0da:	2e06      	cmp	r6, #6
   1f0dc:	d821      	bhi.n	1f122 <_strtod_r+0xf2>
   1f0de:	e8df f006 	tbb	[pc, r6]
   1f0e2:	0d04      	.short	0x0d04
   1f0e4:	0d1c1708 	.word	0x0d1c1708
   1f0e8:	04          	.byte	0x04
   1f0e9:	00          	.byte	0x00
   1f0ea:	f04f 0b00 	mov.w	fp, #0
   1f0ee:	46da      	mov	sl, fp
   1f0f0:	e017      	b.n	1f122 <_strtod_r+0xf2>
   1f0f2:	f8dd a070 	ldr.w	sl, [sp, #112]	; 0x70
   1f0f6:	f8dd b074 	ldr.w	fp, [sp, #116]	; 0x74
   1f0fa:	e012      	b.n	1f122 <_strtod_r+0xf2>
   1f0fc:	9b1d      	ldr	r3, [sp, #116]	; 0x74
   1f0fe:	f202 4233 	addw	r2, r2, #1075	; 0x433
   1f102:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
   1f106:	f8dd a070 	ldr.w	sl, [sp, #112]	; 0x70
   1f10a:	ea43 5b02 	orr.w	fp, r3, r2, lsl #20
   1f10e:	e008      	b.n	1f122 <_strtod_r+0xf2>
   1f110:	f8df b20c 	ldr.w	fp, [pc, #524]	; 1f320 <_strtod_r+0x2f0>
   1f114:	f04f 0a00 	mov.w	sl, #0
   1f118:	e003      	b.n	1f122 <_strtod_r+0xf2>
   1f11a:	f06f 4b00 	mvn.w	fp, #2147483648	; 0x80000000
   1f11e:	f04f 3aff 	mov.w	sl, #4294967295
   1f122:	072b      	lsls	r3, r5, #28
   1f124:	f140 8576 	bpl.w	1fc14 <_strtod_r+0xbe4>
   1f128:	f04b 4b00 	orr.w	fp, fp, #2147483648	; 0x80000000
   1f12c:	f000 bd72 	b.w	1fc14 <_strtod_r+0xbe4>
   1f130:	9b19      	ldr	r3, [sp, #100]	; 0x64
   1f132:	1c5a      	adds	r2, r3, #1
   1f134:	9219      	str	r2, [sp, #100]	; 0x64
   1f136:	785b      	ldrb	r3, [r3, #1]
   1f138:	2b30      	cmp	r3, #48	; 0x30
   1f13a:	d0f9      	beq.n	1f130 <_strtod_r+0x100>
   1f13c:	2b00      	cmp	r3, #0
   1f13e:	f000 8569 	beq.w	1fc14 <_strtod_r+0xbe4>
   1f142:	2301      	movs	r3, #1
   1f144:	9305      	str	r3, [sp, #20]
   1f146:	e001      	b.n	1f14c <_strtod_r+0x11c>
   1f148:	2600      	movs	r6, #0
   1f14a:	9605      	str	r6, [sp, #20]
   1f14c:	9f19      	ldr	r7, [sp, #100]	; 0x64
   1f14e:	f04f 0800 	mov.w	r8, #0
   1f152:	9707      	str	r7, [sp, #28]
   1f154:	f8cd 800c 	str.w	r8, [sp, #12]
   1f158:	4644      	mov	r4, r8
   1f15a:	9e19      	ldr	r6, [sp, #100]	; 0x64
   1f15c:	7835      	ldrb	r5, [r6, #0]
   1f15e:	f1a5 0330 	sub.w	r3, r5, #48	; 0x30
   1f162:	b2da      	uxtb	r2, r3
   1f164:	2a09      	cmp	r2, #9
   1f166:	d810      	bhi.n	1f18a <_strtod_r+0x15a>
   1f168:	2c08      	cmp	r4, #8
   1f16a:	bfd8      	it	le
   1f16c:	9f03      	ldrle	r7, [sp, #12]
   1f16e:	f04f 020a 	mov.w	r2, #10
   1f172:	bfd8      	it	le
   1f174:	fb02 3707 	mlale	r7, r2, r7, r3
   1f178:	f106 0601 	add.w	r6, r6, #1
   1f17c:	bfd4      	ite	le
   1f17e:	9703      	strle	r7, [sp, #12]
   1f180:	fb02 3808 	mlagt	r8, r2, r8, r3
   1f184:	3401      	adds	r4, #1
   1f186:	9619      	str	r6, [sp, #100]	; 0x64
   1f188:	e7e7      	b.n	1f15a <_strtod_r+0x12a>
   1f18a:	4648      	mov	r0, r9
   1f18c:	f003 fff2 	bl	23174 <_localeconv_r>
   1f190:	6807      	ldr	r7, [r0, #0]
   1f192:	4648      	mov	r0, r9
   1f194:	f003 ffee 	bl	23174 <_localeconv_r>
   1f198:	6800      	ldr	r0, [r0, #0]
   1f19a:	f7ff fe95 	bl	1eec8 <strlen>
   1f19e:	4639      	mov	r1, r7
   1f1a0:	4602      	mov	r2, r0
   1f1a2:	4630      	mov	r0, r6
   1f1a4:	f7ff feba 	bl	1ef1c <strncmp>
   1f1a8:	4606      	mov	r6, r0
   1f1aa:	b128      	cbz	r0, 1f1b8 <_strtod_r+0x188>
   1f1ac:	2300      	movs	r3, #0
   1f1ae:	462a      	mov	r2, r5
   1f1b0:	4619      	mov	r1, r3
   1f1b2:	4625      	mov	r5, r4
   1f1b4:	930a      	str	r3, [sp, #40]	; 0x28
   1f1b6:	e05f      	b.n	1f278 <_strtod_r+0x248>
   1f1b8:	4648      	mov	r0, r9
   1f1ba:	9d19      	ldr	r5, [sp, #100]	; 0x64
   1f1bc:	f003 ffda 	bl	23174 <_localeconv_r>
   1f1c0:	6800      	ldr	r0, [r0, #0]
   1f1c2:	f7ff fe81 	bl	1eec8 <strlen>
   1f1c6:	182b      	adds	r3, r5, r0
   1f1c8:	9319      	str	r3, [sp, #100]	; 0x64
   1f1ca:	5c2a      	ldrb	r2, [r5, r0]
   1f1cc:	2c00      	cmp	r4, #0
   1f1ce:	d145      	bne.n	1f25c <_strtod_r+0x22c>
   1f1d0:	4623      	mov	r3, r4
   1f1d2:	2a30      	cmp	r2, #48	; 0x30
   1f1d4:	d105      	bne.n	1f1e2 <_strtod_r+0x1b2>
   1f1d6:	9a19      	ldr	r2, [sp, #100]	; 0x64
   1f1d8:	3301      	adds	r3, #1
   1f1da:	1c51      	adds	r1, r2, #1
   1f1dc:	9119      	str	r1, [sp, #100]	; 0x64
   1f1de:	7852      	ldrb	r2, [r2, #1]
   1f1e0:	e7f7      	b.n	1f1d2 <_strtod_r+0x1a2>
   1f1e2:	f1a2 0131 	sub.w	r1, r2, #49	; 0x31
   1f1e6:	2908      	cmp	r1, #8
   1f1e8:	d842      	bhi.n	1f270 <_strtod_r+0x240>
   1f1ea:	9e19      	ldr	r6, [sp, #100]	; 0x64
   1f1ec:	4619      	mov	r1, r3
   1f1ee:	2300      	movs	r3, #0
   1f1f0:	9607      	str	r6, [sp, #28]
   1f1f2:	461d      	mov	r5, r3
   1f1f4:	3a30      	subs	r2, #48	; 0x30
   1f1f6:	f103 0001 	add.w	r0, r3, #1
   1f1fa:	d029      	beq.n	1f250 <_strtod_r+0x220>
   1f1fc:	4401      	add	r1, r0
   1f1fe:	1c6e      	adds	r6, r5, #1
   1f200:	1b77      	subs	r7, r6, r5
   1f202:	4287      	cmp	r7, r0
   1f204:	da10      	bge.n	1f228 <_strtod_r+0x1f8>
   1f206:	1e77      	subs	r7, r6, #1
   1f208:	2f08      	cmp	r7, #8
   1f20a:	dc06      	bgt.n	1f21a <_strtod_r+0x1ea>
   1f20c:	9f03      	ldr	r7, [sp, #12]
   1f20e:	f04f 0c0a 	mov.w	ip, #10
   1f212:	fb0c f707 	mul.w	r7, ip, r7
   1f216:	9703      	str	r7, [sp, #12]
   1f218:	e004      	b.n	1f224 <_strtod_r+0x1f4>
   1f21a:	2e10      	cmp	r6, #16
   1f21c:	bfdc      	itt	le
   1f21e:	270a      	movle	r7, #10
   1f220:	fb07 f808 	mulle.w	r8, r7, r8
   1f224:	3601      	adds	r6, #1
   1f226:	e7eb      	b.n	1f200 <_strtod_r+0x1d0>
   1f228:	2b00      	cmp	r3, #0
   1f22a:	bfac      	ite	ge
   1f22c:	18eb      	addge	r3, r5, r3
   1f22e:	1c2b      	addlt	r3, r5, #0
   1f230:	2b08      	cmp	r3, #8
   1f232:	f103 0501 	add.w	r5, r3, #1
   1f236:	dc05      	bgt.n	1f244 <_strtod_r+0x214>
   1f238:	9e03      	ldr	r6, [sp, #12]
   1f23a:	230a      	movs	r3, #10
   1f23c:	fb03 2606 	mla	r6, r3, r6, r2
   1f240:	9603      	str	r6, [sp, #12]
   1f242:	e004      	b.n	1f24e <_strtod_r+0x21e>
   1f244:	2d10      	cmp	r5, #16
   1f246:	bfdc      	itt	le
   1f248:	230a      	movle	r3, #10
   1f24a:	fb03 2808 	mlale	r8, r3, r8, r2
   1f24e:	2000      	movs	r0, #0
   1f250:	9b19      	ldr	r3, [sp, #100]	; 0x64
   1f252:	1c5a      	adds	r2, r3, #1
   1f254:	9219      	str	r2, [sp, #100]	; 0x64
   1f256:	785a      	ldrb	r2, [r3, #1]
   1f258:	4603      	mov	r3, r0
   1f25a:	e002      	b.n	1f262 <_strtod_r+0x232>
   1f25c:	4625      	mov	r5, r4
   1f25e:	4633      	mov	r3, r6
   1f260:	4631      	mov	r1, r6
   1f262:	f1a2 0030 	sub.w	r0, r2, #48	; 0x30
   1f266:	2809      	cmp	r0, #9
   1f268:	d9c4      	bls.n	1f1f4 <_strtod_r+0x1c4>
   1f26a:	2701      	movs	r7, #1
   1f26c:	970a      	str	r7, [sp, #40]	; 0x28
   1f26e:	e003      	b.n	1f278 <_strtod_r+0x248>
   1f270:	2500      	movs	r5, #0
   1f272:	2001      	movs	r0, #1
   1f274:	4629      	mov	r1, r5
   1f276:	900a      	str	r0, [sp, #40]	; 0x28
   1f278:	f022 0620 	bic.w	r6, r2, #32
   1f27c:	2e45      	cmp	r6, #69	; 0x45
   1f27e:	d153      	bne.n	1f328 <_strtod_r+0x2f8>
   1f280:	b925      	cbnz	r5, 1f28c <_strtod_r+0x25c>
   1f282:	b91b      	cbnz	r3, 1f28c <_strtod_r+0x25c>
   1f284:	9e05      	ldr	r6, [sp, #20]
   1f286:	2e00      	cmp	r6, #0
   1f288:	f000 8099 	beq.w	1f3be <_strtod_r+0x38e>
   1f28c:	9f19      	ldr	r7, [sp, #100]	; 0x64
   1f28e:	1c7a      	adds	r2, r7, #1
   1f290:	9219      	str	r2, [sp, #100]	; 0x64
   1f292:	787a      	ldrb	r2, [r7, #1]
   1f294:	9704      	str	r7, [sp, #16]
   1f296:	2a2b      	cmp	r2, #43	; 0x2b
   1f298:	d004      	beq.n	1f2a4 <_strtod_r+0x274>
   1f29a:	2a2d      	cmp	r2, #45	; 0x2d
   1f29c:	d005      	beq.n	1f2aa <_strtod_r+0x27a>
   1f29e:	2600      	movs	r6, #0
   1f2a0:	960f      	str	r6, [sp, #60]	; 0x3c
   1f2a2:	e008      	b.n	1f2b6 <_strtod_r+0x286>
   1f2a4:	2000      	movs	r0, #0
   1f2a6:	900f      	str	r0, [sp, #60]	; 0x3c
   1f2a8:	e001      	b.n	1f2ae <_strtod_r+0x27e>
   1f2aa:	2701      	movs	r7, #1
   1f2ac:	970f      	str	r7, [sp, #60]	; 0x3c
   1f2ae:	9e04      	ldr	r6, [sp, #16]
   1f2b0:	1cb2      	adds	r2, r6, #2
   1f2b2:	9219      	str	r2, [sp, #100]	; 0x64
   1f2b4:	78b2      	ldrb	r2, [r6, #2]
   1f2b6:	f1a2 0730 	sub.w	r7, r2, #48	; 0x30
   1f2ba:	2f09      	cmp	r7, #9
   1f2bc:	d832      	bhi.n	1f324 <_strtod_r+0x2f4>
   1f2be:	2a30      	cmp	r2, #48	; 0x30
   1f2c0:	d104      	bne.n	1f2cc <_strtod_r+0x29c>
   1f2c2:	9a19      	ldr	r2, [sp, #100]	; 0x64
   1f2c4:	1c57      	adds	r7, r2, #1
   1f2c6:	9719      	str	r7, [sp, #100]	; 0x64
   1f2c8:	7852      	ldrb	r2, [r2, #1]
   1f2ca:	e7f8      	b.n	1f2be <_strtod_r+0x28e>
   1f2cc:	f1a2 0731 	sub.w	r7, r2, #49	; 0x31
   1f2d0:	2f08      	cmp	r7, #8
   1f2d2:	d829      	bhi.n	1f328 <_strtod_r+0x2f8>
   1f2d4:	9819      	ldr	r0, [sp, #100]	; 0x64
   1f2d6:	f1a2 0730 	sub.w	r7, r2, #48	; 0x30
   1f2da:	9006      	str	r0, [sp, #24]
   1f2dc:	9a19      	ldr	r2, [sp, #100]	; 0x64
   1f2de:	1c56      	adds	r6, r2, #1
   1f2e0:	9619      	str	r6, [sp, #100]	; 0x64
   1f2e2:	7852      	ldrb	r2, [r2, #1]
   1f2e4:	960e      	str	r6, [sp, #56]	; 0x38
   1f2e6:	f1a2 0630 	sub.w	r6, r2, #48	; 0x30
   1f2ea:	2e09      	cmp	r6, #9
   1f2ec:	d805      	bhi.n	1f2fa <_strtod_r+0x2ca>
   1f2ee:	f04f 0c0a 	mov.w	ip, #10
   1f2f2:	fb0c 2707 	mla	r7, ip, r7, r2
   1f2f6:	3f30      	subs	r7, #48	; 0x30
   1f2f8:	e7f0      	b.n	1f2dc <_strtod_r+0x2ac>
   1f2fa:	980e      	ldr	r0, [sp, #56]	; 0x38
   1f2fc:	9e06      	ldr	r6, [sp, #24]
   1f2fe:	ebc6 0c00 	rsb	ip, r6, r0
   1f302:	f1bc 0f08 	cmp.w	ip, #8
   1f306:	f644 6c1f 	movw	ip, #19999	; 0x4e1f
   1f30a:	dc02      	bgt.n	1f312 <_strtod_r+0x2e2>
   1f30c:	4567      	cmp	r7, ip
   1f30e:	bfb8      	it	lt
   1f310:	46bc      	movlt	ip, r7
   1f312:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
   1f314:	b157      	cbz	r7, 1f32c <_strtod_r+0x2fc>
   1f316:	f1cc 0c00 	rsb	ip, ip, #0
   1f31a:	e007      	b.n	1f32c <_strtod_r+0x2fc>
   1f31c:	00027228 	.word	0x00027228
   1f320:	7ff00000 	.word	0x7ff00000
   1f324:	9e04      	ldr	r6, [sp, #16]
   1f326:	9619      	str	r6, [sp, #100]	; 0x64
   1f328:	f04f 0c00 	mov.w	ip, #0
   1f32c:	2d00      	cmp	r5, #0
   1f32e:	d14c      	bne.n	1f3ca <_strtod_r+0x39a>
   1f330:	2b00      	cmp	r3, #0
   1f332:	f040 846f 	bne.w	1fc14 <_strtod_r+0xbe4>
   1f336:	9f05      	ldr	r7, [sp, #20]
   1f338:	2f00      	cmp	r7, #0
   1f33a:	f040 846b 	bne.w	1fc14 <_strtod_r+0xbe4>
   1f33e:	980a      	ldr	r0, [sp, #40]	; 0x28
   1f340:	2800      	cmp	r0, #0
   1f342:	d13c      	bne.n	1f3be <_strtod_r+0x38e>
   1f344:	2a4e      	cmp	r2, #78	; 0x4e
   1f346:	d01b      	beq.n	1f380 <_strtod_r+0x350>
   1f348:	dc02      	bgt.n	1f350 <_strtod_r+0x320>
   1f34a:	2a49      	cmp	r2, #73	; 0x49
   1f34c:	d005      	beq.n	1f35a <_strtod_r+0x32a>
   1f34e:	e036      	b.n	1f3be <_strtod_r+0x38e>
   1f350:	2a69      	cmp	r2, #105	; 0x69
   1f352:	d002      	beq.n	1f35a <_strtod_r+0x32a>
   1f354:	2a6e      	cmp	r2, #110	; 0x6e
   1f356:	d013      	beq.n	1f380 <_strtod_r+0x350>
   1f358:	e031      	b.n	1f3be <_strtod_r+0x38e>
   1f35a:	a819      	add	r0, sp, #100	; 0x64
   1f35c:	49ac      	ldr	r1, [pc, #688]	; (1f610 <_strtod_r+0x5e0>)
   1f35e:	f7ff fe31 	bl	1efc4 <match>
   1f362:	b360      	cbz	r0, 1f3be <_strtod_r+0x38e>
   1f364:	9b19      	ldr	r3, [sp, #100]	; 0x64
   1f366:	a819      	add	r0, sp, #100	; 0x64
   1f368:	3b01      	subs	r3, #1
   1f36a:	49aa      	ldr	r1, [pc, #680]	; (1f614 <_strtod_r+0x5e4>)
   1f36c:	9319      	str	r3, [sp, #100]	; 0x64
   1f36e:	f7ff fe29 	bl	1efc4 <match>
   1f372:	b910      	cbnz	r0, 1f37a <_strtod_r+0x34a>
   1f374:	9b19      	ldr	r3, [sp, #100]	; 0x64
   1f376:	3301      	adds	r3, #1
   1f378:	9319      	str	r3, [sp, #100]	; 0x64
   1f37a:	f8df b2b4 	ldr.w	fp, [pc, #692]	; 1f630 <_strtod_r+0x600>
   1f37e:	e01a      	b.n	1f3b6 <_strtod_r+0x386>
   1f380:	a819      	add	r0, sp, #100	; 0x64
   1f382:	49a5      	ldr	r1, [pc, #660]	; (1f618 <_strtod_r+0x5e8>)
   1f384:	f7ff fe1e 	bl	1efc4 <match>
   1f388:	b1c8      	cbz	r0, 1f3be <_strtod_r+0x38e>
   1f38a:	9b19      	ldr	r3, [sp, #100]	; 0x64
   1f38c:	781b      	ldrb	r3, [r3, #0]
   1f38e:	2b28      	cmp	r3, #40	; 0x28
   1f390:	d10f      	bne.n	1f3b2 <_strtod_r+0x382>
   1f392:	a819      	add	r0, sp, #100	; 0x64
   1f394:	49a1      	ldr	r1, [pc, #644]	; (1f61c <_strtod_r+0x5ec>)
   1f396:	aa1c      	add	r2, sp, #112	; 0x70
   1f398:	f003 fe46 	bl	23028 <__hexnan>
   1f39c:	2805      	cmp	r0, #5
   1f39e:	d108      	bne.n	1f3b2 <_strtod_r+0x382>
   1f3a0:	9b1d      	ldr	r3, [sp, #116]	; 0x74
   1f3a2:	f8dd a070 	ldr.w	sl, [sp, #112]	; 0x70
   1f3a6:	f043 4bff 	orr.w	fp, r3, #2139095040	; 0x7f800000
   1f3aa:	f44b 0be0 	orr.w	fp, fp, #7340032	; 0x700000
   1f3ae:	f000 bc31 	b.w	1fc14 <_strtod_r+0xbe4>
   1f3b2:	f8df b280 	ldr.w	fp, [pc, #640]	; 1f634 <_strtod_r+0x604>
   1f3b6:	f04f 0a00 	mov.w	sl, #0
   1f3ba:	f000 bc2b 	b.w	1fc14 <_strtod_r+0xbe4>
   1f3be:	9b04      	ldr	r3, [sp, #16]
   1f3c0:	9319      	str	r3, [sp, #100]	; 0x64
   1f3c2:	2600      	movs	r6, #0
   1f3c4:	9609      	str	r6, [sp, #36]	; 0x24
   1f3c6:	f000 bc25 	b.w	1fc14 <_strtod_r+0xbe4>
   1f3ca:	ebc1 010c 	rsb	r1, r1, ip
   1f3ce:	9803      	ldr	r0, [sp, #12]
   1f3d0:	2d10      	cmp	r5, #16
   1f3d2:	bfb4      	ite	lt
   1f3d4:	46ac      	movlt	ip, r5
   1f3d6:	f04f 0c10 	movge.w	ip, #16
   1f3da:	f8cd c008 	str.w	ip, [sp, #8]
   1f3de:	9106      	str	r1, [sp, #24]
   1f3e0:	f7fd fcce 	bl	1cd80 <__aeabi_ui2d>
   1f3e4:	f8dd c008 	ldr.w	ip, [sp, #8]
   1f3e8:	2c00      	cmp	r4, #0
   1f3ea:	bf08      	it	eq
   1f3ec:	462c      	moveq	r4, r5
   1f3ee:	f1bc 0f09 	cmp.w	ip, #9
   1f3f2:	4682      	mov	sl, r0
   1f3f4:	468b      	mov	fp, r1
   1f3f6:	dd15      	ble.n	1f424 <_strtod_r+0x3f4>
   1f3f8:	4b89      	ldr	r3, [pc, #548]	; (1f620 <_strtod_r+0x5f0>)
   1f3fa:	eb03 03cc 	add.w	r3, r3, ip, lsl #3
   1f3fe:	e953 2312 	ldrd	r2, r3, [r3, #-72]	; 0x48
   1f402:	f004 fc59 	bl	23cb8 <__aeabi_dmul>
   1f406:	4606      	mov	r6, r0
   1f408:	4640      	mov	r0, r8
   1f40a:	460f      	mov	r7, r1
   1f40c:	f7fd fcb8 	bl	1cd80 <__aeabi_ui2d>
   1f410:	4602      	mov	r2, r0
   1f412:	460b      	mov	r3, r1
   1f414:	4630      	mov	r0, r6
   1f416:	4639      	mov	r1, r7
   1f418:	f7fd fb76 	bl	1cb08 <__adddf3>
   1f41c:	f8dd c008 	ldr.w	ip, [sp, #8]
   1f420:	4682      	mov	sl, r0
   1f422:	468b      	mov	fp, r1
   1f424:	2d0f      	cmp	r5, #15
   1f426:	dc37      	bgt.n	1f498 <_strtod_r+0x468>
   1f428:	9f06      	ldr	r7, [sp, #24]
   1f42a:	2f00      	cmp	r7, #0
   1f42c:	f000 83f2 	beq.w	1fc14 <_strtod_r+0xbe4>
   1f430:	dd23      	ble.n	1f47a <_strtod_r+0x44a>
   1f432:	2f16      	cmp	r7, #22
   1f434:	dc07      	bgt.n	1f446 <_strtod_r+0x416>
   1f436:	497a      	ldr	r1, [pc, #488]	; (1f620 <_strtod_r+0x5f0>)
   1f438:	4652      	mov	r2, sl
   1f43a:	eb01 01c7 	add.w	r1, r1, r7, lsl #3
   1f43e:	e9d1 0100 	ldrd	r0, r1, [r1]
   1f442:	465b      	mov	r3, fp
   1f444:	e014      	b.n	1f470 <_strtod_r+0x440>
   1f446:	9e06      	ldr	r6, [sp, #24]
   1f448:	f1c5 0325 	rsb	r3, r5, #37	; 0x25
   1f44c:	429e      	cmp	r6, r3
   1f44e:	dc23      	bgt.n	1f498 <_strtod_r+0x468>
   1f450:	4c73      	ldr	r4, [pc, #460]	; (1f620 <_strtod_r+0x5f0>)
   1f452:	f1c5 050f 	rsb	r5, r5, #15
   1f456:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
   1f45a:	1b75      	subs	r5, r6, r5
   1f45c:	e9d3 0100 	ldrd	r0, r1, [r3]
   1f460:	4652      	mov	r2, sl
   1f462:	465b      	mov	r3, fp
   1f464:	eb04 04c5 	add.w	r4, r4, r5, lsl #3
   1f468:	f004 fc26 	bl	23cb8 <__aeabi_dmul>
   1f46c:	e9d4 2300 	ldrd	r2, r3, [r4]
   1f470:	f004 fc22 	bl	23cb8 <__aeabi_dmul>
   1f474:	4682      	mov	sl, r0
   1f476:	468b      	mov	fp, r1
   1f478:	e3cc      	b.n	1fc14 <_strtod_r+0xbe4>
   1f47a:	9f06      	ldr	r7, [sp, #24]
   1f47c:	3716      	adds	r7, #22
   1f47e:	db0b      	blt.n	1f498 <_strtod_r+0x468>
   1f480:	f8dd c018 	ldr.w	ip, [sp, #24]
   1f484:	4f66      	ldr	r7, [pc, #408]	; (1f620 <_strtod_r+0x5f0>)
   1f486:	4650      	mov	r0, sl
   1f488:	eba7 07cc 	sub.w	r7, r7, ip, lsl #3
   1f48c:	4659      	mov	r1, fp
   1f48e:	e9d7 2300 	ldrd	r2, r3, [r7]
   1f492:	f004 fd3b 	bl	23f0c <__aeabi_ddiv>
   1f496:	e7ed      	b.n	1f474 <_strtod_r+0x444>
   1f498:	9e06      	ldr	r6, [sp, #24]
   1f49a:	ebcc 0805 	rsb	r8, ip, r5
   1f49e:	44b0      	add	r8, r6
   1f4a0:	f1b8 0f00 	cmp.w	r8, #0
   1f4a4:	dd61      	ble.n	1f56a <_strtod_r+0x53a>
   1f4a6:	f018 030f 	ands.w	r3, r8, #15
   1f4aa:	d00a      	beq.n	1f4c2 <_strtod_r+0x492>
   1f4ac:	4a5c      	ldr	r2, [pc, #368]	; (1f620 <_strtod_r+0x5f0>)
   1f4ae:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
   1f4b2:	e9d3 0100 	ldrd	r0, r1, [r3]
   1f4b6:	4652      	mov	r2, sl
   1f4b8:	465b      	mov	r3, fp
   1f4ba:	f004 fbfd 	bl	23cb8 <__aeabi_dmul>
   1f4be:	4682      	mov	sl, r0
   1f4c0:	468b      	mov	fp, r1
   1f4c2:	f038 080f 	bics.w	r8, r8, #15
   1f4c6:	f000 80c8 	beq.w	1f65a <_strtod_r+0x62a>
   1f4ca:	f5b8 7f9a 	cmp.w	r8, #308	; 0x134
   1f4ce:	dd13      	ble.n	1f4f8 <_strtod_r+0x4c8>
   1f4d0:	f04f 0800 	mov.w	r8, #0
   1f4d4:	f8cd 800c 	str.w	r8, [sp, #12]
   1f4d8:	f8cd 801c 	str.w	r8, [sp, #28]
   1f4dc:	f8cd 8014 	str.w	r8, [sp, #20]
   1f4e0:	9f07      	ldr	r7, [sp, #28]
   1f4e2:	2322      	movs	r3, #34	; 0x22
   1f4e4:	f8c9 3000 	str.w	r3, [r9]
   1f4e8:	f8df b144 	ldr.w	fp, [pc, #324]	; 1f630 <_strtod_r+0x600>
   1f4ec:	f04f 0a00 	mov.w	sl, #0
   1f4f0:	2f00      	cmp	r7, #0
   1f4f2:	f040 837b 	bne.w	1fbec <_strtod_r+0xbbc>
   1f4f6:	e38d      	b.n	1fc14 <_strtod_r+0xbe4>
   1f4f8:	ea4f 1828 	mov.w	r8, r8, asr #4
   1f4fc:	4650      	mov	r0, sl
   1f4fe:	4659      	mov	r1, fp
   1f500:	2600      	movs	r6, #0
   1f502:	f1b8 0f01 	cmp.w	r8, #1
   1f506:	dd0d      	ble.n	1f524 <_strtod_r+0x4f4>
   1f508:	f018 0f01 	tst.w	r8, #1
   1f50c:	d006      	beq.n	1f51c <_strtod_r+0x4ec>
   1f50e:	4b45      	ldr	r3, [pc, #276]	; (1f624 <_strtod_r+0x5f4>)
   1f510:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
   1f514:	e9d3 2300 	ldrd	r2, r3, [r3]
   1f518:	f004 fbce 	bl	23cb8 <__aeabi_dmul>
   1f51c:	3601      	adds	r6, #1
   1f51e:	ea4f 0868 	mov.w	r8, r8, asr #1
   1f522:	e7ee      	b.n	1f502 <_strtod_r+0x4d2>
   1f524:	4b3f      	ldr	r3, [pc, #252]	; (1f624 <_strtod_r+0x5f4>)
   1f526:	4682      	mov	sl, r0
   1f528:	f1a1 7b54 	sub.w	fp, r1, #55574528	; 0x3500000
   1f52c:	eb03 06c6 	add.w	r6, r3, r6, lsl #3
   1f530:	4652      	mov	r2, sl
   1f532:	465b      	mov	r3, fp
   1f534:	e9d6 0100 	ldrd	r0, r1, [r6]
   1f538:	f004 fbbe 	bl	23cb8 <__aeabi_dmul>
   1f53c:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
   1f540:	468b      	mov	fp, r1
   1f542:	0d1b      	lsrs	r3, r3, #20
   1f544:	4938      	ldr	r1, [pc, #224]	; (1f628 <_strtod_r+0x5f8>)
   1f546:	051b      	lsls	r3, r3, #20
   1f548:	428b      	cmp	r3, r1
   1f54a:	4682      	mov	sl, r0
   1f54c:	d8c0      	bhi.n	1f4d0 <_strtod_r+0x4a0>
   1f54e:	f5a1 1180 	sub.w	r1, r1, #1048576	; 0x100000
   1f552:	428b      	cmp	r3, r1
   1f554:	d906      	bls.n	1f564 <_strtod_r+0x534>
   1f556:	2600      	movs	r6, #0
   1f558:	f8df b0dc 	ldr.w	fp, [pc, #220]	; 1f638 <_strtod_r+0x608>
   1f55c:	f04f 3aff 	mov.w	sl, #4294967295
   1f560:	9604      	str	r6, [sp, #16]
   1f562:	e07c      	b.n	1f65e <_strtod_r+0x62e>
   1f564:	f10b 7b54 	add.w	fp, fp, #55574528	; 0x3500000
   1f568:	e077      	b.n	1f65a <_strtod_r+0x62a>
   1f56a:	d076      	beq.n	1f65a <_strtod_r+0x62a>
   1f56c:	f1c8 0800 	rsb	r8, r8, #0
   1f570:	f018 030f 	ands.w	r3, r8, #15
   1f574:	d00a      	beq.n	1f58c <_strtod_r+0x55c>
   1f576:	4a2a      	ldr	r2, [pc, #168]	; (1f620 <_strtod_r+0x5f0>)
   1f578:	4650      	mov	r0, sl
   1f57a:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
   1f57e:	4659      	mov	r1, fp
   1f580:	e9d3 2300 	ldrd	r2, r3, [r3]
   1f584:	f004 fcc2 	bl	23f0c <__aeabi_ddiv>
   1f588:	4682      	mov	sl, r0
   1f58a:	468b      	mov	fp, r1
   1f58c:	ea5f 1828 	movs.w	r8, r8, asr #4
   1f590:	d063      	beq.n	1f65a <_strtod_r+0x62a>
   1f592:	f1b8 0f1f 	cmp.w	r8, #31
   1f596:	dd08      	ble.n	1f5aa <_strtod_r+0x57a>
   1f598:	f04f 0800 	mov.w	r8, #0
   1f59c:	f8cd 800c 	str.w	r8, [sp, #12]
   1f5a0:	f8cd 801c 	str.w	r8, [sp, #28]
   1f5a4:	f8cd 8014 	str.w	r8, [sp, #20]
   1f5a8:	e11e      	b.n	1f7e8 <_strtod_r+0x7b8>
   1f5aa:	f018 0f10 	tst.w	r8, #16
   1f5ae:	bf14      	ite	ne
   1f5b0:	266a      	movne	r6, #106	; 0x6a
   1f5b2:	2600      	moveq	r6, #0
   1f5b4:	9604      	str	r6, [sp, #16]
   1f5b6:	4e1d      	ldr	r6, [pc, #116]	; (1f62c <_strtod_r+0x5fc>)
   1f5b8:	4650      	mov	r0, sl
   1f5ba:	4659      	mov	r1, fp
   1f5bc:	f1b8 0f00 	cmp.w	r8, #0
   1f5c0:	dd0a      	ble.n	1f5d8 <_strtod_r+0x5a8>
   1f5c2:	f018 0f01 	tst.w	r8, #1
   1f5c6:	d003      	beq.n	1f5d0 <_strtod_r+0x5a0>
   1f5c8:	e9d6 2300 	ldrd	r2, r3, [r6]
   1f5cc:	f004 fb74 	bl	23cb8 <__aeabi_dmul>
   1f5d0:	ea4f 0868 	mov.w	r8, r8, asr #1
   1f5d4:	3608      	adds	r6, #8
   1f5d6:	e7f1      	b.n	1f5bc <_strtod_r+0x58c>
   1f5d8:	9f04      	ldr	r7, [sp, #16]
   1f5da:	4682      	mov	sl, r0
   1f5dc:	468b      	mov	fp, r1
   1f5de:	b39f      	cbz	r7, 1f648 <_strtod_r+0x618>
   1f5e0:	f3c1 530a 	ubfx	r3, r1, #20, #11
   1f5e4:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
   1f5e8:	2b00      	cmp	r3, #0
   1f5ea:	dd2d      	ble.n	1f648 <_strtod_r+0x618>
   1f5ec:	2b1f      	cmp	r3, #31
   1f5ee:	dd25      	ble.n	1f63c <_strtod_r+0x60c>
   1f5f0:	2b34      	cmp	r3, #52	; 0x34
   1f5f2:	f04f 0a00 	mov.w	sl, #0
   1f5f6:	dd02      	ble.n	1f5fe <_strtod_r+0x5ce>
   1f5f8:	f04f 7b5c 	mov.w	fp, #57671680	; 0x3700000
   1f5fc:	e024      	b.n	1f648 <_strtod_r+0x618>
   1f5fe:	3b20      	subs	r3, #32
   1f600:	f04f 31ff 	mov.w	r1, #4294967295
   1f604:	fa01 f303 	lsl.w	r3, r1, r3
   1f608:	ea03 0b0b 	and.w	fp, r3, fp
   1f60c:	e01c      	b.n	1f648 <_strtod_r+0x618>
   1f60e:	bf00      	nop
   1f610:	00027266 	.word	0x00027266
   1f614:	0002731b 	.word	0x0002731b
   1f618:	0002726e 	.word	0x0002726e
   1f61c:	0002723c 	.word	0x0002723c
   1f620:	00027330 	.word	0x00027330
   1f624:	000273f8 	.word	0x000273f8
   1f628:	7ca00000 	.word	0x7ca00000
   1f62c:	00027200 	.word	0x00027200
   1f630:	7ff00000 	.word	0x7ff00000
   1f634:	fff80000 	.word	0xfff80000
   1f638:	7fefffff 	.word	0x7fefffff
   1f63c:	f04f 32ff 	mov.w	r2, #4294967295
   1f640:	fa02 f303 	lsl.w	r3, r2, r3
   1f644:	ea03 0a00 	and.w	sl, r3, r0
   1f648:	4650      	mov	r0, sl
   1f64a:	4659      	mov	r1, fp
   1f64c:	2200      	movs	r2, #0
   1f64e:	2300      	movs	r3, #0
   1f650:	f004 fd9a 	bl	24188 <__aeabi_dcmpeq>
   1f654:	2800      	cmp	r0, #0
   1f656:	d19f      	bne.n	1f598 <_strtod_r+0x568>
   1f658:	e001      	b.n	1f65e <_strtod_r+0x62e>
   1f65a:	2700      	movs	r7, #0
   1f65c:	9704      	str	r7, [sp, #16]
   1f65e:	9e03      	ldr	r6, [sp, #12]
   1f660:	4648      	mov	r0, r9
   1f662:	9600      	str	r6, [sp, #0]
   1f664:	9907      	ldr	r1, [sp, #28]
   1f666:	4622      	mov	r2, r4
   1f668:	462b      	mov	r3, r5
   1f66a:	f003 fe6b 	bl	23344 <__s2b>
   1f66e:	9007      	str	r0, [sp, #28]
   1f670:	2800      	cmp	r0, #0
   1f672:	f43f af2d 	beq.w	1f4d0 <_strtod_r+0x4a0>
   1f676:	9f06      	ldr	r7, [sp, #24]
   1f678:	f04f 0800 	mov.w	r8, #0
   1f67c:	427b      	negs	r3, r7
   1f67e:	2f00      	cmp	r7, #0
   1f680:	bfa8      	it	ge
   1f682:	2300      	movge	r3, #0
   1f684:	930e      	str	r3, [sp, #56]	; 0x38
   1f686:	f8cd 800c 	str.w	r8, [sp, #12]
   1f68a:	9e07      	ldr	r6, [sp, #28]
   1f68c:	4648      	mov	r0, r9
   1f68e:	6871      	ldr	r1, [r6, #4]
   1f690:	f003 fdd2 	bl	23238 <_Balloc>
   1f694:	9005      	str	r0, [sp, #20]
   1f696:	2800      	cmp	r0, #0
   1f698:	f43f af22 	beq.w	1f4e0 <_strtod_r+0x4b0>
   1f69c:	6932      	ldr	r2, [r6, #16]
   1f69e:	f106 010c 	add.w	r1, r6, #12
   1f6a2:	3202      	adds	r2, #2
   1f6a4:	0092      	lsls	r2, r2, #2
   1f6a6:	300c      	adds	r0, #12
   1f6a8:	f7fe fbbd 	bl	1de26 <memcpy>
   1f6ac:	ab1b      	add	r3, sp, #108	; 0x6c
   1f6ae:	9300      	str	r3, [sp, #0]
   1f6b0:	ab1c      	add	r3, sp, #112	; 0x70
   1f6b2:	9301      	str	r3, [sp, #4]
   1f6b4:	4648      	mov	r0, r9
   1f6b6:	4652      	mov	r2, sl
   1f6b8:	465b      	mov	r3, fp
   1f6ba:	e9cd ab0a 	strd	sl, fp, [sp, #40]	; 0x28
   1f6be:	f004 f904 	bl	238ca <__d2b>
   1f6c2:	901a      	str	r0, [sp, #104]	; 0x68
   1f6c4:	2800      	cmp	r0, #0
   1f6c6:	f43f af0b 	beq.w	1f4e0 <_strtod_r+0x4b0>
   1f6ca:	4648      	mov	r0, r9
   1f6cc:	2101      	movs	r1, #1
   1f6ce:	f003 fec8 	bl	23462 <__i2b>
   1f6d2:	9003      	str	r0, [sp, #12]
   1f6d4:	2800      	cmp	r0, #0
   1f6d6:	f43f af03 	beq.w	1f4e0 <_strtod_r+0x4b0>
   1f6da:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
   1f6dc:	f8dd c018 	ldr.w	ip, [sp, #24]
   1f6e0:	2b00      	cmp	r3, #0
   1f6e2:	ea2c 77ec 	bic.w	r7, ip, ip, asr #31
   1f6e6:	f2c0 808b 	blt.w	1f800 <_strtod_r+0x7d0>
   1f6ea:	9c0e      	ldr	r4, [sp, #56]	; 0x38
   1f6ec:	463a      	mov	r2, r7
   1f6ee:	441c      	add	r4, r3
   1f6f0:	9e04      	ldr	r6, [sp, #16]
   1f6f2:	9d1c      	ldr	r5, [sp, #112]	; 0x70
   1f6f4:	1b9b      	subs	r3, r3, r6
   1f6f6:	1959      	adds	r1, r3, r5
   1f6f8:	f46f 737f 	mvn.w	r3, #1020	; 0x3fc
   1f6fc:	4299      	cmp	r1, r3
   1f6fe:	f1c5 0536 	rsb	r5, r5, #54	; 0x36
   1f702:	f280 8087 	bge.w	1f814 <_strtod_r+0x7e4>
   1f706:	1a5b      	subs	r3, r3, r1
   1f708:	2b1f      	cmp	r3, #31
   1f70a:	ebc3 0505 	rsb	r5, r3, r5
   1f70e:	f04f 0001 	mov.w	r0, #1
   1f712:	dc78      	bgt.n	1f806 <_strtod_r+0x7d6>
   1f714:	4098      	lsls	r0, r3
   1f716:	2300      	movs	r3, #0
   1f718:	9014      	str	r0, [sp, #80]	; 0x50
   1f71a:	930f      	str	r3, [sp, #60]	; 0x3c
   1f71c:	9804      	ldr	r0, [sp, #16]
   1f71e:	1966      	adds	r6, r4, r5
   1f720:	4415      	add	r5, r2
   1f722:	42a6      	cmp	r6, r4
   1f724:	bfb4      	ite	lt
   1f726:	4633      	movlt	r3, r6
   1f728:	4623      	movge	r3, r4
   1f72a:	4405      	add	r5, r0
   1f72c:	42ab      	cmp	r3, r5
   1f72e:	bfa8      	it	ge
   1f730:	462b      	movge	r3, r5
   1f732:	2b00      	cmp	r3, #0
   1f734:	dd02      	ble.n	1f73c <_strtod_r+0x70c>
   1f736:	1af6      	subs	r6, r6, r3
   1f738:	1aed      	subs	r5, r5, r3
   1f73a:	1ae4      	subs	r4, r4, r3
   1f73c:	990e      	ldr	r1, [sp, #56]	; 0x38
   1f73e:	2900      	cmp	r1, #0
   1f740:	d16f      	bne.n	1f822 <_strtod_r+0x7f2>
   1f742:	2e00      	cmp	r6, #0
   1f744:	f300 8087 	bgt.w	1f856 <_strtod_r+0x826>
   1f748:	2f00      	cmp	r7, #0
   1f74a:	f040 808e 	bne.w	1f86a <_strtod_r+0x83a>
   1f74e:	2d00      	cmp	r5, #0
   1f750:	f300 8095 	bgt.w	1f87e <_strtod_r+0x84e>
   1f754:	2c00      	cmp	r4, #0
   1f756:	f300 809c 	bgt.w	1f892 <_strtod_r+0x862>
   1f75a:	4648      	mov	r0, r9
   1f75c:	991a      	ldr	r1, [sp, #104]	; 0x68
   1f75e:	9a05      	ldr	r2, [sp, #20]
   1f760:	f003 ffde 	bl	23720 <__mdiff>
   1f764:	4680      	mov	r8, r0
   1f766:	2800      	cmp	r0, #0
   1f768:	f43f aeba 	beq.w	1f4e0 <_strtod_r+0x4b0>
   1f76c:	68c6      	ldr	r6, [r0, #12]
   1f76e:	2300      	movs	r3, #0
   1f770:	60c3      	str	r3, [r0, #12]
   1f772:	9903      	ldr	r1, [sp, #12]
   1f774:	9608      	str	r6, [sp, #32]
   1f776:	f003 ffb6 	bl	236e6 <__mcmp>
   1f77a:	2800      	cmp	r0, #0
   1f77c:	f280 8098 	bge.w	1f8b0 <_strtod_r+0x880>
   1f780:	2e00      	cmp	r6, #0
   1f782:	f040 8220 	bne.w	1fbc6 <_strtod_r+0xb96>
   1f786:	f1ba 0f00 	cmp.w	sl, #0
   1f78a:	f040 821c 	bne.w	1fbc6 <_strtod_r+0xb96>
   1f78e:	f3cb 0313 	ubfx	r3, fp, #0, #20
   1f792:	2b00      	cmp	r3, #0
   1f794:	f040 8217 	bne.w	1fbc6 <_strtod_r+0xb96>
   1f798:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
   1f79c:	0d1b      	lsrs	r3, r3, #20
   1f79e:	051b      	lsls	r3, r3, #20
   1f7a0:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
   1f7a4:	f240 820f 	bls.w	1fbc6 <_strtod_r+0xb96>
   1f7a8:	f8d8 3014 	ldr.w	r3, [r8, #20]
   1f7ac:	2b00      	cmp	r3, #0
   1f7ae:	d07a      	beq.n	1f8a6 <_strtod_r+0x876>
   1f7b0:	4641      	mov	r1, r8
   1f7b2:	2201      	movs	r2, #1
   1f7b4:	4648      	mov	r0, r9
   1f7b6:	f003 ff43 	bl	23640 <__lshift>
   1f7ba:	9903      	ldr	r1, [sp, #12]
   1f7bc:	4680      	mov	r8, r0
   1f7be:	f003 ff92 	bl	236e6 <__mcmp>
   1f7c2:	2800      	cmp	r0, #0
   1f7c4:	f340 81ff 	ble.w	1fbc6 <_strtod_r+0xb96>
   1f7c8:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
   1f7cc:	9f04      	ldr	r7, [sp, #16]
   1f7ce:	0d1b      	lsrs	r3, r3, #20
   1f7d0:	051b      	lsls	r3, r3, #20
   1f7d2:	2f00      	cmp	r7, #0
   1f7d4:	f000 809c 	beq.w	1f910 <_strtod_r+0x8e0>
   1f7d8:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
   1f7dc:	f200 8098 	bhi.w	1f910 <_strtod_r+0x8e0>
   1f7e0:	f1b3 7f5c 	cmp.w	r3, #57671680	; 0x3700000
   1f7e4:	f200 81f1 	bhi.w	1fbca <_strtod_r+0xb9a>
   1f7e8:	9e07      	ldr	r6, [sp, #28]
   1f7ea:	2322      	movs	r3, #34	; 0x22
   1f7ec:	f04f 0a00 	mov.w	sl, #0
   1f7f0:	f04f 0b00 	mov.w	fp, #0
   1f7f4:	f8c9 3000 	str.w	r3, [r9]
   1f7f8:	2e00      	cmp	r6, #0
   1f7fa:	f040 81f7 	bne.w	1fbec <_strtod_r+0xbbc>
   1f7fe:	e209      	b.n	1fc14 <_strtod_r+0xbe4>
   1f800:	1afa      	subs	r2, r7, r3
   1f802:	9c0e      	ldr	r4, [sp, #56]	; 0x38
   1f804:	e774      	b.n	1f6f0 <_strtod_r+0x6c0>
   1f806:	4e84      	ldr	r6, [pc, #528]	; (1fa18 <_strtod_r+0x9e8>)
   1f808:	9014      	str	r0, [sp, #80]	; 0x50
   1f80a:	1a76      	subs	r6, r6, r1
   1f80c:	fa00 f606 	lsl.w	r6, r0, r6
   1f810:	960f      	str	r6, [sp, #60]	; 0x3c
   1f812:	e783      	b.n	1f71c <_strtod_r+0x6ec>
   1f814:	2600      	movs	r6, #0
   1f816:	f04f 0c01 	mov.w	ip, #1
   1f81a:	960f      	str	r6, [sp, #60]	; 0x3c
   1f81c:	f8cd c050 	str.w	ip, [sp, #80]	; 0x50
   1f820:	e77c      	b.n	1f71c <_strtod_r+0x6ec>
   1f822:	4648      	mov	r0, r9
   1f824:	9903      	ldr	r1, [sp, #12]
   1f826:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   1f828:	f003 febc 	bl	235a4 <__pow5mult>
   1f82c:	9003      	str	r0, [sp, #12]
   1f82e:	2800      	cmp	r0, #0
   1f830:	f43f ae56 	beq.w	1f4e0 <_strtod_r+0x4b0>
   1f834:	4648      	mov	r0, r9
   1f836:	9903      	ldr	r1, [sp, #12]
   1f838:	9a1a      	ldr	r2, [sp, #104]	; 0x68
   1f83a:	f003 fe1b 	bl	23474 <__multiply>
   1f83e:	4603      	mov	r3, r0
   1f840:	2800      	cmp	r0, #0
   1f842:	f43f ae4d 	beq.w	1f4e0 <_strtod_r+0x4b0>
   1f846:	4648      	mov	r0, r9
   1f848:	991a      	ldr	r1, [sp, #104]	; 0x68
   1f84a:	9302      	str	r3, [sp, #8]
   1f84c:	f003 fd29 	bl	232a2 <_Bfree>
   1f850:	9b02      	ldr	r3, [sp, #8]
   1f852:	931a      	str	r3, [sp, #104]	; 0x68
   1f854:	e775      	b.n	1f742 <_strtod_r+0x712>
   1f856:	4648      	mov	r0, r9
   1f858:	991a      	ldr	r1, [sp, #104]	; 0x68
   1f85a:	4632      	mov	r2, r6
   1f85c:	f003 fef0 	bl	23640 <__lshift>
   1f860:	901a      	str	r0, [sp, #104]	; 0x68
   1f862:	2800      	cmp	r0, #0
   1f864:	f47f af70 	bne.w	1f748 <_strtod_r+0x718>
   1f868:	e63a      	b.n	1f4e0 <_strtod_r+0x4b0>
   1f86a:	4648      	mov	r0, r9
   1f86c:	9905      	ldr	r1, [sp, #20]
   1f86e:	463a      	mov	r2, r7
   1f870:	f003 fe98 	bl	235a4 <__pow5mult>
   1f874:	9005      	str	r0, [sp, #20]
   1f876:	2800      	cmp	r0, #0
   1f878:	f47f af69 	bne.w	1f74e <_strtod_r+0x71e>
   1f87c:	e630      	b.n	1f4e0 <_strtod_r+0x4b0>
   1f87e:	4648      	mov	r0, r9
   1f880:	9905      	ldr	r1, [sp, #20]
   1f882:	462a      	mov	r2, r5
   1f884:	f003 fedc 	bl	23640 <__lshift>
   1f888:	9005      	str	r0, [sp, #20]
   1f88a:	2800      	cmp	r0, #0
   1f88c:	f47f af62 	bne.w	1f754 <_strtod_r+0x724>
   1f890:	e626      	b.n	1f4e0 <_strtod_r+0x4b0>
   1f892:	4648      	mov	r0, r9
   1f894:	9903      	ldr	r1, [sp, #12]
   1f896:	4622      	mov	r2, r4
   1f898:	f003 fed2 	bl	23640 <__lshift>
   1f89c:	9003      	str	r0, [sp, #12]
   1f89e:	2800      	cmp	r0, #0
   1f8a0:	f47f af5b 	bne.w	1f75a <_strtod_r+0x72a>
   1f8a4:	e61c      	b.n	1f4e0 <_strtod_r+0x4b0>
   1f8a6:	f8d8 3010 	ldr.w	r3, [r8, #16]
   1f8aa:	2b01      	cmp	r3, #1
   1f8ac:	dc80      	bgt.n	1f7b0 <_strtod_r+0x780>
   1f8ae:	e18a      	b.n	1fbc6 <_strtod_r+0xb96>
   1f8b0:	d163      	bne.n	1f97a <_strtod_r+0x94a>
   1f8b2:	9f08      	ldr	r7, [sp, #32]
   1f8b4:	f3cb 0313 	ubfx	r3, fp, #0, #20
   1f8b8:	b32f      	cbz	r7, 1f906 <_strtod_r+0x8d6>
   1f8ba:	4958      	ldr	r1, [pc, #352]	; (1fa1c <_strtod_r+0x9ec>)
   1f8bc:	465a      	mov	r2, fp
   1f8be:	428b      	cmp	r3, r1
   1f8c0:	d12f      	bne.n	1f922 <_strtod_r+0x8f2>
   1f8c2:	9e04      	ldr	r6, [sp, #16]
   1f8c4:	4651      	mov	r1, sl
   1f8c6:	b16e      	cbz	r6, 1f8e4 <_strtod_r+0x8b4>
   1f8c8:	4b55      	ldr	r3, [pc, #340]	; (1fa20 <_strtod_r+0x9f0>)
   1f8ca:	ea0b 0303 	and.w	r3, fp, r3
   1f8ce:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
   1f8d2:	d807      	bhi.n	1f8e4 <_strtod_r+0x8b4>
   1f8d4:	0d1b      	lsrs	r3, r3, #20
   1f8d6:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
   1f8da:	f04f 30ff 	mov.w	r0, #4294967295
   1f8de:	fa00 f303 	lsl.w	r3, r0, r3
   1f8e2:	e001      	b.n	1f8e8 <_strtod_r+0x8b8>
   1f8e4:	f04f 33ff 	mov.w	r3, #4294967295
   1f8e8:	4299      	cmp	r1, r3
   1f8ea:	d11a      	bne.n	1f922 <_strtod_r+0x8f2>
   1f8ec:	4b4d      	ldr	r3, [pc, #308]	; (1fa24 <_strtod_r+0x9f4>)
   1f8ee:	429a      	cmp	r2, r3
   1f8f0:	d102      	bne.n	1f8f8 <_strtod_r+0x8c8>
   1f8f2:	3101      	adds	r1, #1
   1f8f4:	f43f adf4 	beq.w	1f4e0 <_strtod_r+0x4b0>
   1f8f8:	4b49      	ldr	r3, [pc, #292]	; (1fa20 <_strtod_r+0x9f0>)
   1f8fa:	f04f 0a00 	mov.w	sl, #0
   1f8fe:	4013      	ands	r3, r2
   1f900:	f503 1b80 	add.w	fp, r3, #1048576	; 0x100000
   1f904:	e15f      	b.n	1fbc6 <_strtod_r+0xb96>
   1f906:	b963      	cbnz	r3, 1f922 <_strtod_r+0x8f2>
   1f908:	f1ba 0f00 	cmp.w	sl, #0
   1f90c:	d109      	bne.n	1f922 <_strtod_r+0x8f2>
   1f90e:	e75b      	b.n	1f7c8 <_strtod_r+0x798>
   1f910:	f5a3 1380 	sub.w	r3, r3, #1048576	; 0x100000
   1f914:	ea6f 5b13 	mvn.w	fp, r3, lsr #20
   1f918:	ea6f 5b0b 	mvn.w	fp, fp, lsl #20
   1f91c:	f04f 3aff 	mov.w	sl, #4294967295
   1f920:	e151      	b.n	1fbc6 <_strtod_r+0xb96>
   1f922:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   1f924:	b113      	cbz	r3, 1f92c <_strtod_r+0x8fc>
   1f926:	ea13 0f0b 	tst.w	r3, fp
   1f92a:	e002      	b.n	1f932 <_strtod_r+0x902>
   1f92c:	9e14      	ldr	r6, [sp, #80]	; 0x50
   1f92e:	ea16 0f0a 	tst.w	r6, sl
   1f932:	f000 8148 	beq.w	1fbc6 <_strtod_r+0xb96>
   1f936:	9f08      	ldr	r7, [sp, #32]
   1f938:	4650      	mov	r0, sl
   1f93a:	4659      	mov	r1, fp
   1f93c:	9a04      	ldr	r2, [sp, #16]
   1f93e:	b157      	cbz	r7, 1f956 <_strtod_r+0x926>
   1f940:	f7ff fb54 	bl	1efec <sulp>
   1f944:	4602      	mov	r2, r0
   1f946:	460b      	mov	r3, r1
   1f948:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   1f94c:	f7fd f8dc 	bl	1cb08 <__adddf3>
   1f950:	4682      	mov	sl, r0
   1f952:	468b      	mov	fp, r1
   1f954:	e137      	b.n	1fbc6 <_strtod_r+0xb96>
   1f956:	f7ff fb49 	bl	1efec <sulp>
   1f95a:	4602      	mov	r2, r0
   1f95c:	460b      	mov	r3, r1
   1f95e:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   1f962:	f7fd f8cf 	bl	1cb04 <__aeabi_dsub>
   1f966:	2200      	movs	r2, #0
   1f968:	2300      	movs	r3, #0
   1f96a:	4682      	mov	sl, r0
   1f96c:	468b      	mov	fp, r1
   1f96e:	f004 fc0b 	bl	24188 <__aeabi_dcmpeq>
   1f972:	2800      	cmp	r0, #0
   1f974:	f47f af38 	bne.w	1f7e8 <_strtod_r+0x7b8>
   1f978:	e125      	b.n	1fbc6 <_strtod_r+0xb96>
   1f97a:	4640      	mov	r0, r8
   1f97c:	9903      	ldr	r1, [sp, #12]
   1f97e:	f003 fff6 	bl	2396e <__ratio>
   1f982:	2200      	movs	r2, #0
   1f984:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
   1f988:	4604      	mov	r4, r0
   1f98a:	460d      	mov	r5, r1
   1f98c:	f004 fc10 	bl	241b0 <__aeabi_dcmple>
   1f990:	2800      	cmp	r0, #0
   1f992:	d032      	beq.n	1f9fa <_strtod_r+0x9ca>
   1f994:	9e08      	ldr	r6, [sp, #32]
   1f996:	b126      	cbz	r6, 1f9a2 <_strtod_r+0x972>
   1f998:	4f23      	ldr	r7, [pc, #140]	; (1fa28 <_strtod_r+0x9f8>)
   1f99a:	2600      	movs	r6, #0
   1f99c:	4634      	mov	r4, r6
   1f99e:	463d      	mov	r5, r7
   1f9a0:	e04c      	b.n	1fa3c <_strtod_r+0xa0c>
   1f9a2:	f1ba 0f00 	cmp.w	sl, #0
   1f9a6:	d103      	bne.n	1f9b0 <_strtod_r+0x980>
   1f9a8:	f3cb 0313 	ubfx	r3, fp, #0, #20
   1f9ac:	b93b      	cbnz	r3, 1f9be <_strtod_r+0x98e>
   1f9ae:	e00b      	b.n	1f9c8 <_strtod_r+0x998>
   1f9b0:	f1ba 0f01 	cmp.w	sl, #1
   1f9b4:	d103      	bne.n	1f9be <_strtod_r+0x98e>
   1f9b6:	f1bb 0f00 	cmp.w	fp, #0
   1f9ba:	f43f af15 	beq.w	1f7e8 <_strtod_r+0x7b8>
   1f9be:	2600      	movs	r6, #0
   1f9c0:	4f1a      	ldr	r7, [pc, #104]	; (1fa2c <_strtod_r+0x9fc>)
   1f9c2:	2400      	movs	r4, #0
   1f9c4:	4d18      	ldr	r5, [pc, #96]	; (1fa28 <_strtod_r+0x9f8>)
   1f9c6:	e039      	b.n	1fa3c <_strtod_r+0xa0c>
   1f9c8:	4620      	mov	r0, r4
   1f9ca:	4629      	mov	r1, r5
   1f9cc:	2200      	movs	r2, #0
   1f9ce:	4b16      	ldr	r3, [pc, #88]	; (1fa28 <_strtod_r+0x9f8>)
   1f9d0:	f004 fbe4 	bl	2419c <__aeabi_dcmplt>
   1f9d4:	b940      	cbnz	r0, 1f9e8 <_strtod_r+0x9b8>
   1f9d6:	4620      	mov	r0, r4
   1f9d8:	4629      	mov	r1, r5
   1f9da:	2200      	movs	r2, #0
   1f9dc:	4b14      	ldr	r3, [pc, #80]	; (1fa30 <_strtod_r+0xa00>)
   1f9de:	f004 f96b 	bl	23cb8 <__aeabi_dmul>
   1f9e2:	4604      	mov	r4, r0
   1f9e4:	460d      	mov	r5, r1
   1f9e6:	e001      	b.n	1f9ec <_strtod_r+0x9bc>
   1f9e8:	4d11      	ldr	r5, [pc, #68]	; (1fa30 <_strtod_r+0xa00>)
   1f9ea:	2400      	movs	r4, #0
   1f9ec:	f105 4700 	add.w	r7, r5, #2147483648	; 0x80000000
   1f9f0:	9416      	str	r4, [sp, #88]	; 0x58
   1f9f2:	9717      	str	r7, [sp, #92]	; 0x5c
   1f9f4:	e9dd 6716 	ldrd	r6, r7, [sp, #88]	; 0x58
   1f9f8:	e020      	b.n	1fa3c <_strtod_r+0xa0c>
   1f9fa:	4620      	mov	r0, r4
   1f9fc:	4629      	mov	r1, r5
   1f9fe:	2200      	movs	r2, #0
   1fa00:	4b0b      	ldr	r3, [pc, #44]	; (1fa30 <_strtod_r+0xa00>)
   1fa02:	f004 f959 	bl	23cb8 <__aeabi_dmul>
   1fa06:	9e08      	ldr	r6, [sp, #32]
   1fa08:	4604      	mov	r4, r0
   1fa0a:	460d      	mov	r5, r1
   1fa0c:	b996      	cbnz	r6, 1fa34 <_strtod_r+0xa04>
   1fa0e:	f101 4700 	add.w	r7, r1, #2147483648	; 0x80000000
   1fa12:	9010      	str	r0, [sp, #64]	; 0x40
   1fa14:	9711      	str	r7, [sp, #68]	; 0x44
   1fa16:	e00f      	b.n	1fa38 <_strtod_r+0xa08>
   1fa18:	fffffbe3 	.word	0xfffffbe3
   1fa1c:	000fffff 	.word	0x000fffff
   1fa20:	7ff00000 	.word	0x7ff00000
   1fa24:	7fefffff 	.word	0x7fefffff
   1fa28:	3ff00000 	.word	0x3ff00000
   1fa2c:	bff00000 	.word	0xbff00000
   1fa30:	3fe00000 	.word	0x3fe00000
   1fa34:	e9cd 4510 	strd	r4, r5, [sp, #64]	; 0x40
   1fa38:	e9dd 6710 	ldrd	r6, r7, [sp, #64]	; 0x40
   1fa3c:	f02b 4c00 	bic.w	ip, fp, #2147483648	; 0x80000000
   1fa40:	ea4f 5c1c 	mov.w	ip, ip, lsr #20
   1fa44:	4b84      	ldr	r3, [pc, #528]	; (1fc58 <_strtod_r+0xc28>)
   1fa46:	ea4f 5c0c 	mov.w	ip, ip, lsl #20
   1fa4a:	459c      	cmp	ip, r3
   1fa4c:	d131      	bne.n	1fab2 <_strtod_r+0xa82>
   1fa4e:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   1fa52:	f1ab 7b54 	sub.w	fp, fp, #55574528	; 0x3500000
   1fa56:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
   1fa5a:	4650      	mov	r0, sl
   1fa5c:	4659      	mov	r1, fp
   1fa5e:	f8cd c008 	str.w	ip, [sp, #8]
   1fa62:	f003 febd 	bl	237e0 <__ulp>
   1fa66:	4602      	mov	r2, r0
   1fa68:	460b      	mov	r3, r1
   1fa6a:	4630      	mov	r0, r6
   1fa6c:	4639      	mov	r1, r7
   1fa6e:	f004 f923 	bl	23cb8 <__aeabi_dmul>
   1fa72:	4602      	mov	r2, r0
   1fa74:	460b      	mov	r3, r1
   1fa76:	4650      	mov	r0, sl
   1fa78:	4659      	mov	r1, fp
   1fa7a:	f7fd f845 	bl	1cb08 <__adddf3>
   1fa7e:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
   1fa82:	0d1b      	lsrs	r3, r3, #20
   1fa84:	4a75      	ldr	r2, [pc, #468]	; (1fc5c <_strtod_r+0xc2c>)
   1fa86:	051b      	lsls	r3, r3, #20
   1fa88:	4293      	cmp	r3, r2
   1fa8a:	4682      	mov	sl, r0
   1fa8c:	f8dd c008 	ldr.w	ip, [sp, #8]
   1fa90:	d90c      	bls.n	1faac <_strtod_r+0xa7c>
   1fa92:	4b73      	ldr	r3, [pc, #460]	; (1fc60 <_strtod_r+0xc30>)
   1fa94:	990d      	ldr	r1, [sp, #52]	; 0x34
   1fa96:	4299      	cmp	r1, r3
   1fa98:	d103      	bne.n	1faa2 <_strtod_r+0xa72>
   1fa9a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   1fa9c:	3201      	adds	r2, #1
   1fa9e:	f43f ad1f 	beq.w	1f4e0 <_strtod_r+0x4b0>
   1faa2:	f8df b1bc 	ldr.w	fp, [pc, #444]	; 1fc60 <_strtod_r+0xc30>
   1faa6:	f04f 3aff 	mov.w	sl, #4294967295
   1faaa:	e07b      	b.n	1fba4 <_strtod_r+0xb74>
   1faac:	f101 7b54 	add.w	fp, r1, #55574528	; 0x3500000
   1fab0:	e042      	b.n	1fb38 <_strtod_r+0xb08>
   1fab2:	9b04      	ldr	r3, [sp, #16]
   1fab4:	b353      	cbz	r3, 1fb0c <_strtod_r+0xadc>
   1fab6:	f1bc 6fd4 	cmp.w	ip, #111149056	; 0x6a00000
   1faba:	d827      	bhi.n	1fb0c <_strtod_r+0xadc>
   1fabc:	a35e      	add	r3, pc, #376	; (adr r3, 1fc38 <_strtod_r+0xc08>)
   1fabe:	e9d3 2300 	ldrd	r2, r3, [r3]
   1fac2:	4620      	mov	r0, r4
   1fac4:	4629      	mov	r1, r5
   1fac6:	f8cd c008 	str.w	ip, [sp, #8]
   1faca:	f004 fb71 	bl	241b0 <__aeabi_dcmple>
   1face:	f8dd c008 	ldr.w	ip, [sp, #8]
   1fad2:	b1b8      	cbz	r0, 1fb04 <_strtod_r+0xad4>
   1fad4:	4629      	mov	r1, r5
   1fad6:	4620      	mov	r0, r4
   1fad8:	f7fd f9c8 	bl	1ce6c <__aeabi_d2uiz>
   1fadc:	2800      	cmp	r0, #0
   1fade:	bf08      	it	eq
   1fae0:	2001      	moveq	r0, #1
   1fae2:	f7fd f94d 	bl	1cd80 <__aeabi_ui2d>
   1fae6:	9e08      	ldr	r6, [sp, #32]
   1fae8:	4604      	mov	r4, r0
   1faea:	460d      	mov	r5, r1
   1faec:	f8dd c008 	ldr.w	ip, [sp, #8]
   1faf0:	b926      	cbnz	r6, 1fafc <_strtod_r+0xacc>
   1faf2:	f101 4700 	add.w	r7, r1, #2147483648	; 0x80000000
   1faf6:	9012      	str	r0, [sp, #72]	; 0x48
   1faf8:	9713      	str	r7, [sp, #76]	; 0x4c
   1fafa:	e001      	b.n	1fb00 <_strtod_r+0xad0>
   1fafc:	e9cd 4512 	strd	r4, r5, [sp, #72]	; 0x48
   1fb00:	e9dd 6712 	ldrd	r6, r7, [sp, #72]	; 0x48
   1fb04:	f107 63d6 	add.w	r3, r7, #112197632	; 0x6b00000
   1fb08:	ebcc 0703 	rsb	r7, ip, r3
   1fb0c:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   1fb10:	f8cd c008 	str.w	ip, [sp, #8]
   1fb14:	f003 fe64 	bl	237e0 <__ulp>
   1fb18:	4602      	mov	r2, r0
   1fb1a:	460b      	mov	r3, r1
   1fb1c:	4630      	mov	r0, r6
   1fb1e:	4639      	mov	r1, r7
   1fb20:	f004 f8ca 	bl	23cb8 <__aeabi_dmul>
   1fb24:	4602      	mov	r2, r0
   1fb26:	460b      	mov	r3, r1
   1fb28:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   1fb2c:	f7fc ffec 	bl	1cb08 <__adddf3>
   1fb30:	f8dd c008 	ldr.w	ip, [sp, #8]
   1fb34:	4682      	mov	sl, r0
   1fb36:	468b      	mov	fp, r1
   1fb38:	9f04      	ldr	r7, [sp, #16]
   1fb3a:	2f00      	cmp	r7, #0
   1fb3c:	d132      	bne.n	1fba4 <_strtod_r+0xb74>
   1fb3e:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
   1fb42:	0d1b      	lsrs	r3, r3, #20
   1fb44:	051b      	lsls	r3, r3, #20
   1fb46:	459c      	cmp	ip, r3
   1fb48:	d12c      	bne.n	1fba4 <_strtod_r+0xb74>
   1fb4a:	4629      	mov	r1, r5
   1fb4c:	4620      	mov	r0, r4
   1fb4e:	f004 fb4d 	bl	241ec <__aeabi_d2iz>
   1fb52:	f7fd f925 	bl	1cda0 <__aeabi_i2d>
   1fb56:	4602      	mov	r2, r0
   1fb58:	460b      	mov	r3, r1
   1fb5a:	4620      	mov	r0, r4
   1fb5c:	4629      	mov	r1, r5
   1fb5e:	f7fc ffd1 	bl	1cb04 <__aeabi_dsub>
   1fb62:	9f08      	ldr	r7, [sp, #32]
   1fb64:	4604      	mov	r4, r0
   1fb66:	460d      	mov	r5, r1
   1fb68:	b92f      	cbnz	r7, 1fb76 <_strtod_r+0xb46>
   1fb6a:	f1ba 0f00 	cmp.w	sl, #0
   1fb6e:	d102      	bne.n	1fb76 <_strtod_r+0xb46>
   1fb70:	f3cb 0613 	ubfx	r6, fp, #0, #20
   1fb74:	b186      	cbz	r6, 1fb98 <_strtod_r+0xb68>
   1fb76:	4620      	mov	r0, r4
   1fb78:	4629      	mov	r1, r5
   1fb7a:	a331      	add	r3, pc, #196	; (adr r3, 1fc40 <_strtod_r+0xc10>)
   1fb7c:	e9d3 2300 	ldrd	r2, r3, [r3]
   1fb80:	f004 fb0c 	bl	2419c <__aeabi_dcmplt>
   1fb84:	2800      	cmp	r0, #0
   1fb86:	d131      	bne.n	1fbec <_strtod_r+0xbbc>
   1fb88:	4620      	mov	r0, r4
   1fb8a:	4629      	mov	r1, r5
   1fb8c:	a32e      	add	r3, pc, #184	; (adr r3, 1fc48 <_strtod_r+0xc18>)
   1fb8e:	e9d3 2300 	ldrd	r2, r3, [r3]
   1fb92:	f004 fb21 	bl	241d8 <__aeabi_dcmpgt>
   1fb96:	e004      	b.n	1fba2 <_strtod_r+0xb72>
   1fb98:	a32d      	add	r3, pc, #180	; (adr r3, 1fc50 <_strtod_r+0xc20>)
   1fb9a:	e9d3 2300 	ldrd	r2, r3, [r3]
   1fb9e:	f004 fafd 	bl	2419c <__aeabi_dcmplt>
   1fba2:	bb18      	cbnz	r0, 1fbec <_strtod_r+0xbbc>
   1fba4:	4648      	mov	r0, r9
   1fba6:	991a      	ldr	r1, [sp, #104]	; 0x68
   1fba8:	f003 fb7b 	bl	232a2 <_Bfree>
   1fbac:	4648      	mov	r0, r9
   1fbae:	9905      	ldr	r1, [sp, #20]
   1fbb0:	f003 fb77 	bl	232a2 <_Bfree>
   1fbb4:	4648      	mov	r0, r9
   1fbb6:	9903      	ldr	r1, [sp, #12]
   1fbb8:	f003 fb73 	bl	232a2 <_Bfree>
   1fbbc:	4648      	mov	r0, r9
   1fbbe:	4641      	mov	r1, r8
   1fbc0:	f003 fb6f 	bl	232a2 <_Bfree>
   1fbc4:	e561      	b.n	1f68a <_strtod_r+0x65a>
   1fbc6:	9e04      	ldr	r6, [sp, #16]
   1fbc8:	b186      	cbz	r6, 1fbec <_strtod_r+0xbbc>
   1fbca:	4f26      	ldr	r7, [pc, #152]	; (1fc64 <_strtod_r+0xc34>)
   1fbcc:	2000      	movs	r0, #0
   1fbce:	900c      	str	r0, [sp, #48]	; 0x30
   1fbd0:	970d      	str	r7, [sp, #52]	; 0x34
   1fbd2:	4650      	mov	r0, sl
   1fbd4:	4659      	mov	r1, fp
   1fbd6:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
   1fbda:	f004 f86d 	bl	23cb8 <__aeabi_dmul>
   1fbde:	4682      	mov	sl, r0
   1fbe0:	468b      	mov	fp, r1
   1fbe2:	b919      	cbnz	r1, 1fbec <_strtod_r+0xbbc>
   1fbe4:	b910      	cbnz	r0, 1fbec <_strtod_r+0xbbc>
   1fbe6:	2322      	movs	r3, #34	; 0x22
   1fbe8:	f8c9 3000 	str.w	r3, [r9]
   1fbec:	4648      	mov	r0, r9
   1fbee:	991a      	ldr	r1, [sp, #104]	; 0x68
   1fbf0:	f003 fb57 	bl	232a2 <_Bfree>
   1fbf4:	4648      	mov	r0, r9
   1fbf6:	9905      	ldr	r1, [sp, #20]
   1fbf8:	f003 fb53 	bl	232a2 <_Bfree>
   1fbfc:	4648      	mov	r0, r9
   1fbfe:	9903      	ldr	r1, [sp, #12]
   1fc00:	f003 fb4f 	bl	232a2 <_Bfree>
   1fc04:	4648      	mov	r0, r9
   1fc06:	9907      	ldr	r1, [sp, #28]
   1fc08:	f003 fb4b 	bl	232a2 <_Bfree>
   1fc0c:	4648      	mov	r0, r9
   1fc0e:	4641      	mov	r1, r8
   1fc10:	f003 fb47 	bl	232a2 <_Bfree>
   1fc14:	9e15      	ldr	r6, [sp, #84]	; 0x54
   1fc16:	b10e      	cbz	r6, 1fc1c <_strtod_r+0xbec>
   1fc18:	9b19      	ldr	r3, [sp, #100]	; 0x64
   1fc1a:	6033      	str	r3, [r6, #0]
   1fc1c:	9f09      	ldr	r7, [sp, #36]	; 0x24
   1fc1e:	b11f      	cbz	r7, 1fc28 <_strtod_r+0xbf8>
   1fc20:	4650      	mov	r0, sl
   1fc22:	f10b 4100 	add.w	r1, fp, #2147483648	; 0x80000000
   1fc26:	e001      	b.n	1fc2c <_strtod_r+0xbfc>
   1fc28:	4650      	mov	r0, sl
   1fc2a:	4659      	mov	r1, fp
   1fc2c:	b01f      	add	sp, #124	; 0x7c
   1fc2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fc32:	bf00      	nop
   1fc34:	f3af 8000 	nop.w
   1fc38:	ffc00000 	.word	0xffc00000
   1fc3c:	41dfffff 	.word	0x41dfffff
   1fc40:	94a03595 	.word	0x94a03595
   1fc44:	3fdfffff 	.word	0x3fdfffff
   1fc48:	35afe535 	.word	0x35afe535
   1fc4c:	3fe00000 	.word	0x3fe00000
   1fc50:	94a03595 	.word	0x94a03595
   1fc54:	3fcfffff 	.word	0x3fcfffff
   1fc58:	7fe00000 	.word	0x7fe00000
   1fc5c:	7c9fffff 	.word	0x7c9fffff
   1fc60:	7fefffff 	.word	0x7fefffff
   1fc64:	39500000 	.word	0x39500000

0001fc68 <__strtok_r>:
__strtok_r():
   1fc68:	b5f0      	push	{r4, r5, r6, r7, lr}
   1fc6a:	b908      	cbnz	r0, 1fc70 <__strtok_r+0x8>
   1fc6c:	6810      	ldr	r0, [r2, #0]
   1fc6e:	b328      	cbz	r0, 1fcbc <__strtok_r+0x54>
   1fc70:	4604      	mov	r4, r0
   1fc72:	f814 5b01 	ldrb.w	r5, [r4], #1
   1fc76:	460f      	mov	r7, r1
   1fc78:	f817 6b01 	ldrb.w	r6, [r7], #1
   1fc7c:	b13e      	cbz	r6, 1fc8e <__strtok_r+0x26>
   1fc7e:	42b5      	cmp	r5, r6
   1fc80:	d1fa      	bne.n	1fc78 <__strtok_r+0x10>
   1fc82:	b10b      	cbz	r3, 1fc88 <__strtok_r+0x20>
   1fc84:	4620      	mov	r0, r4
   1fc86:	e7f3      	b.n	1fc70 <__strtok_r+0x8>
   1fc88:	6014      	str	r4, [r2, #0]
   1fc8a:	7003      	strb	r3, [r0, #0]
   1fc8c:	bdf0      	pop	{r4, r5, r6, r7, pc}
   1fc8e:	b94d      	cbnz	r5, 1fca4 <__strtok_r+0x3c>
   1fc90:	6015      	str	r5, [r2, #0]
   1fc92:	4628      	mov	r0, r5
   1fc94:	bdf0      	pop	{r4, r5, r6, r7, pc}
   1fc96:	f817 6b01 	ldrb.w	r6, [r7], #1
   1fc9a:	42ae      	cmp	r6, r5
   1fc9c:	d007      	beq.n	1fcae <__strtok_r+0x46>
   1fc9e:	2e00      	cmp	r6, #0
   1fca0:	d1f9      	bne.n	1fc96 <__strtok_r+0x2e>
   1fca2:	461c      	mov	r4, r3
   1fca4:	4623      	mov	r3, r4
   1fca6:	f813 5b01 	ldrb.w	r5, [r3], #1
   1fcaa:	460f      	mov	r7, r1
   1fcac:	e7f3      	b.n	1fc96 <__strtok_r+0x2e>
   1fcae:	b115      	cbz	r5, 1fcb6 <__strtok_r+0x4e>
   1fcb0:	2100      	movs	r1, #0
   1fcb2:	7021      	strb	r1, [r4, #0]
   1fcb4:	e000      	b.n	1fcb8 <__strtok_r+0x50>
   1fcb6:	462b      	mov	r3, r5
   1fcb8:	6013      	str	r3, [r2, #0]
   1fcba:	bdf0      	pop	{r4, r5, r6, r7, pc}
   1fcbc:	bdf0      	pop	{r4, r5, r6, r7, pc}

0001fcbe <strtok_r>:
strtok_r():
   1fcbe:	2301      	movs	r3, #1
   1fcc0:	f7ff bfd2 	b.w	1fc68 <__strtok_r>

0001fcc4 <_strtol_r>:
_strtol_r():
   1fcc4:	4684      	mov	ip, r0
   1fcc6:	483f      	ldr	r0, [pc, #252]	; (1fdc4 <_strtol_r+0x100>)
   1fcc8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fccc:	f8d0 8000 	ldr.w	r8, [r0]
   1fcd0:	460e      	mov	r6, r1
   1fcd2:	4634      	mov	r4, r6
   1fcd4:	f814 5b01 	ldrb.w	r5, [r4], #1
   1fcd8:	eb08 0005 	add.w	r0, r8, r5
   1fcdc:	7840      	ldrb	r0, [r0, #1]
   1fcde:	f000 0008 	and.w	r0, r0, #8
   1fce2:	f000 07ff 	and.w	r7, r0, #255	; 0xff
   1fce6:	b108      	cbz	r0, 1fcec <_strtol_r+0x28>
   1fce8:	4626      	mov	r6, r4
   1fcea:	e7f2      	b.n	1fcd2 <_strtol_r+0xe>
   1fcec:	2d2d      	cmp	r5, #45	; 0x2d
   1fcee:	d103      	bne.n	1fcf8 <_strtol_r+0x34>
   1fcf0:	1cb4      	adds	r4, r6, #2
   1fcf2:	7875      	ldrb	r5, [r6, #1]
   1fcf4:	2701      	movs	r7, #1
   1fcf6:	e003      	b.n	1fd00 <_strtol_r+0x3c>
   1fcf8:	2d2b      	cmp	r5, #43	; 0x2b
   1fcfa:	bf04      	itt	eq
   1fcfc:	7875      	ldrbeq	r5, [r6, #1]
   1fcfe:	1cb4      	addeq	r4, r6, #2
   1fd00:	f033 0010 	bics.w	r0, r3, #16
   1fd04:	d10d      	bne.n	1fd22 <_strtol_r+0x5e>
   1fd06:	2d30      	cmp	r5, #48	; 0x30
   1fd08:	d108      	bne.n	1fd1c <_strtol_r+0x58>
   1fd0a:	7820      	ldrb	r0, [r4, #0]
   1fd0c:	f000 00df 	and.w	r0, r0, #223	; 0xdf
   1fd10:	2858      	cmp	r0, #88	; 0x58
   1fd12:	d151      	bne.n	1fdb8 <_strtol_r+0xf4>
   1fd14:	7865      	ldrb	r5, [r4, #1]
   1fd16:	2310      	movs	r3, #16
   1fd18:	3402      	adds	r4, #2
   1fd1a:	e002      	b.n	1fd22 <_strtol_r+0x5e>
   1fd1c:	2b00      	cmp	r3, #0
   1fd1e:	bf08      	it	eq
   1fd20:	230a      	moveq	r3, #10
   1fd22:	2f00      	cmp	r7, #0
   1fd24:	bf0c      	ite	eq
   1fd26:	f06f 4a00 	mvneq.w	sl, #2147483648	; 0x80000000
   1fd2a:	f04f 4a00 	movne.w	sl, #2147483648	; 0x80000000
   1fd2e:	fbba f9f3 	udiv	r9, sl, r3
   1fd32:	fb03 aa19 	mls	sl, r3, r9, sl
   1fd36:	2600      	movs	r6, #0
   1fd38:	4630      	mov	r0, r6
   1fd3a:	eb08 0b05 	add.w	fp, r8, r5
   1fd3e:	f89b b001 	ldrb.w	fp, [fp, #1]
   1fd42:	f01b 0f04 	tst.w	fp, #4
   1fd46:	d001      	beq.n	1fd4c <_strtol_r+0x88>
   1fd48:	3d30      	subs	r5, #48	; 0x30
   1fd4a:	e00b      	b.n	1fd64 <_strtol_r+0xa0>
   1fd4c:	f01b 0b03 	ands.w	fp, fp, #3
   1fd50:	d01b      	beq.n	1fd8a <_strtol_r+0xc6>
   1fd52:	f1bb 0f01 	cmp.w	fp, #1
   1fd56:	bf14      	ite	ne
   1fd58:	f04f 0b57 	movne.w	fp, #87	; 0x57
   1fd5c:	f04f 0b37 	moveq.w	fp, #55	; 0x37
   1fd60:	ebcb 0505 	rsb	r5, fp, r5
   1fd64:	429d      	cmp	r5, r3
   1fd66:	da10      	bge.n	1fd8a <_strtol_r+0xc6>
   1fd68:	f1b6 3fff 	cmp.w	r6, #4294967295
   1fd6c:	d00a      	beq.n	1fd84 <_strtol_r+0xc0>
   1fd6e:	4548      	cmp	r0, r9
   1fd70:	d806      	bhi.n	1fd80 <_strtol_r+0xbc>
   1fd72:	d101      	bne.n	1fd78 <_strtol_r+0xb4>
   1fd74:	4555      	cmp	r5, sl
   1fd76:	dc03      	bgt.n	1fd80 <_strtol_r+0xbc>
   1fd78:	fb03 5000 	mla	r0, r3, r0, r5
   1fd7c:	2601      	movs	r6, #1
   1fd7e:	e001      	b.n	1fd84 <_strtol_r+0xc0>
   1fd80:	f04f 36ff 	mov.w	r6, #4294967295
   1fd84:	f814 5b01 	ldrb.w	r5, [r4], #1
   1fd88:	e7d7      	b.n	1fd3a <_strtol_r+0x76>
   1fd8a:	1c73      	adds	r3, r6, #1
   1fd8c:	d10c      	bne.n	1fda8 <_strtol_r+0xe4>
   1fd8e:	2f00      	cmp	r7, #0
   1fd90:	f04f 0322 	mov.w	r3, #34	; 0x22
   1fd94:	bf0c      	ite	eq
   1fd96:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
   1fd9a:	f04f 4000 	movne.w	r0, #2147483648	; 0x80000000
   1fd9e:	f8cc 3000 	str.w	r3, [ip]
   1fda2:	b92a      	cbnz	r2, 1fdb0 <_strtol_r+0xec>
   1fda4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fda8:	b107      	cbz	r7, 1fdac <_strtol_r+0xe8>
   1fdaa:	4240      	negs	r0, r0
   1fdac:	b142      	cbz	r2, 1fdc0 <_strtol_r+0xfc>
   1fdae:	b106      	cbz	r6, 1fdb2 <_strtol_r+0xee>
   1fdb0:	1e61      	subs	r1, r4, #1
   1fdb2:	6011      	str	r1, [r2, #0]
   1fdb4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fdb8:	2b00      	cmp	r3, #0
   1fdba:	bf08      	it	eq
   1fdbc:	2308      	moveq	r3, #8
   1fdbe:	e7b0      	b.n	1fd22 <_strtol_r+0x5e>
   1fdc0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fdc4:	2007c0ec 	.word	0x2007c0ec

0001fdc8 <strtol>:
strtol():
   1fdc8:	b530      	push	{r4, r5, lr}
   1fdca:	4613      	mov	r3, r2
   1fdcc:	4a04      	ldr	r2, [pc, #16]	; (1fde0 <strtol+0x18>)
   1fdce:	4605      	mov	r5, r0
   1fdd0:	460c      	mov	r4, r1
   1fdd2:	6810      	ldr	r0, [r2, #0]
   1fdd4:	4629      	mov	r1, r5
   1fdd6:	4622      	mov	r2, r4
   1fdd8:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
   1fddc:	f7ff bf72 	b.w	1fcc4 <_strtol_r>
   1fde0:	2007c150 	.word	0x2007c150

0001fde4 <__ssputs_r>:
__ssputs_r():
   1fde4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   1fde8:	688d      	ldr	r5, [r1, #8]
   1fdea:	4681      	mov	r9, r0
   1fdec:	42ab      	cmp	r3, r5
   1fdee:	460c      	mov	r4, r1
   1fdf0:	4692      	mov	sl, r2
   1fdf2:	461f      	mov	r7, r3
   1fdf4:	d343      	bcc.n	1fe7e <__ssputs_r+0x9a>
   1fdf6:	898b      	ldrh	r3, [r1, #12]
   1fdf8:	f413 6f90 	tst.w	r3, #1152	; 0x480
   1fdfc:	d03d      	beq.n	1fe7a <__ssputs_r+0x96>
   1fdfe:	6826      	ldr	r6, [r4, #0]
   1fe00:	6909      	ldr	r1, [r1, #16]
   1fe02:	2202      	movs	r2, #2
   1fe04:	ebc1 0806 	rsb	r8, r1, r6
   1fe08:	6966      	ldr	r6, [r4, #20]
   1fe0a:	eb06 0646 	add.w	r6, r6, r6, lsl #1
   1fe0e:	fb96 f6f2 	sdiv	r6, r6, r2
   1fe12:	f108 0201 	add.w	r2, r8, #1
   1fe16:	443a      	add	r2, r7
   1fe18:	4296      	cmp	r6, r2
   1fe1a:	bf38      	it	cc
   1fe1c:	4616      	movcc	r6, r2
   1fe1e:	055b      	lsls	r3, r3, #21
   1fe20:	d50f      	bpl.n	1fe42 <__ssputs_r+0x5e>
   1fe22:	4631      	mov	r1, r6
   1fe24:	f7fe fcd6 	bl	1e7d4 <_malloc_r>
   1fe28:	4605      	mov	r5, r0
   1fe2a:	b198      	cbz	r0, 1fe54 <__ssputs_r+0x70>
   1fe2c:	6921      	ldr	r1, [r4, #16]
   1fe2e:	4642      	mov	r2, r8
   1fe30:	f7fd fff9 	bl	1de26 <memcpy>
   1fe34:	89a3      	ldrh	r3, [r4, #12]
   1fe36:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
   1fe3a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   1fe3e:	81a3      	strh	r3, [r4, #12]
   1fe40:	e013      	b.n	1fe6a <__ssputs_r+0x86>
   1fe42:	4632      	mov	r2, r6
   1fe44:	f003 fe03 	bl	23a4e <_realloc_r>
   1fe48:	4605      	mov	r5, r0
   1fe4a:	b970      	cbnz	r0, 1fe6a <__ssputs_r+0x86>
   1fe4c:	4648      	mov	r0, r9
   1fe4e:	6921      	ldr	r1, [r4, #16]
   1fe50:	f7fe fc4e 	bl	1e6f0 <_free_r>
   1fe54:	230c      	movs	r3, #12
   1fe56:	f8c9 3000 	str.w	r3, [r9]
   1fe5a:	89a3      	ldrh	r3, [r4, #12]
   1fe5c:	f04f 30ff 	mov.w	r0, #4294967295
   1fe60:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   1fe64:	81a3      	strh	r3, [r4, #12]
   1fe66:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1fe6a:	6125      	str	r5, [r4, #16]
   1fe6c:	6166      	str	r6, [r4, #20]
   1fe6e:	4445      	add	r5, r8
   1fe70:	ebc8 0606 	rsb	r6, r8, r6
   1fe74:	6025      	str	r5, [r4, #0]
   1fe76:	60a6      	str	r6, [r4, #8]
   1fe78:	463d      	mov	r5, r7
   1fe7a:	42af      	cmp	r7, r5
   1fe7c:	d200      	bcs.n	1fe80 <__ssputs_r+0x9c>
   1fe7e:	463d      	mov	r5, r7
   1fe80:	462a      	mov	r2, r5
   1fe82:	6820      	ldr	r0, [r4, #0]
   1fe84:	4651      	mov	r1, sl
   1fe86:	f7fd ffd7 	bl	1de38 <memmove>
   1fe8a:	68a3      	ldr	r3, [r4, #8]
   1fe8c:	2000      	movs	r0, #0
   1fe8e:	1b5b      	subs	r3, r3, r5
   1fe90:	60a3      	str	r3, [r4, #8]
   1fe92:	6823      	ldr	r3, [r4, #0]
   1fe94:	441d      	add	r5, r3
   1fe96:	6025      	str	r5, [r4, #0]
   1fe98:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0001fe9c <_svfiprintf_r>:
_svfprintf_r():
   1fe9c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1fea0:	b09d      	sub	sp, #116	; 0x74
   1fea2:	9303      	str	r3, [sp, #12]
   1fea4:	898b      	ldrh	r3, [r1, #12]
   1fea6:	4607      	mov	r7, r0
   1fea8:	061c      	lsls	r4, r3, #24
   1feaa:	460d      	mov	r5, r1
   1feac:	4616      	mov	r6, r2
   1feae:	d50c      	bpl.n	1feca <_svfiprintf_r+0x2e>
   1feb0:	690b      	ldr	r3, [r1, #16]
   1feb2:	b953      	cbnz	r3, 1feca <_svfiprintf_r+0x2e>
   1feb4:	2140      	movs	r1, #64	; 0x40
   1feb6:	f7fe fc8d 	bl	1e7d4 <_malloc_r>
   1feba:	6028      	str	r0, [r5, #0]
   1febc:	6128      	str	r0, [r5, #16]
   1febe:	b910      	cbnz	r0, 1fec6 <_svfiprintf_r+0x2a>
   1fec0:	230c      	movs	r3, #12
   1fec2:	603b      	str	r3, [r7, #0]
   1fec4:	e0c7      	b.n	20056 <_svfiprintf_r+0x1ba>
   1fec6:	2340      	movs	r3, #64	; 0x40
   1fec8:	616b      	str	r3, [r5, #20]
   1feca:	2300      	movs	r3, #0
   1fecc:	9309      	str	r3, [sp, #36]	; 0x24
   1fece:	2320      	movs	r3, #32
   1fed0:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
   1fed4:	2330      	movs	r3, #48	; 0x30
   1fed6:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
   1feda:	4633      	mov	r3, r6
   1fedc:	461c      	mov	r4, r3
   1fede:	f813 2b01 	ldrb.w	r2, [r3], #1
   1fee2:	b91a      	cbnz	r2, 1feec <_svfiprintf_r+0x50>
   1fee4:	ebb4 0906 	subs.w	r9, r4, r6
   1fee8:	d00f      	beq.n	1ff0a <_svfiprintf_r+0x6e>
   1feea:	e002      	b.n	1fef2 <_svfiprintf_r+0x56>
   1feec:	2a25      	cmp	r2, #37	; 0x25
   1feee:	d1f5      	bne.n	1fedc <_svfiprintf_r+0x40>
   1fef0:	e7f8      	b.n	1fee4 <_svfiprintf_r+0x48>
   1fef2:	4638      	mov	r0, r7
   1fef4:	4629      	mov	r1, r5
   1fef6:	4632      	mov	r2, r6
   1fef8:	464b      	mov	r3, r9
   1fefa:	f7ff ff73 	bl	1fde4 <__ssputs_r>
   1fefe:	3001      	adds	r0, #1
   1ff00:	f000 80a4 	beq.w	2004c <_svfiprintf_r+0x1b0>
   1ff04:	9b09      	ldr	r3, [sp, #36]	; 0x24
   1ff06:	444b      	add	r3, r9
   1ff08:	9309      	str	r3, [sp, #36]	; 0x24
   1ff0a:	7823      	ldrb	r3, [r4, #0]
   1ff0c:	2b00      	cmp	r3, #0
   1ff0e:	f000 809d 	beq.w	2004c <_svfiprintf_r+0x1b0>
   1ff12:	2300      	movs	r3, #0
   1ff14:	f04f 32ff 	mov.w	r2, #4294967295
   1ff18:	9304      	str	r3, [sp, #16]
   1ff1a:	9307      	str	r3, [sp, #28]
   1ff1c:	9205      	str	r2, [sp, #20]
   1ff1e:	9306      	str	r3, [sp, #24]
   1ff20:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
   1ff24:	931a      	str	r3, [sp, #104]	; 0x68
   1ff26:	f104 0901 	add.w	r9, r4, #1
   1ff2a:	4e4d      	ldr	r6, [pc, #308]	; (20060 <_svfiprintf_r+0x1c4>)
   1ff2c:	464c      	mov	r4, r9
   1ff2e:	4630      	mov	r0, r6
   1ff30:	7821      	ldrb	r1, [r4, #0]
   1ff32:	2205      	movs	r2, #5
   1ff34:	f7fd ff5a 	bl	1ddec <memchr>
   1ff38:	f109 0901 	add.w	r9, r9, #1
   1ff3c:	9b04      	ldr	r3, [sp, #16]
   1ff3e:	b128      	cbz	r0, 1ff4c <_svfiprintf_r+0xb0>
   1ff40:	1b86      	subs	r6, r0, r6
   1ff42:	2001      	movs	r0, #1
   1ff44:	40b0      	lsls	r0, r6
   1ff46:	4303      	orrs	r3, r0
   1ff48:	9304      	str	r3, [sp, #16]
   1ff4a:	e7ee      	b.n	1ff2a <_svfiprintf_r+0x8e>
   1ff4c:	06d9      	lsls	r1, r3, #27
   1ff4e:	bf44      	itt	mi
   1ff50:	2220      	movmi	r2, #32
   1ff52:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
   1ff56:	071a      	lsls	r2, r3, #28
   1ff58:	bf44      	itt	mi
   1ff5a:	222b      	movmi	r2, #43	; 0x2b
   1ff5c:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
   1ff60:	7822      	ldrb	r2, [r4, #0]
   1ff62:	2a2a      	cmp	r2, #42	; 0x2a
   1ff64:	d002      	beq.n	1ff6c <_svfiprintf_r+0xd0>
   1ff66:	9b07      	ldr	r3, [sp, #28]
   1ff68:	4621      	mov	r1, r4
   1ff6a:	e00e      	b.n	1ff8a <_svfiprintf_r+0xee>
   1ff6c:	9a03      	ldr	r2, [sp, #12]
   1ff6e:	1d11      	adds	r1, r2, #4
   1ff70:	6812      	ldr	r2, [r2, #0]
   1ff72:	9103      	str	r1, [sp, #12]
   1ff74:	2a00      	cmp	r2, #0
   1ff76:	db01      	blt.n	1ff7c <_svfiprintf_r+0xe0>
   1ff78:	9207      	str	r2, [sp, #28]
   1ff7a:	e004      	b.n	1ff86 <_svfiprintf_r+0xea>
   1ff7c:	4252      	negs	r2, r2
   1ff7e:	f043 0302 	orr.w	r3, r3, #2
   1ff82:	9207      	str	r2, [sp, #28]
   1ff84:	9304      	str	r3, [sp, #16]
   1ff86:	3401      	adds	r4, #1
   1ff88:	e00a      	b.n	1ffa0 <_svfiprintf_r+0x104>
   1ff8a:	460c      	mov	r4, r1
   1ff8c:	7822      	ldrb	r2, [r4, #0]
   1ff8e:	3101      	adds	r1, #1
   1ff90:	3a30      	subs	r2, #48	; 0x30
   1ff92:	2a09      	cmp	r2, #9
   1ff94:	d803      	bhi.n	1ff9e <_svfiprintf_r+0x102>
   1ff96:	200a      	movs	r0, #10
   1ff98:	fb00 2303 	mla	r3, r0, r3, r2
   1ff9c:	e7f5      	b.n	1ff8a <_svfiprintf_r+0xee>
   1ff9e:	9307      	str	r3, [sp, #28]
   1ffa0:	7823      	ldrb	r3, [r4, #0]
   1ffa2:	2b2e      	cmp	r3, #46	; 0x2e
   1ffa4:	d119      	bne.n	1ffda <_svfiprintf_r+0x13e>
   1ffa6:	7863      	ldrb	r3, [r4, #1]
   1ffa8:	2b2a      	cmp	r3, #42	; 0x2a
   1ffaa:	d109      	bne.n	1ffc0 <_svfiprintf_r+0x124>
   1ffac:	9b03      	ldr	r3, [sp, #12]
   1ffae:	3402      	adds	r4, #2
   1ffb0:	1d1a      	adds	r2, r3, #4
   1ffb2:	681b      	ldr	r3, [r3, #0]
   1ffb4:	9203      	str	r2, [sp, #12]
   1ffb6:	2b00      	cmp	r3, #0
   1ffb8:	bfb8      	it	lt
   1ffba:	f04f 33ff 	movlt.w	r3, #4294967295
   1ffbe:	e00b      	b.n	1ffd8 <_svfiprintf_r+0x13c>
   1ffc0:	1c61      	adds	r1, r4, #1
   1ffc2:	2300      	movs	r3, #0
   1ffc4:	460c      	mov	r4, r1
   1ffc6:	7822      	ldrb	r2, [r4, #0]
   1ffc8:	3101      	adds	r1, #1
   1ffca:	3a30      	subs	r2, #48	; 0x30
   1ffcc:	2a09      	cmp	r2, #9
   1ffce:	d803      	bhi.n	1ffd8 <_svfiprintf_r+0x13c>
   1ffd0:	200a      	movs	r0, #10
   1ffd2:	fb00 2303 	mla	r3, r0, r3, r2
   1ffd6:	e7f5      	b.n	1ffc4 <_svfiprintf_r+0x128>
   1ffd8:	9305      	str	r3, [sp, #20]
   1ffda:	4e22      	ldr	r6, [pc, #136]	; (20064 <_svfiprintf_r+0x1c8>)
   1ffdc:	7821      	ldrb	r1, [r4, #0]
   1ffde:	4630      	mov	r0, r6
   1ffe0:	2203      	movs	r2, #3
   1ffe2:	f7fd ff03 	bl	1ddec <memchr>
   1ffe6:	b130      	cbz	r0, 1fff6 <_svfiprintf_r+0x15a>
   1ffe8:	1b86      	subs	r6, r0, r6
   1ffea:	2040      	movs	r0, #64	; 0x40
   1ffec:	40b0      	lsls	r0, r6
   1ffee:	9b04      	ldr	r3, [sp, #16]
   1fff0:	3401      	adds	r4, #1
   1fff2:	4303      	orrs	r3, r0
   1fff4:	9304      	str	r3, [sp, #16]
   1fff6:	7821      	ldrb	r1, [r4, #0]
   1fff8:	481b      	ldr	r0, [pc, #108]	; (20068 <_svfiprintf_r+0x1cc>)
   1fffa:	2206      	movs	r2, #6
   1fffc:	1c66      	adds	r6, r4, #1
   1fffe:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
   20002:	f7fd fef3 	bl	1ddec <memchr>
   20006:	b188      	cbz	r0, 2002c <_svfiprintf_r+0x190>
   20008:	4b18      	ldr	r3, [pc, #96]	; (2006c <_svfiprintf_r+0x1d0>)
   2000a:	b933      	cbnz	r3, 2001a <_svfiprintf_r+0x17e>
   2000c:	9b03      	ldr	r3, [sp, #12]
   2000e:	3307      	adds	r3, #7
   20010:	f023 0307 	bic.w	r3, r3, #7
   20014:	3308      	adds	r3, #8
   20016:	9303      	str	r3, [sp, #12]
   20018:	e014      	b.n	20044 <_svfiprintf_r+0x1a8>
   2001a:	ab03      	add	r3, sp, #12
   2001c:	9300      	str	r3, [sp, #0]
   2001e:	4638      	mov	r0, r7
   20020:	a904      	add	r1, sp, #16
   20022:	462a      	mov	r2, r5
   20024:	4b12      	ldr	r3, [pc, #72]	; (20070 <_svfiprintf_r+0x1d4>)
   20026:	f000 fc75 	bl	20914 <_printf_float>
   2002a:	e007      	b.n	2003c <_svfiprintf_r+0x1a0>
   2002c:	ab03      	add	r3, sp, #12
   2002e:	9300      	str	r3, [sp, #0]
   20030:	4638      	mov	r0, r7
   20032:	a904      	add	r1, sp, #16
   20034:	462a      	mov	r2, r5
   20036:	4b0e      	ldr	r3, [pc, #56]	; (20070 <_svfiprintf_r+0x1d4>)
   20038:	f000 feec 	bl	20e14 <_printf_i>
   2003c:	f1b0 3fff 	cmp.w	r0, #4294967295
   20040:	4680      	mov	r8, r0
   20042:	d003      	beq.n	2004c <_svfiprintf_r+0x1b0>
   20044:	9b09      	ldr	r3, [sp, #36]	; 0x24
   20046:	4443      	add	r3, r8
   20048:	9309      	str	r3, [sp, #36]	; 0x24
   2004a:	e746      	b.n	1feda <_svfiprintf_r+0x3e>
   2004c:	89ab      	ldrh	r3, [r5, #12]
   2004e:	065b      	lsls	r3, r3, #25
   20050:	d401      	bmi.n	20056 <_svfiprintf_r+0x1ba>
   20052:	9809      	ldr	r0, [sp, #36]	; 0x24
   20054:	e001      	b.n	2005a <_svfiprintf_r+0x1be>
   20056:	f04f 30ff 	mov.w	r0, #4294967295
   2005a:	b01d      	add	sp, #116	; 0x74
   2005c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   20060:	00027250 	.word	0x00027250
   20064:	00027256 	.word	0x00027256
   20068:	0002725a 	.word	0x0002725a
   2006c:	00020915 	.word	0x00020915
   20070:	0001fde5 	.word	0x0001fde5

00020074 <_sungetc_r>:
_sungetc_r():
   20074:	b538      	push	{r3, r4, r5, lr}
   20076:	1c4b      	adds	r3, r1, #1
   20078:	4614      	mov	r4, r2
   2007a:	d102      	bne.n	20082 <_sungetc_r+0xe>
   2007c:	f04f 30ff 	mov.w	r0, #4294967295
   20080:	bd38      	pop	{r3, r4, r5, pc}
   20082:	8993      	ldrh	r3, [r2, #12]
   20084:	b2cd      	uxtb	r5, r1
   20086:	f023 0320 	bic.w	r3, r3, #32
   2008a:	8193      	strh	r3, [r2, #12]
   2008c:	6b53      	ldr	r3, [r2, #52]	; 0x34
   2008e:	6852      	ldr	r2, [r2, #4]
   20090:	b183      	cbz	r3, 200b4 <_sungetc_r+0x40>
   20092:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   20094:	429a      	cmp	r2, r3
   20096:	da07      	bge.n	200a8 <_sungetc_r+0x34>
   20098:	6823      	ldr	r3, [r4, #0]
   2009a:	1e5a      	subs	r2, r3, #1
   2009c:	6022      	str	r2, [r4, #0]
   2009e:	f803 5c01 	strb.w	r5, [r3, #-1]
   200a2:	6863      	ldr	r3, [r4, #4]
   200a4:	3301      	adds	r3, #1
   200a6:	e01f      	b.n	200e8 <_sungetc_r+0x74>
   200a8:	4621      	mov	r1, r4
   200aa:	f000 f9c7 	bl	2043c <__submore>
   200ae:	2800      	cmp	r0, #0
   200b0:	d0f2      	beq.n	20098 <_sungetc_r+0x24>
   200b2:	e7e3      	b.n	2007c <_sungetc_r+0x8>
   200b4:	6921      	ldr	r1, [r4, #16]
   200b6:	6823      	ldr	r3, [r4, #0]
   200b8:	b151      	cbz	r1, 200d0 <_sungetc_r+0x5c>
   200ba:	428b      	cmp	r3, r1
   200bc:	d908      	bls.n	200d0 <_sungetc_r+0x5c>
   200be:	f813 0c01 	ldrb.w	r0, [r3, #-1]
   200c2:	42a8      	cmp	r0, r5
   200c4:	d104      	bne.n	200d0 <_sungetc_r+0x5c>
   200c6:	3b01      	subs	r3, #1
   200c8:	3201      	adds	r2, #1
   200ca:	6023      	str	r3, [r4, #0]
   200cc:	6062      	str	r2, [r4, #4]
   200ce:	bd38      	pop	{r3, r4, r5, pc}
   200d0:	63e3      	str	r3, [r4, #60]	; 0x3c
   200d2:	f104 0344 	add.w	r3, r4, #68	; 0x44
   200d6:	6363      	str	r3, [r4, #52]	; 0x34
   200d8:	2303      	movs	r3, #3
   200da:	63a3      	str	r3, [r4, #56]	; 0x38
   200dc:	4623      	mov	r3, r4
   200de:	6422      	str	r2, [r4, #64]	; 0x40
   200e0:	f803 5f46 	strb.w	r5, [r3, #70]!
   200e4:	6023      	str	r3, [r4, #0]
   200e6:	2301      	movs	r3, #1
   200e8:	6063      	str	r3, [r4, #4]
   200ea:	4628      	mov	r0, r5
   200ec:	bd38      	pop	{r3, r4, r5, pc}

000200ee <__ssrefill_r>:
__ssrefill_r():
   200ee:	b510      	push	{r4, lr}
   200f0:	460c      	mov	r4, r1
   200f2:	6b49      	ldr	r1, [r1, #52]	; 0x34
   200f4:	b169      	cbz	r1, 20112 <__ssrefill_r+0x24>
   200f6:	f104 0344 	add.w	r3, r4, #68	; 0x44
   200fa:	4299      	cmp	r1, r3
   200fc:	d001      	beq.n	20102 <__ssrefill_r+0x14>
   200fe:	f7fe faf7 	bl	1e6f0 <_free_r>
   20102:	6c23      	ldr	r3, [r4, #64]	; 0x40
   20104:	2000      	movs	r0, #0
   20106:	6360      	str	r0, [r4, #52]	; 0x34
   20108:	6063      	str	r3, [r4, #4]
   2010a:	b113      	cbz	r3, 20112 <__ssrefill_r+0x24>
   2010c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
   2010e:	6023      	str	r3, [r4, #0]
   20110:	bd10      	pop	{r4, pc}
   20112:	6923      	ldr	r3, [r4, #16]
   20114:	f04f 30ff 	mov.w	r0, #4294967295
   20118:	6023      	str	r3, [r4, #0]
   2011a:	2300      	movs	r3, #0
   2011c:	6063      	str	r3, [r4, #4]
   2011e:	89a3      	ldrh	r3, [r4, #12]
   20120:	f043 0320 	orr.w	r3, r3, #32
   20124:	81a3      	strh	r3, [r4, #12]
   20126:	bd10      	pop	{r4, pc}

00020128 <__ssvfiscanf_r>:
__ssvfscanf_r():
   20128:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   2012c:	f5ad 7d24 	sub.w	sp, sp, #656	; 0x290
   20130:	9301      	str	r3, [sp, #4]
   20132:	2300      	movs	r3, #0
   20134:	9346      	str	r3, [sp, #280]	; 0x118
   20136:	9347      	str	r3, [sp, #284]	; 0x11c
   20138:	4b9d      	ldr	r3, [pc, #628]	; (203b0 <__ssvfiscanf_r+0x288>)
   2013a:	f10d 090c 	add.w	r9, sp, #12
   2013e:	93a2      	str	r3, [sp, #648]	; 0x288
   20140:	4b9c      	ldr	r3, [pc, #624]	; (203b4 <__ssvfiscanf_r+0x28c>)
   20142:	4607      	mov	r7, r0
   20144:	460c      	mov	r4, r1
   20146:	4690      	mov	r8, r2
   20148:	f8cd 9120 	str.w	r9, [sp, #288]	; 0x120
   2014c:	93a3      	str	r3, [sp, #652]	; 0x28c
   2014e:	f898 5000 	ldrb.w	r5, [r8]
   20152:	2d00      	cmp	r5, #0
   20154:	f000 8124 	beq.w	203a0 <__ssvfiscanf_r+0x278>
   20158:	4997      	ldr	r1, [pc, #604]	; (203b8 <__ssvfiscanf_r+0x290>)
   2015a:	680b      	ldr	r3, [r1, #0]
   2015c:	468a      	mov	sl, r1
   2015e:	442b      	add	r3, r5
   20160:	785a      	ldrb	r2, [r3, #1]
   20162:	f002 0208 	and.w	r2, r2, #8
   20166:	f002 03ff 	and.w	r3, r2, #255	; 0xff
   2016a:	b1ea      	cbz	r2, 201a8 <__ssvfiscanf_r+0x80>
   2016c:	6863      	ldr	r3, [r4, #4]
   2016e:	2b00      	cmp	r3, #0
   20170:	dd10      	ble.n	20194 <__ssvfiscanf_r+0x6c>
   20172:	6823      	ldr	r3, [r4, #0]
   20174:	f8da 2000 	ldr.w	r2, [sl]
   20178:	7819      	ldrb	r1, [r3, #0]
   2017a:	440a      	add	r2, r1
   2017c:	7852      	ldrb	r2, [r2, #1]
   2017e:	0715      	lsls	r5, r2, #28
   20180:	d50e      	bpl.n	201a0 <__ssvfiscanf_r+0x78>
   20182:	9a47      	ldr	r2, [sp, #284]	; 0x11c
   20184:	3301      	adds	r3, #1
   20186:	3201      	adds	r2, #1
   20188:	9247      	str	r2, [sp, #284]	; 0x11c
   2018a:	6862      	ldr	r2, [r4, #4]
   2018c:	6023      	str	r3, [r4, #0]
   2018e:	3a01      	subs	r2, #1
   20190:	6062      	str	r2, [r4, #4]
   20192:	e7eb      	b.n	2016c <__ssvfiscanf_r+0x44>
   20194:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   20196:	4638      	mov	r0, r7
   20198:	4621      	mov	r1, r4
   2019a:	4798      	blx	r3
   2019c:	2800      	cmp	r0, #0
   2019e:	d0e8      	beq.n	20172 <__ssvfiscanf_r+0x4a>
   201a0:	f108 0601 	add.w	r6, r8, #1
   201a4:	46b0      	mov	r8, r6
   201a6:	e7d2      	b.n	2014e <__ssvfiscanf_r+0x26>
   201a8:	2d25      	cmp	r5, #37	; 0x25
   201aa:	f108 0601 	add.w	r6, r8, #1
   201ae:	d14f      	bne.n	20250 <__ssvfiscanf_r+0x128>
   201b0:	9345      	str	r3, [sp, #276]	; 0x114
   201b2:	9343      	str	r3, [sp, #268]	; 0x10c
   201b4:	f898 3001 	ldrb.w	r3, [r8, #1]
   201b8:	2b2a      	cmp	r3, #42	; 0x2a
   201ba:	d103      	bne.n	201c4 <__ssvfiscanf_r+0x9c>
   201bc:	2310      	movs	r3, #16
   201be:	9343      	str	r3, [sp, #268]	; 0x10c
   201c0:	f108 0602 	add.w	r6, r8, #2
   201c4:	7831      	ldrb	r1, [r6, #0]
   201c6:	4635      	mov	r5, r6
   201c8:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
   201cc:	2b09      	cmp	r3, #9
   201ce:	f106 0601 	add.w	r6, r6, #1
   201d2:	d806      	bhi.n	201e2 <__ssvfiscanf_r+0xba>
   201d4:	9b45      	ldr	r3, [sp, #276]	; 0x114
   201d6:	220a      	movs	r2, #10
   201d8:	fb02 1303 	mla	r3, r2, r3, r1
   201dc:	3b30      	subs	r3, #48	; 0x30
   201de:	9345      	str	r3, [sp, #276]	; 0x114
   201e0:	e7f0      	b.n	201c4 <__ssvfiscanf_r+0x9c>
   201e2:	f8df 81dc 	ldr.w	r8, [pc, #476]	; 203c0 <__ssvfiscanf_r+0x298>
   201e6:	2203      	movs	r2, #3
   201e8:	4640      	mov	r0, r8
   201ea:	f7fd fdff 	bl	1ddec <memchr>
   201ee:	b140      	cbz	r0, 20202 <__ssvfiscanf_r+0xda>
   201f0:	ebc8 0800 	rsb	r8, r8, r0
   201f4:	2001      	movs	r0, #1
   201f6:	fa00 f008 	lsl.w	r0, r0, r8
   201fa:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   201fc:	4635      	mov	r5, r6
   201fe:	4303      	orrs	r3, r0
   20200:	9343      	str	r3, [sp, #268]	; 0x10c
   20202:	1c6e      	adds	r6, r5, #1
   20204:	782d      	ldrb	r5, [r5, #0]
   20206:	2d67      	cmp	r5, #103	; 0x67
   20208:	d80f      	bhi.n	2022a <__ssvfiscanf_r+0x102>
   2020a:	2d65      	cmp	r5, #101	; 0x65
   2020c:	d278      	bcs.n	20300 <__ssvfiscanf_r+0x1d8>
   2020e:	2d5b      	cmp	r5, #91	; 0x5b
   20210:	d054      	beq.n	202bc <__ssvfiscanf_r+0x194>
   20212:	d805      	bhi.n	20220 <__ssvfiscanf_r+0xf8>
   20214:	2d00      	cmp	r5, #0
   20216:	f000 80c5 	beq.w	203a4 <__ssvfiscanf_r+0x27c>
   2021a:	2d25      	cmp	r5, #37	; 0x25
   2021c:	d018      	beq.n	20250 <__ssvfiscanf_r+0x128>
   2021e:	e071      	b.n	20304 <__ssvfiscanf_r+0x1dc>
   20220:	2d63      	cmp	r5, #99	; 0x63
   20222:	d057      	beq.n	202d4 <__ssvfiscanf_r+0x1ac>
   20224:	2d64      	cmp	r5, #100	; 0x64
   20226:	d03f      	beq.n	202a8 <__ssvfiscanf_r+0x180>
   20228:	e06c      	b.n	20304 <__ssvfiscanf_r+0x1dc>
   2022a:	2d70      	cmp	r5, #112	; 0x70
   2022c:	d032      	beq.n	20294 <__ssvfiscanf_r+0x16c>
   2022e:	d807      	bhi.n	20240 <__ssvfiscanf_r+0x118>
   20230:	2d6e      	cmp	r5, #110	; 0x6e
   20232:	d055      	beq.n	202e0 <__ssvfiscanf_r+0x1b8>
   20234:	d83a      	bhi.n	202ac <__ssvfiscanf_r+0x184>
   20236:	2d69      	cmp	r5, #105	; 0x69
   20238:	d164      	bne.n	20304 <__ssvfiscanf_r+0x1dc>
   2023a:	2300      	movs	r3, #0
   2023c:	9344      	str	r3, [sp, #272]	; 0x110
   2023e:	e039      	b.n	202b4 <__ssvfiscanf_r+0x18c>
   20240:	2d75      	cmp	r5, #117	; 0x75
   20242:	d031      	beq.n	202a8 <__ssvfiscanf_r+0x180>
   20244:	2d78      	cmp	r5, #120	; 0x78
   20246:	d029      	beq.n	2029c <__ssvfiscanf_r+0x174>
   20248:	2d73      	cmp	r5, #115	; 0x73
   2024a:	d15b      	bne.n	20304 <__ssvfiscanf_r+0x1dc>
   2024c:	2302      	movs	r3, #2
   2024e:	e03f      	b.n	202d0 <__ssvfiscanf_r+0x1a8>
   20250:	6863      	ldr	r3, [r4, #4]
   20252:	2b00      	cmp	r3, #0
   20254:	dd0d      	ble.n	20272 <__ssvfiscanf_r+0x14a>
   20256:	6823      	ldr	r3, [r4, #0]
   20258:	781a      	ldrb	r2, [r3, #0]
   2025a:	42aa      	cmp	r2, r5
   2025c:	f040 80a0 	bne.w	203a0 <__ssvfiscanf_r+0x278>
   20260:	3301      	adds	r3, #1
   20262:	6862      	ldr	r2, [r4, #4]
   20264:	6023      	str	r3, [r4, #0]
   20266:	9b47      	ldr	r3, [sp, #284]	; 0x11c
   20268:	3a01      	subs	r2, #1
   2026a:	3301      	adds	r3, #1
   2026c:	6062      	str	r2, [r4, #4]
   2026e:	9347      	str	r3, [sp, #284]	; 0x11c
   20270:	e798      	b.n	201a4 <__ssvfiscanf_r+0x7c>
   20272:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   20274:	4638      	mov	r0, r7
   20276:	4621      	mov	r1, r4
   20278:	4798      	blx	r3
   2027a:	2800      	cmp	r0, #0
   2027c:	d0eb      	beq.n	20256 <__ssvfiscanf_r+0x12e>
   2027e:	9846      	ldr	r0, [sp, #280]	; 0x118
   20280:	2800      	cmp	r0, #0
   20282:	f000 808f 	beq.w	203a4 <__ssvfiscanf_r+0x27c>
   20286:	89a3      	ldrh	r3, [r4, #12]
   20288:	f013 0f40 	tst.w	r3, #64	; 0x40
   2028c:	bf18      	it	ne
   2028e:	f04f 30ff 	movne.w	r0, #4294967295
   20292:	e089      	b.n	203a8 <__ssvfiscanf_r+0x280>
   20294:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   20296:	f043 0320 	orr.w	r3, r3, #32
   2029a:	9343      	str	r3, [sp, #268]	; 0x10c
   2029c:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   2029e:	f443 7300 	orr.w	r3, r3, #512	; 0x200
   202a2:	9343      	str	r3, [sp, #268]	; 0x10c
   202a4:	2310      	movs	r3, #16
   202a6:	e002      	b.n	202ae <__ssvfiscanf_r+0x186>
   202a8:	230a      	movs	r3, #10
   202aa:	e000      	b.n	202ae <__ssvfiscanf_r+0x186>
   202ac:	2308      	movs	r3, #8
   202ae:	2d6e      	cmp	r5, #110	; 0x6e
   202b0:	9344      	str	r3, [sp, #272]	; 0x110
   202b2:	dc01      	bgt.n	202b8 <__ssvfiscanf_r+0x190>
   202b4:	2303      	movs	r3, #3
   202b6:	e00b      	b.n	202d0 <__ssvfiscanf_r+0x1a8>
   202b8:	2304      	movs	r3, #4
   202ba:	e009      	b.n	202d0 <__ssvfiscanf_r+0x1a8>
   202bc:	4631      	mov	r1, r6
   202be:	4648      	mov	r0, r9
   202c0:	f003 fc20 	bl	23b04 <__sccl>
   202c4:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   202c6:	4606      	mov	r6, r0
   202c8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   202cc:	9343      	str	r3, [sp, #268]	; 0x10c
   202ce:	2301      	movs	r3, #1
   202d0:	9349      	str	r3, [sp, #292]	; 0x124
   202d2:	e01b      	b.n	2030c <__ssvfiscanf_r+0x1e4>
   202d4:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   202d6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   202da:	9343      	str	r3, [sp, #268]	; 0x10c
   202dc:	2300      	movs	r3, #0
   202de:	e7f7      	b.n	202d0 <__ssvfiscanf_r+0x1a8>
   202e0:	9a43      	ldr	r2, [sp, #268]	; 0x10c
   202e2:	06d0      	lsls	r0, r2, #27
   202e4:	f53f af5e 	bmi.w	201a4 <__ssvfiscanf_r+0x7c>
   202e8:	f012 0f01 	tst.w	r2, #1
   202ec:	9a01      	ldr	r2, [sp, #4]
   202ee:	9b47      	ldr	r3, [sp, #284]	; 0x11c
   202f0:	f102 0104 	add.w	r1, r2, #4
   202f4:	9101      	str	r1, [sp, #4]
   202f6:	6812      	ldr	r2, [r2, #0]
   202f8:	bf14      	ite	ne
   202fa:	8013      	strhne	r3, [r2, #0]
   202fc:	6013      	streq	r3, [r2, #0]
   202fe:	e751      	b.n	201a4 <__ssvfiscanf_r+0x7c>
   20300:	2305      	movs	r3, #5
   20302:	e7e5      	b.n	202d0 <__ssvfiscanf_r+0x1a8>
   20304:	2303      	movs	r3, #3
   20306:	9349      	str	r3, [sp, #292]	; 0x124
   20308:	230a      	movs	r3, #10
   2030a:	9344      	str	r3, [sp, #272]	; 0x110
   2030c:	6863      	ldr	r3, [r4, #4]
   2030e:	2b00      	cmp	r3, #0
   20310:	dd03      	ble.n	2031a <__ssvfiscanf_r+0x1f2>
   20312:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   20314:	0659      	lsls	r1, r3, #25
   20316:	d511      	bpl.n	2033c <__ssvfiscanf_r+0x214>
   20318:	e018      	b.n	2034c <__ssvfiscanf_r+0x224>
   2031a:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   2031c:	4638      	mov	r0, r7
   2031e:	4621      	mov	r1, r4
   20320:	4798      	blx	r3
   20322:	2800      	cmp	r0, #0
   20324:	d0f5      	beq.n	20312 <__ssvfiscanf_r+0x1ea>
   20326:	e7aa      	b.n	2027e <__ssvfiscanf_r+0x156>
   20328:	9a47      	ldr	r2, [sp, #284]	; 0x11c
   2032a:	3201      	adds	r2, #1
   2032c:	9247      	str	r2, [sp, #284]	; 0x11c
   2032e:	6862      	ldr	r2, [r4, #4]
   20330:	3a01      	subs	r2, #1
   20332:	2a00      	cmp	r2, #0
   20334:	6062      	str	r2, [r4, #4]
   20336:	dd13      	ble.n	20360 <__ssvfiscanf_r+0x238>
   20338:	3301      	adds	r3, #1
   2033a:	6023      	str	r3, [r4, #0]
   2033c:	6823      	ldr	r3, [r4, #0]
   2033e:	f8da 2000 	ldr.w	r2, [sl]
   20342:	7819      	ldrb	r1, [r3, #0]
   20344:	440a      	add	r2, r1
   20346:	7852      	ldrb	r2, [r2, #1]
   20348:	0712      	lsls	r2, r2, #28
   2034a:	d4ed      	bmi.n	20328 <__ssvfiscanf_r+0x200>
   2034c:	9b49      	ldr	r3, [sp, #292]	; 0x124
   2034e:	2b02      	cmp	r3, #2
   20350:	dc0d      	bgt.n	2036e <__ssvfiscanf_r+0x246>
   20352:	4638      	mov	r0, r7
   20354:	a943      	add	r1, sp, #268	; 0x10c
   20356:	4622      	mov	r2, r4
   20358:	ab01      	add	r3, sp, #4
   2035a:	f001 f9d1 	bl	21700 <_scanf_chars>
   2035e:	e019      	b.n	20394 <__ssvfiscanf_r+0x26c>
   20360:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   20362:	4638      	mov	r0, r7
   20364:	4621      	mov	r1, r4
   20366:	4798      	blx	r3
   20368:	2800      	cmp	r0, #0
   2036a:	d0e7      	beq.n	2033c <__ssvfiscanf_r+0x214>
   2036c:	e787      	b.n	2027e <__ssvfiscanf_r+0x156>
   2036e:	2b04      	cmp	r3, #4
   20370:	dc06      	bgt.n	20380 <__ssvfiscanf_r+0x258>
   20372:	4638      	mov	r0, r7
   20374:	a943      	add	r1, sp, #268	; 0x10c
   20376:	4622      	mov	r2, r4
   20378:	ab01      	add	r3, sp, #4
   2037a:	f001 fa21 	bl	217c0 <_scanf_i>
   2037e:	e009      	b.n	20394 <__ssvfiscanf_r+0x26c>
   20380:	4b0e      	ldr	r3, [pc, #56]	; (203bc <__ssvfiscanf_r+0x294>)
   20382:	2b00      	cmp	r3, #0
   20384:	f43f af0e 	beq.w	201a4 <__ssvfiscanf_r+0x7c>
   20388:	4638      	mov	r0, r7
   2038a:	a943      	add	r1, sp, #268	; 0x10c
   2038c:	4622      	mov	r2, r4
   2038e:	ab01      	add	r3, sp, #4
   20390:	f000 ffca 	bl	21328 <_scanf_float>
   20394:	2801      	cmp	r0, #1
   20396:	d003      	beq.n	203a0 <__ssvfiscanf_r+0x278>
   20398:	2802      	cmp	r0, #2
   2039a:	f47f af03 	bne.w	201a4 <__ssvfiscanf_r+0x7c>
   2039e:	e76e      	b.n	2027e <__ssvfiscanf_r+0x156>
   203a0:	9846      	ldr	r0, [sp, #280]	; 0x118
   203a2:	e001      	b.n	203a8 <__ssvfiscanf_r+0x280>
   203a4:	f04f 30ff 	mov.w	r0, #4294967295
   203a8:	f50d 7d24 	add.w	sp, sp, #656	; 0x290
   203ac:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   203b0:	00020075 	.word	0x00020075
   203b4:	000200ef 	.word	0x000200ef
   203b8:	2007c0ec 	.word	0x2007c0ec
   203bc:	00021329 	.word	0x00021329
   203c0:	00027256 	.word	0x00027256

000203c4 <write>:
write():
   203c4:	b530      	push	{r4, r5, lr}
   203c6:	4613      	mov	r3, r2
   203c8:	4a04      	ldr	r2, [pc, #16]	; (203dc <write+0x18>)
   203ca:	4605      	mov	r5, r0
   203cc:	460c      	mov	r4, r1
   203ce:	6810      	ldr	r0, [r2, #0]
   203d0:	4629      	mov	r1, r5
   203d2:	4622      	mov	r2, r4
   203d4:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
   203d8:	f001 bba8 	b.w	21b2c <_write_r>
   203dc:	2007c150 	.word	0x2007c150

000203e0 <time>:
time():
   203e0:	b513      	push	{r0, r1, r4, lr}
   203e2:	4b08      	ldr	r3, [pc, #32]	; (20404 <time+0x24>)
   203e4:	4604      	mov	r4, r0
   203e6:	4669      	mov	r1, sp
   203e8:	6818      	ldr	r0, [r3, #0]
   203ea:	2200      	movs	r2, #0
   203ec:	f002 feac 	bl	23148 <_gettimeofday_r>
   203f0:	2800      	cmp	r0, #0
   203f2:	db03      	blt.n	203fc <time+0x1c>
   203f4:	9800      	ldr	r0, [sp, #0]
   203f6:	b11c      	cbz	r4, 20400 <time+0x20>
   203f8:	6020      	str	r0, [r4, #0]
   203fa:	e001      	b.n	20400 <time+0x20>
   203fc:	f04f 30ff 	mov.w	r0, #4294967295
   20400:	b002      	add	sp, #8
   20402:	bd10      	pop	{r4, pc}
   20404:	2007c150 	.word	0x2007c150

00020408 <tolower>:
tolower():
   20408:	4b04      	ldr	r3, [pc, #16]	; (2041c <tolower+0x14>)
   2040a:	681b      	ldr	r3, [r3, #0]
   2040c:	4403      	add	r3, r0
   2040e:	785b      	ldrb	r3, [r3, #1]
   20410:	f003 0303 	and.w	r3, r3, #3
   20414:	2b01      	cmp	r3, #1
   20416:	bf08      	it	eq
   20418:	3020      	addeq	r0, #32
   2041a:	4770      	bx	lr
   2041c:	2007c0ec 	.word	0x2007c0ec

00020420 <toupper>:
toupper():
   20420:	4b04      	ldr	r3, [pc, #16]	; (20434 <toupper+0x14>)
   20422:	681b      	ldr	r3, [r3, #0]
   20424:	4403      	add	r3, r0
   20426:	785b      	ldrb	r3, [r3, #1]
   20428:	f003 0303 	and.w	r3, r3, #3
   2042c:	2b02      	cmp	r3, #2
   2042e:	bf08      	it	eq
   20430:	3820      	subeq	r0, #32
   20432:	4770      	bx	lr
   20434:	2007c0ec 	.word	0x2007c0ec

00020438 <__tz_lock>:
__tz_lock():
   20438:	4770      	bx	lr

0002043a <__tz_unlock>:
__tz_unlock():
   2043a:	4770      	bx	lr

0002043c <__submore>:
__submore():
   2043c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   20440:	460c      	mov	r4, r1
   20442:	6b49      	ldr	r1, [r1, #52]	; 0x34
   20444:	f104 0344 	add.w	r3, r4, #68	; 0x44
   20448:	4299      	cmp	r1, r3
   2044a:	d11a      	bne.n	20482 <__submore+0x46>
   2044c:	f44f 6180 	mov.w	r1, #1024	; 0x400
   20450:	f7fe f9c0 	bl	1e7d4 <_malloc_r>
   20454:	b918      	cbnz	r0, 2045e <__submore+0x22>
   20456:	f04f 30ff 	mov.w	r0, #4294967295
   2045a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   2045e:	f44f 6380 	mov.w	r3, #1024	; 0x400
   20462:	63a3      	str	r3, [r4, #56]	; 0x38
   20464:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
   20468:	6360      	str	r0, [r4, #52]	; 0x34
   2046a:	f880 33ff 	strb.w	r3, [r0, #1023]	; 0x3ff
   2046e:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
   20472:	f200 30fd 	addw	r0, r0, #1021	; 0x3fd
   20476:	7043      	strb	r3, [r0, #1]
   20478:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
   2047c:	7003      	strb	r3, [r0, #0]
   2047e:	6020      	str	r0, [r4, #0]
   20480:	e012      	b.n	204a8 <__submore+0x6c>
   20482:	6ba6      	ldr	r6, [r4, #56]	; 0x38
   20484:	0077      	lsls	r7, r6, #1
   20486:	463a      	mov	r2, r7
   20488:	f003 fae1 	bl	23a4e <_realloc_r>
   2048c:	4605      	mov	r5, r0
   2048e:	2800      	cmp	r0, #0
   20490:	d0e1      	beq.n	20456 <__submore+0x1a>
   20492:	eb00 0806 	add.w	r8, r0, r6
   20496:	4640      	mov	r0, r8
   20498:	4629      	mov	r1, r5
   2049a:	4632      	mov	r2, r6
   2049c:	f7fd fcc3 	bl	1de26 <memcpy>
   204a0:	f8c4 8000 	str.w	r8, [r4]
   204a4:	6365      	str	r5, [r4, #52]	; 0x34
   204a6:	63a7      	str	r7, [r4, #56]	; 0x38
   204a8:	2000      	movs	r0, #0
   204aa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

000204b0 <_ungetc_r>:
_ungetc_r():
   204b0:	1c4b      	adds	r3, r1, #1
   204b2:	b570      	push	{r4, r5, r6, lr}
   204b4:	4605      	mov	r5, r0
   204b6:	460e      	mov	r6, r1
   204b8:	4614      	mov	r4, r2
   204ba:	d102      	bne.n	204c2 <_ungetc_r+0x12>
   204bc:	f04f 30ff 	mov.w	r0, #4294967295
   204c0:	bd70      	pop	{r4, r5, r6, pc}
   204c2:	b118      	cbz	r0, 204cc <_ungetc_r+0x1c>
   204c4:	6983      	ldr	r3, [r0, #24]
   204c6:	b90b      	cbnz	r3, 204cc <_ungetc_r+0x1c>
   204c8:	f7fd fba0 	bl	1dc0c <__sinit>
   204cc:	4b2e      	ldr	r3, [pc, #184]	; (20588 <_ungetc_r+0xd8>)
   204ce:	429c      	cmp	r4, r3
   204d0:	d101      	bne.n	204d6 <_ungetc_r+0x26>
   204d2:	686c      	ldr	r4, [r5, #4]
   204d4:	e008      	b.n	204e8 <_ungetc_r+0x38>
   204d6:	4b2d      	ldr	r3, [pc, #180]	; (2058c <_ungetc_r+0xdc>)
   204d8:	429c      	cmp	r4, r3
   204da:	d101      	bne.n	204e0 <_ungetc_r+0x30>
   204dc:	68ac      	ldr	r4, [r5, #8]
   204de:	e003      	b.n	204e8 <_ungetc_r+0x38>
   204e0:	4b2b      	ldr	r3, [pc, #172]	; (20590 <_ungetc_r+0xe0>)
   204e2:	429c      	cmp	r4, r3
   204e4:	bf08      	it	eq
   204e6:	68ec      	ldreq	r4, [r5, #12]
   204e8:	89a3      	ldrh	r3, [r4, #12]
   204ea:	f023 0320 	bic.w	r3, r3, #32
   204ee:	b29b      	uxth	r3, r3
   204f0:	81a3      	strh	r3, [r4, #12]
   204f2:	b29b      	uxth	r3, r3
   204f4:	0759      	lsls	r1, r3, #29
   204f6:	d413      	bmi.n	20520 <_ungetc_r+0x70>
   204f8:	06da      	lsls	r2, r3, #27
   204fa:	d5df      	bpl.n	204bc <_ungetc_r+0xc>
   204fc:	071b      	lsls	r3, r3, #28
   204fe:	d50b      	bpl.n	20518 <_ungetc_r+0x68>
   20500:	4628      	mov	r0, r5
   20502:	4621      	mov	r1, r4
   20504:	f002 fac8 	bl	22a98 <_fflush_r>
   20508:	2800      	cmp	r0, #0
   2050a:	d1d7      	bne.n	204bc <_ungetc_r+0xc>
   2050c:	89a3      	ldrh	r3, [r4, #12]
   2050e:	60a0      	str	r0, [r4, #8]
   20510:	f023 0308 	bic.w	r3, r3, #8
   20514:	81a3      	strh	r3, [r4, #12]
   20516:	61a0      	str	r0, [r4, #24]
   20518:	89a3      	ldrh	r3, [r4, #12]
   2051a:	f043 0304 	orr.w	r3, r3, #4
   2051e:	81a3      	strh	r3, [r4, #12]
   20520:	6b63      	ldr	r3, [r4, #52]	; 0x34
   20522:	b2f6      	uxtb	r6, r6
   20524:	6862      	ldr	r2, [r4, #4]
   20526:	b18b      	cbz	r3, 2054c <_ungetc_r+0x9c>
   20528:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   2052a:	429a      	cmp	r2, r3
   2052c:	da07      	bge.n	2053e <_ungetc_r+0x8e>
   2052e:	6823      	ldr	r3, [r4, #0]
   20530:	1e5a      	subs	r2, r3, #1
   20532:	6022      	str	r2, [r4, #0]
   20534:	f803 6c01 	strb.w	r6, [r3, #-1]
   20538:	6863      	ldr	r3, [r4, #4]
   2053a:	3301      	adds	r3, #1
   2053c:	e020      	b.n	20580 <_ungetc_r+0xd0>
   2053e:	4628      	mov	r0, r5
   20540:	4621      	mov	r1, r4
   20542:	f7ff ff7b 	bl	2043c <__submore>
   20546:	2800      	cmp	r0, #0
   20548:	d0f1      	beq.n	2052e <_ungetc_r+0x7e>
   2054a:	e7b7      	b.n	204bc <_ungetc_r+0xc>
   2054c:	6921      	ldr	r1, [r4, #16]
   2054e:	6823      	ldr	r3, [r4, #0]
   20550:	b151      	cbz	r1, 20568 <_ungetc_r+0xb8>
   20552:	428b      	cmp	r3, r1
   20554:	d908      	bls.n	20568 <_ungetc_r+0xb8>
   20556:	f813 0c01 	ldrb.w	r0, [r3, #-1]
   2055a:	42b0      	cmp	r0, r6
   2055c:	d104      	bne.n	20568 <_ungetc_r+0xb8>
   2055e:	3b01      	subs	r3, #1
   20560:	3201      	adds	r2, #1
   20562:	6023      	str	r3, [r4, #0]
   20564:	6062      	str	r2, [r4, #4]
   20566:	bd70      	pop	{r4, r5, r6, pc}
   20568:	63e3      	str	r3, [r4, #60]	; 0x3c
   2056a:	f104 0344 	add.w	r3, r4, #68	; 0x44
   2056e:	6363      	str	r3, [r4, #52]	; 0x34
   20570:	2303      	movs	r3, #3
   20572:	63a3      	str	r3, [r4, #56]	; 0x38
   20574:	4623      	mov	r3, r4
   20576:	6422      	str	r2, [r4, #64]	; 0x40
   20578:	f803 6f46 	strb.w	r6, [r3, #70]!
   2057c:	6023      	str	r3, [r4, #0]
   2057e:	2301      	movs	r3, #1
   20580:	6063      	str	r3, [r4, #4]
   20582:	4630      	mov	r0, r6
   20584:	bd70      	pop	{r4, r5, r6, pc}
   20586:	bf00      	nop
   20588:	000270cc 	.word	0x000270cc
   2058c:	000270ec 	.word	0x000270ec
   20590:	0002710c 	.word	0x0002710c

00020594 <__sfputc_r>:
__sfputc_r():
   20594:	6893      	ldr	r3, [r2, #8]
   20596:	b510      	push	{r4, lr}
   20598:	3b01      	subs	r3, #1
   2059a:	2b00      	cmp	r3, #0
   2059c:	6093      	str	r3, [r2, #8]
   2059e:	da05      	bge.n	205ac <__sfputc_r+0x18>
   205a0:	6994      	ldr	r4, [r2, #24]
   205a2:	42a3      	cmp	r3, r4
   205a4:	db08      	blt.n	205b8 <__sfputc_r+0x24>
   205a6:	b2cb      	uxtb	r3, r1
   205a8:	2b0a      	cmp	r3, #10
   205aa:	d005      	beq.n	205b8 <__sfputc_r+0x24>
   205ac:	6813      	ldr	r3, [r2, #0]
   205ae:	1c58      	adds	r0, r3, #1
   205b0:	6010      	str	r0, [r2, #0]
   205b2:	7019      	strb	r1, [r3, #0]
   205b4:	b2c8      	uxtb	r0, r1
   205b6:	bd10      	pop	{r4, pc}
   205b8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   205bc:	f001 ba62 	b.w	21a84 <__swbuf_r>

000205c0 <__sfputs_r>:
__sfputs_r():
   205c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   205c2:	4605      	mov	r5, r0
   205c4:	460e      	mov	r6, r1
   205c6:	4614      	mov	r4, r2
   205c8:	18d7      	adds	r7, r2, r3
   205ca:	42bc      	cmp	r4, r7
   205cc:	d008      	beq.n	205e0 <__sfputs_r+0x20>
   205ce:	4628      	mov	r0, r5
   205d0:	f814 1b01 	ldrb.w	r1, [r4], #1
   205d4:	4632      	mov	r2, r6
   205d6:	f7ff ffdd 	bl	20594 <__sfputc_r>
   205da:	1c43      	adds	r3, r0, #1
   205dc:	d1f5      	bne.n	205ca <__sfputs_r+0xa>
   205de:	e000      	b.n	205e2 <__sfputs_r+0x22>
   205e0:	2000      	movs	r0, #0
   205e2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

000205e4 <_vfiprintf_r>:
_vfiprintf_r():
   205e4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   205e8:	b09d      	sub	sp, #116	; 0x74
   205ea:	460d      	mov	r5, r1
   205ec:	4617      	mov	r7, r2
   205ee:	9303      	str	r3, [sp, #12]
   205f0:	4606      	mov	r6, r0
   205f2:	b118      	cbz	r0, 205fc <_vfiprintf_r+0x18>
   205f4:	6983      	ldr	r3, [r0, #24]
   205f6:	b90b      	cbnz	r3, 205fc <_vfiprintf_r+0x18>
   205f8:	f7fd fb08 	bl	1dc0c <__sinit>
   205fc:	4b73      	ldr	r3, [pc, #460]	; (207cc <_vfiprintf_r+0x1e8>)
   205fe:	429d      	cmp	r5, r3
   20600:	d101      	bne.n	20606 <_vfiprintf_r+0x22>
   20602:	6875      	ldr	r5, [r6, #4]
   20604:	e008      	b.n	20618 <_vfiprintf_r+0x34>
   20606:	4b72      	ldr	r3, [pc, #456]	; (207d0 <_vfiprintf_r+0x1ec>)
   20608:	429d      	cmp	r5, r3
   2060a:	d101      	bne.n	20610 <_vfiprintf_r+0x2c>
   2060c:	68b5      	ldr	r5, [r6, #8]
   2060e:	e003      	b.n	20618 <_vfiprintf_r+0x34>
   20610:	4b70      	ldr	r3, [pc, #448]	; (207d4 <_vfiprintf_r+0x1f0>)
   20612:	429d      	cmp	r5, r3
   20614:	bf08      	it	eq
   20616:	68f5      	ldreq	r5, [r6, #12]
   20618:	89ab      	ldrh	r3, [r5, #12]
   2061a:	0718      	lsls	r0, r3, #28
   2061c:	d50a      	bpl.n	20634 <_vfiprintf_r+0x50>
   2061e:	692b      	ldr	r3, [r5, #16]
   20620:	b143      	cbz	r3, 20634 <_vfiprintf_r+0x50>
   20622:	2300      	movs	r3, #0
   20624:	9309      	str	r3, [sp, #36]	; 0x24
   20626:	2320      	movs	r3, #32
   20628:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
   2062c:	2330      	movs	r3, #48	; 0x30
   2062e:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
   20632:	e038      	b.n	206a6 <_vfiprintf_r+0xc2>
   20634:	4630      	mov	r0, r6
   20636:	4629      	mov	r1, r5
   20638:	f001 fa8a 	bl	21b50 <__swsetup_r>
   2063c:	2800      	cmp	r0, #0
   2063e:	d0f0      	beq.n	20622 <_vfiprintf_r+0x3e>
   20640:	f04f 30ff 	mov.w	r0, #4294967295
   20644:	e0be      	b.n	207c4 <_vfiprintf_r+0x1e0>
   20646:	9a03      	ldr	r2, [sp, #12]
   20648:	1d11      	adds	r1, r2, #4
   2064a:	6812      	ldr	r2, [r2, #0]
   2064c:	9103      	str	r1, [sp, #12]
   2064e:	2a00      	cmp	r2, #0
   20650:	db70      	blt.n	20734 <_vfiprintf_r+0x150>
   20652:	9207      	str	r2, [sp, #28]
   20654:	3401      	adds	r4, #1
   20656:	7823      	ldrb	r3, [r4, #0]
   20658:	2b2e      	cmp	r3, #46	; 0x2e
   2065a:	d07d      	beq.n	20758 <_vfiprintf_r+0x174>
   2065c:	4f5e      	ldr	r7, [pc, #376]	; (207d8 <_vfiprintf_r+0x1f4>)
   2065e:	7821      	ldrb	r1, [r4, #0]
   20660:	4638      	mov	r0, r7
   20662:	2203      	movs	r2, #3
   20664:	f7fd fbc2 	bl	1ddec <memchr>
   20668:	b130      	cbz	r0, 20678 <_vfiprintf_r+0x94>
   2066a:	1bc7      	subs	r7, r0, r7
   2066c:	2040      	movs	r0, #64	; 0x40
   2066e:	40b8      	lsls	r0, r7
   20670:	9b04      	ldr	r3, [sp, #16]
   20672:	3401      	adds	r4, #1
   20674:	4303      	orrs	r3, r0
   20676:	9304      	str	r3, [sp, #16]
   20678:	7821      	ldrb	r1, [r4, #0]
   2067a:	4858      	ldr	r0, [pc, #352]	; (207dc <_vfiprintf_r+0x1f8>)
   2067c:	2206      	movs	r2, #6
   2067e:	1c67      	adds	r7, r4, #1
   20680:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
   20684:	f7fd fbb2 	bl	1ddec <memchr>
   20688:	2800      	cmp	r0, #0
   2068a:	f000 8089 	beq.w	207a0 <_vfiprintf_r+0x1bc>
   2068e:	4b54      	ldr	r3, [pc, #336]	; (207e0 <_vfiprintf_r+0x1fc>)
   20690:	2b00      	cmp	r3, #0
   20692:	d17c      	bne.n	2078e <_vfiprintf_r+0x1aa>
   20694:	9b03      	ldr	r3, [sp, #12]
   20696:	3307      	adds	r3, #7
   20698:	f023 0307 	bic.w	r3, r3, #7
   2069c:	3308      	adds	r3, #8
   2069e:	9303      	str	r3, [sp, #12]
   206a0:	9b09      	ldr	r3, [sp, #36]	; 0x24
   206a2:	4443      	add	r3, r8
   206a4:	9309      	str	r3, [sp, #36]	; 0x24
   206a6:	463b      	mov	r3, r7
   206a8:	461c      	mov	r4, r3
   206aa:	f813 2b01 	ldrb.w	r2, [r3], #1
   206ae:	b91a      	cbnz	r2, 206b8 <_vfiprintf_r+0xd4>
   206b0:	ebb4 0907 	subs.w	r9, r4, r7
   206b4:	d00e      	beq.n	206d4 <_vfiprintf_r+0xf0>
   206b6:	e002      	b.n	206be <_vfiprintf_r+0xda>
   206b8:	2a25      	cmp	r2, #37	; 0x25
   206ba:	d1f5      	bne.n	206a8 <_vfiprintf_r+0xc4>
   206bc:	e7f8      	b.n	206b0 <_vfiprintf_r+0xcc>
   206be:	4630      	mov	r0, r6
   206c0:	4629      	mov	r1, r5
   206c2:	463a      	mov	r2, r7
   206c4:	464b      	mov	r3, r9
   206c6:	f7ff ff7b 	bl	205c0 <__sfputs_r>
   206ca:	3001      	adds	r0, #1
   206cc:	d075      	beq.n	207ba <_vfiprintf_r+0x1d6>
   206ce:	9b09      	ldr	r3, [sp, #36]	; 0x24
   206d0:	444b      	add	r3, r9
   206d2:	9309      	str	r3, [sp, #36]	; 0x24
   206d4:	7823      	ldrb	r3, [r4, #0]
   206d6:	2b00      	cmp	r3, #0
   206d8:	d06f      	beq.n	207ba <_vfiprintf_r+0x1d6>
   206da:	2300      	movs	r3, #0
   206dc:	f04f 32ff 	mov.w	r2, #4294967295
   206e0:	9304      	str	r3, [sp, #16]
   206e2:	9307      	str	r3, [sp, #28]
   206e4:	9205      	str	r2, [sp, #20]
   206e6:	9306      	str	r3, [sp, #24]
   206e8:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
   206ec:	931a      	str	r3, [sp, #104]	; 0x68
   206ee:	f104 0901 	add.w	r9, r4, #1
   206f2:	4f3c      	ldr	r7, [pc, #240]	; (207e4 <_vfiprintf_r+0x200>)
   206f4:	464c      	mov	r4, r9
   206f6:	4638      	mov	r0, r7
   206f8:	7821      	ldrb	r1, [r4, #0]
   206fa:	2205      	movs	r2, #5
   206fc:	f7fd fb76 	bl	1ddec <memchr>
   20700:	f109 0901 	add.w	r9, r9, #1
   20704:	9b04      	ldr	r3, [sp, #16]
   20706:	b128      	cbz	r0, 20714 <_vfiprintf_r+0x130>
   20708:	1bc7      	subs	r7, r0, r7
   2070a:	2001      	movs	r0, #1
   2070c:	40b8      	lsls	r0, r7
   2070e:	4303      	orrs	r3, r0
   20710:	9304      	str	r3, [sp, #16]
   20712:	e7ee      	b.n	206f2 <_vfiprintf_r+0x10e>
   20714:	06d9      	lsls	r1, r3, #27
   20716:	bf44      	itt	mi
   20718:	2220      	movmi	r2, #32
   2071a:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
   2071e:	071a      	lsls	r2, r3, #28
   20720:	bf44      	itt	mi
   20722:	222b      	movmi	r2, #43	; 0x2b
   20724:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
   20728:	7822      	ldrb	r2, [r4, #0]
   2072a:	2a2a      	cmp	r2, #42	; 0x2a
   2072c:	d08b      	beq.n	20646 <_vfiprintf_r+0x62>
   2072e:	9b07      	ldr	r3, [sp, #28]
   20730:	4621      	mov	r1, r4
   20732:	e005      	b.n	20740 <_vfiprintf_r+0x15c>
   20734:	4252      	negs	r2, r2
   20736:	f043 0302 	orr.w	r3, r3, #2
   2073a:	9207      	str	r2, [sp, #28]
   2073c:	9304      	str	r3, [sp, #16]
   2073e:	e789      	b.n	20654 <_vfiprintf_r+0x70>
   20740:	460c      	mov	r4, r1
   20742:	7822      	ldrb	r2, [r4, #0]
   20744:	3101      	adds	r1, #1
   20746:	3a30      	subs	r2, #48	; 0x30
   20748:	2a09      	cmp	r2, #9
   2074a:	d803      	bhi.n	20754 <_vfiprintf_r+0x170>
   2074c:	200a      	movs	r0, #10
   2074e:	fb00 2303 	mla	r3, r0, r3, r2
   20752:	e7f5      	b.n	20740 <_vfiprintf_r+0x15c>
   20754:	9307      	str	r3, [sp, #28]
   20756:	e77e      	b.n	20656 <_vfiprintf_r+0x72>
   20758:	7863      	ldrb	r3, [r4, #1]
   2075a:	2b2a      	cmp	r3, #42	; 0x2a
   2075c:	d109      	bne.n	20772 <_vfiprintf_r+0x18e>
   2075e:	9b03      	ldr	r3, [sp, #12]
   20760:	3402      	adds	r4, #2
   20762:	1d1a      	adds	r2, r3, #4
   20764:	681b      	ldr	r3, [r3, #0]
   20766:	9203      	str	r2, [sp, #12]
   20768:	2b00      	cmp	r3, #0
   2076a:	bfb8      	it	lt
   2076c:	f04f 33ff 	movlt.w	r3, #4294967295
   20770:	e00b      	b.n	2078a <_vfiprintf_r+0x1a6>
   20772:	1c61      	adds	r1, r4, #1
   20774:	2300      	movs	r3, #0
   20776:	460c      	mov	r4, r1
   20778:	7822      	ldrb	r2, [r4, #0]
   2077a:	3101      	adds	r1, #1
   2077c:	3a30      	subs	r2, #48	; 0x30
   2077e:	2a09      	cmp	r2, #9
   20780:	d803      	bhi.n	2078a <_vfiprintf_r+0x1a6>
   20782:	200a      	movs	r0, #10
   20784:	fb00 2303 	mla	r3, r0, r3, r2
   20788:	e7f5      	b.n	20776 <_vfiprintf_r+0x192>
   2078a:	9305      	str	r3, [sp, #20]
   2078c:	e766      	b.n	2065c <_vfiprintf_r+0x78>
   2078e:	ab03      	add	r3, sp, #12
   20790:	9300      	str	r3, [sp, #0]
   20792:	4630      	mov	r0, r6
   20794:	a904      	add	r1, sp, #16
   20796:	462a      	mov	r2, r5
   20798:	4b13      	ldr	r3, [pc, #76]	; (207e8 <_vfiprintf_r+0x204>)
   2079a:	f000 f8bb 	bl	20914 <_printf_float>
   2079e:	e007      	b.n	207b0 <_vfiprintf_r+0x1cc>
   207a0:	ab03      	add	r3, sp, #12
   207a2:	9300      	str	r3, [sp, #0]
   207a4:	4630      	mov	r0, r6
   207a6:	a904      	add	r1, sp, #16
   207a8:	462a      	mov	r2, r5
   207aa:	4b0f      	ldr	r3, [pc, #60]	; (207e8 <_vfiprintf_r+0x204>)
   207ac:	f000 fb32 	bl	20e14 <_printf_i>
   207b0:	f1b0 3fff 	cmp.w	r0, #4294967295
   207b4:	4680      	mov	r8, r0
   207b6:	f47f af73 	bne.w	206a0 <_vfiprintf_r+0xbc>
   207ba:	89ab      	ldrh	r3, [r5, #12]
   207bc:	065b      	lsls	r3, r3, #25
   207be:	f53f af3f 	bmi.w	20640 <_vfiprintf_r+0x5c>
   207c2:	9809      	ldr	r0, [sp, #36]	; 0x24
   207c4:	b01d      	add	sp, #116	; 0x74
   207c6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   207ca:	bf00      	nop
   207cc:	000270cc 	.word	0x000270cc
   207d0:	000270ec 	.word	0x000270ec
   207d4:	0002710c 	.word	0x0002710c
   207d8:	00027256 	.word	0x00027256
   207dc:	0002725a 	.word	0x0002725a
   207e0:	00020915 	.word	0x00020915
   207e4:	00027250 	.word	0x00027250
   207e8:	000205c1 	.word	0x000205c1

000207ec <__cvt>:
__cvt():
   207ec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   207f0:	2b00      	cmp	r3, #0
   207f2:	b088      	sub	sp, #32
   207f4:	4614      	mov	r4, r2
   207f6:	461d      	mov	r5, r3
   207f8:	9e10      	ldr	r6, [sp, #64]	; 0x40
   207fa:	9912      	ldr	r1, [sp, #72]	; 0x48
   207fc:	9f13      	ldr	r7, [sp, #76]	; 0x4c
   207fe:	da05      	bge.n	2080c <__cvt+0x20>
   20800:	f105 4300 	add.w	r3, r5, #2147483648	; 0x80000000
   20804:	461d      	mov	r5, r3
   20806:	4614      	mov	r4, r2
   20808:	232d      	movs	r3, #45	; 0x2d
   2080a:	e000      	b.n	2080e <__cvt+0x22>
   2080c:	2300      	movs	r3, #0
   2080e:	700b      	strb	r3, [r1, #0]
   20810:	9b14      	ldr	r3, [sp, #80]	; 0x50
   20812:	f023 0a20 	bic.w	sl, r3, #32
   20816:	f1ba 0f46 	cmp.w	sl, #70	; 0x46
   2081a:	d004      	beq.n	20826 <__cvt+0x3a>
   2081c:	f1ba 0f45 	cmp.w	sl, #69	; 0x45
   20820:	d103      	bne.n	2082a <__cvt+0x3e>
   20822:	3601      	adds	r6, #1
   20824:	e001      	b.n	2082a <__cvt+0x3e>
   20826:	2303      	movs	r3, #3
   20828:	e000      	b.n	2082c <__cvt+0x40>
   2082a:	2302      	movs	r3, #2
   2082c:	e88d 00c8 	stmia.w	sp, {r3, r6, r7}
   20830:	ab06      	add	r3, sp, #24
   20832:	9303      	str	r3, [sp, #12]
   20834:	ab07      	add	r3, sp, #28
   20836:	9304      	str	r3, [sp, #16]
   20838:	4622      	mov	r2, r4
   2083a:	462b      	mov	r3, r5
   2083c:	f001 fae8 	bl	21e10 <_dtoa_r>
   20840:	f1ba 0f47 	cmp.w	sl, #71	; 0x47
   20844:	4680      	mov	r8, r0
   20846:	d102      	bne.n	2084e <__cvt+0x62>
   20848:	9b11      	ldr	r3, [sp, #68]	; 0x44
   2084a:	07db      	lsls	r3, r3, #31
   2084c:	d525      	bpl.n	2089a <__cvt+0xae>
   2084e:	f1ba 0f46 	cmp.w	sl, #70	; 0x46
   20852:	eb08 0906 	add.w	r9, r8, r6
   20856:	d10f      	bne.n	20878 <__cvt+0x8c>
   20858:	f898 3000 	ldrb.w	r3, [r8]
   2085c:	2b30      	cmp	r3, #48	; 0x30
   2085e:	d109      	bne.n	20874 <__cvt+0x88>
   20860:	4620      	mov	r0, r4
   20862:	4629      	mov	r1, r5
   20864:	2200      	movs	r2, #0
   20866:	2300      	movs	r3, #0
   20868:	f003 fc8e 	bl	24188 <__aeabi_dcmpeq>
   2086c:	b910      	cbnz	r0, 20874 <__cvt+0x88>
   2086e:	f1c6 0601 	rsb	r6, r6, #1
   20872:	603e      	str	r6, [r7, #0]
   20874:	683b      	ldr	r3, [r7, #0]
   20876:	4499      	add	r9, r3
   20878:	4620      	mov	r0, r4
   2087a:	4629      	mov	r1, r5
   2087c:	2200      	movs	r2, #0
   2087e:	2300      	movs	r3, #0
   20880:	f003 fc82 	bl	24188 <__aeabi_dcmpeq>
   20884:	b108      	cbz	r0, 2088a <__cvt+0x9e>
   20886:	f8cd 901c 	str.w	r9, [sp, #28]
   2088a:	9b07      	ldr	r3, [sp, #28]
   2088c:	454b      	cmp	r3, r9
   2088e:	d204      	bcs.n	2089a <__cvt+0xae>
   20890:	1c5a      	adds	r2, r3, #1
   20892:	9207      	str	r2, [sp, #28]
   20894:	2230      	movs	r2, #48	; 0x30
   20896:	701a      	strb	r2, [r3, #0]
   20898:	e7f7      	b.n	2088a <__cvt+0x9e>
   2089a:	9b07      	ldr	r3, [sp, #28]
   2089c:	4640      	mov	r0, r8
   2089e:	ebc8 0203 	rsb	r2, r8, r3
   208a2:	9b15      	ldr	r3, [sp, #84]	; 0x54
   208a4:	601a      	str	r2, [r3, #0]
   208a6:	b008      	add	sp, #32
   208a8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

000208ac <__exponent>:
__exponent():
   208ac:	b573      	push	{r0, r1, r4, r5, r6, lr}
   208ae:	4603      	mov	r3, r0
   208b0:	2900      	cmp	r1, #0
   208b2:	f803 2b02 	strb.w	r2, [r3], #2
   208b6:	da03      	bge.n	208c0 <__exponent+0x14>
   208b8:	4249      	negs	r1, r1
   208ba:	461a      	mov	r2, r3
   208bc:	242d      	movs	r4, #45	; 0x2d
   208be:	e001      	b.n	208c4 <__exponent+0x18>
   208c0:	461a      	mov	r2, r3
   208c2:	242b      	movs	r4, #43	; 0x2b
   208c4:	2909      	cmp	r1, #9
   208c6:	7044      	strb	r4, [r0, #1]
   208c8:	dd1b      	ble.n	20902 <__exponent+0x56>
   208ca:	f10d 0406 	add.w	r4, sp, #6
   208ce:	260a      	movs	r6, #10
   208d0:	fb91 f5f6 	sdiv	r5, r1, r6
   208d4:	fb06 1115 	mls	r1, r6, r5, r1
   208d8:	2d09      	cmp	r5, #9
   208da:	f101 0130 	add.w	r1, r1, #48	; 0x30
   208de:	4623      	mov	r3, r4
   208e0:	f804 1901 	strb.w	r1, [r4], #-1
   208e4:	4629      	mov	r1, r5
   208e6:	dcf2      	bgt.n	208ce <__exponent+0x22>
   208e8:	f105 0130 	add.w	r1, r5, #48	; 0x30
   208ec:	f803 1d01 	strb.w	r1, [r3, #-1]!
   208f0:	f10d 0107 	add.w	r1, sp, #7
   208f4:	428b      	cmp	r3, r1
   208f6:	d20a      	bcs.n	2090e <__exponent+0x62>
   208f8:	f813 1b01 	ldrb.w	r1, [r3], #1
   208fc:	f802 1b01 	strb.w	r1, [r2], #1
   20900:	e7f6      	b.n	208f0 <__exponent+0x44>
   20902:	2430      	movs	r4, #48	; 0x30
   20904:	461a      	mov	r2, r3
   20906:	4421      	add	r1, r4
   20908:	f802 4b02 	strb.w	r4, [r2], #2
   2090c:	7059      	strb	r1, [r3, #1]
   2090e:	1a10      	subs	r0, r2, r0
   20910:	b002      	add	sp, #8
   20912:	bd70      	pop	{r4, r5, r6, pc}

00020914 <_printf_float>:
_printf_float():
   20914:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20918:	b08f      	sub	sp, #60	; 0x3c
   2091a:	460c      	mov	r4, r1
   2091c:	4616      	mov	r6, r2
   2091e:	461f      	mov	r7, r3
   20920:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
   20924:	4605      	mov	r5, r0
   20926:	f002 fc25 	bl	23174 <_localeconv_r>
   2092a:	f8d0 a000 	ldr.w	sl, [r0]
   2092e:	4650      	mov	r0, sl
   20930:	f7fe faca 	bl	1eec8 <strlen>
   20934:	2300      	movs	r3, #0
   20936:	930c      	str	r3, [sp, #48]	; 0x30
   20938:	f8d9 3000 	ldr.w	r3, [r9]
   2093c:	9009      	str	r0, [sp, #36]	; 0x24
   2093e:	3307      	adds	r3, #7
   20940:	f023 0307 	bic.w	r3, r3, #7
   20944:	f103 0208 	add.w	r2, r3, #8
   20948:	e9d3 0100 	ldrd	r0, r1, [r3]
   2094c:	f894 8018 	ldrb.w	r8, [r4, #24]
   20950:	f8c9 2000 	str.w	r2, [r9]
   20954:	e9c4 0112 	strd	r0, r1, [r4, #72]	; 0x48
   20958:	f003 f8b2 	bl	23ac0 <__fpclassifyd>
   2095c:	2801      	cmp	r0, #1
   2095e:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
   20962:	d117      	bne.n	20994 <_printf_float+0x80>
   20964:	2200      	movs	r2, #0
   20966:	2300      	movs	r3, #0
   20968:	f003 fc18 	bl	2419c <__aeabi_dcmplt>
   2096c:	b110      	cbz	r0, 20974 <_printf_float+0x60>
   2096e:	232d      	movs	r3, #45	; 0x2d
   20970:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
   20974:	4b90      	ldr	r3, [pc, #576]	; (20bb8 <_printf_float+0x2a4>)
   20976:	4a91      	ldr	r2, [pc, #580]	; (20bbc <_printf_float+0x2a8>)
   20978:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
   2097c:	bf8c      	ite	hi
   2097e:	4691      	movhi	r9, r2
   20980:	4699      	movls	r9, r3
   20982:	2303      	movs	r3, #3
   20984:	6123      	str	r3, [r4, #16]
   20986:	6823      	ldr	r3, [r4, #0]
   20988:	f023 0304 	bic.w	r3, r3, #4
   2098c:	6023      	str	r3, [r4, #0]
   2098e:	f04f 0b00 	mov.w	fp, #0
   20992:	e086      	b.n	20aa2 <_printf_float+0x18e>
   20994:	f003 f894 	bl	23ac0 <__fpclassifyd>
   20998:	6823      	ldr	r3, [r4, #0]
   2099a:	b948      	cbnz	r0, 209b0 <_printf_float+0x9c>
   2099c:	4a88      	ldr	r2, [pc, #544]	; (20bc0 <_printf_float+0x2ac>)
   2099e:	4989      	ldr	r1, [pc, #548]	; (20bc4 <_printf_float+0x2b0>)
   209a0:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
   209a4:	bf8c      	ite	hi
   209a6:	4689      	movhi	r9, r1
   209a8:	4691      	movls	r9, r2
   209aa:	2203      	movs	r2, #3
   209ac:	6122      	str	r2, [r4, #16]
   209ae:	e7eb      	b.n	20988 <_printf_float+0x74>
   209b0:	6862      	ldr	r2, [r4, #4]
   209b2:	f028 0b20 	bic.w	fp, r8, #32
   209b6:	1c51      	adds	r1, r2, #1
   209b8:	d101      	bne.n	209be <_printf_float+0xaa>
   209ba:	2206      	movs	r2, #6
   209bc:	e004      	b.n	209c8 <_printf_float+0xb4>
   209be:	f1bb 0f47 	cmp.w	fp, #71	; 0x47
   209c2:	d102      	bne.n	209ca <_printf_float+0xb6>
   209c4:	b90a      	cbnz	r2, 209ca <_printf_float+0xb6>
   209c6:	2201      	movs	r2, #1
   209c8:	6062      	str	r2, [r4, #4]
   209ca:	6860      	ldr	r0, [r4, #4]
   209cc:	f443 6180 	orr.w	r1, r3, #1024	; 0x400
   209d0:	e88d 0003 	stmia.w	sp, {r0, r1}
   209d4:	e9d4 2312 	ldrd	r2, r3, [r4, #72]	; 0x48
   209d8:	f10d 002b 	add.w	r0, sp, #43	; 0x2b
   209dc:	9002      	str	r0, [sp, #8]
   209de:	a80b      	add	r0, sp, #44	; 0x2c
   209e0:	9003      	str	r0, [sp, #12]
   209e2:	a80c      	add	r0, sp, #48	; 0x30
   209e4:	9005      	str	r0, [sp, #20]
   209e6:	2000      	movs	r0, #0
   209e8:	6021      	str	r1, [r4, #0]
   209ea:	9006      	str	r0, [sp, #24]
   209ec:	f8cd 8010 	str.w	r8, [sp, #16]
   209f0:	4628      	mov	r0, r5
   209f2:	f7ff fefb 	bl	207ec <__cvt>
   209f6:	f1bb 0f47 	cmp.w	fp, #71	; 0x47
   209fa:	4681      	mov	r9, r0
   209fc:	990b      	ldr	r1, [sp, #44]	; 0x2c
   209fe:	d109      	bne.n	20a14 <_printf_float+0x100>
   20a00:	1cc8      	adds	r0, r1, #3
   20a02:	db02      	blt.n	20a0a <_printf_float+0xf6>
   20a04:	6863      	ldr	r3, [r4, #4]
   20a06:	4299      	cmp	r1, r3
   20a08:	dd30      	ble.n	20a6c <_printf_float+0x158>
   20a0a:	f1a8 0802 	sub.w	r8, r8, #2
   20a0e:	fa5f f888 	uxtb.w	r8, r8
   20a12:	e002      	b.n	20a1a <_printf_float+0x106>
   20a14:	f1b8 0f65 	cmp.w	r8, #101	; 0x65
   20a18:	d812      	bhi.n	20a40 <_printf_float+0x12c>
   20a1a:	3901      	subs	r1, #1
   20a1c:	4642      	mov	r2, r8
   20a1e:	f104 0050 	add.w	r0, r4, #80	; 0x50
   20a22:	910b      	str	r1, [sp, #44]	; 0x2c
   20a24:	f7ff ff42 	bl	208ac <__exponent>
   20a28:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   20a2a:	4683      	mov	fp, r0
   20a2c:	1883      	adds	r3, r0, r2
   20a2e:	2a01      	cmp	r2, #1
   20a30:	6123      	str	r3, [r4, #16]
   20a32:	dc02      	bgt.n	20a3a <_printf_float+0x126>
   20a34:	6822      	ldr	r2, [r4, #0]
   20a36:	07d2      	lsls	r2, r2, #31
   20a38:	d52d      	bpl.n	20a96 <_printf_float+0x182>
   20a3a:	3301      	adds	r3, #1
   20a3c:	6123      	str	r3, [r4, #16]
   20a3e:	e02a      	b.n	20a96 <_printf_float+0x182>
   20a40:	f1b8 0f66 	cmp.w	r8, #102	; 0x66
   20a44:	d114      	bne.n	20a70 <_printf_float+0x15c>
   20a46:	2900      	cmp	r1, #0
   20a48:	6863      	ldr	r3, [r4, #4]
   20a4a:	dd07      	ble.n	20a5c <_printf_float+0x148>
   20a4c:	6121      	str	r1, [r4, #16]
   20a4e:	b913      	cbnz	r3, 20a56 <_printf_float+0x142>
   20a50:	6822      	ldr	r2, [r4, #0]
   20a52:	07d0      	lsls	r0, r2, #31
   20a54:	d51c      	bpl.n	20a90 <_printf_float+0x17c>
   20a56:	3301      	adds	r3, #1
   20a58:	440b      	add	r3, r1
   20a5a:	e018      	b.n	20a8e <_printf_float+0x17a>
   20a5c:	b913      	cbnz	r3, 20a64 <_printf_float+0x150>
   20a5e:	6822      	ldr	r2, [r4, #0]
   20a60:	07d2      	lsls	r2, r2, #31
   20a62:	d501      	bpl.n	20a68 <_printf_float+0x154>
   20a64:	3302      	adds	r3, #2
   20a66:	e012      	b.n	20a8e <_printf_float+0x17a>
   20a68:	2301      	movs	r3, #1
   20a6a:	e010      	b.n	20a8e <_printf_float+0x17a>
   20a6c:	f04f 0867 	mov.w	r8, #103	; 0x67
   20a70:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   20a72:	4291      	cmp	r1, r2
   20a74:	db05      	blt.n	20a82 <_printf_float+0x16e>
   20a76:	6823      	ldr	r3, [r4, #0]
   20a78:	6121      	str	r1, [r4, #16]
   20a7a:	07d8      	lsls	r0, r3, #31
   20a7c:	d508      	bpl.n	20a90 <_printf_float+0x17c>
   20a7e:	1c4b      	adds	r3, r1, #1
   20a80:	e005      	b.n	20a8e <_printf_float+0x17a>
   20a82:	2900      	cmp	r1, #0
   20a84:	bfd4      	ite	le
   20a86:	f1c1 0302 	rsble	r3, r1, #2
   20a8a:	2301      	movgt	r3, #1
   20a8c:	4413      	add	r3, r2
   20a8e:	6123      	str	r3, [r4, #16]
   20a90:	65a1      	str	r1, [r4, #88]	; 0x58
   20a92:	f04f 0b00 	mov.w	fp, #0
   20a96:	f89d 302b 	ldrb.w	r3, [sp, #43]	; 0x2b
   20a9a:	b113      	cbz	r3, 20aa2 <_printf_float+0x18e>
   20a9c:	232d      	movs	r3, #45	; 0x2d
   20a9e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
   20aa2:	9700      	str	r7, [sp, #0]
   20aa4:	4628      	mov	r0, r5
   20aa6:	4621      	mov	r1, r4
   20aa8:	aa0d      	add	r2, sp, #52	; 0x34
   20aaa:	4633      	mov	r3, r6
   20aac:	f000 f940 	bl	20d30 <_printf_common>
   20ab0:	3001      	adds	r0, #1
   20ab2:	d102      	bne.n	20aba <_printf_float+0x1a6>
   20ab4:	f04f 30ff 	mov.w	r0, #4294967295
   20ab8:	e136      	b.n	20d28 <_printf_float+0x414>
   20aba:	6823      	ldr	r3, [r4, #0]
   20abc:	055a      	lsls	r2, r3, #21
   20abe:	d404      	bmi.n	20aca <_printf_float+0x1b6>
   20ac0:	4628      	mov	r0, r5
   20ac2:	4631      	mov	r1, r6
   20ac4:	464a      	mov	r2, r9
   20ac6:	6923      	ldr	r3, [r4, #16]
   20ac8:	e108      	b.n	20cdc <_printf_float+0x3c8>
   20aca:	f1b8 0f65 	cmp.w	r8, #101	; 0x65
   20ace:	f240 80cb 	bls.w	20c68 <_printf_float+0x354>
   20ad2:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
   20ad6:	2200      	movs	r2, #0
   20ad8:	2300      	movs	r3, #0
   20ada:	f003 fb55 	bl	24188 <__aeabi_dcmpeq>
   20ade:	2800      	cmp	r0, #0
   20ae0:	d02a      	beq.n	20b38 <_printf_float+0x224>
   20ae2:	4628      	mov	r0, r5
   20ae4:	4631      	mov	r1, r6
   20ae6:	4a38      	ldr	r2, [pc, #224]	; (20bc8 <_printf_float+0x2b4>)
   20ae8:	2301      	movs	r3, #1
   20aea:	47b8      	blx	r7
   20aec:	3001      	adds	r0, #1
   20aee:	d0e1      	beq.n	20ab4 <_printf_float+0x1a0>
   20af0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   20af2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   20af4:	429a      	cmp	r2, r3
   20af6:	db07      	blt.n	20b08 <_printf_float+0x1f4>
   20af8:	6823      	ldr	r3, [r4, #0]
   20afa:	07d8      	lsls	r0, r3, #31
   20afc:	d404      	bmi.n	20b08 <_printf_float+0x1f4>
   20afe:	6823      	ldr	r3, [r4, #0]
   20b00:	079b      	lsls	r3, r3, #30
   20b02:	f100 80f8 	bmi.w	20cf6 <_printf_float+0x3e2>
   20b06:	e0fd      	b.n	20d04 <_printf_float+0x3f0>
   20b08:	4628      	mov	r0, r5
   20b0a:	4631      	mov	r1, r6
   20b0c:	4652      	mov	r2, sl
   20b0e:	9b09      	ldr	r3, [sp, #36]	; 0x24
   20b10:	47b8      	blx	r7
   20b12:	3001      	adds	r0, #1
   20b14:	d0ce      	beq.n	20ab4 <_printf_float+0x1a0>
   20b16:	f04f 0800 	mov.w	r8, #0
   20b1a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   20b1c:	3b01      	subs	r3, #1
   20b1e:	4598      	cmp	r8, r3
   20b20:	daed      	bge.n	20afe <_printf_float+0x1ea>
   20b22:	4628      	mov	r0, r5
   20b24:	4631      	mov	r1, r6
   20b26:	f104 021a 	add.w	r2, r4, #26
   20b2a:	2301      	movs	r3, #1
   20b2c:	47b8      	blx	r7
   20b2e:	3001      	adds	r0, #1
   20b30:	d0c0      	beq.n	20ab4 <_printf_float+0x1a0>
   20b32:	f108 0801 	add.w	r8, r8, #1
   20b36:	e7f0      	b.n	20b1a <_printf_float+0x206>
   20b38:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   20b3a:	2b00      	cmp	r3, #0
   20b3c:	dc28      	bgt.n	20b90 <_printf_float+0x27c>
   20b3e:	4628      	mov	r0, r5
   20b40:	4631      	mov	r1, r6
   20b42:	4a21      	ldr	r2, [pc, #132]	; (20bc8 <_printf_float+0x2b4>)
   20b44:	2301      	movs	r3, #1
   20b46:	47b8      	blx	r7
   20b48:	3001      	adds	r0, #1
   20b4a:	d0b3      	beq.n	20ab4 <_printf_float+0x1a0>
   20b4c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   20b4e:	b923      	cbnz	r3, 20b5a <_printf_float+0x246>
   20b50:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   20b52:	b913      	cbnz	r3, 20b5a <_printf_float+0x246>
   20b54:	6823      	ldr	r3, [r4, #0]
   20b56:	07d9      	lsls	r1, r3, #31
   20b58:	d5d1      	bpl.n	20afe <_printf_float+0x1ea>
   20b5a:	4628      	mov	r0, r5
   20b5c:	4631      	mov	r1, r6
   20b5e:	4652      	mov	r2, sl
   20b60:	9b09      	ldr	r3, [sp, #36]	; 0x24
   20b62:	47b8      	blx	r7
   20b64:	3001      	adds	r0, #1
   20b66:	d0a5      	beq.n	20ab4 <_printf_float+0x1a0>
   20b68:	f04f 0800 	mov.w	r8, #0
   20b6c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   20b6e:	4628      	mov	r0, r5
   20b70:	425b      	negs	r3, r3
   20b72:	4598      	cmp	r8, r3
   20b74:	4631      	mov	r1, r6
   20b76:	da08      	bge.n	20b8a <_printf_float+0x276>
   20b78:	f104 021a 	add.w	r2, r4, #26
   20b7c:	2301      	movs	r3, #1
   20b7e:	47b8      	blx	r7
   20b80:	3001      	adds	r0, #1
   20b82:	d097      	beq.n	20ab4 <_printf_float+0x1a0>
   20b84:	f108 0801 	add.w	r8, r8, #1
   20b88:	e7f0      	b.n	20b6c <_printf_float+0x258>
   20b8a:	464a      	mov	r2, r9
   20b8c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   20b8e:	e0a5      	b.n	20cdc <_printf_float+0x3c8>
   20b90:	6da3      	ldr	r3, [r4, #88]	; 0x58
   20b92:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   20b94:	429a      	cmp	r2, r3
   20b96:	bfb4      	ite	lt
   20b98:	4693      	movlt	fp, r2
   20b9a:	469b      	movge	fp, r3
   20b9c:	f1bb 0f00 	cmp.w	fp, #0
   20ba0:	dc02      	bgt.n	20ba8 <_printf_float+0x294>
   20ba2:	f04f 0800 	mov.w	r8, #0
   20ba6:	e01c      	b.n	20be2 <_printf_float+0x2ce>
   20ba8:	4628      	mov	r0, r5
   20baa:	4631      	mov	r1, r6
   20bac:	464a      	mov	r2, r9
   20bae:	465b      	mov	r3, fp
   20bb0:	47b8      	blx	r7
   20bb2:	3001      	adds	r0, #1
   20bb4:	d1f5      	bne.n	20ba2 <_printf_float+0x28e>
   20bb6:	e77d      	b.n	20ab4 <_printf_float+0x1a0>
   20bb8:	00027261 	.word	0x00027261
   20bbc:	00027265 	.word	0x00027265
   20bc0:	00027269 	.word	0x00027269
   20bc4:	0002726d 	.word	0x0002726d
   20bc8:	000264ec 	.word	0x000264ec
   20bcc:	4628      	mov	r0, r5
   20bce:	4631      	mov	r1, r6
   20bd0:	f104 021a 	add.w	r2, r4, #26
   20bd4:	2301      	movs	r3, #1
   20bd6:	47b8      	blx	r7
   20bd8:	3001      	adds	r0, #1
   20bda:	f43f af6b 	beq.w	20ab4 <_printf_float+0x1a0>
   20bde:	f108 0801 	add.w	r8, r8, #1
   20be2:	6da3      	ldr	r3, [r4, #88]	; 0x58
   20be4:	ea2b 72eb 	bic.w	r2, fp, fp, asr #31
   20be8:	1a9a      	subs	r2, r3, r2
   20bea:	4590      	cmp	r8, r2
   20bec:	dbee      	blt.n	20bcc <_printf_float+0x2b8>
   20bee:	eb09 0803 	add.w	r8, r9, r3
   20bf2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   20bf4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   20bf6:	429a      	cmp	r2, r3
   20bf8:	db0f      	blt.n	20c1a <_printf_float+0x306>
   20bfa:	6823      	ldr	r3, [r4, #0]
   20bfc:	07da      	lsls	r2, r3, #31
   20bfe:	d40c      	bmi.n	20c1a <_printf_float+0x306>
   20c00:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   20c02:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   20c04:	4499      	add	r9, r3
   20c06:	ebc8 0909 	rsb	r9, r8, r9
   20c0a:	1a9b      	subs	r3, r3, r2
   20c0c:	4599      	cmp	r9, r3
   20c0e:	bfa8      	it	ge
   20c10:	4699      	movge	r9, r3
   20c12:	f1b9 0f00 	cmp.w	r9, #0
   20c16:	dc08      	bgt.n	20c2a <_printf_float+0x316>
   20c18:	e00f      	b.n	20c3a <_printf_float+0x326>
   20c1a:	4628      	mov	r0, r5
   20c1c:	4631      	mov	r1, r6
   20c1e:	4652      	mov	r2, sl
   20c20:	9b09      	ldr	r3, [sp, #36]	; 0x24
   20c22:	47b8      	blx	r7
   20c24:	3001      	adds	r0, #1
   20c26:	d1eb      	bne.n	20c00 <_printf_float+0x2ec>
   20c28:	e744      	b.n	20ab4 <_printf_float+0x1a0>
   20c2a:	4628      	mov	r0, r5
   20c2c:	4631      	mov	r1, r6
   20c2e:	4642      	mov	r2, r8
   20c30:	464b      	mov	r3, r9
   20c32:	47b8      	blx	r7
   20c34:	3001      	adds	r0, #1
   20c36:	f43f af3d 	beq.w	20ab4 <_printf_float+0x1a0>
   20c3a:	f04f 0800 	mov.w	r8, #0
   20c3e:	e00a      	b.n	20c56 <_printf_float+0x342>
   20c40:	4628      	mov	r0, r5
   20c42:	4631      	mov	r1, r6
   20c44:	f104 021a 	add.w	r2, r4, #26
   20c48:	2301      	movs	r3, #1
   20c4a:	47b8      	blx	r7
   20c4c:	3001      	adds	r0, #1
   20c4e:	f43f af31 	beq.w	20ab4 <_printf_float+0x1a0>
   20c52:	f108 0801 	add.w	r8, r8, #1
   20c56:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   20c58:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   20c5a:	ea29 71e9 	bic.w	r1, r9, r9, asr #31
   20c5e:	1ad3      	subs	r3, r2, r3
   20c60:	1a5b      	subs	r3, r3, r1
   20c62:	4598      	cmp	r8, r3
   20c64:	dbec      	blt.n	20c40 <_printf_float+0x32c>
   20c66:	e74a      	b.n	20afe <_printf_float+0x1ea>
   20c68:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   20c6a:	2a01      	cmp	r2, #1
   20c6c:	dc01      	bgt.n	20c72 <_printf_float+0x35e>
   20c6e:	07db      	lsls	r3, r3, #31
   20c70:	d539      	bpl.n	20ce6 <_printf_float+0x3d2>
   20c72:	4628      	mov	r0, r5
   20c74:	4631      	mov	r1, r6
   20c76:	464a      	mov	r2, r9
   20c78:	2301      	movs	r3, #1
   20c7a:	47b8      	blx	r7
   20c7c:	3001      	adds	r0, #1
   20c7e:	f43f af19 	beq.w	20ab4 <_printf_float+0x1a0>
   20c82:	4628      	mov	r0, r5
   20c84:	4631      	mov	r1, r6
   20c86:	4652      	mov	r2, sl
   20c88:	9b09      	ldr	r3, [sp, #36]	; 0x24
   20c8a:	47b8      	blx	r7
   20c8c:	3001      	adds	r0, #1
   20c8e:	f43f af11 	beq.w	20ab4 <_printf_float+0x1a0>
   20c92:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
   20c96:	2200      	movs	r2, #0
   20c98:	2300      	movs	r3, #0
   20c9a:	f003 fa75 	bl	24188 <__aeabi_dcmpeq>
   20c9e:	b110      	cbz	r0, 20ca6 <_printf_float+0x392>
   20ca0:	f04f 0800 	mov.w	r8, #0
   20ca4:	e011      	b.n	20cca <_printf_float+0x3b6>
   20ca6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   20ca8:	4628      	mov	r0, r5
   20caa:	4631      	mov	r1, r6
   20cac:	f109 0201 	add.w	r2, r9, #1
   20cb0:	3b01      	subs	r3, #1
   20cb2:	e01c      	b.n	20cee <_printf_float+0x3da>
   20cb4:	4628      	mov	r0, r5
   20cb6:	4631      	mov	r1, r6
   20cb8:	f104 021a 	add.w	r2, r4, #26
   20cbc:	2301      	movs	r3, #1
   20cbe:	47b8      	blx	r7
   20cc0:	3001      	adds	r0, #1
   20cc2:	f43f aef7 	beq.w	20ab4 <_printf_float+0x1a0>
   20cc6:	f108 0801 	add.w	r8, r8, #1
   20cca:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   20ccc:	3b01      	subs	r3, #1
   20cce:	4598      	cmp	r8, r3
   20cd0:	dbf0      	blt.n	20cb4 <_printf_float+0x3a0>
   20cd2:	4628      	mov	r0, r5
   20cd4:	4631      	mov	r1, r6
   20cd6:	f104 0250 	add.w	r2, r4, #80	; 0x50
   20cda:	465b      	mov	r3, fp
   20cdc:	47b8      	blx	r7
   20cde:	3001      	adds	r0, #1
   20ce0:	f47f af0d 	bne.w	20afe <_printf_float+0x1ea>
   20ce4:	e6e6      	b.n	20ab4 <_printf_float+0x1a0>
   20ce6:	4628      	mov	r0, r5
   20ce8:	4631      	mov	r1, r6
   20cea:	464a      	mov	r2, r9
   20cec:	2301      	movs	r3, #1
   20cee:	47b8      	blx	r7
   20cf0:	3001      	adds	r0, #1
   20cf2:	d1ee      	bne.n	20cd2 <_printf_float+0x3be>
   20cf4:	e6de      	b.n	20ab4 <_printf_float+0x1a0>
   20cf6:	f04f 0800 	mov.w	r8, #0
   20cfa:	68e2      	ldr	r2, [r4, #12]
   20cfc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   20cfe:	1ad3      	subs	r3, r2, r3
   20d00:	4598      	cmp	r8, r3
   20d02:	db05      	blt.n	20d10 <_printf_float+0x3fc>
   20d04:	68e0      	ldr	r0, [r4, #12]
   20d06:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   20d08:	4298      	cmp	r0, r3
   20d0a:	bfb8      	it	lt
   20d0c:	4618      	movlt	r0, r3
   20d0e:	e00b      	b.n	20d28 <_printf_float+0x414>
   20d10:	4628      	mov	r0, r5
   20d12:	4631      	mov	r1, r6
   20d14:	f104 0219 	add.w	r2, r4, #25
   20d18:	2301      	movs	r3, #1
   20d1a:	47b8      	blx	r7
   20d1c:	3001      	adds	r0, #1
   20d1e:	f43f aec9 	beq.w	20ab4 <_printf_float+0x1a0>
   20d22:	f108 0801 	add.w	r8, r8, #1
   20d26:	e7e8      	b.n	20cfa <_printf_float+0x3e6>
   20d28:	b00f      	add	sp, #60	; 0x3c
   20d2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
$t():
   20d2e:	bf00      	nop

00020d30 <_printf_common>:
_printf_common():
   20d30:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   20d34:	4615      	mov	r5, r2
   20d36:	461f      	mov	r7, r3
   20d38:	688a      	ldr	r2, [r1, #8]
   20d3a:	690b      	ldr	r3, [r1, #16]
   20d3c:	4606      	mov	r6, r0
   20d3e:	429a      	cmp	r2, r3
   20d40:	bfa8      	it	ge
   20d42:	4613      	movge	r3, r2
   20d44:	602b      	str	r3, [r5, #0]
   20d46:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
   20d4a:	460c      	mov	r4, r1
   20d4c:	f8dd 8020 	ldr.w	r8, [sp, #32]
   20d50:	b10a      	cbz	r2, 20d56 <_printf_common+0x26>
   20d52:	3301      	adds	r3, #1
   20d54:	602b      	str	r3, [r5, #0]
   20d56:	6823      	ldr	r3, [r4, #0]
   20d58:	0699      	lsls	r1, r3, #26
   20d5a:	d502      	bpl.n	20d62 <_printf_common+0x32>
   20d5c:	682b      	ldr	r3, [r5, #0]
   20d5e:	3302      	adds	r3, #2
   20d60:	602b      	str	r3, [r5, #0]
   20d62:	6823      	ldr	r3, [r4, #0]
   20d64:	f013 0906 	ands.w	r9, r3, #6
   20d68:	d01d      	beq.n	20da6 <_printf_common+0x76>
   20d6a:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
   20d6e:	6822      	ldr	r2, [r4, #0]
   20d70:	3300      	adds	r3, #0
   20d72:	bf18      	it	ne
   20d74:	2301      	movne	r3, #1
   20d76:	0692      	lsls	r2, r2, #26
   20d78:	d51f      	bpl.n	20dba <_printf_common+0x8a>
   20d7a:	18e1      	adds	r1, r4, r3
   20d7c:	2030      	movs	r0, #48	; 0x30
   20d7e:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
   20d82:	1c5a      	adds	r2, r3, #1
   20d84:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
   20d88:	4422      	add	r2, r4
   20d8a:	3302      	adds	r3, #2
   20d8c:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
   20d90:	e013      	b.n	20dba <_printf_common+0x8a>
   20d92:	4630      	mov	r0, r6
   20d94:	4639      	mov	r1, r7
   20d96:	f104 0219 	add.w	r2, r4, #25
   20d9a:	2301      	movs	r3, #1
   20d9c:	47c0      	blx	r8
   20d9e:	3001      	adds	r0, #1
   20da0:	d007      	beq.n	20db2 <_printf_common+0x82>
   20da2:	f109 0901 	add.w	r9, r9, #1
   20da6:	68e2      	ldr	r2, [r4, #12]
   20da8:	682b      	ldr	r3, [r5, #0]
   20daa:	1ad3      	subs	r3, r2, r3
   20dac:	4599      	cmp	r9, r3
   20dae:	dbf0      	blt.n	20d92 <_printf_common+0x62>
   20db0:	e7db      	b.n	20d6a <_printf_common+0x3a>
   20db2:	f04f 30ff 	mov.w	r0, #4294967295
   20db6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   20dba:	4630      	mov	r0, r6
   20dbc:	4639      	mov	r1, r7
   20dbe:	f104 0243 	add.w	r2, r4, #67	; 0x43
   20dc2:	47c0      	blx	r8
   20dc4:	3001      	adds	r0, #1
   20dc6:	d0f4      	beq.n	20db2 <_printf_common+0x82>
   20dc8:	6823      	ldr	r3, [r4, #0]
   20dca:	682a      	ldr	r2, [r5, #0]
   20dcc:	f003 0306 	and.w	r3, r3, #6
   20dd0:	68e1      	ldr	r1, [r4, #12]
   20dd2:	2b04      	cmp	r3, #4
   20dd4:	bf08      	it	eq
   20dd6:	ebc2 0501 	rsbeq	r5, r2, r1
   20dda:	6923      	ldr	r3, [r4, #16]
   20ddc:	68a2      	ldr	r2, [r4, #8]
   20dde:	bf0c      	ite	eq
   20de0:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
   20de4:	2500      	movne	r5, #0
   20de6:	429a      	cmp	r2, r3
   20de8:	bfc4      	itt	gt
   20dea:	ebc3 0302 	rsbgt	r3, r3, r2
   20dee:	18ed      	addgt	r5, r5, r3
   20df0:	f04f 0900 	mov.w	r9, #0
   20df4:	45a9      	cmp	r9, r5
   20df6:	da0a      	bge.n	20e0e <_printf_common+0xde>
   20df8:	4630      	mov	r0, r6
   20dfa:	4639      	mov	r1, r7
   20dfc:	f104 021a 	add.w	r2, r4, #26
   20e00:	2301      	movs	r3, #1
   20e02:	47c0      	blx	r8
   20e04:	3001      	adds	r0, #1
   20e06:	d0d4      	beq.n	20db2 <_printf_common+0x82>
   20e08:	f109 0901 	add.w	r9, r9, #1
   20e0c:	e7f2      	b.n	20df4 <_printf_common+0xc4>
   20e0e:	2000      	movs	r0, #0
   20e10:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

00020e14 <_printf_i>:
_printf_i():
   20e14:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
   20e18:	7e0e      	ldrb	r6, [r1, #24]
   20e1a:	4680      	mov	r8, r0
   20e1c:	2e6e      	cmp	r6, #110	; 0x6e
   20e1e:	460c      	mov	r4, r1
   20e20:	4691      	mov	r9, r2
   20e22:	469a      	mov	sl, r3
   20e24:	9d0c      	ldr	r5, [sp, #48]	; 0x30
   20e26:	f101 0043 	add.w	r0, r1, #67	; 0x43
   20e2a:	f000 80a5 	beq.w	20f78 <_printf_i+0x164>
   20e2e:	d811      	bhi.n	20e54 <_printf_i+0x40>
   20e30:	2e63      	cmp	r6, #99	; 0x63
   20e32:	d022      	beq.n	20e7a <_printf_i+0x66>
   20e34:	d809      	bhi.n	20e4a <_printf_i+0x36>
   20e36:	2e00      	cmp	r6, #0
   20e38:	f000 80af 	beq.w	20f9a <_printf_i+0x186>
   20e3c:	2e58      	cmp	r6, #88	; 0x58
   20e3e:	f040 80bf 	bne.w	20fc0 <_printf_i+0x1ac>
   20e42:	f881 6045 	strb.w	r6, [r1, #69]	; 0x45
   20e46:	4a7b      	ldr	r2, [pc, #492]	; (21034 <_printf_i+0x220>)
   20e48:	e04f      	b.n	20eea <_printf_i+0xd6>
   20e4a:	2e64      	cmp	r6, #100	; 0x64
   20e4c:	d01e      	beq.n	20e8c <_printf_i+0x78>
   20e4e:	2e69      	cmp	r6, #105	; 0x69
   20e50:	d01c      	beq.n	20e8c <_printf_i+0x78>
   20e52:	e0b5      	b.n	20fc0 <_printf_i+0x1ac>
   20e54:	2e73      	cmp	r6, #115	; 0x73
   20e56:	f000 80a4 	beq.w	20fa2 <_printf_i+0x18e>
   20e5a:	d809      	bhi.n	20e70 <_printf_i+0x5c>
   20e5c:	2e6f      	cmp	r6, #111	; 0x6f
   20e5e:	d02b      	beq.n	20eb8 <_printf_i+0xa4>
   20e60:	2e70      	cmp	r6, #112	; 0x70
   20e62:	f040 80ad 	bne.w	20fc0 <_printf_i+0x1ac>
   20e66:	680b      	ldr	r3, [r1, #0]
   20e68:	f043 0320 	orr.w	r3, r3, #32
   20e6c:	600b      	str	r3, [r1, #0]
   20e6e:	e038      	b.n	20ee2 <_printf_i+0xce>
   20e70:	2e75      	cmp	r6, #117	; 0x75
   20e72:	d021      	beq.n	20eb8 <_printf_i+0xa4>
   20e74:	2e78      	cmp	r6, #120	; 0x78
   20e76:	d034      	beq.n	20ee2 <_printf_i+0xce>
   20e78:	e0a2      	b.n	20fc0 <_printf_i+0x1ac>
   20e7a:	682b      	ldr	r3, [r5, #0]
   20e7c:	f101 0742 	add.w	r7, r1, #66	; 0x42
   20e80:	1d1a      	adds	r2, r3, #4
   20e82:	681b      	ldr	r3, [r3, #0]
   20e84:	602a      	str	r2, [r5, #0]
   20e86:	f881 3042 	strb.w	r3, [r1, #66]	; 0x42
   20e8a:	e09d      	b.n	20fc8 <_printf_i+0x1b4>
   20e8c:	6822      	ldr	r2, [r4, #0]
   20e8e:	682b      	ldr	r3, [r5, #0]
   20e90:	f012 0f80 	tst.w	r2, #128	; 0x80
   20e94:	d003      	beq.n	20e9e <_printf_i+0x8a>
   20e96:	1d1a      	adds	r2, r3, #4
   20e98:	602a      	str	r2, [r5, #0]
   20e9a:	681d      	ldr	r5, [r3, #0]
   20e9c:	e005      	b.n	20eaa <_printf_i+0x96>
   20e9e:	0651      	lsls	r1, r2, #25
   20ea0:	d5f9      	bpl.n	20e96 <_printf_i+0x82>
   20ea2:	1d1a      	adds	r2, r3, #4
   20ea4:	602a      	str	r2, [r5, #0]
   20ea6:	f9b3 5000 	ldrsh.w	r5, [r3]
   20eaa:	2d00      	cmp	r5, #0
   20eac:	da39      	bge.n	20f22 <_printf_i+0x10e>
   20eae:	232d      	movs	r3, #45	; 0x2d
   20eb0:	426d      	negs	r5, r5
   20eb2:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
   20eb6:	e034      	b.n	20f22 <_printf_i+0x10e>
   20eb8:	6822      	ldr	r2, [r4, #0]
   20eba:	682b      	ldr	r3, [r5, #0]
   20ebc:	f012 0f80 	tst.w	r2, #128	; 0x80
   20ec0:	d003      	beq.n	20eca <_printf_i+0xb6>
   20ec2:	1d1a      	adds	r2, r3, #4
   20ec4:	602a      	str	r2, [r5, #0]
   20ec6:	681d      	ldr	r5, [r3, #0]
   20ec8:	e004      	b.n	20ed4 <_printf_i+0xc0>
   20eca:	0652      	lsls	r2, r2, #25
   20ecc:	d5f9      	bpl.n	20ec2 <_printf_i+0xae>
   20ece:	1d1a      	adds	r2, r3, #4
   20ed0:	602a      	str	r2, [r5, #0]
   20ed2:	881d      	ldrh	r5, [r3, #0]
   20ed4:	7e23      	ldrb	r3, [r4, #24]
   20ed6:	4a57      	ldr	r2, [pc, #348]	; (21034 <_printf_i+0x220>)
   20ed8:	2b6f      	cmp	r3, #111	; 0x6f
   20eda:	bf14      	ite	ne
   20edc:	230a      	movne	r3, #10
   20ede:	2308      	moveq	r3, #8
   20ee0:	e01b      	b.n	20f1a <_printf_i+0x106>
   20ee2:	2378      	movs	r3, #120	; 0x78
   20ee4:	4a54      	ldr	r2, [pc, #336]	; (21038 <_printf_i+0x224>)
   20ee6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
   20eea:	6823      	ldr	r3, [r4, #0]
   20eec:	6829      	ldr	r1, [r5, #0]
   20eee:	f013 0f80 	tst.w	r3, #128	; 0x80
   20ef2:	f101 0604 	add.w	r6, r1, #4
   20ef6:	602e      	str	r6, [r5, #0]
   20ef8:	d001      	beq.n	20efe <_printf_i+0xea>
   20efa:	680d      	ldr	r5, [r1, #0]
   20efc:	e002      	b.n	20f04 <_printf_i+0xf0>
   20efe:	065f      	lsls	r7, r3, #25
   20f00:	d5fb      	bpl.n	20efa <_printf_i+0xe6>
   20f02:	880d      	ldrh	r5, [r1, #0]
   20f04:	07de      	lsls	r6, r3, #31
   20f06:	bf44      	itt	mi
   20f08:	f043 0320 	orrmi.w	r3, r3, #32
   20f0c:	6023      	strmi	r3, [r4, #0]
   20f0e:	b91d      	cbnz	r5, 20f18 <_printf_i+0x104>
   20f10:	6823      	ldr	r3, [r4, #0]
   20f12:	f023 0320 	bic.w	r3, r3, #32
   20f16:	6023      	str	r3, [r4, #0]
   20f18:	2310      	movs	r3, #16
   20f1a:	2100      	movs	r1, #0
   20f1c:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
   20f20:	e001      	b.n	20f26 <_printf_i+0x112>
   20f22:	4a44      	ldr	r2, [pc, #272]	; (21034 <_printf_i+0x220>)
   20f24:	230a      	movs	r3, #10
   20f26:	6866      	ldr	r6, [r4, #4]
   20f28:	2e00      	cmp	r6, #0
   20f2a:	60a6      	str	r6, [r4, #8]
   20f2c:	db03      	blt.n	20f36 <_printf_i+0x122>
   20f2e:	6821      	ldr	r1, [r4, #0]
   20f30:	f021 0104 	bic.w	r1, r1, #4
   20f34:	6021      	str	r1, [r4, #0]
   20f36:	b905      	cbnz	r5, 20f3a <_printf_i+0x126>
   20f38:	b16e      	cbz	r6, 20f56 <_printf_i+0x142>
   20f3a:	f104 0142 	add.w	r1, r4, #66	; 0x42
   20f3e:	fbb5 f6f3 	udiv	r6, r5, r3
   20f42:	fb03 5516 	mls	r5, r3, r6, r5
   20f46:	5d55      	ldrb	r5, [r2, r5]
   20f48:	460f      	mov	r7, r1
   20f4a:	f801 5901 	strb.w	r5, [r1], #-1
   20f4e:	4635      	mov	r5, r6
   20f50:	2e00      	cmp	r6, #0
   20f52:	d1f4      	bne.n	20f3e <_printf_i+0x12a>
   20f54:	e000      	b.n	20f58 <_printf_i+0x144>
   20f56:	4607      	mov	r7, r0
   20f58:	2b08      	cmp	r3, #8
   20f5a:	d10a      	bne.n	20f72 <_printf_i+0x15e>
   20f5c:	6823      	ldr	r3, [r4, #0]
   20f5e:	07dd      	lsls	r5, r3, #31
   20f60:	d507      	bpl.n	20f72 <_printf_i+0x15e>
   20f62:	6862      	ldr	r2, [r4, #4]
   20f64:	6923      	ldr	r3, [r4, #16]
   20f66:	429a      	cmp	r2, r3
   20f68:	dc03      	bgt.n	20f72 <_printf_i+0x15e>
   20f6a:	2330      	movs	r3, #48	; 0x30
   20f6c:	f807 3c01 	strb.w	r3, [r7, #-1]
   20f70:	3f01      	subs	r7, #1
   20f72:	1bc0      	subs	r0, r0, r7
   20f74:	6120      	str	r0, [r4, #16]
   20f76:	e02c      	b.n	20fd2 <_printf_i+0x1be>
   20f78:	6809      	ldr	r1, [r1, #0]
   20f7a:	682b      	ldr	r3, [r5, #0]
   20f7c:	f011 0f80 	tst.w	r1, #128	; 0x80
   20f80:	6962      	ldr	r2, [r4, #20]
   20f82:	d004      	beq.n	20f8e <_printf_i+0x17a>
   20f84:	1d19      	adds	r1, r3, #4
   20f86:	6029      	str	r1, [r5, #0]
   20f88:	681b      	ldr	r3, [r3, #0]
   20f8a:	601a      	str	r2, [r3, #0]
   20f8c:	e005      	b.n	20f9a <_printf_i+0x186>
   20f8e:	0649      	lsls	r1, r1, #25
   20f90:	d5f8      	bpl.n	20f84 <_printf_i+0x170>
   20f92:	1d19      	adds	r1, r3, #4
   20f94:	6029      	str	r1, [r5, #0]
   20f96:	681b      	ldr	r3, [r3, #0]
   20f98:	801a      	strh	r2, [r3, #0]
   20f9a:	2300      	movs	r3, #0
   20f9c:	6123      	str	r3, [r4, #16]
   20f9e:	4607      	mov	r7, r0
   20fa0:	e017      	b.n	20fd2 <_printf_i+0x1be>
   20fa2:	682b      	ldr	r3, [r5, #0]
   20fa4:	1d1a      	adds	r2, r3, #4
   20fa6:	602a      	str	r2, [r5, #0]
   20fa8:	681f      	ldr	r7, [r3, #0]
   20faa:	4638      	mov	r0, r7
   20fac:	f7fd ff8c 	bl	1eec8 <strlen>
   20fb0:	6863      	ldr	r3, [r4, #4]
   20fb2:	6120      	str	r0, [r4, #16]
   20fb4:	4298      	cmp	r0, r3
   20fb6:	bf88      	it	hi
   20fb8:	6123      	strhi	r3, [r4, #16]
   20fba:	6923      	ldr	r3, [r4, #16]
   20fbc:	6063      	str	r3, [r4, #4]
   20fbe:	e005      	b.n	20fcc <_printf_i+0x1b8>
   20fc0:	f104 0742 	add.w	r7, r4, #66	; 0x42
   20fc4:	f884 6042 	strb.w	r6, [r4, #66]	; 0x42
   20fc8:	2301      	movs	r3, #1
   20fca:	6123      	str	r3, [r4, #16]
   20fcc:	2300      	movs	r3, #0
   20fce:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
   20fd2:	f8cd a000 	str.w	sl, [sp]
   20fd6:	4640      	mov	r0, r8
   20fd8:	4621      	mov	r1, r4
   20fda:	aa03      	add	r2, sp, #12
   20fdc:	464b      	mov	r3, r9
   20fde:	f7ff fea7 	bl	20d30 <_printf_common>
   20fe2:	3001      	adds	r0, #1
   20fe4:	d102      	bne.n	20fec <_printf_i+0x1d8>
   20fe6:	f04f 30ff 	mov.w	r0, #4294967295
   20fea:	e01f      	b.n	2102c <_printf_i+0x218>
   20fec:	4640      	mov	r0, r8
   20fee:	4649      	mov	r1, r9
   20ff0:	463a      	mov	r2, r7
   20ff2:	6923      	ldr	r3, [r4, #16]
   20ff4:	47d0      	blx	sl
   20ff6:	3001      	adds	r0, #1
   20ff8:	d0f5      	beq.n	20fe6 <_printf_i+0x1d2>
   20ffa:	6823      	ldr	r3, [r4, #0]
   20ffc:	079b      	lsls	r3, r3, #30
   20ffe:	d405      	bmi.n	2100c <_printf_i+0x1f8>
   21000:	68e0      	ldr	r0, [r4, #12]
   21002:	9b03      	ldr	r3, [sp, #12]
   21004:	4298      	cmp	r0, r3
   21006:	bfb8      	it	lt
   21008:	4618      	movlt	r0, r3
   2100a:	e00f      	b.n	2102c <_printf_i+0x218>
   2100c:	2500      	movs	r5, #0
   2100e:	68e2      	ldr	r2, [r4, #12]
   21010:	9b03      	ldr	r3, [sp, #12]
   21012:	1ad3      	subs	r3, r2, r3
   21014:	429d      	cmp	r5, r3
   21016:	daf3      	bge.n	21000 <_printf_i+0x1ec>
   21018:	4640      	mov	r0, r8
   2101a:	4649      	mov	r1, r9
   2101c:	f104 0219 	add.w	r2, r4, #25
   21020:	2301      	movs	r3, #1
   21022:	47d0      	blx	sl
   21024:	3001      	adds	r0, #1
   21026:	d0de      	beq.n	20fe6 <_printf_i+0x1d2>
   21028:	3501      	adds	r5, #1
   2102a:	e7f0      	b.n	2100e <_printf_i+0x1fa>
   2102c:	b004      	add	sp, #16
   2102e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   21032:	bf00      	nop
   21034:	00027271 	.word	0x00027271
   21038:	00027282 	.word	0x00027282

0002103c <__svfiscanf_r>:
__svfiscanf_r():
   2103c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   21040:	f5ad 7d24 	sub.w	sp, sp, #656	; 0x290
   21044:	9301      	str	r3, [sp, #4]
   21046:	2300      	movs	r3, #0
   21048:	9346      	str	r3, [sp, #280]	; 0x118
   2104a:	9347      	str	r3, [sp, #284]	; 0x11c
   2104c:	4b9d      	ldr	r3, [pc, #628]	; (212c4 <__svfiscanf_r+0x288>)
   2104e:	f10d 090c 	add.w	r9, sp, #12
   21052:	93a2      	str	r3, [sp, #648]	; 0x288
   21054:	4b9c      	ldr	r3, [pc, #624]	; (212c8 <__svfiscanf_r+0x28c>)
   21056:	4607      	mov	r7, r0
   21058:	460c      	mov	r4, r1
   2105a:	4690      	mov	r8, r2
   2105c:	f8cd 9120 	str.w	r9, [sp, #288]	; 0x120
   21060:	93a3      	str	r3, [sp, #652]	; 0x28c
   21062:	f898 5000 	ldrb.w	r5, [r8]
   21066:	2d00      	cmp	r5, #0
   21068:	f000 8124 	beq.w	212b4 <__svfiscanf_r+0x278>
   2106c:	4997      	ldr	r1, [pc, #604]	; (212cc <__svfiscanf_r+0x290>)
   2106e:	680b      	ldr	r3, [r1, #0]
   21070:	468a      	mov	sl, r1
   21072:	442b      	add	r3, r5
   21074:	785a      	ldrb	r2, [r3, #1]
   21076:	f002 0208 	and.w	r2, r2, #8
   2107a:	f002 03ff 	and.w	r3, r2, #255	; 0xff
   2107e:	b1ea      	cbz	r2, 210bc <__svfiscanf_r+0x80>
   21080:	6863      	ldr	r3, [r4, #4]
   21082:	2b00      	cmp	r3, #0
   21084:	dd10      	ble.n	210a8 <__svfiscanf_r+0x6c>
   21086:	6823      	ldr	r3, [r4, #0]
   21088:	f8da 2000 	ldr.w	r2, [sl]
   2108c:	7819      	ldrb	r1, [r3, #0]
   2108e:	440a      	add	r2, r1
   21090:	7852      	ldrb	r2, [r2, #1]
   21092:	0715      	lsls	r5, r2, #28
   21094:	d50e      	bpl.n	210b4 <__svfiscanf_r+0x78>
   21096:	9a47      	ldr	r2, [sp, #284]	; 0x11c
   21098:	3301      	adds	r3, #1
   2109a:	3201      	adds	r2, #1
   2109c:	9247      	str	r2, [sp, #284]	; 0x11c
   2109e:	6862      	ldr	r2, [r4, #4]
   210a0:	6023      	str	r3, [r4, #0]
   210a2:	3a01      	subs	r2, #1
   210a4:	6062      	str	r2, [r4, #4]
   210a6:	e7eb      	b.n	21080 <__svfiscanf_r+0x44>
   210a8:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   210aa:	4638      	mov	r0, r7
   210ac:	4621      	mov	r1, r4
   210ae:	4798      	blx	r3
   210b0:	2800      	cmp	r0, #0
   210b2:	d0e8      	beq.n	21086 <__svfiscanf_r+0x4a>
   210b4:	f108 0601 	add.w	r6, r8, #1
   210b8:	46b0      	mov	r8, r6
   210ba:	e7d2      	b.n	21062 <__svfiscanf_r+0x26>
   210bc:	2d25      	cmp	r5, #37	; 0x25
   210be:	f108 0601 	add.w	r6, r8, #1
   210c2:	d14f      	bne.n	21164 <__svfiscanf_r+0x128>
   210c4:	9345      	str	r3, [sp, #276]	; 0x114
   210c6:	9343      	str	r3, [sp, #268]	; 0x10c
   210c8:	f898 3001 	ldrb.w	r3, [r8, #1]
   210cc:	2b2a      	cmp	r3, #42	; 0x2a
   210ce:	d103      	bne.n	210d8 <__svfiscanf_r+0x9c>
   210d0:	2310      	movs	r3, #16
   210d2:	9343      	str	r3, [sp, #268]	; 0x10c
   210d4:	f108 0602 	add.w	r6, r8, #2
   210d8:	7831      	ldrb	r1, [r6, #0]
   210da:	4635      	mov	r5, r6
   210dc:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
   210e0:	2b09      	cmp	r3, #9
   210e2:	f106 0601 	add.w	r6, r6, #1
   210e6:	d806      	bhi.n	210f6 <__svfiscanf_r+0xba>
   210e8:	9b45      	ldr	r3, [sp, #276]	; 0x114
   210ea:	220a      	movs	r2, #10
   210ec:	fb02 1303 	mla	r3, r2, r3, r1
   210f0:	3b30      	subs	r3, #48	; 0x30
   210f2:	9345      	str	r3, [sp, #276]	; 0x114
   210f4:	e7f0      	b.n	210d8 <__svfiscanf_r+0x9c>
   210f6:	f8df 81dc 	ldr.w	r8, [pc, #476]	; 212d4 <__svfiscanf_r+0x298>
   210fa:	2203      	movs	r2, #3
   210fc:	4640      	mov	r0, r8
   210fe:	f7fc fe75 	bl	1ddec <memchr>
   21102:	b140      	cbz	r0, 21116 <__svfiscanf_r+0xda>
   21104:	ebc8 0800 	rsb	r8, r8, r0
   21108:	2001      	movs	r0, #1
   2110a:	fa00 f008 	lsl.w	r0, r0, r8
   2110e:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   21110:	4635      	mov	r5, r6
   21112:	4303      	orrs	r3, r0
   21114:	9343      	str	r3, [sp, #268]	; 0x10c
   21116:	1c6e      	adds	r6, r5, #1
   21118:	782d      	ldrb	r5, [r5, #0]
   2111a:	2d67      	cmp	r5, #103	; 0x67
   2111c:	d80f      	bhi.n	2113e <__svfiscanf_r+0x102>
   2111e:	2d65      	cmp	r5, #101	; 0x65
   21120:	d278      	bcs.n	21214 <__svfiscanf_r+0x1d8>
   21122:	2d5b      	cmp	r5, #91	; 0x5b
   21124:	d054      	beq.n	211d0 <__svfiscanf_r+0x194>
   21126:	d805      	bhi.n	21134 <__svfiscanf_r+0xf8>
   21128:	2d00      	cmp	r5, #0
   2112a:	f000 80c5 	beq.w	212b8 <__svfiscanf_r+0x27c>
   2112e:	2d25      	cmp	r5, #37	; 0x25
   21130:	d018      	beq.n	21164 <__svfiscanf_r+0x128>
   21132:	e071      	b.n	21218 <__svfiscanf_r+0x1dc>
   21134:	2d63      	cmp	r5, #99	; 0x63
   21136:	d057      	beq.n	211e8 <__svfiscanf_r+0x1ac>
   21138:	2d64      	cmp	r5, #100	; 0x64
   2113a:	d03f      	beq.n	211bc <__svfiscanf_r+0x180>
   2113c:	e06c      	b.n	21218 <__svfiscanf_r+0x1dc>
   2113e:	2d70      	cmp	r5, #112	; 0x70
   21140:	d032      	beq.n	211a8 <__svfiscanf_r+0x16c>
   21142:	d807      	bhi.n	21154 <__svfiscanf_r+0x118>
   21144:	2d6e      	cmp	r5, #110	; 0x6e
   21146:	d055      	beq.n	211f4 <__svfiscanf_r+0x1b8>
   21148:	d83a      	bhi.n	211c0 <__svfiscanf_r+0x184>
   2114a:	2d69      	cmp	r5, #105	; 0x69
   2114c:	d164      	bne.n	21218 <__svfiscanf_r+0x1dc>
   2114e:	2300      	movs	r3, #0
   21150:	9344      	str	r3, [sp, #272]	; 0x110
   21152:	e039      	b.n	211c8 <__svfiscanf_r+0x18c>
   21154:	2d75      	cmp	r5, #117	; 0x75
   21156:	d031      	beq.n	211bc <__svfiscanf_r+0x180>
   21158:	2d78      	cmp	r5, #120	; 0x78
   2115a:	d029      	beq.n	211b0 <__svfiscanf_r+0x174>
   2115c:	2d73      	cmp	r5, #115	; 0x73
   2115e:	d15b      	bne.n	21218 <__svfiscanf_r+0x1dc>
   21160:	2302      	movs	r3, #2
   21162:	e03f      	b.n	211e4 <__svfiscanf_r+0x1a8>
   21164:	6863      	ldr	r3, [r4, #4]
   21166:	2b00      	cmp	r3, #0
   21168:	dd0d      	ble.n	21186 <__svfiscanf_r+0x14a>
   2116a:	6823      	ldr	r3, [r4, #0]
   2116c:	781a      	ldrb	r2, [r3, #0]
   2116e:	42aa      	cmp	r2, r5
   21170:	f040 80a0 	bne.w	212b4 <__svfiscanf_r+0x278>
   21174:	3301      	adds	r3, #1
   21176:	6862      	ldr	r2, [r4, #4]
   21178:	6023      	str	r3, [r4, #0]
   2117a:	9b47      	ldr	r3, [sp, #284]	; 0x11c
   2117c:	3a01      	subs	r2, #1
   2117e:	3301      	adds	r3, #1
   21180:	6062      	str	r2, [r4, #4]
   21182:	9347      	str	r3, [sp, #284]	; 0x11c
   21184:	e798      	b.n	210b8 <__svfiscanf_r+0x7c>
   21186:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   21188:	4638      	mov	r0, r7
   2118a:	4621      	mov	r1, r4
   2118c:	4798      	blx	r3
   2118e:	2800      	cmp	r0, #0
   21190:	d0eb      	beq.n	2116a <__svfiscanf_r+0x12e>
   21192:	9846      	ldr	r0, [sp, #280]	; 0x118
   21194:	2800      	cmp	r0, #0
   21196:	f000 808f 	beq.w	212b8 <__svfiscanf_r+0x27c>
   2119a:	89a3      	ldrh	r3, [r4, #12]
   2119c:	f013 0f40 	tst.w	r3, #64	; 0x40
   211a0:	bf18      	it	ne
   211a2:	f04f 30ff 	movne.w	r0, #4294967295
   211a6:	e089      	b.n	212bc <__svfiscanf_r+0x280>
   211a8:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   211aa:	f043 0320 	orr.w	r3, r3, #32
   211ae:	9343      	str	r3, [sp, #268]	; 0x10c
   211b0:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   211b2:	f443 7300 	orr.w	r3, r3, #512	; 0x200
   211b6:	9343      	str	r3, [sp, #268]	; 0x10c
   211b8:	2310      	movs	r3, #16
   211ba:	e002      	b.n	211c2 <__svfiscanf_r+0x186>
   211bc:	230a      	movs	r3, #10
   211be:	e000      	b.n	211c2 <__svfiscanf_r+0x186>
   211c0:	2308      	movs	r3, #8
   211c2:	2d6e      	cmp	r5, #110	; 0x6e
   211c4:	9344      	str	r3, [sp, #272]	; 0x110
   211c6:	dc01      	bgt.n	211cc <__svfiscanf_r+0x190>
   211c8:	2303      	movs	r3, #3
   211ca:	e00b      	b.n	211e4 <__svfiscanf_r+0x1a8>
   211cc:	2304      	movs	r3, #4
   211ce:	e009      	b.n	211e4 <__svfiscanf_r+0x1a8>
   211d0:	4631      	mov	r1, r6
   211d2:	4648      	mov	r0, r9
   211d4:	f002 fc96 	bl	23b04 <__sccl>
   211d8:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   211da:	4606      	mov	r6, r0
   211dc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   211e0:	9343      	str	r3, [sp, #268]	; 0x10c
   211e2:	2301      	movs	r3, #1
   211e4:	9349      	str	r3, [sp, #292]	; 0x124
   211e6:	e01b      	b.n	21220 <__svfiscanf_r+0x1e4>
   211e8:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   211ea:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   211ee:	9343      	str	r3, [sp, #268]	; 0x10c
   211f0:	2300      	movs	r3, #0
   211f2:	e7f7      	b.n	211e4 <__svfiscanf_r+0x1a8>
   211f4:	9a43      	ldr	r2, [sp, #268]	; 0x10c
   211f6:	06d0      	lsls	r0, r2, #27
   211f8:	f53f af5e 	bmi.w	210b8 <__svfiscanf_r+0x7c>
   211fc:	f012 0f01 	tst.w	r2, #1
   21200:	9a01      	ldr	r2, [sp, #4]
   21202:	9b47      	ldr	r3, [sp, #284]	; 0x11c
   21204:	f102 0104 	add.w	r1, r2, #4
   21208:	9101      	str	r1, [sp, #4]
   2120a:	6812      	ldr	r2, [r2, #0]
   2120c:	bf14      	ite	ne
   2120e:	8013      	strhne	r3, [r2, #0]
   21210:	6013      	streq	r3, [r2, #0]
   21212:	e751      	b.n	210b8 <__svfiscanf_r+0x7c>
   21214:	2305      	movs	r3, #5
   21216:	e7e5      	b.n	211e4 <__svfiscanf_r+0x1a8>
   21218:	2303      	movs	r3, #3
   2121a:	9349      	str	r3, [sp, #292]	; 0x124
   2121c:	230a      	movs	r3, #10
   2121e:	9344      	str	r3, [sp, #272]	; 0x110
   21220:	6863      	ldr	r3, [r4, #4]
   21222:	2b00      	cmp	r3, #0
   21224:	dd03      	ble.n	2122e <__svfiscanf_r+0x1f2>
   21226:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   21228:	0659      	lsls	r1, r3, #25
   2122a:	d511      	bpl.n	21250 <__svfiscanf_r+0x214>
   2122c:	e018      	b.n	21260 <__svfiscanf_r+0x224>
   2122e:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   21230:	4638      	mov	r0, r7
   21232:	4621      	mov	r1, r4
   21234:	4798      	blx	r3
   21236:	2800      	cmp	r0, #0
   21238:	d0f5      	beq.n	21226 <__svfiscanf_r+0x1ea>
   2123a:	e7aa      	b.n	21192 <__svfiscanf_r+0x156>
   2123c:	9a47      	ldr	r2, [sp, #284]	; 0x11c
   2123e:	3201      	adds	r2, #1
   21240:	9247      	str	r2, [sp, #284]	; 0x11c
   21242:	6862      	ldr	r2, [r4, #4]
   21244:	3a01      	subs	r2, #1
   21246:	2a00      	cmp	r2, #0
   21248:	6062      	str	r2, [r4, #4]
   2124a:	dd13      	ble.n	21274 <__svfiscanf_r+0x238>
   2124c:	3301      	adds	r3, #1
   2124e:	6023      	str	r3, [r4, #0]
   21250:	6823      	ldr	r3, [r4, #0]
   21252:	f8da 2000 	ldr.w	r2, [sl]
   21256:	7819      	ldrb	r1, [r3, #0]
   21258:	440a      	add	r2, r1
   2125a:	7852      	ldrb	r2, [r2, #1]
   2125c:	0712      	lsls	r2, r2, #28
   2125e:	d4ed      	bmi.n	2123c <__svfiscanf_r+0x200>
   21260:	9b49      	ldr	r3, [sp, #292]	; 0x124
   21262:	2b02      	cmp	r3, #2
   21264:	dc0d      	bgt.n	21282 <__svfiscanf_r+0x246>
   21266:	4638      	mov	r0, r7
   21268:	a943      	add	r1, sp, #268	; 0x10c
   2126a:	4622      	mov	r2, r4
   2126c:	ab01      	add	r3, sp, #4
   2126e:	f000 fa47 	bl	21700 <_scanf_chars>
   21272:	e019      	b.n	212a8 <__svfiscanf_r+0x26c>
   21274:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   21276:	4638      	mov	r0, r7
   21278:	4621      	mov	r1, r4
   2127a:	4798      	blx	r3
   2127c:	2800      	cmp	r0, #0
   2127e:	d0e7      	beq.n	21250 <__svfiscanf_r+0x214>
   21280:	e787      	b.n	21192 <__svfiscanf_r+0x156>
   21282:	2b04      	cmp	r3, #4
   21284:	dc06      	bgt.n	21294 <__svfiscanf_r+0x258>
   21286:	4638      	mov	r0, r7
   21288:	a943      	add	r1, sp, #268	; 0x10c
   2128a:	4622      	mov	r2, r4
   2128c:	ab01      	add	r3, sp, #4
   2128e:	f000 fa97 	bl	217c0 <_scanf_i>
   21292:	e009      	b.n	212a8 <__svfiscanf_r+0x26c>
   21294:	4b0e      	ldr	r3, [pc, #56]	; (212d0 <__svfiscanf_r+0x294>)
   21296:	2b00      	cmp	r3, #0
   21298:	f43f af0e 	beq.w	210b8 <__svfiscanf_r+0x7c>
   2129c:	4638      	mov	r0, r7
   2129e:	a943      	add	r1, sp, #268	; 0x10c
   212a0:	4622      	mov	r2, r4
   212a2:	ab01      	add	r3, sp, #4
   212a4:	f000 f840 	bl	21328 <_scanf_float>
   212a8:	2801      	cmp	r0, #1
   212aa:	d003      	beq.n	212b4 <__svfiscanf_r+0x278>
   212ac:	2802      	cmp	r0, #2
   212ae:	f47f af03 	bne.w	210b8 <__svfiscanf_r+0x7c>
   212b2:	e76e      	b.n	21192 <__svfiscanf_r+0x156>
   212b4:	9846      	ldr	r0, [sp, #280]	; 0x118
   212b6:	e001      	b.n	212bc <__svfiscanf_r+0x280>
   212b8:	f04f 30ff 	mov.w	r0, #4294967295
   212bc:	f50d 7d24 	add.w	sp, sp, #656	; 0x290
   212c0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   212c4:	000204b1 	.word	0x000204b1
   212c8:	0001ea6d 	.word	0x0001ea6d
   212cc:	2007c0ec 	.word	0x2007c0ec
   212d0:	00021329 	.word	0x00021329
   212d4:	00027256 	.word	0x00027256

000212d8 <_vfiscanf_r>:
_vfiscanf_r():
   212d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   212dc:	460c      	mov	r4, r1
   212de:	4617      	mov	r7, r2
   212e0:	461e      	mov	r6, r3
   212e2:	4605      	mov	r5, r0
   212e4:	b118      	cbz	r0, 212ee <_vfiscanf_r+0x16>
   212e6:	6981      	ldr	r1, [r0, #24]
   212e8:	b909      	cbnz	r1, 212ee <_vfiscanf_r+0x16>
   212ea:	f7fc fc8f 	bl	1dc0c <__sinit>
   212ee:	4b0b      	ldr	r3, [pc, #44]	; (2131c <_vfiscanf_r+0x44>)
   212f0:	429c      	cmp	r4, r3
   212f2:	bf08      	it	eq
   212f4:	686c      	ldreq	r4, [r5, #4]
   212f6:	d008      	beq.n	2130a <_vfiscanf_r+0x32>
   212f8:	4b09      	ldr	r3, [pc, #36]	; (21320 <_vfiscanf_r+0x48>)
   212fa:	429c      	cmp	r4, r3
   212fc:	bf08      	it	eq
   212fe:	68ac      	ldreq	r4, [r5, #8]
   21300:	d003      	beq.n	2130a <_vfiscanf_r+0x32>
   21302:	4b08      	ldr	r3, [pc, #32]	; (21324 <_vfiscanf_r+0x4c>)
   21304:	429c      	cmp	r4, r3
   21306:	bf08      	it	eq
   21308:	68ec      	ldreq	r4, [r5, #12]
   2130a:	4628      	mov	r0, r5
   2130c:	4621      	mov	r1, r4
   2130e:	463a      	mov	r2, r7
   21310:	4633      	mov	r3, r6
   21312:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   21316:	f7ff be91 	b.w	2103c <__svfiscanf_r>
   2131a:	bf00      	nop
   2131c:	000270cc 	.word	0x000270cc
   21320:	000270ec 	.word	0x000270ec
   21324:	0002710c 	.word	0x0002710c

00021328 <_scanf_float>:
_scanf_float():
   21328:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2132c:	4616      	mov	r6, r2
   2132e:	688a      	ldr	r2, [r1, #8]
   21330:	b087      	sub	sp, #28
   21332:	9302      	str	r3, [sp, #8]
   21334:	1e53      	subs	r3, r2, #1
   21336:	f5b3 7fae 	cmp.w	r3, #348	; 0x15c
   2133a:	4607      	mov	r7, r0
   2133c:	460c      	mov	r4, r1
   2133e:	d906      	bls.n	2134e <_scanf_float+0x26>
   21340:	f46f 73ae 	mvn.w	r3, #348	; 0x15c
   21344:	441a      	add	r2, r3
   21346:	f240 135d 	movw	r3, #349	; 0x15d
   2134a:	608b      	str	r3, [r1, #8]
   2134c:	e000      	b.n	21350 <_scanf_float+0x28>
   2134e:	2200      	movs	r2, #0
   21350:	6823      	ldr	r3, [r4, #0]
   21352:	46a0      	mov	r8, r4
   21354:	f443 63f0 	orr.w	r3, r3, #1920	; 0x780
   21358:	f04f 0b00 	mov.w	fp, #0
   2135c:	f848 3b1c 	str.w	r3, [r8], #28
   21360:	4645      	mov	r5, r8
   21362:	46da      	mov	sl, fp
   21364:	f8cd b014 	str.w	fp, [sp, #20]
   21368:	f8cd b010 	str.w	fp, [sp, #16]
   2136c:	46d9      	mov	r9, fp
   2136e:	f8cd b00c 	str.w	fp, [sp, #12]
   21372:	68a1      	ldr	r1, [r4, #8]
   21374:	2900      	cmp	r1, #0
   21376:	f000 80e9 	beq.w	2154c <_scanf_float+0x224>
   2137a:	6833      	ldr	r3, [r6, #0]
   2137c:	781b      	ldrb	r3, [r3, #0]
   2137e:	2b49      	cmp	r3, #73	; 0x49
   21380:	d075      	beq.n	2146e <_scanf_float+0x146>
   21382:	d816      	bhi.n	213b2 <_scanf_float+0x8a>
   21384:	2b39      	cmp	r3, #57	; 0x39
   21386:	d80d      	bhi.n	213a4 <_scanf_float+0x7c>
   21388:	2b31      	cmp	r3, #49	; 0x31
   2138a:	d23e      	bcs.n	2140a <_scanf_float+0xe2>
   2138c:	2b2d      	cmp	r3, #45	; 0x2d
   2138e:	d045      	beq.n	2141c <_scanf_float+0xf4>
   21390:	d802      	bhi.n	21398 <_scanf_float+0x70>
   21392:	2b2b      	cmp	r3, #43	; 0x2b
   21394:	d042      	beq.n	2141c <_scanf_float+0xf4>
   21396:	e0d9      	b.n	2154c <_scanf_float+0x224>
   21398:	2b2e      	cmp	r3, #46	; 0x2e
   2139a:	f000 8097 	beq.w	214cc <_scanf_float+0x1a4>
   2139e:	2b30      	cmp	r3, #48	; 0x30
   213a0:	d023      	beq.n	213ea <_scanf_float+0xc2>
   213a2:	e0d3      	b.n	2154c <_scanf_float+0x224>
   213a4:	2b45      	cmp	r3, #69	; 0x45
   213a6:	f000 809a 	beq.w	214de <_scanf_float+0x1b6>
   213aa:	2b46      	cmp	r3, #70	; 0x46
   213ac:	d07c      	beq.n	214a8 <_scanf_float+0x180>
   213ae:	2b41      	cmp	r3, #65	; 0x41
   213b0:	e00c      	b.n	213cc <_scanf_float+0xa4>
   213b2:	2b65      	cmp	r3, #101	; 0x65
   213b4:	f000 8093 	beq.w	214de <_scanf_float+0x1b6>
   213b8:	d80a      	bhi.n	213d0 <_scanf_float+0xa8>
   213ba:	2b54      	cmp	r3, #84	; 0x54
   213bc:	d07a      	beq.n	214b4 <_scanf_float+0x18c>
   213be:	d802      	bhi.n	213c6 <_scanf_float+0x9e>
   213c0:	2b4e      	cmp	r3, #78	; 0x4e
   213c2:	d033      	beq.n	2142c <_scanf_float+0x104>
   213c4:	e0c2      	b.n	2154c <_scanf_float+0x224>
   213c6:	2b59      	cmp	r3, #89	; 0x59
   213c8:	d07a      	beq.n	214c0 <_scanf_float+0x198>
   213ca:	2b61      	cmp	r3, #97	; 0x61
   213cc:	d049      	beq.n	21462 <_scanf_float+0x13a>
   213ce:	e0bd      	b.n	2154c <_scanf_float+0x224>
   213d0:	2b6e      	cmp	r3, #110	; 0x6e
   213d2:	d02b      	beq.n	2142c <_scanf_float+0x104>
   213d4:	d804      	bhi.n	213e0 <_scanf_float+0xb8>
   213d6:	2b66      	cmp	r3, #102	; 0x66
   213d8:	d066      	beq.n	214a8 <_scanf_float+0x180>
   213da:	2b69      	cmp	r3, #105	; 0x69
   213dc:	d047      	beq.n	2146e <_scanf_float+0x146>
   213de:	e0b5      	b.n	2154c <_scanf_float+0x224>
   213e0:	2b74      	cmp	r3, #116	; 0x74
   213e2:	d067      	beq.n	214b4 <_scanf_float+0x18c>
   213e4:	2b79      	cmp	r3, #121	; 0x79
   213e6:	d06b      	beq.n	214c0 <_scanf_float+0x198>
   213e8:	e0b0      	b.n	2154c <_scanf_float+0x224>
   213ea:	6820      	ldr	r0, [r4, #0]
   213ec:	f410 7f80 	tst.w	r0, #256	; 0x100
   213f0:	d00b      	beq.n	2140a <_scanf_float+0xe2>
   213f2:	f020 0080 	bic.w	r0, r0, #128	; 0x80
   213f6:	6020      	str	r0, [r4, #0]
   213f8:	f109 0901 	add.w	r9, r9, #1
   213fc:	2a00      	cmp	r2, #0
   213fe:	f000 808c 	beq.w	2151a <_scanf_float+0x1f2>
   21402:	3101      	adds	r1, #1
   21404:	3a01      	subs	r2, #1
   21406:	60a1      	str	r1, [r4, #8]
   21408:	e087      	b.n	2151a <_scanf_float+0x1f2>
   2140a:	eb0a 010b 	add.w	r1, sl, fp
   2140e:	2900      	cmp	r1, #0
   21410:	f040 809c 	bne.w	2154c <_scanf_float+0x224>
   21414:	6821      	ldr	r1, [r4, #0]
   21416:	f421 71c0 	bic.w	r1, r1, #384	; 0x180
   2141a:	e005      	b.n	21428 <_scanf_float+0x100>
   2141c:	6821      	ldr	r1, [r4, #0]
   2141e:	0608      	lsls	r0, r1, #24
   21420:	f140 8094 	bpl.w	2154c <_scanf_float+0x224>
   21424:	f021 0180 	bic.w	r1, r1, #128	; 0x80
   21428:	6021      	str	r1, [r4, #0]
   2142a:	e074      	b.n	21516 <_scanf_float+0x1ee>
   2142c:	f1ba 0f00 	cmp.w	sl, #0
   21430:	d10e      	bne.n	21450 <_scanf_float+0x128>
   21432:	f1b9 0f00 	cmp.w	r9, #0
   21436:	d10e      	bne.n	21456 <_scanf_float+0x12e>
   21438:	6821      	ldr	r1, [r4, #0]
   2143a:	f401 60e0 	and.w	r0, r1, #1792	; 0x700
   2143e:	f5b0 6fe0 	cmp.w	r0, #1792	; 0x700
   21442:	d108      	bne.n	21456 <_scanf_float+0x12e>
   21444:	f421 61f0 	bic.w	r1, r1, #1920	; 0x780
   21448:	6021      	str	r1, [r4, #0]
   2144a:	f04f 0a01 	mov.w	sl, #1
   2144e:	e062      	b.n	21516 <_scanf_float+0x1ee>
   21450:	f1ba 0f02 	cmp.w	sl, #2
   21454:	d05d      	beq.n	21512 <_scanf_float+0x1ea>
   21456:	f1bb 0f01 	cmp.w	fp, #1
   2145a:	d020      	beq.n	2149e <_scanf_float+0x176>
   2145c:	f1bb 0f04 	cmp.w	fp, #4
   21460:	e01c      	b.n	2149c <_scanf_float+0x174>
   21462:	f1ba 0f01 	cmp.w	sl, #1
   21466:	d171      	bne.n	2154c <_scanf_float+0x224>
   21468:	f04f 0a02 	mov.w	sl, #2
   2146c:	e053      	b.n	21516 <_scanf_float+0x1ee>
   2146e:	f1bb 0f00 	cmp.w	fp, #0
   21472:	d10e      	bne.n	21492 <_scanf_float+0x16a>
   21474:	f1b9 0f00 	cmp.w	r9, #0
   21478:	d16b      	bne.n	21552 <_scanf_float+0x22a>
   2147a:	6821      	ldr	r1, [r4, #0]
   2147c:	f401 60e0 	and.w	r0, r1, #1792	; 0x700
   21480:	f5b0 6fe0 	cmp.w	r0, #1792	; 0x700
   21484:	d169      	bne.n	2155a <_scanf_float+0x232>
   21486:	f421 61f0 	bic.w	r1, r1, #1920	; 0x780
   2148a:	6021      	str	r1, [r4, #0]
   2148c:	f04f 0b01 	mov.w	fp, #1
   21490:	e041      	b.n	21516 <_scanf_float+0x1ee>
   21492:	f1bb 0f03 	cmp.w	fp, #3
   21496:	d002      	beq.n	2149e <_scanf_float+0x176>
   21498:	f1bb 0f05 	cmp.w	fp, #5
   2149c:	d156      	bne.n	2154c <_scanf_float+0x224>
   2149e:	f10b 0b01 	add.w	fp, fp, #1
   214a2:	fa5f fb8b 	uxtb.w	fp, fp
   214a6:	e036      	b.n	21516 <_scanf_float+0x1ee>
   214a8:	f1bb 0f02 	cmp.w	fp, #2
   214ac:	d14e      	bne.n	2154c <_scanf_float+0x224>
   214ae:	f04f 0b03 	mov.w	fp, #3
   214b2:	e030      	b.n	21516 <_scanf_float+0x1ee>
   214b4:	f1bb 0f06 	cmp.w	fp, #6
   214b8:	d148      	bne.n	2154c <_scanf_float+0x224>
   214ba:	f04f 0b07 	mov.w	fp, #7
   214be:	e02a      	b.n	21516 <_scanf_float+0x1ee>
   214c0:	f1bb 0f07 	cmp.w	fp, #7
   214c4:	d142      	bne.n	2154c <_scanf_float+0x224>
   214c6:	f04f 0b08 	mov.w	fp, #8
   214ca:	e024      	b.n	21516 <_scanf_float+0x1ee>
   214cc:	6821      	ldr	r1, [r4, #0]
   214ce:	0588      	lsls	r0, r1, #22
   214d0:	d53c      	bpl.n	2154c <_scanf_float+0x224>
   214d2:	f421 7120 	bic.w	r1, r1, #640	; 0x280
   214d6:	6021      	str	r1, [r4, #0]
   214d8:	f8cd 900c 	str.w	r9, [sp, #12]
   214dc:	e01b      	b.n	21516 <_scanf_float+0x1ee>
   214de:	6821      	ldr	r1, [r4, #0]
   214e0:	f401 60a0 	and.w	r0, r1, #1280	; 0x500
   214e4:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
   214e8:	d004      	beq.n	214f4 <_scanf_float+0x1cc>
   214ea:	0548      	lsls	r0, r1, #21
   214ec:	d52e      	bpl.n	2154c <_scanf_float+0x224>
   214ee:	f1b9 0f00 	cmp.w	r9, #0
   214f2:	d032      	beq.n	2155a <_scanf_float+0x232>
   214f4:	0588      	lsls	r0, r1, #22
   214f6:	d404      	bmi.n	21502 <_scanf_float+0x1da>
   214f8:	9803      	ldr	r0, [sp, #12]
   214fa:	9505      	str	r5, [sp, #20]
   214fc:	ebc0 0009 	rsb	r0, r0, r9
   21500:	9004      	str	r0, [sp, #16]
   21502:	f421 61f0 	bic.w	r1, r1, #1920	; 0x780
   21506:	f441 71c0 	orr.w	r1, r1, #384	; 0x180
   2150a:	6021      	str	r1, [r4, #0]
   2150c:	f04f 0900 	mov.w	r9, #0
   21510:	e001      	b.n	21516 <_scanf_float+0x1ee>
   21512:	f04f 0a03 	mov.w	sl, #3
   21516:	702b      	strb	r3, [r5, #0]
   21518:	3501      	adds	r5, #1
   2151a:	68a3      	ldr	r3, [r4, #8]
   2151c:	3b01      	subs	r3, #1
   2151e:	60a3      	str	r3, [r4, #8]
   21520:	6923      	ldr	r3, [r4, #16]
   21522:	3301      	adds	r3, #1
   21524:	6123      	str	r3, [r4, #16]
   21526:	6873      	ldr	r3, [r6, #4]
   21528:	3b01      	subs	r3, #1
   2152a:	2b00      	cmp	r3, #0
   2152c:	6073      	str	r3, [r6, #4]
   2152e:	dd03      	ble.n	21538 <_scanf_float+0x210>
   21530:	6833      	ldr	r3, [r6, #0]
   21532:	3301      	adds	r3, #1
   21534:	6033      	str	r3, [r6, #0]
   21536:	e71c      	b.n	21372 <_scanf_float+0x4a>
   21538:	9201      	str	r2, [sp, #4]
   2153a:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   2153e:	4638      	mov	r0, r7
   21540:	4631      	mov	r1, r6
   21542:	4798      	blx	r3
   21544:	9a01      	ldr	r2, [sp, #4]
   21546:	2800      	cmp	r0, #0
   21548:	f43f af13 	beq.w	21372 <_scanf_float+0x4a>
   2154c:	f1b9 0f00 	cmp.w	r9, #0
   21550:	d003      	beq.n	2155a <_scanf_float+0x232>
   21552:	6823      	ldr	r3, [r4, #0]
   21554:	f423 7380 	bic.w	r3, r3, #256	; 0x100
   21558:	6023      	str	r3, [r4, #0]
   2155a:	f10a 3aff 	add.w	sl, sl, #4294967295
   2155e:	f1ba 0f01 	cmp.w	sl, #1
   21562:	d810      	bhi.n	21586 <_scanf_float+0x25e>
   21564:	4545      	cmp	r5, r8
   21566:	462a      	mov	r2, r5
   21568:	d90b      	bls.n	21582 <_scanf_float+0x25a>
   2156a:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
   2156e:	f812 1c01 	ldrb.w	r1, [r2, #-1]
   21572:	4638      	mov	r0, r7
   21574:	4632      	mov	r2, r6
   21576:	4798      	blx	r3
   21578:	6923      	ldr	r3, [r4, #16]
   2157a:	3d01      	subs	r5, #1
   2157c:	3b01      	subs	r3, #1
   2157e:	6123      	str	r3, [r4, #16]
   21580:	e7f0      	b.n	21564 <_scanf_float+0x23c>
   21582:	2601      	movs	r6, #1
   21584:	e0b5      	b.n	216f2 <_scanf_float+0x3ca>
   21586:	f10b 33ff 	add.w	r3, fp, #4294967295
   2158a:	2b06      	cmp	r3, #6
   2158c:	d82c      	bhi.n	215e8 <_scanf_float+0x2c0>
   2158e:	f1bb 0f02 	cmp.w	fp, #2
   21592:	d91a      	bls.n	215ca <_scanf_float+0x2a2>
   21594:	f1ab 0b03 	sub.w	fp, fp, #3
   21598:	fa5f fb8b 	uxtb.w	fp, fp
   2159c:	46aa      	mov	sl, r5
   2159e:	ebcb 0c05 	rsb	ip, fp, r5
   215a2:	45e2      	cmp	sl, ip
   215a4:	d00e      	beq.n	215c4 <_scanf_float+0x29c>
   215a6:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
   215aa:	f81a 1d01 	ldrb.w	r1, [sl, #-1]!
   215ae:	4638      	mov	r0, r7
   215b0:	f8cd c004 	str.w	ip, [sp, #4]
   215b4:	4632      	mov	r2, r6
   215b6:	4798      	blx	r3
   215b8:	6923      	ldr	r3, [r4, #16]
   215ba:	f8dd c004 	ldr.w	ip, [sp, #4]
   215be:	3b01      	subs	r3, #1
   215c0:	6123      	str	r3, [r4, #16]
   215c2:	e7ee      	b.n	215a2 <_scanf_float+0x27a>
   215c4:	ebcb 0505 	rsb	r5, fp, r5
   215c8:	e00e      	b.n	215e8 <_scanf_float+0x2c0>
   215ca:	4545      	cmp	r5, r8
   215cc:	462a      	mov	r2, r5
   215ce:	d9d8      	bls.n	21582 <_scanf_float+0x25a>
   215d0:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
   215d4:	f812 1c01 	ldrb.w	r1, [r2, #-1]
   215d8:	4638      	mov	r0, r7
   215da:	4632      	mov	r2, r6
   215dc:	4798      	blx	r3
   215de:	6923      	ldr	r3, [r4, #16]
   215e0:	3d01      	subs	r5, #1
   215e2:	3b01      	subs	r3, #1
   215e4:	6123      	str	r3, [r4, #16]
   215e6:	e7f0      	b.n	215ca <_scanf_float+0x2a2>
   215e8:	6823      	ldr	r3, [r4, #0]
   215ea:	05da      	lsls	r2, r3, #23
   215ec:	d52e      	bpl.n	2164c <_scanf_float+0x324>
   215ee:	055b      	lsls	r3, r3, #21
   215f0:	d50e      	bpl.n	21610 <_scanf_float+0x2e8>
   215f2:	4545      	cmp	r5, r8
   215f4:	462a      	mov	r2, r5
   215f6:	d9c4      	bls.n	21582 <_scanf_float+0x25a>
   215f8:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
   215fc:	f812 1c01 	ldrb.w	r1, [r2, #-1]
   21600:	4638      	mov	r0, r7
   21602:	4632      	mov	r2, r6
   21604:	4798      	blx	r3
   21606:	6923      	ldr	r3, [r4, #16]
   21608:	3d01      	subs	r5, #1
   2160a:	3b01      	subs	r3, #1
   2160c:	6123      	str	r3, [r4, #16]
   2160e:	e7f0      	b.n	215f2 <_scanf_float+0x2ca>
   21610:	f815 1c01 	ldrb.w	r1, [r5, #-1]
   21614:	6923      	ldr	r3, [r4, #16]
   21616:	2965      	cmp	r1, #101	; 0x65
   21618:	f103 33ff 	add.w	r3, r3, #4294967295
   2161c:	f105 3aff 	add.w	sl, r5, #4294967295
   21620:	6123      	str	r3, [r4, #16]
   21622:	d00d      	beq.n	21640 <_scanf_float+0x318>
   21624:	2945      	cmp	r1, #69	; 0x45
   21626:	d00b      	beq.n	21640 <_scanf_float+0x318>
   21628:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
   2162c:	4638      	mov	r0, r7
   2162e:	4632      	mov	r2, r6
   21630:	4798      	blx	r3
   21632:	6923      	ldr	r3, [r4, #16]
   21634:	f815 1c02 	ldrb.w	r1, [r5, #-2]
   21638:	3b01      	subs	r3, #1
   2163a:	f1a5 0a02 	sub.w	sl, r5, #2
   2163e:	6123      	str	r3, [r4, #16]
   21640:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
   21644:	4638      	mov	r0, r7
   21646:	4632      	mov	r2, r6
   21648:	4798      	blx	r3
   2164a:	4655      	mov	r5, sl
   2164c:	6826      	ldr	r6, [r4, #0]
   2164e:	f016 0610 	ands.w	r6, r6, #16
   21652:	d14d      	bne.n	216f0 <_scanf_float+0x3c8>
   21654:	702e      	strb	r6, [r5, #0]
   21656:	6823      	ldr	r3, [r4, #0]
   21658:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
   2165c:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
   21660:	d105      	bne.n	2166e <_scanf_float+0x346>
   21662:	9903      	ldr	r1, [sp, #12]
   21664:	ebc1 0309 	rsb	r3, r1, r9
   21668:	425a      	negs	r2, r3
   2166a:	b963      	cbnz	r3, 21686 <_scanf_float+0x35e>
   2166c:	e015      	b.n	2169a <_scanf_float+0x372>
   2166e:	9d04      	ldr	r5, [sp, #16]
   21670:	b19d      	cbz	r5, 2169a <_scanf_float+0x372>
   21672:	9d05      	ldr	r5, [sp, #20]
   21674:	4632      	mov	r2, r6
   21676:	1c69      	adds	r1, r5, #1
   21678:	4638      	mov	r0, r7
   2167a:	230a      	movs	r3, #10
   2167c:	f7fe fb22 	bl	1fcc4 <_strtol_r>
   21680:	9d04      	ldr	r5, [sp, #16]
   21682:	1b42      	subs	r2, r0, r5
   21684:	9d05      	ldr	r5, [sp, #20]
   21686:	f204 136f 	addw	r3, r4, #367	; 0x16f
   2168a:	429d      	cmp	r5, r3
   2168c:	bf28      	it	cs
   2168e:	f504 75b7 	addcs.w	r5, r4, #366	; 0x16e
   21692:	4628      	mov	r0, r5
   21694:	4919      	ldr	r1, [pc, #100]	; (216fc <_scanf_float+0x3d4>)
   21696:	f7fd fb63 	bl	1ed60 <siprintf>
   2169a:	4641      	mov	r1, r8
   2169c:	2200      	movs	r2, #0
   2169e:	4638      	mov	r0, r7
   216a0:	f7fd fcc6 	bl	1f030 <_strtod_r>
   216a4:	6822      	ldr	r2, [r4, #0]
   216a6:	9d02      	ldr	r5, [sp, #8]
   216a8:	f012 0f02 	tst.w	r2, #2
   216ac:	4680      	mov	r8, r0
   216ae:	4689      	mov	r9, r1
   216b0:	682b      	ldr	r3, [r5, #0]
   216b2:	d002      	beq.n	216ba <_scanf_float+0x392>
   216b4:	1d1a      	adds	r2, r3, #4
   216b6:	602a      	str	r2, [r5, #0]
   216b8:	e006      	b.n	216c8 <_scanf_float+0x3a0>
   216ba:	9d02      	ldr	r5, [sp, #8]
   216bc:	f012 0f04 	tst.w	r2, #4
   216c0:	f103 0204 	add.w	r2, r3, #4
   216c4:	602a      	str	r2, [r5, #0]
   216c6:	d003      	beq.n	216d0 <_scanf_float+0x3a8>
   216c8:	681b      	ldr	r3, [r3, #0]
   216ca:	e9c3 8900 	strd	r8, r9, [r3]
   216ce:	e00b      	b.n	216e8 <_scanf_float+0x3c0>
   216d0:	681d      	ldr	r5, [r3, #0]
   216d2:	f002 f9f5 	bl	23ac0 <__fpclassifyd>
   216d6:	b910      	cbnz	r0, 216de <_scanf_float+0x3b6>
   216d8:	f002 fa46 	bl	23b68 <nanf>
   216dc:	e003      	b.n	216e6 <_scanf_float+0x3be>
   216de:	4640      	mov	r0, r8
   216e0:	4649      	mov	r1, r9
   216e2:	f7fb fbe3 	bl	1ceac <__aeabi_d2f>
   216e6:	6028      	str	r0, [r5, #0]
   216e8:	68e3      	ldr	r3, [r4, #12]
   216ea:	3301      	adds	r3, #1
   216ec:	60e3      	str	r3, [r4, #12]
   216ee:	e000      	b.n	216f2 <_scanf_float+0x3ca>
   216f0:	2600      	movs	r6, #0
   216f2:	4630      	mov	r0, r6
   216f4:	b007      	add	sp, #28
   216f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   216fa:	bf00      	nop
   216fc:	00027293 	.word	0x00027293

00021700 <_scanf_chars>:
_scanf_chars():
   21700:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   21704:	4615      	mov	r5, r2
   21706:	688a      	ldr	r2, [r1, #8]
   21708:	4680      	mov	r8, r0
   2170a:	460c      	mov	r4, r1
   2170c:	b932      	cbnz	r2, 2171c <_scanf_chars+0x1c>
   2170e:	698a      	ldr	r2, [r1, #24]
   21710:	2a00      	cmp	r2, #0
   21712:	bf14      	ite	ne
   21714:	f04f 32ff 	movne.w	r2, #4294967295
   21718:	2201      	moveq	r2, #1
   2171a:	608a      	str	r2, [r1, #8]
   2171c:	6822      	ldr	r2, [r4, #0]
   2171e:	06d1      	lsls	r1, r2, #27
   21720:	d403      	bmi.n	2172a <_scanf_chars+0x2a>
   21722:	681a      	ldr	r2, [r3, #0]
   21724:	1d11      	adds	r1, r2, #4
   21726:	6019      	str	r1, [r3, #0]
   21728:	6817      	ldr	r7, [r2, #0]
   2172a:	2600      	movs	r6, #0
   2172c:	69a0      	ldr	r0, [r4, #24]
   2172e:	b9e0      	cbnz	r0, 2176a <_scanf_chars+0x6a>
   21730:	6823      	ldr	r3, [r4, #0]
   21732:	3601      	adds	r6, #1
   21734:	06da      	lsls	r2, r3, #27
   21736:	d404      	bmi.n	21742 <_scanf_chars+0x42>
   21738:	682b      	ldr	r3, [r5, #0]
   2173a:	3701      	adds	r7, #1
   2173c:	781b      	ldrb	r3, [r3, #0]
   2173e:	f807 3c01 	strb.w	r3, [r7, #-1]
   21742:	682a      	ldr	r2, [r5, #0]
   21744:	686b      	ldr	r3, [r5, #4]
   21746:	3201      	adds	r2, #1
   21748:	602a      	str	r2, [r5, #0]
   2174a:	68a2      	ldr	r2, [r4, #8]
   2174c:	3b01      	subs	r3, #1
   2174e:	3a01      	subs	r2, #1
   21750:	606b      	str	r3, [r5, #4]
   21752:	60a2      	str	r2, [r4, #8]
   21754:	b312      	cbz	r2, 2179c <_scanf_chars+0x9c>
   21756:	2b00      	cmp	r3, #0
   21758:	dce8      	bgt.n	2172c <_scanf_chars+0x2c>
   2175a:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   2175e:	4640      	mov	r0, r8
   21760:	4629      	mov	r1, r5
   21762:	4798      	blx	r3
   21764:	2800      	cmp	r0, #0
   21766:	d0e1      	beq.n	2172c <_scanf_chars+0x2c>
   21768:	e018      	b.n	2179c <_scanf_chars+0x9c>
   2176a:	2801      	cmp	r0, #1
   2176c:	d107      	bne.n	2177e <_scanf_chars+0x7e>
   2176e:	682a      	ldr	r2, [r5, #0]
   21770:	7811      	ldrb	r1, [r2, #0]
   21772:	6962      	ldr	r2, [r4, #20]
   21774:	5c52      	ldrb	r2, [r2, r1]
   21776:	2a00      	cmp	r2, #0
   21778:	d1da      	bne.n	21730 <_scanf_chars+0x30>
   2177a:	b1ee      	cbz	r6, 217b8 <_scanf_chars+0xb8>
   2177c:	e00e      	b.n	2179c <_scanf_chars+0x9c>
   2177e:	2802      	cmp	r0, #2
   21780:	d001      	beq.n	21786 <_scanf_chars+0x86>
   21782:	b14e      	cbz	r6, 21798 <_scanf_chars+0x98>
   21784:	e00a      	b.n	2179c <_scanf_chars+0x9c>
   21786:	682a      	ldr	r2, [r5, #0]
   21788:	490c      	ldr	r1, [pc, #48]	; (217bc <_scanf_chars+0xbc>)
   2178a:	7812      	ldrb	r2, [r2, #0]
   2178c:	6809      	ldr	r1, [r1, #0]
   2178e:	440a      	add	r2, r1
   21790:	7852      	ldrb	r2, [r2, #1]
   21792:	0713      	lsls	r3, r2, #28
   21794:	d5cc      	bpl.n	21730 <_scanf_chars+0x30>
   21796:	e7f4      	b.n	21782 <_scanf_chars+0x82>
   21798:	2801      	cmp	r0, #1
   2179a:	d00d      	beq.n	217b8 <_scanf_chars+0xb8>
   2179c:	6823      	ldr	r3, [r4, #0]
   2179e:	f013 0310 	ands.w	r3, r3, #16
   217a2:	d105      	bne.n	217b0 <_scanf_chars+0xb0>
   217a4:	68e2      	ldr	r2, [r4, #12]
   217a6:	3201      	adds	r2, #1
   217a8:	60e2      	str	r2, [r4, #12]
   217aa:	69a2      	ldr	r2, [r4, #24]
   217ac:	b102      	cbz	r2, 217b0 <_scanf_chars+0xb0>
   217ae:	703b      	strb	r3, [r7, #0]
   217b0:	6923      	ldr	r3, [r4, #16]
   217b2:	2000      	movs	r0, #0
   217b4:	441e      	add	r6, r3
   217b6:	6126      	str	r6, [r4, #16]
   217b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   217bc:	2007c0ec 	.word	0x2007c0ec

000217c0 <_scanf_i>:
_scanf_i():
   217c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   217c4:	b089      	sub	sp, #36	; 0x24
   217c6:	460c      	mov	r4, r1
   217c8:	4698      	mov	r8, r3
   217ca:	a905      	add	r1, sp, #20
   217cc:	4b73      	ldr	r3, [pc, #460]	; (2199c <_scanf_i+0x1dc>)
   217ce:	9102      	str	r1, [sp, #8]
   217d0:	4681      	mov	r9, r0
   217d2:	4616      	mov	r6, r2
   217d4:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
   217d8:	9b02      	ldr	r3, [sp, #8]
   217da:	e883 0007 	stmia.w	r3, {r0, r1, r2}
   217de:	69a3      	ldr	r3, [r4, #24]
   217e0:	4a6f      	ldr	r2, [pc, #444]	; (219a0 <_scanf_i+0x1e0>)
   217e2:	4970      	ldr	r1, [pc, #448]	; (219a4 <_scanf_i+0x1e4>)
   217e4:	2b03      	cmp	r3, #3
   217e6:	bf08      	it	eq
   217e8:	4611      	moveq	r1, r2
   217ea:	68a3      	ldr	r3, [r4, #8]
   217ec:	9103      	str	r1, [sp, #12]
   217ee:	1e5a      	subs	r2, r3, #1
   217f0:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
   217f4:	d907      	bls.n	21806 <_scanf_i+0x46>
   217f6:	f46f 75ae 	mvn.w	r5, #348	; 0x15c
   217fa:	eb03 0a05 	add.w	sl, r3, r5
   217fe:	f240 135d 	movw	r3, #349	; 0x15d
   21802:	60a3      	str	r3, [r4, #8]
   21804:	e001      	b.n	2180a <_scanf_i+0x4a>
   21806:	f04f 0a00 	mov.w	sl, #0
   2180a:	6823      	ldr	r3, [r4, #0]
   2180c:	f104 071c 	add.w	r7, r4, #28
   21810:	f443 6350 	orr.w	r3, r3, #3328	; 0xd00
   21814:	6023      	str	r3, [r4, #0]
   21816:	46bb      	mov	fp, r7
   21818:	2300      	movs	r3, #0
   2181a:	6832      	ldr	r2, [r6, #0]
   2181c:	a905      	add	r1, sp, #20
   2181e:	f851 0023 	ldr.w	r0, [r1, r3, lsl #2]
   21822:	7811      	ldrb	r1, [r2, #0]
   21824:	2202      	movs	r2, #2
   21826:	9301      	str	r3, [sp, #4]
   21828:	f7fc fae0 	bl	1ddec <memchr>
   2182c:	9b01      	ldr	r3, [sp, #4]
   2182e:	2800      	cmp	r0, #0
   21830:	d035      	beq.n	2189e <_scanf_i+0xde>
   21832:	2b01      	cmp	r3, #1
   21834:	d10b      	bne.n	2184e <_scanf_i+0x8e>
   21836:	6862      	ldr	r2, [r4, #4]
   21838:	b92a      	cbnz	r2, 21846 <_scanf_i+0x86>
   2183a:	2208      	movs	r2, #8
   2183c:	6062      	str	r2, [r4, #4]
   2183e:	6822      	ldr	r2, [r4, #0]
   21840:	f442 7200 	orr.w	r2, r2, #512	; 0x200
   21844:	6022      	str	r2, [r4, #0]
   21846:	6822      	ldr	r2, [r4, #0]
   21848:	f422 62a0 	bic.w	r2, r2, #1280	; 0x500
   2184c:	e00b      	b.n	21866 <_scanf_i+0xa6>
   2184e:	2b02      	cmp	r3, #2
   21850:	d10a      	bne.n	21868 <_scanf_i+0xa8>
   21852:	6822      	ldr	r2, [r4, #0]
   21854:	f402 61c0 	and.w	r1, r2, #1536	; 0x600
   21858:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
   2185c:	d11f      	bne.n	2189e <_scanf_i+0xde>
   2185e:	2110      	movs	r1, #16
   21860:	6061      	str	r1, [r4, #4]
   21862:	f442 7280 	orr.w	r2, r2, #256	; 0x100
   21866:	6022      	str	r2, [r4, #0]
   21868:	68a2      	ldr	r2, [r4, #8]
   2186a:	1e51      	subs	r1, r2, #1
   2186c:	60a1      	str	r1, [r4, #8]
   2186e:	b1b2      	cbz	r2, 2189e <_scanf_i+0xde>
   21870:	6832      	ldr	r2, [r6, #0]
   21872:	f10b 0501 	add.w	r5, fp, #1
   21876:	1c51      	adds	r1, r2, #1
   21878:	6031      	str	r1, [r6, #0]
   2187a:	7812      	ldrb	r2, [r2, #0]
   2187c:	f88b 2000 	strb.w	r2, [fp]
   21880:	6872      	ldr	r2, [r6, #4]
   21882:	3a01      	subs	r2, #1
   21884:	2a00      	cmp	r2, #0
   21886:	6072      	str	r2, [r6, #4]
   21888:	dc08      	bgt.n	2189c <_scanf_i+0xdc>
   2188a:	9301      	str	r3, [sp, #4]
   2188c:	f8d4 2180 	ldr.w	r2, [r4, #384]	; 0x180
   21890:	4648      	mov	r0, r9
   21892:	4631      	mov	r1, r6
   21894:	4790      	blx	r2
   21896:	9b01      	ldr	r3, [sp, #4]
   21898:	2800      	cmp	r0, #0
   2189a:	d141      	bne.n	21920 <_scanf_i+0x160>
   2189c:	46ab      	mov	fp, r5
   2189e:	3301      	adds	r3, #1
   218a0:	2b03      	cmp	r3, #3
   218a2:	d1ba      	bne.n	2181a <_scanf_i+0x5a>
   218a4:	6863      	ldr	r3, [r4, #4]
   218a6:	b90b      	cbnz	r3, 218ac <_scanf_i+0xec>
   218a8:	230a      	movs	r3, #10
   218aa:	6063      	str	r3, [r4, #4]
   218ac:	6863      	ldr	r3, [r4, #4]
   218ae:	493e      	ldr	r1, [pc, #248]	; (219a8 <_scanf_i+0x1e8>)
   218b0:	6960      	ldr	r0, [r4, #20]
   218b2:	1ac9      	subs	r1, r1, r3
   218b4:	f002 f926 	bl	23b04 <__sccl>
   218b8:	465d      	mov	r5, fp
   218ba:	f04f 0b00 	mov.w	fp, #0
   218be:	68a3      	ldr	r3, [r4, #8]
   218c0:	2b00      	cmp	r3, #0
   218c2:	d02f      	beq.n	21924 <_scanf_i+0x164>
   218c4:	6832      	ldr	r2, [r6, #0]
   218c6:	6960      	ldr	r0, [r4, #20]
   218c8:	7811      	ldrb	r1, [r2, #0]
   218ca:	5c40      	ldrb	r0, [r0, r1]
   218cc:	b350      	cbz	r0, 21924 <_scanf_i+0x164>
   218ce:	2930      	cmp	r1, #48	; 0x30
   218d0:	6821      	ldr	r1, [r4, #0]
   218d2:	d10b      	bne.n	218ec <_scanf_i+0x12c>
   218d4:	0508      	lsls	r0, r1, #20
   218d6:	d509      	bpl.n	218ec <_scanf_i+0x12c>
   218d8:	f10b 0b01 	add.w	fp, fp, #1
   218dc:	f1ba 0f00 	cmp.w	sl, #0
   218e0:	d00b      	beq.n	218fa <_scanf_i+0x13a>
   218e2:	3301      	adds	r3, #1
   218e4:	f10a 3aff 	add.w	sl, sl, #4294967295
   218e8:	60a3      	str	r3, [r4, #8]
   218ea:	e006      	b.n	218fa <_scanf_i+0x13a>
   218ec:	f421 6110 	bic.w	r1, r1, #2304	; 0x900
   218f0:	6021      	str	r1, [r4, #0]
   218f2:	7813      	ldrb	r3, [r2, #0]
   218f4:	3501      	adds	r5, #1
   218f6:	f805 3c01 	strb.w	r3, [r5, #-1]
   218fa:	6873      	ldr	r3, [r6, #4]
   218fc:	3b01      	subs	r3, #1
   218fe:	2b00      	cmp	r3, #0
   21900:	6073      	str	r3, [r6, #4]
   21902:	dd03      	ble.n	2190c <_scanf_i+0x14c>
   21904:	6833      	ldr	r3, [r6, #0]
   21906:	3301      	adds	r3, #1
   21908:	6033      	str	r3, [r6, #0]
   2190a:	e005      	b.n	21918 <_scanf_i+0x158>
   2190c:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   21910:	4648      	mov	r0, r9
   21912:	4631      	mov	r1, r6
   21914:	4798      	blx	r3
   21916:	b928      	cbnz	r0, 21924 <_scanf_i+0x164>
   21918:	68a3      	ldr	r3, [r4, #8]
   2191a:	3b01      	subs	r3, #1
   2191c:	60a3      	str	r3, [r4, #8]
   2191e:	e7ce      	b.n	218be <_scanf_i+0xfe>
   21920:	f04f 0b00 	mov.w	fp, #0
   21924:	6823      	ldr	r3, [r4, #0]
   21926:	05d9      	lsls	r1, r3, #23
   21928:	d50d      	bpl.n	21946 <_scanf_i+0x186>
   2192a:	42bd      	cmp	r5, r7
   2192c:	d909      	bls.n	21942 <_scanf_i+0x182>
   2192e:	f815 1c01 	ldrb.w	r1, [r5, #-1]
   21932:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
   21936:	4648      	mov	r0, r9
   21938:	4632      	mov	r2, r6
   2193a:	4798      	blx	r3
   2193c:	f105 3aff 	add.w	sl, r5, #4294967295
   21940:	4655      	mov	r5, sl
   21942:	42bd      	cmp	r5, r7
   21944:	d026      	beq.n	21994 <_scanf_i+0x1d4>
   21946:	6822      	ldr	r2, [r4, #0]
   21948:	f012 0210 	ands.w	r2, r2, #16
   2194c:	d11b      	bne.n	21986 <_scanf_i+0x1c6>
   2194e:	702a      	strb	r2, [r5, #0]
   21950:	6863      	ldr	r3, [r4, #4]
   21952:	4648      	mov	r0, r9
   21954:	4639      	mov	r1, r7
   21956:	9e03      	ldr	r6, [sp, #12]
   21958:	47b0      	blx	r6
   2195a:	6822      	ldr	r2, [r4, #0]
   2195c:	f8d8 3000 	ldr.w	r3, [r8]
   21960:	f012 0f20 	tst.w	r2, #32
   21964:	d107      	bne.n	21976 <_scanf_i+0x1b6>
   21966:	07d2      	lsls	r2, r2, #31
   21968:	d505      	bpl.n	21976 <_scanf_i+0x1b6>
   2196a:	1d1a      	adds	r2, r3, #4
   2196c:	f8c8 2000 	str.w	r2, [r8]
   21970:	681b      	ldr	r3, [r3, #0]
   21972:	8018      	strh	r0, [r3, #0]
   21974:	e004      	b.n	21980 <_scanf_i+0x1c0>
   21976:	1d1a      	adds	r2, r3, #4
   21978:	f8c8 2000 	str.w	r2, [r8]
   2197c:	681b      	ldr	r3, [r3, #0]
   2197e:	6018      	str	r0, [r3, #0]
   21980:	68e3      	ldr	r3, [r4, #12]
   21982:	3301      	adds	r3, #1
   21984:	60e3      	str	r3, [r4, #12]
   21986:	6923      	ldr	r3, [r4, #16]
   21988:	1bed      	subs	r5, r5, r7
   2198a:	44ab      	add	fp, r5
   2198c:	445b      	add	r3, fp
   2198e:	6123      	str	r3, [r4, #16]
   21990:	2000      	movs	r0, #0
   21992:	e000      	b.n	21996 <_scanf_i+0x1d6>
   21994:	2001      	movs	r0, #1
   21996:	b009      	add	sp, #36	; 0x24
   21998:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2199c:	00027298 	.word	0x00027298
   219a0:	0001fcc5 	.word	0x0001fcc5
   219a4:	00023b71 	.word	0x00023b71
   219a8:	000272b4 	.word	0x000272b4

000219ac <_vsniprintf_r>:
_vsnprintf_r():
   219ac:	b530      	push	{r4, r5, lr}
   219ae:	1e14      	subs	r4, r2, #0
   219b0:	b09b      	sub	sp, #108	; 0x6c
   219b2:	4605      	mov	r5, r0
   219b4:	da04      	bge.n	219c0 <_vsniprintf_r+0x14>
   219b6:	238b      	movs	r3, #139	; 0x8b
   219b8:	6003      	str	r3, [r0, #0]
   219ba:	f04f 30ff 	mov.w	r0, #4294967295
   219be:	e01c      	b.n	219fa <_vsniprintf_r+0x4e>
   219c0:	f44f 7202 	mov.w	r2, #520	; 0x208
   219c4:	9100      	str	r1, [sp, #0]
   219c6:	9104      	str	r1, [sp, #16]
   219c8:	f8ad 200c 	strh.w	r2, [sp, #12]
   219cc:	bf14      	ite	ne
   219ce:	f104 31ff 	addne.w	r1, r4, #4294967295
   219d2:	4621      	moveq	r1, r4
   219d4:	f64f 72ff 	movw	r2, #65535	; 0xffff
   219d8:	9102      	str	r1, [sp, #8]
   219da:	9105      	str	r1, [sp, #20]
   219dc:	f8ad 200e 	strh.w	r2, [sp, #14]
   219e0:	4669      	mov	r1, sp
   219e2:	461a      	mov	r2, r3
   219e4:	9b1e      	ldr	r3, [sp, #120]	; 0x78
   219e6:	f7fe fa59 	bl	1fe9c <_svfiprintf_r>
   219ea:	1c43      	adds	r3, r0, #1
   219ec:	bfbc      	itt	lt
   219ee:	238b      	movlt	r3, #139	; 0x8b
   219f0:	602b      	strlt	r3, [r5, #0]
   219f2:	b114      	cbz	r4, 219fa <_vsniprintf_r+0x4e>
   219f4:	9b00      	ldr	r3, [sp, #0]
   219f6:	2200      	movs	r2, #0
   219f8:	701a      	strb	r2, [r3, #0]
   219fa:	b01b      	add	sp, #108	; 0x6c
   219fc:	bd30      	pop	{r4, r5, pc}
	...

00021a00 <vsniprintf>:
vsnprintf():
   21a00:	b573      	push	{r0, r1, r4, r5, r6, lr}
   21a02:	9300      	str	r3, [sp, #0]
   21a04:	4b05      	ldr	r3, [pc, #20]	; (21a1c <vsniprintf+0x1c>)
   21a06:	4606      	mov	r6, r0
   21a08:	460d      	mov	r5, r1
   21a0a:	4614      	mov	r4, r2
   21a0c:	6818      	ldr	r0, [r3, #0]
   21a0e:	4631      	mov	r1, r6
   21a10:	462a      	mov	r2, r5
   21a12:	4623      	mov	r3, r4
   21a14:	f7ff ffca 	bl	219ac <_vsniprintf_r>
   21a18:	b002      	add	sp, #8
   21a1a:	bd70      	pop	{r4, r5, r6, pc}
   21a1c:	2007c150 	.word	0x2007c150

00021a20 <_vsiscanf_r>:
_vsiscanf_r():
   21a20:	b570      	push	{r4, r5, r6, lr}
   21a22:	4604      	mov	r4, r0
   21a24:	b09a      	sub	sp, #104	; 0x68
   21a26:	461d      	mov	r5, r3
   21a28:	4608      	mov	r0, r1
   21a2a:	f44f 7301 	mov.w	r3, #516	; 0x204
   21a2e:	4616      	mov	r6, r2
   21a30:	f8ad 300c 	strh.w	r3, [sp, #12]
   21a34:	9100      	str	r1, [sp, #0]
   21a36:	9104      	str	r1, [sp, #16]
   21a38:	f7fd fa46 	bl	1eec8 <strlen>
   21a3c:	4b09      	ldr	r3, [pc, #36]	; (21a64 <_vsiscanf_r+0x44>)
   21a3e:	2100      	movs	r1, #0
   21a40:	9309      	str	r3, [sp, #36]	; 0x24
   21a42:	f64f 73ff 	movw	r3, #65535	; 0xffff
   21a46:	9001      	str	r0, [sp, #4]
   21a48:	9005      	str	r0, [sp, #20]
   21a4a:	910d      	str	r1, [sp, #52]	; 0x34
   21a4c:	9112      	str	r1, [sp, #72]	; 0x48
   21a4e:	f8ad 300e 	strh.w	r3, [sp, #14]
   21a52:	4620      	mov	r0, r4
   21a54:	4669      	mov	r1, sp
   21a56:	4632      	mov	r2, r6
   21a58:	462b      	mov	r3, r5
   21a5a:	f7fe fb65 	bl	20128 <__ssvfiscanf_r>
   21a5e:	b01a      	add	sp, #104	; 0x68
   21a60:	bd70      	pop	{r4, r5, r6, pc}
   21a62:	bf00      	nop
   21a64:	0001edcb 	.word	0x0001edcb

00021a68 <vsiscanf>:
vsscanf():
   21a68:	b530      	push	{r4, r5, lr}
   21a6a:	4613      	mov	r3, r2
   21a6c:	4a04      	ldr	r2, [pc, #16]	; (21a80 <vsiscanf+0x18>)
   21a6e:	4605      	mov	r5, r0
   21a70:	460c      	mov	r4, r1
   21a72:	6810      	ldr	r0, [r2, #0]
   21a74:	4629      	mov	r1, r5
   21a76:	4622      	mov	r2, r4
   21a78:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
   21a7c:	f7ff bfd0 	b.w	21a20 <_vsiscanf_r>
   21a80:	2007c150 	.word	0x2007c150

00021a84 <__swbuf_r>:
__swbuf_r():
   21a84:	b570      	push	{r4, r5, r6, lr}
   21a86:	460e      	mov	r6, r1
   21a88:	4614      	mov	r4, r2
   21a8a:	4605      	mov	r5, r0
   21a8c:	b118      	cbz	r0, 21a96 <__swbuf_r+0x12>
   21a8e:	6983      	ldr	r3, [r0, #24]
   21a90:	b90b      	cbnz	r3, 21a96 <__swbuf_r+0x12>
   21a92:	f7fc f8bb 	bl	1dc0c <__sinit>
   21a96:	4b22      	ldr	r3, [pc, #136]	; (21b20 <__swbuf_r+0x9c>)
   21a98:	429c      	cmp	r4, r3
   21a9a:	d101      	bne.n	21aa0 <__swbuf_r+0x1c>
   21a9c:	686c      	ldr	r4, [r5, #4]
   21a9e:	e008      	b.n	21ab2 <__swbuf_r+0x2e>
   21aa0:	4b20      	ldr	r3, [pc, #128]	; (21b24 <__swbuf_r+0xa0>)
   21aa2:	429c      	cmp	r4, r3
   21aa4:	d101      	bne.n	21aaa <__swbuf_r+0x26>
   21aa6:	68ac      	ldr	r4, [r5, #8]
   21aa8:	e003      	b.n	21ab2 <__swbuf_r+0x2e>
   21aaa:	4b1f      	ldr	r3, [pc, #124]	; (21b28 <__swbuf_r+0xa4>)
   21aac:	429c      	cmp	r4, r3
   21aae:	bf08      	it	eq
   21ab0:	68ec      	ldreq	r4, [r5, #12]
   21ab2:	69a3      	ldr	r3, [r4, #24]
   21ab4:	60a3      	str	r3, [r4, #8]
   21ab6:	89a3      	ldrh	r3, [r4, #12]
   21ab8:	071a      	lsls	r2, r3, #28
   21aba:	d509      	bpl.n	21ad0 <__swbuf_r+0x4c>
   21abc:	6923      	ldr	r3, [r4, #16]
   21abe:	b13b      	cbz	r3, 21ad0 <__swbuf_r+0x4c>
   21ac0:	6923      	ldr	r3, [r4, #16]
   21ac2:	6820      	ldr	r0, [r4, #0]
   21ac4:	b2f6      	uxtb	r6, r6
   21ac6:	1ac0      	subs	r0, r0, r3
   21ac8:	6963      	ldr	r3, [r4, #20]
   21aca:	4298      	cmp	r0, r3
   21acc:	db0f      	blt.n	21aee <__swbuf_r+0x6a>
   21ace:	e008      	b.n	21ae2 <__swbuf_r+0x5e>
   21ad0:	4628      	mov	r0, r5
   21ad2:	4621      	mov	r1, r4
   21ad4:	f000 f83c 	bl	21b50 <__swsetup_r>
   21ad8:	2800      	cmp	r0, #0
   21ada:	d0f1      	beq.n	21ac0 <__swbuf_r+0x3c>
   21adc:	f04f 30ff 	mov.w	r0, #4294967295
   21ae0:	bd70      	pop	{r4, r5, r6, pc}
   21ae2:	4628      	mov	r0, r5
   21ae4:	4621      	mov	r1, r4
   21ae6:	f000 ffd7 	bl	22a98 <_fflush_r>
   21aea:	2800      	cmp	r0, #0
   21aec:	d1f6      	bne.n	21adc <__swbuf_r+0x58>
   21aee:	68a3      	ldr	r3, [r4, #8]
   21af0:	3001      	adds	r0, #1
   21af2:	3b01      	subs	r3, #1
   21af4:	60a3      	str	r3, [r4, #8]
   21af6:	6823      	ldr	r3, [r4, #0]
   21af8:	1c5a      	adds	r2, r3, #1
   21afa:	6022      	str	r2, [r4, #0]
   21afc:	701e      	strb	r6, [r3, #0]
   21afe:	6963      	ldr	r3, [r4, #20]
   21b00:	4298      	cmp	r0, r3
   21b02:	d004      	beq.n	21b0e <__swbuf_r+0x8a>
   21b04:	89a3      	ldrh	r3, [r4, #12]
   21b06:	07db      	lsls	r3, r3, #31
   21b08:	d507      	bpl.n	21b1a <__swbuf_r+0x96>
   21b0a:	2e0a      	cmp	r6, #10
   21b0c:	d105      	bne.n	21b1a <__swbuf_r+0x96>
   21b0e:	4628      	mov	r0, r5
   21b10:	4621      	mov	r1, r4
   21b12:	f000 ffc1 	bl	22a98 <_fflush_r>
   21b16:	2800      	cmp	r0, #0
   21b18:	d1e0      	bne.n	21adc <__swbuf_r+0x58>
   21b1a:	4630      	mov	r0, r6
   21b1c:	bd70      	pop	{r4, r5, r6, pc}
   21b1e:	bf00      	nop
   21b20:	000270cc 	.word	0x000270cc
   21b24:	000270ec 	.word	0x000270ec
   21b28:	0002710c 	.word	0x0002710c

00021b2c <_write_r>:
_write_r():
   21b2c:	b538      	push	{r3, r4, r5, lr}
   21b2e:	4c07      	ldr	r4, [pc, #28]	; (21b4c <_write_r+0x20>)
   21b30:	4605      	mov	r5, r0
   21b32:	2000      	movs	r0, #0
   21b34:	6020      	str	r0, [r4, #0]
   21b36:	4608      	mov	r0, r1
   21b38:	4611      	mov	r1, r2
   21b3a:	461a      	mov	r2, r3
   21b3c:	f7ee fc18 	bl	10370 <_write>
   21b40:	1c43      	adds	r3, r0, #1
   21b42:	d102      	bne.n	21b4a <_write_r+0x1e>
   21b44:	6823      	ldr	r3, [r4, #0]
   21b46:	b103      	cbz	r3, 21b4a <_write_r+0x1e>
   21b48:	602b      	str	r3, [r5, #0]
   21b4a:	bd38      	pop	{r3, r4, r5, pc}
   21b4c:	2007cb20 	.word	0x2007cb20

00021b50 <__swsetup_r>:
__swsetup_r():
   21b50:	4b32      	ldr	r3, [pc, #200]	; (21c1c <__swsetup_r+0xcc>)
   21b52:	b570      	push	{r4, r5, r6, lr}
   21b54:	681d      	ldr	r5, [r3, #0]
   21b56:	4606      	mov	r6, r0
   21b58:	460c      	mov	r4, r1
   21b5a:	b125      	cbz	r5, 21b66 <__swsetup_r+0x16>
   21b5c:	69ab      	ldr	r3, [r5, #24]
   21b5e:	b913      	cbnz	r3, 21b66 <__swsetup_r+0x16>
   21b60:	4628      	mov	r0, r5
   21b62:	f7fc f853 	bl	1dc0c <__sinit>
   21b66:	4b2e      	ldr	r3, [pc, #184]	; (21c20 <__swsetup_r+0xd0>)
   21b68:	429c      	cmp	r4, r3
   21b6a:	d101      	bne.n	21b70 <__swsetup_r+0x20>
   21b6c:	686c      	ldr	r4, [r5, #4]
   21b6e:	e008      	b.n	21b82 <__swsetup_r+0x32>
   21b70:	4b2c      	ldr	r3, [pc, #176]	; (21c24 <__swsetup_r+0xd4>)
   21b72:	429c      	cmp	r4, r3
   21b74:	d101      	bne.n	21b7a <__swsetup_r+0x2a>
   21b76:	68ac      	ldr	r4, [r5, #8]
   21b78:	e003      	b.n	21b82 <__swsetup_r+0x32>
   21b7a:	4b2b      	ldr	r3, [pc, #172]	; (21c28 <__swsetup_r+0xd8>)
   21b7c:	429c      	cmp	r4, r3
   21b7e:	bf08      	it	eq
   21b80:	68ec      	ldreq	r4, [r5, #12]
   21b82:	89a2      	ldrh	r2, [r4, #12]
   21b84:	b293      	uxth	r3, r2
   21b86:	0719      	lsls	r1, r3, #28
   21b88:	d420      	bmi.n	21bcc <__swsetup_r+0x7c>
   21b8a:	06dd      	lsls	r5, r3, #27
   21b8c:	d405      	bmi.n	21b9a <__swsetup_r+0x4a>
   21b8e:	2309      	movs	r3, #9
   21b90:	f042 0240 	orr.w	r2, r2, #64	; 0x40
   21b94:	6033      	str	r3, [r6, #0]
   21b96:	81a2      	strh	r2, [r4, #12]
   21b98:	e03b      	b.n	21c12 <__swsetup_r+0xc2>
   21b9a:	0758      	lsls	r0, r3, #29
   21b9c:	d512      	bpl.n	21bc4 <__swsetup_r+0x74>
   21b9e:	6b61      	ldr	r1, [r4, #52]	; 0x34
   21ba0:	b141      	cbz	r1, 21bb4 <__swsetup_r+0x64>
   21ba2:	f104 0344 	add.w	r3, r4, #68	; 0x44
   21ba6:	4299      	cmp	r1, r3
   21ba8:	d002      	beq.n	21bb0 <__swsetup_r+0x60>
   21baa:	4630      	mov	r0, r6
   21bac:	f7fc fda0 	bl	1e6f0 <_free_r>
   21bb0:	2300      	movs	r3, #0
   21bb2:	6363      	str	r3, [r4, #52]	; 0x34
   21bb4:	89a3      	ldrh	r3, [r4, #12]
   21bb6:	f023 0324 	bic.w	r3, r3, #36	; 0x24
   21bba:	81a3      	strh	r3, [r4, #12]
   21bbc:	2300      	movs	r3, #0
   21bbe:	6063      	str	r3, [r4, #4]
   21bc0:	6923      	ldr	r3, [r4, #16]
   21bc2:	6023      	str	r3, [r4, #0]
   21bc4:	89a3      	ldrh	r3, [r4, #12]
   21bc6:	f043 0308 	orr.w	r3, r3, #8
   21bca:	81a3      	strh	r3, [r4, #12]
   21bcc:	6923      	ldr	r3, [r4, #16]
   21bce:	b94b      	cbnz	r3, 21be4 <__swsetup_r+0x94>
   21bd0:	89a3      	ldrh	r3, [r4, #12]
   21bd2:	f403 7320 	and.w	r3, r3, #640	; 0x280
   21bd6:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   21bda:	d003      	beq.n	21be4 <__swsetup_r+0x94>
   21bdc:	4630      	mov	r0, r6
   21bde:	4621      	mov	r1, r4
   21be0:	f001 fade 	bl	231a0 <__smakebuf_r>
   21be4:	89a3      	ldrh	r3, [r4, #12]
   21be6:	f013 0201 	ands.w	r2, r3, #1
   21bea:	d005      	beq.n	21bf8 <__swsetup_r+0xa8>
   21bec:	2200      	movs	r2, #0
   21bee:	60a2      	str	r2, [r4, #8]
   21bf0:	6962      	ldr	r2, [r4, #20]
   21bf2:	4252      	negs	r2, r2
   21bf4:	61a2      	str	r2, [r4, #24]
   21bf6:	e003      	b.n	21c00 <__swsetup_r+0xb0>
   21bf8:	0799      	lsls	r1, r3, #30
   21bfa:	bf58      	it	pl
   21bfc:	6962      	ldrpl	r2, [r4, #20]
   21bfe:	60a2      	str	r2, [r4, #8]
   21c00:	6922      	ldr	r2, [r4, #16]
   21c02:	b94a      	cbnz	r2, 21c18 <__swsetup_r+0xc8>
   21c04:	f003 0080 	and.w	r0, r3, #128	; 0x80
   21c08:	b280      	uxth	r0, r0
   21c0a:	b130      	cbz	r0, 21c1a <__swsetup_r+0xca>
   21c0c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   21c10:	81a3      	strh	r3, [r4, #12]
   21c12:	f04f 30ff 	mov.w	r0, #4294967295
   21c16:	bd70      	pop	{r4, r5, r6, pc}
   21c18:	2000      	movs	r0, #0
   21c1a:	bd70      	pop	{r4, r5, r6, pc}
   21c1c:	2007c150 	.word	0x2007c150
   21c20:	000270cc 	.word	0x000270cc
   21c24:	000270ec 	.word	0x000270ec
   21c28:	0002710c 	.word	0x0002710c

00021c2c <asctime>:
asctime():
   21c2c:	4b09      	ldr	r3, [pc, #36]	; (21c54 <asctime+0x28>)
   21c2e:	b570      	push	{r4, r5, r6, lr}
   21c30:	681c      	ldr	r4, [r3, #0]
   21c32:	4606      	mov	r6, r0
   21c34:	6c25      	ldr	r5, [r4, #64]	; 0x40
   21c36:	b93d      	cbnz	r5, 21c48 <asctime+0x1c>
   21c38:	201a      	movs	r0, #26
   21c3a:	f7fc f8c7 	bl	1ddcc <malloc>
   21c3e:	4629      	mov	r1, r5
   21c40:	6420      	str	r0, [r4, #64]	; 0x40
   21c42:	221a      	movs	r2, #26
   21c44:	f7fc f913 	bl	1de6e <memset>
   21c48:	4630      	mov	r0, r6
   21c4a:	6c21      	ldr	r1, [r4, #64]	; 0x40
   21c4c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
   21c50:	f000 b802 	b.w	21c58 <asctime_r>
   21c54:	2007c150 	.word	0x2007c150

00021c58 <asctime_r>:
asctime_r():
   21c58:	b530      	push	{r4, r5, lr}
   21c5a:	460d      	mov	r5, r1
   21c5c:	68c1      	ldr	r1, [r0, #12]
   21c5e:	b087      	sub	sp, #28
   21c60:	6982      	ldr	r2, [r0, #24]
   21c62:	6903      	ldr	r3, [r0, #16]
   21c64:	9100      	str	r1, [sp, #0]
   21c66:	6881      	ldr	r1, [r0, #8]
   21c68:	4c0b      	ldr	r4, [pc, #44]	; (21c98 <asctime_r+0x40>)
   21c6a:	9101      	str	r1, [sp, #4]
   21c6c:	6841      	ldr	r1, [r0, #4]
   21c6e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
   21c72:	9102      	str	r1, [sp, #8]
   21c74:	6801      	ldr	r1, [r0, #0]
   21c76:	4422      	add	r2, r4
   21c78:	9103      	str	r1, [sp, #12]
   21c7a:	6941      	ldr	r1, [r0, #20]
   21c7c:	4c07      	ldr	r4, [pc, #28]	; (21c9c <asctime_r+0x44>)
   21c7e:	f201 716c 	addw	r1, r1, #1900	; 0x76c
   21c82:	eb03 0343 	add.w	r3, r3, r3, lsl #1
   21c86:	9104      	str	r1, [sp, #16]
   21c88:	4628      	mov	r0, r5
   21c8a:	4905      	ldr	r1, [pc, #20]	; (21ca0 <asctime_r+0x48>)
   21c8c:	4423      	add	r3, r4
   21c8e:	f7fd f867 	bl	1ed60 <siprintf>
   21c92:	4628      	mov	r0, r5
   21c94:	b007      	add	sp, #28
   21c96:	bd30      	pop	{r4, r5, pc}
   21c98:	000272df 	.word	0x000272df
   21c9c:	000272f4 	.word	0x000272f4
   21ca0:	000272bf 	.word	0x000272bf

00021ca4 <_close_r>:
_close_r():
   21ca4:	b538      	push	{r3, r4, r5, lr}
   21ca6:	4c06      	ldr	r4, [pc, #24]	; (21cc0 <_close_r+0x1c>)
   21ca8:	2300      	movs	r3, #0
   21caa:	4605      	mov	r5, r0
   21cac:	4608      	mov	r0, r1
   21cae:	6023      	str	r3, [r4, #0]
   21cb0:	f7ee fba0 	bl	103f4 <_close>
   21cb4:	1c43      	adds	r3, r0, #1
   21cb6:	d102      	bne.n	21cbe <_close_r+0x1a>
   21cb8:	6823      	ldr	r3, [r4, #0]
   21cba:	b103      	cbz	r3, 21cbe <_close_r+0x1a>
   21cbc:	602b      	str	r3, [r5, #0]
   21cbe:	bd38      	pop	{r3, r4, r5, pc}
   21cc0:	2007cb20 	.word	0x2007cb20

00021cc4 <div>:
div():
   21cc4:	b510      	push	{r4, lr}
   21cc6:	2900      	cmp	r1, #0
   21cc8:	fb91 f4f2 	sdiv	r4, r1, r2
   21ccc:	fb02 1314 	mls	r3, r2, r4, r1
   21cd0:	db04      	blt.n	21cdc <div+0x18>
   21cd2:	2b00      	cmp	r3, #0
   21cd4:	da07      	bge.n	21ce6 <div+0x22>
   21cd6:	3401      	adds	r4, #1
   21cd8:	1a9b      	subs	r3, r3, r2
   21cda:	e004      	b.n	21ce6 <div+0x22>
   21cdc:	2b00      	cmp	r3, #0
   21cde:	bfc4      	itt	gt
   21ce0:	f104 34ff 	addgt.w	r4, r4, #4294967295
   21ce4:	189b      	addgt	r3, r3, r2
   21ce6:	6004      	str	r4, [r0, #0]
   21ce8:	6043      	str	r3, [r0, #4]
   21cea:	bd10      	pop	{r4, pc}

00021cec <quorem>:
quorem():
   21cec:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21cf0:	6903      	ldr	r3, [r0, #16]
   21cf2:	690c      	ldr	r4, [r1, #16]
   21cf4:	4680      	mov	r8, r0
   21cf6:	42a3      	cmp	r3, r4
   21cf8:	f2c0 8083 	blt.w	21e02 <quorem+0x116>
   21cfc:	3c01      	subs	r4, #1
   21cfe:	00a2      	lsls	r2, r4, #2
   21d00:	f101 0714 	add.w	r7, r1, #20
   21d04:	f100 0514 	add.w	r5, r0, #20
   21d08:	4691      	mov	r9, r2
   21d0a:	9200      	str	r2, [sp, #0]
   21d0c:	f857 6024 	ldr.w	r6, [r7, r4, lsl #2]
   21d10:	442a      	add	r2, r5
   21d12:	9201      	str	r2, [sp, #4]
   21d14:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
   21d18:	3601      	adds	r6, #1
   21d1a:	fbb2 f6f6 	udiv	r6, r2, r6
   21d1e:	44b9      	add	r9, r7
   21d20:	2e00      	cmp	r6, #0
   21d22:	d03b      	beq.n	21d9c <quorem+0xb0>
   21d24:	f04f 0e00 	mov.w	lr, #0
   21d28:	463a      	mov	r2, r7
   21d2a:	4628      	mov	r0, r5
   21d2c:	46f3      	mov	fp, lr
   21d2e:	f852 cb04 	ldr.w	ip, [r2], #4
   21d32:	6803      	ldr	r3, [r0, #0]
   21d34:	fa1f fa8c 	uxth.w	sl, ip
   21d38:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
   21d3c:	fb0a ea06 	mla	sl, sl, r6, lr
   21d40:	fb0c fc06 	mul.w	ip, ip, r6
   21d44:	eb0c 4c1a 	add.w	ip, ip, sl, lsr #16
   21d48:	fa1f fa8a 	uxth.w	sl, sl
   21d4c:	ebca 0b0b 	rsb	fp, sl, fp
   21d50:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
   21d54:	fa1f fa83 	uxth.w	sl, r3
   21d58:	fa1f fc8c 	uxth.w	ip, ip
   21d5c:	44da      	add	sl, fp
   21d5e:	ebcc 4c13 	rsb	ip, ip, r3, lsr #16
   21d62:	eb0c 4c2a 	add.w	ip, ip, sl, asr #16
   21d66:	fa1f fa8a 	uxth.w	sl, sl
   21d6a:	ea4a 4a0c 	orr.w	sl, sl, ip, lsl #16
   21d6e:	454a      	cmp	r2, r9
   21d70:	ea4f 4b2c 	mov.w	fp, ip, asr #16
   21d74:	f840 ab04 	str.w	sl, [r0], #4
   21d78:	d9d9      	bls.n	21d2e <quorem+0x42>
   21d7a:	9a00      	ldr	r2, [sp, #0]
   21d7c:	58ab      	ldr	r3, [r5, r2]
   21d7e:	b96b      	cbnz	r3, 21d9c <quorem+0xb0>
   21d80:	9a01      	ldr	r2, [sp, #4]
   21d82:	1f13      	subs	r3, r2, #4
   21d84:	42ab      	cmp	r3, r5
   21d86:	461a      	mov	r2, r3
   21d88:	d802      	bhi.n	21d90 <quorem+0xa4>
   21d8a:	f8c8 4010 	str.w	r4, [r8, #16]
   21d8e:	e005      	b.n	21d9c <quorem+0xb0>
   21d90:	6812      	ldr	r2, [r2, #0]
   21d92:	3b04      	subs	r3, #4
   21d94:	2a00      	cmp	r2, #0
   21d96:	d1f8      	bne.n	21d8a <quorem+0x9e>
   21d98:	3c01      	subs	r4, #1
   21d9a:	e7f3      	b.n	21d84 <quorem+0x98>
   21d9c:	4640      	mov	r0, r8
   21d9e:	f001 fca2 	bl	236e6 <__mcmp>
   21da2:	2800      	cmp	r0, #0
   21da4:	db2b      	blt.n	21dfe <quorem+0x112>
   21da6:	3601      	adds	r6, #1
   21da8:	462b      	mov	r3, r5
   21daa:	2000      	movs	r0, #0
   21dac:	f857 cb04 	ldr.w	ip, [r7], #4
   21db0:	681a      	ldr	r2, [r3, #0]
   21db2:	fa1f f18c 	uxth.w	r1, ip
   21db6:	1a41      	subs	r1, r0, r1
   21db8:	fa1f fa82 	uxth.w	sl, r2
   21dbc:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
   21dc0:	4451      	add	r1, sl
   21dc2:	ebcc 4212 	rsb	r2, ip, r2, lsr #16
   21dc6:	eb02 4221 	add.w	r2, r2, r1, asr #16
   21dca:	b289      	uxth	r1, r1
   21dcc:	1410      	asrs	r0, r2, #16
   21dce:	454f      	cmp	r7, r9
   21dd0:	ea41 4202 	orr.w	r2, r1, r2, lsl #16
   21dd4:	f843 2b04 	str.w	r2, [r3], #4
   21dd8:	d9e8      	bls.n	21dac <quorem+0xc0>
   21dda:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
   21dde:	eb05 0384 	add.w	r3, r5, r4, lsl #2
   21de2:	b962      	cbnz	r2, 21dfe <quorem+0x112>
   21de4:	3b04      	subs	r3, #4
   21de6:	42ab      	cmp	r3, r5
   21de8:	461a      	mov	r2, r3
   21dea:	d802      	bhi.n	21df2 <quorem+0x106>
   21dec:	f8c8 4010 	str.w	r4, [r8, #16]
   21df0:	e005      	b.n	21dfe <quorem+0x112>
   21df2:	6812      	ldr	r2, [r2, #0]
   21df4:	3b04      	subs	r3, #4
   21df6:	2a00      	cmp	r2, #0
   21df8:	d1f8      	bne.n	21dec <quorem+0x100>
   21dfa:	3c01      	subs	r4, #1
   21dfc:	e7f3      	b.n	21de6 <quorem+0xfa>
   21dfe:	4630      	mov	r0, r6
   21e00:	e000      	b.n	21e04 <quorem+0x118>
   21e02:	2000      	movs	r0, #0
   21e04:	b003      	add	sp, #12
   21e06:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21e0a:	0000      	movs	r0, r0
   21e0c:	0000      	movs	r0, r0
	...

00021e10 <_dtoa_r>:
_dtoa_r():
   21e10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21e14:	6a45      	ldr	r5, [r0, #36]	; 0x24
   21e16:	b09b      	sub	sp, #108	; 0x6c
   21e18:	4682      	mov	sl, r0
   21e1a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   21e1c:	e9cd 2304 	strd	r2, r3, [sp, #16]
   21e20:	b945      	cbnz	r5, 21e34 <_dtoa_r+0x24>
   21e22:	2010      	movs	r0, #16
   21e24:	f7fb ffd2 	bl	1ddcc <malloc>
   21e28:	f8ca 0024 	str.w	r0, [sl, #36]	; 0x24
   21e2c:	6045      	str	r5, [r0, #4]
   21e2e:	6085      	str	r5, [r0, #8]
   21e30:	6005      	str	r5, [r0, #0]
   21e32:	60c5      	str	r5, [r0, #12]
   21e34:	f8da 3024 	ldr.w	r3, [sl, #36]	; 0x24
   21e38:	6819      	ldr	r1, [r3, #0]
   21e3a:	b161      	cbz	r1, 21e56 <_dtoa_r+0x46>
   21e3c:	685b      	ldr	r3, [r3, #4]
   21e3e:	2201      	movs	r2, #1
   21e40:	604b      	str	r3, [r1, #4]
   21e42:	fa02 f303 	lsl.w	r3, r2, r3
   21e46:	4650      	mov	r0, sl
   21e48:	608b      	str	r3, [r1, #8]
   21e4a:	f001 fa2a 	bl	232a2 <_Bfree>
   21e4e:	f8da 3024 	ldr.w	r3, [sl, #36]	; 0x24
   21e52:	2200      	movs	r2, #0
   21e54:	601a      	str	r2, [r3, #0]
   21e56:	9805      	ldr	r0, [sp, #20]
   21e58:	2800      	cmp	r0, #0
   21e5a:	da05      	bge.n	21e68 <_dtoa_r+0x58>
   21e5c:	2301      	movs	r3, #1
   21e5e:	f020 4100 	bic.w	r1, r0, #2147483648	; 0x80000000
   21e62:	6023      	str	r3, [r4, #0]
   21e64:	9105      	str	r1, [sp, #20]
   21e66:	e001      	b.n	21e6c <_dtoa_r+0x5c>
   21e68:	2300      	movs	r3, #0
   21e6a:	6023      	str	r3, [r4, #0]
   21e6c:	9f05      	ldr	r7, [sp, #20]
   21e6e:	4a9c      	ldr	r2, [pc, #624]	; (220e0 <_dtoa_r+0x2d0>)
   21e70:	f027 4300 	bic.w	r3, r7, #2147483648	; 0x80000000
   21e74:	0d1b      	lsrs	r3, r3, #20
   21e76:	051b      	lsls	r3, r3, #20
   21e78:	4293      	cmp	r3, r2
   21e7a:	d11d      	bne.n	21eb8 <_dtoa_r+0xa8>
   21e7c:	9a26      	ldr	r2, [sp, #152]	; 0x98
   21e7e:	f242 730f 	movw	r3, #9999	; 0x270f
   21e82:	6013      	str	r3, [r2, #0]
   21e84:	9b04      	ldr	r3, [sp, #16]
   21e86:	b943      	cbnz	r3, 21e9a <_dtoa_r+0x8a>
   21e88:	4b96      	ldr	r3, [pc, #600]	; (220e4 <_dtoa_r+0x2d4>)
   21e8a:	4a97      	ldr	r2, [pc, #604]	; (220e8 <_dtoa_r+0x2d8>)
   21e8c:	f3c7 0013 	ubfx	r0, r7, #0, #20
   21e90:	2800      	cmp	r0, #0
   21e92:	bf0c      	ite	eq
   21e94:	4610      	moveq	r0, r2
   21e96:	4618      	movne	r0, r3
   21e98:	e000      	b.n	21e9c <_dtoa_r+0x8c>
   21e9a:	4892      	ldr	r0, [pc, #584]	; (220e4 <_dtoa_r+0x2d4>)
   21e9c:	9f28      	ldr	r7, [sp, #160]	; 0xa0
   21e9e:	2f00      	cmp	r7, #0
   21ea0:	f000 8571 	beq.w	22986 <_dtoa_r+0xb76>
   21ea4:	78c3      	ldrb	r3, [r0, #3]
   21ea6:	b113      	cbz	r3, 21eae <_dtoa_r+0x9e>
   21ea8:	f100 0308 	add.w	r3, r0, #8
   21eac:	e000      	b.n	21eb0 <_dtoa_r+0xa0>
   21eae:	1cc3      	adds	r3, r0, #3
   21eb0:	9f28      	ldr	r7, [sp, #160]	; 0xa0
   21eb2:	603b      	str	r3, [r7, #0]
   21eb4:	f000 bd67 	b.w	22986 <_dtoa_r+0xb76>
   21eb8:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
   21ebc:	2200      	movs	r2, #0
   21ebe:	4620      	mov	r0, r4
   21ec0:	4629      	mov	r1, r5
   21ec2:	2300      	movs	r3, #0
   21ec4:	f002 f960 	bl	24188 <__aeabi_dcmpeq>
   21ec8:	4680      	mov	r8, r0
   21eca:	b158      	cbz	r0, 21ee4 <_dtoa_r+0xd4>
   21ecc:	9f26      	ldr	r7, [sp, #152]	; 0x98
   21ece:	2301      	movs	r3, #1
   21ed0:	603b      	str	r3, [r7, #0]
   21ed2:	9f28      	ldr	r7, [sp, #160]	; 0xa0
   21ed4:	2f00      	cmp	r7, #0
   21ed6:	f000 8553 	beq.w	22980 <_dtoa_r+0xb70>
   21eda:	4884      	ldr	r0, [pc, #528]	; (220ec <_dtoa_r+0x2dc>)
   21edc:	6038      	str	r0, [r7, #0]
   21ede:	3801      	subs	r0, #1
   21ee0:	f000 bd51 	b.w	22986 <_dtoa_r+0xb76>
   21ee4:	ab19      	add	r3, sp, #100	; 0x64
   21ee6:	9300      	str	r3, [sp, #0]
   21ee8:	ab18      	add	r3, sp, #96	; 0x60
   21eea:	9301      	str	r3, [sp, #4]
   21eec:	4650      	mov	r0, sl
   21eee:	4622      	mov	r2, r4
   21ef0:	462b      	mov	r3, r5
   21ef2:	f001 fcea 	bl	238ca <__d2b>
   21ef6:	f3c7 560a 	ubfx	r6, r7, #20, #11
   21efa:	4683      	mov	fp, r0
   21efc:	b15e      	cbz	r6, 21f16 <_dtoa_r+0x106>
   21efe:	f3c5 0313 	ubfx	r3, r5, #0, #20
   21f02:	f043 517f 	orr.w	r1, r3, #1069547520	; 0x3fc00000
   21f06:	4620      	mov	r0, r4
   21f08:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
   21f0c:	f2a6 36ff 	subw	r6, r6, #1023	; 0x3ff
   21f10:	f8cd 8054 	str.w	r8, [sp, #84]	; 0x54
   21f14:	e01c      	b.n	21f50 <_dtoa_r+0x140>
   21f16:	9b19      	ldr	r3, [sp, #100]	; 0x64
   21f18:	9e18      	ldr	r6, [sp, #96]	; 0x60
   21f1a:	441e      	add	r6, r3
   21f1c:	f46f 6382 	mvn.w	r3, #1040	; 0x410
   21f20:	429e      	cmp	r6, r3
   21f22:	db09      	blt.n	21f38 <_dtoa_r+0x128>
   21f24:	9904      	ldr	r1, [sp, #16]
   21f26:	331f      	adds	r3, #31
   21f28:	f206 4012 	addw	r0, r6, #1042	; 0x412
   21f2c:	1b9b      	subs	r3, r3, r6
   21f2e:	fa21 f000 	lsr.w	r0, r1, r0
   21f32:	409f      	lsls	r7, r3
   21f34:	4338      	orrs	r0, r7
   21f36:	e004      	b.n	21f42 <_dtoa_r+0x132>
   21f38:	486d      	ldr	r0, [pc, #436]	; (220f0 <_dtoa_r+0x2e0>)
   21f3a:	9a04      	ldr	r2, [sp, #16]
   21f3c:	1b80      	subs	r0, r0, r6
   21f3e:	fa02 f000 	lsl.w	r0, r2, r0
   21f42:	f7fa ff1d 	bl	1cd80 <__aeabi_ui2d>
   21f46:	2701      	movs	r7, #1
   21f48:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
   21f4c:	3e01      	subs	r6, #1
   21f4e:	9715      	str	r7, [sp, #84]	; 0x54
   21f50:	2200      	movs	r2, #0
   21f52:	4b68      	ldr	r3, [pc, #416]	; (220f4 <_dtoa_r+0x2e4>)
   21f54:	f7fa fdd6 	bl	1cb04 <__aeabi_dsub>
   21f58:	a35b      	add	r3, pc, #364	; (adr r3, 220c8 <_dtoa_r+0x2b8>)
   21f5a:	e9d3 2300 	ldrd	r2, r3, [r3]
   21f5e:	f001 feab 	bl	23cb8 <__aeabi_dmul>
   21f62:	a35b      	add	r3, pc, #364	; (adr r3, 220d0 <_dtoa_r+0x2c0>)
   21f64:	e9d3 2300 	ldrd	r2, r3, [r3]
   21f68:	f7fa fdce 	bl	1cb08 <__adddf3>
   21f6c:	4604      	mov	r4, r0
   21f6e:	4630      	mov	r0, r6
   21f70:	460d      	mov	r5, r1
   21f72:	f7fa ff15 	bl	1cda0 <__aeabi_i2d>
   21f76:	a358      	add	r3, pc, #352	; (adr r3, 220d8 <_dtoa_r+0x2c8>)
   21f78:	e9d3 2300 	ldrd	r2, r3, [r3]
   21f7c:	f001 fe9c 	bl	23cb8 <__aeabi_dmul>
   21f80:	4602      	mov	r2, r0
   21f82:	460b      	mov	r3, r1
   21f84:	4620      	mov	r0, r4
   21f86:	4629      	mov	r1, r5
   21f88:	f7fa fdbe 	bl	1cb08 <__adddf3>
   21f8c:	4604      	mov	r4, r0
   21f8e:	460d      	mov	r5, r1
   21f90:	f002 f92c 	bl	241ec <__aeabi_d2iz>
   21f94:	4629      	mov	r1, r5
   21f96:	4681      	mov	r9, r0
   21f98:	2200      	movs	r2, #0
   21f9a:	4620      	mov	r0, r4
   21f9c:	2300      	movs	r3, #0
   21f9e:	f002 f8fd 	bl	2419c <__aeabi_dcmplt>
   21fa2:	b158      	cbz	r0, 21fbc <_dtoa_r+0x1ac>
   21fa4:	4648      	mov	r0, r9
   21fa6:	f7fa fefb 	bl	1cda0 <__aeabi_i2d>
   21faa:	4602      	mov	r2, r0
   21fac:	460b      	mov	r3, r1
   21fae:	4620      	mov	r0, r4
   21fb0:	4629      	mov	r1, r5
   21fb2:	f002 f8e9 	bl	24188 <__aeabi_dcmpeq>
   21fb6:	b908      	cbnz	r0, 21fbc <_dtoa_r+0x1ac>
   21fb8:	f109 39ff 	add.w	r9, r9, #4294967295
   21fbc:	f1b9 0f16 	cmp.w	r9, #22
   21fc0:	d80d      	bhi.n	21fde <_dtoa_r+0x1ce>
   21fc2:	4b4d      	ldr	r3, [pc, #308]	; (220f8 <_dtoa_r+0x2e8>)
   21fc4:	eb03 03c9 	add.w	r3, r3, r9, lsl #3
   21fc8:	e9d3 0100 	ldrd	r0, r1, [r3]
   21fcc:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
   21fd0:	f002 f902 	bl	241d8 <__aeabi_dcmpgt>
   21fd4:	b130      	cbz	r0, 21fe4 <_dtoa_r+0x1d4>
   21fd6:	f109 39ff 	add.w	r9, r9, #4294967295
   21fda:	2700      	movs	r7, #0
   21fdc:	e000      	b.n	21fe0 <_dtoa_r+0x1d0>
   21fde:	2701      	movs	r7, #1
   21fe0:	9714      	str	r7, [sp, #80]	; 0x50
   21fe2:	e000      	b.n	21fe6 <_dtoa_r+0x1d6>
   21fe4:	9014      	str	r0, [sp, #80]	; 0x50
   21fe6:	9b18      	ldr	r3, [sp, #96]	; 0x60
   21fe8:	1b9e      	subs	r6, r3, r6
   21fea:	3e01      	subs	r6, #1
   21fec:	9609      	str	r6, [sp, #36]	; 0x24
   21fee:	d504      	bpl.n	21ffa <_dtoa_r+0x1ea>
   21ff0:	4277      	negs	r7, r6
   21ff2:	9708      	str	r7, [sp, #32]
   21ff4:	2700      	movs	r7, #0
   21ff6:	9709      	str	r7, [sp, #36]	; 0x24
   21ff8:	e001      	b.n	21ffe <_dtoa_r+0x1ee>
   21ffa:	2700      	movs	r7, #0
   21ffc:	9708      	str	r7, [sp, #32]
   21ffe:	f1b9 0f00 	cmp.w	r9, #0
   22002:	db07      	blt.n	22014 <_dtoa_r+0x204>
   22004:	9f09      	ldr	r7, [sp, #36]	; 0x24
   22006:	f8cd 9044 	str.w	r9, [sp, #68]	; 0x44
   2200a:	444f      	add	r7, r9
   2200c:	9709      	str	r7, [sp, #36]	; 0x24
   2200e:	2700      	movs	r7, #0
   22010:	970e      	str	r7, [sp, #56]	; 0x38
   22012:	e008      	b.n	22026 <_dtoa_r+0x216>
   22014:	9f08      	ldr	r7, [sp, #32]
   22016:	ebc9 0707 	rsb	r7, r9, r7
   2201a:	9708      	str	r7, [sp, #32]
   2201c:	f1c9 0700 	rsb	r7, r9, #0
   22020:	970e      	str	r7, [sp, #56]	; 0x38
   22022:	2700      	movs	r7, #0
   22024:	9711      	str	r7, [sp, #68]	; 0x44
   22026:	9f24      	ldr	r7, [sp, #144]	; 0x90
   22028:	2f09      	cmp	r7, #9
   2202a:	d829      	bhi.n	22080 <_dtoa_r+0x270>
   2202c:	2f05      	cmp	r7, #5
   2202e:	bfc4      	itt	gt
   22030:	3f04      	subgt	r7, #4
   22032:	9724      	strgt	r7, [sp, #144]	; 0x90
   22034:	9f24      	ldr	r7, [sp, #144]	; 0x90
   22036:	bfc8      	it	gt
   22038:	2500      	movgt	r5, #0
   2203a:	f1a7 0302 	sub.w	r3, r7, #2
   2203e:	bfd8      	it	le
   22040:	2501      	movle	r5, #1
   22042:	2b03      	cmp	r3, #3
   22044:	d821      	bhi.n	2208a <_dtoa_r+0x27a>
   22046:	e8df f003 	tbb	[pc, r3]
   2204a:	0f06      	.short	0x0f06
   2204c:	0402      	.short	0x0402
   2204e:	2701      	movs	r7, #1
   22050:	e002      	b.n	22058 <_dtoa_r+0x248>
   22052:	2701      	movs	r7, #1
   22054:	e009      	b.n	2206a <_dtoa_r+0x25a>
   22056:	2700      	movs	r7, #0
   22058:	970f      	str	r7, [sp, #60]	; 0x3c
   2205a:	9f25      	ldr	r7, [sp, #148]	; 0x94
   2205c:	2f00      	cmp	r7, #0
   2205e:	dd1e      	ble.n	2209e <_dtoa_r+0x28e>
   22060:	970b      	str	r7, [sp, #44]	; 0x2c
   22062:	9707      	str	r7, [sp, #28]
   22064:	463b      	mov	r3, r7
   22066:	e01f      	b.n	220a8 <_dtoa_r+0x298>
   22068:	2700      	movs	r7, #0
   2206a:	970f      	str	r7, [sp, #60]	; 0x3c
   2206c:	9f25      	ldr	r7, [sp, #148]	; 0x94
   2206e:	444f      	add	r7, r9
   22070:	970b      	str	r7, [sp, #44]	; 0x2c
   22072:	3701      	adds	r7, #1
   22074:	463b      	mov	r3, r7
   22076:	9707      	str	r7, [sp, #28]
   22078:	2b01      	cmp	r3, #1
   2207a:	bfb8      	it	lt
   2207c:	2301      	movlt	r3, #1
   2207e:	e013      	b.n	220a8 <_dtoa_r+0x298>
   22080:	2501      	movs	r5, #1
   22082:	2700      	movs	r7, #0
   22084:	9724      	str	r7, [sp, #144]	; 0x90
   22086:	950f      	str	r5, [sp, #60]	; 0x3c
   22088:	e001      	b.n	2208e <_dtoa_r+0x27e>
   2208a:	2701      	movs	r7, #1
   2208c:	970f      	str	r7, [sp, #60]	; 0x3c
   2208e:	f04f 37ff 	mov.w	r7, #4294967295
   22092:	970b      	str	r7, [sp, #44]	; 0x2c
   22094:	9707      	str	r7, [sp, #28]
   22096:	2700      	movs	r7, #0
   22098:	2312      	movs	r3, #18
   2209a:	9725      	str	r7, [sp, #148]	; 0x94
   2209c:	e004      	b.n	220a8 <_dtoa_r+0x298>
   2209e:	2701      	movs	r7, #1
   220a0:	970b      	str	r7, [sp, #44]	; 0x2c
   220a2:	9707      	str	r7, [sp, #28]
   220a4:	463b      	mov	r3, r7
   220a6:	9725      	str	r7, [sp, #148]	; 0x94
   220a8:	f8da 4024 	ldr.w	r4, [sl, #36]	; 0x24
   220ac:	2200      	movs	r2, #0
   220ae:	6062      	str	r2, [r4, #4]
   220b0:	2104      	movs	r1, #4
   220b2:	f101 0214 	add.w	r2, r1, #20
   220b6:	429a      	cmp	r2, r3
   220b8:	d820      	bhi.n	220fc <_dtoa_r+0x2ec>
   220ba:	6862      	ldr	r2, [r4, #4]
   220bc:	0049      	lsls	r1, r1, #1
   220be:	3201      	adds	r2, #1
   220c0:	6062      	str	r2, [r4, #4]
   220c2:	e7f6      	b.n	220b2 <_dtoa_r+0x2a2>
   220c4:	f3af 8000 	nop.w
   220c8:	636f4361 	.word	0x636f4361
   220cc:	3fd287a7 	.word	0x3fd287a7
   220d0:	8b60c8b3 	.word	0x8b60c8b3
   220d4:	3fc68a28 	.word	0x3fc68a28
   220d8:	509f79fb 	.word	0x509f79fb
   220dc:	3fd34413 	.word	0x3fd34413
   220e0:	7ff00000 	.word	0x7ff00000
   220e4:	00027321 	.word	0x00027321
   220e8:	00027318 	.word	0x00027318
   220ec:	000264ed 	.word	0x000264ed
   220f0:	fffffbee 	.word	0xfffffbee
   220f4:	3ff80000 	.word	0x3ff80000
   220f8:	00027330 	.word	0x00027330
   220fc:	4650      	mov	r0, sl
   220fe:	6861      	ldr	r1, [r4, #4]
   22100:	f001 f89a 	bl	23238 <_Balloc>
   22104:	f8da 3024 	ldr.w	r3, [sl, #36]	; 0x24
   22108:	6020      	str	r0, [r4, #0]
   2210a:	9f07      	ldr	r7, [sp, #28]
   2210c:	681b      	ldr	r3, [r3, #0]
   2210e:	2f0e      	cmp	r7, #14
   22110:	930a      	str	r3, [sp, #40]	; 0x28
   22112:	f200 816b 	bhi.w	223ec <_dtoa_r+0x5dc>
   22116:	2d00      	cmp	r5, #0
   22118:	f000 8168 	beq.w	223ec <_dtoa_r+0x5dc>
   2211c:	f1b9 0f00 	cmp.w	r9, #0
   22120:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   22124:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
   22128:	dd31      	ble.n	2218e <_dtoa_r+0x37e>
   2212a:	4a81      	ldr	r2, [pc, #516]	; (22330 <_dtoa_r+0x520>)
   2212c:	f009 030f 	and.w	r3, r9, #15
   22130:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
   22134:	ea4f 1429 	mov.w	r4, r9, asr #4
   22138:	e9d3 0100 	ldrd	r0, r1, [r3]
   2213c:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
   22140:	06e0      	lsls	r0, r4, #27
   22142:	d50c      	bpl.n	2215e <_dtoa_r+0x34e>
   22144:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
   22148:	4b7a      	ldr	r3, [pc, #488]	; (22334 <_dtoa_r+0x524>)
   2214a:	f004 040f 	and.w	r4, r4, #15
   2214e:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
   22152:	f001 fedb 	bl	23f0c <__aeabi_ddiv>
   22156:	2703      	movs	r7, #3
   22158:	e9cd 0104 	strd	r0, r1, [sp, #16]
   2215c:	e000      	b.n	22160 <_dtoa_r+0x350>
   2215e:	2702      	movs	r7, #2
   22160:	4d74      	ldr	r5, [pc, #464]	; (22334 <_dtoa_r+0x524>)
   22162:	b16c      	cbz	r4, 22180 <_dtoa_r+0x370>
   22164:	07e1      	lsls	r1, r4, #31
   22166:	d508      	bpl.n	2217a <_dtoa_r+0x36a>
   22168:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
   2216c:	e9d5 2300 	ldrd	r2, r3, [r5]
   22170:	f001 fda2 	bl	23cb8 <__aeabi_dmul>
   22174:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
   22178:	3701      	adds	r7, #1
   2217a:	1064      	asrs	r4, r4, #1
   2217c:	3508      	adds	r5, #8
   2217e:	e7f0      	b.n	22162 <_dtoa_r+0x352>
   22180:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   22184:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
   22188:	f001 fec0 	bl	23f0c <__aeabi_ddiv>
   2218c:	e01b      	b.n	221c6 <_dtoa_r+0x3b6>
   2218e:	f1c9 0400 	rsb	r4, r9, #0
   22192:	b1dc      	cbz	r4, 221cc <_dtoa_r+0x3bc>
   22194:	4b66      	ldr	r3, [pc, #408]	; (22330 <_dtoa_r+0x520>)
   22196:	f004 020f 	and.w	r2, r4, #15
   2219a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   2219e:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
   221a2:	e9d3 2300 	ldrd	r2, r3, [r3]
   221a6:	f001 fd87 	bl	23cb8 <__aeabi_dmul>
   221aa:	4d62      	ldr	r5, [pc, #392]	; (22334 <_dtoa_r+0x524>)
   221ac:	1124      	asrs	r4, r4, #4
   221ae:	2702      	movs	r7, #2
   221b0:	b14c      	cbz	r4, 221c6 <_dtoa_r+0x3b6>
   221b2:	07e2      	lsls	r2, r4, #31
   221b4:	d504      	bpl.n	221c0 <_dtoa_r+0x3b0>
   221b6:	e9d5 2300 	ldrd	r2, r3, [r5]
   221ba:	3701      	adds	r7, #1
   221bc:	f001 fd7c 	bl	23cb8 <__aeabi_dmul>
   221c0:	1064      	asrs	r4, r4, #1
   221c2:	3508      	adds	r5, #8
   221c4:	e7f4      	b.n	221b0 <_dtoa_r+0x3a0>
   221c6:	e9cd 0104 	strd	r0, r1, [sp, #16]
   221ca:	e000      	b.n	221ce <_dtoa_r+0x3be>
   221cc:	2702      	movs	r7, #2
   221ce:	9914      	ldr	r1, [sp, #80]	; 0x50
   221d0:	b1e9      	cbz	r1, 2220e <_dtoa_r+0x3fe>
   221d2:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
   221d6:	2200      	movs	r2, #0
   221d8:	4620      	mov	r0, r4
   221da:	4629      	mov	r1, r5
   221dc:	4b56      	ldr	r3, [pc, #344]	; (22338 <_dtoa_r+0x528>)
   221de:	f001 ffdd 	bl	2419c <__aeabi_dcmplt>
   221e2:	b1c8      	cbz	r0, 22218 <_dtoa_r+0x408>
   221e4:	9a07      	ldr	r2, [sp, #28]
   221e6:	b1e2      	cbz	r2, 22222 <_dtoa_r+0x412>
   221e8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   221ea:	2b00      	cmp	r3, #0
   221ec:	f340 80fa 	ble.w	223e4 <_dtoa_r+0x5d4>
   221f0:	f109 30ff 	add.w	r0, r9, #4294967295
   221f4:	9010      	str	r0, [sp, #64]	; 0x40
   221f6:	4629      	mov	r1, r5
   221f8:	4620      	mov	r0, r4
   221fa:	2200      	movs	r2, #0
   221fc:	4b4f      	ldr	r3, [pc, #316]	; (2233c <_dtoa_r+0x52c>)
   221fe:	f001 fd5b 	bl	23cb8 <__aeabi_dmul>
   22202:	e9cd 0104 	strd	r0, r1, [sp, #16]
   22206:	990b      	ldr	r1, [sp, #44]	; 0x2c
   22208:	3701      	adds	r7, #1
   2220a:	910c      	str	r1, [sp, #48]	; 0x30
   2220c:	e00d      	b.n	2222a <_dtoa_r+0x41a>
   2220e:	9a07      	ldr	r2, [sp, #28]
   22210:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
   22214:	920c      	str	r2, [sp, #48]	; 0x30
   22216:	e008      	b.n	2222a <_dtoa_r+0x41a>
   22218:	9b07      	ldr	r3, [sp, #28]
   2221a:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
   2221e:	930c      	str	r3, [sp, #48]	; 0x30
   22220:	e003      	b.n	2222a <_dtoa_r+0x41a>
   22222:	9807      	ldr	r0, [sp, #28]
   22224:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
   22228:	900c      	str	r0, [sp, #48]	; 0x30
   2222a:	4638      	mov	r0, r7
   2222c:	f7fa fdb8 	bl	1cda0 <__aeabi_i2d>
   22230:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
   22234:	f001 fd40 	bl	23cb8 <__aeabi_dmul>
   22238:	2200      	movs	r2, #0
   2223a:	4b41      	ldr	r3, [pc, #260]	; (22340 <_dtoa_r+0x530>)
   2223c:	f7fa fc64 	bl	1cb08 <__adddf3>
   22240:	9f0c      	ldr	r7, [sp, #48]	; 0x30
   22242:	4604      	mov	r4, r0
   22244:	f1a1 7550 	sub.w	r5, r1, #54525952	; 0x3400000
   22248:	b9cf      	cbnz	r7, 2227e <_dtoa_r+0x46e>
   2224a:	2200      	movs	r2, #0
   2224c:	4b3d      	ldr	r3, [pc, #244]	; (22344 <_dtoa_r+0x534>)
   2224e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   22252:	f7fa fc57 	bl	1cb04 <__aeabi_dsub>
   22256:	4622      	mov	r2, r4
   22258:	462b      	mov	r3, r5
   2225a:	4606      	mov	r6, r0
   2225c:	460f      	mov	r7, r1
   2225e:	f001 ffbb 	bl	241d8 <__aeabi_dcmpgt>
   22262:	2800      	cmp	r0, #0
   22264:	f040 8253 	bne.w	2270e <_dtoa_r+0x8fe>
   22268:	4622      	mov	r2, r4
   2226a:	f105 4300 	add.w	r3, r5, #2147483648	; 0x80000000
   2226e:	4630      	mov	r0, r6
   22270:	4639      	mov	r1, r7
   22272:	f001 ff93 	bl	2419c <__aeabi_dcmplt>
   22276:	2800      	cmp	r0, #0
   22278:	f040 823f 	bne.w	226fa <_dtoa_r+0x8ea>
   2227c:	e0b2      	b.n	223e4 <_dtoa_r+0x5d4>
   2227e:	9f0c      	ldr	r7, [sp, #48]	; 0x30
   22280:	4b2b      	ldr	r3, [pc, #172]	; (22330 <_dtoa_r+0x520>)
   22282:	1e7a      	subs	r2, r7, #1
   22284:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
   22286:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   2228a:	2f00      	cmp	r7, #0
   2228c:	d05e      	beq.n	2234c <_dtoa_r+0x53c>
   2228e:	e9d3 2300 	ldrd	r2, r3, [r3]
   22292:	2000      	movs	r0, #0
   22294:	492c      	ldr	r1, [pc, #176]	; (22348 <_dtoa_r+0x538>)
   22296:	f001 fe39 	bl	23f0c <__aeabi_ddiv>
   2229a:	4622      	mov	r2, r4
   2229c:	462b      	mov	r3, r5
   2229e:	f7fa fc31 	bl	1cb04 <__aeabi_dsub>
   222a2:	e9dd 6704 	ldrd	r6, r7, [sp, #16]
   222a6:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
   222aa:	4604      	mov	r4, r0
   222ac:	460d      	mov	r5, r1
   222ae:	4639      	mov	r1, r7
   222b0:	4630      	mov	r0, r6
   222b2:	f001 ff9b 	bl	241ec <__aeabi_d2iz>
   222b6:	9002      	str	r0, [sp, #8]
   222b8:	f7fa fd72 	bl	1cda0 <__aeabi_i2d>
   222bc:	4602      	mov	r2, r0
   222be:	460b      	mov	r3, r1
   222c0:	4630      	mov	r0, r6
   222c2:	4639      	mov	r1, r7
   222c4:	f7fa fc1e 	bl	1cb04 <__aeabi_dsub>
   222c8:	f8dd c008 	ldr.w	ip, [sp, #8]
   222cc:	4622      	mov	r2, r4
   222ce:	f10c 0330 	add.w	r3, ip, #48	; 0x30
   222d2:	f808 3b01 	strb.w	r3, [r8], #1
   222d6:	462b      	mov	r3, r5
   222d8:	4606      	mov	r6, r0
   222da:	460f      	mov	r7, r1
   222dc:	f001 ff5e 	bl	2419c <__aeabi_dcmplt>
   222e0:	2800      	cmp	r0, #0
   222e2:	f040 833b 	bne.w	2295c <_dtoa_r+0xb4c>
   222e6:	4632      	mov	r2, r6
   222e8:	463b      	mov	r3, r7
   222ea:	2000      	movs	r0, #0
   222ec:	4912      	ldr	r1, [pc, #72]	; (22338 <_dtoa_r+0x528>)
   222ee:	f7fa fc09 	bl	1cb04 <__aeabi_dsub>
   222f2:	4622      	mov	r2, r4
   222f4:	462b      	mov	r3, r5
   222f6:	f001 ff51 	bl	2419c <__aeabi_dcmplt>
   222fa:	2800      	cmp	r0, #0
   222fc:	f040 80d5 	bne.w	224aa <_dtoa_r+0x69a>
   22300:	980a      	ldr	r0, [sp, #40]	; 0x28
   22302:	990c      	ldr	r1, [sp, #48]	; 0x30
   22304:	ebc0 0308 	rsb	r3, r0, r8
   22308:	428b      	cmp	r3, r1
   2230a:	da6b      	bge.n	223e4 <_dtoa_r+0x5d4>
   2230c:	4620      	mov	r0, r4
   2230e:	4629      	mov	r1, r5
   22310:	2200      	movs	r2, #0
   22312:	4b0a      	ldr	r3, [pc, #40]	; (2233c <_dtoa_r+0x52c>)
   22314:	f001 fcd0 	bl	23cb8 <__aeabi_dmul>
   22318:	2200      	movs	r2, #0
   2231a:	4604      	mov	r4, r0
   2231c:	460d      	mov	r5, r1
   2231e:	4630      	mov	r0, r6
   22320:	4639      	mov	r1, r7
   22322:	4b06      	ldr	r3, [pc, #24]	; (2233c <_dtoa_r+0x52c>)
   22324:	f001 fcc8 	bl	23cb8 <__aeabi_dmul>
   22328:	4606      	mov	r6, r0
   2232a:	460f      	mov	r7, r1
   2232c:	e7bf      	b.n	222ae <_dtoa_r+0x49e>
   2232e:	bf00      	nop
   22330:	00027330 	.word	0x00027330
   22334:	000273f8 	.word	0x000273f8
   22338:	3ff00000 	.word	0x3ff00000
   2233c:	40240000 	.word	0x40240000
   22340:	401c0000 	.word	0x401c0000
   22344:	40140000 	.word	0x40140000
   22348:	3fe00000 	.word	0x3fe00000
   2234c:	4622      	mov	r2, r4
   2234e:	e9d3 0100 	ldrd	r0, r1, [r3]
   22352:	462b      	mov	r3, r5
   22354:	f001 fcb0 	bl	23cb8 <__aeabi_dmul>
   22358:	e9dd 6704 	ldrd	r6, r7, [sp, #16]
   2235c:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
   22360:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   22362:	e9cd 0116 	strd	r0, r1, [sp, #88]	; 0x58
   22366:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   22368:	4490      	add	r8, r2
   2236a:	4639      	mov	r1, r7
   2236c:	4630      	mov	r0, r6
   2236e:	f001 ff3d 	bl	241ec <__aeabi_d2iz>
   22372:	4605      	mov	r5, r0
   22374:	f7fa fd14 	bl	1cda0 <__aeabi_i2d>
   22378:	4602      	mov	r2, r0
   2237a:	460b      	mov	r3, r1
   2237c:	4630      	mov	r0, r6
   2237e:	4639      	mov	r1, r7
   22380:	f7fa fbc0 	bl	1cb04 <__aeabi_dsub>
   22384:	3530      	adds	r5, #48	; 0x30
   22386:	f804 5b01 	strb.w	r5, [r4], #1
   2238a:	4544      	cmp	r4, r8
   2238c:	4606      	mov	r6, r0
   2238e:	460f      	mov	r7, r1
   22390:	d121      	bne.n	223d6 <_dtoa_r+0x5c6>
   22392:	2200      	movs	r2, #0
   22394:	4b87      	ldr	r3, [pc, #540]	; (225b4 <_dtoa_r+0x7a4>)
   22396:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
   2239a:	f7fa fbb5 	bl	1cb08 <__adddf3>
   2239e:	4602      	mov	r2, r0
   223a0:	460b      	mov	r3, r1
   223a2:	4630      	mov	r0, r6
   223a4:	4639      	mov	r1, r7
   223a6:	f001 ff17 	bl	241d8 <__aeabi_dcmpgt>
   223aa:	2800      	cmp	r0, #0
   223ac:	d17d      	bne.n	224aa <_dtoa_r+0x69a>
   223ae:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
   223b2:	2000      	movs	r0, #0
   223b4:	497f      	ldr	r1, [pc, #508]	; (225b4 <_dtoa_r+0x7a4>)
   223b6:	f7fa fba5 	bl	1cb04 <__aeabi_dsub>
   223ba:	4602      	mov	r2, r0
   223bc:	460b      	mov	r3, r1
   223be:	4630      	mov	r0, r6
   223c0:	4639      	mov	r1, r7
   223c2:	f001 feeb 	bl	2419c <__aeabi_dcmplt>
   223c6:	b168      	cbz	r0, 223e4 <_dtoa_r+0x5d4>
   223c8:	46a0      	mov	r8, r4
   223ca:	f818 3c01 	ldrb.w	r3, [r8, #-1]
   223ce:	3c01      	subs	r4, #1
   223d0:	2b30      	cmp	r3, #48	; 0x30
   223d2:	d0f9      	beq.n	223c8 <_dtoa_r+0x5b8>
   223d4:	e2c2      	b.n	2295c <_dtoa_r+0xb4c>
   223d6:	2200      	movs	r2, #0
   223d8:	4b77      	ldr	r3, [pc, #476]	; (225b8 <_dtoa_r+0x7a8>)
   223da:	f001 fc6d 	bl	23cb8 <__aeabi_dmul>
   223de:	4606      	mov	r6, r0
   223e0:	460f      	mov	r7, r1
   223e2:	e7c2      	b.n	2236a <_dtoa_r+0x55a>
   223e4:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
   223e8:	e9cd 0104 	strd	r0, r1, [sp, #16]
   223ec:	9b19      	ldr	r3, [sp, #100]	; 0x64
   223ee:	2b00      	cmp	r3, #0
   223f0:	db7c      	blt.n	224ec <_dtoa_r+0x6dc>
   223f2:	f1b9 0f0e 	cmp.w	r9, #14
   223f6:	dc79      	bgt.n	224ec <_dtoa_r+0x6dc>
   223f8:	4b70      	ldr	r3, [pc, #448]	; (225bc <_dtoa_r+0x7ac>)
   223fa:	9f25      	ldr	r7, [sp, #148]	; 0x94
   223fc:	eb03 03c9 	add.w	r3, r3, r9, lsl #3
   22400:	2f00      	cmp	r7, #0
   22402:	e9d3 4500 	ldrd	r4, r5, [r3]
   22406:	da14      	bge.n	22432 <_dtoa_r+0x622>
   22408:	9f07      	ldr	r7, [sp, #28]
   2240a:	2f00      	cmp	r7, #0
   2240c:	dc11      	bgt.n	22432 <_dtoa_r+0x622>
   2240e:	f040 8176 	bne.w	226fe <_dtoa_r+0x8ee>
   22412:	4620      	mov	r0, r4
   22414:	4629      	mov	r1, r5
   22416:	2200      	movs	r2, #0
   22418:	4b69      	ldr	r3, [pc, #420]	; (225c0 <_dtoa_r+0x7b0>)
   2241a:	f001 fc4d 	bl	23cb8 <__aeabi_dmul>
   2241e:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
   22422:	f001 fecf 	bl	241c4 <__aeabi_dcmpge>
   22426:	9d07      	ldr	r5, [sp, #28]
   22428:	462c      	mov	r4, r5
   2242a:	2800      	cmp	r0, #0
   2242c:	f040 8169 	bne.w	22702 <_dtoa_r+0x8f2>
   22430:	e171      	b.n	22716 <_dtoa_r+0x906>
   22432:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
   22436:	e9dd 6704 	ldrd	r6, r7, [sp, #16]
   2243a:	4622      	mov	r2, r4
   2243c:	462b      	mov	r3, r5
   2243e:	4630      	mov	r0, r6
   22440:	4639      	mov	r1, r7
   22442:	f001 fd63 	bl	23f0c <__aeabi_ddiv>
   22446:	f001 fed1 	bl	241ec <__aeabi_d2iz>
   2244a:	9004      	str	r0, [sp, #16]
   2244c:	f7fa fca8 	bl	1cda0 <__aeabi_i2d>
   22450:	4622      	mov	r2, r4
   22452:	462b      	mov	r3, r5
   22454:	f001 fc30 	bl	23cb8 <__aeabi_dmul>
   22458:	4602      	mov	r2, r0
   2245a:	460b      	mov	r3, r1
   2245c:	4630      	mov	r0, r6
   2245e:	4639      	mov	r1, r7
   22460:	f7fa fb50 	bl	1cb04 <__aeabi_dsub>
   22464:	9f04      	ldr	r7, [sp, #16]
   22466:	4602      	mov	r2, r0
   22468:	f107 0630 	add.w	r6, r7, #48	; 0x30
   2246c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
   2246e:	f808 6b01 	strb.w	r6, [r8], #1
   22472:	ebc7 0608 	rsb	r6, r7, r8
   22476:	9f07      	ldr	r7, [sp, #28]
   22478:	460b      	mov	r3, r1
   2247a:	42be      	cmp	r6, r7
   2247c:	d129      	bne.n	224d2 <_dtoa_r+0x6c2>
   2247e:	f7fa fb43 	bl	1cb08 <__adddf3>
   22482:	4622      	mov	r2, r4
   22484:	462b      	mov	r3, r5
   22486:	4606      	mov	r6, r0
   22488:	460f      	mov	r7, r1
   2248a:	f001 fea5 	bl	241d8 <__aeabi_dcmpgt>
   2248e:	b970      	cbnz	r0, 224ae <_dtoa_r+0x69e>
   22490:	4630      	mov	r0, r6
   22492:	4639      	mov	r1, r7
   22494:	4622      	mov	r2, r4
   22496:	462b      	mov	r3, r5
   22498:	f001 fe76 	bl	24188 <__aeabi_dcmpeq>
   2249c:	2800      	cmp	r0, #0
   2249e:	f000 825f 	beq.w	22960 <_dtoa_r+0xb50>
   224a2:	9f04      	ldr	r7, [sp, #16]
   224a4:	07fb      	lsls	r3, r7, #31
   224a6:	d402      	bmi.n	224ae <_dtoa_r+0x69e>
   224a8:	e25a      	b.n	22960 <_dtoa_r+0xb50>
   224aa:	f8dd 9040 	ldr.w	r9, [sp, #64]	; 0x40
   224ae:	4643      	mov	r3, r8
   224b0:	4698      	mov	r8, r3
   224b2:	f818 2c01 	ldrb.w	r2, [r8, #-1]
   224b6:	3b01      	subs	r3, #1
   224b8:	2a39      	cmp	r2, #57	; 0x39
   224ba:	d106      	bne.n	224ca <_dtoa_r+0x6ba>
   224bc:	9f0a      	ldr	r7, [sp, #40]	; 0x28
   224be:	429f      	cmp	r7, r3
   224c0:	d1f6      	bne.n	224b0 <_dtoa_r+0x6a0>
   224c2:	2230      	movs	r2, #48	; 0x30
   224c4:	f109 0901 	add.w	r9, r9, #1
   224c8:	703a      	strb	r2, [r7, #0]
   224ca:	781a      	ldrb	r2, [r3, #0]
   224cc:	3201      	adds	r2, #1
   224ce:	701a      	strb	r2, [r3, #0]
   224d0:	e246      	b.n	22960 <_dtoa_r+0xb50>
   224d2:	2200      	movs	r2, #0
   224d4:	4b38      	ldr	r3, [pc, #224]	; (225b8 <_dtoa_r+0x7a8>)
   224d6:	f001 fbef 	bl	23cb8 <__aeabi_dmul>
   224da:	2200      	movs	r2, #0
   224dc:	2300      	movs	r3, #0
   224de:	4606      	mov	r6, r0
   224e0:	460f      	mov	r7, r1
   224e2:	f001 fe51 	bl	24188 <__aeabi_dcmpeq>
   224e6:	2800      	cmp	r0, #0
   224e8:	d0a7      	beq.n	2243a <_dtoa_r+0x62a>
   224ea:	e239      	b.n	22960 <_dtoa_r+0xb50>
   224ec:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
   224ee:	2f00      	cmp	r7, #0
   224f0:	d030      	beq.n	22554 <_dtoa_r+0x744>
   224f2:	9f24      	ldr	r7, [sp, #144]	; 0x90
   224f4:	2f01      	cmp	r7, #1
   224f6:	dc0a      	bgt.n	2250e <_dtoa_r+0x6fe>
   224f8:	9f15      	ldr	r7, [sp, #84]	; 0x54
   224fa:	b117      	cbz	r7, 22502 <_dtoa_r+0x6f2>
   224fc:	f203 4333 	addw	r3, r3, #1075	; 0x433
   22500:	e002      	b.n	22508 <_dtoa_r+0x6f8>
   22502:	9b18      	ldr	r3, [sp, #96]	; 0x60
   22504:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
   22508:	9d0e      	ldr	r5, [sp, #56]	; 0x38
   2250a:	9e08      	ldr	r6, [sp, #32]
   2250c:	e016      	b.n	2253c <_dtoa_r+0x72c>
   2250e:	9f07      	ldr	r7, [sp, #28]
   22510:	1e7d      	subs	r5, r7, #1
   22512:	9f0e      	ldr	r7, [sp, #56]	; 0x38
   22514:	42af      	cmp	r7, r5
   22516:	db01      	blt.n	2251c <_dtoa_r+0x70c>
   22518:	1b7d      	subs	r5, r7, r5
   2251a:	e006      	b.n	2252a <_dtoa_r+0x71a>
   2251c:	9f0e      	ldr	r7, [sp, #56]	; 0x38
   2251e:	950e      	str	r5, [sp, #56]	; 0x38
   22520:	1beb      	subs	r3, r5, r7
   22522:	9f11      	ldr	r7, [sp, #68]	; 0x44
   22524:	2500      	movs	r5, #0
   22526:	441f      	add	r7, r3
   22528:	9711      	str	r7, [sp, #68]	; 0x44
   2252a:	9f07      	ldr	r7, [sp, #28]
   2252c:	2f00      	cmp	r7, #0
   2252e:	da03      	bge.n	22538 <_dtoa_r+0x728>
   22530:	9808      	ldr	r0, [sp, #32]
   22532:	2300      	movs	r3, #0
   22534:	1bc6      	subs	r6, r0, r7
   22536:	e001      	b.n	2253c <_dtoa_r+0x72c>
   22538:	9e08      	ldr	r6, [sp, #32]
   2253a:	9b07      	ldr	r3, [sp, #28]
   2253c:	9f08      	ldr	r7, [sp, #32]
   2253e:	4650      	mov	r0, sl
   22540:	441f      	add	r7, r3
   22542:	9708      	str	r7, [sp, #32]
   22544:	9f09      	ldr	r7, [sp, #36]	; 0x24
   22546:	2101      	movs	r1, #1
   22548:	441f      	add	r7, r3
   2254a:	9709      	str	r7, [sp, #36]	; 0x24
   2254c:	f000 ff89 	bl	23462 <__i2b>
   22550:	4604      	mov	r4, r0
   22552:	e002      	b.n	2255a <_dtoa_r+0x74a>
   22554:	9d0e      	ldr	r5, [sp, #56]	; 0x38
   22556:	9e08      	ldr	r6, [sp, #32]
   22558:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   2255a:	b16e      	cbz	r6, 22578 <_dtoa_r+0x768>
   2255c:	9f09      	ldr	r7, [sp, #36]	; 0x24
   2255e:	2f00      	cmp	r7, #0
   22560:	dd0a      	ble.n	22578 <_dtoa_r+0x768>
   22562:	463b      	mov	r3, r7
   22564:	9f08      	ldr	r7, [sp, #32]
   22566:	42b3      	cmp	r3, r6
   22568:	bfa8      	it	ge
   2256a:	4633      	movge	r3, r6
   2256c:	1aff      	subs	r7, r7, r3
   2256e:	9708      	str	r7, [sp, #32]
   22570:	9f09      	ldr	r7, [sp, #36]	; 0x24
   22572:	1af6      	subs	r6, r6, r3
   22574:	1aff      	subs	r7, r7, r3
   22576:	9709      	str	r7, [sp, #36]	; 0x24
   22578:	9f0e      	ldr	r7, [sp, #56]	; 0x38
   2257a:	2f00      	cmp	r7, #0
   2257c:	dd28      	ble.n	225d0 <_dtoa_r+0x7c0>
   2257e:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
   22580:	b307      	cbz	r7, 225c4 <_dtoa_r+0x7b4>
   22582:	2d00      	cmp	r5, #0
   22584:	dd10      	ble.n	225a8 <_dtoa_r+0x798>
   22586:	4621      	mov	r1, r4
   22588:	462a      	mov	r2, r5
   2258a:	4650      	mov	r0, sl
   2258c:	f001 f80a 	bl	235a4 <__pow5mult>
   22590:	4604      	mov	r4, r0
   22592:	465a      	mov	r2, fp
   22594:	4621      	mov	r1, r4
   22596:	4650      	mov	r0, sl
   22598:	f000 ff6c 	bl	23474 <__multiply>
   2259c:	4659      	mov	r1, fp
   2259e:	4607      	mov	r7, r0
   225a0:	4650      	mov	r0, sl
   225a2:	f000 fe7e 	bl	232a2 <_Bfree>
   225a6:	46bb      	mov	fp, r7
   225a8:	9f0e      	ldr	r7, [sp, #56]	; 0x38
   225aa:	1b7a      	subs	r2, r7, r5
   225ac:	d010      	beq.n	225d0 <_dtoa_r+0x7c0>
   225ae:	4650      	mov	r0, sl
   225b0:	4659      	mov	r1, fp
   225b2:	e00a      	b.n	225ca <_dtoa_r+0x7ba>
   225b4:	3fe00000 	.word	0x3fe00000
   225b8:	40240000 	.word	0x40240000
   225bc:	00027330 	.word	0x00027330
   225c0:	40140000 	.word	0x40140000
   225c4:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   225c6:	4650      	mov	r0, sl
   225c8:	4659      	mov	r1, fp
   225ca:	f000 ffeb 	bl	235a4 <__pow5mult>
   225ce:	4683      	mov	fp, r0
   225d0:	4650      	mov	r0, sl
   225d2:	2101      	movs	r1, #1
   225d4:	f000 ff45 	bl	23462 <__i2b>
   225d8:	9f11      	ldr	r7, [sp, #68]	; 0x44
   225da:	4605      	mov	r5, r0
   225dc:	2f00      	cmp	r7, #0
   225de:	dd05      	ble.n	225ec <_dtoa_r+0x7dc>
   225e0:	4629      	mov	r1, r5
   225e2:	4650      	mov	r0, sl
   225e4:	463a      	mov	r2, r7
   225e6:	f000 ffdd 	bl	235a4 <__pow5mult>
   225ea:	4605      	mov	r5, r0
   225ec:	9f24      	ldr	r7, [sp, #144]	; 0x90
   225ee:	2f01      	cmp	r7, #1
   225f0:	dc12      	bgt.n	22618 <_dtoa_r+0x808>
   225f2:	9804      	ldr	r0, [sp, #16]
   225f4:	b980      	cbnz	r0, 22618 <_dtoa_r+0x808>
   225f6:	9905      	ldr	r1, [sp, #20]
   225f8:	f3c1 0313 	ubfx	r3, r1, #0, #20
   225fc:	b973      	cbnz	r3, 2261c <_dtoa_r+0x80c>
   225fe:	f021 4700 	bic.w	r7, r1, #2147483648	; 0x80000000
   22602:	0d3f      	lsrs	r7, r7, #20
   22604:	053f      	lsls	r7, r7, #20
   22606:	b157      	cbz	r7, 2261e <_dtoa_r+0x80e>
   22608:	9f08      	ldr	r7, [sp, #32]
   2260a:	3701      	adds	r7, #1
   2260c:	9708      	str	r7, [sp, #32]
   2260e:	9f09      	ldr	r7, [sp, #36]	; 0x24
   22610:	3701      	adds	r7, #1
   22612:	9709      	str	r7, [sp, #36]	; 0x24
   22614:	2701      	movs	r7, #1
   22616:	e002      	b.n	2261e <_dtoa_r+0x80e>
   22618:	2700      	movs	r7, #0
   2261a:	e000      	b.n	2261e <_dtoa_r+0x80e>
   2261c:	9f04      	ldr	r7, [sp, #16]
   2261e:	9811      	ldr	r0, [sp, #68]	; 0x44
   22620:	b140      	cbz	r0, 22634 <_dtoa_r+0x824>
   22622:	692b      	ldr	r3, [r5, #16]
   22624:	eb05 0383 	add.w	r3, r5, r3, lsl #2
   22628:	6918      	ldr	r0, [r3, #16]
   2262a:	f000 fecd 	bl	233c8 <__hi0bits>
   2262e:	f1c0 0020 	rsb	r0, r0, #32
   22632:	e000      	b.n	22636 <_dtoa_r+0x826>
   22634:	2001      	movs	r0, #1
   22636:	9b09      	ldr	r3, [sp, #36]	; 0x24
   22638:	4403      	add	r3, r0
   2263a:	f013 031f 	ands.w	r3, r3, #31
   2263e:	d00f      	beq.n	22660 <_dtoa_r+0x850>
   22640:	f1c3 0220 	rsb	r2, r3, #32
   22644:	2a04      	cmp	r2, #4
   22646:	dd09      	ble.n	2265c <_dtoa_r+0x84c>
   22648:	9908      	ldr	r1, [sp, #32]
   2264a:	9a09      	ldr	r2, [sp, #36]	; 0x24
   2264c:	f1c3 031c 	rsb	r3, r3, #28
   22650:	4419      	add	r1, r3
   22652:	441a      	add	r2, r3
   22654:	9108      	str	r1, [sp, #32]
   22656:	441e      	add	r6, r3
   22658:	9209      	str	r2, [sp, #36]	; 0x24
   2265a:	e009      	b.n	22670 <_dtoa_r+0x860>
   2265c:	d008      	beq.n	22670 <_dtoa_r+0x860>
   2265e:	4613      	mov	r3, r2
   22660:	9808      	ldr	r0, [sp, #32]
   22662:	9909      	ldr	r1, [sp, #36]	; 0x24
   22664:	331c      	adds	r3, #28
   22666:	4418      	add	r0, r3
   22668:	4419      	add	r1, r3
   2266a:	9008      	str	r0, [sp, #32]
   2266c:	441e      	add	r6, r3
   2266e:	9109      	str	r1, [sp, #36]	; 0x24
   22670:	9a08      	ldr	r2, [sp, #32]
   22672:	2a00      	cmp	r2, #0
   22674:	dd04      	ble.n	22680 <_dtoa_r+0x870>
   22676:	4659      	mov	r1, fp
   22678:	4650      	mov	r0, sl
   2267a:	f000 ffe1 	bl	23640 <__lshift>
   2267e:	4683      	mov	fp, r0
   22680:	9b09      	ldr	r3, [sp, #36]	; 0x24
   22682:	2b00      	cmp	r3, #0
   22684:	dd05      	ble.n	22692 <_dtoa_r+0x882>
   22686:	4629      	mov	r1, r5
   22688:	4650      	mov	r0, sl
   2268a:	461a      	mov	r2, r3
   2268c:	f000 ffd8 	bl	23640 <__lshift>
   22690:	4605      	mov	r5, r0
   22692:	9814      	ldr	r0, [sp, #80]	; 0x50
   22694:	b1e0      	cbz	r0, 226d0 <_dtoa_r+0x8c0>
   22696:	4658      	mov	r0, fp
   22698:	4629      	mov	r1, r5
   2269a:	f001 f824 	bl	236e6 <__mcmp>
   2269e:	2800      	cmp	r0, #0
   226a0:	da16      	bge.n	226d0 <_dtoa_r+0x8c0>
   226a2:	4659      	mov	r1, fp
   226a4:	4650      	mov	r0, sl
   226a6:	220a      	movs	r2, #10
   226a8:	2300      	movs	r3, #0
   226aa:	f000 fe11 	bl	232d0 <__multadd>
   226ae:	990f      	ldr	r1, [sp, #60]	; 0x3c
   226b0:	f109 39ff 	add.w	r9, r9, #4294967295
   226b4:	4683      	mov	fp, r0
   226b6:	b149      	cbz	r1, 226cc <_dtoa_r+0x8bc>
   226b8:	4621      	mov	r1, r4
   226ba:	220a      	movs	r2, #10
   226bc:	4650      	mov	r0, sl
   226be:	2300      	movs	r3, #0
   226c0:	f000 fe06 	bl	232d0 <__multadd>
   226c4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   226c6:	4604      	mov	r4, r0
   226c8:	9207      	str	r2, [sp, #28]
   226ca:	e001      	b.n	226d0 <_dtoa_r+0x8c0>
   226cc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   226ce:	9307      	str	r3, [sp, #28]
   226d0:	9807      	ldr	r0, [sp, #28]
   226d2:	2800      	cmp	r0, #0
   226d4:	dc29      	bgt.n	2272a <_dtoa_r+0x91a>
   226d6:	9924      	ldr	r1, [sp, #144]	; 0x90
   226d8:	2902      	cmp	r1, #2
   226da:	dd26      	ble.n	2272a <_dtoa_r+0x91a>
   226dc:	b988      	cbnz	r0, 22702 <_dtoa_r+0x8f2>
   226de:	4629      	mov	r1, r5
   226e0:	2205      	movs	r2, #5
   226e2:	9b07      	ldr	r3, [sp, #28]
   226e4:	4650      	mov	r0, sl
   226e6:	f000 fdf3 	bl	232d0 <__multadd>
   226ea:	4605      	mov	r5, r0
   226ec:	4629      	mov	r1, r5
   226ee:	4658      	mov	r0, fp
   226f0:	f000 fff9 	bl	236e6 <__mcmp>
   226f4:	2800      	cmp	r0, #0
   226f6:	dc0e      	bgt.n	22716 <_dtoa_r+0x906>
   226f8:	e003      	b.n	22702 <_dtoa_r+0x8f2>
   226fa:	9d0c      	ldr	r5, [sp, #48]	; 0x30
   226fc:	e000      	b.n	22700 <_dtoa_r+0x8f0>
   226fe:	2500      	movs	r5, #0
   22700:	462c      	mov	r4, r5
   22702:	9f25      	ldr	r7, [sp, #148]	; 0x94
   22704:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
   22708:	ea6f 0907 	mvn.w	r9, r7
   2270c:	e00a      	b.n	22724 <_dtoa_r+0x914>
   2270e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
   22710:	f8dd 9040 	ldr.w	r9, [sp, #64]	; 0x40
   22714:	462c      	mov	r4, r5
   22716:	9f0a      	ldr	r7, [sp, #40]	; 0x28
   22718:	2331      	movs	r3, #49	; 0x31
   2271a:	f107 0801 	add.w	r8, r7, #1
   2271e:	703b      	strb	r3, [r7, #0]
   22720:	f109 0901 	add.w	r9, r9, #1
   22724:	4627      	mov	r7, r4
   22726:	2400      	movs	r4, #0
   22728:	e107      	b.n	2293a <_dtoa_r+0xb2a>
   2272a:	980f      	ldr	r0, [sp, #60]	; 0x3c
   2272c:	2800      	cmp	r0, #0
   2272e:	f000 80bb 	beq.w	228a8 <_dtoa_r+0xa98>
   22732:	2e00      	cmp	r6, #0
   22734:	dd05      	ble.n	22742 <_dtoa_r+0x932>
   22736:	4621      	mov	r1, r4
   22738:	4650      	mov	r0, sl
   2273a:	4632      	mov	r2, r6
   2273c:	f000 ff80 	bl	23640 <__lshift>
   22740:	4604      	mov	r4, r0
   22742:	b19f      	cbz	r7, 2276c <_dtoa_r+0x95c>
   22744:	6861      	ldr	r1, [r4, #4]
   22746:	4650      	mov	r0, sl
   22748:	f000 fd76 	bl	23238 <_Balloc>
   2274c:	6922      	ldr	r2, [r4, #16]
   2274e:	4606      	mov	r6, r0
   22750:	3202      	adds	r2, #2
   22752:	f104 010c 	add.w	r1, r4, #12
   22756:	0092      	lsls	r2, r2, #2
   22758:	300c      	adds	r0, #12
   2275a:	f7fb fb64 	bl	1de26 <memcpy>
   2275e:	4650      	mov	r0, sl
   22760:	4631      	mov	r1, r6
   22762:	2201      	movs	r2, #1
   22764:	f000 ff6c 	bl	23640 <__lshift>
   22768:	4607      	mov	r7, r0
   2276a:	e000      	b.n	2276e <_dtoa_r+0x95e>
   2276c:	4627      	mov	r7, r4
   2276e:	9e0a      	ldr	r6, [sp, #40]	; 0x28
   22770:	4629      	mov	r1, r5
   22772:	4658      	mov	r0, fp
   22774:	f7ff faba 	bl	21cec <quorem>
   22778:	4621      	mov	r1, r4
   2277a:	f100 0c30 	add.w	ip, r0, #48	; 0x30
   2277e:	4680      	mov	r8, r0
   22780:	4658      	mov	r0, fp
   22782:	f8cd c008 	str.w	ip, [sp, #8]
   22786:	f000 ffae 	bl	236e6 <__mcmp>
   2278a:	463a      	mov	r2, r7
   2278c:	9008      	str	r0, [sp, #32]
   2278e:	4629      	mov	r1, r5
   22790:	4650      	mov	r0, sl
   22792:	f000 ffc5 	bl	23720 <__mdiff>
   22796:	68c3      	ldr	r3, [r0, #12]
   22798:	4602      	mov	r2, r0
   2279a:	f8dd c008 	ldr.w	ip, [sp, #8]
   2279e:	b94b      	cbnz	r3, 227b4 <_dtoa_r+0x9a4>
   227a0:	4611      	mov	r1, r2
   227a2:	4658      	mov	r0, fp
   227a4:	9203      	str	r2, [sp, #12]
   227a6:	f000 ff9e 	bl	236e6 <__mcmp>
   227aa:	9a03      	ldr	r2, [sp, #12]
   227ac:	4603      	mov	r3, r0
   227ae:	f8dd c008 	ldr.w	ip, [sp, #8]
   227b2:	e000      	b.n	227b6 <_dtoa_r+0x9a6>
   227b4:	2301      	movs	r3, #1
   227b6:	4650      	mov	r0, sl
   227b8:	4611      	mov	r1, r2
   227ba:	9303      	str	r3, [sp, #12]
   227bc:	f8cd c008 	str.w	ip, [sp, #8]
   227c0:	f000 fd6f 	bl	232a2 <_Bfree>
   227c4:	9b03      	ldr	r3, [sp, #12]
   227c6:	f8dd c008 	ldr.w	ip, [sp, #8]
   227ca:	b963      	cbnz	r3, 227e6 <_dtoa_r+0x9d6>
   227cc:	9924      	ldr	r1, [sp, #144]	; 0x90
   227ce:	b951      	cbnz	r1, 227e6 <_dtoa_r+0x9d6>
   227d0:	9804      	ldr	r0, [sp, #16]
   227d2:	f000 0201 	and.w	r2, r0, #1
   227d6:	b932      	cbnz	r2, 227e6 <_dtoa_r+0x9d6>
   227d8:	f1bc 0f39 	cmp.w	ip, #57	; 0x39
   227dc:	d035      	beq.n	2284a <_dtoa_r+0xa3a>
   227de:	9b08      	ldr	r3, [sp, #32]
   227e0:	2b00      	cmp	r3, #0
   227e2:	dc24      	bgt.n	2282e <_dtoa_r+0xa1e>
   227e4:	e025      	b.n	22832 <_dtoa_r+0xa22>
   227e6:	9808      	ldr	r0, [sp, #32]
   227e8:	2800      	cmp	r0, #0
   227ea:	da02      	bge.n	227f2 <_dtoa_r+0x9e2>
   227ec:	2b00      	cmp	r3, #0
   227ee:	dc08      	bgt.n	22802 <_dtoa_r+0x9f2>
   227f0:	e01f      	b.n	22832 <_dtoa_r+0xa22>
   227f2:	d123      	bne.n	2283c <_dtoa_r+0xa2c>
   227f4:	9924      	ldr	r1, [sp, #144]	; 0x90
   227f6:	bb09      	cbnz	r1, 2283c <_dtoa_r+0xa2c>
   227f8:	9804      	ldr	r0, [sp, #16]
   227fa:	f000 0201 	and.w	r2, r0, #1
   227fe:	b9ea      	cbnz	r2, 2283c <_dtoa_r+0xa2c>
   22800:	e7f4      	b.n	227ec <_dtoa_r+0x9dc>
   22802:	4659      	mov	r1, fp
   22804:	2201      	movs	r2, #1
   22806:	4650      	mov	r0, sl
   22808:	f8cd c008 	str.w	ip, [sp, #8]
   2280c:	f000 ff18 	bl	23640 <__lshift>
   22810:	4629      	mov	r1, r5
   22812:	4683      	mov	fp, r0
   22814:	f000 ff67 	bl	236e6 <__mcmp>
   22818:	2800      	cmp	r0, #0
   2281a:	f8dd c008 	ldr.w	ip, [sp, #8]
   2281e:	dc03      	bgt.n	22828 <_dtoa_r+0xa18>
   22820:	d107      	bne.n	22832 <_dtoa_r+0xa22>
   22822:	f01c 0f01 	tst.w	ip, #1
   22826:	d004      	beq.n	22832 <_dtoa_r+0xa22>
   22828:	f1bc 0f39 	cmp.w	ip, #57	; 0x39
   2282c:	d00d      	beq.n	2284a <_dtoa_r+0xa3a>
   2282e:	f108 0c31 	add.w	ip, r8, #49	; 0x31
   22832:	f106 0801 	add.w	r8, r6, #1
   22836:	f886 c000 	strb.w	ip, [r6]
   2283a:	e07e      	b.n	2293a <_dtoa_r+0xb2a>
   2283c:	2b00      	cmp	r3, #0
   2283e:	f106 0801 	add.w	r8, r6, #1
   22842:	dd09      	ble.n	22858 <_dtoa_r+0xa48>
   22844:	f1bc 0f39 	cmp.w	ip, #57	; 0x39
   22848:	d103      	bne.n	22852 <_dtoa_r+0xa42>
   2284a:	2339      	movs	r3, #57	; 0x39
   2284c:	7033      	strb	r3, [r6, #0]
   2284e:	3601      	adds	r6, #1
   22850:	e05b      	b.n	2290a <_dtoa_r+0xafa>
   22852:	f10c 0301 	add.w	r3, ip, #1
   22856:	e068      	b.n	2292a <_dtoa_r+0xb1a>
   22858:	990a      	ldr	r1, [sp, #40]	; 0x28
   2285a:	9a07      	ldr	r2, [sp, #28]
   2285c:	ebc1 0308 	rsb	r3, r1, r8
   22860:	4646      	mov	r6, r8
   22862:	4293      	cmp	r3, r2
   22864:	f806 cc01 	strb.w	ip, [r6, #-1]
   22868:	d03c      	beq.n	228e4 <_dtoa_r+0xad4>
   2286a:	4659      	mov	r1, fp
   2286c:	220a      	movs	r2, #10
   2286e:	2300      	movs	r3, #0
   22870:	4650      	mov	r0, sl
   22872:	f000 fd2d 	bl	232d0 <__multadd>
   22876:	42bc      	cmp	r4, r7
   22878:	4683      	mov	fp, r0
   2287a:	4621      	mov	r1, r4
   2287c:	4650      	mov	r0, sl
   2287e:	f04f 020a 	mov.w	r2, #10
   22882:	f04f 0300 	mov.w	r3, #0
   22886:	d104      	bne.n	22892 <_dtoa_r+0xa82>
   22888:	f000 fd22 	bl	232d0 <__multadd>
   2288c:	4604      	mov	r4, r0
   2288e:	4607      	mov	r7, r0
   22890:	e76e      	b.n	22770 <_dtoa_r+0x960>
   22892:	f000 fd1d 	bl	232d0 <__multadd>
   22896:	4639      	mov	r1, r7
   22898:	4604      	mov	r4, r0
   2289a:	220a      	movs	r2, #10
   2289c:	4650      	mov	r0, sl
   2289e:	2300      	movs	r3, #0
   228a0:	f000 fd16 	bl	232d0 <__multadd>
   228a4:	4607      	mov	r7, r0
   228a6:	e763      	b.n	22770 <_dtoa_r+0x960>
   228a8:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
   228aa:	4658      	mov	r0, fp
   228ac:	4629      	mov	r1, r5
   228ae:	f7ff fa1d 	bl	21cec <quorem>
   228b2:	9f0a      	ldr	r7, [sp, #40]	; 0x28
   228b4:	f100 0c30 	add.w	ip, r0, #48	; 0x30
   228b8:	f807 c006 	strb.w	ip, [r7, r6]
   228bc:	9f07      	ldr	r7, [sp, #28]
   228be:	3601      	adds	r6, #1
   228c0:	42be      	cmp	r6, r7
   228c2:	db07      	blt.n	228d4 <_dtoa_r+0xac4>
   228c4:	9e0a      	ldr	r6, [sp, #40]	; 0x28
   228c6:	2f01      	cmp	r7, #1
   228c8:	bfac      	ite	ge
   228ca:	19f6      	addge	r6, r6, r7
   228cc:	3601      	addlt	r6, #1
   228ce:	4627      	mov	r7, r4
   228d0:	2400      	movs	r4, #0
   228d2:	e007      	b.n	228e4 <_dtoa_r+0xad4>
   228d4:	4659      	mov	r1, fp
   228d6:	4650      	mov	r0, sl
   228d8:	220a      	movs	r2, #10
   228da:	2300      	movs	r3, #0
   228dc:	f000 fcf8 	bl	232d0 <__multadd>
   228e0:	4683      	mov	fp, r0
   228e2:	e7e2      	b.n	228aa <_dtoa_r+0xa9a>
   228e4:	4659      	mov	r1, fp
   228e6:	2201      	movs	r2, #1
   228e8:	4650      	mov	r0, sl
   228ea:	f8cd c008 	str.w	ip, [sp, #8]
   228ee:	f000 fea7 	bl	23640 <__lshift>
   228f2:	4629      	mov	r1, r5
   228f4:	4683      	mov	fp, r0
   228f6:	f000 fef6 	bl	236e6 <__mcmp>
   228fa:	2800      	cmp	r0, #0
   228fc:	f8dd c008 	ldr.w	ip, [sp, #8]
   22900:	dc03      	bgt.n	2290a <_dtoa_r+0xafa>
   22902:	d114      	bne.n	2292e <_dtoa_r+0xb1e>
   22904:	f01c 0f01 	tst.w	ip, #1
   22908:	d011      	beq.n	2292e <_dtoa_r+0xb1e>
   2290a:	f816 3c01 	ldrb.w	r3, [r6, #-1]
   2290e:	46b0      	mov	r8, r6
   22910:	2b39      	cmp	r3, #57	; 0x39
   22912:	f106 36ff 	add.w	r6, r6, #4294967295
   22916:	d107      	bne.n	22928 <_dtoa_r+0xb18>
   22918:	980a      	ldr	r0, [sp, #40]	; 0x28
   2291a:	42b0      	cmp	r0, r6
   2291c:	d1f5      	bne.n	2290a <_dtoa_r+0xafa>
   2291e:	2331      	movs	r3, #49	; 0x31
   22920:	f109 0901 	add.w	r9, r9, #1
   22924:	7003      	strb	r3, [r0, #0]
   22926:	e008      	b.n	2293a <_dtoa_r+0xb2a>
   22928:	3301      	adds	r3, #1
   2292a:	7033      	strb	r3, [r6, #0]
   2292c:	e005      	b.n	2293a <_dtoa_r+0xb2a>
   2292e:	46b0      	mov	r8, r6
   22930:	f818 3c01 	ldrb.w	r3, [r8, #-1]
   22934:	3e01      	subs	r6, #1
   22936:	2b30      	cmp	r3, #48	; 0x30
   22938:	d0f9      	beq.n	2292e <_dtoa_r+0xb1e>
   2293a:	4650      	mov	r0, sl
   2293c:	4629      	mov	r1, r5
   2293e:	f000 fcb0 	bl	232a2 <_Bfree>
   22942:	b16f      	cbz	r7, 22960 <_dtoa_r+0xb50>
   22944:	b12c      	cbz	r4, 22952 <_dtoa_r+0xb42>
   22946:	42bc      	cmp	r4, r7
   22948:	d003      	beq.n	22952 <_dtoa_r+0xb42>
   2294a:	4650      	mov	r0, sl
   2294c:	4621      	mov	r1, r4
   2294e:	f000 fca8 	bl	232a2 <_Bfree>
   22952:	4650      	mov	r0, sl
   22954:	4639      	mov	r1, r7
   22956:	f000 fca4 	bl	232a2 <_Bfree>
   2295a:	e001      	b.n	22960 <_dtoa_r+0xb50>
   2295c:	f8dd 9040 	ldr.w	r9, [sp, #64]	; 0x40
   22960:	4650      	mov	r0, sl
   22962:	4659      	mov	r1, fp
   22964:	f000 fc9d 	bl	232a2 <_Bfree>
   22968:	2300      	movs	r3, #0
   2296a:	9f26      	ldr	r7, [sp, #152]	; 0x98
   2296c:	f888 3000 	strb.w	r3, [r8]
   22970:	f109 0301 	add.w	r3, r9, #1
   22974:	603b      	str	r3, [r7, #0]
   22976:	9f28      	ldr	r7, [sp, #160]	; 0xa0
   22978:	b127      	cbz	r7, 22984 <_dtoa_r+0xb74>
   2297a:	f8c7 8000 	str.w	r8, [r7]
   2297e:	e001      	b.n	22984 <_dtoa_r+0xb74>
   22980:	4802      	ldr	r0, [pc, #8]	; (2298c <_dtoa_r+0xb7c>)
   22982:	e000      	b.n	22986 <_dtoa_r+0xb76>
   22984:	980a      	ldr	r0, [sp, #40]	; 0x28
   22986:	b01b      	add	sp, #108	; 0x6c
   22988:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2298c:	000264ec 	.word	0x000264ec

00022990 <__sflush_r>:
__sflush_r():
   22990:	898a      	ldrh	r2, [r1, #12]
   22992:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   22996:	4605      	mov	r5, r0
   22998:	0710      	lsls	r0, r2, #28
   2299a:	460c      	mov	r4, r1
   2299c:	d457      	bmi.n	22a4e <__sflush_r+0xbe>
   2299e:	684b      	ldr	r3, [r1, #4]
   229a0:	2b00      	cmp	r3, #0
   229a2:	dc02      	bgt.n	229aa <__sflush_r+0x1a>
   229a4:	6c0b      	ldr	r3, [r1, #64]	; 0x40
   229a6:	2b00      	cmp	r3, #0
   229a8:	dd18      	ble.n	229dc <__sflush_r+0x4c>
   229aa:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
   229ac:	b1b6      	cbz	r6, 229dc <__sflush_r+0x4c>
   229ae:	f402 5280 	and.w	r2, r2, #4096	; 0x1000
   229b2:	2300      	movs	r3, #0
   229b4:	b292      	uxth	r2, r2
   229b6:	682f      	ldr	r7, [r5, #0]
   229b8:	602b      	str	r3, [r5, #0]
   229ba:	b10a      	cbz	r2, 229c0 <__sflush_r+0x30>
   229bc:	6d62      	ldr	r2, [r4, #84]	; 0x54
   229be:	e010      	b.n	229e2 <__sflush_r+0x52>
   229c0:	6a21      	ldr	r1, [r4, #32]
   229c2:	4628      	mov	r0, r5
   229c4:	2301      	movs	r3, #1
   229c6:	47b0      	blx	r6
   229c8:	1c41      	adds	r1, r0, #1
   229ca:	4602      	mov	r2, r0
   229cc:	d109      	bne.n	229e2 <__sflush_r+0x52>
   229ce:	682b      	ldr	r3, [r5, #0]
   229d0:	b13b      	cbz	r3, 229e2 <__sflush_r+0x52>
   229d2:	2b1d      	cmp	r3, #29
   229d4:	d001      	beq.n	229da <__sflush_r+0x4a>
   229d6:	2b16      	cmp	r3, #22
   229d8:	d146      	bne.n	22a68 <__sflush_r+0xd8>
   229da:	602f      	str	r7, [r5, #0]
   229dc:	2000      	movs	r0, #0
   229de:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   229e2:	89a3      	ldrh	r3, [r4, #12]
   229e4:	075b      	lsls	r3, r3, #29
   229e6:	d505      	bpl.n	229f4 <__sflush_r+0x64>
   229e8:	6863      	ldr	r3, [r4, #4]
   229ea:	1ad2      	subs	r2, r2, r3
   229ec:	6b63      	ldr	r3, [r4, #52]	; 0x34
   229ee:	b10b      	cbz	r3, 229f4 <__sflush_r+0x64>
   229f0:	6c23      	ldr	r3, [r4, #64]	; 0x40
   229f2:	1ad2      	subs	r2, r2, r3
   229f4:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
   229f6:	4628      	mov	r0, r5
   229f8:	6a21      	ldr	r1, [r4, #32]
   229fa:	2300      	movs	r3, #0
   229fc:	47b0      	blx	r6
   229fe:	1c46      	adds	r6, r0, #1
   22a00:	89a2      	ldrh	r2, [r4, #12]
   22a02:	d105      	bne.n	22a10 <__sflush_r+0x80>
   22a04:	682b      	ldr	r3, [r5, #0]
   22a06:	b11b      	cbz	r3, 22a10 <__sflush_r+0x80>
   22a08:	2b1d      	cmp	r3, #29
   22a0a:	d001      	beq.n	22a10 <__sflush_r+0x80>
   22a0c:	2b16      	cmp	r3, #22
   22a0e:	d119      	bne.n	22a44 <__sflush_r+0xb4>
   22a10:	2300      	movs	r3, #0
   22a12:	6063      	str	r3, [r4, #4]
   22a14:	6923      	ldr	r3, [r4, #16]
   22a16:	04d1      	lsls	r1, r2, #19
   22a18:	6023      	str	r3, [r4, #0]
   22a1a:	d504      	bpl.n	22a26 <__sflush_r+0x96>
   22a1c:	1c42      	adds	r2, r0, #1
   22a1e:	d101      	bne.n	22a24 <__sflush_r+0x94>
   22a20:	682b      	ldr	r3, [r5, #0]
   22a22:	b903      	cbnz	r3, 22a26 <__sflush_r+0x96>
   22a24:	6560      	str	r0, [r4, #84]	; 0x54
   22a26:	6b61      	ldr	r1, [r4, #52]	; 0x34
   22a28:	602f      	str	r7, [r5, #0]
   22a2a:	2900      	cmp	r1, #0
   22a2c:	d0d6      	beq.n	229dc <__sflush_r+0x4c>
   22a2e:	f104 0344 	add.w	r3, r4, #68	; 0x44
   22a32:	4299      	cmp	r1, r3
   22a34:	d002      	beq.n	22a3c <__sflush_r+0xac>
   22a36:	4628      	mov	r0, r5
   22a38:	f7fb fe5a 	bl	1e6f0 <_free_r>
   22a3c:	2000      	movs	r0, #0
   22a3e:	6360      	str	r0, [r4, #52]	; 0x34
   22a40:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   22a44:	f042 0240 	orr.w	r2, r2, #64	; 0x40
   22a48:	81a2      	strh	r2, [r4, #12]
   22a4a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   22a4e:	690e      	ldr	r6, [r1, #16]
   22a50:	2e00      	cmp	r6, #0
   22a52:	d0c3      	beq.n	229dc <__sflush_r+0x4c>
   22a54:	680b      	ldr	r3, [r1, #0]
   22a56:	600e      	str	r6, [r1, #0]
   22a58:	ebc6 0803 	rsb	r8, r6, r3
   22a5c:	0793      	lsls	r3, r2, #30
   22a5e:	bf0c      	ite	eq
   22a60:	694b      	ldreq	r3, [r1, #20]
   22a62:	2300      	movne	r3, #0
   22a64:	608b      	str	r3, [r1, #8]
   22a66:	e012      	b.n	22a8e <__sflush_r+0xfe>
   22a68:	89a3      	ldrh	r3, [r4, #12]
   22a6a:	f04f 30ff 	mov.w	r0, #4294967295
   22a6e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   22a72:	81a3      	strh	r3, [r4, #12]
   22a74:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   22a78:	6aa7      	ldr	r7, [r4, #40]	; 0x28
   22a7a:	4628      	mov	r0, r5
   22a7c:	6a21      	ldr	r1, [r4, #32]
   22a7e:	4632      	mov	r2, r6
   22a80:	4643      	mov	r3, r8
   22a82:	47b8      	blx	r7
   22a84:	2800      	cmp	r0, #0
   22a86:	ddef      	ble.n	22a68 <__sflush_r+0xd8>
   22a88:	4406      	add	r6, r0
   22a8a:	ebc0 0808 	rsb	r8, r0, r8
   22a8e:	f1b8 0f00 	cmp.w	r8, #0
   22a92:	dcf1      	bgt.n	22a78 <__sflush_r+0xe8>
   22a94:	e7a2      	b.n	229dc <__sflush_r+0x4c>
	...

00022a98 <_fflush_r>:
_fflush_r():
   22a98:	b538      	push	{r3, r4, r5, lr}
   22a9a:	690b      	ldr	r3, [r1, #16]
   22a9c:	4605      	mov	r5, r0
   22a9e:	460c      	mov	r4, r1
   22aa0:	b1db      	cbz	r3, 22ada <_fflush_r+0x42>
   22aa2:	b118      	cbz	r0, 22aac <_fflush_r+0x14>
   22aa4:	6983      	ldr	r3, [r0, #24]
   22aa6:	b90b      	cbnz	r3, 22aac <_fflush_r+0x14>
   22aa8:	f7fb f8b0 	bl	1dc0c <__sinit>
   22aac:	4b0c      	ldr	r3, [pc, #48]	; (22ae0 <_fflush_r+0x48>)
   22aae:	429c      	cmp	r4, r3
   22ab0:	d101      	bne.n	22ab6 <_fflush_r+0x1e>
   22ab2:	686c      	ldr	r4, [r5, #4]
   22ab4:	e008      	b.n	22ac8 <_fflush_r+0x30>
   22ab6:	4b0b      	ldr	r3, [pc, #44]	; (22ae4 <_fflush_r+0x4c>)
   22ab8:	429c      	cmp	r4, r3
   22aba:	d101      	bne.n	22ac0 <_fflush_r+0x28>
   22abc:	68ac      	ldr	r4, [r5, #8]
   22abe:	e003      	b.n	22ac8 <_fflush_r+0x30>
   22ac0:	4b09      	ldr	r3, [pc, #36]	; (22ae8 <_fflush_r+0x50>)
   22ac2:	429c      	cmp	r4, r3
   22ac4:	bf08      	it	eq
   22ac6:	68ec      	ldreq	r4, [r5, #12]
   22ac8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   22acc:	b12b      	cbz	r3, 22ada <_fflush_r+0x42>
   22ace:	4628      	mov	r0, r5
   22ad0:	4621      	mov	r1, r4
   22ad2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   22ad6:	f7ff bf5b 	b.w	22990 <__sflush_r>
   22ada:	2000      	movs	r0, #0
   22adc:	bd38      	pop	{r3, r4, r5, pc}
   22ade:	bf00      	nop
   22ae0:	000270cc 	.word	0x000270cc
   22ae4:	000270ec 	.word	0x000270ec
   22ae8:	0002710c 	.word	0x0002710c

00022aec <fflush>:
fflush():
   22aec:	4601      	mov	r1, r0
   22aee:	b920      	cbnz	r0, 22afa <fflush+0xe>
   22af0:	4b04      	ldr	r3, [pc, #16]	; (22b04 <fflush+0x18>)
   22af2:	4905      	ldr	r1, [pc, #20]	; (22b08 <fflush+0x1c>)
   22af4:	6818      	ldr	r0, [r3, #0]
   22af6:	f7fb b90f 	b.w	1dd18 <_fwalk_reent>
   22afa:	4b04      	ldr	r3, [pc, #16]	; (22b0c <fflush+0x20>)
   22afc:	6818      	ldr	r0, [r3, #0]
   22afe:	f7ff bfcb 	b.w	22a98 <_fflush_r>
   22b02:	bf00      	nop
   22b04:	00027130 	.word	0x00027130
   22b08:	00022a99 	.word	0x00022a99
   22b0c:	2007c150 	.word	0x2007c150

00022b10 <rshift>:
rshift():
   22b10:	b5f0      	push	{r4, r5, r6, r7, lr}
   22b12:	6906      	ldr	r6, [r0, #16]
   22b14:	114b      	asrs	r3, r1, #5
   22b16:	42b3      	cmp	r3, r6
   22b18:	f100 0214 	add.w	r2, r0, #20
   22b1c:	da26      	bge.n	22b6c <rshift+0x5c>
   22b1e:	f011 011f 	ands.w	r1, r1, #31
   22b22:	eb02 0686 	add.w	r6, r2, r6, lsl #2
   22b26:	eb02 0483 	add.w	r4, r2, r3, lsl #2
   22b2a:	d101      	bne.n	22b30 <rshift+0x20>
   22b2c:	4613      	mov	r3, r2
   22b2e:	e016      	b.n	22b5e <rshift+0x4e>
   22b30:	f852 5023 	ldr.w	r5, [r2, r3, lsl #2]
   22b34:	f1c1 0c20 	rsb	ip, r1, #32
   22b38:	40cd      	lsrs	r5, r1
   22b3a:	3404      	adds	r4, #4
   22b3c:	4613      	mov	r3, r2
   22b3e:	42b4      	cmp	r4, r6
   22b40:	d209      	bcs.n	22b56 <rshift+0x46>
   22b42:	6827      	ldr	r7, [r4, #0]
   22b44:	fa07 f70c 	lsl.w	r7, r7, ip
   22b48:	433d      	orrs	r5, r7
   22b4a:	f843 5b04 	str.w	r5, [r3], #4
   22b4e:	f854 5b04 	ldr.w	r5, [r4], #4
   22b52:	40cd      	lsrs	r5, r1
   22b54:	e7f3      	b.n	22b3e <rshift+0x2e>
   22b56:	601d      	str	r5, [r3, #0]
   22b58:	b14d      	cbz	r5, 22b6e <rshift+0x5e>
   22b5a:	3304      	adds	r3, #4
   22b5c:	e007      	b.n	22b6e <rshift+0x5e>
   22b5e:	42b4      	cmp	r4, r6
   22b60:	d205      	bcs.n	22b6e <rshift+0x5e>
   22b62:	f854 1b04 	ldr.w	r1, [r4], #4
   22b66:	f843 1b04 	str.w	r1, [r3], #4
   22b6a:	e7f8      	b.n	22b5e <rshift+0x4e>
   22b6c:	4613      	mov	r3, r2
   22b6e:	1a9b      	subs	r3, r3, r2
   22b70:	109b      	asrs	r3, r3, #2
   22b72:	6103      	str	r3, [r0, #16]
   22b74:	b903      	cbnz	r3, 22b78 <rshift+0x68>
   22b76:	6143      	str	r3, [r0, #20]
   22b78:	bdf0      	pop	{r4, r5, r6, r7, pc}

00022b7a <__hexdig_fun>:
__hexdig_fun():
   22b7a:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
   22b7e:	2b09      	cmp	r3, #9
   22b80:	d801      	bhi.n	22b86 <__hexdig_fun+0xc>
   22b82:	3820      	subs	r0, #32
   22b84:	e00a      	b.n	22b9c <__hexdig_fun+0x22>
   22b86:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
   22b8a:	2b05      	cmp	r3, #5
   22b8c:	d801      	bhi.n	22b92 <__hexdig_fun+0x18>
   22b8e:	3847      	subs	r0, #71	; 0x47
   22b90:	e004      	b.n	22b9c <__hexdig_fun+0x22>
   22b92:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
   22b96:	2b05      	cmp	r3, #5
   22b98:	d802      	bhi.n	22ba0 <__hexdig_fun+0x26>
   22b9a:	3827      	subs	r0, #39	; 0x27
   22b9c:	b2c0      	uxtb	r0, r0
   22b9e:	4770      	bx	lr
   22ba0:	2000      	movs	r0, #0
   22ba2:	4770      	bx	lr

00022ba4 <__gethex>:
__gethex():
   22ba4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22ba8:	b089      	sub	sp, #36	; 0x24
   22baa:	9105      	str	r1, [sp, #20]
   22bac:	9306      	str	r3, [sp, #24]
   22bae:	4690      	mov	r8, r2
   22bb0:	9003      	str	r0, [sp, #12]
   22bb2:	f000 fadf 	bl	23174 <_localeconv_r>
   22bb6:	6800      	ldr	r0, [r0, #0]
   22bb8:	f04f 0b00 	mov.w	fp, #0
   22bbc:	9004      	str	r0, [sp, #16]
   22bbe:	f7fc f983 	bl	1eec8 <strlen>
   22bc2:	9b04      	ldr	r3, [sp, #16]
   22bc4:	9905      	ldr	r1, [sp, #20]
   22bc6:	4403      	add	r3, r0
   22bc8:	f813 3c01 	ldrb.w	r3, [r3, #-1]
   22bcc:	9002      	str	r0, [sp, #8]
   22bce:	9307      	str	r3, [sp, #28]
   22bd0:	680b      	ldr	r3, [r1, #0]
   22bd2:	3302      	adds	r3, #2
   22bd4:	461f      	mov	r7, r3
   22bd6:	f813 0b01 	ldrb.w	r0, [r3], #1
   22bda:	2830      	cmp	r0, #48	; 0x30
   22bdc:	d102      	bne.n	22be4 <__gethex+0x40>
   22bde:	f10b 0b01 	add.w	fp, fp, #1
   22be2:	e7f7      	b.n	22bd4 <__gethex+0x30>
   22be4:	f7ff ffc9 	bl	22b7a <__hexdig_fun>
   22be8:	4606      	mov	r6, r0
   22bea:	b9f8      	cbnz	r0, 22c2c <__gethex+0x88>
   22bec:	4638      	mov	r0, r7
   22bee:	9904      	ldr	r1, [sp, #16]
   22bf0:	9a02      	ldr	r2, [sp, #8]
   22bf2:	f7fc f993 	bl	1ef1c <strncmp>
   22bf6:	2800      	cmp	r0, #0
   22bf8:	d139      	bne.n	22c6e <__gethex+0xca>
   22bfa:	9b02      	ldr	r3, [sp, #8]
   22bfc:	9d02      	ldr	r5, [sp, #8]
   22bfe:	5cf8      	ldrb	r0, [r7, r3]
   22c00:	443d      	add	r5, r7
   22c02:	f7ff ffba 	bl	22b7a <__hexdig_fun>
   22c06:	2800      	cmp	r0, #0
   22c08:	d033      	beq.n	22c72 <__gethex+0xce>
   22c0a:	462b      	mov	r3, r5
   22c0c:	7818      	ldrb	r0, [r3, #0]
   22c0e:	461f      	mov	r7, r3
   22c10:	2830      	cmp	r0, #48	; 0x30
   22c12:	f103 0301 	add.w	r3, r3, #1
   22c16:	d0f9      	beq.n	22c0c <__gethex+0x68>
   22c18:	f7ff ffaf 	bl	22b7a <__hexdig_fun>
   22c1c:	f1d0 0401 	rsbs	r4, r0, #1
   22c20:	bf38      	it	cc
   22c22:	2400      	movcc	r4, #0
   22c24:	462e      	mov	r6, r5
   22c26:	f04f 0b01 	mov.w	fp, #1
   22c2a:	e001      	b.n	22c30 <__gethex+0x8c>
   22c2c:	2400      	movs	r4, #0
   22c2e:	4626      	mov	r6, r4
   22c30:	46b9      	mov	r9, r7
   22c32:	464d      	mov	r5, r9
   22c34:	7828      	ldrb	r0, [r5, #0]
   22c36:	f109 0901 	add.w	r9, r9, #1
   22c3a:	f7ff ff9e 	bl	22b7a <__hexdig_fun>
   22c3e:	2800      	cmp	r0, #0
   22c40:	d1f7      	bne.n	22c32 <__gethex+0x8e>
   22c42:	4628      	mov	r0, r5
   22c44:	9904      	ldr	r1, [sp, #16]
   22c46:	9a02      	ldr	r2, [sp, #8]
   22c48:	f7fc f968 	bl	1ef1c <strncmp>
   22c4c:	b958      	cbnz	r0, 22c66 <__gethex+0xc2>
   22c4e:	b95e      	cbnz	r6, 22c68 <__gethex+0xc4>
   22c50:	9e02      	ldr	r6, [sp, #8]
   22c52:	442e      	add	r6, r5
   22c54:	46b1      	mov	r9, r6
   22c56:	464d      	mov	r5, r9
   22c58:	7828      	ldrb	r0, [r5, #0]
   22c5a:	f109 0901 	add.w	r9, r9, #1
   22c5e:	f7ff ff8c 	bl	22b7a <__hexdig_fun>
   22c62:	2800      	cmp	r0, #0
   22c64:	d1f7      	bne.n	22c56 <__gethex+0xb2>
   22c66:	b136      	cbz	r6, 22c76 <__gethex+0xd2>
   22c68:	1b76      	subs	r6, r6, r5
   22c6a:	00b6      	lsls	r6, r6, #2
   22c6c:	e003      	b.n	22c76 <__gethex+0xd2>
   22c6e:	463d      	mov	r5, r7
   22c70:	e000      	b.n	22c74 <__gethex+0xd0>
   22c72:	4606      	mov	r6, r0
   22c74:	2401      	movs	r4, #1
   22c76:	782b      	ldrb	r3, [r5, #0]
   22c78:	2b50      	cmp	r3, #80	; 0x50
   22c7a:	d001      	beq.n	22c80 <__gethex+0xdc>
   22c7c:	2b70      	cmp	r3, #112	; 0x70
   22c7e:	d134      	bne.n	22cea <__gethex+0x146>
   22c80:	786b      	ldrb	r3, [r5, #1]
   22c82:	2b2b      	cmp	r3, #43	; 0x2b
   22c84:	d005      	beq.n	22c92 <__gethex+0xee>
   22c86:	2b2d      	cmp	r3, #45	; 0x2d
   22c88:	d005      	beq.n	22c96 <__gethex+0xf2>
   22c8a:	f105 0901 	add.w	r9, r5, #1
   22c8e:	2100      	movs	r1, #0
   22c90:	e004      	b.n	22c9c <__gethex+0xf8>
   22c92:	2100      	movs	r1, #0
   22c94:	e000      	b.n	22c98 <__gethex+0xf4>
   22c96:	2101      	movs	r1, #1
   22c98:	f105 0902 	add.w	r9, r5, #2
   22c9c:	f899 0000 	ldrb.w	r0, [r9]
   22ca0:	9101      	str	r1, [sp, #4]
   22ca2:	f7ff ff6a 	bl	22b7a <__hexdig_fun>
   22ca6:	1e43      	subs	r3, r0, #1
   22ca8:	b2db      	uxtb	r3, r3
   22caa:	2b18      	cmp	r3, #24
   22cac:	9901      	ldr	r1, [sp, #4]
   22cae:	d81c      	bhi.n	22cea <__gethex+0x146>
   22cb0:	f1a0 0a10 	sub.w	sl, r0, #16
   22cb4:	f109 0301 	add.w	r3, r9, #1
   22cb8:	4699      	mov	r9, r3
   22cba:	f899 0000 	ldrb.w	r0, [r9]
   22cbe:	3301      	adds	r3, #1
   22cc0:	9101      	str	r1, [sp, #4]
   22cc2:	9300      	str	r3, [sp, #0]
   22cc4:	f7ff ff59 	bl	22b7a <__hexdig_fun>
   22cc8:	1e42      	subs	r2, r0, #1
   22cca:	b2d2      	uxtb	r2, r2
   22ccc:	2a18      	cmp	r2, #24
   22cce:	9901      	ldr	r1, [sp, #4]
   22cd0:	9b00      	ldr	r3, [sp, #0]
   22cd2:	d805      	bhi.n	22ce0 <__gethex+0x13c>
   22cd4:	220a      	movs	r2, #10
   22cd6:	fb02 0a0a 	mla	sl, r2, sl, r0
   22cda:	f1aa 0a10 	sub.w	sl, sl, #16
   22cde:	e7eb      	b.n	22cb8 <__gethex+0x114>
   22ce0:	b109      	cbz	r1, 22ce6 <__gethex+0x142>
   22ce2:	f1ca 0a00 	rsb	sl, sl, #0
   22ce6:	4456      	add	r6, sl
   22ce8:	e000      	b.n	22cec <__gethex+0x148>
   22cea:	46a9      	mov	r9, r5
   22cec:	9905      	ldr	r1, [sp, #20]
   22cee:	f8c1 9000 	str.w	r9, [r1]
   22cf2:	b12c      	cbz	r4, 22d00 <__gethex+0x15c>
   22cf4:	f1bb 0f00 	cmp.w	fp, #0
   22cf8:	bf0c      	ite	eq
   22cfa:	2006      	moveq	r0, #6
   22cfc:	2000      	movne	r0, #0
   22cfe:	e17d      	b.n	22ffc <__gethex+0x458>
   22d00:	1beb      	subs	r3, r5, r7
   22d02:	3b01      	subs	r3, #1
   22d04:	4621      	mov	r1, r4
   22d06:	2b07      	cmp	r3, #7
   22d08:	dd02      	ble.n	22d10 <__gethex+0x16c>
   22d0a:	3101      	adds	r1, #1
   22d0c:	105b      	asrs	r3, r3, #1
   22d0e:	e7fa      	b.n	22d06 <__gethex+0x162>
   22d10:	9803      	ldr	r0, [sp, #12]
   22d12:	f000 fa91 	bl	23238 <_Balloc>
   22d16:	f04f 0900 	mov.w	r9, #0
   22d1a:	f100 0a14 	add.w	sl, r0, #20
   22d1e:	4604      	mov	r4, r0
   22d20:	4653      	mov	r3, sl
   22d22:	46cb      	mov	fp, r9
   22d24:	42bd      	cmp	r5, r7
   22d26:	d933      	bls.n	22d90 <__gethex+0x1ec>
   22d28:	1e6a      	subs	r2, r5, #1
   22d2a:	9205      	str	r2, [sp, #20]
   22d2c:	9907      	ldr	r1, [sp, #28]
   22d2e:	f815 2c01 	ldrb.w	r2, [r5, #-1]
   22d32:	428a      	cmp	r2, r1
   22d34:	d009      	beq.n	22d4a <__gethex+0x1a6>
   22d36:	f1bb 0f20 	cmp.w	fp, #32
   22d3a:	d117      	bne.n	22d6c <__gethex+0x1c8>
   22d3c:	f8c3 9000 	str.w	r9, [r3]
   22d40:	f04f 0900 	mov.w	r9, #0
   22d44:	3304      	adds	r3, #4
   22d46:	46cb      	mov	fp, r9
   22d48:	e010      	b.n	22d6c <__gethex+0x1c8>
   22d4a:	9a02      	ldr	r2, [sp, #8]
   22d4c:	9905      	ldr	r1, [sp, #20]
   22d4e:	f1c2 0c01 	rsb	ip, r2, #1
   22d52:	448c      	add	ip, r1
   22d54:	45bc      	cmp	ip, r7
   22d56:	d3ee      	bcc.n	22d36 <__gethex+0x192>
   22d58:	4660      	mov	r0, ip
   22d5a:	9904      	ldr	r1, [sp, #16]
   22d5c:	e88d 1008 	stmia.w	sp, {r3, ip}
   22d60:	f7fc f8dc 	bl	1ef1c <strncmp>
   22d64:	e89d 1008 	ldmia.w	sp, {r3, ip}
   22d68:	b180      	cbz	r0, 22d8c <__gethex+0x1e8>
   22d6a:	e7e4      	b.n	22d36 <__gethex+0x192>
   22d6c:	f815 0c01 	ldrb.w	r0, [r5, #-1]
   22d70:	9300      	str	r3, [sp, #0]
   22d72:	f7ff ff02 	bl	22b7a <__hexdig_fun>
   22d76:	f000 000f 	and.w	r0, r0, #15
   22d7a:	fa00 f00b 	lsl.w	r0, r0, fp
   22d7e:	f8dd c014 	ldr.w	ip, [sp, #20]
   22d82:	9b00      	ldr	r3, [sp, #0]
   22d84:	ea49 0900 	orr.w	r9, r9, r0
   22d88:	f10b 0b04 	add.w	fp, fp, #4
   22d8c:	4665      	mov	r5, ip
   22d8e:	e7c9      	b.n	22d24 <__gethex+0x180>
   22d90:	f843 9b04 	str.w	r9, [r3], #4
   22d94:	ebca 0303 	rsb	r3, sl, r3
   22d98:	109b      	asrs	r3, r3, #2
   22d9a:	6123      	str	r3, [r4, #16]
   22d9c:	4648      	mov	r0, r9
   22d9e:	015f      	lsls	r7, r3, #5
   22da0:	f000 fb12 	bl	233c8 <__hi0bits>
   22da4:	f8d8 5000 	ldr.w	r5, [r8]
   22da8:	1a38      	subs	r0, r7, r0
   22daa:	42a8      	cmp	r0, r5
   22dac:	dd26      	ble.n	22dfc <__gethex+0x258>
   22dae:	1b47      	subs	r7, r0, r5
   22db0:	4639      	mov	r1, r7
   22db2:	4620      	mov	r0, r4
   22db4:	f000 fe19 	bl	239ea <__any_on>
   22db8:	b1c8      	cbz	r0, 22dee <__gethex+0x24a>
   22dba:	1e7b      	subs	r3, r7, #1
   22dbc:	f003 011f 	and.w	r1, r3, #31
   22dc0:	f04f 0901 	mov.w	r9, #1
   22dc4:	fa09 f101 	lsl.w	r1, r9, r1
   22dc8:	115a      	asrs	r2, r3, #5
   22dca:	f85a 2022 	ldr.w	r2, [sl, r2, lsl #2]
   22dce:	4211      	tst	r1, r2
   22dd0:	d00e      	beq.n	22df0 <__gethex+0x24c>
   22dd2:	454b      	cmp	r3, r9
   22dd4:	dc02      	bgt.n	22ddc <__gethex+0x238>
   22dd6:	f04f 0902 	mov.w	r9, #2
   22dda:	e009      	b.n	22df0 <__gethex+0x24c>
   22ddc:	4620      	mov	r0, r4
   22dde:	1eb9      	subs	r1, r7, #2
   22de0:	f000 fe03 	bl	239ea <__any_on>
   22de4:	2800      	cmp	r0, #0
   22de6:	d0f6      	beq.n	22dd6 <__gethex+0x232>
   22de8:	f04f 0903 	mov.w	r9, #3
   22dec:	e000      	b.n	22df0 <__gethex+0x24c>
   22dee:	4681      	mov	r9, r0
   22df0:	4620      	mov	r0, r4
   22df2:	4639      	mov	r1, r7
   22df4:	f7ff fe8c 	bl	22b10 <rshift>
   22df8:	443e      	add	r6, r7
   22dfa:	e00c      	b.n	22e16 <__gethex+0x272>
   22dfc:	da09      	bge.n	22e12 <__gethex+0x26e>
   22dfe:	1a2f      	subs	r7, r5, r0
   22e00:	4621      	mov	r1, r4
   22e02:	9803      	ldr	r0, [sp, #12]
   22e04:	463a      	mov	r2, r7
   22e06:	f000 fc1b 	bl	23640 <__lshift>
   22e0a:	1bf6      	subs	r6, r6, r7
   22e0c:	4604      	mov	r4, r0
   22e0e:	f100 0a14 	add.w	sl, r0, #20
   22e12:	f04f 0900 	mov.w	r9, #0
   22e16:	f8d8 3008 	ldr.w	r3, [r8, #8]
   22e1a:	429e      	cmp	r6, r3
   22e1c:	dd08      	ble.n	22e30 <__gethex+0x28c>
   22e1e:	9803      	ldr	r0, [sp, #12]
   22e20:	4621      	mov	r1, r4
   22e22:	f000 fa3e 	bl	232a2 <_Bfree>
   22e26:	9a12      	ldr	r2, [sp, #72]	; 0x48
   22e28:	2300      	movs	r3, #0
   22e2a:	6013      	str	r3, [r2, #0]
   22e2c:	20a3      	movs	r0, #163	; 0xa3
   22e2e:	e0e5      	b.n	22ffc <__gethex+0x458>
   22e30:	f8d8 3004 	ldr.w	r3, [r8, #4]
   22e34:	429e      	cmp	r6, r3
   22e36:	da54      	bge.n	22ee2 <__gethex+0x33e>
   22e38:	1b9e      	subs	r6, r3, r6
   22e3a:	42ae      	cmp	r6, r5
   22e3c:	db2e      	blt.n	22e9c <__gethex+0x2f8>
   22e3e:	f8d8 300c 	ldr.w	r3, [r8, #12]
   22e42:	2b02      	cmp	r3, #2
   22e44:	d01a      	beq.n	22e7c <__gethex+0x2d8>
   22e46:	2b03      	cmp	r3, #3
   22e48:	d01c      	beq.n	22e84 <__gethex+0x2e0>
   22e4a:	2b01      	cmp	r3, #1
   22e4c:	d11d      	bne.n	22e8a <__gethex+0x2e6>
   22e4e:	42ae      	cmp	r6, r5
   22e50:	d11b      	bne.n	22e8a <__gethex+0x2e6>
   22e52:	2d01      	cmp	r5, #1
   22e54:	dc0b      	bgt.n	22e6e <__gethex+0x2ca>
   22e56:	f8d8 3004 	ldr.w	r3, [r8, #4]
   22e5a:	9906      	ldr	r1, [sp, #24]
   22e5c:	2062      	movs	r0, #98	; 0x62
   22e5e:	600b      	str	r3, [r1, #0]
   22e60:	2301      	movs	r3, #1
   22e62:	6123      	str	r3, [r4, #16]
   22e64:	f8ca 3000 	str.w	r3, [sl]
   22e68:	9b12      	ldr	r3, [sp, #72]	; 0x48
   22e6a:	601c      	str	r4, [r3, #0]
   22e6c:	e0c6      	b.n	22ffc <__gethex+0x458>
   22e6e:	4620      	mov	r0, r4
   22e70:	1e69      	subs	r1, r5, #1
   22e72:	f000 fdba 	bl	239ea <__any_on>
   22e76:	2800      	cmp	r0, #0
   22e78:	d1ed      	bne.n	22e56 <__gethex+0x2b2>
   22e7a:	e006      	b.n	22e8a <__gethex+0x2e6>
   22e7c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   22e7e:	2b00      	cmp	r3, #0
   22e80:	d0e9      	beq.n	22e56 <__gethex+0x2b2>
   22e82:	e002      	b.n	22e8a <__gethex+0x2e6>
   22e84:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   22e86:	2b00      	cmp	r3, #0
   22e88:	d1e5      	bne.n	22e56 <__gethex+0x2b2>
   22e8a:	9803      	ldr	r0, [sp, #12]
   22e8c:	4621      	mov	r1, r4
   22e8e:	f000 fa08 	bl	232a2 <_Bfree>
   22e92:	9912      	ldr	r1, [sp, #72]	; 0x48
   22e94:	2300      	movs	r3, #0
   22e96:	600b      	str	r3, [r1, #0]
   22e98:	2050      	movs	r0, #80	; 0x50
   22e9a:	e0af      	b.n	22ffc <__gethex+0x458>
   22e9c:	1e77      	subs	r7, r6, #1
   22e9e:	f1b9 0f00 	cmp.w	r9, #0
   22ea2:	d107      	bne.n	22eb4 <__gethex+0x310>
   22ea4:	2f00      	cmp	r7, #0
   22ea6:	dd07      	ble.n	22eb8 <__gethex+0x314>
   22ea8:	4620      	mov	r0, r4
   22eaa:	4639      	mov	r1, r7
   22eac:	f000 fd9d 	bl	239ea <__any_on>
   22eb0:	4681      	mov	r9, r0
   22eb2:	e001      	b.n	22eb8 <__gethex+0x314>
   22eb4:	f04f 0901 	mov.w	r9, #1
   22eb8:	117b      	asrs	r3, r7, #5
   22eba:	2201      	movs	r2, #1
   22ebc:	f007 071f 	and.w	r7, r7, #31
   22ec0:	fa02 f707 	lsl.w	r7, r2, r7
   22ec4:	f85a 3023 	ldr.w	r3, [sl, r3, lsl #2]
   22ec8:	4631      	mov	r1, r6
   22eca:	421f      	tst	r7, r3
   22ecc:	4620      	mov	r0, r4
   22ece:	bf18      	it	ne
   22ed0:	f049 0902 	orrne.w	r9, r9, #2
   22ed4:	1bad      	subs	r5, r5, r6
   22ed6:	f7ff fe1b 	bl	22b10 <rshift>
   22eda:	2702      	movs	r7, #2
   22edc:	f8d8 6004 	ldr.w	r6, [r8, #4]
   22ee0:	e000      	b.n	22ee4 <__gethex+0x340>
   22ee2:	2701      	movs	r7, #1
   22ee4:	f1b9 0f00 	cmp.w	r9, #0
   22ee8:	f000 8083 	beq.w	22ff2 <__gethex+0x44e>
   22eec:	f8d8 300c 	ldr.w	r3, [r8, #12]
   22ef0:	2b02      	cmp	r3, #2
   22ef2:	d00e      	beq.n	22f12 <__gethex+0x36e>
   22ef4:	2b03      	cmp	r3, #3
   22ef6:	d010      	beq.n	22f1a <__gethex+0x376>
   22ef8:	2b01      	cmp	r3, #1
   22efa:	d178      	bne.n	22fee <__gethex+0x44a>
   22efc:	f019 0f02 	tst.w	r9, #2
   22f00:	d075      	beq.n	22fee <__gethex+0x44a>
   22f02:	f8da 3000 	ldr.w	r3, [sl]
   22f06:	ea49 0903 	orr.w	r9, r9, r3
   22f0a:	f019 0f01 	tst.w	r9, #1
   22f0e:	d107      	bne.n	22f20 <__gethex+0x37c>
   22f10:	e06d      	b.n	22fee <__gethex+0x44a>
   22f12:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   22f14:	f1c3 0301 	rsb	r3, r3, #1
   22f18:	9313      	str	r3, [sp, #76]	; 0x4c
   22f1a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   22f1c:	2b00      	cmp	r3, #0
   22f1e:	d066      	beq.n	22fee <__gethex+0x44a>
   22f20:	f8d4 9010 	ldr.w	r9, [r4, #16]
   22f24:	f104 0314 	add.w	r3, r4, #20
   22f28:	ea4f 0a89 	mov.w	sl, r9, lsl #2
   22f2c:	eb03 010a 	add.w	r1, r3, sl
   22f30:	4618      	mov	r0, r3
   22f32:	f853 2b04 	ldr.w	r2, [r3], #4
   22f36:	f1b2 3fff 	cmp.w	r2, #4294967295
   22f3a:	d002      	beq.n	22f42 <__gethex+0x39e>
   22f3c:	3201      	adds	r2, #1
   22f3e:	6002      	str	r2, [r0, #0]
   22f40:	e021      	b.n	22f86 <__gethex+0x3e2>
   22f42:	2200      	movs	r2, #0
   22f44:	428b      	cmp	r3, r1
   22f46:	f843 2c04 	str.w	r2, [r3, #-4]
   22f4a:	d3f1      	bcc.n	22f30 <__gethex+0x38c>
   22f4c:	68a3      	ldr	r3, [r4, #8]
   22f4e:	4599      	cmp	r9, r3
   22f50:	db12      	blt.n	22f78 <__gethex+0x3d4>
   22f52:	6861      	ldr	r1, [r4, #4]
   22f54:	9803      	ldr	r0, [sp, #12]
   22f56:	3101      	adds	r1, #1
   22f58:	f000 f96e 	bl	23238 <_Balloc>
   22f5c:	6922      	ldr	r2, [r4, #16]
   22f5e:	f104 010c 	add.w	r1, r4, #12
   22f62:	3202      	adds	r2, #2
   22f64:	4683      	mov	fp, r0
   22f66:	0092      	lsls	r2, r2, #2
   22f68:	300c      	adds	r0, #12
   22f6a:	f7fa ff5c 	bl	1de26 <memcpy>
   22f6e:	4621      	mov	r1, r4
   22f70:	9803      	ldr	r0, [sp, #12]
   22f72:	f000 f996 	bl	232a2 <_Bfree>
   22f76:	465c      	mov	r4, fp
   22f78:	6923      	ldr	r3, [r4, #16]
   22f7a:	1c5a      	adds	r2, r3, #1
   22f7c:	6122      	str	r2, [r4, #16]
   22f7e:	eb04 0383 	add.w	r3, r4, r3, lsl #2
   22f82:	2201      	movs	r2, #1
   22f84:	615a      	str	r2, [r3, #20]
   22f86:	2f02      	cmp	r7, #2
   22f88:	f104 0314 	add.w	r3, r4, #20
   22f8c:	d111      	bne.n	22fb2 <__gethex+0x40e>
   22f8e:	f8d8 2000 	ldr.w	r2, [r8]
   22f92:	3a01      	subs	r2, #1
   22f94:	4295      	cmp	r5, r2
   22f96:	d127      	bne.n	22fe8 <__gethex+0x444>
   22f98:	116a      	asrs	r2, r5, #5
   22f9a:	2101      	movs	r1, #1
   22f9c:	f005 051f 	and.w	r5, r5, #31
   22fa0:	fa01 f505 	lsl.w	r5, r1, r5
   22fa4:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
   22fa8:	421d      	tst	r5, r3
   22faa:	bf0c      	ite	eq
   22fac:	2702      	moveq	r7, #2
   22fae:	460f      	movne	r7, r1
   22fb0:	e01a      	b.n	22fe8 <__gethex+0x444>
   22fb2:	6922      	ldr	r2, [r4, #16]
   22fb4:	454a      	cmp	r2, r9
   22fb6:	dd0a      	ble.n	22fce <__gethex+0x42a>
   22fb8:	4620      	mov	r0, r4
   22fba:	2101      	movs	r1, #1
   22fbc:	f7ff fda8 	bl	22b10 <rshift>
   22fc0:	f8d8 3008 	ldr.w	r3, [r8, #8]
   22fc4:	3601      	adds	r6, #1
   22fc6:	429e      	cmp	r6, r3
   22fc8:	f73f af29 	bgt.w	22e1e <__gethex+0x27a>
   22fcc:	e00b      	b.n	22fe6 <__gethex+0x442>
   22fce:	f015 051f 	ands.w	r5, r5, #31
   22fd2:	d008      	beq.n	22fe6 <__gethex+0x442>
   22fd4:	4453      	add	r3, sl
   22fd6:	f853 0c04 	ldr.w	r0, [r3, #-4]
   22fda:	f000 f9f5 	bl	233c8 <__hi0bits>
   22fde:	f1c5 0520 	rsb	r5, r5, #32
   22fe2:	42a8      	cmp	r0, r5
   22fe4:	dbe8      	blt.n	22fb8 <__gethex+0x414>
   22fe6:	2701      	movs	r7, #1
   22fe8:	f047 0720 	orr.w	r7, r7, #32
   22fec:	e001      	b.n	22ff2 <__gethex+0x44e>
   22fee:	f047 0710 	orr.w	r7, r7, #16
   22ff2:	9b12      	ldr	r3, [sp, #72]	; 0x48
   22ff4:	4638      	mov	r0, r7
   22ff6:	601c      	str	r4, [r3, #0]
   22ff8:	9b06      	ldr	r3, [sp, #24]
   22ffa:	601e      	str	r6, [r3, #0]
   22ffc:	b009      	add	sp, #36	; 0x24
   22ffe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00023002 <L_shift>:
L_shift():
   23002:	f1c2 0208 	rsb	r2, r2, #8
   23006:	0092      	lsls	r2, r2, #2
   23008:	b570      	push	{r4, r5, r6, lr}
   2300a:	f1c2 0420 	rsb	r4, r2, #32
   2300e:	6805      	ldr	r5, [r0, #0]
   23010:	f850 3f04 	ldr.w	r3, [r0, #4]!
   23014:	fa03 f604 	lsl.w	r6, r3, r4
   23018:	40d3      	lsrs	r3, r2
   2301a:	4335      	orrs	r5, r6
   2301c:	4288      	cmp	r0, r1
   2301e:	f840 5c04 	str.w	r5, [r0, #-4]
   23022:	6003      	str	r3, [r0, #0]
   23024:	d3f3      	bcc.n	2300e <L_shift+0xc>
   23026:	bd70      	pop	{r4, r5, r6, pc}

00023028 <__hexnan>:
__hexnan():
   23028:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2302c:	680b      	ldr	r3, [r1, #0]
   2302e:	b085      	sub	sp, #20
   23030:	115e      	asrs	r6, r3, #5
   23032:	9003      	str	r0, [sp, #12]
   23034:	f013 031f 	ands.w	r3, r3, #31
   23038:	eb02 0686 	add.w	r6, r2, r6, lsl #2
   2303c:	9302      	str	r3, [sp, #8]
   2303e:	9b03      	ldr	r3, [sp, #12]
   23040:	bf18      	it	ne
   23042:	3604      	addne	r6, #4
   23044:	f1a6 0804 	sub.w	r8, r6, #4
   23048:	4615      	mov	r5, r2
   2304a:	f8d3 9000 	ldr.w	r9, [r3]
   2304e:	2200      	movs	r2, #0
   23050:	f846 2c04 	str.w	r2, [r6, #-4]
   23054:	4647      	mov	r7, r8
   23056:	4644      	mov	r4, r8
   23058:	4692      	mov	sl, r2
   2305a:	4693      	mov	fp, r2
   2305c:	f899 1001 	ldrb.w	r1, [r9, #1]
   23060:	2900      	cmp	r1, #0
   23062:	d03a      	beq.n	230da <__hexnan+0xb2>
   23064:	4608      	mov	r0, r1
   23066:	e88d 0006 	stmia.w	sp, {r1, r2}
   2306a:	f7ff fd86 	bl	22b7a <__hexdig_fun>
   2306e:	e89d 0006 	ldmia.w	sp, {r1, r2}
   23072:	b9d8      	cbnz	r0, 230ac <__hexnan+0x84>
   23074:	2920      	cmp	r1, #32
   23076:	d812      	bhi.n	2309e <__hexnan+0x76>
   23078:	45da      	cmp	sl, fp
   2307a:	da2b      	bge.n	230d4 <__hexnan+0xac>
   2307c:	42bc      	cmp	r4, r7
   2307e:	d205      	bcs.n	2308c <__hexnan+0x64>
   23080:	2a07      	cmp	r2, #7
   23082:	dc03      	bgt.n	2308c <__hexnan+0x64>
   23084:	4620      	mov	r0, r4
   23086:	4639      	mov	r1, r7
   23088:	f7ff ffbb 	bl	23002 <L_shift>
   2308c:	42ac      	cmp	r4, r5
   2308e:	d920      	bls.n	230d2 <__hexnan+0xaa>
   23090:	1f27      	subs	r7, r4, #4
   23092:	2200      	movs	r2, #0
   23094:	f844 2c04 	str.w	r2, [r4, #-4]
   23098:	46da      	mov	sl, fp
   2309a:	463c      	mov	r4, r7
   2309c:	e01a      	b.n	230d4 <__hexnan+0xac>
   2309e:	2929      	cmp	r1, #41	; 0x29
   230a0:	d14c      	bne.n	2313c <__hexnan+0x114>
   230a2:	9b03      	ldr	r3, [sp, #12]
   230a4:	f109 0102 	add.w	r1, r9, #2
   230a8:	6019      	str	r1, [r3, #0]
   230aa:	e016      	b.n	230da <__hexnan+0xb2>
   230ac:	3201      	adds	r2, #1
   230ae:	2a08      	cmp	r2, #8
   230b0:	f10b 0b01 	add.w	fp, fp, #1
   230b4:	dd06      	ble.n	230c4 <__hexnan+0x9c>
   230b6:	42ac      	cmp	r4, r5
   230b8:	d90c      	bls.n	230d4 <__hexnan+0xac>
   230ba:	2200      	movs	r2, #0
   230bc:	f844 2c04 	str.w	r2, [r4, #-4]
   230c0:	3c04      	subs	r4, #4
   230c2:	2201      	movs	r2, #1
   230c4:	6821      	ldr	r1, [r4, #0]
   230c6:	f000 000f 	and.w	r0, r0, #15
   230ca:	ea40 1101 	orr.w	r1, r0, r1, lsl #4
   230ce:	6021      	str	r1, [r4, #0]
   230d0:	e000      	b.n	230d4 <__hexnan+0xac>
   230d2:	2208      	movs	r2, #8
   230d4:	f109 0901 	add.w	r9, r9, #1
   230d8:	e7c0      	b.n	2305c <__hexnan+0x34>
   230da:	f1bb 0f00 	cmp.w	fp, #0
   230de:	d02d      	beq.n	2313c <__hexnan+0x114>
   230e0:	42bc      	cmp	r4, r7
   230e2:	d205      	bcs.n	230f0 <__hexnan+0xc8>
   230e4:	2a07      	cmp	r2, #7
   230e6:	dc03      	bgt.n	230f0 <__hexnan+0xc8>
   230e8:	4620      	mov	r0, r4
   230ea:	4639      	mov	r1, r7
   230ec:	f7ff ff89 	bl	23002 <L_shift>
   230f0:	42ac      	cmp	r4, r5
   230f2:	d90c      	bls.n	2310e <__hexnan+0xe6>
   230f4:	462b      	mov	r3, r5
   230f6:	f854 2b04 	ldr.w	r2, [r4], #4
   230fa:	4544      	cmp	r4, r8
   230fc:	f843 2b04 	str.w	r2, [r3], #4
   23100:	d9f9      	bls.n	230f6 <__hexnan+0xce>
   23102:	2200      	movs	r2, #0
   23104:	f843 2b04 	str.w	r2, [r3], #4
   23108:	4543      	cmp	r3, r8
   2310a:	d9fa      	bls.n	23102 <__hexnan+0xda>
   2310c:	e00d      	b.n	2312a <__hexnan+0x102>
   2310e:	9b02      	ldr	r3, [sp, #8]
   23110:	b15b      	cbz	r3, 2312a <__hexnan+0x102>
   23112:	f1c3 0920 	rsb	r9, r3, #32
   23116:	f04f 33ff 	mov.w	r3, #4294967295
   2311a:	fa23 f909 	lsr.w	r9, r3, r9
   2311e:	f856 3c04 	ldr.w	r3, [r6, #-4]
   23122:	ea03 0309 	and.w	r3, r3, r9
   23126:	f846 3c04 	str.w	r3, [r6, #-4]
   2312a:	f856 3c04 	ldr.w	r3, [r6, #-4]
   2312e:	3e04      	subs	r6, #4
   23130:	b933      	cbnz	r3, 23140 <__hexnan+0x118>
   23132:	42b5      	cmp	r5, r6
   23134:	d1f9      	bne.n	2312a <__hexnan+0x102>
   23136:	2301      	movs	r3, #1
   23138:	602b      	str	r3, [r5, #0]
   2313a:	e001      	b.n	23140 <__hexnan+0x118>
   2313c:	2004      	movs	r0, #4
   2313e:	e000      	b.n	23142 <__hexnan+0x11a>
   23140:	2005      	movs	r0, #5
   23142:	b005      	add	sp, #20
   23144:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00023148 <_gettimeofday_r>:
_gettimeofday_r():
   23148:	b538      	push	{r3, r4, r5, lr}
   2314a:	4c07      	ldr	r4, [pc, #28]	; (23168 <_gettimeofday_r+0x20>)
   2314c:	2300      	movs	r3, #0
   2314e:	4605      	mov	r5, r0
   23150:	4608      	mov	r0, r1
   23152:	4611      	mov	r1, r2
   23154:	6023      	str	r3, [r4, #0]
   23156:	f7ed f94f 	bl	103f8 <_gettimeofday>
   2315a:	1c43      	adds	r3, r0, #1
   2315c:	d102      	bne.n	23164 <_gettimeofday_r+0x1c>
   2315e:	6823      	ldr	r3, [r4, #0]
   23160:	b103      	cbz	r3, 23164 <_gettimeofday_r+0x1c>
   23162:	602b      	str	r3, [r5, #0]
   23164:	bd38      	pop	{r3, r4, r5, pc}
   23166:	bf00      	nop
   23168:	2007cb20 	.word	0x2007cb20

0002316c <__gettzinfo>:
__gettzinfo():
   2316c:	4800      	ldr	r0, [pc, #0]	; (23170 <__gettzinfo+0x4>)
   2316e:	4770      	bx	lr
   23170:	2007c154 	.word	0x2007c154

00023174 <_localeconv_r>:
_localeconv_r():
   23174:	4800      	ldr	r0, [pc, #0]	; (23178 <_localeconv_r+0x4>)
   23176:	4770      	bx	lr
   23178:	2007c194 	.word	0x2007c194

0002317c <_lseek_r>:
_lseek_r():
   2317c:	b538      	push	{r3, r4, r5, lr}
   2317e:	4c07      	ldr	r4, [pc, #28]	; (2319c <_lseek_r+0x20>)
   23180:	4605      	mov	r5, r0
   23182:	2000      	movs	r0, #0
   23184:	6020      	str	r0, [r4, #0]
   23186:	4608      	mov	r0, r1
   23188:	4611      	mov	r1, r2
   2318a:	461a      	mov	r2, r3
   2318c:	f7ed f930 	bl	103f0 <_lseek>
   23190:	1c43      	adds	r3, r0, #1
   23192:	d102      	bne.n	2319a <_lseek_r+0x1e>
   23194:	6823      	ldr	r3, [r4, #0]
   23196:	b103      	cbz	r3, 2319a <_lseek_r+0x1e>
   23198:	602b      	str	r3, [r5, #0]
   2319a:	bd38      	pop	{r3, r4, r5, pc}
   2319c:	2007cb20 	.word	0x2007cb20

000231a0 <__smakebuf_r>:
__smakebuf_r():
   231a0:	b5f0      	push	{r4, r5, r6, r7, lr}
   231a2:	898b      	ldrh	r3, [r1, #12]
   231a4:	b091      	sub	sp, #68	; 0x44
   231a6:	079e      	lsls	r6, r3, #30
   231a8:	4605      	mov	r5, r0
   231aa:	460c      	mov	r4, r1
   231ac:	d425      	bmi.n	231fa <__smakebuf_r+0x5a>
   231ae:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   231b2:	2900      	cmp	r1, #0
   231b4:	da08      	bge.n	231c8 <__smakebuf_r+0x28>
   231b6:	89a3      	ldrh	r3, [r4, #12]
   231b8:	2700      	movs	r7, #0
   231ba:	f013 0f80 	tst.w	r3, #128	; 0x80
   231be:	bf14      	ite	ne
   231c0:	2640      	movne	r6, #64	; 0x40
   231c2:	f44f 6680 	moveq.w	r6, #1024	; 0x400
   231c6:	e00d      	b.n	231e4 <__smakebuf_r+0x44>
   231c8:	aa01      	add	r2, sp, #4
   231ca:	f000 fd49 	bl	23c60 <_fstat_r>
   231ce:	2800      	cmp	r0, #0
   231d0:	dbf1      	blt.n	231b6 <__smakebuf_r+0x16>
   231d2:	9f02      	ldr	r7, [sp, #8]
   231d4:	f44f 6680 	mov.w	r6, #1024	; 0x400
   231d8:	f407 4770 	and.w	r7, r7, #61440	; 0xf000
   231dc:	f5b7 5100 	subs.w	r1, r7, #8192	; 0x2000
   231e0:	424f      	negs	r7, r1
   231e2:	414f      	adcs	r7, r1
   231e4:	4628      	mov	r0, r5
   231e6:	4631      	mov	r1, r6
   231e8:	f7fb faf4 	bl	1e7d4 <_malloc_r>
   231ec:	b960      	cbnz	r0, 23208 <__smakebuf_r+0x68>
   231ee:	89a3      	ldrh	r3, [r4, #12]
   231f0:	059a      	lsls	r2, r3, #22
   231f2:	d41d      	bmi.n	23230 <__smakebuf_r+0x90>
   231f4:	f043 0302 	orr.w	r3, r3, #2
   231f8:	81a3      	strh	r3, [r4, #12]
   231fa:	f104 0347 	add.w	r3, r4, #71	; 0x47
   231fe:	6023      	str	r3, [r4, #0]
   23200:	6123      	str	r3, [r4, #16]
   23202:	2301      	movs	r3, #1
   23204:	6163      	str	r3, [r4, #20]
   23206:	e013      	b.n	23230 <__smakebuf_r+0x90>
   23208:	4b0a      	ldr	r3, [pc, #40]	; (23234 <__smakebuf_r+0x94>)
   2320a:	62ab      	str	r3, [r5, #40]	; 0x28
   2320c:	89a3      	ldrh	r3, [r4, #12]
   2320e:	6020      	str	r0, [r4, #0]
   23210:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   23214:	81a3      	strh	r3, [r4, #12]
   23216:	6120      	str	r0, [r4, #16]
   23218:	6166      	str	r6, [r4, #20]
   2321a:	b14f      	cbz	r7, 23230 <__smakebuf_r+0x90>
   2321c:	4628      	mov	r0, r5
   2321e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   23222:	f000 fd2f 	bl	23c84 <_isatty_r>
   23226:	b118      	cbz	r0, 23230 <__smakebuf_r+0x90>
   23228:	89a3      	ldrh	r3, [r4, #12]
   2322a:	f043 0301 	orr.w	r3, r3, #1
   2322e:	81a3      	strh	r3, [r4, #12]
   23230:	b011      	add	sp, #68	; 0x44
   23232:	bdf0      	pop	{r4, r5, r6, r7, pc}
   23234:	0001db65 	.word	0x0001db65

00023238 <_Balloc>:
_Balloc():
   23238:	b570      	push	{r4, r5, r6, lr}
   2323a:	6a45      	ldr	r5, [r0, #36]	; 0x24
   2323c:	4604      	mov	r4, r0
   2323e:	460e      	mov	r6, r1
   23240:	b93d      	cbnz	r5, 23252 <_Balloc+0x1a>
   23242:	2010      	movs	r0, #16
   23244:	f7fa fdc2 	bl	1ddcc <malloc>
   23248:	6260      	str	r0, [r4, #36]	; 0x24
   2324a:	6045      	str	r5, [r0, #4]
   2324c:	6085      	str	r5, [r0, #8]
   2324e:	6005      	str	r5, [r0, #0]
   23250:	60c5      	str	r5, [r0, #12]
   23252:	6a65      	ldr	r5, [r4, #36]	; 0x24
   23254:	68eb      	ldr	r3, [r5, #12]
   23256:	b143      	cbz	r3, 2326a <_Balloc+0x32>
   23258:	6a63      	ldr	r3, [r4, #36]	; 0x24
   2325a:	68da      	ldr	r2, [r3, #12]
   2325c:	f852 0026 	ldr.w	r0, [r2, r6, lsl #2]
   23260:	b178      	cbz	r0, 23282 <_Balloc+0x4a>
   23262:	6801      	ldr	r1, [r0, #0]
   23264:	f842 1026 	str.w	r1, [r2, r6, lsl #2]
   23268:	e017      	b.n	2329a <_Balloc+0x62>
   2326a:	4620      	mov	r0, r4
   2326c:	2104      	movs	r1, #4
   2326e:	2221      	movs	r2, #33	; 0x21
   23270:	f000 fbdf 	bl	23a32 <_calloc_r>
   23274:	6a63      	ldr	r3, [r4, #36]	; 0x24
   23276:	60e8      	str	r0, [r5, #12]
   23278:	68db      	ldr	r3, [r3, #12]
   2327a:	2b00      	cmp	r3, #0
   2327c:	d1ec      	bne.n	23258 <_Balloc+0x20>
   2327e:	2000      	movs	r0, #0
   23280:	bd70      	pop	{r4, r5, r6, pc}
   23282:	2101      	movs	r1, #1
   23284:	fa01 f506 	lsl.w	r5, r1, r6
   23288:	1d6a      	adds	r2, r5, #5
   2328a:	4620      	mov	r0, r4
   2328c:	0092      	lsls	r2, r2, #2
   2328e:	f000 fbd0 	bl	23a32 <_calloc_r>
   23292:	2800      	cmp	r0, #0
   23294:	d0f3      	beq.n	2327e <_Balloc+0x46>
   23296:	6046      	str	r6, [r0, #4]
   23298:	6085      	str	r5, [r0, #8]
   2329a:	2200      	movs	r2, #0
   2329c:	6102      	str	r2, [r0, #16]
   2329e:	60c2      	str	r2, [r0, #12]
   232a0:	bd70      	pop	{r4, r5, r6, pc}

000232a2 <_Bfree>:
_Bfree():
   232a2:	b570      	push	{r4, r5, r6, lr}
   232a4:	6a44      	ldr	r4, [r0, #36]	; 0x24
   232a6:	4606      	mov	r6, r0
   232a8:	460d      	mov	r5, r1
   232aa:	b93c      	cbnz	r4, 232bc <_Bfree+0x1a>
   232ac:	2010      	movs	r0, #16
   232ae:	f7fa fd8d 	bl	1ddcc <malloc>
   232b2:	6270      	str	r0, [r6, #36]	; 0x24
   232b4:	6044      	str	r4, [r0, #4]
   232b6:	6084      	str	r4, [r0, #8]
   232b8:	6004      	str	r4, [r0, #0]
   232ba:	60c4      	str	r4, [r0, #12]
   232bc:	b13d      	cbz	r5, 232ce <_Bfree+0x2c>
   232be:	6a73      	ldr	r3, [r6, #36]	; 0x24
   232c0:	686a      	ldr	r2, [r5, #4]
   232c2:	68db      	ldr	r3, [r3, #12]
   232c4:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   232c8:	6029      	str	r1, [r5, #0]
   232ca:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
   232ce:	bd70      	pop	{r4, r5, r6, pc}

000232d0 <__multadd>:
__multadd():
   232d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   232d4:	460c      	mov	r4, r1
   232d6:	461e      	mov	r6, r3
   232d8:	690d      	ldr	r5, [r1, #16]
   232da:	4607      	mov	r7, r0
   232dc:	3114      	adds	r1, #20
   232de:	2300      	movs	r3, #0
   232e0:	6808      	ldr	r0, [r1, #0]
   232e2:	3301      	adds	r3, #1
   232e4:	fa1f fc80 	uxth.w	ip, r0
   232e8:	0c00      	lsrs	r0, r0, #16
   232ea:	fb02 6c0c 	mla	ip, r2, ip, r6
   232ee:	4350      	muls	r0, r2
   232f0:	eb00 401c 	add.w	r0, r0, ip, lsr #16
   232f4:	fa1f fc8c 	uxth.w	ip, ip
   232f8:	0c06      	lsrs	r6, r0, #16
   232fa:	42ab      	cmp	r3, r5
   232fc:	eb0c 4000 	add.w	r0, ip, r0, lsl #16
   23300:	f841 0b04 	str.w	r0, [r1], #4
   23304:	dbec      	blt.n	232e0 <__multadd+0x10>
   23306:	b1d6      	cbz	r6, 2333e <__multadd+0x6e>
   23308:	68a3      	ldr	r3, [r4, #8]
   2330a:	429d      	cmp	r5, r3
   2330c:	db12      	blt.n	23334 <__multadd+0x64>
   2330e:	6861      	ldr	r1, [r4, #4]
   23310:	4638      	mov	r0, r7
   23312:	3101      	adds	r1, #1
   23314:	f7ff ff90 	bl	23238 <_Balloc>
   23318:	6922      	ldr	r2, [r4, #16]
   2331a:	f104 010c 	add.w	r1, r4, #12
   2331e:	3202      	adds	r2, #2
   23320:	4680      	mov	r8, r0
   23322:	0092      	lsls	r2, r2, #2
   23324:	300c      	adds	r0, #12
   23326:	f7fa fd7e 	bl	1de26 <memcpy>
   2332a:	4621      	mov	r1, r4
   2332c:	4638      	mov	r0, r7
   2332e:	f7ff ffb8 	bl	232a2 <_Bfree>
   23332:	4644      	mov	r4, r8
   23334:	eb04 0385 	add.w	r3, r4, r5, lsl #2
   23338:	3501      	adds	r5, #1
   2333a:	615e      	str	r6, [r3, #20]
   2333c:	6125      	str	r5, [r4, #16]
   2333e:	4620      	mov	r0, r4
   23340:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00023344 <__s2b>:
__s2b():
   23344:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   23348:	4614      	mov	r4, r2
   2334a:	4698      	mov	r8, r3
   2334c:	f103 0208 	add.w	r2, r3, #8
   23350:	2309      	movs	r3, #9
   23352:	460d      	mov	r5, r1
   23354:	fb92 f2f3 	sdiv	r2, r2, r3
   23358:	4606      	mov	r6, r0
   2335a:	2301      	movs	r3, #1
   2335c:	2100      	movs	r1, #0
   2335e:	429a      	cmp	r2, r3
   23360:	dd02      	ble.n	23368 <__s2b+0x24>
   23362:	005b      	lsls	r3, r3, #1
   23364:	3101      	adds	r1, #1
   23366:	e7fa      	b.n	2335e <__s2b+0x1a>
   23368:	4630      	mov	r0, r6
   2336a:	f7ff ff65 	bl	23238 <_Balloc>
   2336e:	9b08      	ldr	r3, [sp, #32]
   23370:	2c09      	cmp	r4, #9
   23372:	6143      	str	r3, [r0, #20]
   23374:	f04f 0301 	mov.w	r3, #1
   23378:	4601      	mov	r1, r0
   2337a:	6103      	str	r3, [r0, #16]
   2337c:	dd11      	ble.n	233a2 <__s2b+0x5e>
   2337e:	f105 0909 	add.w	r9, r5, #9
   23382:	464f      	mov	r7, r9
   23384:	4425      	add	r5, r4
   23386:	f817 3b01 	ldrb.w	r3, [r7], #1
   2338a:	4630      	mov	r0, r6
   2338c:	220a      	movs	r2, #10
   2338e:	3b30      	subs	r3, #48	; 0x30
   23390:	f7ff ff9e 	bl	232d0 <__multadd>
   23394:	42af      	cmp	r7, r5
   23396:	4601      	mov	r1, r0
   23398:	d1f5      	bne.n	23386 <__s2b+0x42>
   2339a:	eb09 0704 	add.w	r7, r9, r4
   2339e:	3f08      	subs	r7, #8
   233a0:	e002      	b.n	233a8 <__s2b+0x64>
   233a2:	f105 070a 	add.w	r7, r5, #10
   233a6:	2409      	movs	r4, #9
   233a8:	4625      	mov	r5, r4
   233aa:	4545      	cmp	r5, r8
   233ac:	da09      	bge.n	233c2 <__s2b+0x7e>
   233ae:	1b3b      	subs	r3, r7, r4
   233b0:	5d5b      	ldrb	r3, [r3, r5]
   233b2:	4630      	mov	r0, r6
   233b4:	220a      	movs	r2, #10
   233b6:	3b30      	subs	r3, #48	; 0x30
   233b8:	f7ff ff8a 	bl	232d0 <__multadd>
   233bc:	3501      	adds	r5, #1
   233be:	4601      	mov	r1, r0
   233c0:	e7f3      	b.n	233aa <__s2b+0x66>
   233c2:	4608      	mov	r0, r1
   233c4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

000233c8 <__hi0bits>:
__hi0bits():
   233c8:	0c03      	lsrs	r3, r0, #16
   233ca:	041b      	lsls	r3, r3, #16
   233cc:	b913      	cbnz	r3, 233d4 <__hi0bits+0xc>
   233ce:	0400      	lsls	r0, r0, #16
   233d0:	2310      	movs	r3, #16
   233d2:	e000      	b.n	233d6 <__hi0bits+0xe>
   233d4:	2300      	movs	r3, #0
   233d6:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
   233da:	bf04      	itt	eq
   233dc:	0200      	lsleq	r0, r0, #8
   233de:	3308      	addeq	r3, #8
   233e0:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
   233e4:	bf04      	itt	eq
   233e6:	0100      	lsleq	r0, r0, #4
   233e8:	3304      	addeq	r3, #4
   233ea:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
   233ee:	bf04      	itt	eq
   233f0:	0080      	lsleq	r0, r0, #2
   233f2:	3302      	addeq	r3, #2
   233f4:	2800      	cmp	r0, #0
   233f6:	db03      	blt.n	23400 <__hi0bits+0x38>
   233f8:	0042      	lsls	r2, r0, #1
   233fa:	d503      	bpl.n	23404 <__hi0bits+0x3c>
   233fc:	1c58      	adds	r0, r3, #1
   233fe:	4770      	bx	lr
   23400:	4618      	mov	r0, r3
   23402:	4770      	bx	lr
   23404:	2020      	movs	r0, #32
   23406:	4770      	bx	lr

00023408 <__lo0bits>:
__lo0bits():
   23408:	6803      	ldr	r3, [r0, #0]
   2340a:	f013 0207 	ands.w	r2, r3, #7
   2340e:	d00b      	beq.n	23428 <__lo0bits+0x20>
   23410:	07d9      	lsls	r1, r3, #31
   23412:	d422      	bmi.n	2345a <__lo0bits+0x52>
   23414:	079a      	lsls	r2, r3, #30
   23416:	d503      	bpl.n	23420 <__lo0bits+0x18>
   23418:	085b      	lsrs	r3, r3, #1
   2341a:	6003      	str	r3, [r0, #0]
   2341c:	2001      	movs	r0, #1
   2341e:	4770      	bx	lr
   23420:	089b      	lsrs	r3, r3, #2
   23422:	6003      	str	r3, [r0, #0]
   23424:	2002      	movs	r0, #2
   23426:	4770      	bx	lr
   23428:	b299      	uxth	r1, r3
   2342a:	b909      	cbnz	r1, 23430 <__lo0bits+0x28>
   2342c:	0c1b      	lsrs	r3, r3, #16
   2342e:	2210      	movs	r2, #16
   23430:	f013 0fff 	tst.w	r3, #255	; 0xff
   23434:	bf04      	itt	eq
   23436:	0a1b      	lsreq	r3, r3, #8
   23438:	3208      	addeq	r2, #8
   2343a:	0719      	lsls	r1, r3, #28
   2343c:	bf04      	itt	eq
   2343e:	091b      	lsreq	r3, r3, #4
   23440:	3204      	addeq	r2, #4
   23442:	0799      	lsls	r1, r3, #30
   23444:	bf04      	itt	eq
   23446:	089b      	lsreq	r3, r3, #2
   23448:	3202      	addeq	r2, #2
   2344a:	07d9      	lsls	r1, r3, #31
   2344c:	d402      	bmi.n	23454 <__lo0bits+0x4c>
   2344e:	085b      	lsrs	r3, r3, #1
   23450:	d005      	beq.n	2345e <__lo0bits+0x56>
   23452:	3201      	adds	r2, #1
   23454:	6003      	str	r3, [r0, #0]
   23456:	4610      	mov	r0, r2
   23458:	4770      	bx	lr
   2345a:	2000      	movs	r0, #0
   2345c:	4770      	bx	lr
   2345e:	2020      	movs	r0, #32
   23460:	4770      	bx	lr

00023462 <__i2b>:
__i2b():
   23462:	b510      	push	{r4, lr}
   23464:	460c      	mov	r4, r1
   23466:	2101      	movs	r1, #1
   23468:	f7ff fee6 	bl	23238 <_Balloc>
   2346c:	2201      	movs	r2, #1
   2346e:	6144      	str	r4, [r0, #20]
   23470:	6102      	str	r2, [r0, #16]
   23472:	bd10      	pop	{r4, pc}

00023474 <__multiply>:
__multiply():
   23474:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23478:	4616      	mov	r6, r2
   2347a:	6933      	ldr	r3, [r6, #16]
   2347c:	690a      	ldr	r2, [r1, #16]
   2347e:	b085      	sub	sp, #20
   23480:	429a      	cmp	r2, r3
   23482:	460d      	mov	r5, r1
   23484:	da01      	bge.n	2348a <__multiply+0x16>
   23486:	4635      	mov	r5, r6
   23488:	460e      	mov	r6, r1
   2348a:	f8d5 8010 	ldr.w	r8, [r5, #16]
   2348e:	6937      	ldr	r7, [r6, #16]
   23490:	68ab      	ldr	r3, [r5, #8]
   23492:	6869      	ldr	r1, [r5, #4]
   23494:	eb08 0407 	add.w	r4, r8, r7
   23498:	429c      	cmp	r4, r3
   2349a:	bfc8      	it	gt
   2349c:	3101      	addgt	r1, #1
   2349e:	f7ff fecb 	bl	23238 <_Balloc>
   234a2:	f100 0314 	add.w	r3, r0, #20
   234a6:	eb03 0184 	add.w	r1, r3, r4, lsl #2
   234aa:	9101      	str	r1, [sp, #4]
   234ac:	461a      	mov	r2, r3
   234ae:	f8dd a004 	ldr.w	sl, [sp, #4]
   234b2:	4552      	cmp	r2, sl
   234b4:	d203      	bcs.n	234be <__multiply+0x4a>
   234b6:	2100      	movs	r1, #0
   234b8:	f842 1b04 	str.w	r1, [r2], #4
   234bc:	e7f7      	b.n	234ae <__multiply+0x3a>
   234be:	f105 0114 	add.w	r1, r5, #20
   234c2:	f106 0214 	add.w	r2, r6, #20
   234c6:	eb01 0888 	add.w	r8, r1, r8, lsl #2
   234ca:	eb02 0787 	add.w	r7, r2, r7, lsl #2
   234ce:	f8cd 8008 	str.w	r8, [sp, #8]
   234d2:	9703      	str	r7, [sp, #12]
   234d4:	9e03      	ldr	r6, [sp, #12]
   234d6:	4615      	mov	r5, r2
   234d8:	42b2      	cmp	r2, r6
   234da:	d256      	bcs.n	2358a <__multiply+0x116>
   234dc:	f8b5 c000 	ldrh.w	ip, [r5]
   234e0:	3204      	adds	r2, #4
   234e2:	f1bc 0f00 	cmp.w	ip, #0
   234e6:	d025      	beq.n	23534 <__multiply+0xc0>
   234e8:	460f      	mov	r7, r1
   234ea:	461d      	mov	r5, r3
   234ec:	2600      	movs	r6, #0
   234ee:	f857 9b04 	ldr.w	r9, [r7], #4
   234f2:	f8d5 8000 	ldr.w	r8, [r5]
   234f6:	fa1f fb89 	uxth.w	fp, r9
   234fa:	fa1f fa88 	uxth.w	sl, r8
   234fe:	fb0c aa0b 	mla	sl, ip, fp, sl
   23502:	ea4f 4919 	mov.w	r9, r9, lsr #16
   23506:	ea4f 4818 	mov.w	r8, r8, lsr #16
   2350a:	fb0c 8809 	mla	r8, ip, r9, r8
   2350e:	44b2      	add	sl, r6
   23510:	eb08 481a 	add.w	r8, r8, sl, lsr #16
   23514:	fa1f fa8a 	uxth.w	sl, sl
   23518:	ea4a 4a08 	orr.w	sl, sl, r8, lsl #16
   2351c:	ea4f 4618 	mov.w	r6, r8, lsr #16
   23520:	f8dd 8008 	ldr.w	r8, [sp, #8]
   23524:	46ab      	mov	fp, r5
   23526:	45b8      	cmp	r8, r7
   23528:	f84b ab04 	str.w	sl, [fp], #4
   2352c:	d901      	bls.n	23532 <__multiply+0xbe>
   2352e:	465d      	mov	r5, fp
   23530:	e7dd      	b.n	234ee <__multiply+0x7a>
   23532:	606e      	str	r6, [r5, #4]
   23534:	f832 8c02 	ldrh.w	r8, [r2, #-2]
   23538:	f1b8 0f00 	cmp.w	r8, #0
   2353c:	d023      	beq.n	23586 <__multiply+0x112>
   2353e:	681e      	ldr	r6, [r3, #0]
   23540:	460f      	mov	r7, r1
   23542:	461d      	mov	r5, r3
   23544:	f04f 0900 	mov.w	r9, #0
   23548:	f8b7 a000 	ldrh.w	sl, [r7]
   2354c:	f8b5 c002 	ldrh.w	ip, [r5, #2]
   23550:	b2b6      	uxth	r6, r6
   23552:	fb08 cc0a 	mla	ip, r8, sl, ip
   23556:	44e1      	add	r9, ip
   23558:	ea46 4609 	orr.w	r6, r6, r9, lsl #16
   2355c:	46ac      	mov	ip, r5
   2355e:	f84c 6b04 	str.w	r6, [ip], #4
   23562:	f857 6b04 	ldr.w	r6, [r7], #4
   23566:	f8b5 a004 	ldrh.w	sl, [r5, #4]
   2356a:	0c36      	lsrs	r6, r6, #16
   2356c:	fb08 a606 	mla	r6, r8, r6, sl
   23570:	f8dd a008 	ldr.w	sl, [sp, #8]
   23574:	eb06 4619 	add.w	r6, r6, r9, lsr #16
   23578:	4557      	cmp	r7, sl
   2357a:	ea4f 4916 	mov.w	r9, r6, lsr #16
   2357e:	d201      	bcs.n	23584 <__multiply+0x110>
   23580:	4665      	mov	r5, ip
   23582:	e7e1      	b.n	23548 <__multiply+0xd4>
   23584:	606e      	str	r6, [r5, #4]
   23586:	3304      	adds	r3, #4
   23588:	e7a4      	b.n	234d4 <__multiply+0x60>
   2358a:	9b01      	ldr	r3, [sp, #4]
   2358c:	2c00      	cmp	r4, #0
   2358e:	dc03      	bgt.n	23598 <__multiply+0x124>
   23590:	6104      	str	r4, [r0, #16]
   23592:	b005      	add	sp, #20
   23594:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23598:	f853 2d04 	ldr.w	r2, [r3, #-4]!
   2359c:	2a00      	cmp	r2, #0
   2359e:	d1f7      	bne.n	23590 <__multiply+0x11c>
   235a0:	3c01      	subs	r4, #1
   235a2:	e7f3      	b.n	2358c <__multiply+0x118>

000235a4 <__pow5mult>:
__pow5mult():
   235a4:	f012 0303 	ands.w	r3, r2, #3
   235a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   235ac:	4605      	mov	r5, r0
   235ae:	460e      	mov	r6, r1
   235b0:	4617      	mov	r7, r2
   235b2:	d007      	beq.n	235c4 <__pow5mult+0x20>
   235b4:	4a21      	ldr	r2, [pc, #132]	; (2363c <__pow5mult+0x98>)
   235b6:	3b01      	subs	r3, #1
   235b8:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
   235bc:	2300      	movs	r3, #0
   235be:	f7ff fe87 	bl	232d0 <__multadd>
   235c2:	4606      	mov	r6, r0
   235c4:	10bf      	asrs	r7, r7, #2
   235c6:	d035      	beq.n	23634 <__pow5mult+0x90>
   235c8:	6a6c      	ldr	r4, [r5, #36]	; 0x24
   235ca:	b93c      	cbnz	r4, 235dc <__pow5mult+0x38>
   235cc:	2010      	movs	r0, #16
   235ce:	f7fa fbfd 	bl	1ddcc <malloc>
   235d2:	6268      	str	r0, [r5, #36]	; 0x24
   235d4:	6044      	str	r4, [r0, #4]
   235d6:	6084      	str	r4, [r0, #8]
   235d8:	6004      	str	r4, [r0, #0]
   235da:	60c4      	str	r4, [r0, #12]
   235dc:	f8d5 8024 	ldr.w	r8, [r5, #36]	; 0x24
   235e0:	f8d8 4008 	ldr.w	r4, [r8, #8]
   235e4:	b97c      	cbnz	r4, 23606 <__pow5mult+0x62>
   235e6:	4628      	mov	r0, r5
   235e8:	f240 2171 	movw	r1, #625	; 0x271
   235ec:	f7ff ff39 	bl	23462 <__i2b>
   235f0:	2300      	movs	r3, #0
   235f2:	f8c8 0008 	str.w	r0, [r8, #8]
   235f6:	4604      	mov	r4, r0
   235f8:	6003      	str	r3, [r0, #0]
   235fa:	e004      	b.n	23606 <__pow5mult+0x62>
   235fc:	107f      	asrs	r7, r7, #1
   235fe:	d019      	beq.n	23634 <__pow5mult+0x90>
   23600:	6820      	ldr	r0, [r4, #0]
   23602:	b170      	cbz	r0, 23622 <__pow5mult+0x7e>
   23604:	4604      	mov	r4, r0
   23606:	07fb      	lsls	r3, r7, #31
   23608:	d5f8      	bpl.n	235fc <__pow5mult+0x58>
   2360a:	4631      	mov	r1, r6
   2360c:	4622      	mov	r2, r4
   2360e:	4628      	mov	r0, r5
   23610:	f7ff ff30 	bl	23474 <__multiply>
   23614:	4631      	mov	r1, r6
   23616:	4680      	mov	r8, r0
   23618:	4628      	mov	r0, r5
   2361a:	f7ff fe42 	bl	232a2 <_Bfree>
   2361e:	4646      	mov	r6, r8
   23620:	e7ec      	b.n	235fc <__pow5mult+0x58>
   23622:	4628      	mov	r0, r5
   23624:	4621      	mov	r1, r4
   23626:	4622      	mov	r2, r4
   23628:	f7ff ff24 	bl	23474 <__multiply>
   2362c:	2300      	movs	r3, #0
   2362e:	6020      	str	r0, [r4, #0]
   23630:	6003      	str	r3, [r0, #0]
   23632:	e7e7      	b.n	23604 <__pow5mult+0x60>
   23634:	4630      	mov	r0, r6
   23636:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   2363a:	bf00      	nop
   2363c:	00027420 	.word	0x00027420

00023640 <__lshift>:
__lshift():
   23640:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   23644:	460c      	mov	r4, r1
   23646:	6923      	ldr	r3, [r4, #16]
   23648:	ea4f 1a62 	mov.w	sl, r2, asr #5
   2364c:	eb0a 0903 	add.w	r9, sl, r3
   23650:	6849      	ldr	r1, [r1, #4]
   23652:	68a3      	ldr	r3, [r4, #8]
   23654:	4680      	mov	r8, r0
   23656:	4615      	mov	r5, r2
   23658:	f109 0701 	add.w	r7, r9, #1
   2365c:	429f      	cmp	r7, r3
   2365e:	dd02      	ble.n	23666 <__lshift+0x26>
   23660:	3101      	adds	r1, #1
   23662:	005b      	lsls	r3, r3, #1
   23664:	e7fa      	b.n	2365c <__lshift+0x1c>
   23666:	4640      	mov	r0, r8
   23668:	f7ff fde6 	bl	23238 <_Balloc>
   2366c:	2300      	movs	r3, #0
   2366e:	4606      	mov	r6, r0
   23670:	f100 0214 	add.w	r2, r0, #20
   23674:	4553      	cmp	r3, sl
   23676:	da04      	bge.n	23682 <__lshift+0x42>
   23678:	2100      	movs	r1, #0
   2367a:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
   2367e:	3301      	adds	r3, #1
   23680:	e7f8      	b.n	23674 <__lshift+0x34>
   23682:	6920      	ldr	r0, [r4, #16]
   23684:	ea2a 71ea 	bic.w	r1, sl, sl, asr #31
   23688:	f104 0314 	add.w	r3, r4, #20
   2368c:	f015 0c1f 	ands.w	ip, r5, #31
   23690:	eb02 0181 	add.w	r1, r2, r1, lsl #2
   23694:	eb03 0e80 	add.w	lr, r3, r0, lsl #2
   23698:	d016      	beq.n	236c8 <__lshift+0x88>
   2369a:	f1cc 0a20 	rsb	sl, ip, #32
   2369e:	2500      	movs	r5, #0
   236a0:	6818      	ldr	r0, [r3, #0]
   236a2:	460a      	mov	r2, r1
   236a4:	fa00 f00c 	lsl.w	r0, r0, ip
   236a8:	4305      	orrs	r5, r0
   236aa:	f842 5b04 	str.w	r5, [r2], #4
   236ae:	f853 5b04 	ldr.w	r5, [r3], #4
   236b2:	4573      	cmp	r3, lr
   236b4:	fa25 f50a 	lsr.w	r5, r5, sl
   236b8:	d201      	bcs.n	236be <__lshift+0x7e>
   236ba:	4611      	mov	r1, r2
   236bc:	e7f0      	b.n	236a0 <__lshift+0x60>
   236be:	604d      	str	r5, [r1, #4]
   236c0:	b145      	cbz	r5, 236d4 <__lshift+0x94>
   236c2:	f109 0702 	add.w	r7, r9, #2
   236c6:	e005      	b.n	236d4 <__lshift+0x94>
   236c8:	f853 2b04 	ldr.w	r2, [r3], #4
   236cc:	4573      	cmp	r3, lr
   236ce:	f841 2b04 	str.w	r2, [r1], #4
   236d2:	d3f9      	bcc.n	236c8 <__lshift+0x88>
   236d4:	3f01      	subs	r7, #1
   236d6:	4640      	mov	r0, r8
   236d8:	6137      	str	r7, [r6, #16]
   236da:	4621      	mov	r1, r4
   236dc:	f7ff fde1 	bl	232a2 <_Bfree>
   236e0:	4630      	mov	r0, r6
   236e2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

000236e6 <__mcmp>:
__mcmp():
   236e6:	6902      	ldr	r2, [r0, #16]
   236e8:	690b      	ldr	r3, [r1, #16]
   236ea:	b510      	push	{r4, lr}
   236ec:	1ad2      	subs	r2, r2, r3
   236ee:	d113      	bne.n	23718 <__mcmp+0x32>
   236f0:	009c      	lsls	r4, r3, #2
   236f2:	3014      	adds	r0, #20
   236f4:	f101 0214 	add.w	r2, r1, #20
   236f8:	1903      	adds	r3, r0, r4
   236fa:	4422      	add	r2, r4
   236fc:	f853 4d04 	ldr.w	r4, [r3, #-4]!
   23700:	f852 1d04 	ldr.w	r1, [r2, #-4]!
   23704:	428c      	cmp	r4, r1
   23706:	d003      	beq.n	23710 <__mcmp+0x2a>
   23708:	d208      	bcs.n	2371c <__mcmp+0x36>
   2370a:	f04f 30ff 	mov.w	r0, #4294967295
   2370e:	bd10      	pop	{r4, pc}
   23710:	4298      	cmp	r0, r3
   23712:	d3f3      	bcc.n	236fc <__mcmp+0x16>
   23714:	2000      	movs	r0, #0
   23716:	bd10      	pop	{r4, pc}
   23718:	4610      	mov	r0, r2
   2371a:	bd10      	pop	{r4, pc}
   2371c:	2001      	movs	r0, #1
   2371e:	bd10      	pop	{r4, pc}

00023720 <__mdiff>:
__mdiff():
   23720:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   23724:	4606      	mov	r6, r0
   23726:	460c      	mov	r4, r1
   23728:	4608      	mov	r0, r1
   2372a:	4611      	mov	r1, r2
   2372c:	4615      	mov	r5, r2
   2372e:	f7ff ffda 	bl	236e6 <__mcmp>
   23732:	1e07      	subs	r7, r0, #0
   23734:	d108      	bne.n	23748 <__mdiff+0x28>
   23736:	4630      	mov	r0, r6
   23738:	4639      	mov	r1, r7
   2373a:	f7ff fd7d 	bl	23238 <_Balloc>
   2373e:	2301      	movs	r3, #1
   23740:	6103      	str	r3, [r0, #16]
   23742:	6147      	str	r7, [r0, #20]
   23744:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   23748:	db01      	blt.n	2374e <__mdiff+0x2e>
   2374a:	2700      	movs	r7, #0
   2374c:	e003      	b.n	23756 <__mdiff+0x36>
   2374e:	4623      	mov	r3, r4
   23750:	2701      	movs	r7, #1
   23752:	462c      	mov	r4, r5
   23754:	461d      	mov	r5, r3
   23756:	6861      	ldr	r1, [r4, #4]
   23758:	4630      	mov	r0, r6
   2375a:	f7ff fd6d 	bl	23238 <_Balloc>
   2375e:	6922      	ldr	r2, [r4, #16]
   23760:	692b      	ldr	r3, [r5, #16]
   23762:	3414      	adds	r4, #20
   23764:	f105 0614 	add.w	r6, r5, #20
   23768:	eb06 0a83 	add.w	sl, r6, r3, lsl #2
   2376c:	60c7      	str	r7, [r0, #12]
   2376e:	eb04 0c82 	add.w	ip, r4, r2, lsl #2
   23772:	f100 0314 	add.w	r3, r0, #20
   23776:	2100      	movs	r1, #0
   23778:	f854 7b04 	ldr.w	r7, [r4], #4
   2377c:	f856 9b04 	ldr.w	r9, [r6], #4
   23780:	fa1f f887 	uxth.w	r8, r7
   23784:	fa1f f589 	uxth.w	r5, r9
   23788:	4441      	add	r1, r8
   2378a:	ea4f 4919 	mov.w	r9, r9, lsr #16
   2378e:	ebc5 0801 	rsb	r8, r5, r1
   23792:	ebc9 4717 	rsb	r7, r9, r7, lsr #16
   23796:	eb07 4728 	add.w	r7, r7, r8, asr #16
   2379a:	fa1f f888 	uxth.w	r8, r8
   2379e:	1439      	asrs	r1, r7, #16
   237a0:	45b2      	cmp	sl, r6
   237a2:	ea48 4707 	orr.w	r7, r8, r7, lsl #16
   237a6:	4625      	mov	r5, r4
   237a8:	f843 7b04 	str.w	r7, [r3], #4
   237ac:	d8e4      	bhi.n	23778 <__mdiff+0x58>
   237ae:	4565      	cmp	r5, ip
   237b0:	d20d      	bcs.n	237ce <__mdiff+0xae>
   237b2:	f855 4b04 	ldr.w	r4, [r5], #4
   237b6:	b2a6      	uxth	r6, r4
   237b8:	440e      	add	r6, r1
   237ba:	0c24      	lsrs	r4, r4, #16
   237bc:	eb04 4426 	add.w	r4, r4, r6, asr #16
   237c0:	b2b6      	uxth	r6, r6
   237c2:	1421      	asrs	r1, r4, #16
   237c4:	ea46 4404 	orr.w	r4, r6, r4, lsl #16
   237c8:	f843 4b04 	str.w	r4, [r3], #4
   237cc:	e7ef      	b.n	237ae <__mdiff+0x8e>
   237ce:	f853 1d04 	ldr.w	r1, [r3, #-4]!
   237d2:	b909      	cbnz	r1, 237d8 <__mdiff+0xb8>
   237d4:	3a01      	subs	r2, #1
   237d6:	e7fa      	b.n	237ce <__mdiff+0xae>
   237d8:	6102      	str	r2, [r0, #16]
   237da:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

000237e0 <__ulp>:
__ulp():
   237e0:	4b0f      	ldr	r3, [pc, #60]	; (23820 <__ulp+0x40>)
   237e2:	400b      	ands	r3, r1
   237e4:	f1a3 7350 	sub.w	r3, r3, #54525952	; 0x3400000
   237e8:	2b00      	cmp	r3, #0
   237ea:	dd01      	ble.n	237f0 <__ulp+0x10>
   237ec:	4619      	mov	r1, r3
   237ee:	e009      	b.n	23804 <__ulp+0x24>
   237f0:	425b      	negs	r3, r3
   237f2:	151b      	asrs	r3, r3, #20
   237f4:	2b13      	cmp	r3, #19
   237f6:	f04f 0100 	mov.w	r1, #0
   237fa:	dc05      	bgt.n	23808 <__ulp+0x28>
   237fc:	f44f 2200 	mov.w	r2, #524288	; 0x80000
   23800:	fa42 f103 	asr.w	r1, r2, r3
   23804:	2000      	movs	r0, #0
   23806:	4770      	bx	lr
   23808:	2b32      	cmp	r3, #50	; 0x32
   2380a:	f04f 0201 	mov.w	r2, #1
   2380e:	bfda      	itte	le
   23810:	f1c3 0333 	rsble	r3, r3, #51	; 0x33
   23814:	fa02 f303 	lslle.w	r3, r2, r3
   23818:	4613      	movgt	r3, r2
   2381a:	4618      	mov	r0, r3
   2381c:	4770      	bx	lr
   2381e:	bf00      	nop
   23820:	7ff00000 	.word	0x7ff00000

00023824 <__b2d>:
__b2d():
   23824:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   23828:	6906      	ldr	r6, [r0, #16]
   2382a:	f100 0714 	add.w	r7, r0, #20
   2382e:	eb07 0686 	add.w	r6, r7, r6, lsl #2
   23832:	f856 4c04 	ldr.w	r4, [r6, #-4]
   23836:	4688      	mov	r8, r1
   23838:	4620      	mov	r0, r4
   2383a:	f7ff fdc5 	bl	233c8 <__hi0bits>
   2383e:	f1c0 0320 	rsb	r3, r0, #32
   23842:	280a      	cmp	r0, #10
   23844:	f1a6 0504 	sub.w	r5, r6, #4
   23848:	f8c8 3000 	str.w	r3, [r8]
   2384c:	dc14      	bgt.n	23878 <__b2d+0x54>
   2384e:	42bd      	cmp	r5, r7
   23850:	f1c0 010b 	rsb	r1, r0, #11
   23854:	bf88      	it	hi
   23856:	f856 5c08 	ldrhi.w	r5, [r6, #-8]
   2385a:	fa24 fc01 	lsr.w	ip, r4, r1
   2385e:	bf98      	it	ls
   23860:	2500      	movls	r5, #0
   23862:	3015      	adds	r0, #21
   23864:	fa25 f101 	lsr.w	r1, r5, r1
   23868:	4084      	lsls	r4, r0
   2386a:	f04c 537f 	orr.w	r3, ip, #1069547520	; 0x3fc00000
   2386e:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
   23872:	ea41 0204 	orr.w	r2, r1, r4
   23876:	e024      	b.n	238c2 <__b2d+0x9e>
   23878:	42bd      	cmp	r5, r7
   2387a:	bf86      	itte	hi
   2387c:	f1a6 0508 	subhi.w	r5, r6, #8
   23880:	f856 1c08 	ldrhi.w	r1, [r6, #-8]
   23884:	2100      	movls	r1, #0
   23886:	f1b0 060b 	subs.w	r6, r0, #11
   2388a:	d015      	beq.n	238b8 <__b2d+0x94>
   2388c:	40b4      	lsls	r4, r6
   2388e:	f1c0 002b 	rsb	r0, r0, #43	; 0x2b
   23892:	fa21 fc00 	lsr.w	ip, r1, r0
   23896:	f044 547f 	orr.w	r4, r4, #1069547520	; 0x3fc00000
   2389a:	f444 1440 	orr.w	r4, r4, #3145728	; 0x300000
   2389e:	42bd      	cmp	r5, r7
   238a0:	ea44 030c 	orr.w	r3, r4, ip
   238a4:	bf8c      	ite	hi
   238a6:	f855 4c04 	ldrhi.w	r4, [r5, #-4]
   238aa:	2400      	movls	r4, #0
   238ac:	fa24 f000 	lsr.w	r0, r4, r0
   238b0:	40b1      	lsls	r1, r6
   238b2:	ea40 0201 	orr.w	r2, r0, r1
   238b6:	e004      	b.n	238c2 <__b2d+0x9e>
   238b8:	f044 537f 	orr.w	r3, r4, #1069547520	; 0x3fc00000
   238bc:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
   238c0:	460a      	mov	r2, r1
   238c2:	4610      	mov	r0, r2
   238c4:	4619      	mov	r1, r3
   238c6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

000238ca <__d2b>:
__d2b():
   238ca:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   238ce:	2101      	movs	r1, #1
   238d0:	461d      	mov	r5, r3
   238d2:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
   238d6:	f8dd 802c 	ldr.w	r8, [sp, #44]	; 0x2c
   238da:	4614      	mov	r4, r2
   238dc:	f7ff fcac 	bl	23238 <_Balloc>
   238e0:	f3c5 570a 	ubfx	r7, r5, #20, #11
   238e4:	4606      	mov	r6, r0
   238e6:	f3c5 0313 	ubfx	r3, r5, #0, #20
   238ea:	b10f      	cbz	r7, 238f0 <__d2b+0x26>
   238ec:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   238f0:	9301      	str	r3, [sp, #4]
   238f2:	b1d4      	cbz	r4, 2392a <__d2b+0x60>
   238f4:	a802      	add	r0, sp, #8
   238f6:	f840 4d08 	str.w	r4, [r0, #-8]!
   238fa:	4668      	mov	r0, sp
   238fc:	f7ff fd84 	bl	23408 <__lo0bits>
   23900:	9b00      	ldr	r3, [sp, #0]
   23902:	b148      	cbz	r0, 23918 <__d2b+0x4e>
   23904:	9a01      	ldr	r2, [sp, #4]
   23906:	f1c0 0120 	rsb	r1, r0, #32
   2390a:	fa02 f101 	lsl.w	r1, r2, r1
   2390e:	40c2      	lsrs	r2, r0
   23910:	430b      	orrs	r3, r1
   23912:	6173      	str	r3, [r6, #20]
   23914:	9201      	str	r2, [sp, #4]
   23916:	e000      	b.n	2391a <__d2b+0x50>
   23918:	6173      	str	r3, [r6, #20]
   2391a:	9b01      	ldr	r3, [sp, #4]
   2391c:	2b00      	cmp	r3, #0
   2391e:	bf0c      	ite	eq
   23920:	2401      	moveq	r4, #1
   23922:	2402      	movne	r4, #2
   23924:	61b3      	str	r3, [r6, #24]
   23926:	6134      	str	r4, [r6, #16]
   23928:	e007      	b.n	2393a <__d2b+0x70>
   2392a:	a801      	add	r0, sp, #4
   2392c:	f7ff fd6c 	bl	23408 <__lo0bits>
   23930:	9b01      	ldr	r3, [sp, #4]
   23932:	2401      	movs	r4, #1
   23934:	6173      	str	r3, [r6, #20]
   23936:	6134      	str	r4, [r6, #16]
   23938:	3020      	adds	r0, #32
   2393a:	b13f      	cbz	r7, 2394c <__d2b+0x82>
   2393c:	f2a7 4733 	subw	r7, r7, #1075	; 0x433
   23940:	4407      	add	r7, r0
   23942:	f8c9 7000 	str.w	r7, [r9]
   23946:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
   2394a:	e00a      	b.n	23962 <__d2b+0x98>
   2394c:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
   23950:	eb06 0384 	add.w	r3, r6, r4, lsl #2
   23954:	f8c9 0000 	str.w	r0, [r9]
   23958:	6918      	ldr	r0, [r3, #16]
   2395a:	f7ff fd35 	bl	233c8 <__hi0bits>
   2395e:	ebc0 1044 	rsb	r0, r0, r4, lsl #5
   23962:	f8c8 0000 	str.w	r0, [r8]
   23966:	4630      	mov	r0, r6
   23968:	b003      	add	sp, #12
   2396a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0002396e <__ratio>:
__ratio():
   2396e:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
   23972:	460e      	mov	r6, r1
   23974:	4669      	mov	r1, sp
   23976:	4680      	mov	r8, r0
   23978:	f7ff ff54 	bl	23824 <__b2d>
   2397c:	460d      	mov	r5, r1
   2397e:	4604      	mov	r4, r0
   23980:	a901      	add	r1, sp, #4
   23982:	4630      	mov	r0, r6
   23984:	f7ff ff4e 	bl	23824 <__b2d>
   23988:	9f00      	ldr	r7, [sp, #0]
   2398a:	460b      	mov	r3, r1
   2398c:	9901      	ldr	r1, [sp, #4]
   2398e:	4602      	mov	r2, r0
   23990:	1a7f      	subs	r7, r7, r1
   23992:	f8d8 0010 	ldr.w	r0, [r8, #16]
   23996:	6931      	ldr	r1, [r6, #16]
   23998:	1a41      	subs	r1, r0, r1
   2399a:	eb07 1141 	add.w	r1, r7, r1, lsl #5
   2399e:	2900      	cmp	r1, #0
   239a0:	bfcc      	ite	gt
   239a2:	eb05 5501 	addgt.w	r5, r5, r1, lsl #20
   239a6:	eba3 5301 	suble.w	r3, r3, r1, lsl #20
   239aa:	4620      	mov	r0, r4
   239ac:	4629      	mov	r1, r5
   239ae:	f000 faad 	bl	23f0c <__aeabi_ddiv>
   239b2:	b002      	add	sp, #8
   239b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

000239b8 <__copybits>:
__copybits():
   239b8:	b510      	push	{r4, lr}
   239ba:	3901      	subs	r1, #1
   239bc:	f102 0314 	add.w	r3, r2, #20
   239c0:	1149      	asrs	r1, r1, #5
   239c2:	6912      	ldr	r2, [r2, #16]
   239c4:	3101      	adds	r1, #1
   239c6:	eb00 0181 	add.w	r1, r0, r1, lsl #2
   239ca:	eb03 0282 	add.w	r2, r3, r2, lsl #2
   239ce:	4293      	cmp	r3, r2
   239d0:	d204      	bcs.n	239dc <__copybits+0x24>
   239d2:	f853 4b04 	ldr.w	r4, [r3], #4
   239d6:	f840 4b04 	str.w	r4, [r0], #4
   239da:	e7f8      	b.n	239ce <__copybits+0x16>
   239dc:	4288      	cmp	r0, r1
   239de:	d203      	bcs.n	239e8 <__copybits+0x30>
   239e0:	2300      	movs	r3, #0
   239e2:	f840 3b04 	str.w	r3, [r0], #4
   239e6:	e7f9      	b.n	239dc <__copybits+0x24>
   239e8:	bd10      	pop	{r4, pc}

000239ea <__any_on>:
__any_on():
   239ea:	f100 0214 	add.w	r2, r0, #20
   239ee:	6900      	ldr	r0, [r0, #16]
   239f0:	114b      	asrs	r3, r1, #5
   239f2:	4283      	cmp	r3, r0
   239f4:	b510      	push	{r4, lr}
   239f6:	dc0c      	bgt.n	23a12 <__any_on+0x28>
   239f8:	da0c      	bge.n	23a14 <__any_on+0x2a>
   239fa:	f011 011f 	ands.w	r1, r1, #31
   239fe:	d009      	beq.n	23a14 <__any_on+0x2a>
   23a00:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
   23a04:	fa20 f401 	lsr.w	r4, r0, r1
   23a08:	fa04 f101 	lsl.w	r1, r4, r1
   23a0c:	4281      	cmp	r1, r0
   23a0e:	d10e      	bne.n	23a2e <__any_on+0x44>
   23a10:	e000      	b.n	23a14 <__any_on+0x2a>
   23a12:	4603      	mov	r3, r0
   23a14:	eb02 0383 	add.w	r3, r2, r3, lsl #2
   23a18:	4293      	cmp	r3, r2
   23a1a:	4619      	mov	r1, r3
   23a1c:	d905      	bls.n	23a2a <__any_on+0x40>
   23a1e:	f851 1c04 	ldr.w	r1, [r1, #-4]
   23a22:	3b04      	subs	r3, #4
   23a24:	2900      	cmp	r1, #0
   23a26:	d0f7      	beq.n	23a18 <__any_on+0x2e>
   23a28:	e001      	b.n	23a2e <__any_on+0x44>
   23a2a:	2000      	movs	r0, #0
   23a2c:	bd10      	pop	{r4, pc}
   23a2e:	2001      	movs	r0, #1
   23a30:	bd10      	pop	{r4, pc}

00023a32 <_calloc_r>:
_calloc_r():
   23a32:	b538      	push	{r3, r4, r5, lr}
   23a34:	fb02 f401 	mul.w	r4, r2, r1
   23a38:	4621      	mov	r1, r4
   23a3a:	f7fa fecb 	bl	1e7d4 <_malloc_r>
   23a3e:	4605      	mov	r5, r0
   23a40:	b118      	cbz	r0, 23a4a <_calloc_r+0x18>
   23a42:	2100      	movs	r1, #0
   23a44:	4622      	mov	r2, r4
   23a46:	f7fa fa12 	bl	1de6e <memset>
   23a4a:	4628      	mov	r0, r5
   23a4c:	bd38      	pop	{r3, r4, r5, pc}

00023a4e <_realloc_r>:
_realloc_r():
   23a4e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   23a50:	4606      	mov	r6, r0
   23a52:	4614      	mov	r4, r2
   23a54:	460d      	mov	r5, r1
   23a56:	b921      	cbnz	r1, 23a62 <_realloc_r+0x14>
   23a58:	4611      	mov	r1, r2
   23a5a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
   23a5e:	f7fa beb9 	b.w	1e7d4 <_malloc_r>
   23a62:	b91a      	cbnz	r2, 23a6c <_realloc_r+0x1e>
   23a64:	f7fa fe44 	bl	1e6f0 <_free_r>
   23a68:	4620      	mov	r0, r4
   23a6a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   23a6c:	f000 f91a 	bl	23ca4 <_malloc_usable_size_r>
   23a70:	42a0      	cmp	r0, r4
   23a72:	d20e      	bcs.n	23a92 <_realloc_r+0x44>
   23a74:	4630      	mov	r0, r6
   23a76:	4621      	mov	r1, r4
   23a78:	f7fa feac 	bl	1e7d4 <_malloc_r>
   23a7c:	4607      	mov	r7, r0
   23a7e:	b150      	cbz	r0, 23a96 <_realloc_r+0x48>
   23a80:	4629      	mov	r1, r5
   23a82:	4622      	mov	r2, r4
   23a84:	f7fa f9cf 	bl	1de26 <memcpy>
   23a88:	4630      	mov	r0, r6
   23a8a:	4629      	mov	r1, r5
   23a8c:	f7fa fe30 	bl	1e6f0 <_free_r>
   23a90:	e001      	b.n	23a96 <_realloc_r+0x48>
   23a92:	4628      	mov	r0, r5
   23a94:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   23a96:	4638      	mov	r0, r7
   23a98:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

00023a9c <_read_r>:
_read_r():
   23a9c:	b538      	push	{r3, r4, r5, lr}
   23a9e:	4c07      	ldr	r4, [pc, #28]	; (23abc <_read_r+0x20>)
   23aa0:	4605      	mov	r5, r0
   23aa2:	2000      	movs	r0, #0
   23aa4:	6020      	str	r0, [r4, #0]
   23aa6:	4608      	mov	r0, r1
   23aa8:	4611      	mov	r1, r2
   23aaa:	461a      	mov	r2, r3
   23aac:	f7ec fc74 	bl	10398 <_read>
   23ab0:	1c43      	adds	r3, r0, #1
   23ab2:	d102      	bne.n	23aba <_read_r+0x1e>
   23ab4:	6823      	ldr	r3, [r4, #0]
   23ab6:	b103      	cbz	r3, 23aba <_read_r+0x1e>
   23ab8:	602b      	str	r3, [r5, #0]
   23aba:	bd38      	pop	{r3, r4, r5, pc}
   23abc:	2007cb20 	.word	0x2007cb20

00023ac0 <__fpclassifyd>:
__fpclassifyd():
   23ac0:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
   23ac4:	b510      	push	{r4, lr}
   23ac6:	d100      	bne.n	23aca <__fpclassifyd+0xa>
   23ac8:	b178      	cbz	r0, 23aea <__fpclassifyd+0x2a>
   23aca:	4a0c      	ldr	r2, [pc, #48]	; (23afc <__fpclassifyd+0x3c>)
   23acc:	f5a3 1480 	sub.w	r4, r3, #1048576	; 0x100000
   23ad0:	4294      	cmp	r4, r2
   23ad2:	d90c      	bls.n	23aee <__fpclassifyd+0x2e>
   23ad4:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
   23ad8:	d30b      	bcc.n	23af2 <__fpclassifyd+0x32>
   23ada:	4a09      	ldr	r2, [pc, #36]	; (23b00 <__fpclassifyd+0x40>)
   23adc:	4293      	cmp	r3, r2
   23ade:	d10a      	bne.n	23af6 <__fpclassifyd+0x36>
   23ae0:	f1d0 0001 	rsbs	r0, r0, #1
   23ae4:	bf38      	it	cc
   23ae6:	2000      	movcc	r0, #0
   23ae8:	bd10      	pop	{r4, pc}
   23aea:	2002      	movs	r0, #2
   23aec:	bd10      	pop	{r4, pc}
   23aee:	2004      	movs	r0, #4
   23af0:	bd10      	pop	{r4, pc}
   23af2:	2003      	movs	r0, #3
   23af4:	bd10      	pop	{r4, pc}
   23af6:	2000      	movs	r0, #0
   23af8:	bd10      	pop	{r4, pc}
   23afa:	bf00      	nop
   23afc:	7fdfffff 	.word	0x7fdfffff
   23b00:	7ff00000 	.word	0x7ff00000

00023b04 <__sccl>:
__sccl():
   23b04:	b5f0      	push	{r4, r5, r6, r7, lr}
   23b06:	780b      	ldrb	r3, [r1, #0]
   23b08:	2b5e      	cmp	r3, #94	; 0x5e
   23b0a:	d002      	beq.n	23b12 <__sccl+0xe>
   23b0c:	1c4c      	adds	r4, r1, #1
   23b0e:	2100      	movs	r1, #0
   23b10:	e002      	b.n	23b18 <__sccl+0x14>
   23b12:	1c8c      	adds	r4, r1, #2
   23b14:	784b      	ldrb	r3, [r1, #1]
   23b16:	2101      	movs	r1, #1
   23b18:	2200      	movs	r2, #0
   23b1a:	5481      	strb	r1, [r0, r2]
   23b1c:	3201      	adds	r2, #1
   23b1e:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
   23b22:	d1fa      	bne.n	23b1a <__sccl+0x16>
   23b24:	b90b      	cbnz	r3, 23b2a <__sccl+0x26>
   23b26:	1e65      	subs	r5, r4, #1
   23b28:	e01b      	b.n	23b62 <__sccl+0x5e>
   23b2a:	f1c1 0701 	rsb	r7, r1, #1
   23b2e:	b2fe      	uxtb	r6, r7
   23b30:	54c6      	strb	r6, [r0, r3]
   23b32:	1c62      	adds	r2, r4, #1
   23b34:	f812 1c01 	ldrb.w	r1, [r2, #-1]
   23b38:	1e55      	subs	r5, r2, #1
   23b3a:	292d      	cmp	r1, #45	; 0x2d
   23b3c:	4614      	mov	r4, r2
   23b3e:	d004      	beq.n	23b4a <__sccl+0x46>
   23b40:	295d      	cmp	r1, #93	; 0x5d
   23b42:	d00d      	beq.n	23b60 <__sccl+0x5c>
   23b44:	b169      	cbz	r1, 23b62 <__sccl+0x5e>
   23b46:	460b      	mov	r3, r1
   23b48:	e7f1      	b.n	23b2e <__sccl+0x2a>
   23b4a:	7815      	ldrb	r5, [r2, #0]
   23b4c:	2d5d      	cmp	r5, #93	; 0x5d
   23b4e:	d0fa      	beq.n	23b46 <__sccl+0x42>
   23b50:	429d      	cmp	r5, r3
   23b52:	dbf8      	blt.n	23b46 <__sccl+0x42>
   23b54:	3301      	adds	r3, #1
   23b56:	42ab      	cmp	r3, r5
   23b58:	54c6      	strb	r6, [r0, r3]
   23b5a:	dbfb      	blt.n	23b54 <__sccl+0x50>
   23b5c:	3202      	adds	r2, #2
   23b5e:	e7e9      	b.n	23b34 <__sccl+0x30>
   23b60:	4615      	mov	r5, r2
   23b62:	4628      	mov	r0, r5
   23b64:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

00023b68 <nanf>:
nanf():
   23b68:	4800      	ldr	r0, [pc, #0]	; (23b6c <nanf+0x4>)
   23b6a:	4770      	bx	lr
   23b6c:	7fc00000 	.word	0x7fc00000

00023b70 <_strtoul_r>:
_strtoul_r():
   23b70:	4684      	mov	ip, r0
   23b72:	483a      	ldr	r0, [pc, #232]	; (23c5c <_strtoul_r+0xec>)
   23b74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23b78:	f8d0 8000 	ldr.w	r8, [r0]
   23b7c:	460e      	mov	r6, r1
   23b7e:	4634      	mov	r4, r6
   23b80:	f814 5b01 	ldrb.w	r5, [r4], #1
   23b84:	eb08 0005 	add.w	r0, r8, r5
   23b88:	7840      	ldrb	r0, [r0, #1]
   23b8a:	f000 0008 	and.w	r0, r0, #8
   23b8e:	f000 07ff 	and.w	r7, r0, #255	; 0xff
   23b92:	b108      	cbz	r0, 23b98 <_strtoul_r+0x28>
   23b94:	4626      	mov	r6, r4
   23b96:	e7f2      	b.n	23b7e <_strtoul_r+0xe>
   23b98:	2d2d      	cmp	r5, #45	; 0x2d
   23b9a:	d103      	bne.n	23ba4 <_strtoul_r+0x34>
   23b9c:	1cb4      	adds	r4, r6, #2
   23b9e:	7875      	ldrb	r5, [r6, #1]
   23ba0:	2701      	movs	r7, #1
   23ba2:	e003      	b.n	23bac <_strtoul_r+0x3c>
   23ba4:	2d2b      	cmp	r5, #43	; 0x2b
   23ba6:	bf04      	itt	eq
   23ba8:	7875      	ldrbeq	r5, [r6, #1]
   23baa:	1cb4      	addeq	r4, r6, #2
   23bac:	f033 0010 	bics.w	r0, r3, #16
   23bb0:	d10d      	bne.n	23bce <_strtoul_r+0x5e>
   23bb2:	2d30      	cmp	r5, #48	; 0x30
   23bb4:	d108      	bne.n	23bc8 <_strtoul_r+0x58>
   23bb6:	7820      	ldrb	r0, [r4, #0]
   23bb8:	f000 00df 	and.w	r0, r0, #223	; 0xdf
   23bbc:	2858      	cmp	r0, #88	; 0x58
   23bbe:	d147      	bne.n	23c50 <_strtoul_r+0xe0>
   23bc0:	7865      	ldrb	r5, [r4, #1]
   23bc2:	2310      	movs	r3, #16
   23bc4:	3402      	adds	r4, #2
   23bc6:	e002      	b.n	23bce <_strtoul_r+0x5e>
   23bc8:	2b00      	cmp	r3, #0
   23bca:	bf08      	it	eq
   23bcc:	230a      	moveq	r3, #10
   23bce:	f04f 39ff 	mov.w	r9, #4294967295
   23bd2:	fbb9 f9f3 	udiv	r9, r9, r3
   23bd6:	fb03 fa09 	mul.w	sl, r3, r9
   23bda:	2600      	movs	r6, #0
   23bdc:	ea6f 0a0a 	mvn.w	sl, sl
   23be0:	4630      	mov	r0, r6
   23be2:	eb08 0b05 	add.w	fp, r8, r5
   23be6:	f89b b001 	ldrb.w	fp, [fp, #1]
   23bea:	f01b 0f04 	tst.w	fp, #4
   23bee:	d001      	beq.n	23bf4 <_strtoul_r+0x84>
   23bf0:	3d30      	subs	r5, #48	; 0x30
   23bf2:	e00b      	b.n	23c0c <_strtoul_r+0x9c>
   23bf4:	f01b 0b03 	ands.w	fp, fp, #3
   23bf8:	d01a      	beq.n	23c30 <_strtoul_r+0xc0>
   23bfa:	f1bb 0f01 	cmp.w	fp, #1
   23bfe:	bf14      	ite	ne
   23c00:	f04f 0b57 	movne.w	fp, #87	; 0x57
   23c04:	f04f 0b37 	moveq.w	fp, #55	; 0x37
   23c08:	ebcb 0505 	rsb	r5, fp, r5
   23c0c:	429d      	cmp	r5, r3
   23c0e:	da0f      	bge.n	23c30 <_strtoul_r+0xc0>
   23c10:	2e00      	cmp	r6, #0
   23c12:	db08      	blt.n	23c26 <_strtoul_r+0xb6>
   23c14:	4548      	cmp	r0, r9
   23c16:	d806      	bhi.n	23c26 <_strtoul_r+0xb6>
   23c18:	d101      	bne.n	23c1e <_strtoul_r+0xae>
   23c1a:	4555      	cmp	r5, sl
   23c1c:	dc03      	bgt.n	23c26 <_strtoul_r+0xb6>
   23c1e:	fb03 5000 	mla	r0, r3, r0, r5
   23c22:	2601      	movs	r6, #1
   23c24:	e001      	b.n	23c2a <_strtoul_r+0xba>
   23c26:	f04f 36ff 	mov.w	r6, #4294967295
   23c2a:	f814 5b01 	ldrb.w	r5, [r4], #1
   23c2e:	e7d8      	b.n	23be2 <_strtoul_r+0x72>
   23c30:	2e00      	cmp	r6, #0
   23c32:	da05      	bge.n	23c40 <_strtoul_r+0xd0>
   23c34:	2322      	movs	r3, #34	; 0x22
   23c36:	f8cc 3000 	str.w	r3, [ip]
   23c3a:	f04f 30ff 	mov.w	r0, #4294967295
   23c3e:	e001      	b.n	23c44 <_strtoul_r+0xd4>
   23c40:	b107      	cbz	r7, 23c44 <_strtoul_r+0xd4>
   23c42:	4240      	negs	r0, r0
   23c44:	b142      	cbz	r2, 23c58 <_strtoul_r+0xe8>
   23c46:	b106      	cbz	r6, 23c4a <_strtoul_r+0xda>
   23c48:	1e61      	subs	r1, r4, #1
   23c4a:	6011      	str	r1, [r2, #0]
   23c4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23c50:	2b00      	cmp	r3, #0
   23c52:	bf08      	it	eq
   23c54:	2308      	moveq	r3, #8
   23c56:	e7ba      	b.n	23bce <_strtoul_r+0x5e>
   23c58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23c5c:	2007c0ec 	.word	0x2007c0ec

00023c60 <_fstat_r>:
_fstat_r():
   23c60:	b538      	push	{r3, r4, r5, lr}
   23c62:	4c07      	ldr	r4, [pc, #28]	; (23c80 <_fstat_r+0x20>)
   23c64:	2300      	movs	r3, #0
   23c66:	4605      	mov	r5, r0
   23c68:	4608      	mov	r0, r1
   23c6a:	4611      	mov	r1, r2
   23c6c:	6023      	str	r3, [r4, #0]
   23c6e:	f7ec fbaa 	bl	103c6 <_fstat>
   23c72:	1c43      	adds	r3, r0, #1
   23c74:	d102      	bne.n	23c7c <_fstat_r+0x1c>
   23c76:	6823      	ldr	r3, [r4, #0]
   23c78:	b103      	cbz	r3, 23c7c <_fstat_r+0x1c>
   23c7a:	602b      	str	r3, [r5, #0]
   23c7c:	bd38      	pop	{r3, r4, r5, pc}
   23c7e:	bf00      	nop
   23c80:	2007cb20 	.word	0x2007cb20

00023c84 <_isatty_r>:
_isatty_r():
   23c84:	b538      	push	{r3, r4, r5, lr}
   23c86:	4c06      	ldr	r4, [pc, #24]	; (23ca0 <_isatty_r+0x1c>)
   23c88:	2300      	movs	r3, #0
   23c8a:	4605      	mov	r5, r0
   23c8c:	4608      	mov	r0, r1
   23c8e:	6023      	str	r3, [r4, #0]
   23c90:	f7ec fb9c 	bl	103cc <_isatty>
   23c94:	1c43      	adds	r3, r0, #1
   23c96:	d102      	bne.n	23c9e <_isatty_r+0x1a>
   23c98:	6823      	ldr	r3, [r4, #0]
   23c9a:	b103      	cbz	r3, 23c9e <_isatty_r+0x1a>
   23c9c:	602b      	str	r3, [r5, #0]
   23c9e:	bd38      	pop	{r3, r4, r5, pc}
   23ca0:	2007cb20 	.word	0x2007cb20

00023ca4 <_malloc_usable_size_r>:
_malloc_usable_size_r():
   23ca4:	f851 0c04 	ldr.w	r0, [r1, #-4]
   23ca8:	2800      	cmp	r0, #0
   23caa:	da02      	bge.n	23cb2 <_malloc_usable_size_r+0xe>
   23cac:	3904      	subs	r1, #4
   23cae:	580b      	ldr	r3, [r1, r0]
   23cb0:	4418      	add	r0, r3
   23cb2:	3804      	subs	r0, #4
   23cb4:	4770      	bx	lr
	...

00023cb8 <__aeabi_dmul>:
__aeabi_dmul():
   23cb8:	b570      	push	{r4, r5, r6, lr}
   23cba:	f04f 0cff 	mov.w	ip, #255	; 0xff
   23cbe:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   23cc2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   23cc6:	bf1d      	ittte	ne
   23cc8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   23ccc:	ea94 0f0c 	teqne	r4, ip
   23cd0:	ea95 0f0c 	teqne	r5, ip
   23cd4:	f000 f8de 	bleq	23e94 <__aeabi_dmul+0x1dc>
   23cd8:	442c      	add	r4, r5
   23cda:	ea81 0603 	eor.w	r6, r1, r3
   23cde:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
   23ce2:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
   23ce6:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
   23cea:	bf18      	it	ne
   23cec:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
   23cf0:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   23cf4:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   23cf8:	d038      	beq.n	23d6c <__aeabi_dmul+0xb4>
   23cfa:	fba0 ce02 	umull	ip, lr, r0, r2
   23cfe:	f04f 0500 	mov.w	r5, #0
   23d02:	fbe1 e502 	umlal	lr, r5, r1, r2
   23d06:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
   23d0a:	fbe0 e503 	umlal	lr, r5, r0, r3
   23d0e:	f04f 0600 	mov.w	r6, #0
   23d12:	fbe1 5603 	umlal	r5, r6, r1, r3
   23d16:	f09c 0f00 	teq	ip, #0
   23d1a:	bf18      	it	ne
   23d1c:	f04e 0e01 	orrne.w	lr, lr, #1
   23d20:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
   23d24:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
   23d28:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
   23d2c:	d204      	bcs.n	23d38 <__aeabi_dmul+0x80>
   23d2e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
   23d32:	416d      	adcs	r5, r5
   23d34:	eb46 0606 	adc.w	r6, r6, r6
   23d38:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
   23d3c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
   23d40:	ea4f 20c5 	mov.w	r0, r5, lsl #11
   23d44:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
   23d48:	ea4f 2ece 	mov.w	lr, lr, lsl #11
   23d4c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   23d50:	bf88      	it	hi
   23d52:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   23d56:	d81e      	bhi.n	23d96 <__aeabi_dmul+0xde>
   23d58:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
   23d5c:	bf08      	it	eq
   23d5e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
   23d62:	f150 0000 	adcs.w	r0, r0, #0
   23d66:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   23d6a:	bd70      	pop	{r4, r5, r6, pc}
   23d6c:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
   23d70:	ea46 0101 	orr.w	r1, r6, r1
   23d74:	ea40 0002 	orr.w	r0, r0, r2
   23d78:	ea81 0103 	eor.w	r1, r1, r3
   23d7c:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
   23d80:	bfc2      	ittt	gt
   23d82:	ebd4 050c 	rsbsgt	r5, r4, ip
   23d86:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   23d8a:	bd70      	popgt	{r4, r5, r6, pc}
   23d8c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   23d90:	f04f 0e00 	mov.w	lr, #0
   23d94:	3c01      	subs	r4, #1
   23d96:	f300 80ab 	bgt.w	23ef0 <__aeabi_dmul+0x238>
   23d9a:	f114 0f36 	cmn.w	r4, #54	; 0x36
   23d9e:	bfde      	ittt	le
   23da0:	2000      	movle	r0, #0
   23da2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
   23da6:	bd70      	pople	{r4, r5, r6, pc}
   23da8:	f1c4 0400 	rsb	r4, r4, #0
   23dac:	3c20      	subs	r4, #32
   23dae:	da35      	bge.n	23e1c <__aeabi_dmul+0x164>
   23db0:	340c      	adds	r4, #12
   23db2:	dc1b      	bgt.n	23dec <__aeabi_dmul+0x134>
   23db4:	f104 0414 	add.w	r4, r4, #20
   23db8:	f1c4 0520 	rsb	r5, r4, #32
   23dbc:	fa00 f305 	lsl.w	r3, r0, r5
   23dc0:	fa20 f004 	lsr.w	r0, r0, r4
   23dc4:	fa01 f205 	lsl.w	r2, r1, r5
   23dc8:	ea40 0002 	orr.w	r0, r0, r2
   23dcc:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
   23dd0:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   23dd4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   23dd8:	fa21 f604 	lsr.w	r6, r1, r4
   23ddc:	eb42 0106 	adc.w	r1, r2, r6
   23de0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   23de4:	bf08      	it	eq
   23de6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   23dea:	bd70      	pop	{r4, r5, r6, pc}
   23dec:	f1c4 040c 	rsb	r4, r4, #12
   23df0:	f1c4 0520 	rsb	r5, r4, #32
   23df4:	fa00 f304 	lsl.w	r3, r0, r4
   23df8:	fa20 f005 	lsr.w	r0, r0, r5
   23dfc:	fa01 f204 	lsl.w	r2, r1, r4
   23e00:	ea40 0002 	orr.w	r0, r0, r2
   23e04:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   23e08:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   23e0c:	f141 0100 	adc.w	r1, r1, #0
   23e10:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   23e14:	bf08      	it	eq
   23e16:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   23e1a:	bd70      	pop	{r4, r5, r6, pc}
   23e1c:	f1c4 0520 	rsb	r5, r4, #32
   23e20:	fa00 f205 	lsl.w	r2, r0, r5
   23e24:	ea4e 0e02 	orr.w	lr, lr, r2
   23e28:	fa20 f304 	lsr.w	r3, r0, r4
   23e2c:	fa01 f205 	lsl.w	r2, r1, r5
   23e30:	ea43 0302 	orr.w	r3, r3, r2
   23e34:	fa21 f004 	lsr.w	r0, r1, r4
   23e38:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   23e3c:	fa21 f204 	lsr.w	r2, r1, r4
   23e40:	ea20 0002 	bic.w	r0, r0, r2
   23e44:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
   23e48:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   23e4c:	bf08      	it	eq
   23e4e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   23e52:	bd70      	pop	{r4, r5, r6, pc}
   23e54:	f094 0f00 	teq	r4, #0
   23e58:	d10f      	bne.n	23e7a <__aeabi_dmul+0x1c2>
   23e5a:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
   23e5e:	0040      	lsls	r0, r0, #1
   23e60:	eb41 0101 	adc.w	r1, r1, r1
   23e64:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   23e68:	bf08      	it	eq
   23e6a:	3c01      	subeq	r4, #1
   23e6c:	d0f7      	beq.n	23e5e <__aeabi_dmul+0x1a6>
   23e6e:	ea41 0106 	orr.w	r1, r1, r6
   23e72:	f095 0f00 	teq	r5, #0
   23e76:	bf18      	it	ne
   23e78:	4770      	bxne	lr
   23e7a:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
   23e7e:	0052      	lsls	r2, r2, #1
   23e80:	eb43 0303 	adc.w	r3, r3, r3
   23e84:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
   23e88:	bf08      	it	eq
   23e8a:	3d01      	subeq	r5, #1
   23e8c:	d0f7      	beq.n	23e7e <__aeabi_dmul+0x1c6>
   23e8e:	ea43 0306 	orr.w	r3, r3, r6
   23e92:	4770      	bx	lr
   23e94:	ea94 0f0c 	teq	r4, ip
   23e98:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   23e9c:	bf18      	it	ne
   23e9e:	ea95 0f0c 	teqne	r5, ip
   23ea2:	d00c      	beq.n	23ebe <__aeabi_dmul+0x206>
   23ea4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   23ea8:	bf18      	it	ne
   23eaa:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   23eae:	d1d1      	bne.n	23e54 <__aeabi_dmul+0x19c>
   23eb0:	ea81 0103 	eor.w	r1, r1, r3
   23eb4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   23eb8:	f04f 0000 	mov.w	r0, #0
   23ebc:	bd70      	pop	{r4, r5, r6, pc}
   23ebe:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   23ec2:	bf06      	itte	eq
   23ec4:	4610      	moveq	r0, r2
   23ec6:	4619      	moveq	r1, r3
   23ec8:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   23ecc:	d019      	beq.n	23f02 <__aeabi_dmul+0x24a>
   23ece:	ea94 0f0c 	teq	r4, ip
   23ed2:	d102      	bne.n	23eda <__aeabi_dmul+0x222>
   23ed4:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
   23ed8:	d113      	bne.n	23f02 <__aeabi_dmul+0x24a>
   23eda:	ea95 0f0c 	teq	r5, ip
   23ede:	d105      	bne.n	23eec <__aeabi_dmul+0x234>
   23ee0:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
   23ee4:	bf1c      	itt	ne
   23ee6:	4610      	movne	r0, r2
   23ee8:	4619      	movne	r1, r3
   23eea:	d10a      	bne.n	23f02 <__aeabi_dmul+0x24a>
   23eec:	ea81 0103 	eor.w	r1, r1, r3
   23ef0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   23ef4:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   23ef8:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   23efc:	f04f 0000 	mov.w	r0, #0
   23f00:	bd70      	pop	{r4, r5, r6, pc}
   23f02:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   23f06:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
   23f0a:	bd70      	pop	{r4, r5, r6, pc}

00023f0c <__aeabi_ddiv>:
__aeabi_ddiv():
   23f0c:	b570      	push	{r4, r5, r6, lr}
   23f0e:	f04f 0cff 	mov.w	ip, #255	; 0xff
   23f12:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   23f16:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   23f1a:	bf1d      	ittte	ne
   23f1c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   23f20:	ea94 0f0c 	teqne	r4, ip
   23f24:	ea95 0f0c 	teqne	r5, ip
   23f28:	f000 f8a7 	bleq	2407a <__aeabi_ddiv+0x16e>
   23f2c:	eba4 0405 	sub.w	r4, r4, r5
   23f30:	ea81 0e03 	eor.w	lr, r1, r3
   23f34:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   23f38:	ea4f 3101 	mov.w	r1, r1, lsl #12
   23f3c:	f000 8088 	beq.w	24050 <__aeabi_ddiv+0x144>
   23f40:	ea4f 3303 	mov.w	r3, r3, lsl #12
   23f44:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
   23f48:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
   23f4c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
   23f50:	ea4f 2202 	mov.w	r2, r2, lsl #8
   23f54:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
   23f58:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
   23f5c:	ea4f 2600 	mov.w	r6, r0, lsl #8
   23f60:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
   23f64:	429d      	cmp	r5, r3
   23f66:	bf08      	it	eq
   23f68:	4296      	cmpeq	r6, r2
   23f6a:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
   23f6e:	f504 7440 	add.w	r4, r4, #768	; 0x300
   23f72:	d202      	bcs.n	23f7a <__aeabi_ddiv+0x6e>
   23f74:	085b      	lsrs	r3, r3, #1
   23f76:	ea4f 0232 	mov.w	r2, r2, rrx
   23f7a:	1ab6      	subs	r6, r6, r2
   23f7c:	eb65 0503 	sbc.w	r5, r5, r3
   23f80:	085b      	lsrs	r3, r3, #1
   23f82:	ea4f 0232 	mov.w	r2, r2, rrx
   23f86:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
   23f8a:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
   23f8e:	ebb6 0e02 	subs.w	lr, r6, r2
   23f92:	eb75 0e03 	sbcs.w	lr, r5, r3
   23f96:	bf22      	ittt	cs
   23f98:	1ab6      	subcs	r6, r6, r2
   23f9a:	4675      	movcs	r5, lr
   23f9c:	ea40 000c 	orrcs.w	r0, r0, ip
   23fa0:	085b      	lsrs	r3, r3, #1
   23fa2:	ea4f 0232 	mov.w	r2, r2, rrx
   23fa6:	ebb6 0e02 	subs.w	lr, r6, r2
   23faa:	eb75 0e03 	sbcs.w	lr, r5, r3
   23fae:	bf22      	ittt	cs
   23fb0:	1ab6      	subcs	r6, r6, r2
   23fb2:	4675      	movcs	r5, lr
   23fb4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
   23fb8:	085b      	lsrs	r3, r3, #1
   23fba:	ea4f 0232 	mov.w	r2, r2, rrx
   23fbe:	ebb6 0e02 	subs.w	lr, r6, r2
   23fc2:	eb75 0e03 	sbcs.w	lr, r5, r3
   23fc6:	bf22      	ittt	cs
   23fc8:	1ab6      	subcs	r6, r6, r2
   23fca:	4675      	movcs	r5, lr
   23fcc:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
   23fd0:	085b      	lsrs	r3, r3, #1
   23fd2:	ea4f 0232 	mov.w	r2, r2, rrx
   23fd6:	ebb6 0e02 	subs.w	lr, r6, r2
   23fda:	eb75 0e03 	sbcs.w	lr, r5, r3
   23fde:	bf22      	ittt	cs
   23fe0:	1ab6      	subcs	r6, r6, r2
   23fe2:	4675      	movcs	r5, lr
   23fe4:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
   23fe8:	ea55 0e06 	orrs.w	lr, r5, r6
   23fec:	d018      	beq.n	24020 <__aeabi_ddiv+0x114>
   23fee:	ea4f 1505 	mov.w	r5, r5, lsl #4
   23ff2:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
   23ff6:	ea4f 1606 	mov.w	r6, r6, lsl #4
   23ffa:	ea4f 03c3 	mov.w	r3, r3, lsl #3
   23ffe:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
   24002:	ea4f 02c2 	mov.w	r2, r2, lsl #3
   24006:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
   2400a:	d1c0      	bne.n	23f8e <__aeabi_ddiv+0x82>
   2400c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   24010:	d10b      	bne.n	2402a <__aeabi_ddiv+0x11e>
   24012:	ea41 0100 	orr.w	r1, r1, r0
   24016:	f04f 0000 	mov.w	r0, #0
   2401a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
   2401e:	e7b6      	b.n	23f8e <__aeabi_ddiv+0x82>
   24020:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   24024:	bf04      	itt	eq
   24026:	4301      	orreq	r1, r0
   24028:	2000      	moveq	r0, #0
   2402a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   2402e:	bf88      	it	hi
   24030:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   24034:	f63f aeaf 	bhi.w	23d96 <__aeabi_dmul+0xde>
   24038:	ebb5 0c03 	subs.w	ip, r5, r3
   2403c:	bf04      	itt	eq
   2403e:	ebb6 0c02 	subseq.w	ip, r6, r2
   24042:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   24046:	f150 0000 	adcs.w	r0, r0, #0
   2404a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   2404e:	bd70      	pop	{r4, r5, r6, pc}
   24050:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
   24054:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
   24058:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
   2405c:	bfc2      	ittt	gt
   2405e:	ebd4 050c 	rsbsgt	r5, r4, ip
   24062:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   24066:	bd70      	popgt	{r4, r5, r6, pc}
   24068:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   2406c:	f04f 0e00 	mov.w	lr, #0
   24070:	3c01      	subs	r4, #1
   24072:	e690      	b.n	23d96 <__aeabi_dmul+0xde>
   24074:	ea45 0e06 	orr.w	lr, r5, r6
   24078:	e68d      	b.n	23d96 <__aeabi_dmul+0xde>
   2407a:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   2407e:	ea94 0f0c 	teq	r4, ip
   24082:	bf08      	it	eq
   24084:	ea95 0f0c 	teqeq	r5, ip
   24088:	f43f af3b 	beq.w	23f02 <__aeabi_dmul+0x24a>
   2408c:	ea94 0f0c 	teq	r4, ip
   24090:	d10a      	bne.n	240a8 <__aeabi_ddiv+0x19c>
   24092:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   24096:	f47f af34 	bne.w	23f02 <__aeabi_dmul+0x24a>
   2409a:	ea95 0f0c 	teq	r5, ip
   2409e:	f47f af25 	bne.w	23eec <__aeabi_dmul+0x234>
   240a2:	4610      	mov	r0, r2
   240a4:	4619      	mov	r1, r3
   240a6:	e72c      	b.n	23f02 <__aeabi_dmul+0x24a>
   240a8:	ea95 0f0c 	teq	r5, ip
   240ac:	d106      	bne.n	240bc <__aeabi_ddiv+0x1b0>
   240ae:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   240b2:	f43f aefd 	beq.w	23eb0 <__aeabi_dmul+0x1f8>
   240b6:	4610      	mov	r0, r2
   240b8:	4619      	mov	r1, r3
   240ba:	e722      	b.n	23f02 <__aeabi_dmul+0x24a>
   240bc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   240c0:	bf18      	it	ne
   240c2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   240c6:	f47f aec5 	bne.w	23e54 <__aeabi_dmul+0x19c>
   240ca:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
   240ce:	f47f af0d 	bne.w	23eec <__aeabi_dmul+0x234>
   240d2:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
   240d6:	f47f aeeb 	bne.w	23eb0 <__aeabi_dmul+0x1f8>
   240da:	e712      	b.n	23f02 <__aeabi_dmul+0x24a>

000240dc <__gedf2>:
__gtdf2():
   240dc:	f04f 3cff 	mov.w	ip, #4294967295
   240e0:	e006      	b.n	240f0 <__cmpdf2+0x4>
   240e2:	bf00      	nop

000240e4 <__ledf2>:
   240e4:	f04f 0c01 	mov.w	ip, #1
   240e8:	e002      	b.n	240f0 <__cmpdf2+0x4>
   240ea:	bf00      	nop

000240ec <__cmpdf2>:
   240ec:	f04f 0c01 	mov.w	ip, #1
   240f0:	f84d cd04 	str.w	ip, [sp, #-4]!
   240f4:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   240f8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   240fc:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   24100:	bf18      	it	ne
   24102:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
   24106:	d01b      	beq.n	24140 <__cmpdf2+0x54>
   24108:	b001      	add	sp, #4
   2410a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
   2410e:	bf0c      	ite	eq
   24110:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
   24114:	ea91 0f03 	teqne	r1, r3
   24118:	bf02      	ittt	eq
   2411a:	ea90 0f02 	teqeq	r0, r2
   2411e:	2000      	moveq	r0, #0
   24120:	4770      	bxeq	lr
   24122:	f110 0f00 	cmn.w	r0, #0
   24126:	ea91 0f03 	teq	r1, r3
   2412a:	bf58      	it	pl
   2412c:	4299      	cmppl	r1, r3
   2412e:	bf08      	it	eq
   24130:	4290      	cmpeq	r0, r2
   24132:	bf2c      	ite	cs
   24134:	17d8      	asrcs	r0, r3, #31
   24136:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
   2413a:	f040 0001 	orr.w	r0, r0, #1
   2413e:	4770      	bx	lr
   24140:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   24144:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   24148:	d102      	bne.n	24150 <__cmpdf2+0x64>
   2414a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
   2414e:	d107      	bne.n	24160 <__cmpdf2+0x74>
   24150:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   24154:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   24158:	d1d6      	bne.n	24108 <__cmpdf2+0x1c>
   2415a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
   2415e:	d0d3      	beq.n	24108 <__cmpdf2+0x1c>
   24160:	f85d 0b04 	ldr.w	r0, [sp], #4
   24164:	4770      	bx	lr
__cmpdf2():
   24166:	bf00      	nop

00024168 <__aeabi_cdrcmple>:
__aeabi_cdrcmple():
   24168:	4684      	mov	ip, r0
   2416a:	4610      	mov	r0, r2
   2416c:	4662      	mov	r2, ip
   2416e:	468c      	mov	ip, r1
   24170:	4619      	mov	r1, r3
   24172:	4663      	mov	r3, ip
   24174:	e000      	b.n	24178 <__aeabi_cdcmpeq>
   24176:	bf00      	nop

00024178 <__aeabi_cdcmpeq>:
   24178:	b501      	push	{r0, lr}
   2417a:	f7ff ffb7 	bl	240ec <__cmpdf2>
   2417e:	2800      	cmp	r0, #0
   24180:	bf48      	it	mi
   24182:	f110 0f00 	cmnmi.w	r0, #0
   24186:	bd01      	pop	{r0, pc}

00024188 <__aeabi_dcmpeq>:
__aeabi_dcmpeq():
   24188:	f84d ed08 	str.w	lr, [sp, #-8]!
   2418c:	f7ff fff4 	bl	24178 <__aeabi_cdcmpeq>
   24190:	bf0c      	ite	eq
   24192:	2001      	moveq	r0, #1
   24194:	2000      	movne	r0, #0
   24196:	f85d fb08 	ldr.w	pc, [sp], #8
   2419a:	bf00      	nop

0002419c <__aeabi_dcmplt>:
__aeabi_dcmplt():
   2419c:	f84d ed08 	str.w	lr, [sp, #-8]!
   241a0:	f7ff ffea 	bl	24178 <__aeabi_cdcmpeq>
   241a4:	bf34      	ite	cc
   241a6:	2001      	movcc	r0, #1
   241a8:	2000      	movcs	r0, #0
   241aa:	f85d fb08 	ldr.w	pc, [sp], #8
   241ae:	bf00      	nop

000241b0 <__aeabi_dcmple>:
__aeabi_dcmple():
   241b0:	f84d ed08 	str.w	lr, [sp, #-8]!
   241b4:	f7ff ffe0 	bl	24178 <__aeabi_cdcmpeq>
   241b8:	bf94      	ite	ls
   241ba:	2001      	movls	r0, #1
   241bc:	2000      	movhi	r0, #0
   241be:	f85d fb08 	ldr.w	pc, [sp], #8
   241c2:	bf00      	nop

000241c4 <__aeabi_dcmpge>:
__aeabi_dcmpge():
   241c4:	f84d ed08 	str.w	lr, [sp, #-8]!
   241c8:	f7ff ffce 	bl	24168 <__aeabi_cdrcmple>
   241cc:	bf94      	ite	ls
   241ce:	2001      	movls	r0, #1
   241d0:	2000      	movhi	r0, #0
   241d2:	f85d fb08 	ldr.w	pc, [sp], #8
   241d6:	bf00      	nop

000241d8 <__aeabi_dcmpgt>:
__aeabi_dcmpgt():
   241d8:	f84d ed08 	str.w	lr, [sp, #-8]!
   241dc:	f7ff ffc4 	bl	24168 <__aeabi_cdrcmple>
   241e0:	bf34      	ite	cc
   241e2:	2001      	movcc	r0, #1
   241e4:	2000      	movcs	r0, #0
   241e6:	f85d fb08 	ldr.w	pc, [sp], #8
   241ea:	bf00      	nop

000241ec <__aeabi_d2iz>:
__fixdfsi():
   241ec:	ea4f 0241 	mov.w	r2, r1, lsl #1
   241f0:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
   241f4:	d215      	bcs.n	24222 <__aeabi_d2iz+0x36>
   241f6:	d511      	bpl.n	2421c <__aeabi_d2iz+0x30>
   241f8:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
   241fc:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
   24200:	d912      	bls.n	24228 <__aeabi_d2iz+0x3c>
   24202:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   24206:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   2420a:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
   2420e:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   24212:	fa23 f002 	lsr.w	r0, r3, r2
   24216:	bf18      	it	ne
   24218:	4240      	negne	r0, r0
   2421a:	4770      	bx	lr
   2421c:	f04f 0000 	mov.w	r0, #0
   24220:	4770      	bx	lr
   24222:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
   24226:	d105      	bne.n	24234 <__aeabi_d2iz+0x48>
   24228:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
   2422c:	bf08      	it	eq
   2422e:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
   24232:	4770      	bx	lr
   24234:	f04f 0000 	mov.w	r0, #0
   24238:	4770      	bx	lr
   2423a:	bf00      	nop
$d():
   2423c:	78656e55 	.word	0x78656e55
   24240:	74636570 	.word	0x74636570
   24244:	63206465 	.word	0x63206465
   24248:	206c6c61 	.word	0x206c6c61
   2424c:	6b206f74 	.word	0x6b206f74
   24250:	286c6c69 	.word	0x286c6c69
   24254:	6e550029 	.word	0x6e550029
   24258:	65707865 	.word	0x65707865
   2425c:	64657463 	.word	0x64657463
   24260:	6c616320 	.word	0x6c616320
   24264:	6f74206c 	.word	0x6f74206c
   24268:	69786520 	.word	0x69786520
   2426c:	00292874 	.word	0x00292874
   24270:	00024970 	.word	0x00024970
   24274:	00024974 	.word	0x00024974
   24278:	00024978 	.word	0x00024978
   2427c:	0002497c 	.word	0x0002497c
   24280:	00024980 	.word	0x00024980

00024284 <logHandler(str&, CharDev&, void*)::__FUNCTION__>:
   24284:	48676f6c 6c646e61 25007265 20733031     logHandler.%10s 
   24294:	20617453 53207250 6b636174 55504320     Sta Pr Stack CPU
   242a4:	20202525 20202020 20202020 656d6954     %%          Time
   242b4:	614e000a 2500656d 20733031 25207325     ..Name.%10s %s %
   242c4:	25207532 25207535 25207534 20753031     2u %5u %4u %10u 
   242d4:	000a7375 73303125 2d2d2d20 202d2d20     us..%10s --- -- 
   242e4:	2d2d2d2d 3425202d 31252075 75207530     ----- %4u %10u u
   242f4:	28000a53 7265766f 64616568 2a2a0029     S..(overhead).**
   24304:	52415720 474e494e 6e4f203a 7220796c      WARNING: Only r
   24314:	726f7065 20646574 73726966 75252074     eported first %u
   24324:	73617420 000a736b 00746573 20732a25      tasks..set.%*s 
   24334:	25207525 75252075 20752520 25207525     %u %u %u %u %u %
   24344:	75252075 616e4500 64656c62 73694400     u %u.Enabled.Dis
   24354:	656c6261 72650064 00726f72 6e726177     abled.error.warn
   24364:	756c6600 4c006873 7328676f 61682029     .flush.Log(s) ha
   24374:	62206576 206e6565 73756c66 00646568     ve been flushed.
   24384:	00776172 62616e65 6400656c 62617369     raw.enable.disab
   24394:	2500656c 6f6c2073 72656767 69727020     le.%s logger pri
   243a4:	2066746e 20726f66 000a7325 4c2f2e2e     ntf for %s..../L
   243b4:	70415f35 63696c70 6f697461 6f732f6e     5_Application/so
   243c4:	65637275 646d632f 6e61685f 72656c64     urce/cmd_handler
   243d4:	61682f73 656c646e 632e7372 4c007070     s/handlers.cpp.L
   243e4:	6567676f 7c203a64 0a7c7325 72724500     ogged: |%s|..Err
   243f4:	2520726f 6f632075 6e697970 257c2067     or %u copying |%
   24404:	2d207c73 257c203e 000a7c73 696e6946     s| -> |%s|..Fini
   24414:	64656873 52202021 3a646165 20752520     shed!  Read: %u 
   24424:	732f624b 202c6365 74697257 25203a65     Kb/sec, Write: %
   24434:	624b2075 6365732f 6e2d000a 6972706f     u Kb/sec..-nopri
   24444:	5000746e 73736572 6b206120 74207965     nt.Press a key t
   24454:	7270206f 20746e69 20656e6f 66667562     o print one buff
   24464:	61207265 20612074 656d6974 0a2e2e2e     er at a time....
   24474:	69614600 2064656c 6f206f74 3a6e6570     .Failed to open:
   24484:	0a732520 65520a00 25206461 79622064      %s...Read %d by
   24494:	20736574 64252040 2f624b20 00636573     tes @ %d Kb/sec.
   244a4:	49003a30 6c61766e 64206469 63657269     0:.Invalid direc
   244b4:	79726f74 257c203a 28207c73 6f727245     tory: |%s| (Erro
   244c4:	69252072 44000a29 63657269 79726f74     r %i)..Directory
   244d4:	73696c20 676e6974 3a666f20 0a732520      listing of: %s.
   244e4:	6325000a 63256325 63256325 2f752520     ..%c%c%c%c%c %u/
   244f4:	75323025 3230252f 30252075 253a7532     %02u/%02u %02u:%
   24504:	20753230 6c303125 31252075 20007333     02u %10lu %13s. 
   24514:	0a00202d 20753425 656c6946 2c297328     - ..%4u File(s),
   24524:	30312520 79622064 20736574 61746f74      %10d bytes tota
   24534:	34250a6c 69442064 29732872 25202c00     l.%4d Dir(s)., %
   24544:	4b643031 74796220 66207365 0a656572     10dK bytes free.
   24554:	65724300 20657461 65726964 726f7463     .Create director
   24564:	25272079 3a202773 0a732520 6c654400     y '%s' : %s..Del
   24574:	20657465 27732527 25203a20 4d000a73     ete '%s' : %s..M
   24584:	2065766f 27732527 203e2d20 27732527     ove '%s' -> '%s'
   24594:	25203a20 55000a73 6c62616e 6f742065      : %s..Unable to
   245a4:	65706f20 2527206e 74202773 7277206f      open '%s' to wr
   245b4:	20657469 20656874 656c6966 6e45000a     ite the file..En
   245c4:	68742064 69662065 6220656c 73752079     d the file by us
   245d4:	20676e69 63206325 61726168 72657463     ing %c character
   245e4:	2520202e 73692069 65687420 6d697420     .  %i is the tim
   245f4:	74756f65 6f53000a 2c797272 206f6e20     eout..Sorry, no 
   24604:	6b636162 63617073 75732065 726f7070     backspace suppor
   24614:	283a2074 7245000a 20726f72 7563636f     t :(..Error occu
   24624:	64657272 69687720 7720656c 69746972     rred while writi
   24634:	7420676e 66206568 0a656c69 52524500     ng the file..ERR
   24644:	203a524f 65766947 20656d20 72756f73     OR: Give me sour
   24654:	61206563 6420646e 69747365 6974616e     ce and destinati
   24664:	64206e6f 63657269 79726f74 70657320     on directory sep
   24674:	74617261 62206465 20612079 63617073     arated by a spac
   24684:	6e490065 696c6176 65642064 6e697473     e.Invalid destin
   24694:	6f697461 6964206e 74636572 3a79726f     ation directory:
   246a4:	73257c20 49000a7c 6c61766e 73206469      |%s|..Invalid s
   246b4:	6372756f 69642065 74636572 3a79726f     ource directory:
   246c4:	73257c20 25000a7c 73252f73 706f4300      |%s|..%s/%s.Cop
   246d4:	73252079 203e2d20 3a207325 20642520     y %s -> %s : %d 
   246e4:	65747942 203a2073 000a7325 6d726f46     Bytes : %s..Form
   246f4:	4f207461 6f46004b 74616d72 52524520     at OK.Format ERR
   24704:	5300524f 61432044 6d206472 746e756f     OR.SD Card mount
   24714:	45006465 726f7272 756f6d20 6e69746e     ed.Error mountin
   24724:	44532067 72614320 6c460064 20687361     g SD Card.Flash 
   24734:	6e756f6d 00646574 6f727245 6f6d2072     mounted.Error mo
   24744:	69746e75 4620676e 6873616c 6d654d20     unting Flash Mem
   24754:	0079726f 6d726f66 73207461 6f660064     ory.format sd.fo
   24764:	74616d72 616c6620 6d006873 746e756f     rmat flash.mount
   24774:	00647320 6e756f6d 6c662074 00687361      sd.mount flash.
   24784:	7261654c 676e696e 646f6d20 6e652065     Learning mode en
   24794:	656c6261 52450064 3a524f52 6d655320     abled.ERROR: Sem
   247a4:	6f687061 77206572 4e207361 004c4c55     aphore was NULL.
   247b4:	74697277 69640065 766f6373 25007265     write.discover.%
   247c4:	2520732a 25207830 25207830 654e0069     *s %0x %0x %i.Ne
   247d4:	64206465 63697665 6e612065 65722064     ed device and re
   247e4:	74736967 61207265 65726464 52007373     gister address.R
   247f4:	20646165 74617473 66207375 206d6f72     ead status from 
   24804:	69766564 30206563 32302578 25203a58     device 0x%02X: %
   24814:	0a203a73 20202000 25783020 3a583230     s: ..    0x%02X:
   24824:	25783020 0a583230 732a2500 78302520      0x%02X..%*s %0x
   24834:	78302520 78302520 65654e00 65642064      %0x %0x.Need de
   24844:	65636976 6572202c 74736967 61207265     vice, register a
   24854:	65726464 61207373 6420646e 00617461     ddress and data.
   24864:	746f7257 78302065 58323025 206f7420     Wrote 0x%02X to 
   24874:	30257830 3a3a5832 30257830 000a5832     0x%02X::0x%02X..
   24884:	6f727245 72772072 6e697469 6f742067     Error writing to
   24894:	76656420 20656369 0a782325 756f4600      device %#x..Fou
   248a4:	6420646e 63697665 69772065 61206874     nd device with a
   248b4:	65726464 25207373 0a783423 616c4600     ddress %#4x..Fla
   248c4:	203a6873 252f7525 694c2075 203a6566     sh: %u/%u Life: 
   248d4:	25256925 61702820 25206567 72772075     %i%% (page %u wr
   248e4:	65747469 7525206e 6d697420 0a297365     itten %u times).
   248f4:	616c4600 203a6873 252f7525 54000a75     .Flash: %u/%u..T
   24904:	20706d65 7525203a 0a75252e 6867694c     emp : %u.%u.Ligh
   24914:	25203a74 69540a75 2020656d 3a202020     t: %u.Time     :
   24924:	42732520 20746f6f 656d6954 3025203a      %sBoot Time: %0
   24934:	252f7532 2f753230 2c753425 75323025     2u/%02u/%4u,%02u
   24944:	3230253a 30253a75 550a7532 30747261     :%02u:%02u.Uart0
   24954:	74615720 616d7265 3a736b72 2f752520      Watermarks: %u/
   24964:	28207525 742f7872 000a2978 004e5552     %u (rx/tx)..RUN.
   24974:	00594452 004b4c42 00535553 004c4544     RDY.BLK.SUS.DEL.
   24984:	656c6946 656d616e 6f687320 20646c75     Filename should 
   24994:	6c206562 20737365 6e616874 20692520     be less than %i 
   249a4:	72616863 25000a73 25282073 79622075     chars..%s (%u by
   249b4:	29736574 6c697720 6562206c 6f727020     tes) will be pro
   249c4:	6d617267 2e64656d 6265520a 69746f6f     grammed..Rebooti
   249d4:	6e20676e 7420776f 7075206f 64617267     ng now to upgrad
   249e4:	69662065 61776d72 0a216572 6e55000a     e firmware!...Un
   249f4:	656c6261 206f7420 6e65706f 73252720     able to open '%s
   24a04:	4f000a27 46000a4b 20656c69 74697277     '..OK..File writ
   24a14:	72652065 0a726f72 6d6f6300 0074696d     e error..commit.
   24a24:	20732a25 38323125 69252073 00692520     %*s %128s %i %i.
   24a34:	66667562 25007265 2520732a 69252069     buffer.%*s %i %i
   24a44:	52524500 203a524f 2078614d 66667562     .ERROR: Max buff
   24a54:	73207265 20657a69 25207369 79622069     er size is %i by
   24a64:	0a736574 52524500 203a524f 454d4954     tes..ERROR: TIME
   24a74:	0a54554f 65684300 75736b63 6925206d     OUT..Checksum %i
   24a84:	0303000a 254e0404 52203a75 78542f78     ......N%u: Rx/Tx
   24a94:	7452202c 764f2f65 52202c74 69727465     , Rte/Ovt, Retri
   24aa4:	4d2f6465 20687365 72746552 2f646569     ed/Mesh Retried/
   24ab4:	65706552 64657461 000a203a 20202020     Repeated: ..    
   24ac4:	2f753325 75332d25 2f752520 202c7525     %3u/%-3u %u/%u, 
   24ad4:	252f7525 75252f75 6944000a 72616373     %u/%u/%u..Discar
   24ae4:	20646564 74732061 20656c61 65726977     ded a stale wire
   24af4:	7373656c 63617020 0074656b 6f727245     less packet.Erro
   24b04:	65732072 6e69646e 61702067 74656b63     r sending packet
   24b14:	6863202c 206b6365 61726170 6574656d     , check paramete
   24b24:	00217372 6f6d6552 6e206574 2065646f     rs!.Remote node 
   24b34:	656d616e 0027203a 65636552 64657669     name: '.Received
   24b44:	65687420 6b636120 6c776f6e 6d676465      the acknowledgm
   24b54:	21746e65 63615000 2074656b 746e6573     ent!.Packet sent
   24b64:	206f7420 62207325 6e207475 4341206f      to %s but no AC
   24b74:	6572204b 76696563 46006465 454c4941     K received.FAILE
   24b84:	65530044 64612074 73657264 6f742073     D.Set address to
   24b94:	3a692520 0a732520 2d2d2d00 2d2d2d2d      %i: %s..-------
   24ba4:	2d2d2d2d 2d2d2d2d 2d2d2d2d 2d2d2d2d     ----------------
   24bb4:	000a2d2d 74756f52 20676e69 6c626174     --..Routing tabl
   24bc4:	69732065 6920657a 69252073 207c000a     e size is %i..| 
   24bd4:	20545344 654e207c 48207478 7c20504f     DST | Next HOP |
   24be4:	504f4820 0a7c2053 25207c00 7c206933      HOPS |..| %3i |
   24bf4:	25202020 20206933 207c2020 20693325        %3i    | %3i 
   24c04:	000a7c20 65636552 64657669 74616420      |..Received dat
   24c14:	72662061 25206d6f 4e000a69 6164206f     a from %i..No da
   24c24:	72206174 69656365 00646576 65727473     ta received.stre
   24c34:	27006d61 65727473 3c206d61 72646461     am.'stream <addr
   24c44:	6d3c203e 273e6773 53203a20 61657274     > <msg>' : Strea
   24c54:	2061206d 6d6d6f63 20646e61 61206f74     m a command to a
   24c64:	68746f6e 62207265 6472616f 61727400     nother board.tra
   24c74:	6566736e 74270072 736e6172 20726566     nsfer.'transfer 
   24c84:	6372733c 6c696620 6d616e65 3c203e65     <src filename> <
   24c94:	20747364 656c6966 656d616e 6e3c203e     dst filename> <n
   24ca4:	72646461 3a20273e 61725420 6566736e     addr>' : Transfe
   24cb4:	20612072 656c6966 206f7420 746f6e61     r a file to anot
   24cc4:	20726568 72616f62 78720064 78722700     her board.rx.'rx
   24cd4:	69743c20 6d5f656d 20273e73 6f50203a      <time_ms>' : Po
   24ce4:	66206c6c 6120726f 63617020 0074656b     ll for a packet.
   24cf4:	64646127 613c2072 3e726464 3a202020     'addr <addr>   :
   24d04:	74655320 65687420 72697720 73656c65      Set the wireles
   24d14:	64612073 73657264 72270073 6574756f     s address.'route
   24d24:	3a202773 65655320 65687420 72697720     s' : See the wir
   24d34:	73656c65 6f722073 73657475 63612700     eless routes.'ac
   24d44:	613c206b 3e726464 61643c20 273e6174     k <addr> <data>'
   24d54:	203a2020 646e6553 70206120 656b6361       : Send a packe
   24d64:	6e612074 61772064 66207469 6120726f     t and wait for a
   24d74:	6f6e6b63 64656c77 6e656d67 616e0074     cknowledgment.na
   24d84:	27006b63 6b63616e 64613c20 203e7264     ck.'nack <addr> 
   24d94:	7461643c 20273e61 6553203a 6120646e     <data>' : Send a
   24da4:	63617020 0074656b 61747327 20277374      packet.'stats' 
   24db4:	6553203a 68742065 69772065 656c6572     : See the wirele
   24dc4:	73207373 73746174 6c656800 31250070     ss stats.help.%1
   24dd4:	20733832 38323125 69252073 61725400     28s %128s %i.Tra
   24de4:	6566736e 73252072 3e2d2d20 3a692520     nsfer %s --> %i:
   24df4:	000a7325 656c6966 66756220 20726566     %s..file buffer 
   24e04:	69252030 5245000a 3a524f52 65684320     0 %i..ERROR: Che
   24e14:	75736b63 7845206d 74636570 25206465     cksum Expected %
   24e24:	63412069 6c617574 0a692520 6c696600     i Actual %i..fil
   24e34:	6f632065 74696d6d 20732520 25206925     e commit %s %i %
   24e44:	6f000a69 5245006b 3a524f52 6d655220     i..ok.ERROR: Rem
   24e54:	2065746f 65646f6e 64696420 746f6e20     ote node did not
   24e64:	6b636120 6c776f6e 65676465 6c696620      acknowledge fil
   24e74:	72772065 20657469 29732528 6553000a     e write (%s)..Se
   24e84:	2520746e 69252f69 2020000a 65522020     nt %i/%i..    Re
   24e94:	76696563 25206465 79622069 20736574     ceived %i bytes 
   24ea4:	7265766f 20692520 6b636170 0a737465     over %i packets.
   24eb4:	6f685700 2173706f 70412020 786f7270     .Whoops!  Approx
   24ec4:	74616d69 20796c65 62206925 73657479     imately %i bytes
   24ed4:	756f6320 6e20646c 6220746f 72702065      could not be pr
   24ee4:	65746e69 65622064 73756163 68742065     inted because th
   24ef4:	756f2065 74757074 61686320 6c656e6e     e output channel
   24f04:	20736920 206f6f74 776f6c73 5020202e      is too slow.  P
   24f14:	7361656c 6f662065 776f6c6c 65687420     lease follow the
   24f24:	67757320 74736567 736e6f69 20746120      suggestions at 
   24f34:	656c6966 7325203a 6c206120 6c747469     file: %s a littl
   24f44:	69622065 62612074 2065766f 6c696877     e bit above whil
   24f54:	6f6c2065 6120706f 696c2074 6e20656e     e loop at line n
   24f64:	65626d75 69252072 2e2e000a 5f354c2f     umber %i..../L5_
   24f74:	6c707041 74616369 2f6e6f69 72756f73     Application/sour
   24f84:	632f6563 685f646d 6c646e61 2f737265     ce/cmd_handlers/
   24f94:	65726977 7373656c 6e61685f 72656c64     wireless_handler
   24fa4:	70632e73 61500070 20657372 6f727265     s.cpp.Parse erro
   24fb4:	74203a72 203a7972 72747327 206d6165     r: try: 'stream 
   24fc4:	6464613c 3c203e72 6d6d6f63 3e646e61     <addr> <command>
   24fd4:	4f430027 4f52544e 52454c4c 4c4c415f     '.CONTROLLER_ALL
   24fe4:	4e4f4300 4c4f5254 5f52454c 4f544f4d     .CONTROLLER_MOTO
   24ff4:	4f430052 4f52544e 52454c4c 53414d5f     R.CONTROLLER_MAS
   25004:	00524554 544e4f43 4c4c4f52 535f5245     TER.CONTROLLER_S
   25014:	4f534e45 4f430052 4f52544e 52454c4c     ENSOR.CONTROLLER
   25024:	4f45475f 4e4f4300 4c4f5254 5f52454c     _GEO.CONTROLLER_
   25034:	415f5442 4f52444e 43004449 52544e4f     BT_ANDROID.CONTR
   25044:	454c4c4f 4f495f52 4e4f4300 4c4f5254     OLLER_IO.CONTROL
   25054:	5f52454c 4d4d5544 534d0059 45525f47     LER_DUMMY.MSG_RE
   25064:	00544553 5f47534d 45574f50 5f505552     SET.MSG_POWERUP_
   25074:	004e5953 5f47534d 45574f50 5f505552     SYN.MSG_POWERUP_
   25084:	5f4e5953 004b4341 5f47534d 45574f50     SYN_ACK.MSG_POWE
   25094:	5f505552 004b4341 5f47534d 52414548     RUP_ACK.MSG_HEAR
   250a4:	41454254 534d0054 45485f47 42545241     TBEAT.MSG_HEARTB
   250b4:	5f544145 004b4341 5f47534d 54534944     EAT_ACK.MSG_DIST
   250c4:	4e45535f 5f524f53 41544144 47534d00     _SENSOR_DATA.MSG
   250d4:	48544f5f 535f5245 4f534e45 41445f52     _OTHER_SENSOR_DA
   250e4:	4d004154 475f4753 485f4f45 49444145     TA.MSG_GEO_HEADI
   250f4:	445f474e 00415441 5f47534d 5f4f4547     NG_DATA.MSG_GEO_
   25104:	41434f4c 4e4f4954 5441445f 534d0041     LOCATION_DATA.MS
   25114:	50535f47 5f444545 4f434e45 5f524544     G_SPEED_ENCODER_
   25124:	41544144 47534d00 5241435f 5541505f     DATA.MSG_CAR_PAU
   25134:	4d004553 435f4753 525f5241 4d555345     SE.MSG_CAR_RESUM
   25144:	534d0045 48435f47 504b4345 544e494f     E.MSG_CHECKPOINT
   25154:	5145525f 54534555 47534d00 4548435f     _REQUEST.MSG_CHE
   25164:	4f504b43 5f544e49 41544144 47534d00     CKPOINT_DATA.MSG
   25174:	4952445f 4d5f4556 0045444f 5f47534d     _DRIVE_MODE.MSG_
   25184:	45455053 49445f44 4f435f52 4e414d4d     SPEED_DIR_COMMAN
   25194:	534d0044 52465f47 525f4545 445f4e55     D.MSG_FREE_RUN_D
   251a4:	4d005249 455f4753 524f5252 47534d00     IR.MSG_ERROR.MSG
   251b4:	4d55445f 5200594d 54455345 63657220     _DUMMY.RESET rec
   251c4:	65766965 52202c64 6f6f6265 676e6974     eived, Rebooting
   251d4:	73795320 006d6574 4c2f2e2e 70415f35      System.../L5_Ap
   251e4:	63696c70 6f697461 6f732f6e 65637275     plication/source
   251f4:	6e61632f 6d6f635f 2e6e6f6d 00707063     /can_common.cpp.
   25204:	2578305b 5d583230 4e414320 2078745f     [0x%02X] CAN_tx 
   25214:	6c696166 000a6465 2578305b 5d583230     failed..[0x%02X]
   25224:	4e414320 2078725f 6c696166 000a6465      CAN_rx failed..
   25234:	75736e69 63696666 746e6569 66756220     insufficient buf
   25244:	20726566 72206f74 20646165 6f636e69     fer to read inco
   25254:	676e696d 73656d20 65676173 6e616300              ming message.

00025261 <can_controller::can_recv(controller_id_t*, msg_id_t*, unsigned char*, unsigned short*)::__FUNCTION__>:
   25261:	5f6e6163 76636572 6e616300                       can_recv.

0002526a <can_controller::can_send(controller_id_t, msg_id_t, unsigned char*, unsigned short)::__FUNCTION__>:
   2526a:	5f6e6163 646e6573 6f100000                       can_send..

00025274 <typeinfo for scheduler_task>:
   25274:	00026f10 0002527c                       .o..|R..

0002527c <typeinfo name for scheduler_task>:
   2527c:	63733431 75646568 5f72656c 6b736174     14scheduler_task
   2528c:	00000000                                ....

00025290 <typeinfo for periodicEncoderTask>:
   25290:	00026f70 0002529c 00025274              po...R..tR..

0002529c <typeinfo name for periodicEncoderTask>:
   2529c:	65703931 646f6972 6e456369 65646f63     19periodicEncode
   252ac:	73615472 0000006b                       rTask...

000252b4 <typeinfo for debugTask>:
   252b4:	00026f70 000252c0 00025274              po...R..tR..

000252c0 <typeinfo name for debugTask>:
   252c0:	62656439 61546775 00006b73 00000000     9debugTask......

000252d0 <vtable for scheduler_task>:
   252d0:	00000000 00025274 00012301 00012349     ....tR...#..I#..
   252e0:	0001230d 00012311 00012315 0001c859     .#...#...#..Y...

000252f0 <vtable for periodicEncoderTask>:
   252f0:	00000000 00025290 00012325 00012371     .....R..%#..q#..
   25300:	0001230d 00012311 00012315 000123ad     .#...#...#...#..

00025310 <vtable for debugTask>:
   25310:	00000000 000252b4 00012319 0001235d     .....R...#..]#..
   25320:	0001230d 00012311 00012315 00012719     .#...#...#...'..

00025330 <vtable for canRxProcessTask>:
   25330:	00000000 00025350 00012331 00012385     ....PS..1#...#..
   25340:	0001230d 00012311 00012315 00012a05     .#...#...#...*..

00025350 <typeinfo for canRxProcessTask>:
   25350:	00026f70 000253fe 00025274 526e6163     po...S..tR..canR
   25360:	66754278 54726566 006b7361 526e6163     xBufferTask.canR
   25370:	6f725078 73736563 6b736154 61724200     xProcessTask.Bra
   25380:	4600656b 6177726f 52006472 72657665     ke.Forward.Rever
   25390:	70006573 6f697265 45636964 646f636e     se.periodicEncod
   253a0:	61547265 64006b73 67756265 6b736154     erTask.debugTask
   253b0:	2f2e2e00 415f354c 696c7070 69746163     .../L5_Applicati
   253c0:	732f6e6f 6372756f 6f632f65 6f72746e     on/source/contro
   253d0:	72656c6c 746f6d5f 632e726f 6d007070     ller_motor.cpp.m
   253e0:	715f6773 65756575 6c756620 6d000a6c     sg_queue full..m
   253f0:	715f6773 65756575 6c756620 3631006c              sg_queue full.

000253fe <typeinfo name for canRxProcessTask>:
   253fe:	61633631 5078526e 65636f72 61547373     16canRxProcessTa
   2540e:	31006b73                                         sk.

00025411 <typeinfo name for canRxBufferTask>:
   25411:	61633531 4278526e 65666675 73615472     15canRxBufferTas
   25421:	0000006b 00000000                                k......

00025428 <vtable for canRxBufferTask>:
   25428:	00000000 00025448 0001233d 00012399     ....HT..=#...#..
   25438:	0001230d 00012311 00012315 0001297d     .#...#...#..})..

00025448 <typeinfo for canRxBufferTask>:
   25448:	00026f70 00025411 00025274              po...T..tR..

00025454 <canRxBufferTask::run(void*)::__FUNCTION__>:
   25454:	006e7572                                run.

00025458 <typeinfo for encoderTask>:
   25458:	00026f70 00025464 00025274              po..dT..tR..

00025464 <typeinfo name for encoderTask>:
   25464:	6e653131 65646f63 73615472 6e65006b     11encoderTask.en
   25474:	65646f63 72500072 00746e69              coder.Print.

00025480 <vtable for encoderTask>:
   25480:	00000000 00025458 00012ae9 00012af5     ....XT...*...*..
   25490:	00012d65 00012311 00012315 00012ae5     e-...#...#...*..
   254a0:	2d2d2d2d 2d2d2d2d 2d2d2d2d 2d2d2d2d     ----------------
   254b0:	2d2d2d2d 2d2d2d2d 2d2d2d2d 2d2d2d2d     ----------------
   254c0:	2d2d2d2d 2d2d2d2d 2d2d2d2d 2d2d2d2d     ----------------
   254d0:	2d2d2d2d 2d2d2d2d 4b002d2d 424d0042     ----------.KB.MB
   254e0:	73655900 006f4e00 203a7325 2d204b4f     .Yes.No.%s: OK -
   254f0:	6143202d 69636170 25207974 2564352d     - Capacity %-5d%
   25500:	41202c73 6c696176 656c6261 2d25203a     s, Available: %-
   25510:	73257535 7325000a 7245203a 20726f72     5u%s..%s: Error 
   25520:	6e20726f 7020746f 65736572 202e746e     or not present. 
   25530:	72724520 2320726f 202c6925 6e756f4d      Error #%i, Moun
   25540:	3a646574 0a732520 6e6f4400 72450065     ted: %s..Done.Er
   25550:	00726f72 656e6f44 52450021 3a524f52     ror.Done!.ERROR:
   25560:	736f5020 6c626973 68732065 2074726f      Possible short 
   25570:	53206e6f 6f204144 43532072 6977204c     on SDA or SCL wi
   25580:	28206572 32433249 45002129 524f5252     re (I2C2)!.ERROR
   25590:	6146203a 64656c69 206f7420 74696e69     : Failed to init
   255a0:	696c6169 7720657a 6c657269 00737365     ialize wireless.
   255b0:	74737953 42206d65 20746f6f 2e252040     System Boot @ %.
   255c0:	4d206633 000a7a68 74737953 72206d65     3f Mhz..System r
   255d0:	6f6f6265 20646574 65746661 72632072     ebooted after cr
   255e0:	2e687361 65522020 6176656c 6920746e     ash.  Relevant i
   255f0:	3a6f666e 3a43500a 25783020 2e583830     nfo:.PC: 0x%08X.
   25600:	524c2020 7830203a 58383025 5020202e       LR: 0x%08X.  P
   25610:	203a5253 30257830 500a5838 6973736f     SR: 0x%08X.Possi
   25620:	20656c62 7473616c 6e757220 676e696e     ble last running
   25630:	20534f20 6b736154 2527203a 000a2773      OS Task: '%s'..
   25640:	616c4620 00206873 73617245 20676e69      Flash .Erasing 
   25650:	20646e61 6d726f66 69747461 5320676e     and formatting S
   25660:	66204950 6873616c 6874202c 63207369     PI flash, this c
   25670:	74206e61 20656b61 68772061 20656c69     an take a while 
   25680:	202e2e2e 49505300 414c4620 69204853     ... .SPI FLASH i
   25690:	6f702073 62697373 6420796c 67616d61     s possibly damag
   256a0:	00216465 65676150 7a697320 25203a65     ed!.Page size: %
   256b0:	4d000a75 20206d65 657a6973 7525203a     u..Mem  size: %u
   256c0:	61722820 79622077 29736574 5245000a      (raw bytes)..ER
   256d0:	3a524f52 63634120 72656c65 6f697461     ROR: Acceleratio
   256e0:	6553206e 726f736e 52524500 203a524f     n Sensor.ERROR: 
   256f0:	706d6554 74617265 20657275 736e6553     Temperature Sens
   25700:	4500726f 524f5252 2d37203a 6d676553     or.ERROR: 7-Segm
   25710:	20746e65 70736944 0079616c 6464616e     ent Display.nadd
   25720:	65530072 69772074 656c6572 6e207373     r.Set wireless n
   25730:	2065646f 72646461 20737365 25206f74     ode address to %
   25740:	72662069 27206d6f 20277325 656c6966     i from '%s' file
   25750:	7325203a 6f42000a 20647261 69204449     : %s..Board ID i
   25760:	27203a73 20277325 25783028 29583230     s: '%s' (0x%02X)
   25770:	6e45000a 20726574 6f622061 20647261     ..Enter a board 
   25780:	28204449 63203436 73726168 78616d20     ID (64 chars max
   25790:	00203a29 73343625 616f4200 49206472     ): .%64s.Board I
   257a0:	6f742044 6f727020 6d617267 2527203a     D to program: '%
   257b0:	000a2773 65746e45 59272072 6f742027     s'..Enter 'Y' to
   257c0:	6e6f6320 6d726966 4220202e 4452414f      confirm.  BOARD
   257d0:	20444920 4e4e4143 4220544f 48432045      ID CANNOT BE CH
   257e0:	45474e41 4e412044 53492044 52455020     ANGED AND IS PER
   257f0:	454e414d 2500544e 42007333 6472616f     MANENT.%3s.Board
   25800:	20444920 20746f6e 676f7270 6d6d6172      ID not programm
   25810:	59006465 6320756f 70206e61 72676f72     ed.You can progr
   25820:	61206d61 52455020 454e414d 4920544e     am a PERMANENT I
   25830:	666f2044 756f7920 6f622072 2e647261     D of your board.
   25840:	206f5400 74206f64 2c736968 6c6f6820     .To do this, hol
   25850:	57532064 6e612031 57532064 6e612034     d SW1 and SW4 an
   25860:	65722064 20746573 20656874 72616f62     d reset the boar
   25870:	43002e64 66205550 6873616c 746c6120     d..CPU flash alt
   25880:	64657265 6f72702f 6d617267 2064656d     ered/programmed 
   25890:	6e756f63 203a7374 252f7525 43000a75     counts: %u/%u..C
   258a0:	70205550 72676f72 656d6d61 6c662064     PU programmed fl
   258b0:	20687361 6e696d28 78616d2f 25203a29     ash (min/max): %
   258c0:	20624b75 7525202d 000a624b 7473614c     uKb - %uKb..Last
   258d0:	6f727020 6d617267 676e696d 6f6f7420      programming too
   258e0:	7525206b 0a736d20 6c614300 676e696c     k %u ms..Calling
   258f0:	756f7920 616d2072 29286e69 04030300      your main()....
   25900:	00000004 00000000                       ........

00025908 <vtable for terminalTask>:
   25908:	00000000 00025ef4 00013445 00013495     .....^..E4...4..
   25918:	0001230d 0001340d 00013829 00013731     .#...4..)8..17..
   25928:	6d726574 6c616e69 00200800 3a43504c     terminal.. .LPC:
   25938:	20200020 6e694620 65687369 6e692064      .   Finished in
   25948:	20752520 000a7375 6b736154 5550432f      %u us..Task/CPU
   25958:	666e4920 20202e6f 20657355 666e6927      Info.  Use 'inf
   25968:	3032206f 74202730 6567206f 50432074     o 200' to get CP
   25978:	75642055 676e6972 30303220 6d00736d     U during 200ms.m
   25988:	6e696d65 53006f66 6d206565 726f6d65     eminfo.See memor
   25998:	6e692079 4f006f66 75707475 79732074     y info.Output sy
   259a8:	6d657473 61656820 0068746c 6d697427     stem health.'tim
   259b8:	74202765 6976206f 74207765 2e656d69     e' to view time.
   259c8:	74272020 20656d69 20746573 44204d4d       'time set MM D
   259d8:	59592044 48205959 4d4d2048 20535320     D YYYY HH MM SS 
   259e8:	79616457 6f742027 74657320 6d697420     Wday' to set tim
   259f8:	61630065 65520074 61206461 6c696620     e.cat.Read a fil
   25a08:	20202e65 203a7845 74616327 663a3020     e.  Ex: 'cat 0:f
   25a18:	2e656c69 27747874 20726f20 74616327     ile.txt' or 'cat
   25a28:	663a3020 2e656c69 20747874 706f6e2d      0:file.txt -nop
   25a38:	746e6972 6f742027 73657420 66692074     rint' to test if
   25a48:	6c696620 61632065 6562206e 61657220      file can be rea
   25a58:	6f430064 66207970 73656c69 6f726620     d.Copy files fro
   25a68:	6f742f6d 616c4620 532f6873 61432044     m/to Flash/SD Ca
   25a78:	202e6472 3a784520 70632720 663a3020     rd.  Ex: 'cp 0:f
   25a88:	2e656c69 20747874 69663a31 742e656c     ile.txt 1:file.t
   25a98:	00277478 00706364 79706f43 6c6c6120     xt'.dcp.Copy all
   25aa8:	6c696620 6f207365 20612066 65726964      files of a dire
   25ab8:	726f7463 6f742079 6f6e6120 72656874     ctory to another
   25ac8:	72696420 6f746365 202e7972 3a784520      directory.  Ex:
   25ad8:	63642720 3a302070 20637273 73643a31      'dcp 0:src 1:ds
   25ae8:	6c002774 73550073 6c272065 3a302073     t'.ls.Use 'ls 0:
   25af8:	6f662027 6c462072 2c687361 20726f20     ' for Flash, or 
   25b08:	20736c27 20273a31 20726f66 43204453     'ls 1:' for SD C
   25b18:	00647261 69646b6d 72430072 65746165     ard.mkdir.Create
   25b28:	64206120 63657269 79726f74 7845202e      a directory. Ex
   25b38:	6d27203a 7269646b 73657420 6d002774     : 'mkdir test'.m
   25b48:	65520076 656d616e 66206120 2e656c69     v.Rename a file.
   25b58:	3a784520 6d722720 663a3020 2e656c69      Ex: 'rm 0:file.
   25b68:	20747874 656e3a30 78742e77 57002774     txt 0:new.txt'.W
   25b78:	65746972 6e206120 66207765 2e656c69     rite a new file.
   25b88:	3a784520 666e2720 69663c20 742e656c      Ex: 'nf <file.t
   25b98:	003e7478 52006d72 766f6d65 20612065     xt>.rm.Remove a 
   25ba8:	656c6966 7845202e 7227203a 3a30206d     file. Ex: 'rm 0:
   25bb8:	656c6966 7478742e 32690027 69270063     file.txt'.i2c.'i
   25bc8:	72206332 20646165 31307830 30783020     2c read 0x01 0x0
   25bd8:	633c2032 746e756f 3a20273e 61655220     2 <count>' : Rea
   25be8:	20207364 69766564 30206563 2c313078     ds  device 0x01,
   25bf8:	646e6120 67657220 65747369 78302072      and register 0x
   25c08:	270a3230 20633269 74697277 78302065     02.'i2c write 0x
   25c18:	30203130 20323078 33307830 20202027     01 0x02 0x03'   
   25c28:	7257203a 73657469 76656420 20656369     : Writes device 
   25c38:	31307830 6572202c 78302067 202c3230     0x01, reg 0x02, 
   25c48:	61746164 30783020 69270a33 64206332     data 0x03.'i2c d
   25c58:	6f637369 27726576 44203a20 6f637369     iscover' : Disco
   25c68:	20726576 20433249 69766564 00736563     ver I2C devices.
   25c78:	726f7473 00656761 61726150 6574656d     storage.Paramete
   25c88:	203a7372 726f6627 2074616d 2c276473     rs: 'format sd',
   25c98:	6f662720 74616d72 616c6620 2c276873      'format flash',
   25ca8:	6f6d2720 20746e75 2c276473 6f6d2720      'mount sd', 'mo
   25cb8:	20746e75 73616c66 72002768 6f6f6265     unt flash'.reboo
   25cc8:	65520074 746f6f62 68742073 79732065     t.Reboots the sy
   25cd8:	6d657473 676f6c00 6f6c2700 683c2067     stem.log.'log <h
   25ce8:	6f6c6c65 7420273e 6f6c206f 6e692067     ello>' to log in
   25cf8:	270a6f66 20676f6c 73756c66 74202768     fo.'log flush' t
   25d08:	6c66206f 20687375 73676f6c 6f6c270a     o flush logs.'lo
   25d18:	6e652067 656c6261 6e697270 6e692074     g enableprint in
   25d28:	772f6f66 696e7261 652f676e 726f7272     fo/warning/error
   25d38:	203a2027 62616e45 2073656c 67676f6c     ' : Enables logg
   25d48:	63207265 736c6c61 206f7420 6e697270     er calls to prin
   25d58:	270a6674 20676f6c 61736964 70656c62     tf.'log disablep
   25d68:	746e6972 666e6920 61772f6f 6e696e72     rint info/warnin
   25d78:	72652f67 27726f72 6944203a 6c626173     g/error': Disabl
   25d88:	6c207365 6567676f 61632072 20736c6c     es logger calls 
   25d98:	70206f74 746e6972 6c000a66 6e726165     to printf..learn
   25da8:	67654200 74206e69 656c206f 206e7261     .Begin to learn 
   25db8:	63205249 7365646f 726f6620 6d756e20     IR codes for num
   25dc8:	73726562 392d3020 65735500 69772720     bers 0-9.Use 'wi
   25dd8:	656c6572 20277373 73206f74 74206565     reless' to see t
   25de8:	6e206568 65747365 6f632064 6e616d6d     he nested comman
   25df8:	47007364 61207465 6c696620 73752065     ds.Get a file us
   25e08:	20676e69 6c74656e 2e64616f 20657865     ing netload.exe 
   25e18:	6220726f 73752079 20676e69 20656874     or by using the 
   25e28:	6c6c6f66 6e69776f 72702067 636f746f     following protoc
   25e38:	0a3a6c6f 74697257 75622065 72656666     ol:.Write buffer
   25e48:	7562203a 72656666 666f3c20 74657366     : buffer <offset
   25e58:	6e3c203e 62206d75 73657479 2e2e203e     > <num bytes> ..
   25e68:	72570a2e 20657469 66667562 74207265     ..Write buffer t
   25e78:	6966206f 203a656c 6d6d6f63 3c207469     o file: commit <
   25e88:	656c6966 656d616e 663c203e 20656c69     filename> <file 
   25e98:	7366666f 203e7465 6d756e3c 74796220     offset> <num byt
   25ea8:	66207365 206d6f72 66667562 003e7265     es from buffer>.
   25eb8:	616c6627 3c206873 656c6966 656d616e     'flash <filename
   25ec8:	5720273e 206c6c69 73616c66 50432068     >' Will flash CP
   25ed8:	69772055 74206874 20736968 2077656e     U with this new 
   25ee8:	616e6962 66207972 00656c69              binary file.

00025ef4 <typeinfo for terminalTask>:
   25ef4:	00026f70 00025f00 00025274              po..._..tR..

00025f00 <typeinfo name for terminalTask>:
   25f00:	65743231 6e696d72 61546c61 00006b73     12terminalTask..

00025f10 <typeinfo for wirelessTask>:
   25f10:	00026f70 00025f1c 00025274              po..._..tR..

00025f1c <typeinfo name for wirelessTask>:
   25f1c:	69773231 656c6572 61547373 00006b73     12wirelessTask..
   25f2c:	00000000                                ....

00025f30 <vtable for wirelessTask>:
   25f30:	00000000 00025f10 00013aa5 00013ab1     ....._...:...:..
   25f40:	0001230d 00012311 00012315 00013ac5     .#...#...#...:..
   25f50:	4c4c4548 e7000a4f e7e7adde 65646f6e     HELLO.......node
	...

00025f61 <LED_DISPLAY_CHARMAP>:
   25f61:	4f5b063f 077d6d66 86bf6f7f ede6cfdb     ?.[Ofm}..o......
   25f71:	efff87fd 5e397c77 00007179 00000000     ....w|9^yq......
   25f81:	00008600 00000000 00000000 00804000     .............@..
   25f91:	4f5b063f 077d6d66 00006f7f 00000000     ?.[Ofm}..o......
   25fa1:	397c7700 3d71795e 001f3076 3f000038     .w|9^yq=v0..8..?
   25fb1:	6d000073 00003f00 00000000 00000000     s..m.?..........
   25fc1:	397c7700 3d71795e 001f3076 3f000038     .w|9^yq=v0..8..?
   25fd1:	6d000073 00003f00 00000000 00000000     s..m.?..........
	...

00025fe2 <Tbl>:
   25fe2:	00fc00c7 00e200e9 00e000e4 00e700e5     ................
   25ff2:	00eb00ea 00ef00e8 00ec00ee 00c500c4     ................
   26002:	00e600c9 00f400c6 00f200f6 00f900fb     ................
   26012:	00d600ff 00a200dc 00a500a3 019220a7     ............. ..
   26022:	00ed00e1 00fa00f3 00d100f1 00ba00aa     ................
   26032:	231000bf 00bd00ac 00a100bc 00bb00ab     ...#............
   26042:	25922591 25022593 25612524 25562562     .%.%.%.%$%a%b%V%
   26052:	25632555 25572551 255c255d 2510255b     U%c%Q%W%]%\%[%.%
   26062:	25342514 251c252c 253c2500 255f255e     .%4%,%.%.%<%^%_%
   26072:	2554255a 25662569 25502560 2567256c     Z%T%i%f%`%P%l%g%
   26082:	25642568 25592565 25522558 256b2553     h%d%e%Y%X%R%S%k%
   26092:	2518256a 2588250c 258c2584 25802590     j%.%.%.%.%.%.%.%
   260a2:	00df03b1 03c00393 03c303a3 03c400b5     ................
   260b2:	039803a6 03b403a9 03c6221e 222903b5     ........."....)"
   260c2:	00b12261 22642265 23212320 224800f7     a"..e"d" #!#..H"
   260d2:	221900b0 221a00b7 00b2207f 00a025a0     ..."...". ...%..

000260e2 <tbl_lower.5649>:
   260e2:	00620061 00640063 00660065 00680067     a.b.c.d.e.f.g.h.
   260f2:	006a0069 006c006b 006e006d 0070006f     i.j.k.l.m.n.o.p.
   26102:	00720071 00740073 00760075 00780077     q.r.s.t.u.v.w.x.
   26112:	007a0079 00a200a1 00a500a3 00af00ac     y.z.............
   26122:	00e100e0 00e300e2 00e500e4 00e700e6     ................
   26132:	00e900e8 00eb00ea 00ed00ec 00ef00ee     ................
   26142:	00f100f0 00f300f2 00f500f4 00f800f6     ................
   26152:	00fa00f9 00fc00fb 00fe00fd 010100ff     ................
   26162:	01050103 01090107 010d010b 0111010f     ................
   26172:	01150113 01190117 011d011b 0121011f     ..............!.
   26182:	01250123 01290127 012d012b 0131012f     #.%.'.).+.-./.1.
   26192:	01350133 013a0137 013e013c 01420140     3.5.7.:.<.>.@.B.
   261a2:	01460144 014b0148 014f014d 01530151     D.F.H.K.M.O.Q.S.
   261b2:	01570155 015b0159 015f015d 01630161     U.W.Y.[.]._.a.c.
   261c2:	01670165 016b0169 016f016d 01730171     e.g.i.k.m.o.q.s.
   261d2:	01770175 017c017a 0192017e 03b203b1     u.w.z.|.~.......
   261e2:	03b403b3 03b603b5 03b803b7 03ba03b9     ................
   261f2:	03bc03bb 03be03bd 03c003bf 03c303c1     ................
   26202:	03c503c4 03c703c6 03c903c8 043003ca     ..............0.
   26212:	04320431 04340433 04360435 04380437     1.2.3.4.5.6.7.8.
   26222:	043a0439 043c043b 043e043d 0440043f     9.:.;.<.=.>.?.@.
   26232:	04420441 04440443 04460445 04480447     A.B.C.D.E.F.G.H.
   26242:	044a0449 044c044b 044e044d 0451044f     I.J.K.L.M.N.O.Q.
   26252:	04530452 04550454 04570456 04590458     R.S.T.U.V.W.X.Y.
   26262:	045b045a 045e045c 2170045f 21722171     Z.[.\.^._.p!q!r!
   26272:	21742173 21762175 21782177 217a2179     s!t!u!v!w!x!y!z!
   26282:	217c217b 217e217d ff41217f ff43ff42     {!|!}!~!.!A.B.C.
   26292:	ff45ff44 ff47ff46 ff49ff48 ff4bff4a     D.E.F.G.H.I.J.K.
   262a2:	ff4dff4c ff4fff4e ff51ff50 ff53ff52     L.M.N.O.P.Q.R.S.
   262b2:	ff55ff54 ff57ff56 ff59ff58 0000ff5a     T.U.V.W.X.Y.Z...

000262c2 <tbl_upper.5650>:
   262c2:	00420041 00440043 00460045 00480047     A.B.C.D.E.F.G.H.
   262d2:	004a0049 004c004b 004e004d 0050004f     I.J.K.L.M.N.O.P.
   262e2:	00520051 00540053 00560055 00580057     Q.R.S.T.U.V.W.X.
   262f2:	005a0059 ffe00021 ffe5ffe1 ffe3ffe2     Y.Z.!...........
   26302:	00c100c0 00c300c2 00c500c4 00c700c6     ................
   26312:	00c900c8 00cb00ca 00cd00cc 00cf00ce     ................
   26322:	00d100d0 00d300d2 00d500d4 00d800d6     ................
   26332:	00da00d9 00dc00db 00de00dd 01000178     ............x...
   26342:	01040102 01080106 010c010a 0110010e     ................
   26352:	01140112 01180116 011c011a 0120011e     .............. .
   26362:	01240122 01280126 012c012a 0130012e     ".$.&.(.*.,...0.
   26372:	01340132 01390136 013d013b 0141013f     2.4.6.9.;.=.?.A.
   26382:	01450143 014a0147 014e014c 01520150     C.E.G.J.L.N.P.R.
   26392:	01560154 015a0158 015e015c 01620160     T.V.X.Z.\.^.`.b.
   263a2:	01660164 016a0168 016e016c 01720170     d.f.h.j.l.n.p.r.
   263b2:	01760174 017b0179 0191017d 03920391     t.v.y.{.}.......
   263c2:	03940393 03960395 03980397 039a0399     ................
   263d2:	039c039b 039e039d 03a0039f 03a303a1     ................
   263e2:	03a503a4 03a703a6 03a903a8 041003aa     ................
   263f2:	04120411 04140413 04160415 04180417     ................
   26402:	041a0419 041c041b 041e041d 0420041f     .............. .
   26412:	04220421 04240423 04260425 04280427     !.".#.$.%.&.'.(.
   26422:	042a0429 042c042b 042e042d 0401042f     ).*.+.,.-.../...
   26432:	04030402 04050404 04070406 04090408     ................
   26442:	040b040a 040e040c 2160040f 21622161     ..........`!a!b!
   26452:	21642163 21662165 21682167 216a2169     c!d!e!f!g!h!i!j!
   26462:	216c216b 216e216d ff21216f ff23ff22     k!l!m!n!o!!.".#.
   26472:	ff25ff24 ff27ff26 ff29ff28 ff2bff2a     $.%.&.'.(.).*.+.
   26482:	ff2dff2c ff2fff2e ff31ff30 ff33ff32     ,.-.../.0.1.2.3.
   26492:	ff35ff34 ff37ff36 ff39ff38 0000ff3a     4.5.6.7.8.9.:...
   264a2:	c7ffff9f 009a8094 00000000                       ..........

000264ac <CSWTCH.72>:
   264ac:	00100000 00200000 00400000 00800000     ...... ...@.....

000264bc <cst.6222>:
   264bc:	40008000 10002000 40000800 10002000     ...@. .....@. ..
   264cc:	04000800 2a220200 3f3e3c3a 2b007f7c     ......"*:<>?|..+
   264dc:	5b3d3b2c feeb005d 44534d90 2e35534f     ,;=[]....MSDOS5.
   264ec:	4f4e0030 4d414e20 20202045 54414620     0.NO NAME    FAT
   264fc:	20203233 4f4e0020 4d414e20 20202045     32   .NO NAME   
   2650c:	54414620 20202020 9a800020                        FAT     .

00026516 <ExCvt>:
   26516:	41909a80 808f418e 49454545 8f8e4949     ...A.A..EEEIII..
   26526:	4f929290 55554f99 9b9a9959 9f9e9d9c     ...O.OUUY.......
   26536:	554f4941 a7a6a5a5 abaaa9a8 afae21ac     AIOU.........!..
   26546:	b3b2b1b0 b7b6b5b4 bbbab9b8 bfbebdbc     ................
   26556:	c3c2c1c0 c7c6c5c4 cbcac9c8 cfcecdcc     ................
   26566:	d3d2d1d0 d7d6d5d4 dbdad9d8 dfdedddc     ................
   26576:	e3e2e1e0 e7e6e5e4 ebeae9e8 efeeedec     ................
   26586:	f3f2f1f0 f7f6f5f4 fbfaf9f8 fffefdfc     ................

00026596 <LfnOfs>:
   26596:	07050301 12100e09 1c181614 0400001e              ..............

000265a4 <vst.6221>:
   265a4:	02000400 00800100 00200040 00080010     ........@. .....
   265b4:	00020004 75530000 726f7070 20646574     ......Supported 
   265c4:	6d6d6f43 73646e61 200a003a 73303125     Commands:.. %10s
   265d4:	25203a20 7332332e 2e2e2e20 25200a00      : %.32s ..... %
   265e4:	20733031 7325203a 27200a00 706c6568     10s : %s.. 'help
   265f4:	6f633c20 6e616d6d 20273e64 67206f74      <command>' to g
   26604:	68207465 20706c65 6120666f 6d6f6320     et help of a com
   26614:	646e616d 6c654800 6f6e2070 70732074     mand.Help not sp
   26624:	66696365 20646569 20726f66 73696874     ecified for this
   26634:	6d6f6320 646e616d 6d6f4300 646e616d      command.Command
   26644:	766e4920 64696c61 5420202e 27207972      Invalid.  Try '
   26654:	706c6568 6f632027 6e616d6d 0a0d0064     help' command...
   26664:	6d6f4300 646e616d 69616620 2164656c     .Command failed!
   26674:	6f432020 6e616d6d 20732764 706c6568       Command's help
   26684:	3a736920 37250020 00002073 00026744      is: .%7s ..Dg..
   26694:	0002599a 00024360 0002435a 6f6c3a30     .Y..`C..ZC..0:lo
   266a4:	73632e67 61460076 64656c69 6c696620     g.csv.Failed fil
   266b4:	72772065 3a657469 72450020 20726f72     e write: .Error 
   266c4:	77207525 69746972 6c20676e 6966676f     %u writing logfi
   266d4:	202e656c 252f7525 72772075 65747469     le. %u/%u writte
   266e4:	46202e6e 3a727470 0a752520 676f6c00     n. Fptr: %u..log
   266f4:	00726567 4f525245 6c203a52 6567676f     ger.ERROR: logge
   26704:	6e692072 61697469 617a696c 6e6f6974     r initialization
   26714:	69616620 6572756c 2f642500 252c6425      failure.%d/%d,%
   26724:	3a643230 64323025 3230253a 75252c64     02d:%02d:%02d,%u
   26734:	2c73252c 252c7325 2c732573 002c7525     ,%s,%s,%s%s,%u,.
   26744:	61766e69 0064696c 0020202a 73617420     invalid.*  . tas
   26754:	6163206b 6e696c6c 61742067 6e456b73     k calling taskEn
   26764:	28797274 6f662029 6c612072 6174206c     try() for all ta
   26774:	20736b73 202e2e2e 20202a00 68636145     sks ... .*  Each
   26784:	73617420 6977206b 74206c6c 206e6568      task will then 
   26794:	65746e65 68742072 75722065 2029286e     enter the run() 
   267a4:	706f6f6c 2020000a 203e2d2d 4c494146     loop..  --> FAIL
   267b4:	74204445 456b7361 7972746e 45002928     ED taskEntry().E
   267c4:	524f5252 694b203a 6e696c6c 72462067     RROR: Killing Fr
   267d4:	54526565 6420534f 74206575 7265206f     eeRTOS due to er
   267e4:	28726f72 20002973 203e2d2d 4c494146     ror(s). --> FAIL
   267f4:	20455255 65746564 64657463 7573203b     URE detected; su
   26804:	6e657073 676e6964 69687420 61742073     spending this ta
   26814:	2e206b73 45002e2e 524f5252 4f4e203a     sk ....ERROR: NO
   26824:	73617420 6120736b 64656464 20796220      tasks added by 
   26834:	65686373 656c7564 64615f72 61745f64     scheduler_add_ta
   26844:	29286b73 20202a00 61657243 676e6974     sk().*  Creating
   26854:	73617420 2e20736b 000a2e2e 2d2d2020      tasks .....  --
   26864:	4146203e 44454c49 61547820 72436b73     > FAILED xTaskCr
   26874:	65746165 45002928 524f5252 7243203a     eate().ERROR: Cr
   26884:	69746165 6320676e 746e756f 20676e69     eating counting 
   26894:	616d6573 726f6870 202a0065 696e4920     semaphore.*  Ini
   268a4:	6c616974 6e697a69 61742067 20736b73     tializing tasks 
   268b4:	0a2e2e2e 2d202000 46203e2d 454c4941     .....  --> FAILE
   268c4:	6e692044 29287469 20202a00 72617453     D init().*  Star
   268d4:	676e6974 68637320 6c756465 2e207265     ting scheduler .
   268e4:	000a2e2e 4f525245 53203a52 6f656d6f     ....ERROR: Someo
   268f4:	6b20656e 656c6c69 68742064 63732065     ne killed the sc
   26904:	75646568 0072656c 4f525245 52203a52     heduler.ERROR: R
   26914:	73756665 20676e69 73206f74 74726174     efusing to start
   26924:	20534f20 65686373 656c7564 75642072      OS scheduler du
   26934:	6f742065 72726520 7328726f 00000029     e to error(s)...
   26944:	40004000 40008000 40090000 40094000     .@.@...@...@.@.@
   26954:	17160201                                ....

00026958 <typeinfo for SingletonTemplate<NordicStream>>:
   26958:	00026f10 00026960                       .o..`i..

00026960 <typeinfo name for SingletonTemplate<NordicStream>>:
   26960:	69533731 656c676e 546e6f74 6c706d65     17SingletonTempl
   26970:	49657461 6f4e3231 63696472 65727453     ateI12NordicStre
   26980:	00456d61                                amE.

00026984 <typeinfo name for NordicStream>:
   26984:	6f4e3231 63696472 65727453 00006d61     12NordicStream..
   26994:	00000000                                ....

00026998 <vtable for NordicStream>:
   26998:	00000000 000269b8 00019d11 00019cef     .....i..........
   269a8:	00019c69 00019cc9 00019cdd 00000000     i...............

000269b8 <typeinfo for NordicStream>:
   269b8:	00026e68 00026984 00000000 00000002     hn...i..........
   269c8:	00026b48 00000002 00026958 00000002     Hk......Xi......

000269d8 <typeinfo for SingletonTemplate<Uart0>>:
   269d8:	00026f10 000269e0                       .o...i..

000269e0 <typeinfo name for SingletonTemplate<Uart0>>:
   269e0:	69533731 656c676e 546e6f74 6c706d65     17SingletonTempl
   269f0:	49657461 72615535 00453074              ateI5Uart0E.

000269fc <typeinfo for Uart0>:
   269fc:	00026e68 00026a1c 00000000 00000002     hn...j..........
   26a0c:	00026b88 00000002 000269d8 00000002     .k.......i......

00026a1c <typeinfo name for Uart0>:
   26a1c:	72615535 00003074 00000000              5Uart0......

00026a28 <vtable for Uart0>:
   26a28:	00000000 000269fc 0001a74f 0001a6d5     .....i..O.......
   26a38:	0001a72f 0001a071 0001a097 00000000     /...q...........

00026a48 <typeinfo for SingletonTemplate<Uart2>>:
   26a48:	00026f10 00026a50                       .o..Pj..

00026a50 <typeinfo name for SingletonTemplate<Uart2>>:
   26a50:	69533731 656c676e 546e6f74 6c706d65     17SingletonTempl
   26a60:	49657461 72615535 00453274              ateI5Uart2E.

00026a6c <typeinfo for Uart2>:
   26a6c:	00026e68 00026a8c 00000000 00000002     hn...j..........
   26a7c:	00026b88 00000002 00026a48 00000002     .k......Hj......

00026a8c <typeinfo name for Uart2>:
   26a8c:	72615535 00003274 00000000              5Uart2......

00026a98 <vtable for Uart2>:
   26a98:	00000000 00026a6c 0001a74f 0001a6d5     ....lj..O.......
   26aa8:	0001a72f 0001a12d 0001a141 00000000     /...-...A.......

00026ab8 <typeinfo for SingletonTemplate<Uart3>>:
   26ab8:	00026f10 00026ac0                       .o...j..

00026ac0 <typeinfo name for SingletonTemplate<Uart3>>:
   26ac0:	69533731 656c676e 546e6f74 6c706d65     17SingletonTempl
   26ad0:	49657461 72615535 00453374              ateI5Uart3E.

00026adc <typeinfo for Uart3>:
   26adc:	00026e68 00026afc 00000000 00000002     hn...j..........
   26aec:	00026b88 00000002 00026ab8 00000002     .k.......j......

00026afc <typeinfo name for Uart3>:
   26afc:	72615535 00003374 00000000              5Uart3......

00026b08 <vtable for Uart3>:
   26b08:	00000000 00026adc 0001a74f 0001a6d5     .....j..O.......
   26b18:	0001a72f 0001a195 0001a1a9 00000000     /...............

00026b28 <vtable for CharDev>:
   26b28:	00000000 00026b48 0001c859 0001c859     ....Hk..Y...Y...
   26b38:	0001a1fd 0001a201 0001a219 00000000     ................

00026b48 <typeinfo for CharDev>:
   26b48:	00026f10 00026b50                       .o..Pk..

00026b50 <typeinfo name for CharDev>:
   26b50:	61684337 76654472 61553700                       7CharDev.

00026b59 <typeinfo name for UartDev>:
   26b59:	72615537 76654474 00000000 00000000              7UartDev.......

00026b68 <vtable for UartDev>:
   26b68:	00000000 00026b88 0001a74f 0001a6d5     .....k..O.......
   26b78:	0001a72f 0001a05d 0001a085 00000000     /...]...........

00026b88 <typeinfo for UartDev>:
   26b88:	00026f70 00026b59 00026b48              po..Yk..Hk..

00026b94 <ucExpectedStackBytes.6438>:
   26b94:	a5a5a5a5 a5a5a5a5 a5a5a5a5 a5a5a5a5     ................
   26ba4:	a5a5a5a5 454c4449 4c414800 474e4954     ....IDLE.HALTING
   26bb4:	53595320 3a4d4554 61745320 6f206b63      SYSTEM: Stack o
   26bc4:	66726576 20776f6c 74207962 3a6b7361     verflow by task:
   26bd4:	540a0020 69207972 6572636e 6e697361      ..Try increasin
   26be4:	74732067 206b6361 6f6d656d 6f207972     g stack memory o
   26bf4:	68742066 74207369 2e6b7361 4148000a     f this task...HA
   26c04:	4e49544c 59532047 4d455453 6f59203a     LTING SYSTEM: Yo
   26c14:	73207275 65747379 6172206d 756f206e     ur system ran ou
   26c24:	666f2074 6d656d20 2079726f 4d415228     t of memory (RAM
   26c34:	000a2129 74737953 50206d65 7265776f     )!..System Power
   26c44:	3a6e6f2d 6f6f4220 676e6974 2e2e2e20     -on: Booting ...
   26c54:	73795300 206d6574 73617243 52203a68     .System Crash: R
   26c64:	6f622d65 6e69746f 2e2e2067 6157002e     e-booting ....Wa
   26c74:	64686374 5320676f 65747379 6552206d     tchdog System Re
   26c84:	3a746573 6f6f4220 676e6974 2e2e2e20     set: Booting ...
   26c94:	6d654d00 2079726f 6f666e49 74616d72     .Memory Informat
   26ca4:	3a6e6f69 6f6c470a 206c6162 64657355     ion:.Global Used
   26cb4:	3a202020 64352520 6c616d0a 20636f6c        : %5d.malloc 
   26cc4:	64657355 3a202020 64352520 6c616d0a     Used   : %5d.mal
   26cd4:	20636f6c 69617641 3a202e6c 64352520     loc Avail. : %5d
   26ce4:	7379530a 206d6574 69617641 3a202e6c     .System Avail. :
   26cf4:	64352520 78654e0a 65482074 70207061      %5d.Next Heap p
   26d04:	20207274 203a2020 30257830 4c0a5838     tr    : 0x%08X.L
   26d14:	20747361 6b726273 70202928 20207274     ast sbrk() ptr  
   26d24:	7830203a 58383025 73614c0a 62732074     : 0x%08X.Last sb
   26d34:	29286b72 7a697320 203a2065 4e0a7525     rk() size : %u.N
   26d44:	20206d75 6b726273 63202928 736c6c61     um  sbrk() calls
   26d54:	7525203a 6e55000a 65707865 64657463     : %u..Unexpected
   26d64:	52534920 6c616320 7461206c 63706c20      ISR call at lpc
   26d74:	7379735f 2500632e 52492075 61772051     _sys.c.%u IRQ wa
   26d84:	72742073 65676769 2c646572 74756220     s triggered, but
   26d94:	206f6e20 20515249 76726573 20656369      no IRQ service 
   26da4:	20736177 69666564 2164656e 4d4e000a     was defined!..NM
   26db4:	61462049 0a746c75 6d654d00 75614620     I Fault..Mem Fau
   26dc4:	000a746c 20535542 6c756146 55000a74     lt..BUS Fault..U
   26dd4:	65676173 75614620 000a746c 4d474244     sage Fault..DBGM
   26de4:	46204e4f 746c7561 5249000a 6f6e2051     ON Fault..IRQ no
   26df4:	65722074 74736967 64657265 616d0021     t registered!.ma
   26e04:	29286e69 6f687320 20646c75 6576656e     in() should neve
   26e14:	78652072 6f207469 6874206e 73207369     r exit on this s
   26e24:	65747379 00000a6d                       ystem...

00026e2c <typeinfo for __cxxabiv1::__vmi_class_type_info>:
   26e2c:	00026f70 00026e38 00026f38              po..8n..8o..

00026e38 <typeinfo name for __cxxabiv1::__vmi_class_type_info>:
   26e38:	5f30314e 7878635f 76696261 5f313231     N10__cxxabiv121_
   26e48:	696d765f 616c635f 745f7373 5f657079     _vmi_class_type_
   26e58:	6f666e69 00000045                       infoE...

00026e60 <vtable for __cxxabiv1::__vmi_class_type_info>:
   26e60:	00000000 00026e2c 0001c3f9 0001c40d     ....,n..........
   26e70:	0001c89d 0001c8a1 0001c971 0001c8ef     ........q.......
   26e80:	0001c731 0001c4c1 0001c41f 00000000     1...............
   26e90:	65727570 72697620 6c617574 74656d20     pure virtual met
   26ea0:	20646f68 6c6c6163 000a6465 656c6564     hod called..dele
   26eb0:	20646574 74726976 206c6175 6874656d     ted virtual meth
   26ec0:	6320646f 656c6c61 00000a64              od called...

00026ecc <typeinfo for std::type_info>:
   26ecc:	00026f10 00026ed4                       .o...n..

00026ed4 <typeinfo name for std::type_info>:
   26ed4:	74397453 5f657079 6f666e69 00000000     St9type_info....
   26ee4:	00000000                                ....

00026ee8 <vtable for std::type_info>:
   26ee8:	00000000 00026ecc 0001c891 0001c8a9     .....n..........
   26ef8:	0001c89d 0001c8a1 0001c8eb 0001c8a5     ................

00026f08 <vtable for __cxxabiv1::__class_type_info>:
   26f08:	00000000 00026f38 0001c931 0001c945     ....8o..1...E...
   26f18:	0001c89d 0001c8a1 0001c971 0001c8ef     ........q.......
   26f28:	0001c957 0001c997 0001c923 00000000     W.......#.......

00026f38 <typeinfo for __cxxabiv1::__class_type_info>:
   26f38:	00026f70 00026f44 00026ecc              po..Do...n..

00026f44 <typeinfo name for __cxxabiv1::__class_type_info>:
   26f44:	5f30314e 7878635f 76696261 5f373131     N10__cxxabiv117_
   26f54:	616c635f 745f7373 5f657079 6f666e69     _class_type_info
   26f64:	00000045                                E...

00026f68 <vtable for __cxxabiv1::__si_class_type_info>:
   26f68:	00000000 00026f98 0001c9d1 0001c9e5     .....o..........
   26f78:	0001c89d 0001c8a1 0001c971 0001c8ef     ........q.......
   26f88:	0001caa7 0001ca2b 0001c9f7 00000000     ....+...........

00026f98 <typeinfo for __cxxabiv1::__si_class_type_info>:
   26f98:	00026f70 00026fa4 00026f38              po...o..8o..

00026fa4 <typeinfo name for __cxxabiv1::__si_class_type_info>:
   26fa4:	5f30314e 7878635f 76696261 5f303231     N10__cxxabiv120_
   26fb4:	5f69735f 73616c63 79745f73 695f6570     _si_class_type_i
   26fc4:	456f666e 20200000                                nfoE.

00026fc9 <_ctype_>:
   26fc9:	20202000 20202020 28282020 20282828     .         ((((( 
   26fd9:	20202020 20202020 20202020 20202020                     
   26fe9:	10108820 10101010 10101010 10101010      ...............
   26ff9:	04040410 04040404 10040404 10101010     ................
   27009:	41411010 41414141 01010101 01010101     ..AAAAAA........
   27019:	01010101 01010101 01010101 10101010     ................
   27029:	42421010 42424242 02020202 02020202     ..BBBBBB........
   27039:	02020202 02020202 02020202 10101010     ................
   27049:	00000020 00000000 00000000 00000000      ...............
	...

000270cc <__sf_fake_stdin>:
	...

000270ec <__sf_fake_stdout>:
	...

0002710c <__sf_fake_stderr>:
	...
   2712c:	00000043                                C...

00027130 <_global_impure_ptr>:
   27130:	2007c0f0                                ... 

00027134 <_DAYS_BEFORE_MONTH>:
   27134:	00000000 0000001f 0000003b 0000005a     ........;...Z...
   27144:	00000078 00000097 000000b5 000000d4     x...............
   27154:	000000f3 00000111 00000130 0000014e     ........0...N...

00027164 <DAYS_IN_MONTH>:
   27164:	0000001f 0000001c 0000001f 0000001e     ................
   27174:	0000001f 0000001e 0000001f 0000001f     ................
   27184:	0000001e 0000001f 0000001e 0000001f     ................

00027194 <mon_lengths>:
   27194:	0000001f 0000001c 0000001f 0000001e     ................
   271a4:	0000001f 0000001e 0000001f 0000001f     ................
   271b4:	0000001e 0000001f 0000001e 0000001f     ................
   271c4:	0000001f 0000001d 0000001f 0000001e     ................
   271d4:	0000001f 0000001e 0000001f 0000001f     ................
   271e4:	0000001e 0000001f 0000001e 0000001f     ................

000271f4 <year_lengths>:
   271f4:	0000016d 0000016e 00000000              m...n.......

00027200 <tinytens>:
   27200:	97d889bc 3c9cd2b2 d5a8a733 3949f623     .......<3...#.I9
   27210:	44f4a73d 32a50ffd cf8c979d 255bba08     =..D...2......[%
   27220:	64ac6f43 11680628                       Co.d(.h.

00027228 <fpi.5246>:
   27228:	00000035 fffffbce 000003cb 00000001     5...............
   27238:	00000000                                ....

0002723c <fpinan.5282>:
   2723c:	00000034 fffffbce 000003cb 00000001     4...............
   2724c:	00000000 2b302d23 6c680020 6665004c     ....#-0+ .hlL.ef
   2725c:	47464567 464e4900 666e6900 4e414e00     gEFG.INF.inf.NAN
   2726c:	6e616e00 32313000 36353433 41393837     .nan.0123456789A
   2727c:	45444342 31300046 35343332 39383736     BCDEF.0123456789
   2728c:	64636261 65006665 00646c25 000272b6     abcdef.e%ld..r..
   2729c:	000272b9 000272bc 61462d41 3938662d     .r...r..A-Fa-f89
   272ac:	33323130 37363534 2d2b005d 00303000     01234567].+-.00.
   272bc:	25005878 2073332e 73332e25 20643325     xX.%.3s %.3s%3d 
   272cc:	64322e25 322e253a 2e253a64 25206432     %.2d:%.2d:%.2d %
   272dc:	53000a64                                         d..

000272df <day_name.4594>:
   272df:	4d6e7553 75546e6f 64655765 46756854     SunMonTueWedThuF
   272ef:	61536972 6e614a74                                riSat

000272f4 <mon_name.4595>:
   272f4:	466e614a 614d6265 72704172 4a79614d     JanFebMarAprMayJ
   27304:	754a6e75 6775416c 4f706553 6f4e7463     unJulAugSepOctNo
   27314:	63654476 69666e49 7974696e 4e614e00     vDecInfinity.NaN
   27324:	534f5000 00005849 00000000              .POSIX......

00027330 <__mprec_tens>:
   27330:	00000000 3ff00000 00000000 40240000     .......?......$@
   27340:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
   27350:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
   27360:	00000000 412e8480 00000000 416312d0     .......A......cA
   27370:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
   27380:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
   27390:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
   273a0:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
   273b0:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
   273c0:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
   273d0:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
   273e0:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
   273f0:	79d99db4 44ea7843                       ...yCx.D

000273f8 <__mprec_bigtens>:
   273f8:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
   27408:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
   27418:	7f73bf3c 75154fdd                       <.s..O.u

00027420 <p05.5281>:
   27420:	00000005 00000019 0000007d              ........}...

0002742c <__init_array_start>:
   2742c:	00012ab9 	.word	0x00012ab9
