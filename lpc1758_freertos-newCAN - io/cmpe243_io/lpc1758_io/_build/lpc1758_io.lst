
lpc1758_io.elf:     file format elf32-littlearm
lpc1758_io.elf
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00010000

Program Header:
0x70000001 off    0x0001fcfc vaddr 0x00027cfc paddr 0x00027cfc align 2**2
         filesz 0x00000008 memsz 0x00000008 flags r--
    LOAD off    0x00008000 vaddr 0x00010000 paddr 0x00010000 align 2**15
         filesz 0x00017d04 memsz 0x00017d04 flags r-x
    LOAD off    0x00024000 vaddr 0x2007c000 paddr 0x00027d04 align 2**15
         filesz 0x000001e8 memsz 0x00000ad8 flags rw-
private flags = 5000002: [Version5 EABI] [has entry point]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn  Flags
  0 .text         00017cfc  00010000  00010000  00008000  2**3  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000001e8  2007c000  00027d04  00024000  2**2  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          000008f0  2007c1e8  00027eec  000241e8  2**3  ALLOC
  3 .comment      00000070  00000000  00000000  000241e8  2**0  CONTENTS, READONLY
  4 .ARM.attributes 00000031  00000000  00000000  00024258  2**0  CONTENTS, READONLY
  5 .ARM.exidx    00000008  00027cfc  00027cfc  0001fcfc  2**2  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .debug_frame  00001e10  00000000  00000000  0002428c  2**2  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
00010000 l    d  .text	00000000 .text
2007c000 l    d  .data	00000000 .data
2007c1e8 l    d  .bss	00000000 .bss
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00027cfc l    d  .ARM.exidx	00000000 .ARM.exidx
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 startup.cpp
000100f2 l       .text	00000000 _MSP
0001ca90 l     F .text	0000003c isr_forwarder_routine
00010190 l     F .text	0000006c isr_reset
2007c078 l     O .data	0000008c g_isr_array
00000000 l    df *ABS*	00000000 memory.cpp
2007c1e8 l     O .bss	00000004 g_last_sbrk_ptr
2007c1ec l     O .bss	00000004 g_next_heap_ptr
2007c1f0 l     O .bss	00000004 g_last_sbrk_size
2007c1f4 l     O .bss	00000004 g_sbrk_calls
00000000 l    df *ABS*	00000000 newlib_syscalls.c
2007c1f8 l     O .bss	00000004 g_input_dev_fptr
2007c1fc l     O .bss	00000004 g_output_dev_fptr
00000000 l    df *ABS*	00000000 newlib_time.c
00000000 l    df *ABS*	00000000 printf_lib.c
00000000 l    df *ABS*	00000000 handlers.cpp
00024c50 l     O .text	0000000b logHandler(str&, CharDev&, void*)::__FUNCTION__
00000000 l    df *ABS*	00000000 prog_handlers.cpp
2007c220 l     O .bss	00000004 getFileHandler(str&, CharDev&, void*)::spBuffer
2007c224 l     O .bss	00000004 guard variable for getFileHandler(str&, CharDev&, void*)::spBuffer
00000000 l    df *ABS*	00000000 wireless_handlers.cpp
00011414 l     F .text	0000003c wirelessHandlerPrintStats(CharDev&, mesh_stats_t*, unsigned char)
00011450 l     F .text	0000001e wsStatsHandler(str&, CharDev&, void*)
00011470 l     F .text	00000118 wsTxHandler(str&, CharDev&, void*)
00011588 l     F .text	00000034 wsAddrHandler(str&, CharDev&, void*)
00011630 l     F .text	00000080 wsRxHandler(str&, CharDev&, void*)
00011a50 l     F .text	00000120 wsStreamHandler(str&, CharDev&, void*)
00011830 l     F .text	00000220 wsFileTxHandler(str&, CharDev&, void*)
2007c22c l     O .bss	00000004 wirelessHandler(str&, CharDev&, void*)::pCmdProcessor
00000000 l    df *ABS*	00000000 high_level_init.cpp
00011b70 l     F .text	0000000c hl_print_line()
00011b7c l     F .text	0000002c ssp_set_max_clock
00011ba8 l     F .text	00000094 hl_mount_storage(FileSystemObject&, char const*)
00000000 l    df *ABS*	00000000 remote.cpp
00000000 l    df *ABS*	00000000 terminal.cpp
00012250 l     F .text	00000034 VECTOR<terminalTask::cmdChan_t>::changeCapacity(unsigned int) [clone .part.3]
00000000 l    df *ABS*	00000000 examples.cpp
00000000 l    df *ABS*	00000000 can_common.cpp
000265ff l     O .text	00000009 can_controller::can_recv(controller_id_t*, msg_id_t*, unsigned char*, unsigned short*)::__FUNCTION__
00026608 l     O .text	00000009 can_controller::can_send(controller_id_t, msg_id_t, unsigned char*, unsigned short)::__FUNCTION__
00000000 l    df *ABS*	00000000 controller_io.cpp
0001364c l     F .text	0000002c _GLOBAL__sub_I_controller
2007c000 l     O .data	00000024 filter_list
2007c750 l     O .bss	00000004 msg_queue
00026742 l     O .text	00000004 canRxBufferTask::run(void*)::__FUNCTION__
2007c754 l     O .bss	00000001 heartbeat_count
00000000 l    df *ABS*	00000000 iofunc.cpp
000144fc l     F .text	00000050 _GLOBAL__sub_I_head
2007c755 l     O .bss	00000001 GLCD::GLCD_write_float(char, char, float, unsigned char)::checksum
2007c7a0 l     O .bss	00000001 UART2_IRQHandler::rec
2007c7ac l     O .bss	00000001 GLCD::GLCD_write_str(char, char, char*)::checksum
2007c7d4 l     O .bss	00000001 GLCD::GLCD_contrast(char)::checksum
2007c7d6 l     O .bss	00000001 GLCD::GLCD_write(char, char, char, char, char)::checksum
2007c7d8 l     O .bss	00000001 GLCD::GLCD_write_int(char, char, int)::checksum
00000000 l    df *ABS*	00000000 main.cpp
00000000 l    df *ABS*	00000000 mesh.c
0001459c l     F .text	00000026 mesh_incr_soft_timers_for_arr
000145c4 l     F .text	0000004c mesh_update_soft_timers
00014610 l     F .text	0000003c mesh_send_packet
0001464c l     F .text	00000034 mesh_send_retry_packet
00014680 l     F .text	00000024 mesh_find_rte_tbl_entry
000146a4 l     F .text	00000028 mesh_update_rte_scores
000146cc l     F .text	00000046 mesh_get_pnd_pkt_slot
00014714 l     F .text	0000008c mesh_pending_packets_add
000147a0 l     F .text	00000060 mesh_get_rte_to_modify
00014800 l     F .text	00000184 mesh_handle_pnd_pkts_for_arr
00014c46 l     F .text	0000001a mesh_send_ack
2007c028 l     O .data	00000004 g_pkt_hist_wptr
2007c8a9 l     O .bss	0000000c g_pkt_hist
2007c7dc l     O .bss	00000014 g_driver
2007c7f0 l     O .bss	00000090 g_mesh_pnd_pkts
2007c880 l     O .bss	00000018 g_our_name
2007c898 l     O .bss	0000000c g_mesh_stats
2007c8a4 l     O .bss	00000004 s_prev_time_ms.5015
2007c8a8 l     O .bss	00000001 g_rpt_node
2007c8b5 l     O .bss	00000010 g_rte_table
2007c8c5 l     O .bss	00000001 g_locked
2007c02c l     O .data	00000001 g_retry_count
2007c8c6 l     O .bss	00000001 g_error_mask
2007c02d l     O .data	00000001 g_our_node_id
2007c8c7 l     O .bss	00000001 s_next_packet_id.5001
2007c8c8 l     O .bss	00000048 g_our_pnd_pkts
00000000 l    df *ABS*	00000000 nrf24L01Plus.c
00014fc4 l     F .text	00000124 nordic_transfer
000150e8 l     F .text	00000020 nordic_readRegister
00015108 l     F .text	00000020 nordic_writeRegister
00000000 l    df *ABS*	00000000 wireless.c
000154a4 l     F .text	00000030 nrf_irq_callback
000154d4 l     F .text	00000070 nrf_driver_init
00015544 l     F .text	0000004c nrf_driver_app_recv
00015590 l     F .text	0000005c nrf_driver_send
000155ec l     F .text	00000022 nrf_driver_receive
0001560e l     F .text	00000062 wireless_get_queued_pkt
00015670 l     F .text	00000028 nrf_driver_get_timer
2007c910 l     O .bss	00000004 g_ack_queue
2007c914 l     O .bss	00000004 g_rx_queue
2007c918 l     O .bss	00000004 g_nrf_activity_sem
00000000 l    df *ABS*	00000000 io_source.cpp
00026891 l     O .text	00000080 LED_DISPLAY_CHARMAP
00000000 l    df *ABS*	00000000 storage.cpp
00000000 l    df *ABS*	00000000 ccsbcs.c
00026912 l     O .text	00000100 Tbl
00026a12 l     O .text	000001e0 tbl_lower.5649
00026bf2 l     O .text	000001e0 tbl_upper.5650
00000000 l    df *ABS*	00000000 reentrant.c
00000000 l    df *ABS*	00000000 diskio.c
00000000 l    df *ABS*	00000000 sd.c
00015d42 l     F .text	00000012 sys_get_uptime_ms
00015d54 l     F .text	00000030 ssp_set_max_clock.constprop.2
00015d84 l     F .text	00000018 ssp1_exchange_byte
2007c91c l     O .bss	00000001 g_card_type
2007c02e l     O .data	00000001 g_disk_status
00000000 l    df *ABS*	00000000 spi_flash.cpp
000164b4 l     F .text	00000020 flash_get_mem_size_bytes()
000164d4 l     F .text	0000006c flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)
00016540 l     F .text	000000e0 ssp1_exchange_data
00016620 l     F .text	00000024 flash_send_op_addr(flash_opcode_t, unsigned long)
00016644 l     F .text	00000044 flash_read_page(unsigned char*, unsigned long, unsigned long)
00016688 l     F .text	00000044 flash_wait_for_ready()
000168e0 l     F .text	0000008c flash_write_page(unsigned char*, unsigned long, unsigned long)
2007c91e l     O .bss	00000002 g_flash_pagesize
00026ddc l     O .text	00000010 CSWTCH.72
2007c920 l     O .bss	00000001 g_flash_capacity
2007c924 l     O .bss	00000004 g_sector_count
00000000 l    df *ABS*	00000000 fatfs_time.c
00000000 l    df *ABS*	00000000 ff.c
00016a3a l     F .text	0000002e mem_cpy
00016a68 l     F .text	0000000e mem_set
00016a76 l     F .text	0000001e sum_sfn
00016a94 l     F .text	00000040 get_ldnumber
00016ad4 l     F .text	000000b0 get_fileinfo
00016b84 l     F .text	0000004a sync_window
00016bd0 l     F .text	00000078 sync_fs
00016c48 l     F .text	00000032 move_window
00016c7c l     F .text	0000004c check_fs
00016cc8 l     F .text	0000021c find_volume
00016ee4 l     F .text	0000003a validate
00016f1e l     F .text	0000001a unlock_fs
00016ff4 l     F .text	0000007e dir_sdi
00017140 l     F .text	000000a2 create_chain
000171e2 l     F .text	000000ee dir_next
000172d0 l     F .text	00000128 dir_find.part.9
000173f8 l     F .text	0000026c follow_path
00017664 l     F .text	0000020c dir_register
00017870 l     F .text	0000005a dir_remove
000178cc l     F .text	000000e8 dir_read.constprop.11
000179b4 l     F .text	00000058 remove_chain
00026dec l     O .text	00000016 cst.6222
2007c928 l     O .bss	00000002 Fsid
00026e46 l     O .text	00000080 ExCvt
00026ec6 l     O .text	0000000d LfnOfs
00026ed4 l     O .text	00000016 vst.6221
2007c92c l     O .bss	00000008 FatFs
00000000 l    df *ABS*	00000000 c_list.c
00000000 l    df *ABS*	00000000 command_handler.cpp
00000000 l    df *ABS*	00000000 file_logger.c
00018d7c l     F .text	00000044 logger_get_buffer_ptr
00018dc0 l     F .text	000000b4 logger_write_to_file
00018e74 l     F .text	000000cc logger_task
00018f40 l     F .text	0000004c logger_write_log_message
2007c934 l     O .bss	00000004 g_write_buffer_queue
2007c938 l     O .bss	00000004 g_highest_file_write_time
2007c93c l     O .bss	00000002 g_blocked_calls
2007c940 l     O .bss	00000004 gp_file_buffer
2007c944 l     O .bss	00000004 g_empty_buffer_queue
2007c948 l     O .bss	00000002 g_buffer_watermark
00000000 l    df *ABS*	00000000 rtc_alarm.c
000191ec l     F .text	00000026 for_each_recur_alarm_callback
00019212 l     F .text	0000005e for_each_alarm_callback
2007c94c l     O .bss	00000010 g_list_recur_alarms
2007c95c l     O .bss	00000004 g_list_timed_alarms
00000000 l    df *ABS*	00000000 scheduler_task.cpp
00019314 l     F .text	000000b4 printline(char const*, char const*)
000193c8 l     F .text	00000078 dbg_print(char const*, char const*)
2007c960 l     O .bss	00000001 g_dbg_print
2007c964 l     O .bss	00000008 gEnumObjects
2007c96c l     O .bss	00000004 gRunTaskSemaphore
2007c970 l     O .bss	00000004 gTaskEntryTaskHandle
2007c974 l     O .bss	00000004 gpTaskList
00000000 l    df *ABS*	00000000 str.cpp
00000000 l    df *ABS*	00000000 utilities.c
00000000 l    df *ABS*	00000000 adc.c
00019c50 l     F .text	00000024 adc0_start_conversion
00000000 l    df *ABS*	00000000 can.c
00019d9c l     F .text	00000032 CAN_tx_now
00019dd0 l     F .text	0000008c CAN_handle_isr
00000000 l    df *ABS*	00000000 eint.c
0001a2c4 l     F .text	0000002c handle_eint_list
0001a2f0 l     F .text	00000038 eint3_enable.isra.0
2007c980 l     O .bss	00000004 gp_port2_rising_list
2007c984 l     O .bss	00000004 gp_port2_falling_list
2007c988 l     O .bss	00000004 gp_port0_rising_list
2007c98c l     O .bss	00000004 gp_port0_falling_list
00000000 l    df *ABS*	00000000 i2c2.cpp
00000000 l    df *ABS*	00000000 lpc_pwm.cpp
00000000 l    df *ABS*	00000000 lpc_rit.c
2007c994 l     O .bss	00000004 g_rit_callback
00000000 l    df *ABS*	00000000 lpc_timers.c
0001a628 l     F .text	00000020 lpc_timer_get_struct
00000000 l    df *ABS*	00000000 nrf_stream.cpp
00000000 l    df *ABS*	00000000 rtc.c
00000000 l    df *ABS*	00000000 spi_dma.c
00000000 l    df *ABS*	00000000 spi_sem.c
2007c998 l     O .bss	00000004 mSpi0Lock
00000000 l    df *ABS*	00000000 uart0.cpp
00000000 l    df *ABS*	00000000 uart3.cpp
00000000 l    df *ABS*	00000000 char_dev.cpp
00000000 l    df *ABS*	00000000 i2c_base.cpp
00000000 l    df *ABS*	00000000 uart_dev.cpp
00000000 l    df *ABS*	00000000 list.c
00000000 l    df *ABS*	00000000 queue.c
0001b3dc l     F .text	00000066 prvCopyDataToQueue
0001b442 l     F .text	00000034 prvNotifyQueueSetContainer
0001b476 l     F .text	00000026 prvCopyDataFromQueue
0001b49c l     F .text	00000078 prvUnlockQueue
00000000 l    df *ABS*	00000000 tasks.c
0001b8f2 l     F .text	0000002e prvResetRunTimeStatsInList
0001b920 l     F .text	00000018 prvIdleTask
0001b938 l     F .text	0000008e prvListTaskWithinSingleList
0001b9c8 l     F .text	00000024 prvResetNextTaskUnblockTime
0001b9ec l     F .text	00000050 prvAddCurrentTaskToDelayedList
2007c9a0 l     O .bss	00000004 ulTaskSwitchedInTime
2007c9a4 l     O .bss	00000004 xNumOfOverflows
2007c9a8 l     O .bss	00000004 pxDelayedTaskList
2007c9ac l     O .bss	00000004 xSchedulerRunning
2007c9b0 l     O .bss	00000014 xDelayedTaskList1
0002745c l     O .text	00000014 ucExpectedStackBytes.6438
2007c9c4 l     O .bss	00000014 xDelayedTaskList2
2007c9d8 l     O .bss	00000004 uxPendedTicks
2007c9dc l     O .bss	00000050 pxReadyTasksLists
2007ca2c l     O .bss	00000004 uxSchedulerSuspended
2007ca30 l     O .bss	00000004 ulTotalRunTime
2007ca38 l     O .bss	00000014 xPendingReadyList
2007ca4c l     O .bss	00000004 xTickCount
2007ca50 l     O .bss	00000004 pxOverflowDelayedTaskList
2007ca54 l     O .bss	00000004 uxTaskNumber
2007ca58 l     O .bss	00000004 uxCurrentNumberOfTasks
2007c070 l     O .data	00000004 xNextTaskUnblockTime
2007ca5c l     O .bss	00000004 xIdleTaskHandle
2007ca60 l     O .bss	00000014 xSuspendedTaskList
2007ca74 l     O .bss	00000004 uxTopReadyPriority
2007ca78 l     O .bss	00000004 xYieldPending
00000000 l    df *ABS*	00000000 port.c
0001c42c l     F .text	00000010 prvPortStartFirstTask
0001c474 l       .text	00000000 pxCurrentTCBConst2
0001c514 l       .text	00000000 pxCurrentTCBConst
2007ca7c l     O .bss	00000004 uxCriticalNesting
00000000 l    df *ABS*	00000000 run_time_stats.c
2007ca80 l     O .bss	00000008 g_freertos_runtime_timer_start
00000000 l    df *ABS*	00000000 hooks.c
00000000 l    df *ABS*	00000000 heap_3.c
00000000 l    df *ABS*	00000000 core_cm3.c
00000000 l    df *ABS*	00000000 low_level_init.cpp
2007ca88 l     O .bss	00000001 g_sys_boot_type
2007ca89 l     O .bss	0000000c g_rtc_boot_time
00000000 l    df *ABS*	00000000 lpc_peripherals.c
00000000 l    df *ABS*	00000000 lpc_sys.c
2007ca9c l     O .bss	00000002 g_timer_rollover_count
00000000 l    df *ABS*	00000000 sys_clock.cpp
0001cb24 l     F .text	00000014 sys_clock_pll0_feed()
0001cb38 l     F .text	00000078 sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]
00000000 l    df *ABS*	00000000 uart0_min.c
00000000 l    df *ABS*	00000000 vmi_class_type_info.cc
00000000 l    df *ABS*	00000000 pure.cc
00000000 l    df *ABS*	00000000 guard.cc
00000000 l    df *ABS*	00000000 tinfo.cc
00000000 l    df *ABS*	00000000 class_type_info.cc
00000000 l    df *ABS*	00000000 si_class_type_info.cc
00000000 l    df *ABS*	00000000 eh_terminate.cc
00000000 l    df *ABS*	00000000 _ashldi3.o
00000000 l    df *ABS*	00000000 _arm_addsubdf3.o
00000000 l    df *ABS*	00000000 _arm_muldivdf3.o
00000000 l    df *ABS*	00000000 _arm_fixunsdfsi.o
00000000 l    df *ABS*	00000000 _arm_truncdfsf2.o
00000000 l    df *ABS*	00000000 _arm_addsubsf3.o
00000000 l    df *ABS*	00000000 _arm_muldivsf3.o
00000000 l    df *ABS*	00000000 _arm_cmpsf2.o
00000000 l    df *ABS*	00000000 _arm_fixsfsi.o
00000000 l    df *ABS*	00000000 _arm_fixunssfsi.o
00000000 l    df *ABS*	00000000 _aeabi_uldivmod.o
00000000 l    df *ABS*	00000000 bpabi.c
00000000 l    df *ABS*	00000000 _dvmd_tls.o
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 abort.c
00000000 l    df *ABS*	00000000 atoi.c
00000000 l    df *ABS*	00000000 ctime.c
00000000 l    df *ABS*	00000000 findfp.c
0001e988 l     F .text	00000048 std.isra.0
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 init.c
00000000 l    df *ABS*	00000000 lcltime.c
00000000 l    df *ABS*	00000000 lcltime_r.c
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 memchr-stub.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 memcpy-stub.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mktime.c
0001ec70 l     F .text	000001a4 validate_structure
000279fc l     O .text	00000030 _DAYS_BEFORE_MONTH
00027a2c l     O .text	00000030 DAYS_IN_MONTH
00000000 l    df *ABS*	00000000 mktm_r.c
00027a5c l     O .text	00000060 mon_lengths
00027abc l     O .text	00000008 year_lengths
00000000 l    df *ABS*	00000000 mstats.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 rand.c
00000000 l    df *ABS*	00000000 realloc.c
00000000 l    df *ABS*	00000000 refill.c
0001f848 l     F .text	00000012 lflush
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 scanf.c
00000000 l    df *ABS*	00000000 setvbuf.c
00000000 l    df *ABS*	00000000 signal.c
00000000 l    df *ABS*	00000000 signalr.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcasecmp.c
00000000 l    df *ABS*	00000000 strcat.c
00000000 l    df *ABS*	00000000 strchr.c
00000000 l    df *ABS*	00000000 lib_a-strcmp.o
00000000 l    df *ABS*	00000000 strcpy.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 strncasecmp.c
00000000 l    df *ABS*	00000000 strncmp.c
00000000 l    df *ABS*	00000000 strncpy.c
00000000 l    df *ABS*	00000000 strrchr.c
00000000 l    df *ABS*	00000000 strstr.c
00000000 l    df *ABS*	00000000 strtod.c
0001fdb4 l     F .text	00000028 match
0001fddc l     F .text	0000003e sulp
00027ac8 l     O .text	00000028 tinytens
00027af0 l     O .text	00000014 fpi.5246
00027b04 l     O .text	00000014 fpinan.5282
00000000 l    df *ABS*	00000000 strtok_r.c
00000000 l    df *ABS*	00000000 strtol.c
00000000 l    df *ABS*	00000000 vfprintf.c
00000000 l    df *ABS*	00000000 vfscanf.c
00000000 l    df *ABS*	00000000 syswrite.c
00000000 l    df *ABS*	00000000 time.c
00000000 l    df *ABS*	00000000 tolower.c
00000000 l    df *ABS*	00000000 toupper.c
00000000 l    df *ABS*	00000000 tzlock.c
00000000 l    df *ABS*	00000000 ungetc.c
00000000 l    df *ABS*	00000000 vfprintf.c
00021384 l     F .text	0000002c __sfputc_r
00000000 l    df *ABS*	00000000 vfprintf_float.c
00000000 l    df *ABS*	00000000 vfprintf_i.c
00000000 l    df *ABS*	00000000 vfscanf.c
00000000 l    df *ABS*	00000000 vfscanf_float.c
00000000 l    df *ABS*	00000000 vfscanf_i.c
00000000 l    df *ABS*	00000000 vsnprintf.c
00000000 l    df *ABS*	00000000 vsscanf.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 asctime.c
00000000 l    df *ABS*	00000000 asctime_r.c
00027ba7 l     O .text	00000015 day_name.4594
00027bbc l     O .text	00000024 mon_name.4595
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 div.c
00000000 l    df *ABS*	00000000 dtoa.c
00022adc l     F .text	0000011e quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 gdtoa-gethex.c
00023900 l     F .text	0000006a rshift
00000000 l    df *ABS*	00000000 gdtoa-hexnan.c
00023df2 l     F .text	00000026 L_shift
00000000 l    df *ABS*	00000000 gettimeofdayr.c
00000000 l    df *ABS*	00000000 gettzinfo.c
2007c170 l     O .data	00000040 tzinfo
00000000 l    df *ABS*	00000000 locale.c
2007c1b0 l     O .data	00000038 lconv
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mprec.c
00027ce8 l     O .text	0000000c p05.5281
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sccl.c
00000000 l    df *ABS*	00000000 sf_nan.c
00000000 l    df *ABS*	00000000 strtoul.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 _arm_cmpdf2.o
00000000 l    df *ABS*	00000000 _arm_fixdfsi.o
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 impure.c
2007c10c l     O .data	00000060 impure_data
00000000 l    df *ABS*	00000000 eh_term_handler.cc
00000000 l    df *ABS*	00000000 reent.c
00000000 l    df *ABS*	00000000 
00027d04 l       .ARM.exidx	00000000 __exidx_end
00027d04 l       .ARM.exidx	00000000 _etext
20084000 l       *ABS*	00000000 __top_RamAHB32
00027cfc l       .text	00000000 __exidx_start
00000000 l       *UND*	00000000 ResetISR
0001ab84 g     F .text	0000001c Uart3::Uart3()
0001966c g     F .text	00000044 scheduler_start(bool, bool)
00024a94 g     F .text	00000012 _malloc_usable_size_r
00010e88 g     F .text	00000030 rebootHandler(str&, CharDev&, void*)
000215dc g     F .text	000000c0 __cvt
000198a0 g     F .text	00000030 str::beginsWith(char const*) const
0001c940 g     F .text	00000044 lpc_sys_setup_system_timer
000224f0 g     F .text	000000c0 _scanf_chars
00026650 g     O .text	00000020 vtable for canRxBufferTask
0001d26c g     F .text	00000004 std::type_info::__is_function_p() const
0001a874 g     F .text	000000d0 rtc_init
000247da g     F .text	00000048 __any_on
00024a74 g     F .text	00000020 _isatty_r
00024b7c g     F .text	00000012 .hidden __aeabi_dcmple
00019a92 g     F .text	00000006 str::operator int() const
00013848 g     F .text	0000003c car_con()
0001fca8 g     F .text	00000010 strcpy
00022a1c g     F .text	0000002c asctime
0001e3cc g     F .text	00000030 .hidden __gnu_uldivmod_helper
0001d4b0 g     F .text	00000018 .hidden __ashldi3
00013224  w    F .text	00000108 debugTask::run(void*)
00010368 g     F .text	00000004 _getpid
0001f69c g     F .text	000000c0 _puts_r
0001014c  w    F .text	00000010 TIMER2_IRQHandler
0001964c g     F .text	00000020 scheduler_add_task(scheduler_task*)
00024ab8 g     F .text	0000007a .hidden __cmpdf2
000157d4 g     F .text	00000012 Acceleration_Sensor::getY()
00023f6c g     F .text	00000024 _lseek_r
00016f4e g     F .text	000000a6 get_fat
0001a5b0 g     F .text	0000001c RIT_IRQHandler
000157c2 g     F .text	00000012 Acceleration_Sensor::getX()
000149b8 g     F .text	000000ec mesh_form_pkt
0001993c g     F .text	00000028 str::eraseFirst(int)
00013d84 g     F .text	0000000a LIGHT::run(void*)
00019a8a g     F .text	00000004 str::operator==(char const*) const
00024ab8 g     F .text	0000007a .hidden __eqdf2
0001e400 g     F .text	000002a0 .hidden __divdi3
000168d0 g     F .text	00000010 flash_supports_metadata
00027421 g     O .text	00000009 typeinfo name for UartDev
000100cc g       .text	00000000 __section_table_start
00023f38 g     F .text	00000024 _gettimeofday_r
0001c4c8 g     F .text	00000014 vPortExitCritical
00020aae g     F .text	00000006 strtok_r
0001d7dc g     F .text	0000005a .hidden __floatdidf
0001014c  w    F .text	00000010 I2C0_IRQHandler
0001a70c  w    F .text	00000012 NordicStream::~NordicStream()
2007c234  w    O .bss	00000004 SingletonTemplate<LED>::mpSingletonInstance
0001fb28 g     F .text	00000024 _kill_r
0001f66c g     F .text	00000030 printf
0001c984 g     F .text	0000002c sys_get_uptime_us
00026790 g     O .text	00000020 vtable for SWITCH
0001fbf6 g     F .text	00000024 __sseek
0001e9fc g     F .text	00000060 __sinit
0001ab5c  w    F .text	00000014 Uart3::~Uart3()
00022874 g     F .text	000000a8 __swbuf_r
0001ae4a g     F .text	00000016 I2C_Base::checkDeviceResponse(char)
2007cad0 g     O .bss	00000004 _daylight
0001c494 g     F .text	00000010 ulPortSetInterruptMask
0001064c g     F .text	00000022 memInfoHandler(str&, CharDev&, void*)
2007c204  w    O .bss	00000004 Storage::getFlashDrive()::pFlashDrive
0001d39c g     F .text	00000014 __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0002786c g     O .text	00000025 typeinfo name for __cxxabiv1::__si_class_type_info
000273d0  w    O .text	0000001c vtable for Uart3
0001e9d0 g     F .text	0000002c __sfmoreglue
00013b34 g     F .text	00000084 GLCD::touch_screen()
00022810 g     F .text	00000048 _vsiscanf_r
2007c782 g     O .bss	00000001 ctrl_changed
0001909c g     F .text	00000110 logger_log
00015988 g     F .text	00000032 I2C_Temp::getCelsius()
00013008  w    F .text	0000000c canRxBufferTask::~canRxBufferTask()
0001d0fc g     F .text	00000126 __cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
000115bc g     F .text	00000074 wsRteHandler(str&, CharDev&, void*)
0001fe20 g     F .text	00000c38 _strtod_r
0001e0c0 g     F .text	00000136 .hidden __divsf3
00013028  w    F .text	00000014 canRxProcessTask::~canRxProcessTask()
0001611c g     F .text	0000009c sd_read
00027388  w    O .text	0000001c typeinfo name for SingletonTemplate<Uart3>
0002396a g     F .text	0000002a __hexdig_fun
2007c7a4 g     O .bss	00000008 sen_can
00025dd8  w    O .text	00000020 vtable for scheduler_task
00012ffc  w    F .text	0000000c canRxProcessTask::~canRxProcessTask()
0001b116 g     F .text	00000078 UartDev::getChar(char*, unsigned int)
2007c763 g     O .bss	0000000b data_rcv
00027380  w    O .text	00000008 typeinfo for SingletonTemplate<Uart3>
0001a648 g     F .text	00000050 lpc_timer_enable
0001014c  w    F .text	00000010 PWM1_IRQHandler
0001ec28 g     F .text	00000036 memmove
00026860 g     O .text	00000020 vtable for LIGHT
2007c990 g     O .bss	00000004 PWM::msTcMax
0001519c g     F .text	00000008 nordic_clear_packet_sent_flag
2007c210  w    O .bss	00000004 SingletonTemplate<I2C2>::mpSingletonInstance
0001b6fe g     F .text	00000072 xQueueGenericSendFromISR
00024028 g     F .text	0000006a _Balloc
00019778 g     F .text	0000004c str::tokenize(char const*, int, ...)
00020a58 g     F .text	00000056 __strtok_r
0001a7b8 g     F .text	00000054 rtc_gettime
0001e2e4 g     F .text	0000004c .hidden __fixsfsi
000100d8 g       .text	00000000 __data_section_table_end
00012398 g     F .text	0000005c terminalTask::handleEchoAndBackspace(terminalTask::cmdChan_t*, char)
0001a3a8 g     F .text	00000030 eint3_enable_port0
0001014c  w    F .text	00000010 I2C1_IRQHandler
00012ffc  w    F .text	0000000c canRxProcessTask::~canRxProcessTask()
00026630  w    O .text	00000020 vtable for debugTask
0002729c  w    O .text	00000024 typeinfo name for SingletonTemplate<NordicStream>
00019c1e g     F .text	0000000e is_freertos_running
00013918 g     F .text	00000048 GLCD::GLCD(unsigned char)
0001014c  w    F .text	00000010 EINT2_IRQHandler
0001014c  w    F .text	00000010 UART1_IRQHandler
00024aa8 g     F .text	0000008a .hidden __gtdf2
000196b0 g     F .text	00000034 scheduler_task::scheduler_task(char const*, unsigned long, unsigned char, void*)
00027450 g     O .text	0000000c typeinfo for UartDev
0001cbb0 g     F .text	000000b0 sys_clock_configure()
000272f0 g     O .text	00000020 typeinfo for NordicStream
0001f568 g     F .text	0000005c _mallinfo_r
0001b8da g     F .text	00000018 xQueueSelectFromSet
0001c41c g     F .text	00000010 vRunTimeStatIsrExit
00011c7c  w    F .text	00000028 SingletonTemplate<TemperatureSensor>::getInstance()
2007ca34 g     O .bss	00000004 pxCurrentTCB
00015d9c g     F .text	00000034 wait_ready
00010eb8 g     F .text	00000034 learnIrHandler(str&, CharDev&, void*)
0001a328 g     F .text	00000080 EINT3_IRQHandler
0001514e g     F .text	00000018 nordic_standby1_to_tx_mode1
0001ae12 g     F .text	0000001a I2C_Base::readReg(char, char)
00019754 g     F .text	00000008 str::clear()
0001aad8 g     F .text	00000044 Uart0::init(unsigned int, int, int)
0001499c g     F .text	0000000c mesh_get_node_address
000157e8 g     F .text	00000030 IR_Sensor::init()
00024a50 g     F .text	00000024 _fstat_r
00019a0e g     F .text	00000040 str::trimStart(char const*)
00014c60 g     F .text	0000002c mesh_get_routing_entry
2007c7a2 g     O .bss	00000001 glcd_chg
2007cad4 g     O .bss	00000004 errno
000225b0 g     F .text	000001ec _scanf_i
0001fbba g     F .text	00000004 __seofread
00010560 g     F .text	000000ec taskListHandler(str&, CharDev&, void*)
0001523e g     F .text	00000040 nordic_set_intr_signals
00024b44 g     F .text	00000010 .hidden __aeabi_cdcmple
0001abe0 g     F .text	00000012 CharDev::~CharDev()
00015136 g     F .text	00000008 nordic_clear_all_intr_flags
000196e4 g     F .text	00000018 scheduler_task::getSharedObject(unsigned char)
0001dd48 g     F .text	00000160 .hidden __aeabi_fadd
00019726 g     F .text	00000024 str::~str()
0001dd44 g     F .text	00000164 .hidden __subsf3
00015bec g     F .text	00000024 ff_wtoupper
00025e00 g     O .text	00000020 vtable for terminalTask
000272d0 g     O .text	0000001c vtable for NordicStream
0001ae0a g     F .text	00000008 I2C_Base::readRegisters(char, char, char*, unsigned int)
00019b08 g     F .text	0000000c str::str(int)
00022858 g     F .text	0000001c vsscanf
000220c8 g     F .text	00000050 _vfiscanf_r
00012234  w    F .text	00000004 scheduler_task::taskEntry()
0001c8f8 g     F .text	00000048 lpc_pclk
0001014c  w    F .text	00000010 TIMER3_IRQHandler
0001a474 g     F .text	00000014 I2C2::I2C2()
000153cc g     F .text	0000000e nordic_set_rx_pipe0_addr
0001ab38 g     F .text	00000024 UART0_IRQHandler
00013df4 g     F .text	00000030 SWITCH::SWITCH(unsigned char)
0001c550 g     F .text	00000030 xPortStartScheduler
00010518  w    F .text	00000048 Storage::getSDDrive()
0001bc34 g     F .text	00000018 vTaskEndScheduler
0001ec16 g     F .text	00000012 memcpy
0001c10c g     F .text	0000005c vTaskPlaceOnEventList
00023e18 g     F .text	00000120 __hexnan
0001a974 g     F .text	000000c4 ssp1_dma_transfer_block
00024b34 g     F .text	00000020 .hidden __aeabi_cdrcmple
2007ca98 g     O .bss	00000004 gp_timer_ptr
0001ba3c g     F .text	000001a4 xTaskGenericCreate
00013400 g     F .text	00000088 canRxBufferTask::run(void*)
0001f9b8 g     F .text	00000110 setvbuf
000104d0  w    F .text	00000048 Storage::getFlashDrive()
00012908 g     F .text	00000198 can_controller::enum_to_string()
2007c780 g     O .bss	00000001 flick_cnt
0001e2d0 g     F .text	00000012 .hidden __aeabi_fcmpgt
0001e954 g     F .text	00000032 _cleanup_r
0001d2ee g     F .text	0000000c __cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
00020c8c g     F .text	000001d8 _svfprintf_r
0001d76c g     F .text	00000022 .hidden __floatsidf
0001c53c  w    F .text	00000014 vPortSetupTimerInterrupt
000272c0 g     O .text	0000000f typeinfo name for NordicStream
00015230 g     F .text	0000000e nordic_flush_rx_fifo
00024ab0 g     F .text	00000082 .hidden __ltdf2
000100fc  w    F .text	00000010 isr_nmi
0001c518 g     F .text	00000024 xPortSysTickHandler
00012b62 g     F .text	00000022 can_controller::can_controller(controller_id_t, can_msg_id_t*, unsigned int)
00015c6c g     F .text	00000026 disk_initialize
000149a8 g     F .text	00000010 mesh_set_retry_count
00014470 g     F .text	00000012 GLCD::run(void*)
00013128 g     F .text	0000002c canRxProcessTask::handle_geo_location_data(msg_t)
0001d2fc g     F .text	00000014 __cxxabiv1::__class_type_info::~__class_type_info()
0001e370 g     F .text	00000000 .hidden __aeabi_uldivmod
0001af48 g     F .text	00000122 I2C_Base::i2cStateMachine()
0001f75c g     F .text	00000010 puts
000276f4 g     O .text	0000000c typeinfo for __cxxabiv1::__vmi_class_type_info
00013008  w    F .text	0000000c canRxBufferTask::~canRxBufferTask()
0001c63a g     F .text	0000001a vPortFree
00011238 g     F .text	000000ac flashProgHandler(str&, CharDev&, void*)
00026774 g     O .text	0000000c typeinfo for SWITCH
2007c7cc g     O .bss	00000008 geo_can
000248b0 g     F .text	00000044 __fpclassifyd
000211f8 g     F .text	00000018 tolower
000220c8 g     F .text	00000050 _vfscanf_r
0001593a g     F .text	00000004 LED::getValues() const
0002475e g     F .text	0000004a __ratio
00013724 g     F .text	0000001c reset_all()
0001f988 g     F .text	00000030 iscanf
000184a4 g     F .text	00000120 f_rename
000158c0 g     F .text	00000004 LED::init()
00015c24 g     F .text	00000004 ff_del_syncobj
00012284  w    F .text	00000050 terminalTask::~terminalTask()
00027354  w    O .text	00000007 typeinfo name for Uart0
0001ebbc g     F .text	00000010 malloc
0001abc4  w    F .text	00000004 CharDev::flush()
0001a154 g     F .text	0000000c CAN_bypass_filter_accept_all_msgs
000100e0  w    F .text	0000001c isr_hard_fault
00015818 g     F .text	00000018 LED_Display::setLeftDigit(char)
0001fac8 g     F .text	00000050 _raise_r
000103c6 g     F .text	00000004 _fstat
0001aa38 g     F .text	00000030 spi1_lock
000136a4  w    F .text	0000000c LIGHT::~LIGHT()
0001deb0 g     F .text	0000001c .hidden __aeabi_i2f
00027bf8 g     O .text	000000c8 __mprec_tens
00012aa0 g     F .text	000000c2 can_controller::can_setup(can_msg_id_t*, unsigned int)
0001c244 g     F .text	00000020 uxTaskGetStackHighWaterMark
00010be8 g     F .text	000000b0 newFileHandler(str&, CharDev&, void*)
0001c4dc g     F .text	0000003c xPortPendSVHandler
00010c98 g     F .text	0000013c dcpHandler(str&, CharDev&, void*)
000227f0 g     F .text	00000020 vsnprintf
0001e200 g     F .text	00000066 .hidden __lesf2
0001dc5c g     F .text	00000040 .hidden __fixunsdfsi
0001b374 g     F .text	00000018 vListInsertEnd
00015f90 g     F .text	0000017c sd_initialize
000153a8 g     F .text	00000016 nordic_set_addr_width
00020ede g     F .text	0000003a __ssrefill_r
000153dc g     F .text	000000c8 nordic_init
0001fb4c g     F .text	00000004 _getpid_r
00015c92 g     F .text	0000000e disk_status
00015698 g     F .text	0000004c wireless_init
0001a0a0 g     F .text	0000009c CAN_tx
0001d74c g     F .text	0000001e .hidden __aeabi_ui2d
0001a408 g     F .text	0000006c I2C2::init(unsigned int)
00023f64 g     F .text	00000008 _localeconv_r
0001cdc4 g     F .text	00000014 __cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()
00013740 g     F .text	00000104 timer()
00024252 g     F .text	00000012 __i2b
0001d33c g     F .text	00000026 __cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const
00026768 g     O .text	0000000c typeinfo for GLCD
000152e8 g     F .text	00000024 nordic_set_channel
0001d4c8 g     F .text	00000000 .hidden __aeabi_drsub
0001f968 g     F .text	00000020 _sbrk_r
000136e4  w    F .text	00000014 GLCD::~GLCD()
000277b0 g     O .text	00000020 vtable for std::type_info
00014c04 g     F .text	00000042 mesh_send
00010734 g     F .text	00000084 logHandler(str&, CharDev&, void*)
2007c756 g     O .bss	00000008 mas_can
0002488c g     F .text	00000024 _read_r
0002636c g     O .text	0000000f typeinfo name for terminalTask
0001b36e g     F .text	00000006 vListInitialiseItem
00015d10 g     F .text	00000032 disk_ioctl
0001014c  w    F .text	00000010 PLL0_IRQHandler
00024b68 g     F .text	00000012 .hidden __aeabi_dcmplt
0001a740 g     F .text	00000038 NordicStream::getChar(char*, unsigned int)
00019e5c g     F .text	00000028 CAN_IRQHandler
000238dc g     F .text	00000024 fflush
0001c4c0 g     F .text	00000006 vPortClearInterruptMask
0001011c  w    F .text	00000010 isr_bus_fault
0001014c  w    F .text	00000010 PLL1_IRQHandler
00013698  w    F .text	0000000c SWITCH::~SWITCH()
00027418 g     O .text	00000009 typeinfo name for CharDev
00015848 g     F .text	0000003a LED_Display::init()
0001d790 g     F .text	0000003a .hidden __extendsfdf2
00020f18 g     F .text	0000029c __ssvfscanf_r
0001da8c g     F .text	000001d0 .hidden __aeabi_ddiv
0001014c  w    F .text	00000010 SSP0_IRQHandler
0001530c g     F .text	0000002e nordic_set_air_data_rate
0001d4d4 g     F .text	00000276 .hidden __adddf3
0001e208 g     F .text	0000005e .hidden __nesf2
00010b14 g     F .text	0000003c mkdirHandler(str&, CharDev&, void*)
0001014c  w    F .text	00000010 CANAct_IRQHandler
00027830 g     O .text	0000002c vtable for __cxxabiv1::__si_class_type_info
00014f8c g     F .text	00000024 mesh_get_max_timeout_before_packet_fails
000191ac g     F .text	00000040 logger_log_raw
00024614 g     F .text	000000a6 __b2d
00019ff8 g     F .text	0000008c CAN_rx
0001d838 g     F .text	00000254 .hidden __aeabi_dmul
0001c668 g     F .text	0000000c sys_get_boot_type
000103cc g     F .text	00000024 _isatty
0001d322 g     F .text	0000001a __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
000153be g     F .text	0000000e nordic_set_tx_address
00010274 g     F .text	00000004 operator delete(void*)
000279f8 g     O .text	00000004 _global_impure_ptr
0001319c g     F .text	00000088 canRxProcessTask::handle_heartbeat_ack(msg_t)
0001cdd8 g     F .text	00000012 __cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()
0002483e g     F .text	0000004c _realloc_r
0001eb44 g     F .text	0000004c __libc_init_array
0001fcc8 g     F .text	00000044 strncasecmp
00018c40 g     F .text	0000013c CommandProcessor::handleCommand(str&, CharDev&)
00015e82 g     F .text	00000052 xmit_datablock
0001b09c g     F .text	0000005a UartDev::putChar(char, unsigned int)
00012b94 g     F .text	00000020 can_controller::processReset()
0001e6a0 g     F .text	00000290 .hidden __udivdi3
0001521a g     F .text	00000016 nordic_read_rx_fifo
00010f0c g     F .text	00000188 i2cIoHandler(str&, CharDev&, void*)
00027cc0 g     O .text	00000028 __mprec_bigtens
00024134 g     F .text	00000084 __s2b
0001e930 g     F .text	0000000e abort
0001d74c g     F .text	0000001e .hidden __floatunsidf
000166cc g     F .text	0000009c flash_initialize
000101fc g     F .text	00000074 _sbrk
0001a6f8  w    F .text	00000014 NordicStream::~NordicStream()
000244d6 g     F .text	0000003a __mcmp
0001c61c g     F .text	0000001e pvPortMalloc
00012b88 g     F .text	00000004 can_controller::get_rx_bytes()
0001a4ac g     F .text	00000084 PWM::PWM(PWM::pwmType, unsigned int)
00026670 g     O .text	00000012 typeinfo name for canRxBufferTask
00018294 g     F .text	000000ba f_unlink
0001aac6  w    F .text	00000012 Uart0::~Uart0()
0001014c  w    F .text	00000010 I2S_IRQHandler
0001036c g     F .text	00000004 _init
0001c478 g     F .text	00000002 vPortEndScheduler
0001a488 g     F .text	00000024 I2C2_IRQHandler
0001b358 g     F .text	00000016 vListInitialise
000103c4 g     F .text	00000002 syscalls_init
0001ab5c  w    F .text	00000014 Uart3::~Uart3()
000100cc g       .text	00000000 __data_section_table
00020bb8 g     F .text	0000001c strtol
0001d4a0 g     F .text	00000010 std::terminate()
0001dc9c g     F .text	0000009e .hidden __aeabi_d2f
0001ac8a g     F .text	0000007a CharDev::printf(char const*, ...)
0001bc5c g     F .text	00000018 xTaskGetTickCount
0001b5d0 g     F .text	000000e2 xQueueGenericSend
0001dd44 g     F .text	00000164 .hidden __aeabi_fsub
00019270 g     F .text	000000a4 RTC_IRQHandler
2007c798 g     O .bss	00000006 stat_time
2007cad8 g       .bss	00000000 _ebss
00019440 g     F .text	0000011c scheduler_c_task_private(void*)
0001cdea g     F .text	0000007a __cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
0001014c  w    F .text	00000010 TIMER0_IRQHandler
0001c654 g     F .text	00000006 __set_PSP
2007c778 g     O .bss	00000002 total_can_old
00013678 g     F .text	00000004 SWITCH::run(void*)
000122e8 g     F .text	000000b0 terminalTask::terminalTask(unsigned char)
0001ac38 g     F .text	00000052 CharDev::gets(char*, int, unsigned int)
0001b0f6 g     F .text	00000020 UartDev::flush()
000227f0 g     F .text	00000020 vsniprintf
0002780c g     O .text	00000022 typeinfo name for __cxxabiv1::__class_type_info
0002122a g     F .text	00000002 __tz_unlock
0001014c  w    F .text	00000010 SPI_IRQHandler
0001fd5c g     F .text	00000026 strrchr
000241b8 g     F .text	00000040 __hi0bits
0001015c  w    F .text	00000012 isr_sys_tick
2007c074 g     O .data	00000004 g_periodic_isr_time_value_us
00015390 g     F .text	00000018 nordic_set_payload_for_pipe
00013bec g     F .text	00000030 LIGHT::LIGHT(unsigned char)
0001bf20 g     F .text	0000008c uxTaskGetSystemState
0001e2bc g     F .text	00000012 .hidden __aeabi_fcmpge
00024bb8 g     F .text	0000004e .hidden __fixdfsi
00010b50 g     F .text	0000003c rmHandler(str&, CharDev&, void*)
0001a778 g     F .text	00000040 NordicStream::NordicStream()
0001683c g     F .text	00000040 flash_write_permanent_id
2007c978 g     O .bss	00000004 g_adc_result_queue
2007c77b g     O .bss	00000001 touch_hl
0001dedc g     F .text	0000007c .hidden __floatdisf
00011cd4 g     F .text	0000054c high_level_init()
0001b280 g     F .text	00000028 UartDev::UartDev(unsigned int*)
0001c38c g     F .text	00000068 vTaskResetRunTimeStats
000196fc g     F .text	0000002a str::str(char*, int)
0001d25c g     F .text	0000000c std::type_info::~type_info()
00010838 g     F .text	00000130 catHandler(str&, CharDev&, void*)
0001cc60 g     F .text	000000b4 sys_get_cpu_clock
000211b4 g     F .text	0000001c write
00015770  w    F .text	00000030 i2c2_device::get16BitRegister(unsigned char)
0001c688 g     F .text	00000240 low_level_init()
2007c781 g     O .bss	00000001 tail
0001d274 g     F .text	00000014 std::type_info::~type_info()
0001e1f8 g     F .text	0000006e .hidden __gtsf2
00011c3c  w    F .text	00000024 SingletonTemplate<LED_Display>::getInstance()
0001c5f8 g     F .text	00000024 vApplicationMallocFailedHook
0001c168 g     F .text	0000006c xTaskRemoveFromEventList
0001cacc g     F .text	00000058 isr_hard_fault_handler
0001ab1c g     F .text	0000001c Uart0::Uart0()
00019a98 g     F .text	00000014 str::operator[](int)
0001d4d4 g     F .text	00000276 .hidden __aeabi_dadd
00024ab0 g     F .text	00000082 .hidden __ledf2
0001e946 g     F .text	0000000e ctime
2007c240  w    O .bss	00000004 SingletonTemplate<Acceleration_Sensor>::mpSingletonInstance
00013bb8 g     F .text	00000034 LIGHT::light_init()
00018a48 g     F .text	00000032 c_list_for_each_elm
0001fc60 g     F .text	0000001a strcat
0001e2a8 g     F .text	00000012 .hidden __aeabi_fcmple
00024394 g     F .text	0000009c __pow5mult
0001d7cc g     F .text	0000006a .hidden __aeabi_ul2d
00015178 g     F .text	00000024 nordic_standby1_to_rx
0001d270 g     F .text	00000004 std::type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
0001014c  w    F .text	00000010 EINT1_IRQHandler
0001c9b0 g     F .text	000000a8 TIMER1_IRQHandler
0001594c g     F .text	00000018 Switches::getSwitchValues()
000279d4 g     O .text	00000020 __sf_fake_stderr
0001a3d8 g     F .text	00000030 eint3_enable_port2
00018a7c g     F .text	00000078 CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)
00019ba8 g     F .text	0000001a str::operator+=(char)
2007c7b4 g     O .bss	0000000c io_checkpoint_data
00012644  w    F .text	00000022 Uart0::getcharIntrDriven(char)
000198d0 g     F .text	00000030 str::beginsWithIgnoreCase(char const*) const
000151b4 g     F .text	0000004c nordic_mode1_send_single_packet
00010dd4 g     F .text	000000b4 storageHandler(str&, CharDev&, void*)
00015df4 g     F .text	0000008e rcvr_datablock
00014484 g     F .text	00000078 UART2_IRQHandler
0001aa8c  w    F .text	00000014 UartDev::~UartDev()
0001c594 g     F .text	00000014 uxGetTimerForRunTimeStats
0001367c g     F .text	0000001c glcd_con()
00014c8c g     F .text	0000001c mesh_get_num_routing_entries
00020bd4 g     F .text	000000b8 __ssputs_r
2007c7da g     O .bss	00000001 head
00014984 g     F .text	00000018 mesh_set_node_address
0001aaa0  w    F .text	00000014 Uart0::~Uart0()
2007c77c g     O .bss	00000004 io_snr_data
0001d362 g     F .text	00000038 __cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
0001cdc4 g     F .text	00000014 __cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()
0001222c  w    F .text	00000004 scheduler_task::init()
000136b0  w    F .text	0000000c GLCD::~GLCD()
00019964 g     F .text	00000020 str::eraseLast(int)
00024ba4 g     F .text	00000012 .hidden __aeabi_dcmpgt
2007c797 g     O .bss	00000001 time_cnt
0001d2ba g     F .text	00000034 __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
2007c208  w    O .bss	00000004 SingletonTemplate<TemperatureSensor>::mpSingletonInstance
000213b0 g     F .text	00000024 __sfputs_r
00015942 g     F .text	00000006 Light_Sensor::getRawValue()
0001ebdc g     F .text	0000001c memchr
00021704  w    F .text	0000041a _printf_float
0001aa68 g     F .text	00000024 spi1_unlock
0001c1ec g     F .text	0000004c xTaskCheckForTimeOut
0001f4e0 g     F .text	00000088 _free_r
00018af4 g     F .text	0000009c CommandProcessor::getRegisteredCommandList(CharDev&)
00026614  w    O .text	0000000c typeinfo for debugTask
00024b90 g     F .text	00000012 .hidden __aeabi_dcmpge
0001988a g     F .text	00000016 str::firstIndexOf(char const*) const
00010eec  w    F .text	00000020 SingletonTemplate<I2C2>::getInstance()
0001cd14 g     F .text	00000060 uart0_init
2007c1e8 g       .bss	00000000 _bss
00019b64 g     F .text	00000022 str::ensureMemoryToInsertNChars(int)
00020e64 g     F .text	0000007a _sungetc_r
00011cbc  w    F .text	00000018 SingletonTemplate<Switches>::getInstance()
00017f70 g     F .text	00000024 f_close
0001610c g     F .text	00000010 sd_status
0001d4d0 g     F .text	0000027a .hidden __aeabi_dsub
0001ee14 g     F .text	000002cc mktime
0001014c g     F .text	00000010 isr_default_handler
00015212 g     F .text	00000008 nordic_clear_packet_available_flag
00027310  w    O .text	00000008 typeinfo for SingletonTemplate<Uart0>
0001bc4c g     F .text	00000010 vTaskSuspendAll
0001fd82 g     F .text	00000032 strstr
2007c99c  w    O .bss	00000004 SingletonTemplate<Uart3>::mpSingletonInstance
0002779c g     O .text	0000000d typeinfo name for std::type_info
0001bc74 g     F .text	00000018 xTaskGetTickCountFromISR
00013050 g     F .text	00000028 canRxBufferTask::canRxBufferTask(unsigned char)
0001d7cc g     F .text	0000006a .hidden __floatundidf
000168c4 g     F .text	0000000c flash_get_page_size
0001f7c0 g     F .text	00000074 rand
000103f0 g     F .text	00000004 _lseek
0001d224 g     F .text	00000014 __cxa_pure_virtual
00024430 g     F .text	000000a6 __lshift
00013c1c g     F .text	00000168 LIGHT::chk_light()
000123f4 g     F .text	00000040 terminalTask::addCommandChannel(CharDev*, bool)
2007c776 g     O .bss	00000001 io_drive_mode
0001deb0 g     F .text	0000001c .hidden __floatsisf
0001b3bc g     F .text	00000020 uxListRemove
2007c7ad g     O .bss	00000001 can_per_sec
2007c244 g     O .bss	00000400 message_id_str
00015758  w    F .text	00000018 i2c2_device::writeReg(unsigned char, unsigned char)
00013b04 g     F .text	00000030 GLCD::GLCD_contrast(char)
00015adc g     F .text	00000046 Storage::read(char const*, void*, unsigned int, unsigned int)
00017bac g     F .text	0000017c f_read
0001c324 g     F .text	00000068 vTaskPriorityDisinherit
00026684 g     O .text	0000000c typeinfo for canRxBufferTask
0001a778 g     F .text	00000040 NordicStream::NordicStream()
00013960 g     F .text	00000058 GLCD::GLCD_write(char, char, char, char, char)
0001fd0c g     F .text	0000002c strncmp
00019c74 g     F .text	0000003c ADC_IRQHandler
0001d3f6 g     F .text	0000007c __cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
0001cd74 g     F .text	00000018 uart0_getchar
00015930 g     F .text	0000000a LED::set(int, bool)
00013d90 g     F .text	00000064 SWITCH::sw_init()
2007c79e g     O .bss	00000002 io_other_snr_data
00019b22 g     F .text	00000042 str::printf(char const*, ...)
000197c4 g     F .text	00000016 str::compareTo(char const*) const
00010968 g     F .text	000001ac lsHandler(str&, CharDev&, void*)
00024264 g     F .text	00000130 __multiply
0001816c g     F .text	0000005e f_readdir
00011810  w    F .text	00000020 SingletonTemplate<NordicStream>::getInstance()
00026780 g     O .text	00000008 typeinfo name for SWITCH
00013488 g     F .text	000001c4 canRxProcessTask::run(void*)
0001c290 g     F .text	00000094 vTaskPriorityInherit
20084000 g       *ABS*	00000000 _vStackTop
00015c10 g     F .text	00000014 ff_cre_syncobj
0001e2e4 g     F .text	0000004c .hidden __aeabi_f2iz
00019726 g     F .text	00000024 str::~str()
0001fd38 g     F .text	00000024 strncpy
0001974a g     F .text	00000006 str::getLen() const
2007caa0 g     O .bss	00000028 __malloc_current_mallinfo
00019a4e g     F .text	0000003c str::trimEnd(char const*)
0001e208 g     F .text	0000005e .hidden __eqsf2
000246ba g     F .text	000000a4 __d2b
0001fc24 g     F .text	0000003c strcasecmp
2007c200  w    O .bss	00000004 Storage::getSDDrive()::pSDCardDrive
0001bfac g     F .text	000000c0 vTaskSwitchContext
0001d25c g     F .text	0000000c std::type_info::~type_info()
0001014c  w    F .text	00000010 SSP1_IRQHandler
0001ab1c g     F .text	0000001c Uart0::Uart0()
000273f0 g     O .text	0000001c vtable for CharDev
0001d472 g     F .text	00000024 __cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
000136f8 g     F .text	0000002c home_dst()
000122d4  w    F .text	00000012 terminalTask::~terminalTask()
00013078 g     F .text	00000028 canRxProcessTask::canRxProcessTask(unsigned char)
0001f834 g     F .text	00000014 realloc
0001abf2 g     F .text	00000028 CharDev::put(char const*, unsigned int)
00027700 g     O .text	00000026 typeinfo name for __cxxabiv1::__vmi_class_type_info
0001570c g     F .text	0000004c wireless_service
000158c4 g     F .text	00000040 LED::setAll(char)
00024960 g     F .text	000000f0 _strtoul_r
00016768 g     F .text	00000050 flash_read_sectors
00015200 g     F .text	00000012 nordic_is_packet_available
000100e0 g       .text	00000000 __bss_section_table_end
2007c644 g     O .bss	00000001 error_flag
00013154 g     F .text	00000048 canRxProcessTask::handle_checkpoint_data(msg_t)
00013698  w    F .text	0000000c SWITCH::~SWITCH()
00026746 g     O .text	00000013 typeinfo name for canRxProcessTask
0001e0c0 g     F .text	00000136 .hidden __aeabi_fdiv
00019750 g     F .text	00000004 str::getCapacity() const
00022a94 g     F .text	00000020 _close_r
2007c214  w    O .bss	00000004 SingletonTemplate<Uart0>::mpSingletonInstance
0001d76c g     F .text	00000022 .hidden __aeabi_i2d
000107b8 g     F .text	00000080 cpHandler(str&, CharDev&, void*)
2007c7d7 g     O .bss	00000001 hl_mode
00010180 g     F .text	00000010 bss_init(unsigned int, unsigned int)
00014b00 g     F .text	00000104 mesh_init
0001b06c g     F .text	00000030 I2C_Base::handleInterrupt()
0001303c  w    F .text	00000014 canRxBufferTask::~canRxBufferTask()
00012238  w    F .text	00000014 scheduler_task::~scheduler_task()
0001ebf8 g     F .text	0000001e memcmp
2007c228  w    O .bss	00000004 SingletonTemplate<NordicStream>::mpSingletonInstance
00019bfe g     F .text	00000004 str::operator=(char const*)
00013884 g     F .text	00000014 GLCD::tx_data(char)
0001014c  w    F .text	00000010 USB_IRQHandler
0001decc g     F .text	0000008c .hidden __floatundisf
0001d39c g     F .text	00000014 __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0001aebc g     F .text	0000008c I2C_Base::init(unsigned int, unsigned int)
00022940 g     F .text	000000dc __swsetup_r
00012434 g     F .text	0000013a terminalTask::getCommand()
2007c97c g     O .bss	00000004 g_adc_mutex
0001c5c0 g     F .text	00000038 vApplicationStackOverflowHook
0001e3fc  w    F .text	00000002 .hidden __aeabi_ldiv0
0001c06c g     F .text	000000a0 vTaskSuspend
2007c746 g     O .bss	0000000a controller
0001da8c g     F .text	000001d0 .hidden __divdf3
0001ea5c g     F .text	00000074 __sfp
000247a8 g     F .text	00000032 __copybits
0001d268 g     F .text	00000004 std::type_info::__is_pointer_p() const
0001bc8c g     F .text	0000000c uxTaskGetNumberOfTasks
000112e4 g     F .text	00000130 getFileHandler(str&, CharDev&, void*)
00026788 g     O .text	00000006 typeinfo name for GLCD
00011c60  w    F .text	0000001c SingletonTemplate<LED>::getInstance()
0001014c  w    F .text	00000010 BOD_IRQHandler
0001dea8 g     F .text	00000024 .hidden __aeabi_ui2f
2007c030 g     O .data	00000040 g_can_structs
0002279c g     F .text	00000052 _vsnprintf_r
0001d838 g     F .text	00000254 .hidden __muldf3
0001fb98 g     F .text	00000022 __sread
00018c04 g     F .text	0000003c CommandProcessor::prepareCmdParam(str&, char const*)
000169e8 g     F .text	00000052 get_fattime
00019c02 g     F .text	0000001c delay_us
0001aab4  w    F .text	00000012 UartDev::~UartDev()
0001527e g     F .text	0000003a nordic_set_crc
0001cda8 g     F .text	0000001c uart0_puts
0001c47c g     F .text	00000018 vPortYield
2007c7c0 g     O .bss	00000001 touch_mode
0001ad04 g     F .text	00000020 CharDev::CharDev()
000130a0 g     F .text	00000088 canRxProcessTask::handle_heartbeat(msg_t)
2007c7c2 g     O .bss	00000008 mot_can
000277d0 g     O .text	0000002c vtable for __cxxabiv1::__class_type_info
00023888 g     F .text	00000054 _fflush_r
000156f8 g     F .text	00000014 wireless_get_ack_pkt
00019b86 g     F .text	00000022 str::insertAtEnd(char const*)
2007c7ca g     O .bss	00000002 total_can
00024822 g     F .text	0000001c _calloc_r
0001a530 g     F .text	00000080 PWM::set(float)
0001c674 g     F .text	00000014 sys_get_boot_time
00027994 g     O .text	00000020 __sf_fake_stdin
00021228 g     F .text	00000002 __tz_lock
0001e208 g     F .text	0000005e .hidden __cmpsf2
00014fb0 g     F .text	00000014 mesh_get_stats
00022a48 g     F .text	0000004c asctime_r
000156e4 g     F .text	00000014 wireless_get_rx_pkt
0001eb90 g     F .text	00000024 localtime
0001ec5e g     F .text	00000010 memset
0001016e g     F .text	00000012 data_init(unsigned int, unsigned int, unsigned int)
0001454c g     F .text	00000050 main
00027318  w    O .text	0000001c typeinfo name for SingletonTemplate<Uart0>
00019c2c g     F .text	00000022 delay_ms
00019b14 g     F .text	0000000e str::reserve(int)
00015128 g     F .text	0000000e nordic_is_tx_fifo_empty
00015948 g     F .text	00000004 Switches::init()
000159e0 g     F .text	000000fc Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)
0001027c g     F .text	000000b0 sys_get_mem_info
2007c23c  w    O .bss	00000004 SingletonTemplate<IR_Sensor>::mpSingletonInstance
00012ff0  w    F .text	0000000c debugTask::~debugTask()
000151a4 g     F .text	0000000e nordic_flush_tx_fifo
0001dedc g     F .text	0000007c .hidden __aeabi_l2f
0001f76c g     F .text	00000054 srand
000196b0 g     F .text	00000034 scheduler_task::scheduler_task(char const*, unsigned long, unsigned char, void*)
0001b280 g     F .text	00000028 UartDev::UartDev(unsigned int*)
0001ae60 g     F .text	0000005c I2C_Base::I2C_Base(LPC_I2C_TypeDef*)
00017ee4 g     F .text	0000008c f_sync
00013050 g     F .text	00000028 canRxBufferTask::canRxBufferTask(unsigned char)
0001014c  w    F .text	00000010 WDT_IRQHandler
00015830 g     F .text	00000018 LED_Display::setRightDigit(char)
0001e200 g     F .text	00000066 .hidden __ltsf2
00014ca8 g     F .text	000002b0 mesh_service
0001b38c g     F .text	00000030 vListInsert
00012db4 g     F .text	000001c8 can_controller::can_recv(controller_id_t*, msg_id_t*, unsigned char*, unsigned short*)
0001260c  w    F .text	00000020 SingletonTemplate<Uart0>::getInstance()
00013e24 g     F .text	0000064c GLCD::display()
0001fc1a g     F .text	00000008 __sclose
00010278 g     F .text	00000004 operator delete[](void*)
0001987c g     F .text	0000000e str::containsIgnoreCase(char const*) const
00013918 g     F .text	00000048 GLCD::GLCD(unsigned char)
2007c218  w    O .bss	00000004 guard variable for Storage::getSDDrive()::pSDCardDrive
00020ab4 g     F .text	00000104 _strtol_r
0001dc9c g     F .text	0000009e .hidden __truncdfsf2
00019cb0 g     F .text	00000074 adc0_init
00027cfc g       .text	00000000 __init_array_end
0001c458 g     F .text	00000020 vPortSVCHandler
00022c00 g     F .text	00000b80 _dtoa_r
0001f5c4 g     F .text	000000a8 _malloc_r
000211d0 g     F .text	00000028 time
00014aa4 g     F .text	0000005c mesh_send_formed_pkt
000185c4 g     F .text	00000484 f_mkfs
0001d7dc g     F .text	0000005a .hidden __aeabi_l2d
00019900 g     F .text	0000003c str::beginsWithWholeWordIgnoreCase(char const*, char) const
00017a0c g     F .text	0000007c f_mount
0001be54 g     F .text	00000078 vTaskDelayUntil
0002122c g     F .text	00000072 __submore
00027800 g     O .text	0000000c typeinfo for __cxxabiv1::__class_type_info
0001ead0 g     F .text	00000038 _fwalk
00012570 g     F .text	0000009c terminalTask::run(void*)
0002675c g     O .text	0000000c typeinfo for canRxProcessTask
000180ee g     F .text	0000007e f_opendir
0001b872 g     F .text	00000052 xQueueReceiveFromISR
0001decc g     F .text	0000008c .hidden __aeabi_ul2f
0001c264 g     F .text	0000000c xTaskGetCurrentTaskHandle
000161b8 g     F .text	000000b8 sd_write
00013014  w    F .text	00000014 debugTask::~debugTask()
0001e270 g     F .text	00000010 .hidden __aeabi_cfcmple
0001b56e g     F .text	00000050 xQueueGenericCreate
000273a4  w    O .text	00000020 typeinfo for Uart3
0001df58 g     F .text	00000168 .hidden __mulsf3
00018f8c g     F .text	00000034 logger_send_flush_request
0001010c  w    F .text	00000010 isr_mem_fault
000128e4  w    F .text	00000024 SingletonTemplate<Acceleration_Sensor>::getInstance()
0001fc94 g     F .text	00000000 strcmp
0001a4ac g     F .text	00000084 PWM::PWM(PWM::pwmType, unsigned int)
0001b5be g     F .text	00000012 xQueueCreateCountingSemaphore
00011094 g     F .text	000001a4 healthHandler(str&, CharDev&, void*)
000122e8 g     F .text	000000b0 terminalTask::terminalTask(unsigned char)
00018b90 g     F .text	00000074 CommandProcessor::getHelpText(str&, CharDev&)
000152b8 g     F .text	00000018 nordic_power_up
0001033c g     F .text	0000000c sys_set_inchar_func
00017072 g     F .text	000000ce put_fat
0001014c  w    F .text	00000010 QEI_IRQHandler
000100d8 g       .text	00000000 __bss_section_table
00024ab8 g     F .text	0000007a .hidden __nedf2
00027410 g     O .text	00000008 typeinfo for CharDev
00012284  w    F .text	00000050 terminalTask::~terminalTask()
00011ca4  w    F .text	00000018 SingletonTemplate<Light_Sensor>::getInstance()
0001f66c g     F .text	00000030 iprintf
00015c4e g     F .text	0000001e ff_rel_grant
000267d8 g     O .text	0000000c typeinfo for LIGHT
0001ab84 g     F .text	0000001c Uart3::Uart3()
0001d3b0 g     F .text	00000012 __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0001bd94 g     F .text	000000c0 xTaskResumeAll
0001a13c g     F .text	00000018 CAN_reset_bus
00021e2c g     F .text	0000029c __svfiscanf_r
00017f94 g     F .text	0000015a f_lseek
0001fb50 g     F .text	00000048 sprintf
0001aa8c  w    F .text	00000014 UartDev::~UartDev()
0001bbe0 g     F .text	00000054 vTaskStartScheduler
0002169c g     F .text	00000068 __exponent
000273c4  w    O .text	00000007 typeinfo name for Uart3
000157a0 g     F .text	00000022 Acceleration_Sensor::init()
0001ad04 g     F .text	00000020 CharDev::CharDev()
0001d254 g     F .text	00000006 __cxa_guard_release
2007c7a1 g     O .bss	00000001 sec
0001e1f8 g     F .text	0000006e .hidden __gesf2
2007c7b0 g     O .bss	00000004 can_util
2007c75e g     O .bss	00000004 io_geo_head
0002291c g     F .text	00000024 _write_r
00027430 g     O .text	0000001c vtable for UartDev
0001b190 g     F .text	0000003c UartDev::setBaudRate(unsigned int)
0001c580 g     F .text	00000014 vConfigureTimerForRunTimeStats
00026690 g     O .text	00000020 vtable for canRxProcessTask
2007c794 g     O .bss	00000003 io_speed
0001f988 g     F .text	00000030 scanf
2007c20c  w    O .bss	00000004 SingletonTemplate<Light_Sensor>::mpSingletonInstance
0001dd3c g     F .text	0000016c .hidden __aeabi_frsub
000139b8 g     F .text	00000064 GLCD::GLCD_write_str(char, char, char*)
00027728 g     O .text	0000002c vtable for __cxxabiv1::__vmi_class_type_info
0001014c  w    F .text	00000010 EINT0_IRQHandler
00010330 g     F .text	0000000c sys_set_outchar_func
000169c0 g     F .text	00000028 flash_chip_erase
00024958 g     F .text	00000008 nanf
00021b20 g     F .text	000000e4 _printf_common
00019d24 g     F .text	00000078 adc0_get_reading
2007c16c g     O .data	00000004 _impure_ptr
0001e280 g     F .text	00000012 .hidden __aeabi_fcmpeq
00010494 g     F .text	0000003c u0_dbg_printf
00023780 g     F .text	00000106 __sflush_r
0001a160 g     F .text	00000034 CAN_gen_sid
0001df58 g     F .text	00000168 .hidden __aeabi_fmul
00027360  w    O .text	0000001c vtable for Uart0
00027cf4 g       .text	00000000 __preinit_array_end
00012b8c g     F .text	00000004 can_controller::get_tx_count()
00020c8c g     F .text	000001d8 _svfiprintf_r
0001f85c g     F .text	0000010c __srefill_r
0001e268 g     F .text	00000018 .hidden __aeabi_cfrcmple
00015dd0 g     F .text	00000024 power_off
000159bc g     F .text	00000024 I2C_Temp::getFarenheit()
2007c000 g       .data	00000000 _data
0001c65a g     F .text	00000006 __set_MSP
0001a474 g     F .text	00000014 I2C2::I2C2()
000245d0 g     F .text	00000044 __ulp
2007c7d5 g     O .bss	00000001 resume_pause
00012668 g     F .text	0000027c terminalTask::taskEntry()
000196fc g     F .text	0000002a str::str(char*, int)
0001ab70  w    F .text	00000012 Uart3::~Uart3()
2007c645 g     O .bss	00000100 controller_id_str
0001c238 g     F .text	0000000c vTaskMissedYield
0001513e g     F .text	00000010 nordic_queue_tx_fifo
0001a6f8  w    F .text	00000014 NordicStream::~NordicStream()
00026360 g     O .text	0000000c typeinfo for terminalTask
2007cad8 g       .bss	00000000 _pvHeapStart
0001cd8c g     F .text	0000001c uart0_putchar
00013a88 g     F .text	0000007c GLCD::GLCD_write_float(char, char, float, unsigned char)
000100e0 g       .text	00000000 __section_table_end
00012f7c g     F .text	00000074 can_controller::processBootSequence(unsigned char)
0001f4cc g     F .text	00000014 mallinfo
00010474 g     F .text	00000020 u0_dbg_put
000197da g     F .text	00000012 str::compareToIgnoreCase(char const*) const
0001b1cc g     F .text	000000b4 UartDev::handleInterrupt()
0002279c g     F .text	00000052 _vsniprintf_r
2007c7a3 g     O .bss	00000001 dest_reached
0001b8c4 g     F .text	00000012 uxQueueMessagesWaiting
0001b770 g     F .text	00000102 xQueueGenericReceive
0001dc5c g     F .text	00000040 .hidden __aeabi_d2uiz
00019e84 g     F .text	00000174 CAN_init
0001ae60 g     F .text	0000005c I2C_Base::I2C_Base(LPC_I2C_TypeDef*)
0001ebb4 g     F .text	00000006 localtime_r
00015ed4 g     F .text	00000098 send_cmd
0001d2fc g     F .text	00000014 __cxxabiv1::__class_type_info::~__class_type_info()
0001aaa0  w    F .text	00000014 Uart0::~Uart0()
0001bc98 g     F .text	000000fc xTaskIncrementTick
00020f18 g     F .text	0000029c __ssvfiscanf_r
000152d0 g     F .text	00000018 nordic_power_down
0001a80c g     F .text	00000068 rtc_settime
00019984 g     F .text	00000038 str::eraseAfter(int, int)
2007c21c  w    O .bss	00000004 guard variable for Storage::getFlashDrive()::pFlashDrive
0001e294 g     F .text	00000012 .hidden __aeabi_fcmplt
00016f38 g     F .text	00000016 clust2sect
0001d4b0 g     F .text	00000018 .hidden __aeabi_llsl
0001ca58 g     F .text	00000038 sys_get_mem_info_str
00027294  w    O .text	00000008 typeinfo for SingletonTemplate<NordicStream>
00013078 g     F .text	00000028 canRxProcessTask::canRxProcessTask(unsigned char)
0001a084 g     F .text	0000001c CAN_is_bus_off
00015904 g     F .text	00000016 LED::on(int)
2007c104 g     O .data	00000004 __cxxabiv1::__terminate_handler
0001c660 g     F .text	00000006 __set_BASEPRI
00024b54 g     F .text	00000012 .hidden __aeabi_dcmpeq
00012220  w    F .text	0000000c scheduler_task::~scheduler_task()
0001a958 g     F .text	0000001c ssp1_dma_init
00012ff0  w    F .text	0000000c debugTask::~debugTask()
00027860 g     O .text	0000000c typeinfo for __cxxabiv1::__si_class_type_info
0001b514 g     F .text	0000005a xQueueGenericReset
2007c7d9 g     O .bss	00000001 hl_mode_change
2007c76e g     O .bss	00000008 bt_can
00010370 g     F .text	00000028 _write
00013df4 g     F .text	00000030 SWITCH::SWITCH(unsigned char)
00012b62 g     F .text	00000022 can_controller::can_controller(controller_id_t, can_msg_id_t*, unsigned int)
2007c1e8 g       .data	00000000 _edata
0001ce8c g     F .text	00000270 __cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
00014f58 g     F .text	00000034 mesh_get_pnd_pkt_count
00015882 g     F .text	0000003e LED_Display::setNumber(char)
00015b22 g     F .text	00000046 Storage::write(char const*, void*, unsigned int, unsigned int)
000168a4 g     F .text	00000020 flash_get_page_count
00015b68 g     F .text	0000004a Storage::append(char const*, void*, unsigned int, unsigned int)
00017d28 g     F .text	000001bc f_write
00019a8e g     F .text	00000004 str::operator()() const
000167b8 g     F .text	0000004c flash_write_sectors
00015964 g     F .text	00000024 I2C_Temp::init()
2007c024 g     O .data	00000001 glcd_on
00022810 g     F .text	00000048 _vsscanf_r
0001e330 g     F .text	0000003e .hidden __aeabi_f2uiz
000136b0  w    F .text	0000000c GLCD::~GLCD()
0001a194 g     F .text	00000130 CAN_setup_filter
0001abc8 g     F .text	00000018 CharDev::~CharDev()
000197ec g     F .text	00000090 str::firstIndexOfIgnoreCase(char const*) const
0001a71e g     F .text	00000022 NordicStream::putChar(char, unsigned int)
0001a698 g     F .text	00000060 NordicStream::flush()
0001fbbe g     F .text	00000038 __swrite
00010270 g     F .text	00000004 operator new(unsigned int)
00012b84 g     F .text	00000004 can_controller::get_rx_count()
00017a88 g     F .text	00000124 f_open
000199bc g     F .text	00000028 str::erase(char const*)
0001ce64  w    F .text	00000028 __cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
00015cd8 g     F .text	00000038 disk_write
00016804 g     F .text	00000038 flash_ioctl
00015360 g     F .text	00000030 nordic_set_auto_transmit_options
000213d4 g     F .text	00000208 _vfiprintf_r
00010000 g     O .text	000000cc g_pfnVectors
00012230  w    F .text	00000004 scheduler_task::regTlm()
00010b8c g     F .text	0000005c mvHandler(str&, CharDev&, void*)
0001eb08 g     F .text	0000003c _fwalk_reent
0001d3c2 g     F .text	00000034 __cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
0001dea8 g     F .text	00000024 .hidden __floatunsisf
00024510 g     F .text	000000be __mdiff
0001abc8 g     F .text	00000018 CharDev::~CharDev()
00024bb8 g     F .text	0000004e .hidden __aeabi_d2iz
0001d496 g     F .text	00000008 __cxxabiv1::__terminate(void (*)())
00015c28 g     F .text	00000026 ff_req_grant
00022858 g     F .text	0000001c vsiscanf
2007c230  w    O .bss	00000004 SingletonTemplate<Switches>::mpSingletonInstance
00010348 g     F .text	00000010 _kill
000136d0  w    F .text	00000014 LIGHT::~LIGHT()
0001ae2c g     F .text	00000008 I2C_Base::writeRegisters(char, char, char*, unsigned int)
2007c108 g     O .data	00000004 __ctype_ptr__
00019aac g     F .text	0000004c str::reAllocateMem(int)
0001e270 g     F .text	00000010 .hidden __aeabi_cfcmpeq
0001014c  w    F .text	00000010 DMA_IRQHandler
0001224c g     F .text	00000004 terminalTask::regTlm()
0001becc g     F .text	00000054 vTaskDelay
0001262c  w    F .text	00000018 Uart0::putcharIntrDriven(char)
00012bb4 g     F .text	00000200 can_controller::can_send(controller_id_t, msg_id_t, unsigned char*, unsigned short)
0001955c g     F .text	000000f0 scheduler_init_all(bool)
000279b4 g     O .text	00000020 __sf_fake_stdout
0001591a g     F .text	00000016 LED::off(int)
0001fb50 g     F .text	00000048 siprintf
000248f4 g     F .text	00000062 __sccl
0001e93e g     F .text	00000008 atoi
000103f8 g     F .text	0000007c _gettimeofday
0001c270 g     F .text	00000020 xTaskGetSchedulerState
00027891 g     O .text	00000101 _ctype_
00026620  w    O .text	0000000b typeinfo name for debugTask
00010398 g     F .text	0000002c _read
00027cf4 g       .text	00000000 __init_array_start
0001e3fc  w    F .text	00000002 .hidden __aeabi_idiv0
00013a1c g     F .text	0000006c GLCD::GLCD_write_int(char, char, int)
00010670 g     F .text	000000c4 timeHandler(str&, CharDev&, void*)
00025db8  w    O .text	00000008 typeinfo for scheduler_task
00018fc0 g     F .text	000000dc logger_init
0001834e g     F .text	00000156 f_mkdir
0001e330 g     F .text	0000003e .hidden __fixunssfsi
000136a4  w    F .text	0000000c LIGHT::~LIGHT()
0001975c g     F .text	0000001c str::scanf(char const*, ...)
00010358 g     F .text	00000010 _exit
00013bec g     F .text	00000030 LIGHT::LIGHT(unsigned char)
0001012c  w    F .text	00000010 isr_usage_fault
0001a5cc g     F .text	0000005c rit_enable
0001593e g     F .text	00000004 Light_Sensor::init()
00023f90 g     F .text	00000098 __smakebuf_r
00019b08 g     F .text	0000000c str::str(int)
00012b90 g     F .text	00000004 can_controller::get_tx_bytes()
000267b8 g     O .text	00000020 vtable for GLCD
0001fcb8 g     F .text	00000010 strlen
00015ca0 g     F .text	00000038 disk_read
0001c440 g     F .text	00000016 pxPortInitialiseStack
00021c04 g     F .text	00000228 _printf_i
00027794 g     O .text	00000008 typeinfo for std::type_info
0001ac1c g     F .text	0000001c CharDev::putline(char const*, unsigned int)
00021210 g     F .text	00000018 toupper
00024b44 g     F .text	00000010 .hidden __aeabi_cdcmpeq
00012220  w    F .text	0000000c scheduler_task::~scheduler_task()
2007c77a g     O .bss	00000001 flicker
00024aa8 g     F .text	0000008a .hidden __gedf2
0001aba0 g     F .text	00000024 UART3_IRQHandler
00023994 g     F .text	0000045e __gethex
2007cac8 g     O .bss	00000004 __malloc_sbrk_start
0001014c  w    F .text	00000010 MCPWM_IRQHandler
0001ad24 g     F .text	000000e6 I2C_Base::transfer(char, char, char*, unsigned int)
2007c762 g     O .bss	00000001 brake
000116b0 g     F .text	00000160 wirelessHandler(str&, CharDev&, void*)
0001e39c g     F .text	00000030 .hidden __gnu_ldivmod_helper
00022ab4 g     F .text	00000028 div
0001fc7a g     F .text	0000001a strchr
000181ca g     F .text	000000ca f_getfree
0001c1d4 g     F .text	00000018 vTaskSetTimeOutState
00015bb4 g     F .text	00000038 ff_convert
0001d790 g     F .text	0000003a .hidden __aeabi_f2d
00019bc2 g     F .text	0000003c str::copyFrom(char const*)
0001c4a4 g     F .text	0000001c vPortEnterCritical
000199e4 g     F .text	0000002a str::eraseFirstWords(int, char)
00015f6c g     F .text	00000024 sd_update_card_status
0001c5a8 g     F .text	00000014 resetRunTimeCounter
0001687c g     F .text	00000028 flash_read_permanent_id
0001696c g     F .text	00000054 flash_get_page_write_count
2007cacc g     O .bss	00000004 __malloc_free_list
00019af8  w    F .text	00000010 str::init(int)
2007c238  w    O .bss	00000004 SingletonTemplate<LED_Display>::mpSingletonInstance
00015168 g     F .text	00000010 nordic_rx_to_Stanby1
000136bc  w    F .text	00000014 SWITCH::~SWITCH()
0001b8d6 g     F .text	00000004 uxQueueMessagesWaitingFromISR
0001a944 g     F .text	00000014 rtc_get_date_time_str
0001ae34 g     F .text	00000016 I2C_Base::writeReg(char, char, char)
0001d4d0 g     F .text	0000027a .hidden __subdf3
000213d4 g     F .text	00000208 _vfprintf_r
00027cf4 g       .text	00000000 __preinit_array_start
00025dc0  w    O .text	00000011 typeinfo name for scheduler_task
000241f8 g     F .text	0000005a __lo0bits
00021e2c g     F .text	0000029c __svfscanf_r
0001f0e0 g     F .text	0000015c __tzcalc_limits
0001c3f4 g     F .text	00000028 vRunTimeStatIsrEntry
000212a0 g     F .text	000000e4 _ungetc_r
0001d288 g     F .text	0000002e std::type_info::operator==(std::type_info const&) const
0001d238 g     F .text	0000001c __cxa_guard_acquire
0001014c  w    F .text	00000010 ENET_IRQHandler
0001014c  w    F .text	00000010 USBAct_IRQHandler
0001b6b2 g     F .text	0000004c xQueueCreateMutex
00013898 g     F .text	00000080 GLCD::GLCD_init()
0001dd48 g     F .text	00000160 .hidden __addsf3
2007c784 g     O .bss	00000010 io_geo_loc
0001533a g     F .text	00000026 nordic_set_power_level
000267b0 g     O .text	00000007 typeinfo name for LIGHT
0001d2b6 g     F .text	00000004 std::type_info::__do_catch(std::type_info const*, void**, unsigned int) const
0001013c  w    F .text	00000010 isr_debug_mon
0001332c g     F .text	000000d4 controllerInit()
00023f5c g     F .text	00000008 __gettzinfo
0001fb18 g     F .text	00000010 raise
000103f4 g     F .text	00000004 _close
0001f23c g     F .text	00000290 _mktm_r
0001ebcc g     F .text	00000010 free
00027334  w    O .text	00000020 typeinfo for Uart0
00016270 g     F .text	00000244 sd_ioctl
00022118  w    F .text	000003d8 _scanf_float
0001032c g     F .text	00000002 __gnu_cxx::__verbose_terminate_handler()
000240c0 g     F .text	00000074 __multadd
0001d310 g     F .text	00000012 __cxxabiv1::__class_type_info::~__class_type_info()
00024092 g     F .text	0000002e _Bfree
0001b2a8 g     F .text	000000b0 UartDev::init(unsigned int, unsigned int, int, int)
0001c8c8 g     F .text	00000030 lpc_pconp
0001c5bc g     F .text	00000004 vApplicationIdleHook



Disassembly of section .text:

00010000 <g_pfnVectors>:
$d():
   10000:	00 40 08 20 91 01 01 00 fd 00 01 00 e1 00 01 00     .@. ............
   10010:	0d 01 01 00 1d 01 01 00 2d 01 01 00 00 00 00 00     ........-.......
	...
   1002c:	59 c4 01 00 3d 01 01 00 00 00 00 00 dd c4 01 00     Y...=...........
   1003c:	5d 01 01 00 91 ca 01 00 91 ca 01 00 91 ca 01 00     ]...............
   1004c:	91 ca 01 00 91 ca 01 00 91 ca 01 00 91 ca 01 00     ................
   1005c:	91 ca 01 00 91 ca 01 00 91 ca 01 00 91 ca 01 00     ................
   1006c:	91 ca 01 00 91 ca 01 00 91 ca 01 00 91 ca 01 00     ................
   1007c:	91 ca 01 00 91 ca 01 00 91 ca 01 00 91 ca 01 00     ................
   1008c:	91 ca 01 00 91 ca 01 00 91 ca 01 00 91 ca 01 00     ................
   1009c:	91 ca 01 00 91 ca 01 00 91 ca 01 00 91 ca 01 00     ................
   100ac:	91 ca 01 00 91 ca 01 00 91 ca 01 00 91 ca 01 00     ................
   100bc:	91 ca 01 00 91 ca 01 00 91 ca 01 00 91 ca 01 00     ................

000100cc <__data_section_table>:
__section_table_start():
   100cc:	00027d04 	.word	0x00027d04
   100d0:	2007c000 	.word	0x2007c000
   100d4:	000001e8 	.word	0x000001e8

000100d8 <__bss_section_table>:
__data_section_table_end():
   100d8:	2007c1e8 	.word	0x2007c1e8
   100dc:	000008f0 	.word	0x000008f0

000100e0 <isr_hard_fault>:
isr_hard_fault():
   100e0:	2004      	movs	r0, #4
   100e2:	4671      	mov	r1, lr
   100e4:	4208      	tst	r0, r1
   100e6:	f000 8004 	beq.w	100f2 <_MSP>
   100ea:	f3ef 8009 	mrs	r0, PSP
   100ee:	f00c bced 	b.w	1cacc <isr_hard_fault_handler>

000100f2 <_MSP>:
   100f2:	f3ef 8008 	mrs	r0, MSP
   100f6:	f00c bce9 	b.w	1cacc <isr_hard_fault_handler>
   100fa:	4770      	bx	lr

000100fc <isr_nmi>:
isr_nmi():
   100fc:	b508      	push	{r3, lr}
   100fe:	4802      	ldr	r0, [pc, #8]	; (10108 <isr_nmi+0xc>)
   10100:	f000 f9b8 	bl	10474 <u0_dbg_put>
   10104:	e7fe      	b.n	10104 <isr_nmi+0x8>
   10106:	bf00      	nop
   10108:	0002767a 	.word	0x0002767a

0001010c <isr_mem_fault>:
isr_mem_fault():
   1010c:	b508      	push	{r3, lr}
   1010e:	4802      	ldr	r0, [pc, #8]	; (10118 <isr_mem_fault+0xc>)
   10110:	f000 f9b0 	bl	10474 <u0_dbg_put>
   10114:	e7fe      	b.n	10114 <isr_mem_fault+0x8>
   10116:	bf00      	nop
   10118:	00027685 	.word	0x00027685

0001011c <isr_bus_fault>:
isr_bus_fault():
   1011c:	b508      	push	{r3, lr}
   1011e:	4802      	ldr	r0, [pc, #8]	; (10128 <isr_bus_fault+0xc>)
   10120:	f000 f9a8 	bl	10474 <u0_dbg_put>
   10124:	e7fe      	b.n	10124 <isr_bus_fault+0x8>
   10126:	bf00      	nop
   10128:	00027690 	.word	0x00027690

0001012c <isr_usage_fault>:
isr_usage_fault():
   1012c:	b508      	push	{r3, lr}
   1012e:	4802      	ldr	r0, [pc, #8]	; (10138 <isr_usage_fault+0xc>)
   10130:	f000 f9a0 	bl	10474 <u0_dbg_put>
   10134:	e7fe      	b.n	10134 <isr_usage_fault+0x8>
   10136:	bf00      	nop
   10138:	0002769b 	.word	0x0002769b

0001013c <isr_debug_mon>:
isr_debug_mon():
   1013c:	b508      	push	{r3, lr}
   1013e:	4802      	ldr	r0, [pc, #8]	; (10148 <isr_debug_mon+0xc>)
   10140:	f000 f998 	bl	10474 <u0_dbg_put>
   10144:	e7fe      	b.n	10144 <isr_debug_mon+0x8>
   10146:	bf00      	nop
   10148:	000276a8 	.word	0x000276a8

0001014c <isr_default_handler>:
TIMER2_IRQHandler():
   1014c:	b508      	push	{r3, lr}
   1014e:	4802      	ldr	r0, [pc, #8]	; (10158 <isr_default_handler+0xc>)
   10150:	f000 f990 	bl	10474 <u0_dbg_put>
   10154:	e7fe      	b.n	10154 <isr_default_handler+0x8>
   10156:	bf00      	nop
   10158:	000276b6 	.word	0x000276b6

0001015c <isr_sys_tick>:
isr_sys_tick():
   1015c:	b508      	push	{r3, lr}
   1015e:	f00c f949 	bl	1c3f4 <vRunTimeStatIsrEntry>
   10162:	f00c f9d9 	bl	1c518 <xPortSysTickHandler>
   10166:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
   1016a:	f00c b957 	b.w	1c41c <vRunTimeStatIsrExit>

0001016e <data_init(unsigned int, unsigned int, unsigned int)>:
_Z9data_initjjj():
   1016e:	b510      	push	{r4, lr}
   10170:	2300      	movs	r3, #0
   10172:	4293      	cmp	r3, r2
   10174:	d203      	bcs.n	1017e <data_init(unsigned int, unsigned int, unsigned int)+0x10>
   10176:	581c      	ldr	r4, [r3, r0]
   10178:	505c      	str	r4, [r3, r1]
   1017a:	3304      	adds	r3, #4
   1017c:	e7f9      	b.n	10172 <data_init(unsigned int, unsigned int, unsigned int)+0x4>
   1017e:	bd10      	pop	{r4, pc}

00010180 <bss_init(unsigned int, unsigned int)>:
_Z8bss_initjj():
   10180:	2300      	movs	r3, #0
   10182:	428b      	cmp	r3, r1
   10184:	d203      	bcs.n	1018e <bss_init(unsigned int, unsigned int)+0xe>
   10186:	2200      	movs	r2, #0
   10188:	501a      	str	r2, [r3, r0]
   1018a:	3304      	adds	r3, #4
   1018c:	e7f9      	b.n	10182 <bss_init(unsigned int, unsigned int)+0x2>
   1018e:	4770      	bx	lr

00010190 <isr_reset>:
isr_reset():
   10190:	b510      	push	{r4, lr}
   10192:	4815      	ldr	r0, [pc, #84]	; (101e8 <isr_reset+0x58>)
   10194:	f00c fa5e 	bl	1c654 <__set_PSP>
   10198:	4813      	ldr	r0, [pc, #76]	; (101e8 <isr_reset+0x58>)
   1019a:	f00c fa5e 	bl	1c65a <__set_MSP>
   1019e:	4c13      	ldr	r4, [pc, #76]	; (101ec <isr_reset+0x5c>)
   101a0:	4b13      	ldr	r3, [pc, #76]	; (101f0 <isr_reset+0x60>)
   101a2:	429c      	cmp	r4, r3
   101a4:	d207      	bcs.n	101b6 <isr_reset+0x26>
   101a6:	e894 0003 	ldmia.w	r4, {r0, r1}
   101aa:	340c      	adds	r4, #12
   101ac:	f854 2c04 	ldr.w	r2, [r4, #-4]
   101b0:	f7ff ffdd 	bl	1016e <data_init(unsigned int, unsigned int, unsigned int)>
   101b4:	e7f4      	b.n	101a0 <isr_reset+0x10>
   101b6:	4b0f      	ldr	r3, [pc, #60]	; (101f4 <isr_reset+0x64>)
   101b8:	429c      	cmp	r4, r3
   101ba:	d205      	bcs.n	101c8 <isr_reset+0x38>
   101bc:	e894 0003 	ldmia.w	r4, {r0, r1}
   101c0:	f7ff ffde 	bl	10180 <bss_init(unsigned int, unsigned int)>
   101c4:	3408      	adds	r4, #8
   101c6:	e7f6      	b.n	101b6 <isr_reset+0x26>
   101c8:	f00e fcbc 	bl	1eb44 <__libc_init_array>
   101cc:	f00c fa5c 	bl	1c688 <low_level_init()>
   101d0:	f001 fd80 	bl	11cd4 <high_level_init()>
   101d4:	f004 f9ba 	bl	1454c <main>
   101d8:	f44f 4016 	mov.w	r0, #38400	; 0x9600
   101dc:	f00c fd9a 	bl	1cd14 <uart0_init>
   101e0:	4805      	ldr	r0, [pc, #20]	; (101f8 <isr_reset+0x68>)
   101e2:	f000 f947 	bl	10474 <u0_dbg_put>
   101e6:	e7fe      	b.n	101e6 <isr_reset+0x56>
   101e8:	20084000 	.word	0x20084000
   101ec:	000100cc 	.word	0x000100cc
   101f0:	000100d8 	.word	0x000100d8
   101f4:	000100e0 	.word	0x000100e0
   101f8:	000276ca 	.word	0x000276ca

000101fc <_sbrk>:
_sbrk():
   101fc:	4a13      	ldr	r2, [pc, #76]	; (1024c <_sbrk+0x50>)
   101fe:	b570      	push	{r4, r5, r6, lr}
   10200:	6811      	ldr	r1, [r2, #0]
   10202:	4603      	mov	r3, r0
   10204:	b911      	cbnz	r1, 1020c <_sbrk+0x10>
   10206:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
   1020a:	6011      	str	r1, [r2, #0]
   1020c:	6810      	ldr	r0, [r2, #0]
   1020e:	4910      	ldr	r1, [pc, #64]	; (10250 <_sbrk+0x54>)
   10210:	18c5      	adds	r5, r0, r3
   10212:	4e10      	ldr	r6, [pc, #64]	; (10254 <_sbrk+0x58>)
   10214:	4429      	add	r1, r5
   10216:	42b1      	cmp	r1, r6
   10218:	bf98      	it	ls
   1021a:	480f      	ldrls	r0, [pc, #60]	; (10258 <_sbrk+0x5c>)
   1021c:	4c0b      	ldr	r4, [pc, #44]	; (1024c <_sbrk+0x50>)
   1021e:	bf96      	itet	ls
   10220:	1819      	addls	r1, r3, r0
   10222:	6025      	strhi	r5, [r4, #0]
   10224:	6021      	strls	r1, [r4, #0]
   10226:	6811      	ldr	r1, [r2, #0]
   10228:	4a0c      	ldr	r2, [pc, #48]	; (1025c <_sbrk+0x60>)
   1022a:	4291      	cmp	r1, r2
   1022c:	d903      	bls.n	10236 <_sbrk+0x3a>
   1022e:	490c      	ldr	r1, [pc, #48]	; (10260 <_sbrk+0x64>)
   10230:	4a06      	ldr	r2, [pc, #24]	; (1024c <_sbrk+0x50>)
   10232:	2000      	movs	r0, #0
   10234:	6011      	str	r1, [r2, #0]
   10236:	b13b      	cbz	r3, 10248 <_sbrk+0x4c>
   10238:	4a0a      	ldr	r2, [pc, #40]	; (10264 <_sbrk+0x68>)
   1023a:	6811      	ldr	r1, [r2, #0]
   1023c:	3101      	adds	r1, #1
   1023e:	6011      	str	r1, [r2, #0]
   10240:	4a09      	ldr	r2, [pc, #36]	; (10268 <_sbrk+0x6c>)
   10242:	6010      	str	r0, [r2, #0]
   10244:	4a09      	ldr	r2, [pc, #36]	; (1026c <_sbrk+0x70>)
   10246:	6013      	str	r3, [r2, #0]
   10248:	bd70      	pop	{r4, r5, r6, pc}
   1024a:	bf00      	nop
   1024c:	2007c1ec 	.word	0x2007c1ec
   10250:	efff7fff 	.word	0xefff7fff
   10254:	10073ffe 	.word	0x10073ffe
   10258:	2007cad8 	.word	0x2007cad8
   1025c:	20083fff 	.word	0x20083fff
   10260:	20084000 	.word	0x20084000
   10264:	2007c1f4 	.word	0x2007c1f4
   10268:	2007c1e8 	.word	0x2007c1e8
   1026c:	2007c1f0 	.word	0x2007c1f0

00010270 <operator new(unsigned int)>:
_Znwj():
   10270:	f00e bca4 	b.w	1ebbc <malloc>

00010274 <operator delete(void*)>:
_ZdlPv():
   10274:	f00e bcaa 	b.w	1ebcc <free>

00010278 <operator delete[](void*)>:
_ZdaPv():
   10278:	f00e bca8 	b.w	1ebcc <free>

0001027c <sys_get_mem_info>:
sys_get_mem_info():
   1027c:	b510      	push	{r4, lr}
   1027e:	b08a      	sub	sp, #40	; 0x28
   10280:	4604      	mov	r4, r0
   10282:	4668      	mov	r0, sp
   10284:	f00f f922 	bl	1f4cc <mallinfo>
   10288:	4b20      	ldr	r3, [pc, #128]	; (1030c <sys_get_mem_info+0x90>)
   1028a:	4a21      	ldr	r2, [pc, #132]	; (10310 <sys_get_mem_info+0x94>)
   1028c:	6023      	str	r3, [r4, #0]
   1028e:	9b08      	ldr	r3, [sp, #32]
   10290:	4920      	ldr	r1, [pc, #128]	; (10314 <sys_get_mem_info+0x98>)
   10292:	60a3      	str	r3, [r4, #8]
   10294:	9b07      	ldr	r3, [sp, #28]
   10296:	6063      	str	r3, [r4, #4]
   10298:	b953      	cbnz	r3, 102b0 <sys_get_mem_info+0x34>
   1029a:	680b      	ldr	r3, [r1, #0]
   1029c:	481e      	ldr	r0, [pc, #120]	; (10318 <sys_get_mem_info+0x9c>)
   1029e:	4283      	cmp	r3, r0
   102a0:	bf8a      	itet	hi
   102a2:	f103 4360 	addhi.w	r3, r3, #3758096384	; 0xe0000000
   102a6:	f103 4370 	addls.w	r3, r3, #4026531840	; 0xf0000000
   102aa:	f5a3 23e8 	subhi.w	r3, r3, #475136	; 0x74000
   102ae:	6063      	str	r3, [r4, #4]
   102b0:	6863      	ldr	r3, [r4, #4]
   102b2:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
   102b6:	d904      	bls.n	102c2 <sys_get_mem_info+0x46>
   102b8:	f103 4370 	add.w	r3, r3, #4026531840	; 0xf0000000
   102bc:	f5a3 23e8 	sub.w	r3, r3, #475136	; 0x74000
   102c0:	6063      	str	r3, [r4, #4]
   102c2:	2300      	movs	r3, #0
   102c4:	60e3      	str	r3, [r4, #12]
   102c6:	680b      	ldr	r3, [r1, #0]
   102c8:	4913      	ldr	r1, [pc, #76]	; (10318 <sys_get_mem_info+0x9c>)
   102ca:	428b      	cmp	r3, r1
   102cc:	d805      	bhi.n	102da <sys_get_mem_info+0x5e>
   102ce:	f1c2 5240 	rsb	r2, r2, #805306368	; 0x30000000
   102d2:	f502 220c 	add.w	r2, r2, #573440	; 0x8c000
   102d6:	1ad2      	subs	r2, r2, r3
   102d8:	e009      	b.n	102ee <sys_get_mem_info+0x72>
   102da:	4910      	ldr	r1, [pc, #64]	; (1031c <sys_get_mem_info+0xa0>)
   102dc:	428b      	cmp	r3, r1
   102de:	d807      	bhi.n	102f0 <sys_get_mem_info+0x74>
   102e0:	f1c2 4280 	rsb	r2, r2, #1073741824	; 0x40000000
   102e4:	f502 1280 	add.w	r2, r2, #1048576	; 0x100000
   102e8:	1ad2      	subs	r2, r2, r3
   102ea:	2a00      	cmp	r2, #0
   102ec:	dd00      	ble.n	102f0 <sys_get_mem_info+0x74>
   102ee:	60e2      	str	r2, [r4, #12]
   102f0:	61e3      	str	r3, [r4, #28]
   102f2:	4b0b      	ldr	r3, [pc, #44]	; (10320 <sys_get_mem_info+0xa4>)
   102f4:	4620      	mov	r0, r4
   102f6:	681b      	ldr	r3, [r3, #0]
   102f8:	61a3      	str	r3, [r4, #24]
   102fa:	4b0a      	ldr	r3, [pc, #40]	; (10324 <sys_get_mem_info+0xa8>)
   102fc:	681b      	ldr	r3, [r3, #0]
   102fe:	6163      	str	r3, [r4, #20]
   10300:	4b09      	ldr	r3, [pc, #36]	; (10328 <sys_get_mem_info+0xac>)
   10302:	681b      	ldr	r3, [r3, #0]
   10304:	6123      	str	r3, [r4, #16]
   10306:	b00a      	add	sp, #40	; 0x28
   10308:	bd10      	pop	{r4, pc}
   1030a:	bf00      	nop
   1030c:	00000ad8 	.word	0x00000ad8
   10310:	2007cad8 	.word	0x2007cad8
   10314:	2007c1ec 	.word	0x2007c1ec
   10318:	10008000 	.word	0x10008000
   1031c:	20083fff 	.word	0x20083fff
   10320:	2007c1e8 	.word	0x2007c1e8
   10324:	2007c1f0 	.word	0x2007c1f0
   10328:	2007c1f4 	.word	0x2007c1f4

0001032c <__gnu_cxx::__verbose_terminate_handler()>:
_ZN9__gnu_cxx27__verbose_terminate_handlerEv():
   1032c:	e7fe      	b.n	1032c <__gnu_cxx::__verbose_terminate_handler()>
	...

00010330 <sys_set_outchar_func>:
sys_set_outchar_func():
   10330:	4b01      	ldr	r3, [pc, #4]	; (10338 <sys_set_outchar_func+0x8>)
   10332:	6018      	str	r0, [r3, #0]
   10334:	4770      	bx	lr
   10336:	bf00      	nop
   10338:	2007c1fc 	.word	0x2007c1fc

0001033c <sys_set_inchar_func>:
sys_set_inchar_func():
   1033c:	4b01      	ldr	r3, [pc, #4]	; (10344 <sys_set_inchar_func+0x8>)
   1033e:	6018      	str	r0, [r3, #0]
   10340:	4770      	bx	lr
   10342:	bf00      	nop
   10344:	2007c1f8 	.word	0x2007c1f8

00010348 <_kill>:
_kill():
   10348:	b508      	push	{r3, lr}
   1034a:	4802      	ldr	r0, [pc, #8]	; (10354 <_kill+0xc>)
   1034c:	f00f fa06 	bl	1f75c <puts>
   10350:	e7fe      	b.n	10350 <_kill+0x8>
   10352:	bf00      	nop
   10354:	00024c08 	.word	0x00024c08

00010358 <_exit>:
_exit():
   10358:	b508      	push	{r3, lr}
   1035a:	4802      	ldr	r0, [pc, #8]	; (10364 <_exit+0xc>)
   1035c:	f00f f9fe 	bl	1f75c <puts>
   10360:	e7fe      	b.n	10360 <_exit+0x8>
   10362:	bf00      	nop
   10364:	00024c22 	.word	0x00024c22

00010368 <_getpid>:
_getpid():
   10368:	2000      	movs	r0, #0
   1036a:	4770      	bx	lr

0001036c <_init>:
_init():
   1036c:	2001      	movs	r0, #1
   1036e:	4770      	bx	lr

00010370 <_write>:
_write():
   10370:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   10372:	4b08      	ldr	r3, [pc, #32]	; (10394 <_write+0x24>)
   10374:	4615      	mov	r5, r2
   10376:	681a      	ldr	r2, [r3, #0]
   10378:	460e      	mov	r6, r1
   1037a:	461f      	mov	r7, r3
   1037c:	b13a      	cbz	r2, 1038e <_write+0x1e>
   1037e:	2400      	movs	r4, #0
   10380:	42ac      	cmp	r4, r5
   10382:	da04      	bge.n	1038e <_write+0x1e>
   10384:	5730      	ldrsb	r0, [r6, r4]
   10386:	683a      	ldr	r2, [r7, #0]
   10388:	4790      	blx	r2
   1038a:	3401      	adds	r4, #1
   1038c:	e7f8      	b.n	10380 <_write+0x10>
   1038e:	4628      	mov	r0, r5
   10390:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   10392:	bf00      	nop
   10394:	2007c1fc 	.word	0x2007c1fc

00010398 <_read>:
_read():
   10398:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1039a:	4b09      	ldr	r3, [pc, #36]	; (103c0 <_read+0x28>)
   1039c:	460e      	mov	r6, r1
   1039e:	6818      	ldr	r0, [r3, #0]
   103a0:	4615      	mov	r5, r2
   103a2:	461f      	mov	r7, r3
   103a4:	b150      	cbz	r0, 103bc <_read+0x24>
   103a6:	2400      	movs	r4, #0
   103a8:	42ac      	cmp	r4, r5
   103aa:	da05      	bge.n	103b8 <_read+0x20>
   103ac:	683a      	ldr	r2, [r7, #0]
   103ae:	2000      	movs	r0, #0
   103b0:	4790      	blx	r2
   103b2:	5530      	strb	r0, [r6, r4]
   103b4:	3401      	adds	r4, #1
   103b6:	e7f7      	b.n	103a8 <_read+0x10>
   103b8:	ea25 70e5 	bic.w	r0, r5, r5, asr #31
   103bc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   103be:	bf00      	nop
   103c0:	2007c1f8 	.word	0x2007c1f8

000103c4 <syscalls_init>:
syscalls_init():
   103c4:	4770      	bx	lr

000103c6 <_fstat>:
_fstat():
   103c6:	2000      	movs	r0, #0
   103c8:	4770      	bx	lr
	...

000103cc <_isatty>:
_isatty():
   103cc:	4b07      	ldr	r3, [pc, #28]	; (103ec <_isatty+0x20>)
   103ce:	681b      	ldr	r3, [r3, #0]
   103d0:	689a      	ldr	r2, [r3, #8]
   103d2:	4282      	cmp	r2, r0
   103d4:	d007      	beq.n	103e6 <_isatty+0x1a>
   103d6:	685a      	ldr	r2, [r3, #4]
   103d8:	4282      	cmp	r2, r0
   103da:	d004      	beq.n	103e6 <_isatty+0x1a>
   103dc:	68db      	ldr	r3, [r3, #12]
   103de:	1a1b      	subs	r3, r3, r0
   103e0:	4258      	negs	r0, r3
   103e2:	4158      	adcs	r0, r3
   103e4:	4770      	bx	lr
   103e6:	2001      	movs	r0, #1
   103e8:	4770      	bx	lr
   103ea:	bf00      	nop
   103ec:	2007c16c 	.word	0x2007c16c

000103f0 <_lseek>:
_lseek():
   103f0:	2000      	movs	r0, #0
   103f2:	4770      	bx	lr

000103f4 <_close>:
_close():
   103f4:	2000      	movs	r0, #0
   103f6:	4770      	bx	lr

000103f8 <_gettimeofday>:
_gettimeofday():
   103f8:	b530      	push	{r4, r5, lr}
   103fa:	4604      	mov	r4, r0
   103fc:	b08d      	sub	sp, #52	; 0x34
   103fe:	2800      	cmp	r0, #0
   10400:	d035      	beq.n	1046e <_gettimeofday+0x76>
   10402:	4668      	mov	r0, sp
   10404:	f00a f9d8 	bl	1a7b8 <rtc_gettime>
   10408:	f89d 3000 	ldrb.w	r3, [sp]
   1040c:	2500      	movs	r5, #0
   1040e:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   10412:	9303      	str	r3, [sp, #12]
   10414:	f89d 3001 	ldrb.w	r3, [sp, #1]
   10418:	a803      	add	r0, sp, #12
   1041a:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   1041e:	9304      	str	r3, [sp, #16]
   10420:	f89d 3002 	ldrb.w	r3, [sp, #2]
   10424:	950b      	str	r5, [sp, #44]	; 0x2c
   10426:	f003 031f 	and.w	r3, r3, #31
   1042a:	9305      	str	r3, [sp, #20]
   1042c:	f89d 3004 	ldrb.w	r3, [sp, #4]
   10430:	f003 031f 	and.w	r3, r3, #31
   10434:	9306      	str	r3, [sp, #24]
   10436:	f89d 3005 	ldrb.w	r3, [sp, #5]
   1043a:	f003 030f 	and.w	r3, r3, #15
   1043e:	3b01      	subs	r3, #1
   10440:	9307      	str	r3, [sp, #28]
   10442:	f8bd 3006 	ldrh.w	r3, [sp, #6]
   10446:	f3c3 030b 	ubfx	r3, r3, #0, #12
   1044a:	f2a3 736c 	subw	r3, r3, #1900	; 0x76c
   1044e:	9308      	str	r3, [sp, #32]
   10450:	f89d 3003 	ldrb.w	r3, [sp, #3]
   10454:	f003 0307 	and.w	r3, r3, #7
   10458:	9309      	str	r3, [sp, #36]	; 0x24
   1045a:	f8bd 3008 	ldrh.w	r3, [sp, #8]
   1045e:	f3c3 030b 	ubfx	r3, r3, #0, #12
   10462:	3b01      	subs	r3, #1
   10464:	930a      	str	r3, [sp, #40]	; 0x28
   10466:	f00e fcd5 	bl	1ee14 <mktime>
   1046a:	e884 0021 	stmia.w	r4, {r0, r5}
   1046e:	2000      	movs	r0, #0
   10470:	b00d      	add	sp, #52	; 0x34
   10472:	bd30      	pop	{r4, r5, pc}

00010474 <u0_dbg_put>:
u0_dbg_put():
   10474:	b510      	push	{r4, lr}
   10476:	4604      	mov	r4, r0
   10478:	f00c f814 	bl	1c4a4 <vPortEnterCritical>
   1047c:	3c01      	subs	r4, #1
   1047e:	f814 0f01 	ldrb.w	r0, [r4, #1]!
   10482:	b118      	cbz	r0, 1048c <u0_dbg_put+0x18>
   10484:	b240      	sxtb	r0, r0
   10486:	f00c fc81 	bl	1cd8c <uart0_putchar>
   1048a:	e7f8      	b.n	1047e <u0_dbg_put+0xa>
   1048c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   10490:	f00c b81a 	b.w	1c4c8 <vPortExitCritical>

00010494 <u0_dbg_printf>:
u0_dbg_printf():
   10494:	b40f      	push	{r0, r1, r2, r3}
   10496:	b570      	push	{r4, r5, r6, lr}
   10498:	b0c2      	sub	sp, #264	; 0x108
   1049a:	ac46      	add	r4, sp, #280	; 0x118
   1049c:	f854 6b04 	ldr.w	r6, [r4], #4
   104a0:	f44f 7580 	mov.w	r5, #256	; 0x100
   104a4:	462a      	mov	r2, r5
   104a6:	a802      	add	r0, sp, #8
   104a8:	2100      	movs	r1, #0
   104aa:	f00e fbd8 	bl	1ec5e <memset>
   104ae:	4623      	mov	r3, r4
   104b0:	4629      	mov	r1, r5
   104b2:	4632      	mov	r2, r6
   104b4:	a802      	add	r0, sp, #8
   104b6:	9401      	str	r4, [sp, #4]
   104b8:	f012 f99a 	bl	227f0 <vsniprintf>
   104bc:	4604      	mov	r4, r0
   104be:	a802      	add	r0, sp, #8
   104c0:	f7ff ffd8 	bl	10474 <u0_dbg_put>
   104c4:	4620      	mov	r0, r4
   104c6:	b042      	add	sp, #264	; 0x108
   104c8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
   104cc:	b004      	add	sp, #16
   104ce:	4770      	bx	lr

000104d0 <Storage::getFlashDrive()>:
_ZN7Storage13getFlashDriveEv():
   104d0:	b570      	push	{r4, r5, r6, lr}
   104d2:	4c0f      	ldr	r4, [pc, #60]	; (10510 <Storage::getFlashDrive()+0x40>)
   104d4:	4d0f      	ldr	r5, [pc, #60]	; (10514 <Storage::getFlashDrive()+0x44>)
   104d6:	6826      	ldr	r6, [r4, #0]
   104d8:	f016 0601 	ands.w	r6, r6, #1
   104dc:	d115      	bne.n	1050a <Storage::getFlashDrive()+0x3a>
   104de:	4620      	mov	r0, r4
   104e0:	f00c feaa 	bl	1d238 <__cxa_guard_acquire>
   104e4:	b188      	cbz	r0, 1050a <Storage::getFlashDrive()+0x3a>
   104e6:	f44f 700e 	mov.w	r0, #568	; 0x238
   104ea:	f7ff fec1 	bl	10270 <operator new(unsigned int)>
   104ee:	2230      	movs	r2, #48	; 0x30
   104f0:	f880 2235 	strb.w	r2, [r0, #565]	; 0x235
   104f4:	223a      	movs	r2, #58	; 0x3a
   104f6:	f880 6234 	strb.w	r6, [r0, #564]	; 0x234
   104fa:	f880 2236 	strb.w	r2, [r0, #566]	; 0x236
   104fe:	f880 6237 	strb.w	r6, [r0, #567]	; 0x237
   10502:	6028      	str	r0, [r5, #0]
   10504:	4620      	mov	r0, r4
   10506:	f00c fea5 	bl	1d254 <__cxa_guard_release>
   1050a:	6828      	ldr	r0, [r5, #0]
   1050c:	bd70      	pop	{r4, r5, r6, pc}
   1050e:	bf00      	nop
   10510:	2007c21c 	.word	0x2007c21c
   10514:	2007c204 	.word	0x2007c204

00010518 <Storage::getSDDrive()>:
_ZN7Storage10getSDDriveEv():
   10518:	b570      	push	{r4, r5, r6, lr}
   1051a:	4c0f      	ldr	r4, [pc, #60]	; (10558 <Storage::getSDDrive()+0x40>)
   1051c:	4d0f      	ldr	r5, [pc, #60]	; (1055c <Storage::getSDDrive()+0x44>)
   1051e:	6823      	ldr	r3, [r4, #0]
   10520:	f013 0601 	ands.w	r6, r3, #1
   10524:	d116      	bne.n	10554 <Storage::getSDDrive()+0x3c>
   10526:	4620      	mov	r0, r4
   10528:	f00c fe86 	bl	1d238 <__cxa_guard_acquire>
   1052c:	b190      	cbz	r0, 10554 <Storage::getSDDrive()+0x3c>
   1052e:	f44f 700e 	mov.w	r0, #568	; 0x238
   10532:	f7ff fe9d 	bl	10270 <operator new(unsigned int)>
   10536:	2201      	movs	r2, #1
   10538:	f880 2234 	strb.w	r2, [r0, #564]	; 0x234
   1053c:	2231      	movs	r2, #49	; 0x31
   1053e:	f880 2235 	strb.w	r2, [r0, #565]	; 0x235
   10542:	223a      	movs	r2, #58	; 0x3a
   10544:	f880 2236 	strb.w	r2, [r0, #566]	; 0x236
   10548:	f880 6237 	strb.w	r6, [r0, #567]	; 0x237
   1054c:	6028      	str	r0, [r5, #0]
   1054e:	4620      	mov	r0, r4
   10550:	f00c fe80 	bl	1d254 <__cxa_guard_release>
   10554:	6828      	ldr	r0, [r5, #0]
   10556:	bd70      	pop	{r4, r5, r6, pc}
   10558:	2007c218 	.word	0x2007c218
   1055c:	2007c200 	.word	0x2007c200

00010560 <taskListHandler(str&, CharDev&, void*)>:
_Z15taskListHandlerR3strR7CharDevPv():
   10560:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   10564:	f5ad 7d0a 	sub.w	sp, sp, #552	; 0x228
   10568:	460e      	mov	r6, r1
   1056a:	f009 fa92 	bl	19a92 <str::operator int() const>
   1056e:	1e04      	subs	r4, r0, #0
   10570:	dd04      	ble.n	1057c <taskListHandler(str&, CharDev&, void*)+0x1c>
   10572:	f00b ff0b 	bl	1c38c <vTaskResetRunTimeStats>
   10576:	4620      	mov	r0, r4
   10578:	f00b fca8 	bl	1becc <vTaskDelay>
   1057c:	f10d 0914 	add.w	r9, sp, #20
   10580:	4d2b      	ldr	r5, [pc, #172]	; (10630 <taskListHandler(str&, CharDev&, void*)+0xd0>)
   10582:	464c      	mov	r4, r9
   10584:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
   10586:	c40f      	stmia	r4!, {r0, r1, r2, r3}
   10588:	682b      	ldr	r3, [r5, #0]
   1058a:	2110      	movs	r1, #16
   1058c:	eb0d 0201 	add.w	r2, sp, r1
   10590:	2500      	movs	r5, #0
   10592:	a80a      	add	r0, sp, #40	; 0x28
   10594:	6023      	str	r3, [r4, #0]
   10596:	9504      	str	r5, [sp, #16]
   10598:	f00b fcc2 	bl	1bf20 <uxTaskGetSystemState>
   1059c:	4925      	ldr	r1, [pc, #148]	; (10634 <taskListHandler(str&, CharDev&, void*)+0xd4>)
   1059e:	4682      	mov	sl, r0
   105a0:	4a25      	ldr	r2, [pc, #148]	; (10638 <taskListHandler(str&, CharDev&, void*)+0xd8>)
   105a2:	4630      	mov	r0, r6
   105a4:	f00a fb71 	bl	1ac8a <CharDev::printf(char const*, ...)>
   105a8:	462f      	mov	r7, r5
   105aa:	ac0f      	add	r4, sp, #60	; 0x3c
   105ac:	f04f 0800 	mov.w	r8, #0
   105b0:	45d0      	cmp	r8, sl
   105b2:	d01f      	beq.n	105f4 <taskListHandler(str&, CharDev&, void*)+0x94>
   105b4:	6823      	ldr	r3, [r4, #0]
   105b6:	42ab      	cmp	r3, r5
   105b8:	d118      	bne.n	105ec <taskListHandler(str&, CharDev&, void*)+0x8c>
   105ba:	6863      	ldr	r3, [r4, #4]
   105bc:	9a04      	ldr	r2, [sp, #16]
   105be:	441f      	add	r7, r3
   105c0:	b122      	cbz	r2, 105cc <taskListHandler(str&, CharDev&, void*)+0x6c>
   105c2:	2164      	movs	r1, #100	; 0x64
   105c4:	fbb2 f2f1 	udiv	r2, r2, r1
   105c8:	fbb3 f2f2 	udiv	r2, r3, r2
   105cc:	f814 ec08 	ldrb.w	lr, [r4, #-8]
   105d0:	9500      	str	r5, [sp, #0]
   105d2:	8921      	ldrh	r1, [r4, #8]
   105d4:	9202      	str	r2, [sp, #8]
   105d6:	0089      	lsls	r1, r1, #2
   105d8:	9101      	str	r1, [sp, #4]
   105da:	9303      	str	r3, [sp, #12]
   105dc:	4630      	mov	r0, r6
   105de:	4917      	ldr	r1, [pc, #92]	; (1063c <taskListHandler(str&, CharDev&, void*)+0xdc>)
   105e0:	f854 2c10 	ldr.w	r2, [r4, #-16]
   105e4:	f859 302e 	ldr.w	r3, [r9, lr, lsl #2]
   105e8:	f00a fb4f 	bl	1ac8a <CharDev::printf(char const*, ...)>
   105ec:	f108 0801 	add.w	r8, r8, #1
   105f0:	3420      	adds	r4, #32
   105f2:	e7dd      	b.n	105b0 <taskListHandler(str&, CharDev&, void*)+0x50>
   105f4:	3501      	adds	r5, #1
   105f6:	2d04      	cmp	r5, #4
   105f8:	d1d7      	bne.n	105aa <taskListHandler(str&, CharDev&, void*)+0x4a>
   105fa:	9b04      	ldr	r3, [sp, #16]
   105fc:	2264      	movs	r2, #100	; 0x64
   105fe:	1bdf      	subs	r7, r3, r7
   10600:	fbb3 f3f2 	udiv	r3, r3, r2
   10604:	490e      	ldr	r1, [pc, #56]	; (10640 <taskListHandler(str&, CharDev&, void*)+0xe0>)
   10606:	4a0f      	ldr	r2, [pc, #60]	; (10644 <taskListHandler(str&, CharDev&, void*)+0xe4>)
   10608:	fbb7 f3f3 	udiv	r3, r7, r3
   1060c:	9700      	str	r7, [sp, #0]
   1060e:	4630      	mov	r0, r6
   10610:	f00a fb3b 	bl	1ac8a <CharDev::printf(char const*, ...)>
   10614:	f00b fb3a 	bl	1bc8c <uxTaskGetNumberOfTasks>
   10618:	2810      	cmp	r0, #16
   1061a:	d904      	bls.n	10626 <taskListHandler(str&, CharDev&, void*)+0xc6>
   1061c:	4630      	mov	r0, r6
   1061e:	490a      	ldr	r1, [pc, #40]	; (10648 <taskListHandler(str&, CharDev&, void*)+0xe8>)
   10620:	2210      	movs	r2, #16
   10622:	f00a fb32 	bl	1ac8a <CharDev::printf(char const*, ...)>
   10626:	2001      	movs	r0, #1
   10628:	f50d 7d0a 	add.w	sp, sp, #552	; 0x228
   1062c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   10630:	00024c3c 	.word	0x00024c3c
   10634:	00024c5b 	.word	0x00024c5b
   10638:	00024c82 	.word	0x00024c82
   1063c:	00024c87 	.word	0x00024c87
   10640:	00024ca4 	.word	0x00024ca4
   10644:	00024cc3 	.word	0x00024cc3
   10648:	00024cce 	.word	0x00024cce

0001064c <memInfoHandler(str&, CharDev&, void*)>:
_Z14memInfoHandlerR3strR7CharDevPv():
   1064c:	b510      	push	{r4, lr}
   1064e:	f5ad 7d00 	sub.w	sp, sp, #512	; 0x200
   10652:	460c      	mov	r4, r1
   10654:	4668      	mov	r0, sp
   10656:	f00c f9ff 	bl	1ca58 <sys_get_mem_info_str>
   1065a:	4620      	mov	r0, r4
   1065c:	4669      	mov	r1, sp
   1065e:	f04f 32ff 	mov.w	r2, #4294967295
   10662:	f00a fadb 	bl	1ac1c <CharDev::putline(char const*, unsigned int)>
   10666:	2001      	movs	r0, #1
   10668:	f50d 7d00 	add.w	sp, sp, #512	; 0x200
   1066c:	bd10      	pop	{r4, pc}
	...

00010670 <timeHandler(str&, CharDev&, void*)>:
_Z11timeHandlerR3strR7CharDevPv():
   10670:	b530      	push	{r4, r5, lr}
   10672:	460c      	mov	r4, r1
   10674:	b091      	sub	sp, #68	; 0x44
   10676:	492c      	ldr	r1, [pc, #176]	; (10728 <timeHandler(str&, CharDev&, void*)+0xb8>)
   10678:	4605      	mov	r5, r0
   1067a:	f009 f911 	bl	198a0 <str::beginsWith(char const*) const>
   1067e:	2800      	cmp	r0, #0
   10680:	d047      	beq.n	10712 <timeHandler(str&, CharDev&, void*)+0xa2>
   10682:	ab08      	add	r3, sp, #32
   10684:	9300      	str	r3, [sp, #0]
   10686:	ab09      	add	r3, sp, #36	; 0x24
   10688:	9301      	str	r3, [sp, #4]
   1068a:	ab0a      	add	r3, sp, #40	; 0x28
   1068c:	9302      	str	r3, [sp, #8]
   1068e:	ab0b      	add	r3, sp, #44	; 0x2c
   10690:	9303      	str	r3, [sp, #12]
   10692:	ab0c      	add	r3, sp, #48	; 0x30
   10694:	9304      	str	r3, [sp, #16]
   10696:	4628      	mov	r0, r5
   10698:	4924      	ldr	r1, [pc, #144]	; (1072c <timeHandler(str&, CharDev&, void*)+0xbc>)
   1069a:	aa06      	add	r2, sp, #24
   1069c:	ab07      	add	r3, sp, #28
   1069e:	f009 f85d 	bl	1975c <str::scanf(char const*, ...)>
   106a2:	2807      	cmp	r0, #7
   106a4:	d001      	beq.n	106aa <timeHandler(str&, CharDev&, void*)+0x3a>
   106a6:	2000      	movs	r0, #0
   106a8:	e03b      	b.n	10722 <timeHandler(str&, CharDev&, void*)+0xb2>
   106aa:	f89d 3039 	ldrb.w	r3, [sp, #57]	; 0x39
   106ae:	9a06      	ldr	r2, [sp, #24]
   106b0:	a80d      	add	r0, sp, #52	; 0x34
   106b2:	f362 0303 	bfi	r3, r2, #0, #4
   106b6:	f88d 3039 	strb.w	r3, [sp, #57]	; 0x39
   106ba:	9a07      	ldr	r2, [sp, #28]
   106bc:	f89d 3038 	ldrb.w	r3, [sp, #56]	; 0x38
   106c0:	f362 0304 	bfi	r3, r2, #0, #5
   106c4:	f88d 3038 	strb.w	r3, [sp, #56]	; 0x38
   106c8:	9a08      	ldr	r2, [sp, #32]
   106ca:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
   106ce:	f362 030b 	bfi	r3, r2, #0, #12
   106d2:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
   106d6:	9a09      	ldr	r2, [sp, #36]	; 0x24
   106d8:	f89d 3036 	ldrb.w	r3, [sp, #54]	; 0x36
   106dc:	f362 0304 	bfi	r3, r2, #0, #5
   106e0:	f88d 3036 	strb.w	r3, [sp, #54]	; 0x36
   106e4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   106e6:	f89d 3035 	ldrb.w	r3, [sp, #53]	; 0x35
   106ea:	f362 0305 	bfi	r3, r2, #0, #6
   106ee:	f88d 3035 	strb.w	r3, [sp, #53]	; 0x35
   106f2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   106f4:	f89d 3034 	ldrb.w	r3, [sp, #52]	; 0x34
   106f8:	f362 0305 	bfi	r3, r2, #0, #6
   106fc:	f88d 3034 	strb.w	r3, [sp, #52]	; 0x34
   10700:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   10702:	f89d 3037 	ldrb.w	r3, [sp, #55]	; 0x37
   10706:	f362 0302 	bfi	r3, r2, #0, #3
   1070a:	f88d 3037 	strb.w	r3, [sp, #55]	; 0x37
   1070e:	f00a f87d 	bl	1a80c <rtc_settime>
   10712:	f00a f917 	bl	1a944 <rtc_get_date_time_str>
   10716:	4906      	ldr	r1, [pc, #24]	; (10730 <timeHandler(str&, CharDev&, void*)+0xc0>)
   10718:	4602      	mov	r2, r0
   1071a:	4620      	mov	r0, r4
   1071c:	f00a fab5 	bl	1ac8a <CharDev::printf(char const*, ...)>
   10720:	2001      	movs	r0, #1
   10722:	b011      	add	sp, #68	; 0x44
   10724:	bd30      	pop	{r4, r5, pc}
   10726:	bf00      	nop
   10728:	00024cf8 	.word	0x00024cf8
   1072c:	00024cfc 	.word	0x00024cfc
   10730:	00026f1a 	.word	0x00026f1a

00010734 <logHandler(str&, CharDev&, void*)>:
_Z10logHandlerR3strR7CharDevPv():
   10734:	b537      	push	{r0, r1, r2, r4, r5, lr}
   10736:	460d      	mov	r5, r1
   10738:	4919      	ldr	r1, [pc, #100]	; (107a0 <logHandler(str&, CharDev&, void*)+0x6c>)
   1073a:	4604      	mov	r4, r0
   1073c:	f009 f9a5 	bl	19a8a <str::operator==(char const*) const>
   10740:	b140      	cbz	r0, 10754 <logHandler(str&, CharDev&, void*)+0x20>
   10742:	f008 fc23 	bl	18f8c <logger_send_flush_request>
   10746:	4628      	mov	r0, r5
   10748:	4916      	ldr	r1, [pc, #88]	; (107a4 <logHandler(str&, CharDev&, void*)+0x70>)
   1074a:	f04f 32ff 	mov.w	r2, #4294967295
   1074e:	f00a fa65 	bl	1ac1c <CharDev::putline(char const*, unsigned int)>
   10752:	e021      	b.n	10798 <logHandler(str&, CharDev&, void*)+0x64>
   10754:	4620      	mov	r0, r4
   10756:	4914      	ldr	r1, [pc, #80]	; (107a8 <logHandler(str&, CharDev&, void*)+0x74>)
   10758:	f009 f8a2 	bl	198a0 <str::beginsWith(char const*) const>
   1075c:	b150      	cbz	r0, 10774 <logHandler(str&, CharDev&, void*)+0x40>
   1075e:	2101      	movs	r1, #1
   10760:	2220      	movs	r2, #32
   10762:	4620      	mov	r0, r4
   10764:	f009 f93e 	bl	199e4 <str::eraseFirstWords(int, char)>
   10768:	4620      	mov	r0, r4
   1076a:	f009 f990 	bl	19a8e <str::operator()() const>
   1076e:	f008 fd1d 	bl	191ac <logger_log_raw>
   10772:	e011      	b.n	10798 <logHandler(str&, CharDev&, void*)+0x64>
   10774:	4620      	mov	r0, r4
   10776:	f009 f98a 	bl	19a8e <str::operator()() const>
   1077a:	490c      	ldr	r1, [pc, #48]	; (107ac <logHandler(str&, CharDev&, void*)+0x78>)
   1077c:	4a0c      	ldr	r2, [pc, #48]	; (107b0 <logHandler(str&, CharDev&, void*)+0x7c>)
   1077e:	9000      	str	r0, [sp, #0]
   10780:	23d7      	movs	r3, #215	; 0xd7
   10782:	2001      	movs	r0, #1
   10784:	f008 fc8a 	bl	1909c <logger_log>
   10788:	4620      	mov	r0, r4
   1078a:	f009 f980 	bl	19a8e <str::operator()() const>
   1078e:	4909      	ldr	r1, [pc, #36]	; (107b4 <logHandler(str&, CharDev&, void*)+0x80>)
   10790:	4602      	mov	r2, r0
   10792:	4628      	mov	r0, r5
   10794:	f00a fa79 	bl	1ac8a <CharDev::printf(char const*, ...)>
   10798:	2001      	movs	r0, #1
   1079a:	b003      	add	sp, #12
   1079c:	bd30      	pop	{r4, r5, pc}
   1079e:	bf00      	nop
   107a0:	00024d15 	.word	0x00024d15
   107a4:	00024d1b 	.word	0x00024d1b
   107a8:	00024d34 	.word	0x00024d34
   107ac:	00024d38 	.word	0x00024d38
   107b0:	00024c50 	.word	0x00024c50
   107b4:	00024d6b 	.word	0x00024d6b

000107b8 <cpHandler(str&, CharDev&, void*)>:
_Z9cpHandlerR3strR7CharDevPv():
   107b8:	b530      	push	{r4, r5, lr}
   107ba:	b089      	sub	sp, #36	; 0x24
   107bc:	ab04      	add	r3, sp, #16
   107be:	2400      	movs	r4, #0
   107c0:	9300      	str	r3, [sp, #0]
   107c2:	460d      	mov	r5, r1
   107c4:	2202      	movs	r2, #2
   107c6:	4919      	ldr	r1, [pc, #100]	; (1082c <cpHandler(str&, CharDev&, void*)+0x74>)
   107c8:	ab03      	add	r3, sp, #12
   107ca:	9403      	str	r4, [sp, #12]
   107cc:	9404      	str	r4, [sp, #16]
   107ce:	f008 ffd3 	bl	19778 <str::tokenize(char const*, int, ...)>
   107d2:	2802      	cmp	r0, #2
   107d4:	d127      	bne.n	10826 <cpHandler(str&, CharDev&, void*)+0x6e>
   107d6:	ab07      	add	r3, sp, #28
   107d8:	9300      	str	r3, [sp, #0]
   107da:	aa05      	add	r2, sp, #20
   107dc:	9803      	ldr	r0, [sp, #12]
   107de:	9904      	ldr	r1, [sp, #16]
   107e0:	ab06      	add	r3, sp, #24
   107e2:	9405      	str	r4, [sp, #20]
   107e4:	9406      	str	r4, [sp, #24]
   107e6:	9407      	str	r4, [sp, #28]
   107e8:	f005 f8fa 	bl	159e0 <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)>
   107ec:	4602      	mov	r2, r0
   107ee:	b138      	cbz	r0, 10800 <cpHandler(str&, CharDev&, void*)+0x48>
   107f0:	9b04      	ldr	r3, [sp, #16]
   107f2:	4628      	mov	r0, r5
   107f4:	9300      	str	r3, [sp, #0]
   107f6:	490e      	ldr	r1, [pc, #56]	; (10830 <cpHandler(str&, CharDev&, void*)+0x78>)
   107f8:	9b03      	ldr	r3, [sp, #12]
   107fa:	f00a fa46 	bl	1ac8a <CharDev::printf(char const*, ...)>
   107fe:	e010      	b.n	10822 <cpHandler(str&, CharDev&, void*)+0x6a>
   10800:	9a05      	ldr	r2, [sp, #20]
   10802:	9b06      	ldr	r3, [sp, #24]
   10804:	2a00      	cmp	r2, #0
   10806:	9c07      	ldr	r4, [sp, #28]
   10808:	bf08      	it	eq
   1080a:	2201      	moveq	r2, #1
   1080c:	2b00      	cmp	r3, #0
   1080e:	bf08      	it	eq
   10810:	2301      	moveq	r3, #1
   10812:	4628      	mov	r0, r5
   10814:	4907      	ldr	r1, [pc, #28]	; (10834 <cpHandler(str&, CharDev&, void*)+0x7c>)
   10816:	fbb4 f2f2 	udiv	r2, r4, r2
   1081a:	fbb4 f3f3 	udiv	r3, r4, r3
   1081e:	f00a fa34 	bl	1ac8a <CharDev::printf(char const*, ...)>
   10822:	2001      	movs	r0, #1
   10824:	e000      	b.n	10828 <cpHandler(str&, CharDev&, void*)+0x70>
   10826:	4620      	mov	r0, r4
   10828:	b009      	add	sp, #36	; 0x24
   1082a:	bd30      	pop	{r4, r5, pc}
   1082c:	00025e2a 	.word	0x00025e2a
   10830:	00024d79 	.word	0x00024d79
   10834:	00024d98 	.word	0x00024d98

00010838 <catHandler(str&, CharDev&, void*)>:
_Z10catHandlerR3strR7CharDevPv():
   10838:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1083c:	4688      	mov	r8, r1
   1083e:	f2ad 4d34 	subw	sp, sp, #1076	; 0x434
   10842:	4943      	ldr	r1, [pc, #268]	; (10950 <catHandler(str&, CharDev&, void*)+0x118>)
   10844:	4604      	mov	r4, r0
   10846:	f009 f8b9 	bl	199bc <str::erase(char const*)>
   1084a:	4942      	ldr	r1, [pc, #264]	; (10954 <catHandler(str&, CharDev&, void*)+0x11c>)
   1084c:	4681      	mov	r9, r0
   1084e:	4620      	mov	r0, r4
   10850:	f009 f8dd 	bl	19a0e <str::trimStart(char const*)>
   10854:	4620      	mov	r0, r4
   10856:	493f      	ldr	r1, [pc, #252]	; (10954 <catHandler(str&, CharDev&, void*)+0x11c>)
   10858:	f009 f8f9 	bl	19a4e <str::trimEnd(char const*)>
   1085c:	493e      	ldr	r1, [pc, #248]	; (10958 <catHandler(str&, CharDev&, void*)+0x120>)
   1085e:	4640      	mov	r0, r8
   10860:	f00a fa13 	bl	1ac8a <CharDev::printf(char const*, ...)>
   10864:	4620      	mov	r0, r4
   10866:	f009 f912 	bl	19a8e <str::operator()() const>
   1086a:	2201      	movs	r2, #1
   1086c:	4601      	mov	r1, r0
   1086e:	a883      	add	r0, sp, #524	; 0x20c
   10870:	f007 f90a 	bl	17a88 <f_open>
   10874:	4605      	mov	r5, r0
   10876:	b140      	cbz	r0, 1088a <catHandler(str&, CharDev&, void*)+0x52>
   10878:	4620      	mov	r0, r4
   1087a:	f009 f908 	bl	19a8e <str::operator()() const>
   1087e:	4937      	ldr	r1, [pc, #220]	; (1095c <catHandler(str&, CharDev&, void*)+0x124>)
   10880:	4602      	mov	r2, r0
   10882:	4640      	mov	r0, r8
   10884:	f00a fa01 	bl	1ac8a <CharDev::printf(char const*, ...)>
   10888:	e05c      	b.n	10944 <catHandler(str&, CharDev&, void*)+0x10c>
   1088a:	f10d 0b0c 	add.w	fp, sp, #12
   1088e:	4629      	mov	r1, r5
   10890:	f44f 7200 	mov.w	r2, #512	; 0x200
   10894:	4658      	mov	r0, fp
   10896:	f00e f9e2 	bl	1ec5e <memset>
   1089a:	9502      	str	r5, [sp, #8]
   1089c:	f00c f872 	bl	1c984 <sys_get_uptime_us>
   108a0:	46aa      	mov	sl, r5
   108a2:	4606      	mov	r6, r0
   108a4:	460f      	mov	r7, r1
   108a6:	a883      	add	r0, sp, #524	; 0x20c
   108a8:	4659      	mov	r1, fp
   108aa:	f44f 7200 	mov.w	r2, #512	; 0x200
   108ae:	ab02      	add	r3, sp, #8
   108b0:	f007 f97c 	bl	17bac <f_read>
   108b4:	b908      	cbnz	r0, 108ba <catHandler(str&, CharDev&, void*)+0x82>
   108b6:	9b02      	ldr	r3, [sp, #8]
   108b8:	bb33      	cbnz	r3, 10908 <catHandler(str&, CharDev&, void*)+0xd0>
   108ba:	a883      	add	r0, sp, #524	; 0x20c
   108bc:	f007 fb58 	bl	17f70 <f_close>
   108c0:	f1b9 0f00 	cmp.w	r9, #0
   108c4:	d019      	beq.n	108fa <catHandler(str&, CharDev&, void*)+0xc2>
   108c6:	f00c f85d 	bl	1c984 <sys_get_uptime_us>
   108ca:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   108ce:	2300      	movs	r3, #0
   108d0:	f00d fd4e 	bl	1e370 <__aeabi_uldivmod>
   108d4:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   108d8:	4604      	mov	r4, r0
   108da:	2300      	movs	r3, #0
   108dc:	4630      	mov	r0, r6
   108de:	4639      	mov	r1, r7
   108e0:	f00d fd46 	bl	1e370 <__aeabi_uldivmod>
   108e4:	1a20      	subs	r0, r4, r0
   108e6:	bf14      	ite	ne
   108e8:	4603      	movne	r3, r0
   108ea:	2301      	moveq	r3, #1
   108ec:	491c      	ldr	r1, [pc, #112]	; (10960 <catHandler(str&, CharDev&, void*)+0x128>)
   108ee:	4640      	mov	r0, r8
   108f0:	4652      	mov	r2, sl
   108f2:	fbba f3f3 	udiv	r3, sl, r3
   108f6:	f00a f9c8 	bl	1ac8a <CharDev::printf(char const*, ...)>
   108fa:	4640      	mov	r0, r8
   108fc:	4919      	ldr	r1, [pc, #100]	; (10964 <catHandler(str&, CharDev&, void*)+0x12c>)
   108fe:	f04f 32ff 	mov.w	r2, #4294967295
   10902:	f00a f98b 	bl	1ac1c <CharDev::putline(char const*, unsigned int)>
   10906:	e01d      	b.n	10944 <catHandler(str&, CharDev&, void*)+0x10c>
   10908:	449a      	add	sl, r3
   1090a:	f1b9 0f00 	cmp.w	r9, #0
   1090e:	d1ca      	bne.n	108a6 <catHandler(str&, CharDev&, void*)+0x6e>
   10910:	464c      	mov	r4, r9
   10912:	9b02      	ldr	r3, [sp, #8]
   10914:	429c      	cmp	r4, r3
   10916:	f8d8 3000 	ldr.w	r3, [r8]
   1091a:	d208      	bcs.n	1092e <catHandler(str&, CharDev&, void*)+0xf6>
   1091c:	f91b 1004 	ldrsb.w	r1, [fp, r4]
   10920:	685b      	ldr	r3, [r3, #4]
   10922:	4640      	mov	r0, r8
   10924:	f04f 32ff 	mov.w	r2, #4294967295
   10928:	4798      	blx	r3
   1092a:	3401      	adds	r4, #1
   1092c:	e7f1      	b.n	10912 <catHandler(str&, CharDev&, void*)+0xda>
   1092e:	2200      	movs	r2, #0
   10930:	f88d 2007 	strb.w	r2, [sp, #7]
   10934:	681b      	ldr	r3, [r3, #0]
   10936:	4640      	mov	r0, r8
   10938:	f10d 0107 	add.w	r1, sp, #7
   1093c:	f04f 32ff 	mov.w	r2, #4294967295
   10940:	4798      	blx	r3
   10942:	e7b0      	b.n	108a6 <catHandler(str&, CharDev&, void*)+0x6e>
   10944:	2001      	movs	r0, #1
   10946:	f20d 4d34 	addw	sp, sp, #1076	; 0x434
   1094a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1094e:	bf00      	nop
   10950:	00024dc6 	.word	0x00024dc6
   10954:	00025e2a 	.word	0x00025e2a
   10958:	00024dcf 	.word	0x00024dcf
   1095c:	00024dfd 	.word	0x00024dfd
   10960:	00024e11 	.word	0x00024e11
   10964:	00025375 	.word	0x00025375

00010968 <lsHandler(str&, CharDev&, void*)>:
_Z9lsHandlerR3strR7CharDevPv():
   10968:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1096c:	b0c1      	sub	sp, #260	; 0x104
   1096e:	ab0e      	add	r3, sp, #56	; 0x38
   10970:	2500      	movs	r5, #0
   10972:	9300      	str	r3, [sp, #0]
   10974:	460c      	mov	r4, r1
   10976:	2202      	movs	r2, #2
   10978:	495d      	ldr	r1, [pc, #372]	; (10af0 <lsHandler(str&, CharDev&, void*)+0x188>)
   1097a:	ab0d      	add	r3, sp, #52	; 0x34
   1097c:	950c      	str	r5, [sp, #48]	; 0x30
   1097e:	950d      	str	r5, [sp, #52]	; 0x34
   10980:	950e      	str	r5, [sp, #56]	; 0x38
   10982:	f008 fef9 	bl	19778 <str::tokenize(char const*, int, ...)>
   10986:	2802      	cmp	r0, #2
   10988:	d103      	bne.n	10992 <lsHandler(str&, CharDev&, void*)+0x2a>
   1098a:	980e      	ldr	r0, [sp, #56]	; 0x38
   1098c:	f00d ffd7 	bl	1e93e <atoi>
   10990:	4605      	mov	r5, r0
   10992:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   10994:	b90b      	cbnz	r3, 1099a <lsHandler(str&, CharDev&, void*)+0x32>
   10996:	4b57      	ldr	r3, [pc, #348]	; (10af4 <lsHandler(str&, CharDev&, void*)+0x18c>)
   10998:	930d      	str	r3, [sp, #52]	; 0x34
   1099a:	a817      	add	r0, sp, #92	; 0x5c
   1099c:	990d      	ldr	r1, [sp, #52]	; 0x34
   1099e:	f007 fba6 	bl	180ee <f_opendir>
   109a2:	4603      	mov	r3, r0
   109a4:	b170      	cbz	r0, 109c4 <lsHandler(str&, CharDev&, void*)+0x5c>
   109a6:	4620      	mov	r0, r4
   109a8:	4953      	ldr	r1, [pc, #332]	; (10af8 <lsHandler(str&, CharDev&, void*)+0x190>)
   109aa:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   109ac:	f00a f96d 	bl	1ac8a <CharDev::printf(char const*, ...)>
   109b0:	e099      	b.n	10ae6 <lsHandler(str&, CharDev&, void*)+0x17e>
   109b2:	2380      	movs	r3, #128	; 0x80
   109b4:	a817      	add	r0, sp, #92	; 0x5c
   109b6:	a90f      	add	r1, sp, #60	; 0x3c
   109b8:	9615      	str	r6, [sp, #84]	; 0x54
   109ba:	9316      	str	r3, [sp, #88]	; 0x58
   109bc:	f007 fbd6 	bl	1816c <f_readdir>
   109c0:	3d01      	subs	r5, #1
   109c2:	b910      	cbnz	r0, 109ca <lsHandler(str&, CharDev&, void*)+0x62>
   109c4:	2d00      	cmp	r5, #0
   109c6:	ae20      	add	r6, sp, #128	; 0x80
   109c8:	dcf3      	bgt.n	109b2 <lsHandler(str&, CharDev&, void*)+0x4a>
   109ca:	4620      	mov	r0, r4
   109cc:	494b      	ldr	r1, [pc, #300]	; (10afc <lsHandler(str&, CharDev&, void*)+0x194>)
   109ce:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   109d0:	f00a f95b 	bl	1ac8a <CharDev::printf(char const*, ...)>
   109d4:	2500      	movs	r5, #0
   109d6:	462f      	mov	r7, r5
   109d8:	2380      	movs	r3, #128	; 0x80
   109da:	a817      	add	r0, sp, #92	; 0x5c
   109dc:	a90f      	add	r1, sp, #60	; 0x3c
   109de:	9615      	str	r6, [sp, #84]	; 0x54
   109e0:	9316      	str	r3, [sp, #88]	; 0x58
   109e2:	f007 fbc3 	bl	1816c <f_readdir>
   109e6:	2800      	cmp	r0, #0
   109e8:	d165      	bne.n	10ab6 <lsHandler(str&, CharDev&, void*)+0x14e>
   109ea:	f99d 3045 	ldrsb.w	r3, [sp, #69]	; 0x45
   109ee:	2b00      	cmp	r3, #0
   109f0:	d061      	beq.n	10ab6 <lsHandler(str&, CharDev&, void*)+0x14e>
   109f2:	f89d 0044 	ldrb.w	r0, [sp, #68]	; 0x44
   109f6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   109f8:	f010 0f10 	tst.w	r0, #16
   109fc:	d002      	beq.n	10a04 <lsHandler(str&, CharDev&, void*)+0x9c>
   109fe:	3501      	adds	r5, #1
   10a00:	2244      	movs	r2, #68	; 0x44
   10a02:	e004      	b.n	10a0e <lsHandler(str&, CharDev&, void*)+0xa6>
   10a04:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   10a06:	3701      	adds	r7, #1
   10a08:	441a      	add	r2, r3
   10a0a:	920c      	str	r2, [sp, #48]	; 0x30
   10a0c:	222d      	movs	r2, #45	; 0x2d
   10a0e:	f010 0f01 	tst.w	r0, #1
   10a12:	bf0c      	ite	eq
   10a14:	f04f 0e2d 	moveq.w	lr, #45	; 0x2d
   10a18:	f04f 0e52 	movne.w	lr, #82	; 0x52
   10a1c:	f010 0f02 	tst.w	r0, #2
   10a20:	bf0c      	ite	eq
   10a22:	f04f 092d 	moveq.w	r9, #45	; 0x2d
   10a26:	f04f 0948 	movne.w	r9, #72	; 0x48
   10a2a:	f010 0f04 	tst.w	r0, #4
   10a2e:	f8bd 1040 	ldrh.w	r1, [sp, #64]	; 0x40
   10a32:	bf0c      	ite	eq
   10a34:	f04f 082d 	moveq.w	r8, #45	; 0x2d
   10a38:	f04f 0853 	movne.w	r8, #83	; 0x53
   10a3c:	f010 0f20 	tst.w	r0, #32
   10a40:	bf0c      	ite	eq
   10a42:	f04f 0c2d 	moveq.w	ip, #45	; 0x2d
   10a46:	f04f 0c41 	movne.w	ip, #65	; 0x41
   10a4a:	f8cd c008 	str.w	ip, [sp, #8]
   10a4e:	ea4f 2c61 	mov.w	ip, r1, asr #9
   10a52:	f8bd 0042 	ldrh.w	r0, [sp, #66]	; 0x42
   10a56:	f20c 7cbc 	addw	ip, ip, #1980	; 0x7bc
   10a5a:	f8cd c00c 	str.w	ip, [sp, #12]
   10a5e:	f3c1 1c43 	ubfx	ip, r1, #5, #4
   10a62:	f001 011f 	and.w	r1, r1, #31
   10a66:	9105      	str	r1, [sp, #20]
   10a68:	9308      	str	r3, [sp, #32]
   10a6a:	12c1      	asrs	r1, r0, #11
   10a6c:	f10d 0345 	add.w	r3, sp, #69	; 0x45
   10a70:	f3c0 1045 	ubfx	r0, r0, #5, #6
   10a74:	f8cd c010 	str.w	ip, [sp, #16]
   10a78:	9106      	str	r1, [sp, #24]
   10a7a:	9007      	str	r0, [sp, #28]
   10a7c:	9309      	str	r3, [sp, #36]	; 0x24
   10a7e:	f8cd 9000 	str.w	r9, [sp]
   10a82:	4673      	mov	r3, lr
   10a84:	f8cd 8004 	str.w	r8, [sp, #4]
   10a88:	4620      	mov	r0, r4
   10a8a:	491d      	ldr	r1, [pc, #116]	; (10b00 <lsHandler(str&, CharDev&, void*)+0x198>)
   10a8c:	f00a f8fd 	bl	1ac8a <CharDev::printf(char const*, ...)>
   10a90:	4620      	mov	r0, r4
   10a92:	491c      	ldr	r1, [pc, #112]	; (10b04 <lsHandler(str&, CharDev&, void*)+0x19c>)
   10a94:	f04f 32ff 	mov.w	r2, #4294967295
   10a98:	f00a f8ab 	bl	1abf2 <CharDev::put(char const*, unsigned int)>
   10a9c:	4631      	mov	r1, r6
   10a9e:	4620      	mov	r0, r4
   10aa0:	f04f 32ff 	mov.w	r2, #4294967295
   10aa4:	f00a f8a5 	bl	1abf2 <CharDev::put(char const*, unsigned int)>
   10aa8:	4620      	mov	r0, r4
   10aaa:	4917      	ldr	r1, [pc, #92]	; (10b08 <lsHandler(str&, CharDev&, void*)+0x1a0>)
   10aac:	f04f 32ff 	mov.w	r2, #4294967295
   10ab0:	f00a f8b4 	bl	1ac1c <CharDev::putline(char const*, unsigned int)>
   10ab4:	e790      	b.n	109d8 <lsHandler(str&, CharDev&, void*)+0x70>
   10ab6:	9500      	str	r5, [sp, #0]
   10ab8:	ad40      	add	r5, sp, #256	; 0x100
   10aba:	f855 3dd0 	ldr.w	r3, [r5, #-208]!
   10abe:	4913      	ldr	r1, [pc, #76]	; (10b0c <lsHandler(str&, CharDev&, void*)+0x1a4>)
   10ac0:	463a      	mov	r2, r7
   10ac2:	4620      	mov	r0, r4
   10ac4:	f00a f8e1 	bl	1ac8a <CharDev::printf(char const*, ...)>
   10ac8:	980d      	ldr	r0, [sp, #52]	; 0x34
   10aca:	4629      	mov	r1, r5
   10acc:	aa0b      	add	r2, sp, #44	; 0x2c
   10ace:	f007 fb7c 	bl	181ca <f_getfree>
   10ad2:	b940      	cbnz	r0, 10ae6 <lsHandler(str&, CharDev&, void*)+0x17e>
   10ad4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   10ad6:	4620      	mov	r0, r4
   10ad8:	789a      	ldrb	r2, [r3, #2]
   10ada:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   10adc:	490c      	ldr	r1, [pc, #48]	; (10b10 <lsHandler(str&, CharDev&, void*)+0x1a8>)
   10ade:	435a      	muls	r2, r3
   10ae0:	0852      	lsrs	r2, r2, #1
   10ae2:	f00a f8d2 	bl	1ac8a <CharDev::printf(char const*, ...)>
   10ae6:	2001      	movs	r0, #1
   10ae8:	b041      	add	sp, #260	; 0x104
   10aea:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   10aee:	bf00      	nop
   10af0:	00025e2a 	.word	0x00025e2a
   10af4:	00024e2c 	.word	0x00024e2c
   10af8:	00024e2f 	.word	0x00024e2f
   10afc:	00024e53 	.word	0x00024e53
   10b00:	00024e6e 	.word	0x00024e6e
   10b04:	00024e9b 	.word	0x00024e9b
   10b08:	00025375 	.word	0x00025375
   10b0c:	00024e9f 	.word	0x00024e9f
   10b10:	00024ec9 	.word	0x00024ec9

00010b14 <mkdirHandler(str&, CharDev&, void*)>:
_Z12mkdirHandlerR3strR7CharDevPv():
   10b14:	b570      	push	{r4, r5, r6, lr}
   10b16:	460e      	mov	r6, r1
   10b18:	4605      	mov	r5, r0
   10b1a:	f008 ffb8 	bl	19a8e <str::operator()() const>
   10b1e:	4604      	mov	r4, r0
   10b20:	4628      	mov	r0, r5
   10b22:	f008 ffb4 	bl	19a8e <str::operator()() const>
   10b26:	f007 fc12 	bl	1834e <f_mkdir>
   10b2a:	4a06      	ldr	r2, [pc, #24]	; (10b44 <mkdirHandler(str&, CharDev&, void*)+0x30>)
   10b2c:	4b06      	ldr	r3, [pc, #24]	; (10b48 <mkdirHandler(str&, CharDev&, void*)+0x34>)
   10b2e:	4907      	ldr	r1, [pc, #28]	; (10b4c <mkdirHandler(str&, CharDev&, void*)+0x38>)
   10b30:	2800      	cmp	r0, #0
   10b32:	bf18      	it	ne
   10b34:	4613      	movne	r3, r2
   10b36:	4630      	mov	r0, r6
   10b38:	4622      	mov	r2, r4
   10b3a:	f00a f8a6 	bl	1ac8a <CharDev::printf(char const*, ...)>
   10b3e:	2001      	movs	r0, #1
   10b40:	bd70      	pop	{r4, r5, r6, pc}
   10b42:	bf00      	nop
   10b44:	00025089 	.word	0x00025089
   10b48:	0002507f 	.word	0x0002507f
   10b4c:	00024edd 	.word	0x00024edd

00010b50 <rmHandler(str&, CharDev&, void*)>:
_Z9rmHandlerR3strR7CharDevPv():
   10b50:	b570      	push	{r4, r5, r6, lr}
   10b52:	460e      	mov	r6, r1
   10b54:	4605      	mov	r5, r0
   10b56:	f008 ff9a 	bl	19a8e <str::operator()() const>
   10b5a:	4604      	mov	r4, r0
   10b5c:	4628      	mov	r0, r5
   10b5e:	f008 ff96 	bl	19a8e <str::operator()() const>
   10b62:	f007 fb97 	bl	18294 <f_unlink>
   10b66:	4a06      	ldr	r2, [pc, #24]	; (10b80 <rmHandler(str&, CharDev&, void*)+0x30>)
   10b68:	4b06      	ldr	r3, [pc, #24]	; (10b84 <rmHandler(str&, CharDev&, void*)+0x34>)
   10b6a:	4907      	ldr	r1, [pc, #28]	; (10b88 <rmHandler(str&, CharDev&, void*)+0x38>)
   10b6c:	2800      	cmp	r0, #0
   10b6e:	bf18      	it	ne
   10b70:	4613      	movne	r3, r2
   10b72:	4630      	mov	r0, r6
   10b74:	4622      	mov	r2, r4
   10b76:	f00a f888 	bl	1ac8a <CharDev::printf(char const*, ...)>
   10b7a:	2001      	movs	r0, #1
   10b7c:	bd70      	pop	{r4, r5, r6, pc}
   10b7e:	bf00      	nop
   10b80:	00025089 	.word	0x00025089
   10b84:	0002507f 	.word	0x0002507f
   10b88:	00024ef9 	.word	0x00024ef9

00010b8c <mvHandler(str&, CharDev&, void*)>:
_Z9mvHandlerR3strR7CharDevPv():
   10b8c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   10b8e:	ab03      	add	r3, sp, #12
   10b90:	2400      	movs	r4, #0
   10b92:	9300      	str	r3, [sp, #0]
   10b94:	460e      	mov	r6, r1
   10b96:	2202      	movs	r2, #2
   10b98:	490f      	ldr	r1, [pc, #60]	; (10bd8 <mvHandler(str&, CharDev&, void*)+0x4c>)
   10b9a:	ab02      	add	r3, sp, #8
   10b9c:	9402      	str	r4, [sp, #8]
   10b9e:	9403      	str	r4, [sp, #12]
   10ba0:	f008 fdea 	bl	19778 <str::tokenize(char const*, int, ...)>
   10ba4:	2802      	cmp	r0, #2
   10ba6:	d114      	bne.n	10bd2 <mvHandler(str&, CharDev&, void*)+0x46>
   10ba8:	9d02      	ldr	r5, [sp, #8]
   10baa:	9c03      	ldr	r4, [sp, #12]
   10bac:	4628      	mov	r0, r5
   10bae:	4621      	mov	r1, r4
   10bb0:	f007 fc78 	bl	184a4 <f_rename>
   10bb4:	4b09      	ldr	r3, [pc, #36]	; (10bdc <mvHandler(str&, CharDev&, void*)+0x50>)
   10bb6:	4a0a      	ldr	r2, [pc, #40]	; (10be0 <mvHandler(str&, CharDev&, void*)+0x54>)
   10bb8:	490a      	ldr	r1, [pc, #40]	; (10be4 <mvHandler(str&, CharDev&, void*)+0x58>)
   10bba:	2800      	cmp	r0, #0
   10bbc:	bf14      	ite	ne
   10bbe:	4610      	movne	r0, r2
   10bc0:	4618      	moveq	r0, r3
   10bc2:	9000      	str	r0, [sp, #0]
   10bc4:	462a      	mov	r2, r5
   10bc6:	4630      	mov	r0, r6
   10bc8:	4623      	mov	r3, r4
   10bca:	f00a f85e 	bl	1ac8a <CharDev::printf(char const*, ...)>
   10bce:	2001      	movs	r0, #1
   10bd0:	e000      	b.n	10bd4 <mvHandler(str&, CharDev&, void*)+0x48>
   10bd2:	4620      	mov	r0, r4
   10bd4:	b004      	add	sp, #16
   10bd6:	bd70      	pop	{r4, r5, r6, pc}
   10bd8:	00025e2a 	.word	0x00025e2a
   10bdc:	0002507f 	.word	0x0002507f
   10be0:	00025089 	.word	0x00025089
   10be4:	00024f0b 	.word	0x00024f0b

00010be8 <newFileHandler(str&, CharDev&, void*)>:
_Z14newFileHandlerR3strR7CharDevPv():
   10be8:	b530      	push	{r4, r5, lr}
   10bea:	f5ad 7d0d 	sub.w	sp, sp, #564	; 0x234
   10bee:	460c      	mov	r4, r1
   10bf0:	4605      	mov	r5, r0
   10bf2:	f008 ff4c 	bl	19a8e <str::operator()() const>
   10bf6:	220a      	movs	r2, #10
   10bf8:	4601      	mov	r1, r0
   10bfa:	a803      	add	r0, sp, #12
   10bfc:	f006 ff44 	bl	17a88 <f_open>
   10c00:	b140      	cbz	r0, 10c14 <newFileHandler(str&, CharDev&, void*)+0x2c>
   10c02:	4628      	mov	r0, r5
   10c04:	f008 ff43 	bl	19a8e <str::operator()() const>
   10c08:	491f      	ldr	r1, [pc, #124]	; (10c88 <newFileHandler(str&, CharDev&, void*)+0xa0>)
   10c0a:	4602      	mov	r2, r0
   10c0c:	4620      	mov	r0, r4
   10c0e:	f00a f83c 	bl	1ac8a <CharDev::printf(char const*, ...)>
   10c12:	e035      	b.n	10c80 <newFileHandler(str&, CharDev&, void*)+0x98>
   10c14:	f88d 0007 	strb.w	r0, [sp, #7]
   10c18:	9002      	str	r0, [sp, #8]
   10c1a:	491c      	ldr	r1, [pc, #112]	; (10c8c <newFileHandler(str&, CharDev&, void*)+0xa4>)
   10c1c:	4620      	mov	r0, r4
   10c1e:	227e      	movs	r2, #126	; 0x7e
   10c20:	f242 7310 	movw	r3, #10000	; 0x2710
   10c24:	f00a f831 	bl	1ac8a <CharDev::printf(char const*, ...)>
   10c28:	4919      	ldr	r1, [pc, #100]	; (10c90 <newFileHandler(str&, CharDev&, void*)+0xa8>)
   10c2a:	4620      	mov	r0, r4
   10c2c:	f00a f82d 	bl	1ac8a <CharDev::printf(char const*, ...)>
   10c30:	6823      	ldr	r3, [r4, #0]
   10c32:	4620      	mov	r0, r4
   10c34:	681b      	ldr	r3, [r3, #0]
   10c36:	f10d 0107 	add.w	r1, sp, #7
   10c3a:	f242 7210 	movw	r2, #10000	; 0x2710
   10c3e:	4798      	blx	r3
   10c40:	b118      	cbz	r0, 10c4a <newFileHandler(str&, CharDev&, void*)+0x62>
   10c42:	f99d 3007 	ldrsb.w	r3, [sp, #7]
   10c46:	2b7e      	cmp	r3, #126	; 0x7e
   10c48:	d103      	bne.n	10c52 <newFileHandler(str&, CharDev&, void*)+0x6a>
   10c4a:	a803      	add	r0, sp, #12
   10c4c:	f007 f990 	bl	17f70 <f_close>
   10c50:	e016      	b.n	10c80 <newFileHandler(str&, CharDev&, void*)+0x98>
   10c52:	a803      	add	r0, sp, #12
   10c54:	f10d 0107 	add.w	r1, sp, #7
   10c58:	2201      	movs	r2, #1
   10c5a:	ab02      	add	r3, sp, #8
   10c5c:	f007 f864 	bl	17d28 <f_write>
   10c60:	b910      	cbnz	r0, 10c68 <newFileHandler(str&, CharDev&, void*)+0x80>
   10c62:	9b02      	ldr	r3, [sp, #8]
   10c64:	2b01      	cmp	r3, #1
   10c66:	d002      	beq.n	10c6e <newFileHandler(str&, CharDev&, void*)+0x86>
   10c68:	4620      	mov	r0, r4
   10c6a:	490a      	ldr	r1, [pc, #40]	; (10c94 <newFileHandler(str&, CharDev&, void*)+0xac>)
   10c6c:	e7de      	b.n	10c2c <newFileHandler(str&, CharDev&, void*)+0x44>
   10c6e:	6823      	ldr	r3, [r4, #0]
   10c70:	4620      	mov	r0, r4
   10c72:	685b      	ldr	r3, [r3, #4]
   10c74:	f99d 1007 	ldrsb.w	r1, [sp, #7]
   10c78:	f04f 32ff 	mov.w	r2, #4294967295
   10c7c:	4798      	blx	r3
   10c7e:	e7d7      	b.n	10c30 <newFileHandler(str&, CharDev&, void*)+0x48>
   10c80:	2001      	movs	r0, #1
   10c82:	f50d 7d0d 	add.w	sp, sp, #564	; 0x234
   10c86:	bd30      	pop	{r4, r5, pc}
   10c88:	00024f23 	.word	0x00024f23
   10c8c:	00024f4a 	.word	0x00024f4a
   10c90:	00024f82 	.word	0x00024f82
   10c94:	00024fa2 	.word	0x00024fa2

00010c98 <dcpHandler(str&, CharDev&, void*)>:
_Z10dcpHandlerR3strR7CharDevPv():
   10c98:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   10c9c:	f5ad 7d40 	sub.w	sp, sp, #768	; 0x300
   10ca0:	2300      	movs	r3, #0
   10ca2:	ac04      	add	r4, sp, #16
   10ca4:	6023      	str	r3, [r4, #0]
   10ca6:	9303      	str	r3, [sp, #12]
   10ca8:	460d      	mov	r5, r1
   10caa:	9400      	str	r4, [sp, #0]
   10cac:	4941      	ldr	r1, [pc, #260]	; (10db4 <dcpHandler(str&, CharDev&, void*)+0x11c>)
   10cae:	2202      	movs	r2, #2
   10cb0:	ab03      	add	r3, sp, #12
   10cb2:	f008 fd61 	bl	19778 <str::tokenize(char const*, int, ...)>
   10cb6:	2802      	cmp	r0, #2
   10cb8:	d006      	beq.n	10cc8 <dcpHandler(str&, CharDev&, void*)+0x30>
   10cba:	4628      	mov	r0, r5
   10cbc:	493e      	ldr	r1, [pc, #248]	; (10db8 <dcpHandler(str&, CharDev&, void*)+0x120>)
   10cbe:	f04f 32ff 	mov.w	r2, #4294967295
   10cc2:	f009 ffab 	bl	1ac1c <CharDev::putline(char const*, unsigned int)>
   10cc6:	e06f      	b.n	10da8 <dcpHandler(str&, CharDev&, void*)+0x110>
   10cc8:	a817      	add	r0, sp, #92	; 0x5c
   10cca:	6821      	ldr	r1, [r4, #0]
   10ccc:	f007 fa0f 	bl	180ee <f_opendir>
   10cd0:	b118      	cbz	r0, 10cda <dcpHandler(str&, CharDev&, void*)+0x42>
   10cd2:	4628      	mov	r0, r5
   10cd4:	4939      	ldr	r1, [pc, #228]	; (10dbc <dcpHandler(str&, CharDev&, void*)+0x124>)
   10cd6:	6822      	ldr	r2, [r4, #0]
   10cd8:	e007      	b.n	10cea <dcpHandler(str&, CharDev&, void*)+0x52>
   10cda:	a817      	add	r0, sp, #92	; 0x5c
   10cdc:	9903      	ldr	r1, [sp, #12]
   10cde:	f007 fa06 	bl	180ee <f_opendir>
   10ce2:	b128      	cbz	r0, 10cf0 <dcpHandler(str&, CharDev&, void*)+0x58>
   10ce4:	4936      	ldr	r1, [pc, #216]	; (10dc0 <dcpHandler(str&, CharDev&, void*)+0x128>)
   10ce6:	9a03      	ldr	r2, [sp, #12]
   10ce8:	4628      	mov	r0, r5
   10cea:	f009 ffce 	bl	1ac8a <CharDev::printf(char const*, ...)>
   10cee:	e05b      	b.n	10da8 <dcpHandler(str&, CharDev&, void*)+0x110>
   10cf0:	a940      	add	r1, sp, #256	; 0x100
   10cf2:	f44f 7280 	mov.w	r2, #256	; 0x100
   10cf6:	a805      	add	r0, sp, #20
   10cf8:	f008 fd00 	bl	196fc <str::str(char*, int)>
   10cfc:	a80a      	add	r0, sp, #40	; 0x28
   10cfe:	a980      	add	r1, sp, #512	; 0x200
   10d00:	f44f 7280 	mov.w	r2, #256	; 0x100
   10d04:	f008 fcfa 	bl	196fc <str::str(char*, int)>
   10d08:	ab20      	add	r3, sp, #128	; 0x80
   10d0a:	9315      	str	r3, [sp, #84]	; 0x54
   10d0c:	a817      	add	r0, sp, #92	; 0x5c
   10d0e:	2380      	movs	r3, #128	; 0x80
   10d10:	a90f      	add	r1, sp, #60	; 0x3c
   10d12:	9316      	str	r3, [sp, #88]	; 0x58
   10d14:	f007 fa2a 	bl	1816c <f_readdir>
   10d18:	2800      	cmp	r0, #0
   10d1a:	d13f      	bne.n	10d9c <dcpHandler(str&, CharDev&, void*)+0x104>
   10d1c:	f99d 3045 	ldrsb.w	r3, [sp, #69]	; 0x45
   10d20:	2b00      	cmp	r3, #0
   10d22:	d03b      	beq.n	10d9c <dcpHandler(str&, CharDev&, void*)+0x104>
   10d24:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
   10d28:	f003 0310 	and.w	r3, r3, #16
   10d2c:	f003 06ff 	and.w	r6, r3, #255	; 0xff
   10d30:	2b00      	cmp	r3, #0
   10d32:	d1e9      	bne.n	10d08 <dcpHandler(str&, CharDev&, void*)+0x70>
   10d34:	9a03      	ldr	r2, [sp, #12]
   10d36:	f10d 0345 	add.w	r3, sp, #69	; 0x45
   10d3a:	a805      	add	r0, sp, #20
   10d3c:	4921      	ldr	r1, [pc, #132]	; (10dc4 <dcpHandler(str&, CharDev&, void*)+0x12c>)
   10d3e:	f008 fef0 	bl	19b22 <str::printf(char const*, ...)>
   10d42:	6822      	ldr	r2, [r4, #0]
   10d44:	f10d 0345 	add.w	r3, sp, #69	; 0x45
   10d48:	491e      	ldr	r1, [pc, #120]	; (10dc4 <dcpHandler(str&, CharDev&, void*)+0x12c>)
   10d4a:	a80a      	add	r0, sp, #40	; 0x28
   10d4c:	f008 fee9 	bl	19b22 <str::printf(char const*, ...)>
   10d50:	a805      	add	r0, sp, #20
   10d52:	f008 fe9c 	bl	19a8e <str::operator()() const>
   10d56:	4681      	mov	r9, r0
   10d58:	a80a      	add	r0, sp, #40	; 0x28
   10d5a:	f008 fe98 	bl	19a8e <str::operator()() const>
   10d5e:	4680      	mov	r8, r0
   10d60:	a805      	add	r0, sp, #20
   10d62:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
   10d64:	f008 fe93 	bl	19a8e <str::operator()() const>
   10d68:	4682      	mov	sl, r0
   10d6a:	a80a      	add	r0, sp, #40	; 0x28
   10d6c:	f008 fe8f 	bl	19a8e <str::operator()() const>
   10d70:	4632      	mov	r2, r6
   10d72:	4601      	mov	r1, r0
   10d74:	4633      	mov	r3, r6
   10d76:	9600      	str	r6, [sp, #0]
   10d78:	4650      	mov	r0, sl
   10d7a:	f004 fe31 	bl	159e0 <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)>
   10d7e:	4b12      	ldr	r3, [pc, #72]	; (10dc8 <dcpHandler(str&, CharDev&, void*)+0x130>)
   10d80:	4a12      	ldr	r2, [pc, #72]	; (10dcc <dcpHandler(str&, CharDev&, void*)+0x134>)
   10d82:	9700      	str	r7, [sp, #0]
   10d84:	2800      	cmp	r0, #0
   10d86:	bf14      	ite	ne
   10d88:	4610      	movne	r0, r2
   10d8a:	4618      	moveq	r0, r3
   10d8c:	9001      	str	r0, [sp, #4]
   10d8e:	4910      	ldr	r1, [pc, #64]	; (10dd0 <dcpHandler(str&, CharDev&, void*)+0x138>)
   10d90:	4628      	mov	r0, r5
   10d92:	464a      	mov	r2, r9
   10d94:	4643      	mov	r3, r8
   10d96:	f009 ff78 	bl	1ac8a <CharDev::printf(char const*, ...)>
   10d9a:	e7b5      	b.n	10d08 <dcpHandler(str&, CharDev&, void*)+0x70>
   10d9c:	a80a      	add	r0, sp, #40	; 0x28
   10d9e:	f008 fcc2 	bl	19726 <str::~str()>
   10da2:	a805      	add	r0, sp, #20
   10da4:	f008 fcbf 	bl	19726 <str::~str()>
   10da8:	2001      	movs	r0, #1
   10daa:	f50d 7d40 	add.w	sp, sp, #768	; 0x300
   10dae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   10db2:	bf00      	nop
   10db4:	00025e2a 	.word	0x00025e2a
   10db8:	00024fc9 	.word	0x00024fc9
   10dbc:	0002500e 	.word	0x0002500e
   10dc0:	00025033 	.word	0x00025033
   10dc4:	00025053 	.word	0x00025053
   10dc8:	0002507f 	.word	0x0002507f
   10dcc:	00025089 	.word	0x00025089
   10dd0:	00025059 	.word	0x00025059

00010dd4 <storageHandler(str&, CharDev&, void*)>:
_Z14storageHandlerR3strR7CharDevPv():
   10dd4:	b570      	push	{r4, r5, r6, lr}
   10dd6:	460c      	mov	r4, r1
   10dd8:	4921      	ldr	r1, [pc, #132]	; (10e60 <storageHandler(str&, CharDev&, void*)+0x8c>)
   10dda:	4605      	mov	r5, r0
   10ddc:	f008 fe55 	bl	19a8a <str::operator==(char const*) const>
   10de0:	4606      	mov	r6, r0
   10de2:	b128      	cbz	r0, 10df0 <storageHandler(str&, CharDev&, void*)+0x1c>
   10de4:	f7ff fb98 	bl	10518 <Storage::getSDDrive()>
   10de8:	2100      	movs	r1, #0
   10dea:	f200 2035 	addw	r0, r0, #565	; 0x235
   10dee:	e009      	b.n	10e04 <storageHandler(str&, CharDev&, void*)+0x30>
   10df0:	4628      	mov	r0, r5
   10df2:	491c      	ldr	r1, [pc, #112]	; (10e64 <storageHandler(str&, CharDev&, void*)+0x90>)
   10df4:	f008 fe49 	bl	19a8a <str::operator==(char const*) const>
   10df8:	b150      	cbz	r0, 10e10 <storageHandler(str&, CharDev&, void*)+0x3c>
   10dfa:	f7ff fb69 	bl	104d0 <Storage::getFlashDrive()>
   10dfe:	4631      	mov	r1, r6
   10e00:	f200 2035 	addw	r0, r0, #565	; 0x235
   10e04:	460a      	mov	r2, r1
   10e06:	f007 fbdd 	bl	185c4 <f_mkfs>
   10e0a:	4b17      	ldr	r3, [pc, #92]	; (10e68 <storageHandler(str&, CharDev&, void*)+0x94>)
   10e0c:	4917      	ldr	r1, [pc, #92]	; (10e6c <storageHandler(str&, CharDev&, void*)+0x98>)
   10e0e:	e01c      	b.n	10e4a <storageHandler(str&, CharDev&, void*)+0x76>
   10e10:	4628      	mov	r0, r5
   10e12:	4917      	ldr	r1, [pc, #92]	; (10e70 <storageHandler(str&, CharDev&, void*)+0x9c>)
   10e14:	f008 fe39 	bl	19a8a <str::operator==(char const*) const>
   10e18:	b148      	cbz	r0, 10e2e <storageHandler(str&, CharDev&, void*)+0x5a>
   10e1a:	f7ff fb7d 	bl	10518 <Storage::getSDDrive()>
   10e1e:	2201      	movs	r2, #1
   10e20:	f200 2135 	addw	r1, r0, #565	; 0x235
   10e24:	f006 fdf2 	bl	17a0c <f_mount>
   10e28:	4b12      	ldr	r3, [pc, #72]	; (10e74 <storageHandler(str&, CharDev&, void*)+0xa0>)
   10e2a:	4913      	ldr	r1, [pc, #76]	; (10e78 <storageHandler(str&, CharDev&, void*)+0xa4>)
   10e2c:	e00d      	b.n	10e4a <storageHandler(str&, CharDev&, void*)+0x76>
   10e2e:	4628      	mov	r0, r5
   10e30:	4912      	ldr	r1, [pc, #72]	; (10e7c <storageHandler(str&, CharDev&, void*)+0xa8>)
   10e32:	f008 fe2a 	bl	19a8a <str::operator==(char const*) const>
   10e36:	b188      	cbz	r0, 10e5c <storageHandler(str&, CharDev&, void*)+0x88>
   10e38:	f7ff fb4a 	bl	104d0 <Storage::getFlashDrive()>
   10e3c:	2201      	movs	r2, #1
   10e3e:	f200 2135 	addw	r1, r0, #565	; 0x235
   10e42:	f006 fde3 	bl	17a0c <f_mount>
   10e46:	4b0e      	ldr	r3, [pc, #56]	; (10e80 <storageHandler(str&, CharDev&, void*)+0xac>)
   10e48:	490e      	ldr	r1, [pc, #56]	; (10e84 <storageHandler(str&, CharDev&, void*)+0xb0>)
   10e4a:	2800      	cmp	r0, #0
   10e4c:	bf08      	it	eq
   10e4e:	4619      	moveq	r1, r3
   10e50:	f04f 32ff 	mov.w	r2, #4294967295
   10e54:	4620      	mov	r0, r4
   10e56:	f009 fee1 	bl	1ac1c <CharDev::putline(char const*, unsigned int)>
   10e5a:	2001      	movs	r0, #1
   10e5c:	bd70      	pop	{r4, r5, r6, pc}
   10e5e:	bf00      	nop
   10e60:	000250e0 	.word	0x000250e0
   10e64:	000250ea 	.word	0x000250ea
   10e68:	00025078 	.word	0x00025078
   10e6c:	00025082 	.word	0x00025082
   10e70:	000250f7 	.word	0x000250f7
   10e74:	0002508f 	.word	0x0002508f
   10e78:	0002509f 	.word	0x0002509f
   10e7c:	00025100 	.word	0x00025100
   10e80:	000250b6 	.word	0x000250b6
   10e84:	000250c4 	.word	0x000250c4

00010e88 <rebootHandler(str&, CharDev&, void*)>:
_Z13rebootHandlerR3strR7CharDevPv():
   10e88:	b508      	push	{r3, lr}
   10e8a:	4608      	mov	r0, r1
   10e8c:	f04f 32ff 	mov.w	r2, #4294967295
   10e90:	4908      	ldr	r1, [pc, #32]	; (10eb4 <rebootHandler(str&, CharDev&, void*)+0x2c>)
   10e92:	f009 fec3 	bl	1ac1c <CharDev::putline(char const*, unsigned int)>
   10e96:	f008 f879 	bl	18f8c <logger_send_flush_request>
   10e9a:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
   10e9e:	f00b f815 	bl	1becc <vTaskDelay>
   10ea2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
   10ea6:	22aa      	movs	r2, #170	; 0xaa
   10ea8:	721a      	strb	r2, [r3, #8]
   10eaa:	2200      	movs	r2, #0
   10eac:	701a      	strb	r2, [r3, #0]
   10eae:	2001      	movs	r0, #1
   10eb0:	bd08      	pop	{r3, pc}
   10eb2:	bf00      	nop
   10eb4:	00026570 	.word	0x00026570

00010eb8 <learnIrHandler(str&, CharDev&, void*)>:
_Z14learnIrHandlerR3strR7CharDevPv():
   10eb8:	b510      	push	{r4, lr}
   10eba:	2001      	movs	r0, #1
   10ebc:	460c      	mov	r4, r1
   10ebe:	f008 fc11 	bl	196e4 <scheduler_task::getSharedObject(unsigned char)>
   10ec2:	b138      	cbz	r0, 10ed4 <learnIrHandler(str&, CharDev&, void*)+0x1c>
   10ec4:	2100      	movs	r1, #0
   10ec6:	460a      	mov	r2, r1
   10ec8:	460b      	mov	r3, r1
   10eca:	f00a fb81 	bl	1b5d0 <xQueueGenericSend>
   10ece:	4620      	mov	r0, r4
   10ed0:	4904      	ldr	r1, [pc, #16]	; (10ee4 <learnIrHandler(str&, CharDev&, void*)+0x2c>)
   10ed2:	e001      	b.n	10ed8 <learnIrHandler(str&, CharDev&, void*)+0x20>
   10ed4:	4904      	ldr	r1, [pc, #16]	; (10ee8 <learnIrHandler(str&, CharDev&, void*)+0x30>)
   10ed6:	4620      	mov	r0, r4
   10ed8:	f04f 32ff 	mov.w	r2, #4294967295
   10edc:	f009 fe9e 	bl	1ac1c <CharDev::putline(char const*, unsigned int)>
   10ee0:	2001      	movs	r0, #1
   10ee2:	bd10      	pop	{r4, pc}
   10ee4:	0002510c 	.word	0x0002510c
   10ee8:	00025122 	.word	0x00025122

00010eec <SingletonTemplate<I2C2>::getInstance()>:
_ZN17SingletonTemplateI4I2C2E11getInstanceEv():
   10eec:	b538      	push	{r3, r4, r5, lr}
   10eee:	4c06      	ldr	r4, [pc, #24]	; (10f08 <SingletonTemplate<I2C2>::getInstance()+0x1c>)
   10ef0:	6823      	ldr	r3, [r4, #0]
   10ef2:	b933      	cbnz	r3, 10f02 <SingletonTemplate<I2C2>::getInstance()+0x16>
   10ef4:	201c      	movs	r0, #28
   10ef6:	f7ff f9bb 	bl	10270 <operator new(unsigned int)>
   10efa:	4605      	mov	r5, r0
   10efc:	f009 faba 	bl	1a474 <I2C2::I2C2()>
   10f00:	6025      	str	r5, [r4, #0]
   10f02:	6820      	ldr	r0, [r4, #0]
   10f04:	bd38      	pop	{r3, r4, r5, pc}
   10f06:	bf00      	nop
   10f08:	2007c210 	.word	0x2007c210

00010f0c <i2cIoHandler(str&, CharDev&, void*)>:
_Z12i2cIoHandlerR3strR7CharDevPv():
   10f0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10f10:	460c      	mov	r4, r1
   10f12:	b0c7      	sub	sp, #284	; 0x11c
   10f14:	4951      	ldr	r1, [pc, #324]	; (1105c <i2cIoHandler(str&, CharDev&, void*)+0x150>)
   10f16:	4680      	mov	r8, r0
   10f18:	f008 fcda 	bl	198d0 <str::beginsWithIgnoreCase(char const*) const>
   10f1c:	4950      	ldr	r1, [pc, #320]	; (11060 <i2cIoHandler(str&, CharDev&, void*)+0x154>)
   10f1e:	4682      	mov	sl, r0
   10f20:	4640      	mov	r0, r8
   10f22:	f008 fcd5 	bl	198d0 <str::beginsWithIgnoreCase(char const*) const>
   10f26:	494f      	ldr	r1, [pc, #316]	; (11064 <i2cIoHandler(str&, CharDev&, void*)+0x158>)
   10f28:	4683      	mov	fp, r0
   10f2a:	4640      	mov	r0, r8
   10f2c:	f008 fcd0 	bl	198d0 <str::beginsWithIgnoreCase(char const*) const>
   10f30:	2600      	movs	r6, #0
   10f32:	af04      	add	r7, sp, #16
   10f34:	ad05      	add	r5, sp, #20
   10f36:	4681      	mov	r9, r0
   10f38:	9602      	str	r6, [sp, #8]
   10f3a:	9603      	str	r6, [sp, #12]
   10f3c:	603e      	str	r6, [r7, #0]
   10f3e:	602e      	str	r6, [r5, #0]
   10f40:	f1ba 0f00 	cmp.w	sl, #0
   10f44:	d040      	beq.n	10fc8 <i2cIoHandler(str&, CharDev&, void*)+0xbc>
   10f46:	9500      	str	r5, [sp, #0]
   10f48:	4640      	mov	r0, r8
   10f4a:	4947      	ldr	r1, [pc, #284]	; (11068 <i2cIoHandler(str&, CharDev&, void*)+0x15c>)
   10f4c:	aa02      	add	r2, sp, #8
   10f4e:	ab03      	add	r3, sp, #12
   10f50:	f008 fc04 	bl	1975c <str::scanf(char const*, ...)>
   10f54:	2801      	cmp	r0, #1
   10f56:	dc07      	bgt.n	10f68 <i2cIoHandler(str&, CharDev&, void*)+0x5c>
   10f58:	4620      	mov	r0, r4
   10f5a:	4944      	ldr	r1, [pc, #272]	; (1106c <i2cIoHandler(str&, CharDev&, void*)+0x160>)
   10f5c:	f04f 32ff 	mov.w	r2, #4294967295
   10f60:	f009 fe5c 	bl	1ac1c <CharDev::putline(char const*, unsigned int)>
   10f64:	4630      	mov	r0, r6
   10f66:	e075      	b.n	11054 <i2cIoHandler(str&, CharDev&, void*)+0x148>
   10f68:	682b      	ldr	r3, [r5, #0]
   10f6a:	af06      	add	r7, sp, #24
   10f6c:	2b00      	cmp	r3, #0
   10f6e:	bfd8      	it	le
   10f70:	2301      	movle	r3, #1
   10f72:	f04f 0100 	mov.w	r1, #0
   10f76:	f44f 7280 	mov.w	r2, #256	; 0x100
   10f7a:	4638      	mov	r0, r7
   10f7c:	bfd8      	it	le
   10f7e:	602b      	strle	r3, [r5, #0]
   10f80:	f00d fe6d 	bl	1ec5e <memset>
   10f84:	f7ff ffb2 	bl	10eec <SingletonTemplate<I2C2>::getInstance()>
   10f88:	682b      	ldr	r3, [r5, #0]
   10f8a:	f99d 1008 	ldrsb.w	r1, [sp, #8]
   10f8e:	f99d 200c 	ldrsb.w	r2, [sp, #12]
   10f92:	9300      	str	r3, [sp, #0]
   10f94:	463b      	mov	r3, r7
   10f96:	f009 ff38 	bl	1ae0a <I2C_Base::readRegisters(char, char, char*, unsigned int)>
   10f9a:	4a35      	ldr	r2, [pc, #212]	; (11070 <i2cIoHandler(str&, CharDev&, void*)+0x164>)
   10f9c:	4b35      	ldr	r3, [pc, #212]	; (11074 <i2cIoHandler(str&, CharDev&, void*)+0x168>)
   10f9e:	4936      	ldr	r1, [pc, #216]	; (11078 <i2cIoHandler(str&, CharDev&, void*)+0x16c>)
   10fa0:	2800      	cmp	r0, #0
   10fa2:	bf08      	it	eq
   10fa4:	4613      	moveq	r3, r2
   10fa6:	4620      	mov	r0, r4
   10fa8:	9a02      	ldr	r2, [sp, #8]
   10faa:	f009 fe6e 	bl	1ac8a <CharDev::printf(char const*, ...)>
   10fae:	2600      	movs	r6, #0
   10fb0:	682b      	ldr	r3, [r5, #0]
   10fb2:	429e      	cmp	r6, r3
   10fb4:	da4d      	bge.n	11052 <i2cIoHandler(str&, CharDev&, void*)+0x146>
   10fb6:	9a03      	ldr	r2, [sp, #12]
   10fb8:	5dbb      	ldrb	r3, [r7, r6]
   10fba:	4432      	add	r2, r6
   10fbc:	4620      	mov	r0, r4
   10fbe:	492f      	ldr	r1, [pc, #188]	; (1107c <i2cIoHandler(str&, CharDev&, void*)+0x170>)
   10fc0:	f009 fe63 	bl	1ac8a <CharDev::printf(char const*, ...)>
   10fc4:	3601      	adds	r6, #1
   10fc6:	e7f3      	b.n	10fb0 <i2cIoHandler(str&, CharDev&, void*)+0xa4>
   10fc8:	f1bb 0f00 	cmp.w	fp, #0
   10fcc:	d02a      	beq.n	11024 <i2cIoHandler(str&, CharDev&, void*)+0x118>
   10fce:	9700      	str	r7, [sp, #0]
   10fd0:	4640      	mov	r0, r8
   10fd2:	492b      	ldr	r1, [pc, #172]	; (11080 <i2cIoHandler(str&, CharDev&, void*)+0x174>)
   10fd4:	aa02      	add	r2, sp, #8
   10fd6:	ab03      	add	r3, sp, #12
   10fd8:	f008 fbc0 	bl	1975c <str::scanf(char const*, ...)>
   10fdc:	2803      	cmp	r0, #3
   10fde:	d007      	beq.n	10ff0 <i2cIoHandler(str&, CharDev&, void*)+0xe4>
   10fe0:	4620      	mov	r0, r4
   10fe2:	4928      	ldr	r1, [pc, #160]	; (11084 <i2cIoHandler(str&, CharDev&, void*)+0x178>)
   10fe4:	f04f 32ff 	mov.w	r2, #4294967295
   10fe8:	f009 fe18 	bl	1ac1c <CharDev::putline(char const*, unsigned int)>
   10fec:	4650      	mov	r0, sl
   10fee:	e031      	b.n	11054 <i2cIoHandler(str&, CharDev&, void*)+0x148>
   10ff0:	f7ff ff7c 	bl	10eec <SingletonTemplate<I2C2>::getInstance()>
   10ff4:	f99d 1008 	ldrsb.w	r1, [sp, #8]
   10ff8:	f99d 200c 	ldrsb.w	r2, [sp, #12]
   10ffc:	f997 3000 	ldrsb.w	r3, [r7]
   11000:	f009 ff18 	bl	1ae34 <I2C_Base::writeReg(char, char, char)>
   11004:	b140      	cbz	r0, 11018 <i2cIoHandler(str&, CharDev&, void*)+0x10c>
   11006:	9b03      	ldr	r3, [sp, #12]
   11008:	4620      	mov	r0, r4
   1100a:	9300      	str	r3, [sp, #0]
   1100c:	491e      	ldr	r1, [pc, #120]	; (11088 <i2cIoHandler(str&, CharDev&, void*)+0x17c>)
   1100e:	683a      	ldr	r2, [r7, #0]
   11010:	9b02      	ldr	r3, [sp, #8]
   11012:	f009 fe3a 	bl	1ac8a <CharDev::printf(char const*, ...)>
   11016:	e01c      	b.n	11052 <i2cIoHandler(str&, CharDev&, void*)+0x146>
   11018:	4620      	mov	r0, r4
   1101a:	491c      	ldr	r1, [pc, #112]	; (1108c <i2cIoHandler(str&, CharDev&, void*)+0x180>)
   1101c:	9a02      	ldr	r2, [sp, #8]
   1101e:	f009 fe34 	bl	1ac8a <CharDev::printf(char const*, ...)>
   11022:	e016      	b.n	11052 <i2cIoHandler(str&, CharDev&, void*)+0x146>
   11024:	b198      	cbz	r0, 1104e <i2cIoHandler(str&, CharDev&, void*)+0x142>
   11026:	2302      	movs	r3, #2
   11028:	9302      	str	r3, [sp, #8]
   1102a:	9b02      	ldr	r3, [sp, #8]
   1102c:	2bfe      	cmp	r3, #254	; 0xfe
   1102e:	dc0e      	bgt.n	1104e <i2cIoHandler(str&, CharDev&, void*)+0x142>
   11030:	f7ff ff5c 	bl	10eec <SingletonTemplate<I2C2>::getInstance()>
   11034:	f99d 1008 	ldrsb.w	r1, [sp, #8]
   11038:	f009 ff07 	bl	1ae4a <I2C_Base::checkDeviceResponse(char)>
   1103c:	b120      	cbz	r0, 11048 <i2cIoHandler(str&, CharDev&, void*)+0x13c>
   1103e:	4620      	mov	r0, r4
   11040:	4913      	ldr	r1, [pc, #76]	; (11090 <i2cIoHandler(str&, CharDev&, void*)+0x184>)
   11042:	9a02      	ldr	r2, [sp, #8]
   11044:	f009 fe21 	bl	1ac8a <CharDev::printf(char const*, ...)>
   11048:	9b02      	ldr	r3, [sp, #8]
   1104a:	3302      	adds	r3, #2
   1104c:	e7ec      	b.n	11028 <i2cIoHandler(str&, CharDev&, void*)+0x11c>
   1104e:	4648      	mov	r0, r9
   11050:	e000      	b.n	11054 <i2cIoHandler(str&, CharDev&, void*)+0x148>
   11052:	2001      	movs	r0, #1
   11054:	b047      	add	sp, #284	; 0x11c
   11056:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1105a:	bf00      	nop
   1105c:	00025f4d 	.word	0x00025f4d
   11060:	0002513c 	.word	0x0002513c
   11064:	00025142 	.word	0x00025142
   11068:	0002514b 	.word	0x0002514b
   1106c:	0002515a 	.word	0x0002515a
   11070:	00025089 	.word	0x00025089
   11074:	0002507f 	.word	0x0002507f
   11078:	0002517b 	.word	0x0002517b
   1107c:	000251a1 	.word	0x000251a1
   11080:	000251b5 	.word	0x000251b5
   11084:	000251c5 	.word	0x000251c5
   11088:	000251ec 	.word	0x000251ec
   1108c:	0002520c 	.word	0x0002520c
   11090:	00025229 	.word	0x00025229

00011094 <healthHandler(str&, CharDev&, void*)>:
_Z13healthHandlerR3strR7CharDevPv():
   11094:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11098:	4c5f      	ldr	r4, [pc, #380]	; (11218 <healthHandler(str&, CharDev&, void*)+0x184>)
   1109a:	b091      	sub	sp, #68	; 0x44
   1109c:	6823      	ldr	r3, [r4, #0]
   1109e:	460e      	mov	r6, r1
   110a0:	b933      	cbnz	r3, 110b0 <healthHandler(str&, CharDev&, void*)+0x1c>
   110a2:	202c      	movs	r0, #44	; 0x2c
   110a4:	f7ff f8e4 	bl	10270 <operator new(unsigned int)>
   110a8:	4605      	mov	r5, r0
   110aa:	f009 fd37 	bl	1ab1c <Uart0::Uart0()>
   110ae:	6025      	str	r5, [r4, #0]
   110b0:	f8d4 8000 	ldr.w	r8, [r4]
   110b4:	f7ff fa0c 	bl	104d0 <Storage::getFlashDrive()>
   110b8:	ac10      	add	r4, sp, #64	; 0x40
   110ba:	2500      	movs	r5, #0
   110bc:	f844 5d0c 	str.w	r5, [r4, #-12]!
   110c0:	f200 2035 	addw	r0, r0, #565	; 0x235
   110c4:	4621      	mov	r1, r4
   110c6:	aa0c      	add	r2, sp, #48	; 0x30
   110c8:	f007 f87f 	bl	181ca <f_getfree>
   110cc:	b948      	cbnz	r0, 110e2 <healthHandler(str&, CharDev&, void*)+0x4e>
   110ce:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   110d0:	9d0d      	ldr	r5, [sp, #52]	; 0x34
   110d2:	6997      	ldr	r7, [r2, #24]
   110d4:	7893      	ldrb	r3, [r2, #2]
   110d6:	3f02      	subs	r7, #2
   110d8:	435d      	muls	r5, r3
   110da:	435f      	muls	r7, r3
   110dc:	086d      	lsrs	r5, r5, #1
   110de:	087f      	lsrs	r7, r7, #1
   110e0:	e000      	b.n	110e4 <healthHandler(str&, CharDev&, void*)+0x50>
   110e2:	462f      	mov	r7, r5
   110e4:	4b4d      	ldr	r3, [pc, #308]	; (1121c <healthHandler(str&, CharDev&, void*)+0x188>)
   110e6:	681a      	ldr	r2, [r3, #0]
   110e8:	469a      	mov	sl, r3
   110ea:	b97a      	cbnz	r2, 1110c <healthHandler(str&, CharDev&, void*)+0x78>
   110ec:	200c      	movs	r0, #12
   110ee:	f7ff f8bf 	bl	10270 <operator new(unsigned int)>
   110f2:	4681      	mov	r9, r0
   110f4:	f7ff fefa 	bl	10eec <SingletonTemplate<I2C2>::getInstance()>
   110f8:	2390      	movs	r3, #144	; 0x90
   110fa:	f889 3004 	strb.w	r3, [r9, #4]
   110fe:	2300      	movs	r3, #0
   11100:	f8c9 0000 	str.w	r0, [r9]
   11104:	f8c9 3008 	str.w	r3, [r9, #8]
   11108:	f8ca 9000 	str.w	r9, [sl]
   1110c:	f8da 0000 	ldr.w	r0, [sl]
   11110:	f004 fc54 	bl	159bc <I2C_Temp::getFarenheit()>
   11114:	4681      	mov	r9, r0
   11116:	f00d f8e5 	bl	1e2e4 <__aeabi_f2iz>
   1111a:	4683      	mov	fp, r0
   1111c:	f00c fec8 	bl	1deb0 <__aeabi_i2f>
   11120:	4601      	mov	r1, r0
   11122:	4648      	mov	r0, r9
   11124:	f00c fe0e 	bl	1dd44 <__aeabi_fsub>
   11128:	493d      	ldr	r1, [pc, #244]	; (11220 <healthHandler(str&, CharDev&, void*)+0x18c>)
   1112a:	f00c ff15 	bl	1df58 <__aeabi_fmul>
   1112e:	f00d f8d9 	bl	1e2e4 <__aeabi_f2iz>
   11132:	900b      	str	r0, [sp, #44]	; 0x2c
   11134:	4620      	mov	r0, r4
   11136:	f00b fa9d 	bl	1c674 <sys_get_boot_time>
   1113a:	f005 fbc9 	bl	168d0 <flash_supports_metadata>
   1113e:	b340      	cbz	r0, 11192 <healthHandler(str&, CharDev&, void*)+0xfe>
   11140:	f009 fc7a 	bl	1aa38 <spi1_lock>
   11144:	f005 fbae 	bl	168a4 <flash_get_page_count>
   11148:	2400      	movs	r4, #0
   1114a:	4601      	mov	r1, r0
   1114c:	46a1      	mov	r9, r4
   1114e:	46a2      	mov	sl, r4
   11150:	428c      	cmp	r4, r1
   11152:	d00b      	beq.n	1116c <healthHandler(str&, CharDev&, void*)+0xd8>
   11154:	4620      	mov	r0, r4
   11156:	910a      	str	r1, [sp, #40]	; 0x28
   11158:	f005 fc08 	bl	1696c <flash_get_page_write_count>
   1115c:	4550      	cmp	r0, sl
   1115e:	bf94      	ite	ls
   11160:	4650      	movls	r0, sl
   11162:	46a1      	movhi	r9, r4
   11164:	990a      	ldr	r1, [sp, #40]	; 0x28
   11166:	3401      	adds	r4, #1
   11168:	4682      	mov	sl, r0
   1116a:	e7f1      	b.n	11150 <healthHandler(str&, CharDev&, void*)+0xbc>
   1116c:	f009 fc7c 	bl	1aa68 <spi1_unlock>
   11170:	2264      	movs	r2, #100	; 0x64
   11172:	fb02 f20a 	mul.w	r2, r2, sl
   11176:	492b      	ldr	r1, [pc, #172]	; (11224 <healthHandler(str&, CharDev&, void*)+0x190>)
   11178:	4630      	mov	r0, r6
   1117a:	fbb2 f2f1 	udiv	r2, r2, r1
   1117e:	f1c2 0264 	rsb	r2, r2, #100	; 0x64
   11182:	e88d 0604 	stmia.w	sp, {r2, r9, sl}
   11186:	4928      	ldr	r1, [pc, #160]	; (11228 <healthHandler(str&, CharDev&, void*)+0x194>)
   11188:	462a      	mov	r2, r5
   1118a:	463b      	mov	r3, r7
   1118c:	f009 fd7d 	bl	1ac8a <CharDev::printf(char const*, ...)>
   11190:	e005      	b.n	1119e <healthHandler(str&, CharDev&, void*)+0x10a>
   11192:	4630      	mov	r0, r6
   11194:	4925      	ldr	r1, [pc, #148]	; (1122c <healthHandler(str&, CharDev&, void*)+0x198>)
   11196:	462a      	mov	r2, r5
   11198:	463b      	mov	r3, r7
   1119a:	f009 fd76 	bl	1ac8a <CharDev::printf(char const*, ...)>
   1119e:	4c24      	ldr	r4, [pc, #144]	; (11230 <healthHandler(str&, CharDev&, void*)+0x19c>)
   111a0:	6823      	ldr	r3, [r4, #0]
   111a2:	b91b      	cbnz	r3, 111ac <healthHandler(str&, CharDev&, void*)+0x118>
   111a4:	2001      	movs	r0, #1
   111a6:	f7ff f863 	bl	10270 <operator new(unsigned int)>
   111aa:	6020      	str	r0, [r4, #0]
   111ac:	6820      	ldr	r0, [r4, #0]
   111ae:	f004 fbc8 	bl	15942 <Light_Sensor::getRawValue()>
   111b2:	4604      	mov	r4, r0
   111b4:	f009 fbc6 	bl	1a944 <rtc_get_date_time_str>
   111b8:	f89d 3039 	ldrb.w	r3, [sp, #57]	; 0x39
   111bc:	9001      	str	r0, [sp, #4]
   111be:	f003 030f 	and.w	r3, r3, #15
   111c2:	9302      	str	r3, [sp, #8]
   111c4:	f89d 3038 	ldrb.w	r3, [sp, #56]	; 0x38
   111c8:	9400      	str	r4, [sp, #0]
   111ca:	f003 031f 	and.w	r3, r3, #31
   111ce:	9303      	str	r3, [sp, #12]
   111d0:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
   111d4:	4630      	mov	r0, r6
   111d6:	f3c3 030b 	ubfx	r3, r3, #0, #12
   111da:	9304      	str	r3, [sp, #16]
   111dc:	f89d 3036 	ldrb.w	r3, [sp, #54]	; 0x36
   111e0:	4914      	ldr	r1, [pc, #80]	; (11234 <healthHandler(str&, CharDev&, void*)+0x1a0>)
   111e2:	f003 031f 	and.w	r3, r3, #31
   111e6:	9305      	str	r3, [sp, #20]
   111e8:	f89d 3035 	ldrb.w	r3, [sp, #53]	; 0x35
   111ec:	465a      	mov	r2, fp
   111ee:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   111f2:	9306      	str	r3, [sp, #24]
   111f4:	f89d 3034 	ldrb.w	r3, [sp, #52]	; 0x34
   111f8:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   111fc:	9307      	str	r3, [sp, #28]
   111fe:	f8b8 3024 	ldrh.w	r3, [r8, #36]	; 0x24
   11202:	9308      	str	r3, [sp, #32]
   11204:	f8b8 3026 	ldrh.w	r3, [r8, #38]	; 0x26
   11208:	9309      	str	r3, [sp, #36]	; 0x24
   1120a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   1120c:	f009 fd3d 	bl	1ac8a <CharDev::printf(char const*, ...)>
   11210:	2001      	movs	r0, #1
   11212:	b011      	add	sp, #68	; 0x44
   11214:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11218:	2007c214 	.word	0x2007c214
   1121c:	2007c208 	.word	0x2007c208
   11220:	41200000 	.word	0x41200000
   11224:	000186a0 	.word	0x000186a0
   11228:	00025249 	.word	0x00025249
   1122c:	0002527d 	.word	0x0002527d
   11230:	2007c20c 	.word	0x2007c20c
   11234:	0002528b 	.word	0x0002528b

00011238 <flashProgHandler(str&, CharDev&, void*)>:
_Z16flashProgHandlerR3strR7CharDevPv():
   11238:	b570      	push	{r4, r5, r6, lr}
   1123a:	f5ad 7d0a 	sub.w	sp, sp, #552	; 0x228
   1123e:	4605      	mov	r5, r0
   11240:	460c      	mov	r4, r1
   11242:	f008 fa82 	bl	1974a <str::getLen() const>
   11246:	280b      	cmp	r0, #11
   11248:	dd03      	ble.n	11252 <flashProgHandler(str&, CharDev&, void*)+0x1a>
   1124a:	4620      	mov	r0, r4
   1124c:	4920      	ldr	r1, [pc, #128]	; (112d0 <flashProgHandler(str&, CharDev&, void*)+0x98>)
   1124e:	220c      	movs	r2, #12
   11250:	e037      	b.n	112c2 <flashProgHandler(str&, CharDev&, void*)+0x8a>
   11252:	4628      	mov	r0, r5
   11254:	f008 fc1b 	bl	19a8e <str::operator()() const>
   11258:	2201      	movs	r2, #1
   1125a:	4601      	mov	r1, r0
   1125c:	a801      	add	r0, sp, #4
   1125e:	f006 fc13 	bl	17a88 <f_open>
   11262:	4606      	mov	r6, r0
   11264:	bb38      	cbnz	r0, 112b6 <flashProgHandler(str&, CharDev&, void*)+0x7e>
   11266:	a801      	add	r0, sp, #4
   11268:	f006 fe82 	bl	17f70 <f_close>
   1126c:	4628      	mov	r0, r5
   1126e:	f008 fc0e 	bl	19a8e <str::operator()() const>
   11272:	4918      	ldr	r1, [pc, #96]	; (112d4 <flashProgHandler(str&, CharDev&, void*)+0x9c>)
   11274:	4602      	mov	r2, r0
   11276:	9b04      	ldr	r3, [sp, #16]
   11278:	4620      	mov	r0, r4
   1127a:	f009 fd06 	bl	1ac8a <CharDev::printf(char const*, ...)>
   1127e:	6823      	ldr	r3, [r4, #0]
   11280:	4620      	mov	r0, r4
   11282:	689b      	ldr	r3, [r3, #8]
   11284:	4798      	blx	r3
   11286:	200a      	movs	r0, #10
   11288:	f00a fe20 	bl	1becc <vTaskDelay>
   1128c:	f00b f902 	bl	1c494 <ulPortSetInterruptMask>
   11290:	4628      	mov	r0, r5
   11292:	f008 fbfc 	bl	19a8e <str::operator()() const>
   11296:	4602      	mov	r2, r0
   11298:	6851      	ldr	r1, [r2, #4]
   1129a:	6800      	ldr	r0, [r0, #0]
   1129c:	4b0e      	ldr	r3, [pc, #56]	; (112d8 <flashProgHandler(str&, CharDev&, void*)+0xa0>)
   1129e:	c303      	stmia	r3!, {r0, r1}
   112a0:	6890      	ldr	r0, [r2, #8]
   112a2:	4a0e      	ldr	r2, [pc, #56]	; (112dc <flashProgHandler(str&, CharDev&, void*)+0xa4>)
   112a4:	6018      	str	r0, [r3, #0]
   112a6:	f843 2c0c 	str.w	r2, [r3, #-12]
   112aa:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
   112ae:	22aa      	movs	r2, #170	; 0xaa
   112b0:	721a      	strb	r2, [r3, #8]
   112b2:	701e      	strb	r6, [r3, #0]
   112b4:	e007      	b.n	112c6 <flashProgHandler(str&, CharDev&, void*)+0x8e>
   112b6:	4628      	mov	r0, r5
   112b8:	f008 fbe9 	bl	19a8e <str::operator()() const>
   112bc:	4908      	ldr	r1, [pc, #32]	; (112e0 <flashProgHandler(str&, CharDev&, void*)+0xa8>)
   112be:	4602      	mov	r2, r0
   112c0:	4620      	mov	r0, r4
   112c2:	f009 fce2 	bl	1ac8a <CharDev::printf(char const*, ...)>
   112c6:	2001      	movs	r0, #1
   112c8:	f50d 7d0a 	add.w	sp, sp, #552	; 0x228
   112cc:	bd70      	pop	{r4, r5, r6, pc}
   112ce:	bf00      	nop
   112d0:	00025308 	.word	0x00025308
   112d4:	0002532f 	.word	0x0002532f
   112d8:	40024048 	.word	0x40024048
   112dc:	deadd00d 	.word	0xdeadd00d
   112e0:	00025376 	.word	0x00025376

000112e4 <getFileHandler(str&, CharDev&, void*)>:
_Z14getFileHandlerR3strR7CharDevPv():
   112e4:	b570      	push	{r4, r5, r6, lr}
   112e6:	4e40      	ldr	r6, [pc, #256]	; (113e8 <getFileHandler(str&, CharDev&, void*)+0x104>)
   112e8:	b0a4      	sub	sp, #144	; 0x90
   112ea:	6833      	ldr	r3, [r6, #0]
   112ec:	4605      	mov	r5, r0
   112ee:	07db      	lsls	r3, r3, #31
   112f0:	460c      	mov	r4, r1
   112f2:	d40c      	bmi.n	1130e <getFileHandler(str&, CharDev&, void*)+0x2a>
   112f4:	4630      	mov	r0, r6
   112f6:	f00b ff9f 	bl	1d238 <__cxa_guard_acquire>
   112fa:	b140      	cbz	r0, 1130e <getFileHandler(str&, CharDev&, void*)+0x2a>
   112fc:	f44f 6080 	mov.w	r0, #1024	; 0x400
   11300:	f00d fc5c 	bl	1ebbc <malloc>
   11304:	4b39      	ldr	r3, [pc, #228]	; (113ec <getFileHandler(str&, CharDev&, void*)+0x108>)
   11306:	6018      	str	r0, [r3, #0]
   11308:	4630      	mov	r0, r6
   1130a:	f00b ffa3 	bl	1d254 <__cxa_guard_release>
   1130e:	4628      	mov	r0, r5
   11310:	4937      	ldr	r1, [pc, #220]	; (113f0 <getFileHandler(str&, CharDev&, void*)+0x10c>)
   11312:	f008 fadd 	bl	198d0 <str::beginsWithIgnoreCase(char const*) const>
   11316:	4606      	mov	r6, r0
   11318:	b320      	cbz	r0, 11364 <getFileHandler(str&, CharDev&, void*)+0x80>
   1131a:	2100      	movs	r1, #0
   1131c:	2280      	movs	r2, #128	; 0x80
   1131e:	a804      	add	r0, sp, #16
   11320:	f00d fc9d 	bl	1ec5e <memset>
   11324:	2300      	movs	r3, #0
   11326:	9302      	str	r3, [sp, #8]
   11328:	9303      	str	r3, [sp, #12]
   1132a:	ab03      	add	r3, sp, #12
   1132c:	9300      	str	r3, [sp, #0]
   1132e:	4931      	ldr	r1, [pc, #196]	; (113f4 <getFileHandler(str&, CharDev&, void*)+0x110>)
   11330:	aa04      	add	r2, sp, #16
   11332:	ab02      	add	r3, sp, #8
   11334:	4628      	mov	r0, r5
   11336:	f008 fa11 	bl	1975c <str::scanf(char const*, ...)>
   1133a:	4a2c      	ldr	r2, [pc, #176]	; (113ec <getFileHandler(str&, CharDev&, void*)+0x108>)
   1133c:	9b02      	ldr	r3, [sp, #8]
   1133e:	6811      	ldr	r1, [r2, #0]
   11340:	a804      	add	r0, sp, #16
   11342:	9a03      	ldr	r2, [sp, #12]
   11344:	b913      	cbnz	r3, 1134c <getFileHandler(str&, CharDev&, void*)+0x68>
   11346:	f004 fbec 	bl	15b22 <Storage::write(char const*, void*, unsigned int, unsigned int)>
   1134a:	e001      	b.n	11350 <getFileHandler(str&, CharDev&, void*)+0x6c>
   1134c:	f004 fc0c 	bl	15b68 <Storage::append(char const*, void*, unsigned int, unsigned int)>
   11350:	4a29      	ldr	r2, [pc, #164]	; (113f8 <getFileHandler(str&, CharDev&, void*)+0x114>)
   11352:	492a      	ldr	r1, [pc, #168]	; (113fc <getFileHandler(str&, CharDev&, void*)+0x118>)
   11354:	4603      	mov	r3, r0
   11356:	2b00      	cmp	r3, #0
   11358:	bf08      	it	eq
   1135a:	4611      	moveq	r1, r2
   1135c:	4620      	mov	r0, r4
   1135e:	f009 fc94 	bl	1ac8a <CharDev::printf(char const*, ...)>
   11362:	e03d      	b.n	113e0 <getFileHandler(str&, CharDev&, void*)+0xfc>
   11364:	4628      	mov	r0, r5
   11366:	4926      	ldr	r1, [pc, #152]	; (11400 <getFileHandler(str&, CharDev&, void*)+0x11c>)
   11368:	f008 fab2 	bl	198d0 <str::beginsWithIgnoreCase(char const*) const>
   1136c:	2800      	cmp	r0, #0
   1136e:	d038      	beq.n	113e2 <getFileHandler(str&, CharDev&, void*)+0xfe>
   11370:	4628      	mov	r0, r5
   11372:	ab04      	add	r3, sp, #16
   11374:	4923      	ldr	r1, [pc, #140]	; (11404 <getFileHandler(str&, CharDev&, void*)+0x120>)
   11376:	aa03      	add	r2, sp, #12
   11378:	9603      	str	r6, [sp, #12]
   1137a:	9604      	str	r6, [sp, #16]
   1137c:	f88d 6008 	strb.w	r6, [sp, #8]
   11380:	f008 f9ec 	bl	1975c <str::scanf(char const*, ...)>
   11384:	9d03      	ldr	r5, [sp, #12]
   11386:	9b04      	ldr	r3, [sp, #16]
   11388:	442b      	add	r3, r5
   1138a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
   1138e:	dd0d      	ble.n	113ac <getFileHandler(str&, CharDev&, void*)+0xc8>
   11390:	4620      	mov	r0, r4
   11392:	491d      	ldr	r1, [pc, #116]	; (11408 <getFileHandler(str&, CharDev&, void*)+0x124>)
   11394:	f44f 6280 	mov.w	r2, #1024	; 0x400
   11398:	e010      	b.n	113bc <getFileHandler(str&, CharDev&, void*)+0xd8>
   1139a:	4b14      	ldr	r3, [pc, #80]	; (113ec <getFileHandler(str&, CharDev&, void*)+0x108>)
   1139c:	f89d 2008 	ldrb.w	r2, [sp, #8]
   113a0:	681b      	ldr	r3, [r3, #0]
   113a2:	555a      	strb	r2, [r3, r5]
   113a4:	f99d 3008 	ldrsb.w	r3, [sp, #8]
   113a8:	3501      	adds	r5, #1
   113aa:	441e      	add	r6, r3
   113ac:	9b03      	ldr	r3, [sp, #12]
   113ae:	1aea      	subs	r2, r5, r3
   113b0:	9b04      	ldr	r3, [sp, #16]
   113b2:	429a      	cmp	r2, r3
   113b4:	db05      	blt.n	113c2 <getFileHandler(str&, CharDev&, void*)+0xde>
   113b6:	4915      	ldr	r1, [pc, #84]	; (1140c <getFileHandler(str&, CharDev&, void*)+0x128>)
   113b8:	4620      	mov	r0, r4
   113ba:	4632      	mov	r2, r6
   113bc:	f009 fc65 	bl	1ac8a <CharDev::printf(char const*, ...)>
   113c0:	e00e      	b.n	113e0 <getFileHandler(str&, CharDev&, void*)+0xfc>
   113c2:	f5b5 6f80 	cmp.w	r5, #1024	; 0x400
   113c6:	daf6      	bge.n	113b6 <getFileHandler(str&, CharDev&, void*)+0xd2>
   113c8:	6823      	ldr	r3, [r4, #0]
   113ca:	4620      	mov	r0, r4
   113cc:	681b      	ldr	r3, [r3, #0]
   113ce:	a902      	add	r1, sp, #8
   113d0:	f44f 62fa 	mov.w	r2, #2000	; 0x7d0
   113d4:	4798      	blx	r3
   113d6:	2800      	cmp	r0, #0
   113d8:	d1df      	bne.n	1139a <getFileHandler(str&, CharDev&, void*)+0xb6>
   113da:	4620      	mov	r0, r4
   113dc:	490c      	ldr	r1, [pc, #48]	; (11410 <getFileHandler(str&, CharDev&, void*)+0x12c>)
   113de:	e7be      	b.n	1135e <getFileHandler(str&, CharDev&, void*)+0x7a>
   113e0:	2001      	movs	r0, #1
   113e2:	b024      	add	sp, #144	; 0x90
   113e4:	bd70      	pop	{r4, r5, r6, pc}
   113e6:	bf00      	nop
   113e8:	2007c224 	.word	0x2007c224
   113ec:	2007c220 	.word	0x2007c220
   113f0:	000253a1 	.word	0x000253a1
   113f4:	000253a8 	.word	0x000253a8
   113f8:	0002538b 	.word	0x0002538b
   113fc:	0002538f 	.word	0x0002538f
   11400:	000253b8 	.word	0x000253b8
   11404:	000253bf 	.word	0x000253bf
   11408:	000253c9 	.word	0x000253c9
   1140c:	000253fd 	.word	0x000253fd
   11410:	000253ed 	.word	0x000253ed

00011414 <wirelessHandlerPrintStats(CharDev&, mesh_stats_t*, unsigned char)>:
_ZL25wirelessHandlerPrintStatsR7CharDevP12mesh_stats_th():
   11414:	b530      	push	{r4, r5, lr}
   11416:	460c      	mov	r4, r1
   11418:	b087      	sub	sp, #28
   1141a:	490b      	ldr	r1, [pc, #44]	; (11448 <wirelessHandlerPrintStats(CharDev&, mesh_stats_t*, unsigned char)+0x34>)
   1141c:	4605      	mov	r5, r0
   1141e:	f009 fc34 	bl	1ac8a <CharDev::printf(char const*, ...)>
   11422:	7aa1      	ldrb	r1, [r4, #10]
   11424:	8862      	ldrh	r2, [r4, #2]
   11426:	9100      	str	r1, [sp, #0]
   11428:	7ae1      	ldrb	r1, [r4, #11]
   1142a:	8823      	ldrh	r3, [r4, #0]
   1142c:	9101      	str	r1, [sp, #4]
   1142e:	88e1      	ldrh	r1, [r4, #6]
   11430:	4628      	mov	r0, r5
   11432:	9102      	str	r1, [sp, #8]
   11434:	8921      	ldrh	r1, [r4, #8]
   11436:	9103      	str	r1, [sp, #12]
   11438:	88a1      	ldrh	r1, [r4, #4]
   1143a:	9104      	str	r1, [sp, #16]
   1143c:	4903      	ldr	r1, [pc, #12]	; (1144c <wirelessHandlerPrintStats(CharDev&, mesh_stats_t*, unsigned char)+0x38>)
   1143e:	f009 fc24 	bl	1ac8a <CharDev::printf(char const*, ...)>
   11442:	b007      	add	sp, #28
   11444:	bd30      	pop	{r4, r5, pc}
   11446:	bf00      	nop
   11448:	0002540e 	.word	0x0002540e
   1144c:	00025444 	.word	0x00025444

00011450 <wsStatsHandler(str&, CharDev&, void*)>:
_ZL14wsStatsHandlerR3strR7CharDevPv():
   11450:	b51f      	push	{r0, r1, r2, r3, r4, lr}
   11452:	a801      	add	r0, sp, #4
   11454:	460c      	mov	r4, r1
   11456:	f003 fdab 	bl	14fb0 <mesh_get_stats>
   1145a:	f003 fa9f 	bl	1499c <mesh_get_node_address>
   1145e:	a901      	add	r1, sp, #4
   11460:	4602      	mov	r2, r0
   11462:	4620      	mov	r0, r4
   11464:	f7ff ffd6 	bl	11414 <wirelessHandlerPrintStats(CharDev&, mesh_stats_t*, unsigned char)>
   11468:	2001      	movs	r0, #1
   1146a:	b004      	add	sp, #16
   1146c:	bd10      	pop	{r4, pc}
	...

00011470 <wsTxHandler(str&, CharDev&, void*)>:
_ZL11wsTxHandlerR3strR7CharDevPv():
   11470:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   11474:	b08c      	sub	sp, #48	; 0x30
   11476:	ab03      	add	r3, sp, #12
   11478:	2500      	movs	r5, #0
   1147a:	9300      	str	r3, [sp, #0]
   1147c:	460c      	mov	r4, r1
   1147e:	4690      	mov	r8, r2
   11480:	493a      	ldr	r1, [pc, #232]	; (1156c <wsTxHandler(str&, CharDev&, void*)+0xfc>)
   11482:	2202      	movs	r2, #2
   11484:	ab02      	add	r3, sp, #8
   11486:	9502      	str	r5, [sp, #8]
   11488:	9503      	str	r5, [sp, #12]
   1148a:	f008 f975 	bl	19778 <str::tokenize(char const*, int, ...)>
   1148e:	42a8      	cmp	r0, r5
   11490:	dd68      	ble.n	11564 <wsTxHandler(str&, CharDev&, void*)+0xf4>
   11492:	9802      	ldr	r0, [sp, #8]
   11494:	f00d fa53 	bl	1e93e <atoi>
   11498:	b2c7      	uxtb	r7, r0
   1149a:	9803      	ldr	r0, [sp, #12]
   1149c:	b118      	cbz	r0, 114a6 <wsTxHandler(str&, CharDev&, void*)+0x36>
   1149e:	f00e fc0b 	bl	1fcb8 <strlen>
   114a2:	b2c6      	uxtb	r6, r0
   114a4:	e000      	b.n	114a8 <wsTxHandler(str&, CharDev&, void*)+0x38>
   114a6:	4606      	mov	r6, r0
   114a8:	a804      	add	r0, sp, #16
   114aa:	2100      	movs	r1, #0
   114ac:	f004 f91a 	bl	156e4 <wireless_get_rx_pkt>
   114b0:	b130      	cbz	r0, 114c0 <wsTxHandler(str&, CharDev&, void*)+0x50>
   114b2:	4620      	mov	r0, r4
   114b4:	492e      	ldr	r1, [pc, #184]	; (11570 <wsTxHandler(str&, CharDev&, void*)+0x100>)
   114b6:	f04f 32ff 	mov.w	r2, #4294967295
   114ba:	f009 fbaf 	bl	1ac1c <CharDev::putline(char const*, unsigned int)>
   114be:	e7f3      	b.n	114a8 <wsTxHandler(str&, CharDev&, void*)+0x38>
   114c0:	f118 0800 	adds.w	r8, r8, #0
   114c4:	bf18      	it	ne
   114c6:	f04f 0801 	movne.w	r8, #1
   114ca:	2302      	movs	r3, #2
   114cc:	9300      	str	r3, [sp, #0]
   114ce:	4638      	mov	r0, r7
   114d0:	4641      	mov	r1, r8
   114d2:	9a03      	ldr	r2, [sp, #12]
   114d4:	4633      	mov	r3, r6
   114d6:	f003 fb95 	bl	14c04 <mesh_send>
   114da:	4605      	mov	r5, r0
   114dc:	b938      	cbnz	r0, 114ee <wsTxHandler(str&, CharDev&, void*)+0x7e>
   114de:	4620      	mov	r0, r4
   114e0:	4924      	ldr	r1, [pc, #144]	; (11574 <wsTxHandler(str&, CharDev&, void*)+0x104>)
   114e2:	f04f 32ff 	mov.w	r2, #4294967295
   114e6:	f009 fb99 	bl	1ac1c <CharDev::putline(char const*, unsigned int)>
   114ea:	2501      	movs	r5, #1
   114ec:	e03a      	b.n	11564 <wsTxHandler(str&, CharDev&, void*)+0xf4>
   114ee:	f1b8 0f00 	cmp.w	r8, #0
   114f2:	d037      	beq.n	11564 <wsTxHandler(str&, CharDev&, void*)+0xf4>
   114f4:	a804      	add	r0, sp, #16
   114f6:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
   114fa:	f004 f8fd 	bl	156f8 <wireless_get_ack_pkt>
   114fe:	b360      	cbz	r0, 1155a <wsTxHandler(str&, CharDev&, void*)+0xea>
   11500:	f89d 3010 	ldrb.w	r3, [sp, #16]
   11504:	42bb      	cmp	r3, r7
   11506:	d128      	bne.n	1155a <wsTxHandler(str&, CharDev&, void*)+0xea>
   11508:	f89d 3017 	ldrb.w	r3, [sp, #23]
   1150c:	2b0c      	cmp	r3, #12
   1150e:	d104      	bne.n	1151a <wsTxHandler(str&, CharDev&, void*)+0xaa>
   11510:	4620      	mov	r0, r4
   11512:	a906      	add	r1, sp, #24
   11514:	463a      	mov	r2, r7
   11516:	f7ff ff7d 	bl	11414 <wirelessHandlerPrintStats(CharDev&, mesh_stats_t*, unsigned char)>
   1151a:	4620      	mov	r0, r4
   1151c:	b9be      	cbnz	r6, 1154e <wsTxHandler(str&, CharDev&, void*)+0xde>
   1151e:	4916      	ldr	r1, [pc, #88]	; (11578 <wsTxHandler(str&, CharDev&, void*)+0x108>)
   11520:	f009 fbb3 	bl	1ac8a <CharDev::printf(char const*, ...)>
   11524:	f89d 3017 	ldrb.w	r3, [sp, #23]
   11528:	429e      	cmp	r6, r3
   1152a:	da0b      	bge.n	11544 <wsTxHandler(str&, CharDev&, void*)+0xd4>
   1152c:	6823      	ldr	r3, [r4, #0]
   1152e:	aa04      	add	r2, sp, #16
   11530:	4432      	add	r2, r6
   11532:	f992 1008 	ldrsb.w	r1, [r2, #8]
   11536:	685b      	ldr	r3, [r3, #4]
   11538:	4620      	mov	r0, r4
   1153a:	f04f 32ff 	mov.w	r2, #4294967295
   1153e:	4798      	blx	r3
   11540:	3601      	adds	r6, #1
   11542:	e7ef      	b.n	11524 <wsTxHandler(str&, CharDev&, void*)+0xb4>
   11544:	4620      	mov	r0, r4
   11546:	490d      	ldr	r1, [pc, #52]	; (1157c <wsTxHandler(str&, CharDev&, void*)+0x10c>)
   11548:	f009 fb9f 	bl	1ac8a <CharDev::printf(char const*, ...)>
   1154c:	e00a      	b.n	11564 <wsTxHandler(str&, CharDev&, void*)+0xf4>
   1154e:	490c      	ldr	r1, [pc, #48]	; (11580 <wsTxHandler(str&, CharDev&, void*)+0x110>)
   11550:	f04f 32ff 	mov.w	r2, #4294967295
   11554:	f009 fb62 	bl	1ac1c <CharDev::putline(char const*, unsigned int)>
   11558:	e004      	b.n	11564 <wsTxHandler(str&, CharDev&, void*)+0xf4>
   1155a:	4620      	mov	r0, r4
   1155c:	4909      	ldr	r1, [pc, #36]	; (11584 <wsTxHandler(str&, CharDev&, void*)+0x114>)
   1155e:	9a02      	ldr	r2, [sp, #8]
   11560:	f009 fb93 	bl	1ac8a <CharDev::printf(char const*, ...)>
   11564:	4628      	mov	r0, r5
   11566:	b00c      	add	sp, #48	; 0x30
   11568:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1156c:	00025e2a 	.word	0x00025e2a
   11570:	00025462 	.word	0x00025462
   11574:	00025484 	.word	0x00025484
   11578:	000254ac 	.word	0x000254ac
   1157c:	00025af7 	.word	0x00025af7
   11580:	000254c0 	.word	0x000254c0
   11584:	000254dd 	.word	0x000254dd

00011588 <wsAddrHandler(str&, CharDev&, void*)>:
_ZL13wsAddrHandlerR3strR7CharDevPv():
   11588:	b538      	push	{r3, r4, r5, lr}
   1158a:	460d      	mov	r5, r1
   1158c:	f008 fa81 	bl	19a92 <str::operator int() const>
   11590:	4604      	mov	r4, r0
   11592:	b2c0      	uxtb	r0, r0
   11594:	f003 f9f6 	bl	14984 <mesh_set_node_address>
   11598:	4a05      	ldr	r2, [pc, #20]	; (115b0 <wsAddrHandler(str&, CharDev&, void*)+0x28>)
   1159a:	4b06      	ldr	r3, [pc, #24]	; (115b4 <wsAddrHandler(str&, CharDev&, void*)+0x2c>)
   1159c:	4906      	ldr	r1, [pc, #24]	; (115b8 <wsAddrHandler(str&, CharDev&, void*)+0x30>)
   1159e:	2800      	cmp	r0, #0
   115a0:	bf08      	it	eq
   115a2:	4613      	moveq	r3, r2
   115a4:	4628      	mov	r0, r5
   115a6:	4622      	mov	r2, r4
   115a8:	f009 fb6f 	bl	1ac8a <CharDev::printf(char const*, ...)>
   115ac:	2001      	movs	r0, #1
   115ae:	bd38      	pop	{r3, r4, r5, pc}
   115b0:	00025503 	.word	0x00025503
   115b4:	0002507f 	.word	0x0002507f
   115b8:	0002550a 	.word	0x0002550a

000115bc <wsRteHandler(str&, CharDev&, void*)>:
_Z12wsRteHandlerR3strR7CharDevPv():
   115bc:	b537      	push	{r0, r1, r2, r4, r5, lr}
   115be:	460c      	mov	r4, r1
   115c0:	f003 fb64 	bl	14c8c <mesh_get_num_routing_entries>
   115c4:	4916      	ldr	r1, [pc, #88]	; (11620 <wsRteHandler(str&, CharDev&, void*)+0x64>)
   115c6:	4605      	mov	r5, r0
   115c8:	4620      	mov	r0, r4
   115ca:	f009 fb5e 	bl	1ac8a <CharDev::printf(char const*, ...)>
   115ce:	4915      	ldr	r1, [pc, #84]	; (11624 <wsRteHandler(str&, CharDev&, void*)+0x68>)
   115d0:	4620      	mov	r0, r4
   115d2:	462a      	mov	r2, r5
   115d4:	f009 fb59 	bl	1ac8a <CharDev::printf(char const*, ...)>
   115d8:	4620      	mov	r0, r4
   115da:	4911      	ldr	r1, [pc, #68]	; (11620 <wsRteHandler(str&, CharDev&, void*)+0x64>)
   115dc:	f009 fb55 	bl	1ac8a <CharDev::printf(char const*, ...)>
   115e0:	b1d5      	cbz	r5, 11618 <wsRteHandler(str&, CharDev&, void*)+0x5c>
   115e2:	4911      	ldr	r1, [pc, #68]	; (11628 <wsRteHandler(str&, CharDev&, void*)+0x6c>)
   115e4:	4620      	mov	r0, r4
   115e6:	f009 fb50 	bl	1ac8a <CharDev::printf(char const*, ...)>
   115ea:	4620      	mov	r0, r4
   115ec:	490c      	ldr	r1, [pc, #48]	; (11620 <wsRteHandler(str&, CharDev&, void*)+0x64>)
   115ee:	f009 fb4c 	bl	1ac8a <CharDev::printf(char const*, ...)>
   115f2:	2500      	movs	r5, #0
   115f4:	b2e8      	uxtb	r0, r5
   115f6:	f003 fb33 	bl	14c60 <mesh_get_routing_entry>
   115fa:	3501      	adds	r5, #1
   115fc:	b140      	cbz	r0, 11610 <wsRteHandler(str&, CharDev&, void*)+0x54>
   115fe:	7881      	ldrb	r1, [r0, #2]
   11600:	7802      	ldrb	r2, [r0, #0]
   11602:	7843      	ldrb	r3, [r0, #1]
   11604:	9100      	str	r1, [sp, #0]
   11606:	4620      	mov	r0, r4
   11608:	4908      	ldr	r1, [pc, #32]	; (1162c <wsRteHandler(str&, CharDev&, void*)+0x70>)
   1160a:	f009 fb3e 	bl	1ac8a <CharDev::printf(char const*, ...)>
   1160e:	e7f1      	b.n	115f4 <wsRteHandler(str&, CharDev&, void*)+0x38>
   11610:	4620      	mov	r0, r4
   11612:	4903      	ldr	r1, [pc, #12]	; (11620 <wsRteHandler(str&, CharDev&, void*)+0x64>)
   11614:	f009 fb39 	bl	1ac8a <CharDev::printf(char const*, ...)>
   11618:	2001      	movs	r0, #1
   1161a:	b003      	add	sp, #12
   1161c:	bd30      	pop	{r4, r5, pc}
   1161e:	bf00      	nop
   11620:	00025521 	.word	0x00025521
   11624:	0002553c 	.word	0x0002553c
   11628:	00025556 	.word	0x00025556
   1162c:	00025571 	.word	0x00025571

00011630 <wsRxHandler(str&, CharDev&, void*)>:
_ZL11wsRxHandlerR3strR7CharDevPv():
   11630:	b530      	push	{r4, r5, lr}
   11632:	b08b      	sub	sp, #44	; 0x2c
   11634:	aa0a      	add	r2, sp, #40	; 0x28
   11636:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
   1163a:	460c      	mov	r4, r1
   1163c:	f842 3d24 	str.w	r3, [r2, #-36]!
   11640:	4917      	ldr	r1, [pc, #92]	; (116a0 <wsRxHandler(str&, CharDev&, void*)+0x70>)
   11642:	f008 f88b 	bl	1975c <str::scanf(char const*, ...)>
   11646:	2500      	movs	r5, #0
   11648:	a802      	add	r0, sp, #8
   1164a:	9901      	ldr	r1, [sp, #4]
   1164c:	f004 f84a 	bl	156e4 <wireless_get_rx_pkt>
   11650:	b1e0      	cbz	r0, 1168c <wsRxHandler(str&, CharDev&, void*)+0x5c>
   11652:	4620      	mov	r0, r4
   11654:	4913      	ldr	r1, [pc, #76]	; (116a4 <wsRxHandler(str&, CharDev&, void*)+0x74>)
   11656:	f89d 2008 	ldrb.w	r2, [sp, #8]
   1165a:	f009 fb16 	bl	1ac8a <CharDev::printf(char const*, ...)>
   1165e:	2500      	movs	r5, #0
   11660:	f89d 300f 	ldrb.w	r3, [sp, #15]
   11664:	429d      	cmp	r5, r3
   11666:	da0b      	bge.n	11680 <wsRxHandler(str&, CharDev&, void*)+0x50>
   11668:	6823      	ldr	r3, [r4, #0]
   1166a:	aa02      	add	r2, sp, #8
   1166c:	442a      	add	r2, r5
   1166e:	f992 1008 	ldrsb.w	r1, [r2, #8]
   11672:	685b      	ldr	r3, [r3, #4]
   11674:	4620      	mov	r0, r4
   11676:	f04f 32ff 	mov.w	r2, #4294967295
   1167a:	4798      	blx	r3
   1167c:	3501      	adds	r5, #1
   1167e:	e7ef      	b.n	11660 <wsRxHandler(str&, CharDev&, void*)+0x30>
   11680:	4620      	mov	r0, r4
   11682:	4909      	ldr	r1, [pc, #36]	; (116a8 <wsRxHandler(str&, CharDev&, void*)+0x78>)
   11684:	f009 fb01 	bl	1ac8a <CharDev::printf(char const*, ...)>
   11688:	2501      	movs	r5, #1
   1168a:	e7dd      	b.n	11648 <wsRxHandler(str&, CharDev&, void*)+0x18>
   1168c:	b92d      	cbnz	r5, 1169a <wsRxHandler(str&, CharDev&, void*)+0x6a>
   1168e:	4620      	mov	r0, r4
   11690:	4906      	ldr	r1, [pc, #24]	; (116ac <wsRxHandler(str&, CharDev&, void*)+0x7c>)
   11692:	f04f 32ff 	mov.w	r2, #4294967295
   11696:	f009 fac1 	bl	1ac1c <CharDev::putline(char const*, unsigned int)>
   1169a:	2001      	movs	r0, #1
   1169c:	b00b      	add	sp, #44	; 0x2c
   1169e:	bd30      	pop	{r4, r5, pc}
   116a0:	000253c6 	.word	0x000253c6
   116a4:	0002558c 	.word	0x0002558c
   116a8:	00025374 	.word	0x00025374
   116ac:	000255a3 	.word	0x000255a3

000116b0 <wirelessHandler(str&, CharDev&, void*)>:
_Z15wirelessHandlerR3strR7CharDevPv():
   116b0:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
   116b4:	4d3c      	ldr	r5, [pc, #240]	; (117a8 <wirelessHandler(str&, CharDev&, void*)+0xf8>)
   116b6:	4607      	mov	r7, r0
   116b8:	682e      	ldr	r6, [r5, #0]
   116ba:	4689      	mov	r9, r1
   116bc:	2e00      	cmp	r6, #0
   116be:	d162      	bne.n	11786 <wirelessHandler(str&, CharDev&, void*)+0xd6>
   116c0:	2024      	movs	r0, #36	; 0x24
   116c2:	f7fe fdd5 	bl	10270 <operator new(unsigned int)>
   116c6:	2304      	movs	r3, #4
   116c8:	4604      	mov	r4, r0
   116ca:	e880 0048 	stmia.w	r0, {r3, r6}
   116ce:	6086      	str	r6, [r0, #8]
   116d0:	60c6      	str	r6, [r0, #12]
   116d2:	2120      	movs	r1, #32
   116d4:	4630      	mov	r0, r6
   116d6:	f00e f8ad 	bl	1f834 <realloc>
   116da:	68a6      	ldr	r6, [r4, #8]
   116dc:	60e0      	str	r0, [r4, #12]
   116de:	ea4f 0886 	mov.w	r8, r6, lsl #2
   116e2:	2e07      	cmp	r6, #7
   116e4:	d80e      	bhi.n	11704 <wirelessHandler(str&, CharDev&, void*)+0x54>
   116e6:	2010      	movs	r0, #16
   116e8:	f7fe fdc2 	bl	10270 <operator new(unsigned int)>
   116ec:	2100      	movs	r1, #0
   116ee:	2210      	movs	r2, #16
   116f0:	4682      	mov	sl, r0
   116f2:	f00d fab4 	bl	1ec5e <memset>
   116f6:	68e3      	ldr	r3, [r4, #12]
   116f8:	3601      	adds	r6, #1
   116fa:	f843 a008 	str.w	sl, [r3, r8]
   116fe:	f108 0804 	add.w	r8, r8, #4
   11702:	e7ee      	b.n	116e2 <wirelessHandler(str&, CharDev&, void*)+0x32>
   11704:	2600      	movs	r6, #0
   11706:	2308      	movs	r3, #8
   11708:	f04f 0801 	mov.w	r8, #1
   1170c:	6063      	str	r3, [r4, #4]
   1170e:	f884 8020 	strb.w	r8, [r4, #32]
   11712:	4620      	mov	r0, r4
   11714:	4925      	ldr	r1, [pc, #148]	; (117ac <wirelessHandler(str&, CharDev&, void*)+0xfc>)
   11716:	4a26      	ldr	r2, [pc, #152]	; (117b0 <wirelessHandler(str&, CharDev&, void*)+0x100>)
   11718:	4b26      	ldr	r3, [pc, #152]	; (117b4 <wirelessHandler(str&, CharDev&, void*)+0x104>)
   1171a:	9600      	str	r6, [sp, #0]
   1171c:	602c      	str	r4, [r5, #0]
   1171e:	f007 f9ad 	bl	18a7c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   11722:	6828      	ldr	r0, [r5, #0]
   11724:	4924      	ldr	r1, [pc, #144]	; (117b8 <wirelessHandler(str&, CharDev&, void*)+0x108>)
   11726:	4a25      	ldr	r2, [pc, #148]	; (117bc <wirelessHandler(str&, CharDev&, void*)+0x10c>)
   11728:	4b25      	ldr	r3, [pc, #148]	; (117c0 <wirelessHandler(str&, CharDev&, void*)+0x110>)
   1172a:	9600      	str	r6, [sp, #0]
   1172c:	f007 f9a6 	bl	18a7c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   11730:	6828      	ldr	r0, [r5, #0]
   11732:	4924      	ldr	r1, [pc, #144]	; (117c4 <wirelessHandler(str&, CharDev&, void*)+0x114>)
   11734:	4a24      	ldr	r2, [pc, #144]	; (117c8 <wirelessHandler(str&, CharDev&, void*)+0x118>)
   11736:	4b25      	ldr	r3, [pc, #148]	; (117cc <wirelessHandler(str&, CharDev&, void*)+0x11c>)
   11738:	9600      	str	r6, [sp, #0]
   1173a:	f007 f99f 	bl	18a7c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   1173e:	6828      	ldr	r0, [r5, #0]
   11740:	4923      	ldr	r1, [pc, #140]	; (117d0 <wirelessHandler(str&, CharDev&, void*)+0x120>)
   11742:	4a24      	ldr	r2, [pc, #144]	; (117d4 <wirelessHandler(str&, CharDev&, void*)+0x124>)
   11744:	4b24      	ldr	r3, [pc, #144]	; (117d8 <wirelessHandler(str&, CharDev&, void*)+0x128>)
   11746:	9600      	str	r6, [sp, #0]
   11748:	f007 f998 	bl	18a7c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   1174c:	6828      	ldr	r0, [r5, #0]
   1174e:	4923      	ldr	r1, [pc, #140]	; (117dc <wirelessHandler(str&, CharDev&, void*)+0x12c>)
   11750:	4a23      	ldr	r2, [pc, #140]	; (117e0 <wirelessHandler(str&, CharDev&, void*)+0x130>)
   11752:	4b24      	ldr	r3, [pc, #144]	; (117e4 <wirelessHandler(str&, CharDev&, void*)+0x134>)
   11754:	9600      	str	r6, [sp, #0]
   11756:	f007 f991 	bl	18a7c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   1175a:	6828      	ldr	r0, [r5, #0]
   1175c:	4922      	ldr	r1, [pc, #136]	; (117e8 <wirelessHandler(str&, CharDev&, void*)+0x138>)
   1175e:	4a23      	ldr	r2, [pc, #140]	; (117ec <wirelessHandler(str&, CharDev&, void*)+0x13c>)
   11760:	4b23      	ldr	r3, [pc, #140]	; (117f0 <wirelessHandler(str&, CharDev&, void*)+0x140>)
   11762:	f8cd 8000 	str.w	r8, [sp]
   11766:	f007 f989 	bl	18a7c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   1176a:	6828      	ldr	r0, [r5, #0]
   1176c:	491e      	ldr	r1, [pc, #120]	; (117e8 <wirelessHandler(str&, CharDev&, void*)+0x138>)
   1176e:	4a21      	ldr	r2, [pc, #132]	; (117f4 <wirelessHandler(str&, CharDev&, void*)+0x144>)
   11770:	4b21      	ldr	r3, [pc, #132]	; (117f8 <wirelessHandler(str&, CharDev&, void*)+0x148>)
   11772:	9600      	str	r6, [sp, #0]
   11774:	f007 f982 	bl	18a7c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   11778:	9600      	str	r6, [sp, #0]
   1177a:	6828      	ldr	r0, [r5, #0]
   1177c:	491f      	ldr	r1, [pc, #124]	; (117fc <wirelessHandler(str&, CharDev&, void*)+0x14c>)
   1177e:	4a20      	ldr	r2, [pc, #128]	; (11800 <wirelessHandler(str&, CharDev&, void*)+0x150>)
   11780:	4b20      	ldr	r3, [pc, #128]	; (11804 <wirelessHandler(str&, CharDev&, void*)+0x154>)
   11782:	f007 f97b 	bl	18a7c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   11786:	4638      	mov	r0, r7
   11788:	491f      	ldr	r1, [pc, #124]	; (11808 <wirelessHandler(str&, CharDev&, void*)+0x158>)
   1178a:	f008 f97e 	bl	19a8a <str::operator==(char const*) const>
   1178e:	b118      	cbz	r0, 11798 <wirelessHandler(str&, CharDev&, void*)+0xe8>
   11790:	4638      	mov	r0, r7
   11792:	491e      	ldr	r1, [pc, #120]	; (1180c <wirelessHandler(str&, CharDev&, void*)+0x15c>)
   11794:	f008 fa33 	bl	19bfe <str::operator=(char const*)>
   11798:	6828      	ldr	r0, [r5, #0]
   1179a:	4639      	mov	r1, r7
   1179c:	464a      	mov	r2, r9
   1179e:	b002      	add	sp, #8
   117a0:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   117a4:	f007 ba4c 	b.w	18c40 <CommandProcessor::handleCommand(str&, CharDev&)>
   117a8:	2007c22c 	.word	0x2007c22c
   117ac:	00011a51 	.word	0x00011a51
   117b0:	000255b4 	.word	0x000255b4
   117b4:	000255bb 	.word	0x000255bb
   117b8:	00011831 	.word	0x00011831
   117bc:	000255f5 	.word	0x000255f5
   117c0:	000255fe 	.word	0x000255fe
   117c4:	00011631 	.word	0x00011631
   117c8:	00025652 	.word	0x00025652
   117cc:	00025655 	.word	0x00025655
   117d0:	00011589 	.word	0x00011589
   117d4:	00025bd7 	.word	0x00025bd7
   117d8:	00025678 	.word	0x00025678
   117dc:	000115bd 	.word	0x000115bd
   117e0:	000256be 	.word	0x000256be
   117e4:	000256a2 	.word	0x000256a2
   117e8:	00011471 	.word	0x00011471
   117ec:	00025707 	.word	0x00025707
   117f0:	000256c5 	.word	0x000256c5
   117f4:	00025706 	.word	0x00025706
   117f8:	0002570b 	.word	0x0002570b
   117fc:	00011451 	.word	0x00011451
   11800:	0002574b 	.word	0x0002574b
   11804:	00025730 	.word	0x00025730
   11808:	00025375 	.word	0x00025375
   1180c:	00025751 	.word	0x00025751

00011810 <SingletonTemplate<NordicStream>::getInstance()>:
_ZN17SingletonTemplateI12NordicStreamE11getInstanceEv():
   11810:	b538      	push	{r3, r4, r5, lr}
   11812:	4c06      	ldr	r4, [pc, #24]	; (1182c <SingletonTemplate<NordicStream>::getInstance()+0x1c>)
   11814:	6823      	ldr	r3, [r4, #0]
   11816:	b933      	cbnz	r3, 11826 <SingletonTemplate<NordicStream>::getInstance()+0x16>
   11818:	2058      	movs	r0, #88	; 0x58
   1181a:	f7fe fd29 	bl	10270 <operator new(unsigned int)>
   1181e:	4605      	mov	r5, r0
   11820:	f008 ffaa 	bl	1a778 <NordicStream::NordicStream()>
   11824:	6025      	str	r5, [r4, #0]
   11826:	6820      	ldr	r0, [r4, #0]
   11828:	bd38      	pop	{r3, r4, r5, pc}
   1182a:	bf00      	nop
   1182c:	2007c228 	.word	0x2007c228

00011830 <wsFileTxHandler(str&, CharDev&, void*)>:
_ZL15wsFileTxHandlerR3strR7CharDevPv():
   11830:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11834:	f2ad 5ddc 	subw	sp, sp, #1500	; 0x5dc
   11838:	4604      	mov	r4, r0
   1183a:	2280      	movs	r2, #128	; 0x80
   1183c:	f10d 0ab4 	add.w	sl, sp, #180	; 0xb4
   11840:	4689      	mov	r9, r1
   11842:	a80d      	add	r0, sp, #52	; 0x34
   11844:	2100      	movs	r1, #0
   11846:	f00d fa0a 	bl	1ec5e <memset>
   1184a:	2100      	movs	r1, #0
   1184c:	2280      	movs	r2, #128	; 0x80
   1184e:	4650      	mov	r0, sl
   11850:	f00d fa05 	bl	1ec5e <memset>
   11854:	ae06      	add	r6, sp, #24
   11856:	2300      	movs	r3, #0
   11858:	6033      	str	r3, [r6, #0]
   1185a:	4620      	mov	r0, r4
   1185c:	9600      	str	r6, [sp, #0]
   1185e:	4972      	ldr	r1, [pc, #456]	; (11a28 <wsFileTxHandler(str&, CharDev&, void*)+0x1f8>)
   11860:	aa0d      	add	r2, sp, #52	; 0x34
   11862:	4653      	mov	r3, sl
   11864:	f007 ff7a 	bl	1975c <str::scanf(char const*, ...)>
   11868:	2803      	cmp	r0, #3
   1186a:	d001      	beq.n	11870 <wsFileTxHandler(str&, CharDev&, void*)+0x40>
   1186c:	2000      	movs	r0, #0
   1186e:	e0d7      	b.n	11a20 <wsFileTxHandler(str&, CharDev&, void*)+0x1f0>
   11870:	a8ed      	add	r0, sp, #948	; 0x3b4
   11872:	a90d      	add	r1, sp, #52	; 0x34
   11874:	2201      	movs	r2, #1
   11876:	f006 f907 	bl	17a88 <f_open>
   1187a:	4605      	mov	r5, r0
   1187c:	2800      	cmp	r0, #0
   1187e:	d1f5      	bne.n	1186c <wsFileTxHandler(str&, CharDev&, void*)+0x3c>
   11880:	f7ff ffc6 	bl	11810 <SingletonTemplate<NordicStream>::getInstance()>
   11884:	6833      	ldr	r3, [r6, #0]
   11886:	a94d      	add	r1, sp, #308	; 0x134
   11888:	f880 3053 	strb.w	r3, [r0, #83]	; 0x53
   1188c:	2280      	movs	r2, #128	; 0x80
   1188e:	4604      	mov	r4, r0
   11890:	a808      	add	r0, sp, #32
   11892:	f88d 5017 	strb.w	r5, [sp, #23]
   11896:	9507      	str	r5, [sp, #28]
   11898:	f007 ff30 	bl	196fc <str::str(char*, int)>
   1189c:	f8cd a000 	str.w	sl, [sp]
   118a0:	4648      	mov	r0, r9
   118a2:	4962      	ldr	r1, [pc, #392]	; (11a2c <wsFileTxHandler(str&, CharDev&, void*)+0x1fc>)
   118a4:	aa0d      	add	r2, sp, #52	; 0x34
   118a6:	6833      	ldr	r3, [r6, #0]
   118a8:	f009 f9ef 	bl	1ac8a <CharDev::printf(char const*, ...)>
   118ac:	46a8      	mov	r8, r5
   118ae:	a8ed      	add	r0, sp, #948	; 0x3b4
   118b0:	a96d      	add	r1, sp, #436	; 0x1b4
   118b2:	f44f 7200 	mov.w	r2, #512	; 0x200
   118b6:	ab07      	add	r3, sp, #28
   118b8:	f006 f978 	bl	17bac <f_read>
   118bc:	b138      	cbz	r0, 118ce <wsFileTxHandler(str&, CharDev&, void*)+0x9e>
   118be:	a8ed      	add	r0, sp, #948	; 0x3b4
   118c0:	f006 fb56 	bl	17f70 <f_close>
   118c4:	a808      	add	r0, sp, #32
   118c6:	f007 ff2e 	bl	19726 <str::~str()>
   118ca:	2001      	movs	r0, #1
   118cc:	e0a8      	b.n	11a20 <wsFileTxHandler(str&, CharDev&, void*)+0x1f0>
   118ce:	9b07      	ldr	r3, [sp, #28]
   118d0:	2b00      	cmp	r3, #0
   118d2:	d0f4      	beq.n	118be <wsFileTxHandler(str&, CharDev&, void*)+0x8e>
   118d4:	1c6f      	adds	r7, r5, #1
   118d6:	4956      	ldr	r1, [pc, #344]	; (11a30 <wsFileTxHandler(str&, CharDev&, void*)+0x200>)
   118d8:	9a07      	ldr	r2, [sp, #28]
   118da:	4620      	mov	r0, r4
   118dc:	f009 f9d5 	bl	1ac8a <CharDev::printf(char const*, ...)>
   118e0:	6823      	ldr	r3, [r4, #0]
   118e2:	4620      	mov	r0, r4
   118e4:	689b      	ldr	r3, [r3, #8]
   118e6:	4798      	blx	r3
   118e8:	2600      	movs	r6, #0
   118ea:	1e7d      	subs	r5, r7, #1
   118ec:	46b3      	mov	fp, r6
   118ee:	9b07      	ldr	r3, [sp, #28]
   118f0:	6822      	ldr	r2, [r4, #0]
   118f2:	429e      	cmp	r6, r3
   118f4:	d20d      	bcs.n	11912 <wsFileTxHandler(str&, CharDev&, void*)+0xe2>
   118f6:	ab6d      	add	r3, sp, #436	; 0x1b4
   118f8:	5799      	ldrsb	r1, [r3, r6]
   118fa:	f8d2 c004 	ldr.w	ip, [r2, #4]
   118fe:	4620      	mov	r0, r4
   11900:	9303      	str	r3, [sp, #12]
   11902:	f04f 32ff 	mov.w	r2, #4294967295
   11906:	47e0      	blx	ip
   11908:	9b03      	ldr	r3, [sp, #12]
   1190a:	56f3      	ldrsb	r3, [r6, r3]
   1190c:	3601      	adds	r6, #1
   1190e:	449b      	add	fp, r3
   11910:	e7ed      	b.n	118ee <wsFileTxHandler(str&, CharDev&, void*)+0xbe>
   11912:	6893      	ldr	r3, [r2, #8]
   11914:	4620      	mov	r0, r4
   11916:	4798      	blx	r3
   11918:	a808      	add	r0, sp, #32
   1191a:	f008 f8b8 	bl	19a8e <str::operator()() const>
   1191e:	4606      	mov	r6, r0
   11920:	a808      	add	r0, sp, #32
   11922:	f007 ff15 	bl	19750 <str::getCapacity() const>
   11926:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
   1192a:	4602      	mov	r2, r0
   1192c:	4631      	mov	r1, r6
   1192e:	4620      	mov	r0, r4
   11930:	f009 f982 	bl	1ac38 <CharDev::gets(char*, int, unsigned int)>
   11934:	2101      	movs	r1, #1
   11936:	2220      	movs	r2, #32
   11938:	a808      	add	r0, sp, #32
   1193a:	f008 f853 	bl	199e4 <str::eraseFirstWords(int, char)>
   1193e:	a808      	add	r0, sp, #32
   11940:	f008 f8a7 	bl	19a92 <str::operator int() const>
   11944:	4558      	cmp	r0, fp
   11946:	d020      	beq.n	1198a <wsFileTxHandler(str&, CharDev&, void*)+0x15a>
   11948:	a808      	add	r0, sp, #32
   1194a:	f008 f8a2 	bl	19a92 <str::operator int() const>
   1194e:	4939      	ldr	r1, [pc, #228]	; (11a34 <wsFileTxHandler(str&, CharDev&, void*)+0x204>)
   11950:	4603      	mov	r3, r0
   11952:	465a      	mov	r2, fp
   11954:	4648      	mov	r0, r9
   11956:	f009 f998 	bl	1ac8a <CharDev::printf(char const*, ...)>
   1195a:	4620      	mov	r0, r4
   1195c:	4936      	ldr	r1, [pc, #216]	; (11a38 <wsFileTxHandler(str&, CharDev&, void*)+0x208>)
   1195e:	f009 f994 	bl	1ac8a <CharDev::printf(char const*, ...)>
   11962:	6823      	ldr	r3, [r4, #0]
   11964:	4620      	mov	r0, r4
   11966:	689b      	ldr	r3, [r3, #8]
   11968:	4798      	blx	r3
   1196a:	6823      	ldr	r3, [r4, #0]
   1196c:	4620      	mov	r0, r4
   1196e:	681b      	ldr	r3, [r3, #0]
   11970:	f10d 0117 	add.w	r1, sp, #23
   11974:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   11978:	4798      	blx	r3
   1197a:	2800      	cmp	r0, #0
   1197c:	d1f5      	bne.n	1196a <wsFileTxHandler(str&, CharDev&, void*)+0x13a>
   1197e:	2f02      	cmp	r7, #2
   11980:	f107 0301 	add.w	r3, r7, #1
   11984:	d89b      	bhi.n	118be <wsFileTxHandler(str&, CharDev&, void*)+0x8e>
   11986:	461f      	mov	r7, r3
   11988:	e7a5      	b.n	118d6 <wsFileTxHandler(str&, CharDev&, void*)+0xa6>
   1198a:	9b07      	ldr	r3, [sp, #28]
   1198c:	492b      	ldr	r1, [pc, #172]	; (11a3c <wsFileTxHandler(str&, CharDev&, void*)+0x20c>)
   1198e:	4652      	mov	r2, sl
   11990:	9300      	str	r3, [sp, #0]
   11992:	4620      	mov	r0, r4
   11994:	4643      	mov	r3, r8
   11996:	f009 f978 	bl	1ac8a <CharDev::printf(char const*, ...)>
   1199a:	6823      	ldr	r3, [r4, #0]
   1199c:	4620      	mov	r0, r4
   1199e:	689b      	ldr	r3, [r3, #8]
   119a0:	4798      	blx	r3
   119a2:	a808      	add	r0, sp, #32
   119a4:	f008 f873 	bl	19a8e <str::operator()() const>
   119a8:	4606      	mov	r6, r0
   119aa:	a808      	add	r0, sp, #32
   119ac:	f007 fed0 	bl	19750 <str::getCapacity() const>
   119b0:	4631      	mov	r1, r6
   119b2:	4602      	mov	r2, r0
   119b4:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
   119b8:	4620      	mov	r0, r4
   119ba:	f009 f93d 	bl	1ac38 <CharDev::gets(char*, int, unsigned int)>
   119be:	a808      	add	r0, sp, #32
   119c0:	491f      	ldr	r1, [pc, #124]	; (11a40 <wsFileTxHandler(str&, CharDev&, void*)+0x210>)
   119c2:	f007 ff5b 	bl	1987c <str::containsIgnoreCase(char const*) const>
   119c6:	b9d0      	cbnz	r0, 119fe <wsFileTxHandler(str&, CharDev&, void*)+0x1ce>
   119c8:	a808      	add	r0, sp, #32
   119ca:	f008 f860 	bl	19a8e <str::operator()() const>
   119ce:	491d      	ldr	r1, [pc, #116]	; (11a44 <wsFileTxHandler(str&, CharDev&, void*)+0x214>)
   119d0:	4602      	mov	r2, r0
   119d2:	4648      	mov	r0, r9
   119d4:	f009 f959 	bl	1ac8a <CharDev::printf(char const*, ...)>
   119d8:	4620      	mov	r0, r4
   119da:	4917      	ldr	r1, [pc, #92]	; (11a38 <wsFileTxHandler(str&, CharDev&, void*)+0x208>)
   119dc:	f009 f955 	bl	1ac8a <CharDev::printf(char const*, ...)>
   119e0:	6823      	ldr	r3, [r4, #0]
   119e2:	4620      	mov	r0, r4
   119e4:	689b      	ldr	r3, [r3, #8]
   119e6:	4798      	blx	r3
   119e8:	6823      	ldr	r3, [r4, #0]
   119ea:	4620      	mov	r0, r4
   119ec:	681b      	ldr	r3, [r3, #0]
   119ee:	f10d 0117 	add.w	r1, sp, #23
   119f2:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   119f6:	4798      	blx	r3
   119f8:	2800      	cmp	r0, #0
   119fa:	d1f5      	bne.n	119e8 <wsFileTxHandler(str&, CharDev&, void*)+0x1b8>
   119fc:	e7bf      	b.n	1197e <wsFileTxHandler(str&, CharDev&, void*)+0x14e>
   119fe:	a808      	add	r0, sp, #32
   11a00:	4911      	ldr	r1, [pc, #68]	; (11a48 <wsFileTxHandler(str&, CharDev&, void*)+0x218>)
   11a02:	f008 f8fc 	bl	19bfe <str::operator=(char const*)>
   11a06:	9b07      	ldr	r3, [sp, #28]
   11a08:	4648      	mov	r0, r9
   11a0a:	4498      	add	r8, r3
   11a0c:	490f      	ldr	r1, [pc, #60]	; (11a4c <wsFileTxHandler(str&, CharDev&, void*)+0x21c>)
   11a0e:	4642      	mov	r2, r8
   11a10:	9bf0      	ldr	r3, [sp, #960]	; 0x3c0
   11a12:	f009 f93a 	bl	1ac8a <CharDev::printf(char const*, ...)>
   11a16:	2d00      	cmp	r5, #0
   11a18:	f43f af49 	beq.w	118ae <wsFileTxHandler(str&, CharDev&, void*)+0x7e>
   11a1c:	3d01      	subs	r5, #1
   11a1e:	e746      	b.n	118ae <wsFileTxHandler(str&, CharDev&, void*)+0x7e>
   11a20:	f20d 5ddc 	addw	sp, sp, #1500	; 0x5dc
   11a24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11a28:	00025756 	.word	0x00025756
   11a2c:	00025765 	.word	0x00025765
   11a30:	0002577c 	.word	0x0002577c
   11a34:	0002578e 	.word	0x0002578e
   11a38:	00025374 	.word	0x00025374
   11a3c:	000257b5 	.word	0x000257b5
   11a40:	000257cb 	.word	0x000257cb
   11a44:	000257ce 	.word	0x000257ce
   11a48:	00025375 	.word	0x00025375
   11a4c:	00025806 	.word	0x00025806

00011a50 <wsStreamHandler(str&, CharDev&, void*)>:
_ZL15wsStreamHandlerR3strR7CharDevPv():
   11a50:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   11a54:	b086      	sub	sp, #24
   11a56:	aa06      	add	r2, sp, #24
   11a58:	2600      	movs	r6, #0
   11a5a:	4607      	mov	r7, r0
   11a5c:	f842 6d0c 	str.w	r6, [r2, #-12]!
   11a60:	460d      	mov	r5, r1
   11a62:	493d      	ldr	r1, [pc, #244]	; (11b58 <wsStreamHandler(str&, CharDev&, void*)+0x108>)
   11a64:	f007 fe7a 	bl	1975c <str::scanf(char const*, ...)>
   11a68:	4638      	mov	r0, r7
   11a6a:	2101      	movs	r1, #1
   11a6c:	2220      	movs	r2, #32
   11a6e:	f007 ffb9 	bl	199e4 <str::eraseFirstWords(int, char)>
   11a72:	9b03      	ldr	r3, [sp, #12]
   11a74:	2b00      	cmp	r3, #0
   11a76:	d064      	beq.n	11b42 <wsStreamHandler(str&, CharDev&, void*)+0xf2>
   11a78:	4638      	mov	r0, r7
   11a7a:	f007 fe66 	bl	1974a <str::getLen() const>
   11a7e:	2800      	cmp	r0, #0
   11a80:	d05f      	beq.n	11b42 <wsStreamHandler(str&, CharDev&, void*)+0xf2>
   11a82:	f7ff fec5 	bl	11810 <SingletonTemplate<NordicStream>::getInstance()>
   11a86:	f88d 600b 	strb.w	r6, [sp, #11]
   11a8a:	4604      	mov	r4, r0
   11a8c:	6823      	ldr	r3, [r4, #0]
   11a8e:	4620      	mov	r0, r4
   11a90:	681b      	ldr	r3, [r3, #0]
   11a92:	f10d 010b 	add.w	r1, sp, #11
   11a96:	2205      	movs	r2, #5
   11a98:	4798      	blx	r3
   11a9a:	4606      	mov	r6, r0
   11a9c:	2800      	cmp	r0, #0
   11a9e:	d1f5      	bne.n	11a8c <wsStreamHandler(str&, CharDev&, void*)+0x3c>
   11aa0:	9b03      	ldr	r3, [sp, #12]
   11aa2:	4638      	mov	r0, r7
   11aa4:	f884 3053 	strb.w	r3, [r4, #83]	; 0x53
   11aa8:	f007 fff1 	bl	19a8e <str::operator()() const>
   11aac:	f04f 32ff 	mov.w	r2, #4294967295
   11ab0:	4601      	mov	r1, r0
   11ab2:	4620      	mov	r0, r4
   11ab4:	f009 f8b2 	bl	1ac1c <CharDev::putline(char const*, unsigned int)>
   11ab8:	6823      	ldr	r3, [r4, #0]
   11aba:	4620      	mov	r0, r4
   11abc:	689b      	ldr	r3, [r3, #8]
   11abe:	4798      	blx	r3
   11ac0:	4b26      	ldr	r3, [pc, #152]	; (11b5c <wsStreamHandler(str&, CharDev&, void*)+0x10c>)
   11ac2:	9605      	str	r6, [sp, #20]
   11ac4:	6818      	ldr	r0, [r3, #0]
   11ac6:	4637      	mov	r7, r6
   11ac8:	9004      	str	r0, [sp, #16]
   11aca:	6823      	ldr	r3, [r4, #0]
   11acc:	4620      	mov	r0, r4
   11ace:	681b      	ldr	r3, [r3, #0]
   11ad0:	f10d 010b 	add.w	r1, sp, #11
   11ad4:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   11ad8:	4798      	blx	r3
   11ada:	b178      	cbz	r0, 11afc <wsStreamHandler(str&, CharDev&, void*)+0xac>
   11adc:	f10d 0115 	add.w	r1, sp, #21
   11ae0:	2203      	movs	r2, #3
   11ae2:	a805      	add	r0, sp, #20
   11ae4:	f00d f8a0 	bl	1ec28 <memmove>
   11ae8:	f89d 800b 	ldrb.w	r8, [sp, #11]
   11aec:	a805      	add	r0, sp, #20
   11aee:	a904      	add	r1, sp, #16
   11af0:	2204      	movs	r2, #4
   11af2:	f88d 8017 	strb.w	r8, [sp, #23]
   11af6:	f00d f87f 	bl	1ebf8 <memcmp>
   11afa:	b938      	cbnz	r0, 11b0c <wsStreamHandler(str&, CharDev&, void*)+0xbc>
   11afc:	2218      	movs	r2, #24
   11afe:	fbb7 f3f2 	udiv	r3, r7, r2
   11b02:	fb02 7213 	mls	r2, r2, r3, r7
   11b06:	b16a      	cbz	r2, 11b24 <wsStreamHandler(str&, CharDev&, void*)+0xd4>
   11b08:	3301      	adds	r3, #1
   11b0a:	e00b      	b.n	11b24 <wsStreamHandler(str&, CharDev&, void*)+0xd4>
   11b0c:	682b      	ldr	r3, [r5, #0]
   11b0e:	4628      	mov	r0, r5
   11b10:	685b      	ldr	r3, [r3, #4]
   11b12:	fa4f f188 	sxtb.w	r1, r8
   11b16:	2201      	movs	r2, #1
   11b18:	3701      	adds	r7, #1
   11b1a:	4798      	blx	r3
   11b1c:	2800      	cmp	r0, #0
   11b1e:	d1d4      	bne.n	11aca <wsStreamHandler(str&, CharDev&, void*)+0x7a>
   11b20:	3601      	adds	r6, #1
   11b22:	e7d2      	b.n	11aca <wsStreamHandler(str&, CharDev&, void*)+0x7a>
   11b24:	4628      	mov	r0, r5
   11b26:	490e      	ldr	r1, [pc, #56]	; (11b60 <wsStreamHandler(str&, CharDev&, void*)+0x110>)
   11b28:	463a      	mov	r2, r7
   11b2a:	f009 f8ae 	bl	1ac8a <CharDev::printf(char const*, ...)>
   11b2e:	b176      	cbz	r6, 11b4e <wsStreamHandler(str&, CharDev&, void*)+0xfe>
   11b30:	2361      	movs	r3, #97	; 0x61
   11b32:	9300      	str	r3, [sp, #0]
   11b34:	4628      	mov	r0, r5
   11b36:	490b      	ldr	r1, [pc, #44]	; (11b64 <wsStreamHandler(str&, CharDev&, void*)+0x114>)
   11b38:	4632      	mov	r2, r6
   11b3a:	4b0b      	ldr	r3, [pc, #44]	; (11b68 <wsStreamHandler(str&, CharDev&, void*)+0x118>)
   11b3c:	f009 f8a5 	bl	1ac8a <CharDev::printf(char const*, ...)>
   11b40:	e005      	b.n	11b4e <wsStreamHandler(str&, CharDev&, void*)+0xfe>
   11b42:	4628      	mov	r0, r5
   11b44:	4909      	ldr	r1, [pc, #36]	; (11b6c <wsStreamHandler(str&, CharDev&, void*)+0x11c>)
   11b46:	f04f 32ff 	mov.w	r2, #4294967295
   11b4a:	f009 f867 	bl	1ac1c <CharDev::putline(char const*, unsigned int)>
   11b4e:	2001      	movs	r0, #1
   11b50:	b006      	add	sp, #24
   11b52:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   11b56:	bf00      	nop
   11b58:	000253c6 	.word	0x000253c6
   11b5c:	0002540a 	.word	0x0002540a
   11b60:	00025812 	.word	0x00025812
   11b64:	00025839 	.word	0x00025839
   11b68:	000258f2 	.word	0x000258f2
   11b6c:	0002592e 	.word	0x0002592e

00011b70 <hl_print_line()>:
_ZL13hl_print_linev():
   11b70:	4801      	ldr	r0, [pc, #4]	; (11b78 <hl_print_line()+0x8>)
   11b72:	f00d bdf3 	b.w	1f75c <puts>
   11b76:	bf00      	nop
   11b78:	0002595a 	.word	0x0002595a

00011b7c <ssp_set_max_clock>:
ssp_set_max_clock():
   11b7c:	b538      	push	{r3, r4, r5, lr}
   11b7e:	4604      	mov	r4, r0
   11b80:	460d      	mov	r5, r1
   11b82:	f00b f86d 	bl	1cc60 <sys_get_cpu_clock>
   11b86:	4b07      	ldr	r3, [pc, #28]	; (11ba4 <ssp_set_max_clock+0x28>)
   11b88:	fbb0 f0f3 	udiv	r0, r0, r3
   11b8c:	2302      	movs	r3, #2
   11b8e:	fbb0 f2f3 	udiv	r2, r0, r3
   11b92:	4295      	cmp	r5, r2
   11b94:	d301      	bcc.n	11b9a <ssp_set_max_clock+0x1e>
   11b96:	6123      	str	r3, [r4, #16]
   11b98:	bd38      	pop	{r3, r4, r5, pc}
   11b9a:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
   11b9e:	d0fa      	beq.n	11b96 <ssp_set_max_clock+0x1a>
   11ba0:	3302      	adds	r3, #2
   11ba2:	e7f4      	b.n	11b8e <ssp_set_max_clock+0x12>
   11ba4:	000f4240 	.word	0x000f4240

00011ba8 <hl_mount_storage(FileSystemObject&, char const*)>:
_ZL16hl_mount_storageR16FileSystemObjectPKc():
   11ba8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   11baa:	f200 2635 	addw	r6, r0, #565	; 0x235
   11bae:	460d      	mov	r5, r1
   11bb0:	2201      	movs	r2, #1
   11bb2:	4631      	mov	r1, r6
   11bb4:	f005 ff2a 	bl	17a0c <f_mount>
   11bb8:	b2c4      	uxtb	r4, r0
   11bba:	bb4c      	cbnz	r4, 11c10 <hl_mount_storage(FileSystemObject&, char const*)+0x68>
   11bbc:	a904      	add	r1, sp, #16
   11bbe:	f841 4d04 	str.w	r4, [r1, #-4]!
   11bc2:	4630      	mov	r0, r6
   11bc4:	aa02      	add	r2, sp, #8
   11bc6:	f006 fb00 	bl	181ca <f_getfree>
   11bca:	b9f8      	cbnz	r0, 11c0c <hl_mount_storage(FileSystemObject&, char const*)+0x64>
   11bcc:	9a02      	ldr	r2, [sp, #8]
   11bce:	9903      	ldr	r1, [sp, #12]
   11bd0:	7893      	ldrb	r3, [r2, #2]
   11bd2:	6992      	ldr	r2, [r2, #24]
   11bd4:	4359      	muls	r1, r3
   11bd6:	3a02      	subs	r2, #2
   11bd8:	435a      	muls	r2, r3
   11bda:	0852      	lsrs	r2, r2, #1
   11bdc:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
   11be0:	4810      	ldr	r0, [pc, #64]	; (11c24 <hl_mount_storage(FileSystemObject&, char const*)+0x7c>)
   11be2:	4b11      	ldr	r3, [pc, #68]	; (11c28 <hl_mount_storage(FileSystemObject&, char const*)+0x80>)
   11be4:	bf2c      	ite	cs
   11be6:	f44f 6480 	movcs.w	r4, #1024	; 0x400
   11bea:	2401      	movcc	r4, #1
   11bec:	ea4f 0151 	mov.w	r1, r1, lsr #1
   11bf0:	bf28      	it	cs
   11bf2:	4603      	movcs	r3, r0
   11bf4:	fbb1 f1f4 	udiv	r1, r1, r4
   11bf8:	e88d 000a 	stmia.w	sp, {r1, r3}
   11bfc:	480b      	ldr	r0, [pc, #44]	; (11c2c <hl_mount_storage(FileSystemObject&, char const*)+0x84>)
   11bfe:	4629      	mov	r1, r5
   11c00:	fbb2 f2f4 	udiv	r2, r2, r4
   11c04:	f00d fd32 	bl	1f66c <iprintf>
   11c08:	2001      	movs	r0, #1
   11c0a:	e008      	b.n	11c1e <hl_mount_storage(FileSystemObject&, char const*)+0x76>
   11c0c:	4b08      	ldr	r3, [pc, #32]	; (11c30 <hl_mount_storage(FileSystemObject&, char const*)+0x88>)
   11c0e:	e000      	b.n	11c12 <hl_mount_storage(FileSystemObject&, char const*)+0x6a>
   11c10:	4b08      	ldr	r3, [pc, #32]	; (11c34 <hl_mount_storage(FileSystemObject&, char const*)+0x8c>)
   11c12:	4809      	ldr	r0, [pc, #36]	; (11c38 <hl_mount_storage(FileSystemObject&, char const*)+0x90>)
   11c14:	4629      	mov	r1, r5
   11c16:	b262      	sxtb	r2, r4
   11c18:	f00d fd28 	bl	1f66c <iprintf>
   11c1c:	2000      	movs	r0, #0
   11c1e:	b004      	add	sp, #16
   11c20:	bd70      	pop	{r4, r5, r6, pc}
   11c22:	bf00      	nop
   11c24:	00025998 	.word	0x00025998
   11c28:	00025995 	.word	0x00025995
   11c2c:	000259a2 	.word	0x000259a2
   11c30:	0002599b 	.word	0x0002599b
   11c34:	0002599f 	.word	0x0002599f
   11c38:	000259d0 	.word	0x000259d0

00011c3c <SingletonTemplate<LED_Display>::getInstance()>:
_ZN17SingletonTemplateI11LED_DisplayE11getInstanceEv():
   11c3c:	b538      	push	{r3, r4, r5, lr}
   11c3e:	4d07      	ldr	r5, [pc, #28]	; (11c5c <SingletonTemplate<LED_Display>::getInstance()+0x20>)
   11c40:	682b      	ldr	r3, [r5, #0]
   11c42:	b94b      	cbnz	r3, 11c58 <SingletonTemplate<LED_Display>::getInstance()+0x1c>
   11c44:	2008      	movs	r0, #8
   11c46:	f7fe fb13 	bl	10270 <operator new(unsigned int)>
   11c4a:	4604      	mov	r4, r0
   11c4c:	f7ff f94e 	bl	10eec <SingletonTemplate<I2C2>::getInstance()>
   11c50:	2340      	movs	r3, #64	; 0x40
   11c52:	6020      	str	r0, [r4, #0]
   11c54:	7123      	strb	r3, [r4, #4]
   11c56:	602c      	str	r4, [r5, #0]
   11c58:	6828      	ldr	r0, [r5, #0]
   11c5a:	bd38      	pop	{r3, r4, r5, pc}
   11c5c:	2007c238 	.word	0x2007c238

00011c60 <SingletonTemplate<LED>::getInstance()>:
_ZN17SingletonTemplateI3LEDE11getInstanceEv():
   11c60:	b538      	push	{r3, r4, r5, lr}
   11c62:	4c05      	ldr	r4, [pc, #20]	; (11c78 <SingletonTemplate<LED>::getInstance()+0x18>)
   11c64:	6825      	ldr	r5, [r4, #0]
   11c66:	b925      	cbnz	r5, 11c72 <SingletonTemplate<LED>::getInstance()+0x12>
   11c68:	2001      	movs	r0, #1
   11c6a:	f7fe fb01 	bl	10270 <operator new(unsigned int)>
   11c6e:	7005      	strb	r5, [r0, #0]
   11c70:	6020      	str	r0, [r4, #0]
   11c72:	6820      	ldr	r0, [r4, #0]
   11c74:	bd38      	pop	{r3, r4, r5, pc}
   11c76:	bf00      	nop
   11c78:	2007c234 	.word	0x2007c234

00011c7c <SingletonTemplate<TemperatureSensor>::getInstance()>:
_ZN17SingletonTemplateI17TemperatureSensorE11getInstanceEv():
   11c7c:	b538      	push	{r3, r4, r5, lr}
   11c7e:	4d08      	ldr	r5, [pc, #32]	; (11ca0 <SingletonTemplate<TemperatureSensor>::getInstance()+0x24>)
   11c80:	682b      	ldr	r3, [r5, #0]
   11c82:	b95b      	cbnz	r3, 11c9c <SingletonTemplate<TemperatureSensor>::getInstance()+0x20>
   11c84:	200c      	movs	r0, #12
   11c86:	f7fe faf3 	bl	10270 <operator new(unsigned int)>
   11c8a:	4604      	mov	r4, r0
   11c8c:	f7ff f92e 	bl	10eec <SingletonTemplate<I2C2>::getInstance()>
   11c90:	2390      	movs	r3, #144	; 0x90
   11c92:	7123      	strb	r3, [r4, #4]
   11c94:	2300      	movs	r3, #0
   11c96:	6020      	str	r0, [r4, #0]
   11c98:	60a3      	str	r3, [r4, #8]
   11c9a:	602c      	str	r4, [r5, #0]
   11c9c:	6828      	ldr	r0, [r5, #0]
   11c9e:	bd38      	pop	{r3, r4, r5, pc}
   11ca0:	2007c208 	.word	0x2007c208

00011ca4 <SingletonTemplate<Light_Sensor>::getInstance()>:
_ZN17SingletonTemplateI12Light_SensorE11getInstanceEv():
   11ca4:	b510      	push	{r4, lr}
   11ca6:	4c04      	ldr	r4, [pc, #16]	; (11cb8 <SingletonTemplate<Light_Sensor>::getInstance()+0x14>)
   11ca8:	6823      	ldr	r3, [r4, #0]
   11caa:	b91b      	cbnz	r3, 11cb4 <SingletonTemplate<Light_Sensor>::getInstance()+0x10>
   11cac:	2001      	movs	r0, #1
   11cae:	f7fe fadf 	bl	10270 <operator new(unsigned int)>
   11cb2:	6020      	str	r0, [r4, #0]
   11cb4:	6820      	ldr	r0, [r4, #0]
   11cb6:	bd10      	pop	{r4, pc}
   11cb8:	2007c20c 	.word	0x2007c20c

00011cbc <SingletonTemplate<Switches>::getInstance()>:
_ZN17SingletonTemplateI8SwitchesE11getInstanceEv():
   11cbc:	b510      	push	{r4, lr}
   11cbe:	4c04      	ldr	r4, [pc, #16]	; (11cd0 <SingletonTemplate<Switches>::getInstance()+0x14>)
   11cc0:	6823      	ldr	r3, [r4, #0]
   11cc2:	b91b      	cbnz	r3, 11ccc <SingletonTemplate<Switches>::getInstance()+0x10>
   11cc4:	2001      	movs	r0, #1
   11cc6:	f7fe fad3 	bl	10270 <operator new(unsigned int)>
   11cca:	6020      	str	r0, [r4, #0]
   11ccc:	6820      	ldr	r0, [r4, #0]
   11cce:	bd10      	pop	{r4, pc}
   11cd0:	2007c230 	.word	0x2007c230

00011cd4 <high_level_init()>:
_Z15high_level_initv():
   11cd4:	49ae      	ldr	r1, [pc, #696]	; (11f90 <high_level_init()+0x2bc>)
   11cd6:	4aaf      	ldr	r2, [pc, #700]	; (11f94 <high_level_init()+0x2c0>)
   11cd8:	2340      	movs	r3, #64	; 0x40
   11cda:	b5f0      	push	{r4, r5, r6, r7, lr}
   11cdc:	618b      	str	r3, [r1, #24]
   11cde:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
   11ce2:	6193      	str	r3, [r2, #24]
   11ce4:	f44f 3380 	mov.w	r3, #65536	; 0x10000
   11ce8:	618b      	str	r3, [r1, #24]
   11cea:	4bab      	ldr	r3, [pc, #684]	; (11f98 <high_level_init()+0x2c4>)
   11cec:	f5ad 7d05 	sub.w	sp, sp, #532	; 0x214
   11cf0:	6818      	ldr	r0, [r3, #0]
   11cf2:	2507      	movs	r5, #7
   11cf4:	f020 00f0 	bic.w	r0, r0, #240	; 0xf0
   11cf8:	6018      	str	r0, [r3, #0]
   11cfa:	6818      	ldr	r0, [r3, #0]
   11cfc:	2402      	movs	r4, #2
   11cfe:	f040 0050 	orr.w	r0, r0, #80	; 0x50
   11d02:	6018      	str	r0, [r3, #0]
   11d04:	6818      	ldr	r0, [r3, #0]
   11d06:	f420 5040 	bic.w	r0, r0, #12288	; 0x3000
   11d0a:	6018      	str	r0, [r3, #0]
   11d0c:	6808      	ldr	r0, [r1, #0]
   11d0e:	f040 0040 	orr.w	r0, r0, #64	; 0x40
   11d12:	6008      	str	r0, [r1, #0]
   11d14:	6818      	ldr	r0, [r3, #0]
   11d16:	f420 207c 	bic.w	r0, r0, #1032192	; 0xfc000
   11d1a:	6018      	str	r0, [r3, #0]
   11d1c:	6818      	ldr	r0, [r3, #0]
   11d1e:	f440 2028 	orr.w	r0, r0, #688128	; 0xa8000
   11d22:	6018      	str	r0, [r3, #0]
   11d24:	6818      	ldr	r0, [r3, #0]
   11d26:	f420 0070 	bic.w	r0, r0, #15728640	; 0xf00000
   11d2a:	6018      	str	r0, [r3, #0]
   11d2c:	6818      	ldr	r0, [r3, #0]
   11d2e:	f440 0020 	orr.w	r0, r0, #10485760	; 0xa00000
   11d32:	6018      	str	r0, [r3, #0]
   11d34:	6818      	ldr	r0, [r3, #0]
   11d36:	f020 4040 	bic.w	r0, r0, #3221225472	; 0xc0000000
   11d3a:	6018      	str	r0, [r3, #0]
   11d3c:	6818      	ldr	r0, [r3, #0]
   11d3e:	f040 4000 	orr.w	r0, r0, #2147483648	; 0x80000000
   11d42:	6018      	str	r0, [r3, #0]
   11d44:	6858      	ldr	r0, [r3, #4]
   11d46:	f020 003c 	bic.w	r0, r0, #60	; 0x3c
   11d4a:	6058      	str	r0, [r3, #4]
   11d4c:	6858      	ldr	r0, [r3, #4]
   11d4e:	f040 0028 	orr.w	r0, r0, #40	; 0x28
   11d52:	6058      	str	r0, [r3, #4]
   11d54:	6858      	ldr	r0, [r3, #4]
   11d56:	f020 0003 	bic.w	r0, r0, #3
   11d5a:	6058      	str	r0, [r3, #4]
   11d5c:	6808      	ldr	r0, [r1, #0]
   11d5e:	f440 3080 	orr.w	r0, r0, #65536	; 0x10000
   11d62:	6008      	str	r0, [r1, #0]
   11d64:	6858      	ldr	r0, [r3, #4]
   11d66:	f420 5040 	bic.w	r0, r0, #12288	; 0x3000
   11d6a:	6058      	str	r0, [r3, #4]
   11d6c:	6808      	ldr	r0, [r1, #0]
   11d6e:	f420 0080 	bic.w	r0, r0, #4194304	; 0x400000
   11d72:	6008      	str	r0, [r1, #0]
   11d74:	68d9      	ldr	r1, [r3, #12]
   11d76:	f421 3140 	bic.w	r1, r1, #196608	; 0x30000
   11d7a:	60d9      	str	r1, [r3, #12]
   11d7c:	6811      	ldr	r1, [r2, #0]
   11d7e:	f041 7180 	orr.w	r1, r1, #16777216	; 0x1000000
   11d82:	6011      	str	r1, [r2, #0]
   11d84:	6859      	ldr	r1, [r3, #4]
   11d86:	f421 2140 	bic.w	r1, r1, #786432	; 0xc0000
   11d8a:	6059      	str	r1, [r3, #4]
   11d8c:	6859      	ldr	r1, [r3, #4]
   11d8e:	f441 2180 	orr.w	r1, r1, #262144	; 0x40000
   11d92:	6059      	str	r1, [r3, #4]
   11d94:	6898      	ldr	r0, [r3, #8]
   11d96:	4981      	ldr	r1, [pc, #516]	; (11f9c <high_level_init()+0x2c8>)
   11d98:	4001      	ands	r1, r0
   11d9a:	6099      	str	r1, [r3, #8]
   11d9c:	6811      	ldr	r1, [r2, #0]
   11d9e:	f441 7189 	orr.w	r1, r1, #274	; 0x112
   11da2:	f041 0101 	orr.w	r1, r1, #1
   11da6:	6011      	str	r1, [r2, #0]
   11da8:	6899      	ldr	r1, [r3, #8]
   11daa:	f421 1170 	bic.w	r1, r1, #3932160	; 0x3c0000
   11dae:	6099      	str	r1, [r3, #8]
   11db0:	6899      	ldr	r1, [r3, #8]
   11db2:	f021 4170 	bic.w	r1, r1, #4026531840	; 0xf0000000
   11db6:	6099      	str	r1, [r3, #8]
   11db8:	6811      	ldr	r1, [r2, #0]
   11dba:	f421 4146 	bic.w	r1, r1, #50688	; 0xc600
   11dbe:	6011      	str	r1, [r2, #0]
   11dc0:	68d9      	ldr	r1, [r3, #12]
   11dc2:	f021 0130 	bic.w	r1, r1, #48	; 0x30
   11dc6:	60d9      	str	r1, [r3, #12]
   11dc8:	68d9      	ldr	r1, [r3, #12]
   11dca:	f041 0130 	orr.w	r1, r1, #48	; 0x30
   11dce:	60d9      	str	r1, [r3, #12]
   11dd0:	68d9      	ldr	r1, [r3, #12]
   11dd2:	f421 1170 	bic.w	r1, r1, #3932160	; 0x3c0000
   11dd6:	60d9      	str	r1, [r3, #12]
   11dd8:	6813      	ldr	r3, [r2, #0]
   11dda:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
   11dde:	6013      	str	r3, [r2, #0]
   11de0:	6813      	ldr	r3, [r2, #0]
   11de2:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
   11de6:	6013      	str	r3, [r2, #0]
   11de8:	f007 ff62 	bl	19cb0 <adc0_init>
   11dec:	200a      	movs	r0, #10
   11dee:	2101      	movs	r1, #1
   11df0:	f00a fd6a 	bl	1c8c8 <lpc_pconp>
   11df4:	200a      	movs	r0, #10
   11df6:	2101      	movs	r1, #1
   11df8:	f00a fd7e 	bl	1c8f8 <lpc_pclk>
   11dfc:	4868      	ldr	r0, [pc, #416]	; (11fa0 <high_level_init()+0x2cc>)
   11dfe:	2101      	movs	r1, #1
   11e00:	6005      	str	r5, [r0, #0]
   11e02:	6044      	str	r4, [r0, #4]
   11e04:	f7ff feba 	bl	11b7c <ssp_set_max_clock>
   11e08:	f008 fda6 	bl	1a958 <ssp1_dma_init>
   11e0c:	2015      	movs	r0, #21
   11e0e:	2101      	movs	r1, #1
   11e10:	f00a fd5a 	bl	1c8c8 <lpc_pconp>
   11e14:	2015      	movs	r0, #21
   11e16:	2101      	movs	r1, #1
   11e18:	f00a fd6e 	bl	1c8f8 <lpc_pclk>
   11e1c:	4861      	ldr	r0, [pc, #388]	; (11fa4 <high_level_init()+0x2d0>)
   11e1e:	2101      	movs	r1, #1
   11e20:	6005      	str	r5, [r0, #0]
   11e22:	6044      	str	r4, [r0, #4]
   11e24:	f7ff feaa 	bl	11b7c <ssp_set_max_clock>
   11e28:	f7ff f860 	bl	10eec <SingletonTemplate<I2C2>::getInstance()>
   11e2c:	2164      	movs	r1, #100	; 0x64
   11e2e:	f008 faeb 	bl	1a408 <I2C2::init(unsigned int)>
   11e32:	b910      	cbnz	r0, 11e3a <high_level_init()+0x166>
   11e34:	485c      	ldr	r0, [pc, #368]	; (11fa8 <high_level_init()+0x2d4>)
   11e36:	f00d fc91 	bl	1f75c <puts>
   11e3a:	f00a fd81 	bl	1c940 <lpc_sys_setup_system_timer>
   11e3e:	f003 fc2b 	bl	15698 <wireless_init>
   11e42:	b910      	cbnz	r0, 11e4a <high_level_init()+0x176>
   11e44:	4859      	ldr	r0, [pc, #356]	; (11fac <high_level_init()+0x2d8>)
   11e46:	f00d fc89 	bl	1f75c <puts>
   11e4a:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
   11e4e:	f007 feed 	bl	19c2c <delay_ms>
   11e52:	f7ff fe8d 	bl	11b70 <hl_print_line()>
   11e56:	f00a ff03 	bl	1cc60 <sys_get_cpu_clock>
   11e5a:	f00c f825 	bl	1dea8 <__aeabi_ui2f>
   11e5e:	4954      	ldr	r1, [pc, #336]	; (11fb0 <high_level_init()+0x2dc>)
   11e60:	f00c f92e 	bl	1e0c0 <__aeabi_fdiv>
   11e64:	f00b fc94 	bl	1d790 <__aeabi_f2d>
   11e68:	4602      	mov	r2, r0
   11e6a:	460b      	mov	r3, r1
   11e6c:	4851      	ldr	r0, [pc, #324]	; (11fb4 <high_level_init()+0x2e0>)
   11e6e:	f00d fbfd 	bl	1f66c <iprintf>
   11e72:	f00a fbf9 	bl	1c668 <sys_get_boot_type>
   11e76:	2805      	cmp	r0, #5
   11e78:	ac04      	add	r4, sp, #16
   11e7a:	d114      	bne.n	11ea6 <high_level_init()+0x1d2>
   11e7c:	2300      	movs	r3, #0
   11e7e:	6063      	str	r3, [r4, #4]
   11e80:	4b4d      	ldr	r3, [pc, #308]	; (11fb8 <high_level_init()+0x2e4>)
   11e82:	681b      	ldr	r3, [r3, #0]
   11e84:	6023      	str	r3, [r4, #0]
   11e86:	f7ff fe73 	bl	11b70 <hl_print_line()>
   11e8a:	4b4c      	ldr	r3, [pc, #304]	; (11fbc <high_level_init()+0x2e8>)
   11e8c:	484c      	ldr	r0, [pc, #304]	; (11fc0 <high_level_init()+0x2ec>)
   11e8e:	6cd9      	ldr	r1, [r3, #76]	; 0x4c
   11e90:	6d1a      	ldr	r2, [r3, #80]	; 0x50
   11e92:	6d5b      	ldr	r3, [r3, #84]	; 0x54
   11e94:	9400      	str	r4, [sp, #0]
   11e96:	f00d fbe9 	bl	1f66c <iprintf>
   11e9a:	f7ff fe69 	bl	11b70 <hl_print_line()>
   11e9e:	f241 3088 	movw	r0, #5000	; 0x1388
   11ea2:	f007 fec3 	bl	19c2c <delay_ms>
   11ea6:	f7fe fb13 	bl	104d0 <Storage::getFlashDrive()>
   11eaa:	4946      	ldr	r1, [pc, #280]	; (11fc4 <high_level_init()+0x2f0>)
   11eac:	f7ff fe7c 	bl	11ba8 <hl_mount_storage(FileSystemObject&, char const*)>
   11eb0:	4605      	mov	r5, r0
   11eb2:	bb68      	cbnz	r0, 11f10 <high_level_init()+0x23c>
   11eb4:	4844      	ldr	r0, [pc, #272]	; (11fc8 <high_level_init()+0x2f4>)
   11eb6:	f00d fbd9 	bl	1f66c <iprintf>
   11eba:	f004 fd81 	bl	169c0 <flash_chip_erase>
   11ebe:	f7fe fb07 	bl	104d0 <Storage::getFlashDrive()>
   11ec2:	4629      	mov	r1, r5
   11ec4:	462a      	mov	r2, r5
   11ec6:	f200 2035 	addw	r0, r0, #565	; 0x235
   11eca:	f006 fb7b 	bl	185c4 <f_mkfs>
   11ece:	4b3f      	ldr	r3, [pc, #252]	; (11fcc <high_level_init()+0x2f8>)
   11ed0:	4a3f      	ldr	r2, [pc, #252]	; (11fd0 <high_level_init()+0x2fc>)
   11ed2:	2800      	cmp	r0, #0
   11ed4:	bf14      	ite	ne
   11ed6:	4610      	movne	r0, r2
   11ed8:	4618      	moveq	r0, r3
   11eda:	f00d fc3f 	bl	1f75c <puts>
   11ede:	f7fe faf7 	bl	104d0 <Storage::getFlashDrive()>
   11ee2:	4938      	ldr	r1, [pc, #224]	; (11fc4 <high_level_init()+0x2f0>)
   11ee4:	f7ff fe60 	bl	11ba8 <hl_mount_storage(FileSystemObject&, char const*)>
   11ee8:	b990      	cbnz	r0, 11f10 <high_level_init()+0x23c>
   11eea:	483a      	ldr	r0, [pc, #232]	; (11fd4 <high_level_init()+0x300>)
   11eec:	f00d fc36 	bl	1f75c <puts>
   11ef0:	f004 fce8 	bl	168c4 <flash_get_page_size>
   11ef4:	4601      	mov	r1, r0
   11ef6:	4838      	ldr	r0, [pc, #224]	; (11fd8 <high_level_init()+0x304>)
   11ef8:	f00d fbb8 	bl	1f66c <iprintf>
   11efc:	f004 fcd2 	bl	168a4 <flash_get_page_count>
   11f00:	4605      	mov	r5, r0
   11f02:	f004 fcdf 	bl	168c4 <flash_get_page_size>
   11f06:	fb05 f100 	mul.w	r1, r5, r0
   11f0a:	4834      	ldr	r0, [pc, #208]	; (11fdc <high_level_init()+0x308>)
   11f0c:	f00d fbae 	bl	1f66c <iprintf>
   11f10:	4d33      	ldr	r5, [pc, #204]	; (11fe0 <high_level_init()+0x30c>)
   11f12:	4e34      	ldr	r6, [pc, #208]	; (11fe4 <high_level_init()+0x310>)
   11f14:	682b      	ldr	r3, [r5, #0]
   11f16:	f013 0701 	ands.w	r7, r3, #1
   11f1a:	d116      	bne.n	11f4a <high_level_init()+0x276>
   11f1c:	4628      	mov	r0, r5
   11f1e:	f00b f98b 	bl	1d238 <__cxa_guard_acquire>
   11f22:	b190      	cbz	r0, 11f4a <high_level_init()+0x276>
   11f24:	f44f 700e 	mov.w	r0, #568	; 0x238
   11f28:	f7fe f9a2 	bl	10270 <operator new(unsigned int)>
   11f2c:	2201      	movs	r2, #1
   11f2e:	f880 2234 	strb.w	r2, [r0, #564]	; 0x234
   11f32:	2231      	movs	r2, #49	; 0x31
   11f34:	f880 2235 	strb.w	r2, [r0, #565]	; 0x235
   11f38:	223a      	movs	r2, #58	; 0x3a
   11f3a:	f880 2236 	strb.w	r2, [r0, #566]	; 0x236
   11f3e:	f880 7237 	strb.w	r7, [r0, #567]	; 0x237
   11f42:	6030      	str	r0, [r6, #0]
   11f44:	4628      	mov	r0, r5
   11f46:	f00b f985 	bl	1d254 <__cxa_guard_release>
   11f4a:	6830      	ldr	r0, [r6, #0]
   11f4c:	4926      	ldr	r1, [pc, #152]	; (11fe8 <high_level_init()+0x314>)
   11f4e:	f7ff fe2b 	bl	11ba8 <hl_mount_storage(FileSystemObject&, char const*)>
   11f52:	4e26      	ldr	r6, [pc, #152]	; (11fec <high_level_init()+0x318>)
   11f54:	4812      	ldr	r0, [pc, #72]	; (11fa0 <high_level_init()+0x2cc>)
   11f56:	2118      	movs	r1, #24
   11f58:	f7ff fe10 	bl	11b7c <ssp_set_max_clock>
   11f5c:	f7ff fe08 	bl	11b70 <hl_print_line()>
   11f60:	2000      	movs	r0, #0
   11f62:	f007 f82d 	bl	18fc0 <logger_init>
   11f66:	6833      	ldr	r3, [r6, #0]
   11f68:	b94b      	cbnz	r3, 11f7e <high_level_init()+0x2aa>
   11f6a:	2008      	movs	r0, #8
   11f6c:	f7fe f980 	bl	10270 <operator new(unsigned int)>
   11f70:	4605      	mov	r5, r0
   11f72:	f7fe ffbb 	bl	10eec <SingletonTemplate<I2C2>::getInstance()>
   11f76:	2338      	movs	r3, #56	; 0x38
   11f78:	6028      	str	r0, [r5, #0]
   11f7a:	712b      	strb	r3, [r5, #4]
   11f7c:	6035      	str	r5, [r6, #0]
   11f7e:	6830      	ldr	r0, [r6, #0]
   11f80:	f003 fc0e 	bl	157a0 <Acceleration_Sensor::init()>
   11f84:	4605      	mov	r5, r0
   11f86:	bba8      	cbnz	r0, 11ff4 <high_level_init()+0x320>
   11f88:	4819      	ldr	r0, [pc, #100]	; (11ff0 <high_level_init()+0x31c>)
   11f8a:	f00d fbe7 	bl	1f75c <puts>
   11f8e:	e032      	b.n	11ff6 <high_level_init()+0x322>
   11f90:	2009c000 	.word	0x2009c000
   11f94:	2009c020 	.word	0x2009c020
   11f98:	4002c000 	.word	0x4002c000
   11f9c:	fffcfcf0 	.word	0xfffcfcf0
   11fa0:	40030000 	.word	0x40030000
   11fa4:	40088000 	.word	0x40088000
   11fa8:	00025a14 	.word	0x00025a14
   11fac:	00025a45 	.word	0x00025a45
   11fb0:	49742400 	.word	0x49742400
   11fb4:	00025a6a 	.word	0x00025a6a
   11fb8:	40024044 	.word	0x40024044
   11fbc:	40024000 	.word	0x40024000
   11fc0:	00025a82 	.word	0x00025a82
   11fc4:	00025afa 	.word	0x00025afa
   11fc8:	00025b02 	.word	0x00025b02
   11fcc:	00025a03 	.word	0x00025a03
   11fd0:	00025a08 	.word	0x00025a08
   11fd4:	00025b3f 	.word	0x00025b3f
   11fd8:	00025b5e 	.word	0x00025b5e
   11fdc:	00025b6d 	.word	0x00025b6d
   11fe0:	2007c218 	.word	0x2007c218
   11fe4:	2007c200 	.word	0x2007c200
   11fe8:	000250ae 	.word	0x000250ae
   11fec:	2007c240 	.word	0x2007c240
   11ff0:	00025b88 	.word	0x00025b88
   11ff4:	2501      	movs	r5, #1
   11ff6:	f7ff fe41 	bl	11c7c <SingletonTemplate<TemperatureSensor>::getInstance()>
   11ffa:	f003 fcb3 	bl	15964 <I2C_Temp::init()>
   11ffe:	4606      	mov	r6, r0
   12000:	b918      	cbnz	r0, 1200a <high_level_init()+0x336>
   12002:	4872      	ldr	r0, [pc, #456]	; (121cc <high_level_init()+0x4f8>)
   12004:	f00d fbaa 	bl	1f75c <puts>
   12008:	4635      	mov	r5, r6
   1200a:	f7ff fe17 	bl	11c3c <SingletonTemplate<LED_Display>::getInstance()>
   1200e:	f003 fc1b 	bl	15848 <LED_Display::init()>
   12012:	4606      	mov	r6, r0
   12014:	b918      	cbnz	r0, 1201e <high_level_init()+0x34a>
   12016:	486e      	ldr	r0, [pc, #440]	; (121d0 <high_level_init()+0x4fc>)
   12018:	f00d fba0 	bl	1f75c <puts>
   1201c:	4635      	mov	r5, r6
   1201e:	4e6d      	ldr	r6, [pc, #436]	; (121d4 <high_level_init()+0x500>)
   12020:	6833      	ldr	r3, [r6, #0]
   12022:	b91b      	cbnz	r3, 1202c <high_level_init()+0x358>
   12024:	2001      	movs	r0, #1
   12026:	f7fe f923 	bl	10270 <operator new(unsigned int)>
   1202a:	6030      	str	r0, [r6, #0]
   1202c:	6830      	ldr	r0, [r6, #0]
   1202e:	f003 fbdb 	bl	157e8 <IR_Sensor::init()>
   12032:	f7ff fe37 	bl	11ca4 <SingletonTemplate<Light_Sensor>::getInstance()>
   12036:	f003 fc82 	bl	1593e <Light_Sensor::init()>
   1203a:	f7ff fe11 	bl	11c60 <SingletonTemplate<LED>::getInstance()>
   1203e:	f003 fc3f 	bl	158c0 <LED::init()>
   12042:	f7ff fe3b 	bl	11cbc <SingletonTemplate<Switches>::getInstance()>
   12046:	f003 fc7f 	bl	15948 <Switches::init()>
   1204a:	f7ff fe09 	bl	11c60 <SingletonTemplate<LED>::getInstance()>
   1204e:	2100      	movs	r1, #0
   12050:	f003 fc38 	bl	158c4 <LED::setAll(char)>
   12054:	b995      	cbnz	r5, 1207c <high_level_init()+0x3a8>
   12056:	f7ff fd8b 	bl	11b70 <hl_print_line()>
   1205a:	f7ff fdef 	bl	11c3c <SingletonTemplate<LED_Display>::getInstance()>
   1205e:	212d      	movs	r1, #45	; 0x2d
   12060:	f003 fbda 	bl	15818 <LED_Display::setLeftDigit(char)>
   12064:	f7ff fdea 	bl	11c3c <SingletonTemplate<LED_Display>::getInstance()>
   12068:	212d      	movs	r1, #45	; 0x2d
   1206a:	f003 fbe1 	bl	15830 <LED_Display::setRightDigit(char)>
   1206e:	f7ff fdf7 	bl	11c60 <SingletonTemplate<LED>::getInstance()>
   12072:	f04f 31ff 	mov.w	r1, #4294967295
   12076:	f003 fc25 	bl	158c4 <LED::setAll(char)>
   1207a:	e00c      	b.n	12096 <high_level_init()+0x3c2>
   1207c:	f7ff fdde 	bl	11c3c <SingletonTemplate<LED_Display>::getInstance()>
   12080:	4605      	mov	r5, r0
   12082:	f7ff fdfb 	bl	11c7c <SingletonTemplate<TemperatureSensor>::getInstance()>
   12086:	f003 fc99 	bl	159bc <I2C_Temp::getFarenheit()>
   1208a:	f00c f92b 	bl	1e2e4 <__aeabi_f2iz>
   1208e:	b241      	sxtb	r1, r0
   12090:	4628      	mov	r0, r5
   12092:	f003 fbf6 	bl	15882 <LED_Display::setNumber(char)>
   12096:	2100      	movs	r1, #0
   12098:	2210      	movs	r2, #16
   1209a:	4620      	mov	r0, r4
   1209c:	f00c fddf 	bl	1ec5e <memset>
   120a0:	484d      	ldr	r0, [pc, #308]	; (121d8 <high_level_init()+0x504>)
   120a2:	4621      	mov	r1, r4
   120a4:	220f      	movs	r2, #15
   120a6:	2300      	movs	r3, #0
   120a8:	f003 fd18 	bl	15adc <Storage::read(char const*, void*, unsigned int, unsigned int)>
   120ac:	b980      	cbnz	r0, 120d0 <high_level_init()+0x3fc>
   120ae:	4620      	mov	r0, r4
   120b0:	f00c fc45 	bl	1e93e <atoi>
   120b4:	b2c5      	uxtb	r5, r0
   120b6:	4628      	mov	r0, r5
   120b8:	f002 fc64 	bl	14984 <mesh_set_node_address>
   120bc:	4a47      	ldr	r2, [pc, #284]	; (121dc <high_level_init()+0x508>)
   120be:	4b48      	ldr	r3, [pc, #288]	; (121e0 <high_level_init()+0x50c>)
   120c0:	4629      	mov	r1, r5
   120c2:	2800      	cmp	r0, #0
   120c4:	bf08      	it	eq
   120c6:	4613      	moveq	r3, r2
   120c8:	4846      	ldr	r0, [pc, #280]	; (121e4 <high_level_init()+0x510>)
   120ca:	4a43      	ldr	r2, [pc, #268]	; (121d8 <high_level_init()+0x504>)
   120cc:	f00d face 	bl	1f66c <iprintf>
   120d0:	f7ff fde8 	bl	11ca4 <SingletonTemplate<Light_Sensor>::getInstance()>
   120d4:	f003 fc35 	bl	15942 <Light_Sensor::getRawValue()>
   120d8:	4605      	mov	r5, r0
   120da:	2000      	movs	r0, #0
   120dc:	f00f f878 	bl	211d0 <time>
   120e0:	4428      	add	r0, r5
   120e2:	f00d fb43 	bl	1f76c <srand>
   120e6:	f44f 7200 	mov.w	r2, #512	; 0x200
   120ea:	2100      	movs	r1, #0
   120ec:	4620      	mov	r0, r4
   120ee:	f00c fdb6 	bl	1ec5e <memset>
   120f2:	4620      	mov	r0, r4
   120f4:	f00a fcb0 	bl	1ca58 <sys_get_mem_info_str>
   120f8:	4621      	mov	r1, r4
   120fa:	483b      	ldr	r0, [pc, #236]	; (121e8 <high_level_init()+0x514>)
   120fc:	f00d fab6 	bl	1f66c <iprintf>
   12100:	f7ff fd36 	bl	11b70 <hl_print_line()>
   12104:	2280      	movs	r2, #128	; 0x80
   12106:	2100      	movs	r1, #0
   12108:	4620      	mov	r0, r4
   1210a:	f00c fda8 	bl	1ec5e <memset>
   1210e:	4620      	mov	r0, r4
   12110:	f004 fbb4 	bl	1687c <flash_read_permanent_id>
   12114:	f994 2000 	ldrsb.w	r2, [r4]
   12118:	1c53      	adds	r3, r2, #1
   1211a:	d005      	beq.n	12128 <high_level_init()+0x454>
   1211c:	4621      	mov	r1, r4
   1211e:	b2d2      	uxtb	r2, r2
   12120:	4832      	ldr	r0, [pc, #200]	; (121ec <high_level_init()+0x518>)
   12122:	f00d faa3 	bl	1f66c <iprintf>
   12126:	e029      	b.n	1217c <high_level_init()+0x4a8>
   12128:	f7ff fdc8 	bl	11cbc <SingletonTemplate<Switches>::getInstance()>
   1212c:	f003 fc0e 	bl	1594c <Switches::getSwitchValues()>
   12130:	2809      	cmp	r0, #9
   12132:	d11d      	bne.n	12170 <high_level_init()+0x49c>
   12134:	482e      	ldr	r0, [pc, #184]	; (121f0 <high_level_init()+0x51c>)
   12136:	f00d fb11 	bl	1f75c <puts>
   1213a:	4621      	mov	r1, r4
   1213c:	482d      	ldr	r0, [pc, #180]	; (121f4 <high_level_init()+0x520>)
   1213e:	f00d fc23 	bl	1f988 <iscanf>
   12142:	4621      	mov	r1, r4
   12144:	482c      	ldr	r0, [pc, #176]	; (121f8 <high_level_init()+0x524>)
   12146:	f00d fa91 	bl	1f66c <iprintf>
   1214a:	482c      	ldr	r0, [pc, #176]	; (121fc <high_level_init()+0x528>)
   1214c:	f00d fb06 	bl	1f75c <puts>
   12150:	2300      	movs	r3, #0
   12152:	482b      	ldr	r0, [pc, #172]	; (12200 <high_level_init()+0x52c>)
   12154:	a903      	add	r1, sp, #12
   12156:	9303      	str	r3, [sp, #12]
   12158:	f00d fc16 	bl	1f988 <iscanf>
   1215c:	f99d 300c 	ldrsb.w	r3, [sp, #12]
   12160:	2b59      	cmp	r3, #89	; 0x59
   12162:	d103      	bne.n	1216c <high_level_init()+0x498>
   12164:	4620      	mov	r0, r4
   12166:	f004 fb69 	bl	1683c <flash_write_permanent_id>
   1216a:	e007      	b.n	1217c <high_level_init()+0x4a8>
   1216c:	4825      	ldr	r0, [pc, #148]	; (12204 <high_level_init()+0x530>)
   1216e:	e003      	b.n	12178 <high_level_init()+0x4a4>
   12170:	4825      	ldr	r0, [pc, #148]	; (12208 <high_level_init()+0x534>)
   12172:	f00d faf3 	bl	1f75c <puts>
   12176:	4825      	ldr	r0, [pc, #148]	; (1220c <high_level_init()+0x538>)
   12178:	f00d faf0 	bl	1f75c <puts>
   1217c:	f24f 0308 	movw	r3, #61448	; 0xf008
   12180:	681d      	ldr	r5, [r3, #0]
   12182:	f24f 030c 	movw	r3, #61452	; 0xf00c
   12186:	681e      	ldr	r6, [r3, #0]
   12188:	f24f 0310 	movw	r3, #61456	; 0xf010
   1218c:	681c      	ldr	r4, [r3, #0]
   1218e:	f24f 0304 	movw	r3, #61444	; 0xf004
   12192:	6819      	ldr	r1, [r3, #0]
   12194:	f44f 4370 	mov.w	r3, #61440	; 0xf000
   12198:	681a      	ldr	r2, [r3, #0]
   1219a:	0aad      	lsrs	r5, r5, #10
   1219c:	0ab6      	lsrs	r6, r6, #10
   1219e:	481c      	ldr	r0, [pc, #112]	; (12210 <high_level_init()+0x53c>)
   121a0:	f00d fa64 	bl	1f66c <iprintf>
   121a4:	462a      	mov	r2, r5
   121a6:	4631      	mov	r1, r6
   121a8:	481a      	ldr	r0, [pc, #104]	; (12214 <high_level_init()+0x540>)
   121aa:	f00d fa5f 	bl	1f66c <iprintf>
   121ae:	4621      	mov	r1, r4
   121b0:	4819      	ldr	r0, [pc, #100]	; (12218 <high_level_init()+0x544>)
   121b2:	f00d fa5b 	bl	1f66c <iprintf>
   121b6:	f7ff fcdb 	bl	11b70 <hl_print_line()>
   121ba:	4818      	ldr	r0, [pc, #96]	; (1221c <high_level_init()+0x548>)
   121bc:	f00d face 	bl	1f75c <puts>
   121c0:	f7ff fcd6 	bl	11b70 <hl_print_line()>
   121c4:	f50d 7d05 	add.w	sp, sp, #532	; 0x214
   121c8:	bdf0      	pop	{r4, r5, r6, r7, pc}
   121ca:	bf00      	nop
   121cc:	00025ba3 	.word	0x00025ba3
   121d0:	00025bbd 	.word	0x00025bbd
   121d4:	2007c23c 	.word	0x2007c23c
   121d8:	00025bd6 	.word	0x00025bd6
   121dc:	00025503 	.word	0x00025503
   121e0:	00025a0e 	.word	0x00025a0e
   121e4:	00025bdc 	.word	0x00025bdc
   121e8:	00026f1a 	.word	0x00026f1a
   121ec:	00025c10 	.word	0x00025c10
   121f0:	00025c2c 	.word	0x00025c2c
   121f4:	00025c4e 	.word	0x00025c4e
   121f8:	00025c53 	.word	0x00025c53
   121fc:	00025c6e 	.word	0x00025c6e
   12200:	00025cb1 	.word	0x00025cb1
   12204:	00025cb5 	.word	0x00025cb5
   12208:	00025ccd 	.word	0x00025ccd
   1220c:	00025cfb 	.word	0x00025cfb
   12210:	00025d2d 	.word	0x00025d2d
   12214:	00025d59 	.word	0x00025d59
   12218:	00025d86 	.word	0x00025d86
   1221c:	00025da3 	.word	0x00025da3

00012220 <scheduler_task::~scheduler_task()>:
_ZN14scheduler_taskD2Ev():
   12220:	4b01      	ldr	r3, [pc, #4]	; (12228 <scheduler_task::~scheduler_task()+0x8>)
   12222:	6003      	str	r3, [r0, #0]
   12224:	4770      	bx	lr
   12226:	bf00      	nop
   12228:	00025de0 	.word	0x00025de0

0001222c <scheduler_task::init()>:
_ZN14scheduler_task4initEv():
   1222c:	2001      	movs	r0, #1
   1222e:	4770      	bx	lr

00012230 <scheduler_task::regTlm()>:
_ZN14scheduler_task6regTlmEv():
   12230:	2001      	movs	r0, #1
   12232:	4770      	bx	lr

00012234 <scheduler_task::taskEntry()>:
_ZN14scheduler_task9taskEntryEv():
   12234:	2001      	movs	r0, #1
   12236:	4770      	bx	lr

00012238 <scheduler_task::~scheduler_task()>:
_ZN14scheduler_taskD0Ev():
   12238:	b510      	push	{r4, lr}
   1223a:	4b03      	ldr	r3, [pc, #12]	; (12248 <scheduler_task::~scheduler_task()+0x10>)
   1223c:	4604      	mov	r4, r0
   1223e:	6003      	str	r3, [r0, #0]
   12240:	f7fe f818 	bl	10274 <operator delete(void*)>
   12244:	4620      	mov	r0, r4
   12246:	bd10      	pop	{r4, pc}
   12248:	00025de0 	.word	0x00025de0

0001224c <terminalTask::regTlm()>:
_ZN12terminalTask6regTlmEv():
   1224c:	2001      	movs	r0, #1
   1224e:	4770      	bx	lr

00012250 <VECTOR<terminalTask::cmdChan_t>::changeCapacity(unsigned int) [clone .part.3]>:
_ZN6VECTORIN12terminalTask9cmdChan_tEE14changeCapacityEj.part.3():
   12250:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   12252:	4604      	mov	r4, r0
   12254:	460e      	mov	r6, r1
   12256:	68c0      	ldr	r0, [r0, #12]
   12258:	0089      	lsls	r1, r1, #2
   1225a:	f00d faeb 	bl	1f834 <realloc>
   1225e:	68a5      	ldr	r5, [r4, #8]
   12260:	60e0      	str	r0, [r4, #12]
   12262:	00af      	lsls	r7, r5, #2
   12264:	42b5      	cmp	r5, r6
   12266:	d20b      	bcs.n	12280 <VECTOR<terminalTask::cmdChan_t>::changeCapacity(unsigned int) [clone .part.3]+0x30>
   12268:	200c      	movs	r0, #12
   1226a:	f7fe f801 	bl	10270 <operator new(unsigned int)>
   1226e:	2300      	movs	r3, #0
   12270:	6003      	str	r3, [r0, #0]
   12272:	6043      	str	r3, [r0, #4]
   12274:	7203      	strb	r3, [r0, #8]
   12276:	68e3      	ldr	r3, [r4, #12]
   12278:	3501      	adds	r5, #1
   1227a:	51d8      	str	r0, [r3, r7]
   1227c:	3704      	adds	r7, #4
   1227e:	e7f1      	b.n	12264 <VECTOR<terminalTask::cmdChan_t>::changeCapacity(unsigned int) [clone .part.3]+0x14>
   12280:	6066      	str	r6, [r4, #4]
   12282:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00012284 <terminalTask::~terminalTask()>:
_ZN12terminalTaskD2Ev():
   12284:	b538      	push	{r3, r4, r5, lr}
   12286:	4b11      	ldr	r3, [pc, #68]	; (122cc <terminalTask::~terminalTask()+0x48>)
   12288:	4604      	mov	r4, r0
   1228a:	6003      	str	r3, [r0, #0]
   1228c:	2500      	movs	r5, #0
   1228e:	6d63      	ldr	r3, [r4, #84]	; 0x54
   12290:	6de0      	ldr	r0, [r4, #92]	; 0x5c
   12292:	429d      	cmp	r5, r3
   12294:	d205      	bcs.n	122a2 <terminalTask::~terminalTask()+0x1e>
   12296:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
   1229a:	f7fd ffeb 	bl	10274 <operator delete(void*)>
   1229e:	3501      	adds	r5, #1
   122a0:	e7f5      	b.n	1228e <terminalTask::~terminalTask()+0xa>
   122a2:	b108      	cbz	r0, 122a8 <terminalTask::~terminalTask()+0x24>
   122a4:	f7fd ffe8 	bl	10278 <operator delete[](void*)>
   122a8:	2500      	movs	r5, #0
   122aa:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   122ac:	6c20      	ldr	r0, [r4, #64]	; 0x40
   122ae:	429d      	cmp	r5, r3
   122b0:	d205      	bcs.n	122be <terminalTask::~terminalTask()+0x3a>
   122b2:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
   122b6:	f7fd ffdd 	bl	10274 <operator delete(void*)>
   122ba:	3501      	adds	r5, #1
   122bc:	e7f5      	b.n	122aa <terminalTask::~terminalTask()+0x26>
   122be:	b108      	cbz	r0, 122c4 <terminalTask::~terminalTask()+0x40>
   122c0:	f7fd ffda 	bl	10278 <operator delete[](void*)>
   122c4:	4b02      	ldr	r3, [pc, #8]	; (122d0 <terminalTask::~terminalTask()+0x4c>)
   122c6:	4620      	mov	r0, r4
   122c8:	6023      	str	r3, [r4, #0]
   122ca:	bd38      	pop	{r3, r4, r5, pc}
   122cc:	00025e08 	.word	0x00025e08
   122d0:	00025de0 	.word	0x00025de0

000122d4 <terminalTask::~terminalTask()>:
_ZN12terminalTaskD0Ev():
   122d4:	b510      	push	{r4, lr}
   122d6:	4604      	mov	r4, r0
   122d8:	f7ff ffd4 	bl	12284 <terminalTask::~terminalTask()>
   122dc:	4620      	mov	r0, r4
   122de:	f7fd ffc9 	bl	10274 <operator delete(void*)>
   122e2:	4620      	mov	r0, r4
   122e4:	bd10      	pop	{r4, pc}
	...

000122e8 <terminalTask::terminalTask(unsigned char)>:
_ZN12terminalTaskC2Eh():
   122e8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   122ea:	2400      	movs	r4, #0
   122ec:	460b      	mov	r3, r1
   122ee:	f44f 5280 	mov.w	r2, #4096	; 0x1000
   122f2:	9400      	str	r4, [sp, #0]
   122f4:	4925      	ldr	r1, [pc, #148]	; (1238c <terminalTask::terminalTask(unsigned char)+0xa4>)
   122f6:	4606      	mov	r6, r0
   122f8:	f007 f9da 	bl	196b0 <scheduler_task::scheduler_task(char const*, unsigned long, unsigned char, void*)>
   122fc:	4b24      	ldr	r3, [pc, #144]	; (12390 <terminalTask::terminalTask(unsigned char)+0xa8>)
   122fe:	2504      	movs	r5, #4
   12300:	6033      	str	r3, [r6, #0]
   12302:	6375      	str	r5, [r6, #52]	; 0x34
   12304:	63b4      	str	r4, [r6, #56]	; 0x38
   12306:	63f4      	str	r4, [r6, #60]	; 0x3c
   12308:	6434      	str	r4, [r6, #64]	; 0x40
   1230a:	f106 0034 	add.w	r0, r6, #52	; 0x34
   1230e:	2102      	movs	r1, #2
   12310:	f7ff ff9e 	bl	12250 <VECTOR<terminalTask::cmdChan_t>::changeCapacity(unsigned int) [clone .part.3]>
   12314:	6535      	str	r5, [r6, #80]	; 0x50
   12316:	6574      	str	r4, [r6, #84]	; 0x54
   12318:	65b4      	str	r4, [r6, #88]	; 0x58
   1231a:	65f4      	str	r4, [r6, #92]	; 0x5c
   1231c:	4620      	mov	r0, r4
   1231e:	2160      	movs	r1, #96	; 0x60
   12320:	f00d fa88 	bl	1f834 <realloc>
   12324:	6db4      	ldr	r4, [r6, #88]	; 0x58
   12326:	65f0      	str	r0, [r6, #92]	; 0x5c
   12328:	00a5      	lsls	r5, r4, #2
   1232a:	2c17      	cmp	r4, #23
   1232c:	d80c      	bhi.n	12348 <terminalTask::terminalTask(unsigned char)+0x60>
   1232e:	2010      	movs	r0, #16
   12330:	f7fd ff9e 	bl	10270 <operator new(unsigned int)>
   12334:	2100      	movs	r1, #0
   12336:	2210      	movs	r2, #16
   12338:	4607      	mov	r7, r0
   1233a:	f00c fc90 	bl	1ec5e <memset>
   1233e:	6df3      	ldr	r3, [r6, #92]	; 0x5c
   12340:	3401      	adds	r4, #1
   12342:	515f      	str	r7, [r3, r5]
   12344:	3504      	adds	r5, #4
   12346:	e7f0      	b.n	1232a <terminalTask::terminalTask(unsigned char)+0x42>
   12348:	2318      	movs	r3, #24
   1234a:	6573      	str	r3, [r6, #84]	; 0x54
   1234c:	2301      	movs	r3, #1
   1234e:	f886 3070 	strb.w	r3, [r6, #112]	; 0x70
   12352:	4c10      	ldr	r4, [pc, #64]	; (12394 <terminalTask::terminalTask(unsigned char)+0xac>)
   12354:	2300      	movs	r3, #0
   12356:	f8a6 3074 	strh.w	r3, [r6, #116]	; 0x74
   1235a:	f8a6 3076 	strh.w	r3, [r6, #118]	; 0x76
   1235e:	67b3      	str	r3, [r6, #120]	; 0x78
   12360:	2200      	movs	r2, #0
   12362:	2300      	movs	r3, #0
   12364:	2500      	movs	r5, #0
   12366:	e9c6 2320 	strd	r2, r3, [r6, #128]	; 0x80
   1236a:	e9c6 4522 	strd	r4, r5, [r6, #136]	; 0x88
   1236e:	f00a fb09 	bl	1c984 <sys_get_uptime_us>
   12372:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   12376:	2300      	movs	r3, #0
   12378:	f00b fffa 	bl	1e370 <__aeabi_uldivmod>
   1237c:	1900      	adds	r0, r0, r4
   1237e:	eb41 0105 	adc.w	r1, r1, r5
   12382:	e9c6 0120 	strd	r0, r1, [r6, #128]	; 0x80
   12386:	4630      	mov	r0, r6
   12388:	b003      	add	sp, #12
   1238a:	bdf0      	pop	{r4, r5, r6, r7, pc}
   1238c:	00025e20 	.word	0x00025e20
   12390:	00025e08 	.word	0x00025e08
   12394:	0001d4c0 	.word	0x0001d4c0

00012398 <terminalTask::handleEchoAndBackspace(terminalTask::cmdChan_t*, char)>:
_ZN12terminalTask22handleEchoAndBackspaceEPNS_9cmdChan_tEc():
   12398:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1239a:	e891 0060 	ldmia.w	r1, {r5, r6}
   1239e:	7a0f      	ldrb	r7, [r1, #8]
   123a0:	4614      	mov	r4, r2
   123a2:	b18f      	cbz	r7, 123c8 <terminalTask::handleEchoAndBackspace(terminalTask::cmdChan_t*, char)+0x30>
   123a4:	2a08      	cmp	r2, #8
   123a6:	d10f      	bne.n	123c8 <terminalTask::handleEchoAndBackspace(terminalTask::cmdChan_t*, char)+0x30>
   123a8:	4630      	mov	r0, r6
   123aa:	f007 f9ce 	bl	1974a <str::getLen() const>
   123ae:	2800      	cmp	r0, #0
   123b0:	dd1b      	ble.n	123ea <terminalTask::handleEchoAndBackspace(terminalTask::cmdChan_t*, char)+0x52>
   123b2:	4628      	mov	r0, r5
   123b4:	490e      	ldr	r1, [pc, #56]	; (123f0 <terminalTask::handleEchoAndBackspace(terminalTask::cmdChan_t*, char)+0x58>)
   123b6:	f04f 32ff 	mov.w	r2, #4294967295
   123ba:	f008 fc1a 	bl	1abf2 <CharDev::put(char const*, unsigned int)>
   123be:	4630      	mov	r0, r6
   123c0:	2101      	movs	r1, #1
   123c2:	f007 facf 	bl	19964 <str::eraseLast(int)>
   123c6:	e008      	b.n	123da <terminalTask::handleEchoAndBackspace(terminalTask::cmdChan_t*, char)+0x42>
   123c8:	2c0a      	cmp	r4, #10
   123ca:	d005      	beq.n	123d8 <terminalTask::handleEchoAndBackspace(terminalTask::cmdChan_t*, char)+0x40>
   123cc:	2c0d      	cmp	r4, #13
   123ce:	d003      	beq.n	123d8 <terminalTask::handleEchoAndBackspace(terminalTask::cmdChan_t*, char)+0x40>
   123d0:	4630      	mov	r0, r6
   123d2:	4621      	mov	r1, r4
   123d4:	f007 fbe8 	bl	19ba8 <str::operator+=(char)>
   123d8:	b14f      	cbz	r7, 123ee <terminalTask::handleEchoAndBackspace(terminalTask::cmdChan_t*, char)+0x56>
   123da:	682b      	ldr	r3, [r5, #0]
   123dc:	4628      	mov	r0, r5
   123de:	685b      	ldr	r3, [r3, #4]
   123e0:	4621      	mov	r1, r4
   123e2:	f04f 32ff 	mov.w	r2, #4294967295
   123e6:	4798      	blx	r3
   123e8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   123ea:	2407      	movs	r4, #7
   123ec:	e7f5      	b.n	123da <terminalTask::handleEchoAndBackspace(terminalTask::cmdChan_t*, char)+0x42>
   123ee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   123f0:	00025e29 	.word	0x00025e29

000123f4 <terminalTask::addCommandChannel(CharDev*, bool)>:
_ZN12terminalTask17addCommandChannelEP7CharDevb():
   123f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   123f6:	4604      	mov	r4, r0
   123f8:	2014      	movs	r0, #20
   123fa:	4616      	mov	r6, r2
   123fc:	460d      	mov	r5, r1
   123fe:	f7fd ff37 	bl	10270 <operator new(unsigned int)>
   12402:	2180      	movs	r1, #128	; 0x80
   12404:	4607      	mov	r7, r0
   12406:	f007 fb7f 	bl	19b08 <str::str(int)>
   1240a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   1240c:	6be2      	ldr	r2, [r4, #60]	; 0x3c
   1240e:	429a      	cmp	r2, r3
   12410:	d306      	bcc.n	12420 <terminalTask::addCommandChannel(CharDev*, bool)+0x2c>
   12412:	6b62      	ldr	r2, [r4, #52]	; 0x34
   12414:	1899      	adds	r1, r3, r2
   12416:	d203      	bcs.n	12420 <terminalTask::addCommandChannel(CharDev*, bool)+0x2c>
   12418:	f104 0034 	add.w	r0, r4, #52	; 0x34
   1241c:	f7ff ff18 	bl	12250 <VECTOR<terminalTask::cmdChan_t>::changeCapacity(unsigned int) [clone .part.3]>
   12420:	6be3      	ldr	r3, [r4, #60]	; 0x3c
   12422:	6c22      	ldr	r2, [r4, #64]	; 0x40
   12424:	1c59      	adds	r1, r3, #1
   12426:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
   1242a:	63e1      	str	r1, [r4, #60]	; 0x3c
   1242c:	e883 00a0 	stmia.w	r3, {r5, r7}
   12430:	721e      	strb	r6, [r3, #8]
   12432:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00012434 <terminalTask::getCommand()>:
_ZN12terminalTask10getCommandEv():
   12434:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   12438:	6bcf      	ldr	r7, [r1, #60]	; 0x3c
   1243a:	b085      	sub	sp, #20
   1243c:	4605      	mov	r5, r0
   1243e:	460e      	mov	r6, r1
   12440:	ac01      	add	r4, sp, #4
   12442:	b94f      	cbnz	r7, 12458 <terminalTask::getCommand()+0x24>
   12444:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
   12448:	f009 fd40 	bl	1becc <vTaskDelay>
   1244c:	4620      	mov	r0, r4
   1244e:	4639      	mov	r1, r7
   12450:	220c      	movs	r2, #12
   12452:	f00c fc04 	bl	1ec5e <memset>
   12456:	e04c      	b.n	124f2 <terminalTask::getCommand()+0xbe>
   12458:	6c0b      	ldr	r3, [r1, #64]	; 0x40
   1245a:	681b      	ldr	r3, [r3, #0]
   1245c:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
   12460:	e884 0007 	stmia.w	r4, {r0, r1, r2}
   12464:	2300      	movs	r3, #0
   12466:	f88d 3003 	strb.w	r3, [sp, #3]
   1246a:	f009 fbf7 	bl	1bc5c <xTaskGetTickCount>
   1246e:	2700      	movs	r7, #0
   12470:	4680      	mov	r8, r0
   12472:	6bf2      	ldr	r2, [r6, #60]	; 0x3c
   12474:	4297      	cmp	r7, r2
   12476:	d25c      	bcs.n	12532 <terminalTask::getCommand()+0xfe>
   12478:	6c33      	ldr	r3, [r6, #64]	; 0x40
   1247a:	3a01      	subs	r2, #1
   1247c:	f853 3027 	ldr.w	r3, [r3, r7, lsl #2]
   12480:	4297      	cmp	r7, r2
   12482:	bf0c      	ite	eq
   12484:	2202      	moveq	r2, #2
   12486:	2200      	movne	r2, #0
   12488:	6818      	ldr	r0, [r3, #0]
   1248a:	ea4f 0987 	mov.w	r9, r7, lsl #2
   1248e:	7c01      	ldrb	r1, [r0, #16]
   12490:	2900      	cmp	r1, #0
   12492:	d036      	beq.n	12502 <terminalTask::getCommand()+0xce>
   12494:	6801      	ldr	r1, [r0, #0]
   12496:	f8d1 c000 	ldr.w	ip, [r1]
   1249a:	f10d 0103 	add.w	r1, sp, #3
   1249e:	47e0      	blx	ip
   124a0:	b378      	cbz	r0, 12502 <terminalTask::getCommand()+0xce>
   124a2:	6bf3      	ldr	r3, [r6, #60]	; 0x3c
   124a4:	429f      	cmp	r7, r3
   124a6:	d22e      	bcs.n	12506 <terminalTask::getCommand()+0xd2>
   124a8:	6c33      	ldr	r3, [r6, #64]	; 0x40
   124aa:	f853 3009 	ldr.w	r3, [r3, r9]
   124ae:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
   124b2:	e884 0007 	stmia.w	r4, {r0, r1, r2}
   124b6:	f99d 2003 	ldrsb.w	r2, [sp, #3]
   124ba:	4630      	mov	r0, r6
   124bc:	4621      	mov	r1, r4
   124be:	f7ff ff6b 	bl	12398 <terminalTask::handleEchoAndBackspace(terminalTask::cmdChan_t*, char)>
   124c2:	f00a fa5f 	bl	1c984 <sys_get_uptime_us>
   124c6:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   124ca:	2300      	movs	r3, #0
   124cc:	f00b ff50 	bl	1e370 <__aeabi_uldivmod>
   124d0:	e9d6 2322 	ldrd	r2, r3, [r6, #136]	; 0x88
   124d4:	1880      	adds	r0, r0, r2
   124d6:	eb41 0103 	adc.w	r1, r1, r3
   124da:	e9c6 0120 	strd	r0, r1, [r6, #128]	; 0x80
   124de:	9802      	ldr	r0, [sp, #8]
   124e0:	f007 f933 	bl	1974a <str::getLen() const>
   124e4:	4607      	mov	r7, r0
   124e6:	9802      	ldr	r0, [sp, #8]
   124e8:	f007 f932 	bl	19750 <str::getCapacity() const>
   124ec:	3801      	subs	r0, #1
   124ee:	4287      	cmp	r7, r0
   124f0:	db0c      	blt.n	1250c <terminalTask::getCommand()+0xd8>
   124f2:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
   124f6:	e885 0007 	stmia.w	r5, {r0, r1, r2}
   124fa:	4628      	mov	r0, r5
   124fc:	b005      	add	sp, #20
   124fe:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   12502:	3701      	adds	r7, #1
   12504:	e7b5      	b.n	12472 <terminalTask::getCommand()+0x3e>
   12506:	f106 0344 	add.w	r3, r6, #68	; 0x44
   1250a:	e7d0      	b.n	124ae <terminalTask::getCommand()+0x7a>
   1250c:	e9d6 2322 	ldrd	r2, r3, [r6, #136]	; 0x88
   12510:	ea52 0103 	orrs.w	r1, r2, r3
   12514:	d015      	beq.n	12542 <terminalTask::getCommand()+0x10e>
   12516:	f00a fa35 	bl	1c984 <sys_get_uptime_us>
   1251a:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   1251e:	2300      	movs	r3, #0
   12520:	f00b ff26 	bl	1e370 <__aeabi_uldivmod>
   12524:	e9d6 2320 	ldrd	r2, r3, [r6, #128]	; 0x80
   12528:	4299      	cmp	r1, r3
   1252a:	bf08      	it	eq
   1252c:	4290      	cmpeq	r0, r2
   1252e:	d308      	bcc.n	12542 <terminalTask::getCommand()+0x10e>
   12530:	e00c      	b.n	1254c <terminalTask::getCommand()+0x118>
   12532:	f009 fb93 	bl	1bc5c <xTaskGetTickCount>
   12536:	4540      	cmp	r0, r8
   12538:	d1d1      	bne.n	124de <terminalTask::getCommand()+0xaa>
   1253a:	2001      	movs	r0, #1
   1253c:	f009 fcc6 	bl	1becc <vTaskDelay>
   12540:	e7cd      	b.n	124de <terminalTask::getCommand()+0xaa>
   12542:	f99d 3003 	ldrsb.w	r3, [sp, #3]
   12546:	2b0a      	cmp	r3, #10
   12548:	d18f      	bne.n	1246a <terminalTask::getCommand()+0x36>
   1254a:	e7d2      	b.n	124f2 <terminalTask::getCommand()+0xbe>
   1254c:	f00a fa1a 	bl	1c984 <sys_get_uptime_us>
   12550:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   12554:	2300      	movs	r3, #0
   12556:	f00b ff0b 	bl	1e370 <__aeabi_uldivmod>
   1255a:	e9d6 2322 	ldrd	r2, r3, [r6, #136]	; 0x88
   1255e:	1880      	adds	r0, r0, r2
   12560:	eb41 0103 	adc.w	r1, r1, r3
   12564:	2300      	movs	r3, #0
   12566:	e9c6 0120 	strd	r0, r1, [r6, #128]	; 0x80
   1256a:	9301      	str	r3, [sp, #4]
   1256c:	e7c1      	b.n	124f2 <terminalTask::getCommand()+0xbe>
	...

00012570 <terminalTask::run(void*)>:
_ZN12terminalTask3runEPv():
   12570:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
   12574:	4607      	mov	r7, r0
   12576:	4821      	ldr	r0, [pc, #132]	; (125fc <terminalTask::run(void*)+0x8c>)
   12578:	f00d f878 	bl	1f66c <iprintf>
   1257c:	a801      	add	r0, sp, #4
   1257e:	4639      	mov	r1, r7
   12580:	f7ff ff58 	bl	12434 <terminalTask::getCommand()>
   12584:	9e01      	ldr	r6, [sp, #4]
   12586:	b91e      	cbnz	r6, 12590 <terminalTask::run(void*)+0x20>
   12588:	481d      	ldr	r0, [pc, #116]	; (12600 <terminalTask::run(void*)+0x90>)
   1258a:	f00d f8e7 	bl	1f75c <puts>
   1258e:	e031      	b.n	125f4 <terminalTask::run(void*)+0x84>
   12590:	f8dd 8008 	ldr.w	r8, [sp, #8]
   12594:	4640      	mov	r0, r8
   12596:	f007 f8d8 	bl	1974a <str::getLen() const>
   1259a:	2800      	cmp	r0, #0
   1259c:	dd2a      	ble.n	125f4 <terminalTask::run(void*)+0x84>
   1259e:	f00a f9f1 	bl	1c984 <sys_get_uptime_us>
   125a2:	4604      	mov	r4, r0
   125a4:	b1f8      	cbz	r0, 125e6 <terminalTask::run(void*)+0x76>
   125a6:	f8b7 3074 	ldrh.w	r3, [r7, #116]	; 0x74
   125aa:	f107 0050 	add.w	r0, r7, #80	; 0x50
   125ae:	3301      	adds	r3, #1
   125b0:	f8a7 3074 	strh.w	r3, [r7, #116]	; 0x74
   125b4:	4641      	mov	r1, r8
   125b6:	4632      	mov	r2, r6
   125b8:	f006 fb42 	bl	18c40 <CommandProcessor::handleCommand(str&, CharDev&)>
   125bc:	4b11      	ldr	r3, [pc, #68]	; (12604 <terminalTask::run(void*)+0x94>)
   125be:	2700      	movs	r7, #0
   125c0:	6818      	ldr	r0, [r3, #0]
   125c2:	9000      	str	r0, [sp, #0]
   125c4:	6833      	ldr	r3, [r6, #0]
   125c6:	f91d 1007 	ldrsb.w	r1, [sp, r7]
   125ca:	685b      	ldr	r3, [r3, #4]
   125cc:	4630      	mov	r0, r6
   125ce:	f04f 32ff 	mov.w	r2, #4294967295
   125d2:	3701      	adds	r7, #1
   125d4:	4798      	blx	r3
   125d6:	2f04      	cmp	r7, #4
   125d8:	d1f4      	bne.n	125c4 <terminalTask::run(void*)+0x54>
   125da:	f00a f9d3 	bl	1c984 <sys_get_uptime_us>
   125de:	1b01      	subs	r1, r0, r4
   125e0:	4809      	ldr	r0, [pc, #36]	; (12608 <terminalTask::run(void*)+0x98>)
   125e2:	f00d f843 	bl	1f66c <iprintf>
   125e6:	4640      	mov	r0, r8
   125e8:	f007 f8b4 	bl	19754 <str::clear()>
   125ec:	6833      	ldr	r3, [r6, #0]
   125ee:	4630      	mov	r0, r6
   125f0:	689b      	ldr	r3, [r3, #8]
   125f2:	4798      	blx	r3
   125f4:	2001      	movs	r0, #1
   125f6:	b004      	add	sp, #16
   125f8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   125fc:	00025e2c 	.word	0x00025e2c
   12600:	00025375 	.word	0x00025375
   12604:	00025df8 	.word	0x00025df8
   12608:	00025e32 	.word	0x00025e32

0001260c <SingletonTemplate<Uart0>::getInstance()>:
_ZN17SingletonTemplateI5Uart0E11getInstanceEv():
   1260c:	b538      	push	{r3, r4, r5, lr}
   1260e:	4c06      	ldr	r4, [pc, #24]	; (12628 <SingletonTemplate<Uart0>::getInstance()+0x1c>)
   12610:	6823      	ldr	r3, [r4, #0]
   12612:	b933      	cbnz	r3, 12622 <SingletonTemplate<Uart0>::getInstance()+0x16>
   12614:	202c      	movs	r0, #44	; 0x2c
   12616:	f7fd fe2b 	bl	10270 <operator new(unsigned int)>
   1261a:	4605      	mov	r5, r0
   1261c:	f008 fa7e 	bl	1ab1c <Uart0::Uart0()>
   12620:	6025      	str	r5, [r4, #0]
   12622:	6820      	ldr	r0, [r4, #0]
   12624:	bd38      	pop	{r3, r4, r5, pc}
   12626:	bf00      	nop
   12628:	2007c214 	.word	0x2007c214

0001262c <Uart0::putcharIntrDriven(char)>:
_ZN5Uart017putcharIntrDrivenEc():
   1262c:	b510      	push	{r4, lr}
   1262e:	4604      	mov	r4, r0
   12630:	f7ff ffec 	bl	1260c <SingletonTemplate<Uart0>::getInstance()>
   12634:	6803      	ldr	r3, [r0, #0]
   12636:	4621      	mov	r1, r4
   12638:	685b      	ldr	r3, [r3, #4]
   1263a:	f04f 32ff 	mov.w	r2, #4294967295
   1263e:	4798      	blx	r3
   12640:	b240      	sxtb	r0, r0
   12642:	bd10      	pop	{r4, pc}

00012644 <Uart0::getcharIntrDriven(char)>:
_ZN5Uart017getcharIntrDrivenEc():
   12644:	b513      	push	{r0, r1, r4, lr}
   12646:	2300      	movs	r3, #0
   12648:	ac02      	add	r4, sp, #8
   1264a:	f804 3d01 	strb.w	r3, [r4, #-1]!
   1264e:	f7ff ffdd 	bl	1260c <SingletonTemplate<Uart0>::getInstance()>
   12652:	6803      	ldr	r3, [r0, #0]
   12654:	4621      	mov	r1, r4
   12656:	681b      	ldr	r3, [r3, #0]
   12658:	f04f 32ff 	mov.w	r2, #4294967295
   1265c:	4798      	blx	r3
   1265e:	f99d 0007 	ldrsb.w	r0, [sp, #7]
   12662:	b002      	add	sp, #8
   12664:	bd10      	pop	{r4, pc}
	...

00012668 <terminalTask::taskEntry()>:
_ZN12terminalTask9taskEntryEv():
   12668:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1266c:	f100 0450 	add.w	r4, r0, #80	; 0x50
   12670:	b08a      	sub	sp, #40	; 0x28
   12672:	2500      	movs	r5, #0
   12674:	4606      	mov	r6, r0
   12676:	9500      	str	r5, [sp, #0]
   12678:	4620      	mov	r0, r4
   1267a:	495b      	ldr	r1, [pc, #364]	; (127e8 <terminalTask::taskEntry()+0x180>)
   1267c:	4a5b      	ldr	r2, [pc, #364]	; (127ec <terminalTask::taskEntry()+0x184>)
   1267e:	4b5c      	ldr	r3, [pc, #368]	; (127f0 <terminalTask::taskEntry()+0x188>)
   12680:	f006 f9fc 	bl	18a7c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   12684:	9500      	str	r5, [sp, #0]
   12686:	4620      	mov	r0, r4
   12688:	495a      	ldr	r1, [pc, #360]	; (127f4 <terminalTask::taskEntry()+0x18c>)
   1268a:	4a5b      	ldr	r2, [pc, #364]	; (127f8 <terminalTask::taskEntry()+0x190>)
   1268c:	4b5b      	ldr	r3, [pc, #364]	; (127fc <terminalTask::taskEntry()+0x194>)
   1268e:	f006 f9f5 	bl	18a7c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   12692:	9500      	str	r5, [sp, #0]
   12694:	4620      	mov	r0, r4
   12696:	495a      	ldr	r1, [pc, #360]	; (12800 <terminalTask::taskEntry()+0x198>)
   12698:	4a5a      	ldr	r2, [pc, #360]	; (12804 <terminalTask::taskEntry()+0x19c>)
   1269a:	4b5b      	ldr	r3, [pc, #364]	; (12808 <terminalTask::taskEntry()+0x1a0>)
   1269c:	f006 f9ee 	bl	18a7c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   126a0:	9500      	str	r5, [sp, #0]
   126a2:	4620      	mov	r0, r4
   126a4:	4959      	ldr	r1, [pc, #356]	; (1280c <terminalTask::taskEntry()+0x1a4>)
   126a6:	4a5a      	ldr	r2, [pc, #360]	; (12810 <terminalTask::taskEntry()+0x1a8>)
   126a8:	4b5a      	ldr	r3, [pc, #360]	; (12814 <terminalTask::taskEntry()+0x1ac>)
   126aa:	f006 f9e7 	bl	18a7c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   126ae:	9500      	str	r5, [sp, #0]
   126b0:	4620      	mov	r0, r4
   126b2:	4959      	ldr	r1, [pc, #356]	; (12818 <terminalTask::taskEntry()+0x1b0>)
   126b4:	4a59      	ldr	r2, [pc, #356]	; (1281c <terminalTask::taskEntry()+0x1b4>)
   126b6:	4b5a      	ldr	r3, [pc, #360]	; (12820 <terminalTask::taskEntry()+0x1b8>)
   126b8:	f006 f9e0 	bl	18a7c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   126bc:	9500      	str	r5, [sp, #0]
   126be:	4620      	mov	r0, r4
   126c0:	4958      	ldr	r1, [pc, #352]	; (12824 <terminalTask::taskEntry()+0x1bc>)
   126c2:	4a59      	ldr	r2, [pc, #356]	; (12828 <terminalTask::taskEntry()+0x1c0>)
   126c4:	4b59      	ldr	r3, [pc, #356]	; (1282c <terminalTask::taskEntry()+0x1c4>)
   126c6:	f006 f9d9 	bl	18a7c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   126ca:	9500      	str	r5, [sp, #0]
   126cc:	4620      	mov	r0, r4
   126ce:	4958      	ldr	r1, [pc, #352]	; (12830 <terminalTask::taskEntry()+0x1c8>)
   126d0:	4a58      	ldr	r2, [pc, #352]	; (12834 <terminalTask::taskEntry()+0x1cc>)
   126d2:	4b59      	ldr	r3, [pc, #356]	; (12838 <terminalTask::taskEntry()+0x1d0>)
   126d4:	f006 f9d2 	bl	18a7c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   126d8:	9500      	str	r5, [sp, #0]
   126da:	4620      	mov	r0, r4
   126dc:	4957      	ldr	r1, [pc, #348]	; (1283c <terminalTask::taskEntry()+0x1d4>)
   126de:	4a58      	ldr	r2, [pc, #352]	; (12840 <terminalTask::taskEntry()+0x1d8>)
   126e0:	4b58      	ldr	r3, [pc, #352]	; (12844 <terminalTask::taskEntry()+0x1dc>)
   126e2:	f006 f9cb 	bl	18a7c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   126e6:	9500      	str	r5, [sp, #0]
   126e8:	4620      	mov	r0, r4
   126ea:	4957      	ldr	r1, [pc, #348]	; (12848 <terminalTask::taskEntry()+0x1e0>)
   126ec:	4a57      	ldr	r2, [pc, #348]	; (1284c <terminalTask::taskEntry()+0x1e4>)
   126ee:	4b58      	ldr	r3, [pc, #352]	; (12850 <terminalTask::taskEntry()+0x1e8>)
   126f0:	f006 f9c4 	bl	18a7c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   126f4:	9500      	str	r5, [sp, #0]
   126f6:	4620      	mov	r0, r4
   126f8:	4956      	ldr	r1, [pc, #344]	; (12854 <terminalTask::taskEntry()+0x1ec>)
   126fa:	4a57      	ldr	r2, [pc, #348]	; (12858 <terminalTask::taskEntry()+0x1f0>)
   126fc:	4b57      	ldr	r3, [pc, #348]	; (1285c <terminalTask::taskEntry()+0x1f4>)
   126fe:	f006 f9bd 	bl	18a7c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   12702:	9500      	str	r5, [sp, #0]
   12704:	4620      	mov	r0, r4
   12706:	4956      	ldr	r1, [pc, #344]	; (12860 <terminalTask::taskEntry()+0x1f8>)
   12708:	4a56      	ldr	r2, [pc, #344]	; (12864 <terminalTask::taskEntry()+0x1fc>)
   1270a:	4b57      	ldr	r3, [pc, #348]	; (12868 <terminalTask::taskEntry()+0x200>)
   1270c:	f006 f9b6 	bl	18a7c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   12710:	9500      	str	r5, [sp, #0]
   12712:	4620      	mov	r0, r4
   12714:	4955      	ldr	r1, [pc, #340]	; (1286c <terminalTask::taskEntry()+0x204>)
   12716:	4a56      	ldr	r2, [pc, #344]	; (12870 <terminalTask::taskEntry()+0x208>)
   12718:	4b56      	ldr	r3, [pc, #344]	; (12874 <terminalTask::taskEntry()+0x20c>)
   1271a:	f006 f9af 	bl	18a7c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   1271e:	9500      	str	r5, [sp, #0]
   12720:	4620      	mov	r0, r4
   12722:	4955      	ldr	r1, [pc, #340]	; (12878 <terminalTask::taskEntry()+0x210>)
   12724:	4a55      	ldr	r2, [pc, #340]	; (1287c <terminalTask::taskEntry()+0x214>)
   12726:	4b56      	ldr	r3, [pc, #344]	; (12880 <terminalTask::taskEntry()+0x218>)
   12728:	f006 f9a8 	bl	18a7c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   1272c:	9500      	str	r5, [sp, #0]
   1272e:	4620      	mov	r0, r4
   12730:	4954      	ldr	r1, [pc, #336]	; (12884 <terminalTask::taskEntry()+0x21c>)
   12732:	4a55      	ldr	r2, [pc, #340]	; (12888 <terminalTask::taskEntry()+0x220>)
   12734:	4b55      	ldr	r3, [pc, #340]	; (1288c <terminalTask::taskEntry()+0x224>)
   12736:	f006 f9a1 	bl	18a7c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   1273a:	9500      	str	r5, [sp, #0]
   1273c:	4620      	mov	r0, r4
   1273e:	4954      	ldr	r1, [pc, #336]	; (12890 <terminalTask::taskEntry()+0x228>)
   12740:	4a54      	ldr	r2, [pc, #336]	; (12894 <terminalTask::taskEntry()+0x22c>)
   12742:	4b55      	ldr	r3, [pc, #340]	; (12898 <terminalTask::taskEntry()+0x230>)
   12744:	f006 f99a 	bl	18a7c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   12748:	9500      	str	r5, [sp, #0]
   1274a:	4620      	mov	r0, r4
   1274c:	4953      	ldr	r1, [pc, #332]	; (1289c <terminalTask::taskEntry()+0x234>)
   1274e:	4a54      	ldr	r2, [pc, #336]	; (128a0 <terminalTask::taskEntry()+0x238>)
   12750:	4b54      	ldr	r3, [pc, #336]	; (128a4 <terminalTask::taskEntry()+0x23c>)
   12752:	f006 f993 	bl	18a7c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   12756:	9500      	str	r5, [sp, #0]
   12758:	4620      	mov	r0, r4
   1275a:	4953      	ldr	r1, [pc, #332]	; (128a8 <terminalTask::taskEntry()+0x240>)
   1275c:	4a53      	ldr	r2, [pc, #332]	; (128ac <terminalTask::taskEntry()+0x244>)
   1275e:	4b54      	ldr	r3, [pc, #336]	; (128b0 <terminalTask::taskEntry()+0x248>)
   12760:	f006 f98c 	bl	18a7c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   12764:	9500      	str	r5, [sp, #0]
   12766:	4620      	mov	r0, r4
   12768:	4952      	ldr	r1, [pc, #328]	; (128b4 <terminalTask::taskEntry()+0x24c>)
   1276a:	4a53      	ldr	r2, [pc, #332]	; (128b8 <terminalTask::taskEntry()+0x250>)
   1276c:	4b53      	ldr	r3, [pc, #332]	; (128bc <terminalTask::taskEntry()+0x254>)
   1276e:	f006 f985 	bl	18a7c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   12772:	9500      	str	r5, [sp, #0]
   12774:	4620      	mov	r0, r4
   12776:	4952      	ldr	r1, [pc, #328]	; (128c0 <terminalTask::taskEntry()+0x258>)
   12778:	4a52      	ldr	r2, [pc, #328]	; (128c4 <terminalTask::taskEntry()+0x25c>)
   1277a:	4b53      	ldr	r3, [pc, #332]	; (128c8 <terminalTask::taskEntry()+0x260>)
   1277c:	f006 f97e 	bl	18a7c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   12780:	9500      	str	r5, [sp, #0]
   12782:	4620      	mov	r0, r4
   12784:	4951      	ldr	r1, [pc, #324]	; (128cc <terminalTask::taskEntry()+0x264>)
   12786:	4a52      	ldr	r2, [pc, #328]	; (128d0 <terminalTask::taskEntry()+0x268>)
   12788:	4b52      	ldr	r3, [pc, #328]	; (128d4 <terminalTask::taskEntry()+0x26c>)
   1278a:	f006 f977 	bl	18a7c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>
   1278e:	f7ff ff3d 	bl	1260c <SingletonTemplate<Uart0>::getInstance()>
   12792:	f44f 7380 	mov.w	r3, #256	; 0x100
   12796:	f44f 4116 	mov.w	r1, #38400	; 0x9600
   1279a:	2220      	movs	r2, #32
   1279c:	4605      	mov	r5, r0
   1279e:	f008 f99b 	bl	1aad8 <Uart0::init(unsigned int, int, int)>
   127a2:	2701      	movs	r7, #1
   127a4:	4680      	mov	r8, r0
   127a6:	742f      	strb	r7, [r5, #16]
   127a8:	484b      	ldr	r0, [pc, #300]	; (128d8 <terminalTask::taskEntry()+0x270>)
   127aa:	f7fd fdc7 	bl	1033c <sys_set_inchar_func>
   127ae:	484b      	ldr	r0, [pc, #300]	; (128dc <terminalTask::taskEntry()+0x274>)
   127b0:	f7fd fdbe 	bl	10330 <sys_set_outchar_func>
   127b4:	4630      	mov	r0, r6
   127b6:	4629      	mov	r1, r5
   127b8:	463a      	mov	r2, r7
   127ba:	f7ff fe1b 	bl	123f4 <terminalTask::addCommandChannel(CharDev*, bool)>
   127be:	a903      	add	r1, sp, #12
   127c0:	2208      	movs	r2, #8
   127c2:	a805      	add	r0, sp, #20
   127c4:	f006 ff9a 	bl	196fc <str::str(char*, int)>
   127c8:	a805      	add	r0, sp, #20
   127ca:	4945      	ldr	r1, [pc, #276]	; (128e0 <terminalTask::taskEntry()+0x278>)
   127cc:	f007 fa17 	bl	19bfe <str::operator=(char const*)>
   127d0:	a905      	add	r1, sp, #20
   127d2:	462a      	mov	r2, r5
   127d4:	4620      	mov	r0, r4
   127d6:	f006 fa33 	bl	18c40 <CommandProcessor::handleCommand(str&, CharDev&)>
   127da:	a805      	add	r0, sp, #20
   127dc:	f006 ffa3 	bl	19726 <str::~str()>
   127e0:	4640      	mov	r0, r8
   127e2:	b00a      	add	sp, #40	; 0x28
   127e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   127e8:	00010561 	.word	0x00010561
   127ec:	00025e92 	.word	0x00025e92
   127f0:	00025e48 	.word	0x00025e48
   127f4:	0001064d 	.word	0x0001064d
   127f8:	00025e7f 	.word	0x00025e7f
   127fc:	00025e87 	.word	0x00025e87
   12800:	00011095 	.word	0x00011095
   12804:	00025ea5 	.word	0x00025ea5
   12808:	00025e97 	.word	0x00025e97
   1280c:	00010671 	.word	0x00010671
   12810:	00025eed 	.word	0x00025eed
   12814:	00025eac 	.word	0x00025eac
   12818:	00010839 	.word	0x00010839
   1281c:	00025ef2 	.word	0x00025ef2
   12820:	00025ef6 	.word	0x00025ef6
   12824:	000107b9 	.word	0x000107b9
   12828:	00025f95 	.word	0x00025f95
   1282c:	00025f52 	.word	0x00025f52
   12830:	00010c99 	.word	0x00010c99
   12834:	00025f94 	.word	0x00025f94
   12838:	00025f98 	.word	0x00025f98
   1283c:	00010969 	.word	0x00010969
   12840:	00025fe3 	.word	0x00025fe3
   12844:	00025fe6 	.word	0x00025fe6
   12848:	00010b15 	.word	0x00010b15
   1284c:	00026014 	.word	0x00026014
   12850:	0002601a 	.word	0x0002601a
   12854:	00010b8d 	.word	0x00010b8d
   12858:	0002603f 	.word	0x0002603f
   1285c:	00026042 	.word	0x00026042
   12860:	00010be9 	.word	0x00010be9
   12864:	00027b2e 	.word	0x00027b2e
   12868:	0002606f 	.word	0x0002606f
   1286c:	00010b51 	.word	0x00010b51
   12870:	00026094 	.word	0x00026094
   12874:	00026097 	.word	0x00026097
   12878:	00010f0d 	.word	0x00010f0d
   1287c:	000260ba 	.word	0x000260ba
   12880:	000260be 	.word	0x000260be
   12884:	00010dd5 	.word	0x00010dd5
   12888:	00026170 	.word	0x00026170
   1288c:	00026178 	.word	0x00026178
   12890:	00010e89 	.word	0x00010e89
   12894:	000261bb 	.word	0x000261bb
   12898:	000261c2 	.word	0x000261c2
   1289c:	00010735 	.word	0x00010735
   128a0:	000261d5 	.word	0x000261d5
   128a4:	000261d9 	.word	0x000261d9
   128a8:	00010eb9 	.word	0x00010eb9
   128ac:	0002620f 	.word	0x0002620f
   128b0:	00026215 	.word	0x00026215
   128b4:	000116b1 	.word	0x000116b1
   128b8:	00025a61 	.word	0x00025a61
   128bc:	0002623d 	.word	0x0002623d
   128c0:	000112e5 	.word	0x000112e5
   128c4:	0002635b 	.word	0x0002635b
   128c8:	00026267 	.word	0x00026267
   128cc:	00011239 	.word	0x00011239
   128d0:	000250f1 	.word	0x000250f1
   128d4:	00026324 	.word	0x00026324
   128d8:	00012645 	.word	0x00012645
   128dc:	0001262d 	.word	0x0001262d
   128e0:	00025751 	.word	0x00025751

000128e4 <SingletonTemplate<Acceleration_Sensor>::getInstance()>:
_ZN17SingletonTemplateI19Acceleration_SensorE11getInstanceEv():
   128e4:	b538      	push	{r3, r4, r5, lr}
   128e6:	4d07      	ldr	r5, [pc, #28]	; (12904 <SingletonTemplate<Acceleration_Sensor>::getInstance()+0x20>)
   128e8:	682b      	ldr	r3, [r5, #0]
   128ea:	b94b      	cbnz	r3, 12900 <SingletonTemplate<Acceleration_Sensor>::getInstance()+0x1c>
   128ec:	2008      	movs	r0, #8
   128ee:	f7fd fcbf 	bl	10270 <operator new(unsigned int)>
   128f2:	4604      	mov	r4, r0
   128f4:	f7fe fafa 	bl	10eec <SingletonTemplate<I2C2>::getInstance()>
   128f8:	2338      	movs	r3, #56	; 0x38
   128fa:	6020      	str	r0, [r4, #0]
   128fc:	7123      	strb	r3, [r4, #4]
   128fe:	602c      	str	r4, [r5, #0]
   12900:	6828      	ldr	r0, [r5, #0]
   12902:	bd38      	pop	{r3, r4, r5, pc}
   12904:	2007c240 	.word	0x2007c240

00012908 <can_controller::enum_to_string()>:
_ZN14can_controller14enum_to_stringEv():
   12908:	b510      	push	{r4, lr}
   1290a:	4c47      	ldr	r4, [pc, #284]	; (12a28 <can_controller::enum_to_string()+0x120>)
   1290c:	4947      	ldr	r1, [pc, #284]	; (12a2c <can_controller::enum_to_string()+0x124>)
   1290e:	4620      	mov	r0, r4
   12910:	f00d f9ca 	bl	1fca8 <strcpy>
   12914:	f104 0020 	add.w	r0, r4, #32
   12918:	4945      	ldr	r1, [pc, #276]	; (12a30 <can_controller::enum_to_string()+0x128>)
   1291a:	f00d f9c5 	bl	1fca8 <strcpy>
   1291e:	f104 0040 	add.w	r0, r4, #64	; 0x40
   12922:	4944      	ldr	r1, [pc, #272]	; (12a34 <can_controller::enum_to_string()+0x12c>)
   12924:	f00d f9c0 	bl	1fca8 <strcpy>
   12928:	f104 0060 	add.w	r0, r4, #96	; 0x60
   1292c:	4942      	ldr	r1, [pc, #264]	; (12a38 <can_controller::enum_to_string()+0x130>)
   1292e:	f00d f9bb 	bl	1fca8 <strcpy>
   12932:	f104 0080 	add.w	r0, r4, #128	; 0x80
   12936:	4941      	ldr	r1, [pc, #260]	; (12a3c <can_controller::enum_to_string()+0x134>)
   12938:	f00d f9b6 	bl	1fca8 <strcpy>
   1293c:	f104 00a0 	add.w	r0, r4, #160	; 0xa0
   12940:	493f      	ldr	r1, [pc, #252]	; (12a40 <can_controller::enum_to_string()+0x138>)
   12942:	f00d f9b1 	bl	1fca8 <strcpy>
   12946:	f104 00c0 	add.w	r0, r4, #192	; 0xc0
   1294a:	493e      	ldr	r1, [pc, #248]	; (12a44 <can_controller::enum_to_string()+0x13c>)
   1294c:	f00d f9ac 	bl	1fca8 <strcpy>
   12950:	f104 00e0 	add.w	r0, r4, #224	; 0xe0
   12954:	4c3c      	ldr	r4, [pc, #240]	; (12a48 <can_controller::enum_to_string()+0x140>)
   12956:	493d      	ldr	r1, [pc, #244]	; (12a4c <can_controller::enum_to_string()+0x144>)
   12958:	f00d f9a6 	bl	1fca8 <strcpy>
   1295c:	f104 0020 	add.w	r0, r4, #32
   12960:	493b      	ldr	r1, [pc, #236]	; (12a50 <can_controller::enum_to_string()+0x148>)
   12962:	f00d f9a1 	bl	1fca8 <strcpy>
   12966:	f104 0040 	add.w	r0, r4, #64	; 0x40
   1296a:	493a      	ldr	r1, [pc, #232]	; (12a54 <can_controller::enum_to_string()+0x14c>)
   1296c:	f00d f99c 	bl	1fca8 <strcpy>
   12970:	f104 0060 	add.w	r0, r4, #96	; 0x60
   12974:	4938      	ldr	r1, [pc, #224]	; (12a58 <can_controller::enum_to_string()+0x150>)
   12976:	f00d f997 	bl	1fca8 <strcpy>
   1297a:	f104 0080 	add.w	r0, r4, #128	; 0x80
   1297e:	4937      	ldr	r1, [pc, #220]	; (12a5c <can_controller::enum_to_string()+0x154>)
   12980:	f00d f992 	bl	1fca8 <strcpy>
   12984:	f104 00a0 	add.w	r0, r4, #160	; 0xa0
   12988:	4935      	ldr	r1, [pc, #212]	; (12a60 <can_controller::enum_to_string()+0x158>)
   1298a:	f00d f98d 	bl	1fca8 <strcpy>
   1298e:	f104 00c0 	add.w	r0, r4, #192	; 0xc0
   12992:	4934      	ldr	r1, [pc, #208]	; (12a64 <can_controller::enum_to_string()+0x15c>)
   12994:	f00d f988 	bl	1fca8 <strcpy>
   12998:	f504 70c0 	add.w	r0, r4, #384	; 0x180
   1299c:	4932      	ldr	r1, [pc, #200]	; (12a68 <can_controller::enum_to_string()+0x160>)
   1299e:	f00d f983 	bl	1fca8 <strcpy>
   129a2:	f504 7008 	add.w	r0, r4, #544	; 0x220
   129a6:	4931      	ldr	r1, [pc, #196]	; (12a6c <can_controller::enum_to_string()+0x164>)
   129a8:	f00d f97e 	bl	1fca8 <strcpy>
   129ac:	f504 70e0 	add.w	r0, r4, #448	; 0x1c0
   129b0:	492f      	ldr	r1, [pc, #188]	; (12a70 <can_controller::enum_to_string()+0x168>)
   129b2:	f00d f979 	bl	1fca8 <strcpy>
   129b6:	f504 7010 	add.w	r0, r4, #576	; 0x240
   129ba:	492e      	ldr	r1, [pc, #184]	; (12a74 <can_controller::enum_to_string()+0x16c>)
   129bc:	f00d f974 	bl	1fca8 <strcpy>
   129c0:	f504 70d0 	add.w	r0, r4, #416	; 0x1a0
   129c4:	492c      	ldr	r1, [pc, #176]	; (12a78 <can_controller::enum_to_string()+0x170>)
   129c6:	f00d f96f 	bl	1fca8 <strcpy>
   129ca:	f104 00e0 	add.w	r0, r4, #224	; 0xe0
   129ce:	492b      	ldr	r1, [pc, #172]	; (12a7c <can_controller::enum_to_string()+0x174>)
   129d0:	f00d f96a 	bl	1fca8 <strcpy>
   129d4:	f504 7080 	add.w	r0, r4, #256	; 0x100
   129d8:	4929      	ldr	r1, [pc, #164]	; (12a80 <can_controller::enum_to_string()+0x178>)
   129da:	f00d f965 	bl	1fca8 <strcpy>
   129de:	f504 70a0 	add.w	r0, r4, #320	; 0x140
   129e2:	4928      	ldr	r1, [pc, #160]	; (12a84 <can_controller::enum_to_string()+0x17c>)
   129e4:	f00d f960 	bl	1fca8 <strcpy>
   129e8:	f504 7000 	add.w	r0, r4, #512	; 0x200
   129ec:	4926      	ldr	r1, [pc, #152]	; (12a88 <can_controller::enum_to_string()+0x180>)
   129ee:	f00d f95b 	bl	1fca8 <strcpy>
   129f2:	f504 70b0 	add.w	r0, r4, #352	; 0x160
   129f6:	4925      	ldr	r1, [pc, #148]	; (12a8c <can_controller::enum_to_string()+0x184>)
   129f8:	f00d f956 	bl	1fca8 <strcpy>
   129fc:	f504 70f0 	add.w	r0, r4, #480	; 0x1e0
   12a00:	4923      	ldr	r1, [pc, #140]	; (12a90 <can_controller::enum_to_string()+0x188>)
   12a02:	f00d f951 	bl	1fca8 <strcpy>
   12a06:	f504 7090 	add.w	r0, r4, #288	; 0x120
   12a0a:	4922      	ldr	r1, [pc, #136]	; (12a94 <can_controller::enum_to_string()+0x18c>)
   12a0c:	f00d f94c 	bl	1fca8 <strcpy>
   12a10:	f504 7070 	add.w	r0, r4, #960	; 0x3c0
   12a14:	4920      	ldr	r1, [pc, #128]	; (12a98 <can_controller::enum_to_string()+0x190>)
   12a16:	f00d f947 	bl	1fca8 <strcpy>
   12a1a:	f504 7078 	add.w	r0, r4, #992	; 0x3e0
   12a1e:	491f      	ldr	r1, [pc, #124]	; (12a9c <can_controller::enum_to_string()+0x194>)
   12a20:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   12a24:	f00d b940 	b.w	1fca8 <strcpy>
   12a28:	2007c645 	.word	0x2007c645
   12a2c:	0002637b 	.word	0x0002637b
   12a30:	0002638a 	.word	0x0002638a
   12a34:	0002639b 	.word	0x0002639b
   12a38:	000263ad 	.word	0x000263ad
   12a3c:	000263bf 	.word	0x000263bf
   12a40:	000263ce 	.word	0x000263ce
   12a44:	000263e4 	.word	0x000263e4
   12a48:	2007c244 	.word	0x2007c244
   12a4c:	000263f2 	.word	0x000263f2
   12a50:	00026403 	.word	0x00026403
   12a54:	0002640d 	.word	0x0002640d
   12a58:	0002641d 	.word	0x0002641d
   12a5c:	00026431 	.word	0x00026431
   12a60:	00026441 	.word	0x00026441
   12a64:	0002644f 	.word	0x0002644f
   12a68:	00026461 	.word	0x00026461
   12a6c:	00026476 	.word	0x00026476
   12a70:	0002648c 	.word	0x0002648c
   12a74:	000264a1 	.word	0x000264a1
   12a78:	000264b7 	.word	0x000264b7
   12a7c:	000264ce 	.word	0x000264ce
   12a80:	000264dc 	.word	0x000264dc
   12a84:	000264eb 	.word	0x000264eb
   12a88:	00026502 	.word	0x00026502
   12a8c:	00026516 	.word	0x00026516
   12a90:	00026525 	.word	0x00026525
   12a94:	0002653b 	.word	0x0002653b
   12a98:	0002654c 	.word	0x0002654c
   12a9c:	00026556 	.word	0x00026556

00012aa0 <can_controller::can_setup(can_msg_id_t*, unsigned int)>:
_ZN14can_controller9can_setupEP12can_msg_id_tj():
   12aa0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   12aa4:	0053      	lsls	r3, r2, #1
   12aa6:	3307      	adds	r3, #7
   12aa8:	b085      	sub	sp, #20
   12aaa:	f023 0307 	bic.w	r3, r3, #7
   12aae:	2600      	movs	r6, #0
   12ab0:	af04      	add	r7, sp, #16
   12ab2:	460c      	mov	r4, r1
   12ab4:	ebad 0d03 	sub.w	sp, sp, r3
   12ab8:	2164      	movs	r1, #100	; 0x64
   12aba:	4615      	mov	r5, r2
   12abc:	9600      	str	r6, [sp, #0]
   12abe:	9601      	str	r6, [sp, #4]
   12ac0:	4630      	mov	r0, r6
   12ac2:	460a      	mov	r2, r1
   12ac4:	460b      	mov	r3, r1
   12ac6:	f10d 0810 	add.w	r8, sp, #16
   12aca:	f007 f9db 	bl	19e84 <CAN_init>
   12ace:	2c00      	cmp	r4, #0
   12ad0:	d03d      	beq.n	12b4e <can_controller::can_setup(can_msg_id_t*, unsigned int)+0xae>
   12ad2:	b2b3      	uxth	r3, r6
   12ad4:	42ab      	cmp	r3, r5
   12ad6:	f04f 0300 	mov.w	r3, #0
   12ada:	d219      	bcs.n	12b10 <can_controller::can_setup(can_msg_id_t*, unsigned int)+0x70>
   12adc:	b29a      	uxth	r2, r3
   12ade:	1e69      	subs	r1, r5, #1
   12ae0:	428a      	cmp	r2, r1
   12ae2:	d213      	bcs.n	12b0c <can_controller::can_setup(can_msg_id_t*, unsigned int)+0x6c>
   12ae4:	3201      	adds	r2, #1
   12ae6:	0050      	lsls	r0, r2, #1
   12ae8:	f834 e000 	ldrh.w	lr, [r4, r0]
   12aec:	3802      	subs	r0, #2
   12aee:	5a21      	ldrh	r1, [r4, r0]
   12af0:	fa1f f98e 	uxth.w	r9, lr
   12af4:	fa1f fc81 	uxth.w	ip, r1
   12af8:	45e1      	cmp	r9, ip
   12afa:	bf38      	it	cc
   12afc:	f824 e000 	strhcc.w	lr, [r4, r0]
   12b00:	f103 0301 	add.w	r3, r3, #1
   12b04:	bf38      	it	cc
   12b06:	f824 1012 	strhcc.w	r1, [r4, r2, lsl #1]
   12b0a:	e7e7      	b.n	12adc <can_controller::can_setup(can_msg_id_t*, unsigned int)+0x3c>
   12b0c:	3601      	adds	r6, #1
   12b0e:	e7e0      	b.n	12ad2 <can_controller::can_setup(can_msg_id_t*, unsigned int)+0x32>
   12b10:	b29e      	uxth	r6, r3
   12b12:	42ae      	cmp	r6, r5
   12b14:	f103 0901 	add.w	r9, r3, #1
   12b18:	d20e      	bcs.n	12b38 <can_controller::can_setup(can_msg_id_t*, unsigned int)+0x98>
   12b1a:	f834 1016 	ldrh.w	r1, [r4, r6, lsl #1]
   12b1e:	2000      	movs	r0, #0
   12b20:	f007 fb1e 	bl	1a160 <CAN_gen_sid>
   12b24:	b200      	sxth	r0, r0
   12b26:	f808 0016 	strb.w	r0, [r8, r6, lsl #1]
   12b2a:	f3c0 2007 	ubfx	r0, r0, #8, #8
   12b2e:	eb08 0646 	add.w	r6, r8, r6, lsl #1
   12b32:	7070      	strb	r0, [r6, #1]
   12b34:	464b      	mov	r3, r9
   12b36:	e7eb      	b.n	12b10 <can_controller::can_setup(can_msg_id_t*, unsigned int)+0x70>
   12b38:	2200      	movs	r2, #0
   12b3a:	9200      	str	r2, [sp, #0]
   12b3c:	9201      	str	r2, [sp, #4]
   12b3e:	9202      	str	r2, [sp, #8]
   12b40:	9203      	str	r2, [sp, #12]
   12b42:	4640      	mov	r0, r8
   12b44:	b2a9      	uxth	r1, r5
   12b46:	4613      	mov	r3, r2
   12b48:	f007 fb24 	bl	1a194 <CAN_setup_filter>
   12b4c:	e001      	b.n	12b52 <can_controller::can_setup(can_msg_id_t*, unsigned int)+0xb2>
   12b4e:	f007 fb01 	bl	1a154 <CAN_bypass_filter_accept_all_msgs>
   12b52:	2000      	movs	r0, #0
   12b54:	f007 faf2 	bl	1a13c <CAN_reset_bus>
   12b58:	2001      	movs	r0, #1
   12b5a:	3704      	adds	r7, #4
   12b5c:	46bd      	mov	sp, r7
   12b5e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

00012b62 <can_controller::can_controller(controller_id_t, can_msg_id_t*, unsigned int)>:
_ZN14can_controllerC1E15controller_id_tP12can_msg_id_tj():
   12b62:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   12b64:	2500      	movs	r5, #0
   12b66:	4604      	mov	r4, r0
   12b68:	4616      	mov	r6, r2
   12b6a:	461f      	mov	r7, r3
   12b6c:	7001      	strb	r1, [r0, #0]
   12b6e:	8045      	strh	r5, [r0, #2]
   12b70:	80c5      	strh	r5, [r0, #6]
   12b72:	f7ff fec9 	bl	12908 <can_controller::enum_to_string()>
   12b76:	4620      	mov	r0, r4
   12b78:	4631      	mov	r1, r6
   12b7a:	463a      	mov	r2, r7
   12b7c:	f7ff ff90 	bl	12aa0 <can_controller::can_setup(can_msg_id_t*, unsigned int)>
   12b80:	4620      	mov	r0, r4
   12b82:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00012b84 <can_controller::get_rx_count()>:
_ZN14can_controller12get_rx_countEv():
   12b84:	8840      	ldrh	r0, [r0, #2]
   12b86:	4770      	bx	lr

00012b88 <can_controller::get_rx_bytes()>:
_ZN14can_controller12get_rx_bytesEv():
   12b88:	8880      	ldrh	r0, [r0, #4]
   12b8a:	4770      	bx	lr

00012b8c <can_controller::get_tx_count()>:
_ZN14can_controller12get_tx_countEv():
   12b8c:	88c0      	ldrh	r0, [r0, #6]
   12b8e:	4770      	bx	lr

00012b90 <can_controller::get_tx_bytes()>:
_ZN14can_controller12get_tx_bytesEv():
   12b90:	8900      	ldrh	r0, [r0, #8]
   12b92:	4770      	bx	lr

00012b94 <can_controller::processReset()>:
_ZN14can_controller12processResetEv():
   12b94:	b508      	push	{r3, lr}
   12b96:	4806      	ldr	r0, [pc, #24]	; (12bb0 <can_controller::processReset()+0x1c>)
   12b98:	f00c fde0 	bl	1f75c <puts>
   12b9c:	f006 f9f6 	bl	18f8c <logger_send_flush_request>
   12ba0:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
   12ba4:	22aa      	movs	r2, #170	; 0xaa
   12ba6:	721a      	strb	r2, [r3, #8]
   12ba8:	2200      	movs	r2, #0
   12baa:	701a      	strb	r2, [r3, #0]
   12bac:	bd08      	pop	{r3, pc}
   12bae:	bf00      	nop
   12bb0:	00026560 	.word	0x00026560

00012bb4 <can_controller::can_send(controller_id_t, msg_id_t, unsigned char*, unsigned short)>:
_ZN14can_controller8can_sendE15controller_id_t8msg_id_tPht():
   12bb4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   12bb8:	b088      	sub	sp, #32
   12bba:	4604      	mov	r4, r0
   12bbc:	4689      	mov	r9, r1
   12bbe:	4690      	mov	r8, r2
   12bc0:	2100      	movs	r1, #0
   12bc2:	2210      	movs	r2, #16
   12bc4:	2600      	movs	r6, #0
   12bc6:	a804      	add	r0, sp, #16
   12bc8:	461f      	mov	r7, r3
   12bca:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
   12bce:	f00c f846 	bl	1ec5e <memset>
   12bd2:	f8ad 600c 	strh.w	r6, [sp, #12]
   12bd6:	f7ff f843 	bl	11c60 <SingletonTemplate<LED>::getInstance()>
   12bda:	4682      	mov	sl, r0
   12bdc:	f7ff f840 	bl	11c60 <SingletonTemplate<LED>::getInstance()>
   12be0:	f002 feab 	bl	1593a <LED::getValues() const>
   12be4:	f080 0204 	eor.w	r2, r0, #4
   12be8:	2103      	movs	r1, #3
   12bea:	f3c2 0280 	ubfx	r2, r2, #2, #1
   12bee:	4650      	mov	r0, sl
   12bf0:	f002 fe9e 	bl	15930 <LED::set(int, bool)>
   12bf4:	f89d 300c 	ldrb.w	r3, [sp, #12]
   12bf8:	7822      	ldrb	r2, [r4, #0]
   12bfa:	f362 0302 	bfi	r3, r2, #0, #3
   12bfe:	f369 03c5 	bfi	r3, r9, #3, #3
   12c02:	f88d 300c 	strb.w	r3, [sp, #12]
   12c06:	f8bd 100c 	ldrh.w	r1, [sp, #12]
   12c0a:	f89d 3013 	ldrb.w	r3, [sp, #19]
   12c0e:	f368 118a 	bfi	r1, r8, #6, #5
   12c12:	f8ad 100c 	strh.w	r1, [sp, #12]
   12c16:	f366 13c7 	bfi	r3, r6, #7, #1
   12c1a:	b289      	uxth	r1, r1
   12c1c:	9105      	str	r1, [sp, #20]
   12c1e:	f88d 3013 	strb.w	r3, [sp, #19]
   12c22:	2d00      	cmp	r5, #0
   12c24:	d073      	beq.n	12d0e <can_controller::can_send(controller_id_t, msg_id_t, unsigned char*, unsigned short)+0x15a>
   12c26:	fa5f f885 	uxtb.w	r8, r5
   12c2a:	f88d 8018 	strb.w	r8, [sp, #24]
   12c2e:	4632      	mov	r2, r6
   12c30:	42aa      	cmp	r2, r5
   12c32:	46a9      	mov	r9, r5
   12c34:	f080 80af 	bcs.w	12d96 <can_controller::can_send(controller_id_t, msg_id_t, unsigned char*, unsigned short)+0x1e2>
   12c38:	1aa8      	subs	r0, r5, r2
   12c3a:	2807      	cmp	r0, #7
   12c3c:	f89d 3012 	ldrb.w	r3, [sp, #18]
   12c40:	d910      	bls.n	12c64 <can_controller::can_send(controller_id_t, msg_id_t, unsigned char*, unsigned short)+0xb0>
   12c42:	2108      	movs	r1, #8
   12c44:	f361 0303 	bfi	r3, r1, #0, #4
   12c48:	f88d 3012 	strb.w	r3, [sp, #18]
   12c4c:	2100      	movs	r1, #0
   12c4e:	18bb      	adds	r3, r7, r2
   12c50:	5c58      	ldrb	r0, [r3, r1]
   12c52:	ab04      	add	r3, sp, #16
   12c54:	440b      	add	r3, r1
   12c56:	3101      	adds	r1, #1
   12c58:	2907      	cmp	r1, #7
   12c5a:	7258      	strb	r0, [r3, #9]
   12c5c:	d1f7      	bne.n	12c4e <can_controller::can_send(controller_id_t, msg_id_t, unsigned char*, unsigned short)+0x9a>
   12c5e:	f102 0907 	add.w	r9, r2, #7
   12c62:	e014      	b.n	12c8e <can_controller::can_send(controller_id_t, msg_id_t, unsigned char*, unsigned short)+0xda>
   12c64:	f108 0101 	add.w	r1, r8, #1
   12c68:	1a89      	subs	r1, r1, r2
   12c6a:	f361 0303 	bfi	r3, r1, #0, #4
   12c6e:	f88d 3012 	strb.w	r3, [sp, #18]
   12c72:	2100      	movs	r1, #0
   12c74:	b28b      	uxth	r3, r1
   12c76:	4283      	cmp	r3, r0
   12c78:	f101 0101 	add.w	r1, r1, #1
   12c7c:	d207      	bcs.n	12c8e <can_controller::can_send(controller_id_t, msg_id_t, unsigned char*, unsigned short)+0xda>
   12c7e:	18be      	adds	r6, r7, r2
   12c80:	5cf6      	ldrb	r6, [r6, r3]
   12c82:	f10d 0e20 	add.w	lr, sp, #32
   12c86:	4473      	add	r3, lr
   12c88:	f803 6c07 	strb.w	r6, [r3, #-7]
   12c8c:	e7f2      	b.n	12c74 <can_controller::can_send(controller_id_t, msg_id_t, unsigned char*, unsigned short)+0xc0>
   12c8e:	2000      	movs	r0, #0
   12c90:	a904      	add	r1, sp, #16
   12c92:	f04f 32ff 	mov.w	r2, #4294967295
   12c96:	f007 fa03 	bl	1a0a0 <CAN_tx>
   12c9a:	4e41      	ldr	r6, [pc, #260]	; (12da0 <can_controller::can_send(controller_id_t, msg_id_t, unsigned char*, unsigned short)+0x1ec>)
   12c9c:	4682      	mov	sl, r0
   12c9e:	b9c0      	cbnz	r0, 12cd2 <can_controller::can_send(controller_id_t, msg_id_t, unsigned char*, unsigned short)+0x11e>
   12ca0:	7833      	ldrb	r3, [r6, #0]
   12ca2:	f043 0304 	orr.w	r3, r3, #4
   12ca6:	7033      	strb	r3, [r6, #0]
   12ca8:	f7fe ffda 	bl	11c60 <SingletonTemplate<LED>::getInstance()>
   12cac:	2101      	movs	r1, #1
   12cae:	f002 fe29 	bl	15904 <LED::on(int)>
   12cb2:	4b3c      	ldr	r3, [pc, #240]	; (12da4 <can_controller::can_send(controller_id_t, msg_id_t, unsigned char*, unsigned short)+0x1f0>)
   12cb4:	4a3c      	ldr	r2, [pc, #240]	; (12da8 <can_controller::can_send(controller_id_t, msg_id_t, unsigned char*, unsigned short)+0x1f4>)
   12cb6:	9300      	str	r3, [sp, #0]
   12cb8:	2003      	movs	r0, #3
   12cba:	2390      	movs	r3, #144	; 0x90
   12cbc:	493b      	ldr	r1, [pc, #236]	; (12dac <can_controller::can_send(controller_id_t, msg_id_t, unsigned char*, unsigned short)+0x1f8>)
   12cbe:	f006 f9ed 	bl	1909c <logger_log>
   12cc2:	7831      	ldrb	r1, [r6, #0]
   12cc4:	483a      	ldr	r0, [pc, #232]	; (12db0 <can_controller::can_send(controller_id_t, msg_id_t, unsigned char*, unsigned short)+0x1fc>)
   12cc6:	f00c fcd1 	bl	1f66c <iprintf>
   12cca:	4650      	mov	r0, sl
   12ccc:	f007 fa36 	bl	1a13c <CAN_reset_bus>
   12cd0:	e01b      	b.n	12d0a <can_controller::can_send(controller_id_t, msg_id_t, unsigned char*, unsigned short)+0x156>
   12cd2:	88e3      	ldrh	r3, [r4, #6]
   12cd4:	8922      	ldrh	r2, [r4, #8]
   12cd6:	3301      	adds	r3, #1
   12cd8:	80e3      	strh	r3, [r4, #6]
   12cda:	f89d 3012 	ldrb.w	r3, [sp, #18]
   12cde:	f003 030f 	and.w	r3, r3, #15
   12ce2:	4413      	add	r3, r2
   12ce4:	8123      	strh	r3, [r4, #8]
   12ce6:	7833      	ldrb	r3, [r6, #0]
   12ce8:	0759      	lsls	r1, r3, #29
   12cea:	d50e      	bpl.n	12d0a <can_controller::can_send(controller_id_t, msg_id_t, unsigned char*, unsigned short)+0x156>
   12cec:	f003 03fb 	and.w	r3, r3, #251	; 0xfb
   12cf0:	7033      	strb	r3, [r6, #0]
   12cf2:	b12b      	cbz	r3, 12d00 <can_controller::can_send(controller_id_t, msg_id_t, unsigned char*, unsigned short)+0x14c>
   12cf4:	f7fe ffb4 	bl	11c60 <SingletonTemplate<LED>::getInstance()>
   12cf8:	2101      	movs	r1, #1
   12cfa:	f002 fe03 	bl	15904 <LED::on(int)>
   12cfe:	e004      	b.n	12d0a <can_controller::can_send(controller_id_t, msg_id_t, unsigned char*, unsigned short)+0x156>
   12d00:	f7fe ffae 	bl	11c60 <SingletonTemplate<LED>::getInstance()>
   12d04:	2101      	movs	r1, #1
   12d06:	f002 fe08 	bl	1591a <LED::off(int)>
   12d0a:	464a      	mov	r2, r9
   12d0c:	e790      	b.n	12c30 <can_controller::can_send(controller_id_t, msg_id_t, unsigned char*, unsigned short)+0x7c>
   12d0e:	f89d 3012 	ldrb.w	r3, [sp, #18]
   12d12:	4628      	mov	r0, r5
   12d14:	f365 0303 	bfi	r3, r5, #0, #4
   12d18:	a904      	add	r1, sp, #16
   12d1a:	f04f 32ff 	mov.w	r2, #4294967295
   12d1e:	f88d 3012 	strb.w	r3, [sp, #18]
   12d22:	f007 f9bd 	bl	1a0a0 <CAN_tx>
   12d26:	4d1e      	ldr	r5, [pc, #120]	; (12da0 <can_controller::can_send(controller_id_t, msg_id_t, unsigned char*, unsigned short)+0x1ec>)
   12d28:	4606      	mov	r6, r0
   12d2a:	b9c0      	cbnz	r0, 12d5e <can_controller::can_send(controller_id_t, msg_id_t, unsigned char*, unsigned short)+0x1aa>
   12d2c:	782b      	ldrb	r3, [r5, #0]
   12d2e:	f043 0304 	orr.w	r3, r3, #4
   12d32:	702b      	strb	r3, [r5, #0]
   12d34:	f7fe ff94 	bl	11c60 <SingletonTemplate<LED>::getInstance()>
   12d38:	2101      	movs	r1, #1
   12d3a:	f002 fde3 	bl	15904 <LED::on(int)>
   12d3e:	4b19      	ldr	r3, [pc, #100]	; (12da4 <can_controller::can_send(controller_id_t, msg_id_t, unsigned char*, unsigned short)+0x1f0>)
   12d40:	4a19      	ldr	r2, [pc, #100]	; (12da8 <can_controller::can_send(controller_id_t, msg_id_t, unsigned char*, unsigned short)+0x1f4>)
   12d42:	9300      	str	r3, [sp, #0]
   12d44:	2003      	movs	r0, #3
   12d46:	23a4      	movs	r3, #164	; 0xa4
   12d48:	4918      	ldr	r1, [pc, #96]	; (12dac <can_controller::can_send(controller_id_t, msg_id_t, unsigned char*, unsigned short)+0x1f8>)
   12d4a:	f006 f9a7 	bl	1909c <logger_log>
   12d4e:	7829      	ldrb	r1, [r5, #0]
   12d50:	4817      	ldr	r0, [pc, #92]	; (12db0 <can_controller::can_send(controller_id_t, msg_id_t, unsigned char*, unsigned short)+0x1fc>)
   12d52:	f00c fc8b 	bl	1f66c <iprintf>
   12d56:	4630      	mov	r0, r6
   12d58:	f007 f9f0 	bl	1a13c <CAN_reset_bus>
   12d5c:	e01b      	b.n	12d96 <can_controller::can_send(controller_id_t, msg_id_t, unsigned char*, unsigned short)+0x1e2>
   12d5e:	88e3      	ldrh	r3, [r4, #6]
   12d60:	8922      	ldrh	r2, [r4, #8]
   12d62:	3301      	adds	r3, #1
   12d64:	80e3      	strh	r3, [r4, #6]
   12d66:	f89d 3012 	ldrb.w	r3, [sp, #18]
   12d6a:	f003 030f 	and.w	r3, r3, #15
   12d6e:	4413      	add	r3, r2
   12d70:	8123      	strh	r3, [r4, #8]
   12d72:	782b      	ldrb	r3, [r5, #0]
   12d74:	075a      	lsls	r2, r3, #29
   12d76:	d50e      	bpl.n	12d96 <can_controller::can_send(controller_id_t, msg_id_t, unsigned char*, unsigned short)+0x1e2>
   12d78:	f003 03fb 	and.w	r3, r3, #251	; 0xfb
   12d7c:	702b      	strb	r3, [r5, #0]
   12d7e:	b12b      	cbz	r3, 12d8c <can_controller::can_send(controller_id_t, msg_id_t, unsigned char*, unsigned short)+0x1d8>
   12d80:	f7fe ff6e 	bl	11c60 <SingletonTemplate<LED>::getInstance()>
   12d84:	2101      	movs	r1, #1
   12d86:	f002 fdbd 	bl	15904 <LED::on(int)>
   12d8a:	e004      	b.n	12d96 <can_controller::can_send(controller_id_t, msg_id_t, unsigned char*, unsigned short)+0x1e2>
   12d8c:	f7fe ff68 	bl	11c60 <SingletonTemplate<LED>::getInstance()>
   12d90:	2101      	movs	r1, #1
   12d92:	f002 fdc2 	bl	1591a <LED::off(int)>
   12d96:	2001      	movs	r0, #1
   12d98:	b008      	add	sp, #32
   12d9a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   12d9e:	bf00      	nop
   12da0:	2007c644 	.word	0x2007c644
   12da4:	000265ab 	.word	0x000265ab
   12da8:	00026608 	.word	0x00026608
   12dac:	00026581 	.word	0x00026581
   12db0:	000265a2 	.word	0x000265a2

00012db4 <can_controller::can_recv(controller_id_t*, msg_id_t*, unsigned char*, unsigned short*)>:
_ZN14can_controller8can_recvEP15controller_id_tP8msg_id_tPhPt():
   12db4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12db8:	b089      	sub	sp, #36	; 0x24
   12dba:	4606      	mov	r6, r0
   12dbc:	460f      	mov	r7, r1
   12dbe:	4614      	mov	r4, r2
   12dc0:	2100      	movs	r1, #0
   12dc2:	2210      	movs	r2, #16
   12dc4:	a804      	add	r0, sp, #16
   12dc6:	469a      	mov	sl, r3
   12dc8:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
   12dcc:	f00b ff47 	bl	1ec5e <memset>
   12dd0:	2000      	movs	r0, #0
   12dd2:	a904      	add	r1, sp, #16
   12dd4:	f04f 32ff 	mov.w	r2, #4294967295
   12dd8:	f007 f90e 	bl	19ff8 <CAN_rx>
   12ddc:	4d61      	ldr	r5, [pc, #388]	; (12f64 <can_controller::can_recv(controller_id_t*, msg_id_t*, unsigned char*, unsigned short*)+0x1b0>)
   12dde:	4680      	mov	r8, r0
   12de0:	b9c0      	cbnz	r0, 12e14 <can_controller::can_recv(controller_id_t*, msg_id_t*, unsigned char*, unsigned short*)+0x60>
   12de2:	782b      	ldrb	r3, [r5, #0]
   12de4:	f043 0308 	orr.w	r3, r3, #8
   12de8:	702b      	strb	r3, [r5, #0]
   12dea:	f7fe ff39 	bl	11c60 <SingletonTemplate<LED>::getInstance()>
   12dee:	2101      	movs	r1, #1
   12df0:	f002 fd88 	bl	15904 <LED::on(int)>
   12df4:	4b5c      	ldr	r3, [pc, #368]	; (12f68 <can_controller::can_recv(controller_id_t*, msg_id_t*, unsigned char*, unsigned short*)+0x1b4>)
   12df6:	4a5d      	ldr	r2, [pc, #372]	; (12f6c <can_controller::can_recv(controller_id_t*, msg_id_t*, unsigned char*, unsigned short*)+0x1b8>)
   12df8:	9300      	str	r3, [sp, #0]
   12dfa:	2003      	movs	r0, #3
   12dfc:	23bb      	movs	r3, #187	; 0xbb
   12dfe:	495c      	ldr	r1, [pc, #368]	; (12f70 <can_controller::can_recv(controller_id_t*, msg_id_t*, unsigned char*, unsigned short*)+0x1bc>)
   12e00:	f006 f94c 	bl	1909c <logger_log>
   12e04:	7829      	ldrb	r1, [r5, #0]
   12e06:	485b      	ldr	r0, [pc, #364]	; (12f74 <can_controller::can_recv(controller_id_t*, msg_id_t*, unsigned char*, unsigned short*)+0x1c0>)
   12e08:	f00c fc30 	bl	1f66c <iprintf>
   12e0c:	4640      	mov	r0, r8
   12e0e:	f007 f995 	bl	1a13c <CAN_reset_bus>
   12e12:	e0a2      	b.n	12f5a <can_controller::can_recv(controller_id_t*, msg_id_t*, unsigned char*, unsigned short*)+0x1a6>
   12e14:	8873      	ldrh	r3, [r6, #2]
   12e16:	3301      	adds	r3, #1
   12e18:	8073      	strh	r3, [r6, #2]
   12e1a:	782b      	ldrb	r3, [r5, #0]
   12e1c:	0719      	lsls	r1, r3, #28
   12e1e:	d50e      	bpl.n	12e3e <can_controller::can_recv(controller_id_t*, msg_id_t*, unsigned char*, unsigned short*)+0x8a>
   12e20:	f003 03f7 	and.w	r3, r3, #247	; 0xf7
   12e24:	702b      	strb	r3, [r5, #0]
   12e26:	b12b      	cbz	r3, 12e34 <can_controller::can_recv(controller_id_t*, msg_id_t*, unsigned char*, unsigned short*)+0x80>
   12e28:	f7fe ff1a 	bl	11c60 <SingletonTemplate<LED>::getInstance()>
   12e2c:	2101      	movs	r1, #1
   12e2e:	f002 fd69 	bl	15904 <LED::on(int)>
   12e32:	e004      	b.n	12e3e <can_controller::can_recv(controller_id_t*, msg_id_t*, unsigned char*, unsigned short*)+0x8a>
   12e34:	f7fe ff14 	bl	11c60 <SingletonTemplate<LED>::getInstance()>
   12e38:	2101      	movs	r1, #1
   12e3a:	f002 fd6e 	bl	1591a <LED::off(int)>
   12e3e:	f7fe ff0f 	bl	11c60 <SingletonTemplate<LED>::getInstance()>
   12e42:	4683      	mov	fp, r0
   12e44:	f7fe ff0c 	bl	11c60 <SingletonTemplate<LED>::getInstance()>
   12e48:	f002 fd77 	bl	1593a <LED::getValues() const>
   12e4c:	f080 0202 	eor.w	r2, r0, #2
   12e50:	f3c2 0240 	ubfx	r2, r2, #1, #1
   12e54:	4658      	mov	r0, fp
   12e56:	2102      	movs	r1, #2
   12e58:	f002 fd6a 	bl	15930 <LED::set(int, bool)>
   12e5c:	9b05      	ldr	r3, [sp, #20]
   12e5e:	f003 0207 	and.w	r2, r3, #7
   12e62:	f8ad 300c 	strh.w	r3, [sp, #12]
   12e66:	f3c3 1384 	ubfx	r3, r3, #6, #5
   12e6a:	703a      	strb	r2, [r7, #0]
   12e6c:	7023      	strb	r3, [r4, #0]
   12e6e:	f89d 4012 	ldrb.w	r4, [sp, #18]
   12e72:	88b3      	ldrh	r3, [r6, #4]
   12e74:	f004 040f 	and.w	r4, r4, #15
   12e78:	4423      	add	r3, r4
   12e7a:	80b3      	strh	r3, [r6, #4]
   12e7c:	2c00      	cmp	r4, #0
   12e7e:	d06a      	beq.n	12f56 <can_controller::can_recv(controller_id_t*, msg_id_t*, unsigned char*, unsigned short*)+0x1a2>
   12e80:	f89d 7018 	ldrb.w	r7, [sp, #24]
   12e84:	f8b9 3000 	ldrh.w	r3, [r9]
   12e88:	42bb      	cmp	r3, r7
   12e8a:	d301      	bcc.n	12e90 <can_controller::can_recv(controller_id_t*, msg_id_t*, unsigned char*, unsigned short*)+0xdc>
   12e8c:	2400      	movs	r4, #0
   12e8e:	e017      	b.n	12ec0 <can_controller::can_recv(controller_id_t*, msg_id_t*, unsigned char*, unsigned short*)+0x10c>
   12e90:	4839      	ldr	r0, [pc, #228]	; (12f78 <can_controller::can_recv(controller_id_t*, msg_id_t*, unsigned char*, unsigned short*)+0x1c4>)
   12e92:	f00c fc63 	bl	1f75c <puts>
   12e96:	f04f 0800 	mov.w	r8, #0
   12e9a:	e05e      	b.n	12f5a <can_controller::can_recv(controller_id_t*, msg_id_t*, unsigned char*, unsigned short*)+0x1a6>
   12e9c:	1b39      	subs	r1, r7, r4
   12e9e:	2907      	cmp	r1, #7
   12ea0:	f04f 0200 	mov.w	r2, #0
   12ea4:	dd0f      	ble.n	12ec6 <can_controller::can_recv(controller_id_t*, msg_id_t*, unsigned char*, unsigned short*)+0x112>
   12ea6:	ab04      	add	r3, sp, #16
   12ea8:	4413      	add	r3, r2
   12eaa:	7a59      	ldrb	r1, [r3, #9]
   12eac:	eb0a 0304 	add.w	r3, sl, r4
   12eb0:	5499      	strb	r1, [r3, r2]
   12eb2:	3201      	adds	r2, #1
   12eb4:	2a07      	cmp	r2, #7
   12eb6:	d1f6      	bne.n	12ea6 <can_controller::can_recv(controller_id_t*, msg_id_t*, unsigned char*, unsigned short*)+0xf2>
   12eb8:	3407      	adds	r4, #7
   12eba:	b2a4      	uxth	r4, r4
   12ebc:	42bc      	cmp	r4, r7
   12ebe:	d312      	bcc.n	12ee6 <can_controller::can_recv(controller_id_t*, msg_id_t*, unsigned char*, unsigned short*)+0x132>
   12ec0:	42bc      	cmp	r4, r7
   12ec2:	d3eb      	bcc.n	12e9c <can_controller::can_recv(controller_id_t*, msg_id_t*, unsigned char*, unsigned short*)+0xe8>
   12ec4:	e047      	b.n	12f56 <can_controller::can_recv(controller_id_t*, msg_id_t*, unsigned char*, unsigned short*)+0x1a2>
   12ec6:	b293      	uxth	r3, r2
   12ec8:	428b      	cmp	r3, r1
   12eca:	f102 0201 	add.w	r2, r2, #1
   12ece:	da08      	bge.n	12ee2 <can_controller::can_recv(controller_id_t*, msg_id_t*, unsigned char*, unsigned short*)+0x12e>
   12ed0:	a808      	add	r0, sp, #32
   12ed2:	4418      	add	r0, r3
   12ed4:	f810 cc07 	ldrb.w	ip, [r0, #-7]
   12ed8:	eb0a 0004 	add.w	r0, sl, r4
   12edc:	f800 c003 	strb.w	ip, [r0, r3]
   12ee0:	e7f1      	b.n	12ec6 <can_controller::can_recv(controller_id_t*, msg_id_t*, unsigned char*, unsigned short*)+0x112>
   12ee2:	463c      	mov	r4, r7
   12ee4:	e7ec      	b.n	12ec0 <can_controller::can_recv(controller_id_t*, msg_id_t*, unsigned char*, unsigned short*)+0x10c>
   12ee6:	2000      	movs	r0, #0
   12ee8:	a904      	add	r1, sp, #16
   12eea:	f04f 32ff 	mov.w	r2, #4294967295
   12eee:	f007 f883 	bl	19ff8 <CAN_rx>
   12ef2:	4683      	mov	fp, r0
   12ef4:	b9c0      	cbnz	r0, 12f28 <can_controller::can_recv(controller_id_t*, msg_id_t*, unsigned char*, unsigned short*)+0x174>
   12ef6:	782b      	ldrb	r3, [r5, #0]
   12ef8:	f043 0308 	orr.w	r3, r3, #8
   12efc:	702b      	strb	r3, [r5, #0]
   12efe:	f7fe feaf 	bl	11c60 <SingletonTemplate<LED>::getInstance()>
   12f02:	2101      	movs	r1, #1
   12f04:	f002 fcfe 	bl	15904 <LED::on(int)>
   12f08:	4b17      	ldr	r3, [pc, #92]	; (12f68 <can_controller::can_recv(controller_id_t*, msg_id_t*, unsigned char*, unsigned short*)+0x1b4>)
   12f0a:	4a18      	ldr	r2, [pc, #96]	; (12f6c <can_controller::can_recv(controller_id_t*, msg_id_t*, unsigned char*, unsigned short*)+0x1b8>)
   12f0c:	9300      	str	r3, [sp, #0]
   12f0e:	2003      	movs	r0, #3
   12f10:	23ef      	movs	r3, #239	; 0xef
   12f12:	4917      	ldr	r1, [pc, #92]	; (12f70 <can_controller::can_recv(controller_id_t*, msg_id_t*, unsigned char*, unsigned short*)+0x1bc>)
   12f14:	f006 f8c2 	bl	1909c <logger_log>
   12f18:	7829      	ldrb	r1, [r5, #0]
   12f1a:	4816      	ldr	r0, [pc, #88]	; (12f74 <can_controller::can_recv(controller_id_t*, msg_id_t*, unsigned char*, unsigned short*)+0x1c0>)
   12f1c:	f00c fba6 	bl	1f66c <iprintf>
   12f20:	4658      	mov	r0, fp
   12f22:	f007 f90b 	bl	1a13c <CAN_reset_bus>
   12f26:	e7cb      	b.n	12ec0 <can_controller::can_recv(controller_id_t*, msg_id_t*, unsigned char*, unsigned short*)+0x10c>
   12f28:	8873      	ldrh	r3, [r6, #2]
   12f2a:	3301      	adds	r3, #1
   12f2c:	8073      	strh	r3, [r6, #2]
   12f2e:	782b      	ldrb	r3, [r5, #0]
   12f30:	071a      	lsls	r2, r3, #28
   12f32:	d5c5      	bpl.n	12ec0 <can_controller::can_recv(controller_id_t*, msg_id_t*, unsigned char*, unsigned short*)+0x10c>
   12f34:	4a0b      	ldr	r2, [pc, #44]	; (12f64 <can_controller::can_recv(controller_id_t*, msg_id_t*, unsigned char*, unsigned short*)+0x1b0>)
   12f36:	f003 03f7 	and.w	r3, r3, #247	; 0xf7
   12f3a:	7013      	strb	r3, [r2, #0]
   12f3c:	b12b      	cbz	r3, 12f4a <can_controller::can_recv(controller_id_t*, msg_id_t*, unsigned char*, unsigned short*)+0x196>
   12f3e:	f7fe fe8f 	bl	11c60 <SingletonTemplate<LED>::getInstance()>
   12f42:	2101      	movs	r1, #1
   12f44:	f002 fcde 	bl	15904 <LED::on(int)>
   12f48:	e7ba      	b.n	12ec0 <can_controller::can_recv(controller_id_t*, msg_id_t*, unsigned char*, unsigned short*)+0x10c>
   12f4a:	f7fe fe89 	bl	11c60 <SingletonTemplate<LED>::getInstance()>
   12f4e:	2101      	movs	r1, #1
   12f50:	f002 fce3 	bl	1591a <LED::off(int)>
   12f54:	e7b4      	b.n	12ec0 <can_controller::can_recv(controller_id_t*, msg_id_t*, unsigned char*, unsigned short*)+0x10c>
   12f56:	f8a9 4000 	strh.w	r4, [r9]
   12f5a:	4640      	mov	r0, r8
   12f5c:	b009      	add	sp, #36	; 0x24
   12f5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12f62:	bf00      	nop
   12f64:	2007c644 	.word	0x2007c644
   12f68:	000265c3 	.word	0x000265c3
   12f6c:	000265ff 	.word	0x000265ff
   12f70:	00026581 	.word	0x00026581
   12f74:	000265ba 	.word	0x000265ba
   12f78:	000265d2 	.word	0x000265d2

00012f7c <can_controller::processBootSequence(unsigned char)>:
_ZN14can_controller19processBootSequenceEh():
   12f7c:	b570      	push	{r4, r5, r6, lr}
   12f7e:	b08c      	sub	sp, #48	; 0x30
   12f80:	460e      	mov	r6, r1
   12f82:	4604      	mov	r4, r0
   12f84:	f7fe fe6c 	bl	11c60 <SingletonTemplate<LED>::getInstance()>
   12f88:	2104      	movs	r1, #4
   12f8a:	f002 fcbb 	bl	15904 <LED::on(int)>
   12f8e:	2320      	movs	r3, #32
   12f90:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
   12f94:	ab0b      	add	r3, sp, #44	; 0x2c
   12f96:	9300      	str	r3, [sp, #0]
   12f98:	4620      	mov	r0, r4
   12f9a:	a902      	add	r1, sp, #8
   12f9c:	f10d 0209 	add.w	r2, sp, #9
   12fa0:	ab03      	add	r3, sp, #12
   12fa2:	f7ff ff07 	bl	12db4 <can_controller::can_recv(controller_id_t*, msg_id_t*, unsigned char*, unsigned short*)>
   12fa6:	f89d 5009 	ldrb.w	r5, [sp, #9]
   12faa:	2d02      	cmp	r5, #2
   12fac:	d110      	bne.n	12fd0 <can_controller::processBootSequence(unsigned char)+0x54>
   12fae:	7823      	ldrb	r3, [r4, #0]
   12fb0:	200a      	movs	r0, #10
   12fb2:	4358      	muls	r0, r3
   12fb4:	f006 fe3a 	bl	19c2c <delay_ms>
   12fb8:	2301      	movs	r3, #1
   12fba:	9300      	str	r3, [sp, #0]
   12fbc:	f89d 1008 	ldrb.w	r1, [sp, #8]
   12fc0:	4620      	mov	r0, r4
   12fc2:	2203      	movs	r2, #3
   12fc4:	ab03      	add	r3, sp, #12
   12fc6:	f88d 600c 	strb.w	r6, [sp, #12]
   12fca:	f7ff fdf3 	bl	12bb4 <can_controller::can_send(controller_id_t, msg_id_t, unsigned char*, unsigned short)>
   12fce:	e7de      	b.n	12f8e <can_controller::processBootSequence(unsigned char)+0x12>
   12fd0:	2d04      	cmp	r5, #4
   12fd2:	d105      	bne.n	12fe0 <can_controller::processBootSequence(unsigned char)+0x64>
   12fd4:	f7fe fe44 	bl	11c60 <SingletonTemplate<LED>::getInstance()>
   12fd8:	4629      	mov	r1, r5
   12fda:	f002 fc9e 	bl	1591a <LED::off(int)>
   12fde:	e004      	b.n	12fea <can_controller::processBootSequence(unsigned char)+0x6e>
   12fe0:	2d01      	cmp	r5, #1
   12fe2:	d1d4      	bne.n	12f8e <can_controller::processBootSequence(unsigned char)+0x12>
   12fe4:	4620      	mov	r0, r4
   12fe6:	f7ff fdd5 	bl	12b94 <can_controller::processReset()>
   12fea:	2001      	movs	r0, #1
   12fec:	b00c      	add	sp, #48	; 0x30
   12fee:	bd70      	pop	{r4, r5, r6, pc}

00012ff0 <debugTask::~debugTask()>:
_ZN9debugTaskD1Ev():
   12ff0:	4b01      	ldr	r3, [pc, #4]	; (12ff8 <debugTask::~debugTask()+0x8>)
   12ff2:	6003      	str	r3, [r0, #0]
   12ff4:	4770      	bx	lr
   12ff6:	bf00      	nop
   12ff8:	00025de0 	.word	0x00025de0

00012ffc <canRxProcessTask::~canRxProcessTask()>:
_ZN16canRxProcessTaskD2Ev():
   12ffc:	4b01      	ldr	r3, [pc, #4]	; (13004 <canRxProcessTask::~canRxProcessTask()+0x8>)
   12ffe:	6003      	str	r3, [r0, #0]
   13000:	4770      	bx	lr
   13002:	bf00      	nop
   13004:	00025de0 	.word	0x00025de0

00013008 <canRxBufferTask::~canRxBufferTask()>:
_ZN15canRxBufferTaskD2Ev():
   13008:	4b01      	ldr	r3, [pc, #4]	; (13010 <canRxBufferTask::~canRxBufferTask()+0x8>)
   1300a:	6003      	str	r3, [r0, #0]
   1300c:	4770      	bx	lr
   1300e:	bf00      	nop
   13010:	00025de0 	.word	0x00025de0

00013014 <debugTask::~debugTask()>:
_ZN9debugTaskD0Ev():
   13014:	b510      	push	{r4, lr}
   13016:	4b03      	ldr	r3, [pc, #12]	; (13024 <debugTask::~debugTask()+0x10>)
   13018:	4604      	mov	r4, r0
   1301a:	6003      	str	r3, [r0, #0]
   1301c:	f7fd f92a 	bl	10274 <operator delete(void*)>
   13020:	4620      	mov	r0, r4
   13022:	bd10      	pop	{r4, pc}
   13024:	00025de0 	.word	0x00025de0

00013028 <canRxProcessTask::~canRxProcessTask()>:
_ZN16canRxProcessTaskD0Ev():
   13028:	b510      	push	{r4, lr}
   1302a:	4b03      	ldr	r3, [pc, #12]	; (13038 <canRxProcessTask::~canRxProcessTask()+0x10>)
   1302c:	4604      	mov	r4, r0
   1302e:	6003      	str	r3, [r0, #0]
   13030:	f7fd f920 	bl	10274 <operator delete(void*)>
   13034:	4620      	mov	r0, r4
   13036:	bd10      	pop	{r4, pc}
   13038:	00025de0 	.word	0x00025de0

0001303c <canRxBufferTask::~canRxBufferTask()>:
_ZN15canRxBufferTaskD0Ev():
   1303c:	b510      	push	{r4, lr}
   1303e:	4b03      	ldr	r3, [pc, #12]	; (1304c <canRxBufferTask::~canRxBufferTask()+0x10>)
   13040:	4604      	mov	r4, r0
   13042:	6003      	str	r3, [r0, #0]
   13044:	f7fd f916 	bl	10274 <operator delete(void*)>
   13048:	4620      	mov	r0, r4
   1304a:	bd10      	pop	{r4, pc}
   1304c:	00025de0 	.word	0x00025de0

00013050 <canRxBufferTask::canRxBufferTask(unsigned char)>:
_ZN15canRxBufferTaskC1Eh():
   13050:	b513      	push	{r0, r1, r4, lr}
   13052:	2200      	movs	r2, #0
   13054:	460b      	mov	r3, r1
   13056:	9200      	str	r2, [sp, #0]
   13058:	4905      	ldr	r1, [pc, #20]	; (13070 <canRxBufferTask::canRxBufferTask(unsigned char)+0x20>)
   1305a:	f44f 6280 	mov.w	r2, #1024	; 0x400
   1305e:	4604      	mov	r4, r0
   13060:	f006 fb26 	bl	196b0 <scheduler_task::scheduler_task(char const*, unsigned long, unsigned char, void*)>
   13064:	4b03      	ldr	r3, [pc, #12]	; (13074 <canRxBufferTask::canRxBufferTask(unsigned char)+0x24>)
   13066:	4620      	mov	r0, r4
   13068:	6023      	str	r3, [r4, #0]
   1306a:	b002      	add	sp, #8
   1306c:	bd10      	pop	{r4, pc}
   1306e:	bf00      	nop
   13070:	000266b0 	.word	0x000266b0
   13074:	00026658 	.word	0x00026658

00013078 <canRxProcessTask::canRxProcessTask(unsigned char)>:
_ZN16canRxProcessTaskC2Eh():
   13078:	b513      	push	{r0, r1, r4, lr}
   1307a:	2200      	movs	r2, #0
   1307c:	460b      	mov	r3, r1
   1307e:	9200      	str	r2, [sp, #0]
   13080:	4905      	ldr	r1, [pc, #20]	; (13098 <canRxProcessTask::canRxProcessTask(unsigned char)+0x20>)
   13082:	f44f 6280 	mov.w	r2, #1024	; 0x400
   13086:	4604      	mov	r4, r0
   13088:	f006 fb12 	bl	196b0 <scheduler_task::scheduler_task(char const*, unsigned long, unsigned char, void*)>
   1308c:	4b03      	ldr	r3, [pc, #12]	; (1309c <canRxProcessTask::canRxProcessTask(unsigned char)+0x24>)
   1308e:	4620      	mov	r0, r4
   13090:	6023      	str	r3, [r4, #0]
   13092:	b002      	add	sp, #8
   13094:	bd10      	pop	{r4, pc}
   13096:	bf00      	nop
   13098:	000266c0 	.word	0x000266c0
   1309c:	00026698 	.word	0x00026698

000130a0 <canRxProcessTask::handle_heartbeat(msg_t)>:
_ZN16canRxProcessTask16handle_heartbeatE5msg_t():
   130a0:	b084      	sub	sp, #16
   130a2:	b51f      	push	{r0, r1, r2, r3, r4, lr}
   130a4:	4c1c      	ldr	r4, [pc, #112]	; (13118 <canRxProcessTask::handle_heartbeat(msg_t)+0x78>)
   130a6:	a807      	add	r0, sp, #28
   130a8:	e880 000e 	stmia.w	r0, {r1, r2, r3}
   130ac:	4620      	mov	r0, r4
   130ae:	f7ff fd69 	bl	12b84 <can_controller::get_rx_count()>
   130b2:	f8ad 0008 	strh.w	r0, [sp, #8]
   130b6:	4620      	mov	r0, r4
   130b8:	f7ff fd66 	bl	12b88 <can_controller::get_rx_bytes()>
   130bc:	f8ad 000a 	strh.w	r0, [sp, #10]
   130c0:	4620      	mov	r0, r4
   130c2:	f7ff fd63 	bl	12b8c <can_controller::get_tx_count()>
   130c6:	f8ad 000c 	strh.w	r0, [sp, #12]
   130ca:	4620      	mov	r0, r4
   130cc:	f7ff fd60 	bl	12b90 <can_controller::get_tx_bytes()>
   130d0:	f8ad 000e 	strh.w	r0, [sp, #14]
   130d4:	203c      	movs	r0, #60	; 0x3c
   130d6:	f008 fef9 	bl	1becc <vTaskDelay>
   130da:	2308      	movs	r3, #8
   130dc:	9300      	str	r3, [sp, #0]
   130de:	4620      	mov	r0, r4
   130e0:	446b      	add	r3, sp
   130e2:	2102      	movs	r1, #2
   130e4:	2206      	movs	r2, #6
   130e6:	f7ff fd65 	bl	12bb4 <can_controller::can_send(controller_id_t, msg_id_t, unsigned char*, unsigned short)>
   130ea:	4b0c      	ldr	r3, [pc, #48]	; (1311c <canRxProcessTask::handle_heartbeat(msg_t)+0x7c>)
   130ec:	2264      	movs	r2, #100	; 0x64
   130ee:	7819      	ldrb	r1, [r3, #0]
   130f0:	3101      	adds	r1, #1
   130f2:	fb91 f0f2 	sdiv	r0, r1, r2
   130f6:	fb02 1210 	mls	r2, r2, r0, r1
   130fa:	701a      	strb	r2, [r3, #0]
   130fc:	4a08      	ldr	r2, [pc, #32]	; (13120 <canRxProcessTask::handle_heartbeat(msg_t)+0x80>)
   130fe:	ab08      	add	r3, sp, #32
   13100:	cb03      	ldmia	r3!, {r0, r1}
   13102:	4b08      	ldr	r3, [pc, #32]	; (13124 <canRxProcessTask::handle_heartbeat(msg_t)+0x84>)
   13104:	6010      	str	r0, [r2, #0]
   13106:	6051      	str	r1, [r2, #4]
   13108:	2001      	movs	r0, #1
   1310a:	2200      	movs	r2, #0
   1310c:	705a      	strb	r2, [r3, #1]
   1310e:	b004      	add	sp, #16
   13110:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   13114:	b004      	add	sp, #16
   13116:	4770      	bx	lr
   13118:	2007c746 	.word	0x2007c746
   1311c:	2007c754 	.word	0x2007c754
   13120:	2007c756 	.word	0x2007c756
   13124:	2007c798 	.word	0x2007c798

00013128 <canRxProcessTask::handle_geo_location_data(msg_t)>:
_ZN16canRxProcessTask24handle_geo_location_dataE5msg_t():
   13128:	b084      	sub	sp, #16
   1312a:	b530      	push	{r4, r5, lr}
   1312c:	a804      	add	r0, sp, #16
   1312e:	e880 000e 	stmia.w	r0, {r1, r2, r3}
   13132:	4b06      	ldr	r3, [pc, #24]	; (1314c <canRxProcessTask::handle_geo_location_data(msg_t)+0x24>)
   13134:	2501      	movs	r5, #1
   13136:	4c06      	ldr	r4, [pc, #24]	; (13150 <canRxProcessTask::handle_geo_location_data(msg_t)+0x28>)
   13138:	715d      	strb	r5, [r3, #5]
   1313a:	ab05      	add	r3, sp, #20
   1313c:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
   1313e:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
   13142:	4628      	mov	r0, r5
   13144:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
   13148:	b004      	add	sp, #16
   1314a:	4770      	bx	lr
   1314c:	2007c763 	.word	0x2007c763
   13150:	2007c784 	.word	0x2007c784

00013154 <canRxProcessTask::handle_checkpoint_data(msg_t)>:
_ZN16canRxProcessTask22handle_checkpoint_dataE5msg_t():
   13154:	b084      	sub	sp, #16
   13156:	b538      	push	{r3, r4, r5, lr}
   13158:	a805      	add	r0, sp, #20
   1315a:	e880 000e 	stmia.w	r0, {r1, r2, r3}
   1315e:	4b0b      	ldr	r3, [pc, #44]	; (1318c <canRxProcessTask::handle_checkpoint_data(msg_t)+0x38>)
   13160:	2501      	movs	r5, #1
   13162:	4c0b      	ldr	r4, [pc, #44]	; (13190 <canRxProcessTask::handle_checkpoint_data(msg_t)+0x3c>)
   13164:	719d      	strb	r5, [r3, #6]
   13166:	ab06      	add	r3, sp, #24
   13168:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
   1316c:	e884 0007 	stmia.w	r4, {r0, r1, r2}
   13170:	4808      	ldr	r0, [pc, #32]	; (13194 <canRxProcessTask::handle_checkpoint_data(msg_t)+0x40>)
   13172:	f00c fa7b 	bl	1f66c <iprintf>
   13176:	7ae1      	ldrb	r1, [r4, #11]
   13178:	4807      	ldr	r0, [pc, #28]	; (13198 <canRxProcessTask::handle_checkpoint_data(msg_t)+0x44>)
   1317a:	4029      	ands	r1, r5
   1317c:	f00c fa76 	bl	1f66c <iprintf>
   13180:	4628      	mov	r0, r5
   13182:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   13186:	b004      	add	sp, #16
   13188:	4770      	bx	lr
   1318a:	bf00      	nop
   1318c:	2007c763 	.word	0x2007c763
   13190:	2007c7b4 	.word	0x2007c7b4
   13194:	000266d1 	.word	0x000266d1
   13198:	000266e6 	.word	0x000266e6

0001319c <canRxProcessTask::handle_heartbeat_ack(msg_t)>:
_ZN16canRxProcessTask20handle_heartbeat_ackE5msg_t():
   1319c:	b084      	sub	sp, #16
   1319e:	b510      	push	{r4, lr}
   131a0:	a803      	add	r0, sp, #12
   131a2:	e880 000e 	stmia.w	r0, {r1, r2, r3}
   131a6:	f89d 200c 	ldrb.w	r2, [sp, #12]
   131aa:	4b18      	ldr	r3, [pc, #96]	; (1320c <canRxProcessTask::handle_heartbeat_ack(msg_t)+0x70>)
   131ac:	3a01      	subs	r2, #1
   131ae:	2a04      	cmp	r2, #4
   131b0:	d823      	bhi.n	131fa <canRxProcessTask::handle_heartbeat_ack(msg_t)+0x5e>
   131b2:	e8df f002 	tbb	[pc, r2]
   131b6:	2203      	.short	0x2203
   131b8:	130b      	.short	0x130b
   131ba:	1b          	.byte	0x1b
   131bb:	00          	.byte	0x00
   131bc:	4c14      	ldr	r4, [pc, #80]	; (13210 <canRxProcessTask::handle_heartbeat_ack(msg_t)+0x74>)
   131be:	aa04      	add	r2, sp, #16
   131c0:	ca03      	ldmia	r2!, {r0, r1}
   131c2:	2200      	movs	r2, #0
   131c4:	6020      	str	r0, [r4, #0]
   131c6:	6061      	str	r1, [r4, #4]
   131c8:	701a      	strb	r2, [r3, #0]
   131ca:	e016      	b.n	131fa <canRxProcessTask::handle_heartbeat_ack(msg_t)+0x5e>
   131cc:	4c11      	ldr	r4, [pc, #68]	; (13214 <canRxProcessTask::handle_heartbeat_ack(msg_t)+0x78>)
   131ce:	aa04      	add	r2, sp, #16
   131d0:	ca03      	ldmia	r2!, {r0, r1}
   131d2:	2200      	movs	r2, #0
   131d4:	6020      	str	r0, [r4, #0]
   131d6:	6061      	str	r1, [r4, #4]
   131d8:	709a      	strb	r2, [r3, #2]
   131da:	e00e      	b.n	131fa <canRxProcessTask::handle_heartbeat_ack(msg_t)+0x5e>
   131dc:	4c0e      	ldr	r4, [pc, #56]	; (13218 <canRxProcessTask::handle_heartbeat_ack(msg_t)+0x7c>)
   131de:	aa04      	add	r2, sp, #16
   131e0:	ca03      	ldmia	r2!, {r0, r1}
   131e2:	2200      	movs	r2, #0
   131e4:	6020      	str	r0, [r4, #0]
   131e6:	6061      	str	r1, [r4, #4]
   131e8:	70da      	strb	r2, [r3, #3]
   131ea:	e006      	b.n	131fa <canRxProcessTask::handle_heartbeat_ack(msg_t)+0x5e>
   131ec:	4c0b      	ldr	r4, [pc, #44]	; (1321c <canRxProcessTask::handle_heartbeat_ack(msg_t)+0x80>)
   131ee:	aa04      	add	r2, sp, #16
   131f0:	ca03      	ldmia	r2!, {r0, r1}
   131f2:	2200      	movs	r2, #0
   131f4:	6020      	str	r0, [r4, #0]
   131f6:	6061      	str	r1, [r4, #4]
   131f8:	711a      	strb	r2, [r3, #4]
   131fa:	2200      	movs	r2, #0
   131fc:	715a      	strb	r2, [r3, #5]
   131fe:	4b08      	ldr	r3, [pc, #32]	; (13220 <canRxProcessTask::handle_heartbeat_ack(msg_t)+0x84>)
   13200:	2201      	movs	r2, #1
   13202:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   13206:	705a      	strb	r2, [r3, #1]
   13208:	b004      	add	sp, #16
   1320a:	4770      	bx	lr
   1320c:	2007c798 	.word	0x2007c798
   13210:	2007c7c2 	.word	0x2007c7c2
   13214:	2007c7a4 	.word	0x2007c7a4
   13218:	2007c7cc 	.word	0x2007c7cc
   1321c:	2007c76e 	.word	0x2007c76e
   13220:	2007c763 	.word	0x2007c763

00013224 <debugTask::run(void*)>:
_ZN9debugTask3runEPv():
   13224:	b538      	push	{r3, r4, r5, lr}
   13226:	f890 3031 	ldrb.w	r3, [r0, #49]	; 0x31
   1322a:	4604      	mov	r4, r0
   1322c:	2b06      	cmp	r3, #6
   1322e:	d108      	bne.n	13242 <debugTask::run(void*)+0x1e>
   13230:	f7fe fd04 	bl	11c3c <SingletonTemplate<LED_Display>::getInstance()>
   13234:	212d      	movs	r1, #45	; 0x2d
   13236:	f002 faef 	bl	15818 <LED_Display::setLeftDigit(char)>
   1323a:	f7fe fcff 	bl	11c3c <SingletonTemplate<LED_Display>::getInstance()>
   1323e:	212d      	movs	r1, #45	; 0x2d
   13240:	e046      	b.n	132d0 <debugTask::run(void*)+0xac>
   13242:	eb00 1203 	add.w	r2, r0, r3, lsl #4
   13246:	f102 0138 	add.w	r1, r2, #56	; 0x38
   1324a:	6888      	ldr	r0, [r1, #8]
   1324c:	b1d0      	cbz	r0, 13284 <debugTask::run(void*)+0x60>
   1324e:	7805      	ldrb	r5, [r0, #0]
   13250:	f7fe fcf4 	bl	11c3c <SingletonTemplate<LED_Display>::getInstance()>
   13254:	092d      	lsrs	r5, r5, #4
   13256:	2d09      	cmp	r5, #9
   13258:	bf94      	ite	ls
   1325a:	b2e9      	uxtbls	r1, r5
   1325c:	f105 0114 	addhi.w	r1, r5, #20
   13260:	f002 fada 	bl	15818 <LED_Display::setLeftDigit(char)>
   13264:	f894 3031 	ldrb.w	r3, [r4, #49]	; 0x31
   13268:	eb04 1303 	add.w	r3, r4, r3, lsl #4
   1326c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
   1326e:	781d      	ldrb	r5, [r3, #0]
   13270:	f7fe fce4 	bl	11c3c <SingletonTemplate<LED_Display>::getInstance()>
   13274:	f005 050f 	and.w	r5, r5, #15
   13278:	2d09      	cmp	r5, #9
   1327a:	bf94      	ite	ls
   1327c:	b2e9      	uxtbls	r1, r5
   1327e:	f105 0114 	addhi.w	r1, r5, #20
   13282:	e025      	b.n	132d0 <debugTask::run(void*)+0xac>
   13284:	6849      	ldr	r1, [r1, #4]
   13286:	b159      	cbz	r1, 132a0 <debugTask::run(void*)+0x7c>
   13288:	f7fe fcd8 	bl	11c3c <SingletonTemplate<LED_Display>::getInstance()>
   1328c:	f894 3031 	ldrb.w	r3, [r4, #49]	; 0x31
   13290:	eb04 1303 	add.w	r3, r4, r3, lsl #4
   13294:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
   13296:	f993 1000 	ldrsb.w	r1, [r3]
   1329a:	f002 faf2 	bl	15882 <LED_Display::setNumber(char)>
   1329e:	e023      	b.n	132e8 <debugTask::run(void*)+0xc4>
   132a0:	6b51      	ldr	r1, [r2, #52]	; 0x34
   132a2:	b1c1      	cbz	r1, 132d6 <debugTask::run(void*)+0xb2>
   132a4:	6b92      	ldr	r2, [r2, #56]	; 0x38
   132a6:	b1b2      	cbz	r2, 132d6 <debugTask::run(void*)+0xb2>
   132a8:	f7fe fcc8 	bl	11c3c <SingletonTemplate<LED_Display>::getInstance()>
   132ac:	f894 3031 	ldrb.w	r3, [r4, #49]	; 0x31
   132b0:	eb04 1303 	add.w	r3, r4, r3, lsl #4
   132b4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
   132b6:	f993 1000 	ldrsb.w	r1, [r3]
   132ba:	f002 faad 	bl	15818 <LED_Display::setLeftDigit(char)>
   132be:	f7fe fcbd 	bl	11c3c <SingletonTemplate<LED_Display>::getInstance()>
   132c2:	f894 3031 	ldrb.w	r3, [r4, #49]	; 0x31
   132c6:	eb04 1303 	add.w	r3, r4, r3, lsl #4
   132ca:	6b9b      	ldr	r3, [r3, #56]	; 0x38
   132cc:	f993 1000 	ldrsb.w	r1, [r3]
   132d0:	f002 faae 	bl	15830 <LED_Display::setRightDigit(char)>
   132d4:	e008      	b.n	132e8 <debugTask::run(void*)+0xc4>
   132d6:	3301      	adds	r3, #1
   132d8:	2207      	movs	r2, #7
   132da:	fb93 f2f2 	sdiv	r2, r3, r2
   132de:	ebc2 02c2 	rsb	r2, r2, r2, lsl #3
   132e2:	1a9b      	subs	r3, r3, r2
   132e4:	f884 3031 	strb.w	r3, [r4, #49]	; 0x31
   132e8:	4d0f      	ldr	r5, [pc, #60]	; (13328 <debugTask::run(void*)+0x104>)
   132ea:	682b      	ldr	r3, [r5, #0]
   132ec:	b91b      	cbnz	r3, 132f6 <debugTask::run(void*)+0xd2>
   132ee:	2001      	movs	r0, #1
   132f0:	f7fc ffbe 	bl	10270 <operator new(unsigned int)>
   132f4:	6028      	str	r0, [r5, #0]
   132f6:	6828      	ldr	r0, [r5, #0]
   132f8:	f002 fb28 	bl	1594c <Switches::getSwitchValues()>
   132fc:	f000 000f 	and.w	r0, r0, #15
   13300:	2801      	cmp	r0, #1
   13302:	d10e      	bne.n	13322 <debugTask::run(void*)+0xfe>
   13304:	f894 3031 	ldrb.w	r3, [r4, #49]	; 0x31
   13308:	2207      	movs	r2, #7
   1330a:	3301      	adds	r3, #1
   1330c:	fb93 f2f2 	sdiv	r2, r3, r2
   13310:	ebc2 02c2 	rsb	r2, r2, r2, lsl #3
   13314:	1a9b      	subs	r3, r3, r2
   13316:	f884 3031 	strb.w	r3, [r4, #49]	; 0x31
   1331a:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
   1331e:	f008 fdd5 	bl	1becc <vTaskDelay>
   13322:	2001      	movs	r0, #1
   13324:	bd38      	pop	{r3, r4, r5, pc}
   13326:	bf00      	nop
   13328:	2007c230 	.word	0x2007c230

0001332c <controllerInit()>:
_Z14controllerInitv():
   1332c:	b573      	push	{r0, r1, r4, r5, r6, lr}
   1332e:	4b2e      	ldr	r3, [pc, #184]	; (133e8 <controllerInit()+0xbc>)
   13330:	781a      	ldrb	r2, [r3, #0]
   13332:	461e      	mov	r6, r3
   13334:	b12a      	cbz	r2, 13342 <controllerInit()+0x16>
   13336:	f7fe fc93 	bl	11c60 <SingletonTemplate<LED>::getInstance()>
   1333a:	2101      	movs	r1, #1
   1333c:	f002 fae2 	bl	15904 <LED::on(int)>
   13340:	e004      	b.n	1334c <controllerInit()+0x20>
   13342:	f7fe fc8d 	bl	11c60 <SingletonTemplate<LED>::getInstance()>
   13346:	2101      	movs	r1, #1
   13348:	f002 fae7 	bl	1591a <LED::off(int)>
   1334c:	2114      	movs	r1, #20
   1334e:	4827      	ldr	r0, [pc, #156]	; (133ec <controllerInit()+0xc0>)
   13350:	f7ff fe14 	bl	12f7c <can_controller::processBootSequence(unsigned char)>
   13354:	2034      	movs	r0, #52	; 0x34
   13356:	f7fc ff8b 	bl	10270 <operator new(unsigned int)>
   1335a:	2101      	movs	r1, #1
   1335c:	4604      	mov	r4, r0
   1335e:	f000 fadb 	bl	13918 <GLCD::GLCD(unsigned char)>
   13362:	4620      	mov	r0, r4
   13364:	f006 f972 	bl	1964c <scheduler_add_task(scheduler_task*)>
   13368:	2034      	movs	r0, #52	; 0x34
   1336a:	f7fc ff81 	bl	10270 <operator new(unsigned int)>
   1336e:	2101      	movs	r1, #1
   13370:	4604      	mov	r4, r0
   13372:	f000 fc3b 	bl	13bec <LIGHT::LIGHT(unsigned char)>
   13376:	4620      	mov	r0, r4
   13378:	f006 f968 	bl	1964c <scheduler_add_task(scheduler_task*)>
   1337c:	2034      	movs	r0, #52	; 0x34
   1337e:	f7fc ff77 	bl	10270 <operator new(unsigned int)>
   13382:	2101      	movs	r1, #1
   13384:	4604      	mov	r4, r0
   13386:	f000 fd35 	bl	13df4 <SWITCH::SWITCH(unsigned char)>
   1338a:	4620      	mov	r0, r4
   1338c:	f006 f95e 	bl	1964c <scheduler_add_task(scheduler_task*)>
   13390:	2094      	movs	r0, #148	; 0x94
   13392:	f7fc ff6d 	bl	10270 <operator new(unsigned int)>
   13396:	2500      	movs	r5, #0
   13398:	4915      	ldr	r1, [pc, #84]	; (133f0 <controllerInit()+0xc4>)
   1339a:	2301      	movs	r3, #1
   1339c:	9500      	str	r5, [sp, #0]
   1339e:	f44f 6280 	mov.w	r2, #1024	; 0x400
   133a2:	4604      	mov	r4, r0
   133a4:	f006 f984 	bl	196b0 <scheduler_task::scheduler_task(char const*, unsigned long, unsigned char, void*)>
   133a8:	4b12      	ldr	r3, [pc, #72]	; (133f4 <controllerInit()+0xc8>)
   133aa:	4629      	mov	r1, r5
   133ac:	6023      	str	r3, [r4, #0]
   133ae:	4623      	mov	r3, r4
   133b0:	3110      	adds	r1, #16
   133b2:	2200      	movs	r2, #0
   133b4:	2960      	cmp	r1, #96	; 0x60
   133b6:	635a      	str	r2, [r3, #52]	; 0x34
   133b8:	639a      	str	r2, [r3, #56]	; 0x38
   133ba:	63da      	str	r2, [r3, #60]	; 0x3c
   133bc:	641a      	str	r2, [r3, #64]	; 0x40
   133be:	f103 0310 	add.w	r3, r3, #16
   133c2:	d1f5      	bne.n	133b0 <controllerInit()+0x84>
   133c4:	2364      	movs	r3, #100	; 0x64
   133c6:	61e3      	str	r3, [r4, #28]
   133c8:	f884 2031 	strb.w	r2, [r4, #49]	; 0x31
   133cc:	4620      	mov	r0, r4
   133ce:	f006 f93d 	bl	1964c <scheduler_add_task(scheduler_task*)>
   133d2:	4b09      	ldr	r3, [pc, #36]	; (133f8 <controllerInit()+0xcc>)
   133d4:	f8c4 6090 	str.w	r6, [r4, #144]	; 0x90
   133d8:	6363      	str	r3, [r4, #52]	; 0x34
   133da:	3301      	adds	r3, #1
   133dc:	63a3      	str	r3, [r4, #56]	; 0x38
   133de:	4b07      	ldr	r3, [pc, #28]	; (133fc <controllerInit()+0xd0>)
   133e0:	67e3      	str	r3, [r4, #124]	; 0x7c
   133e2:	b002      	add	sp, #8
   133e4:	bd70      	pop	{r4, r5, r6, pc}
   133e6:	bf00      	nop
   133e8:	2007c644 	.word	0x2007c644
   133ec:	2007c746 	.word	0x2007c746
   133f0:	000266f5 	.word	0x000266f5
   133f4:	00026638 	.word	0x00026638
   133f8:	2007c760 	.word	0x2007c760
   133fc:	2007c754 	.word	0x2007c754

00013400 <canRxBufferTask::run(void*)>:
_ZN15canRxBufferTask3runEPv():
   13400:	b500      	push	{lr}
   13402:	2320      	movs	r3, #32
   13404:	b08d      	sub	sp, #52	; 0x34
   13406:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
   1340a:	ab0b      	add	r3, sp, #44	; 0x2c
   1340c:	9300      	str	r3, [sp, #0]
   1340e:	4817      	ldr	r0, [pc, #92]	; (1346c <canRxBufferTask::run(void*)+0x6c>)
   13410:	ab03      	add	r3, sp, #12
   13412:	a902      	add	r1, sp, #8
   13414:	f10d 0209 	add.w	r2, sp, #9
   13418:	f7ff fccc 	bl	12db4 <can_controller::can_recv(controller_id_t*, msg_id_t*, unsigned char*, unsigned short*)>
   1341c:	f89d 3009 	ldrb.w	r3, [sp, #9]
   13420:	2b01      	cmp	r3, #1
   13422:	d102      	bne.n	1342a <canRxBufferTask::run(void*)+0x2a>
   13424:	4811      	ldr	r0, [pc, #68]	; (1346c <canRxBufferTask::run(void*)+0x6c>)
   13426:	f7ff fbb5 	bl	12b94 <can_controller::processReset()>
   1342a:	4b11      	ldr	r3, [pc, #68]	; (13470 <canRxBufferTask::run(void*)+0x70>)
   1342c:	2200      	movs	r2, #0
   1342e:	6818      	ldr	r0, [r3, #0]
   13430:	a902      	add	r1, sp, #8
   13432:	4613      	mov	r3, r2
   13434:	f008 f8cc 	bl	1b5d0 <xQueueGenericSend>
   13438:	b9a0      	cbnz	r0, 13464 <canRxBufferTask::run(void*)+0x64>
   1343a:	4b0e      	ldr	r3, [pc, #56]	; (13474 <canRxBufferTask::run(void*)+0x74>)
   1343c:	781a      	ldrb	r2, [r3, #0]
   1343e:	f042 0210 	orr.w	r2, r2, #16
   13442:	701a      	strb	r2, [r3, #0]
   13444:	f7fe fc0c 	bl	11c60 <SingletonTemplate<LED>::getInstance()>
   13448:	2101      	movs	r1, #1
   1344a:	f002 fa5b 	bl	15904 <LED::on(int)>
   1344e:	4b0a      	ldr	r3, [pc, #40]	; (13478 <canRxBufferTask::run(void*)+0x78>)
   13450:	2003      	movs	r0, #3
   13452:	9300      	str	r3, [sp, #0]
   13454:	4909      	ldr	r1, [pc, #36]	; (1347c <canRxBufferTask::run(void*)+0x7c>)
   13456:	4a0a      	ldr	r2, [pc, #40]	; (13480 <canRxBufferTask::run(void*)+0x80>)
   13458:	23d8      	movs	r3, #216	; 0xd8
   1345a:	f005 fe1f 	bl	1909c <logger_log>
   1345e:	4809      	ldr	r0, [pc, #36]	; (13484 <canRxBufferTask::run(void*)+0x84>)
   13460:	f00c f97c 	bl	1f75c <puts>
   13464:	2001      	movs	r0, #1
   13466:	b00d      	add	sp, #52	; 0x34
   13468:	f85d fb04 	ldr.w	pc, [sp], #4
   1346c:	2007c746 	.word	0x2007c746
   13470:	2007c750 	.word	0x2007c750
   13474:	2007c644 	.word	0x2007c644
   13478:	00026723 	.word	0x00026723
   1347c:	000266ff 	.word	0x000266ff
   13480:	00026742 	.word	0x00026742
   13484:	00026733 	.word	0x00026733

00013488 <canRxProcessTask::run(void*)>:
_ZN16canRxProcessTask3runEPv():
   13488:	b5f0      	push	{r4, r5, r6, r7, lr}
   1348a:	4b66      	ldr	r3, [pc, #408]	; (13624 <canRxProcessTask::run(void*)+0x19c>)
   1348c:	b0c5      	sub	sp, #276	; 0x114
   1348e:	ac08      	add	r4, sp, #32
   13490:	4607      	mov	r7, r0
   13492:	4621      	mov	r1, r4
   13494:	6818      	ldr	r0, [r3, #0]
   13496:	f04f 32ff 	mov.w	r2, #4294967295
   1349a:	2300      	movs	r3, #0
   1349c:	f008 f968 	bl	1b770 <xQueueGenericReceive>
   134a0:	2800      	cmp	r0, #0
   134a2:	f000 80bb 	beq.w	1361c <canRxProcessTask::run(void*)+0x194>
   134a6:	4b60      	ldr	r3, [pc, #384]	; (13628 <canRxProcessTask::run(void*)+0x1a0>)
   134a8:	781a      	ldrb	r2, [r3, #0]
   134aa:	06d1      	lsls	r1, r2, #27
   134ac:	d50e      	bpl.n	134cc <canRxProcessTask::run(void*)+0x44>
   134ae:	f002 02ef 	and.w	r2, r2, #239	; 0xef
   134b2:	701a      	strb	r2, [r3, #0]
   134b4:	b12a      	cbz	r2, 134c2 <canRxProcessTask::run(void*)+0x3a>
   134b6:	f7fe fbd3 	bl	11c60 <SingletonTemplate<LED>::getInstance()>
   134ba:	2101      	movs	r1, #1
   134bc:	f002 fa22 	bl	15904 <LED::on(int)>
   134c0:	e004      	b.n	134cc <canRxProcessTask::run(void*)+0x44>
   134c2:	f7fe fbcd 	bl	11c60 <SingletonTemplate<LED>::getInstance()>
   134c6:	2101      	movs	r1, #1
   134c8:	f002 fa27 	bl	1591a <LED::off(int)>
   134cc:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
   134d0:	3b05      	subs	r3, #5
   134d2:	2b0d      	cmp	r3, #13
   134d4:	f200 80a2 	bhi.w	1361c <canRxProcessTask::run(void*)+0x194>
   134d8:	e8df f003 	tbb	[pc, r3]
   134dc:	767c1507 	.word	0x767c1507
   134e0:	2382a0a0 	.word	0x2382a0a0
   134e4:	93a04361 	.word	0x93a04361
   134e8:	5332      	.short	0x5332
   134ea:	466d      	mov	r5, sp
   134ec:	ae0b      	add	r6, sp, #44	; 0x2c
   134ee:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
   134f0:	c50f      	stmia	r5!, {r0, r1, r2, r3}
   134f2:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
   134f6:	e885 0007 	stmia.w	r5, {r0, r1, r2}
   134fa:	4638      	mov	r0, r7
   134fc:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
   13500:	f7ff fdce 	bl	130a0 <canRxProcessTask::handle_heartbeat(msg_t)>
   13504:	e08a      	b.n	1361c <canRxProcessTask::run(void*)+0x194>
   13506:	466d      	mov	r5, sp
   13508:	ae0b      	add	r6, sp, #44	; 0x2c
   1350a:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
   1350c:	c50f      	stmia	r5!, {r0, r1, r2, r3}
   1350e:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
   13512:	e885 0007 	stmia.w	r5, {r0, r1, r2}
   13516:	4638      	mov	r0, r7
   13518:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
   1351c:	f7ff fe3e 	bl	1319c <canRxProcessTask::handle_heartbeat_ack(msg_t)>
   13520:	e07c      	b.n	1361c <canRxProcessTask::run(void*)+0x194>
   13522:	ad12      	add	r5, sp, #72	; 0x48
   13524:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
   13526:	c50f      	stmia	r5!, {r0, r1, r2, r3}
   13528:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
   1352a:	c50f      	stmia	r5!, {r0, r1, r2, r3}
   1352c:	e894 0003 	ldmia.w	r4, {r0, r1}
   13530:	4b3e      	ldr	r3, [pc, #248]	; (1362c <canRxProcessTask::run(void*)+0x1a4>)
   13532:	2201      	movs	r2, #1
   13534:	e885 0003 	stmia.w	r5, {r0, r1}
   13538:	709a      	strb	r2, [r3, #2]
   1353a:	9813      	ldr	r0, [sp, #76]	; 0x4c
   1353c:	4b3c      	ldr	r3, [pc, #240]	; (13630 <canRxProcessTask::run(void*)+0x1a8>)
   1353e:	e01e      	b.n	1357e <canRxProcessTask::run(void*)+0xf6>
   13540:	ad1c      	add	r5, sp, #112	; 0x70
   13542:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
   13544:	c50f      	stmia	r5!, {r0, r1, r2, r3}
   13546:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
   13548:	c50f      	stmia	r5!, {r0, r1, r2, r3}
   1354a:	e894 0003 	ldmia.w	r4, {r0, r1}
   1354e:	4b37      	ldr	r3, [pc, #220]	; (1362c <canRxProcessTask::run(void*)+0x1a4>)
   13550:	2201      	movs	r2, #1
   13552:	70da      	strb	r2, [r3, #3]
   13554:	f8bd 2074 	ldrh.w	r2, [sp, #116]	; 0x74
   13558:	4b36      	ldr	r3, [pc, #216]	; (13634 <canRxProcessTask::run(void*)+0x1ac>)
   1355a:	e885 0003 	stmia.w	r5, {r0, r1}
   1355e:	801a      	strh	r2, [r3, #0]
   13560:	e05c      	b.n	1361c <canRxProcessTask::run(void*)+0x194>
   13562:	ad26      	add	r5, sp, #152	; 0x98
   13564:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
   13566:	c50f      	stmia	r5!, {r0, r1, r2, r3}
   13568:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
   1356a:	c50f      	stmia	r5!, {r0, r1, r2, r3}
   1356c:	e894 0003 	ldmia.w	r4, {r0, r1}
   13570:	4b2e      	ldr	r3, [pc, #184]	; (1362c <canRxProcessTask::run(void*)+0x1a4>)
   13572:	2201      	movs	r2, #1
   13574:	e885 0003 	stmia.w	r5, {r0, r1}
   13578:	711a      	strb	r2, [r3, #4]
   1357a:	9827      	ldr	r0, [sp, #156]	; 0x9c
   1357c:	4b2e      	ldr	r3, [pc, #184]	; (13638 <canRxProcessTask::run(void*)+0x1b0>)
   1357e:	6018      	str	r0, [r3, #0]
   13580:	e04c      	b.n	1361c <canRxProcessTask::run(void*)+0x194>
   13582:	466d      	mov	r5, sp
   13584:	ae0b      	add	r6, sp, #44	; 0x2c
   13586:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
   13588:	c50f      	stmia	r5!, {r0, r1, r2, r3}
   1358a:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
   1358e:	e885 0007 	stmia.w	r5, {r0, r1, r2}
   13592:	4638      	mov	r0, r7
   13594:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
   13598:	f7ff fdc6 	bl	13128 <canRxProcessTask::handle_geo_location_data(msg_t)>
   1359c:	e03e      	b.n	1361c <canRxProcessTask::run(void*)+0x194>
   1359e:	ad30      	add	r5, sp, #192	; 0xc0
   135a0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
   135a2:	c50f      	stmia	r5!, {r0, r1, r2, r3}
   135a4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
   135a6:	c50f      	stmia	r5!, {r0, r1, r2, r3}
   135a8:	e894 0003 	ldmia.w	r4, {r0, r1}
   135ac:	4b1f      	ldr	r3, [pc, #124]	; (1362c <canRxProcessTask::run(void*)+0x1a4>)
   135ae:	2201      	movs	r2, #1
   135b0:	71da      	strb	r2, [r3, #7]
   135b2:	721a      	strb	r2, [r3, #8]
   135b4:	ab44      	add	r3, sp, #272	; 0x110
   135b6:	e885 0003 	stmia.w	r5, {r0, r1}
   135ba:	f833 1d4c 	ldrh.w	r1, [r3, #-76]!
   135be:	4a1f      	ldr	r2, [pc, #124]	; (1363c <canRxProcessTask::run(void*)+0x1b4>)
   135c0:	789b      	ldrb	r3, [r3, #2]
   135c2:	8011      	strh	r1, [r2, #0]
   135c4:	7093      	strb	r3, [r2, #2]
   135c6:	e029      	b.n	1361c <canRxProcessTask::run(void*)+0x194>
   135c8:	4a1d      	ldr	r2, [pc, #116]	; (13640 <canRxProcessTask::run(void*)+0x1b8>)
   135ca:	2301      	movs	r3, #1
   135cc:	7013      	strb	r3, [r2, #0]
   135ce:	4a1d      	ldr	r2, [pc, #116]	; (13644 <canRxProcessTask::run(void*)+0x1bc>)
   135d0:	7013      	strb	r3, [r2, #0]
   135d2:	e023      	b.n	1361c <canRxProcessTask::run(void*)+0x194>
   135d4:	4b1a      	ldr	r3, [pc, #104]	; (13640 <canRxProcessTask::run(void*)+0x1b8>)
   135d6:	2201      	movs	r2, #1
   135d8:	701a      	strb	r2, [r3, #0]
   135da:	2200      	movs	r2, #0
   135dc:	4b19      	ldr	r3, [pc, #100]	; (13644 <canRxProcessTask::run(void*)+0x1bc>)
   135de:	e00e      	b.n	135fe <canRxProcessTask::run(void*)+0x176>
   135e0:	ad3a      	add	r5, sp, #232	; 0xe8
   135e2:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
   135e4:	c50f      	stmia	r5!, {r0, r1, r2, r3}
   135e6:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
   135e8:	c50f      	stmia	r5!, {r0, r1, r2, r3}
   135ea:	e894 0003 	ldmia.w	r4, {r0, r1}
   135ee:	4b0f      	ldr	r3, [pc, #60]	; (1362c <canRxProcessTask::run(void*)+0x1a4>)
   135f0:	2201      	movs	r2, #1
   135f2:	e885 0003 	stmia.w	r5, {r0, r1}
   135f6:	729a      	strb	r2, [r3, #10]
   135f8:	f89d 20ec 	ldrb.w	r2, [sp, #236]	; 0xec
   135fc:	4b12      	ldr	r3, [pc, #72]	; (13648 <canRxProcessTask::run(void*)+0x1c0>)
   135fe:	701a      	strb	r2, [r3, #0]
   13600:	e00c      	b.n	1361c <canRxProcessTask::run(void*)+0x194>
   13602:	466d      	mov	r5, sp
   13604:	ae0b      	add	r6, sp, #44	; 0x2c
   13606:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
   13608:	c50f      	stmia	r5!, {r0, r1, r2, r3}
   1360a:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
   1360e:	e885 0007 	stmia.w	r5, {r0, r1, r2}
   13612:	4638      	mov	r0, r7
   13614:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
   13618:	f7ff fd9c 	bl	13154 <canRxProcessTask::handle_checkpoint_data(msg_t)>
   1361c:	2001      	movs	r0, #1
   1361e:	b045      	add	sp, #276	; 0x114
   13620:	bdf0      	pop	{r4, r5, r6, r7, pc}
   13622:	bf00      	nop
   13624:	2007c750 	.word	0x2007c750
   13628:	2007c644 	.word	0x2007c644
   1362c:	2007c763 	.word	0x2007c763
   13630:	2007c77c 	.word	0x2007c77c
   13634:	2007c79e 	.word	0x2007c79e
   13638:	2007c75e 	.word	0x2007c75e
   1363c:	2007c794 	.word	0x2007c794
   13640:	2007c782 	.word	0x2007c782
   13644:	2007c7d5 	.word	0x2007c7d5
   13648:	2007c776 	.word	0x2007c776

0001364c <_GLOBAL__sub_I_controller>:
_GLOBAL__sub_I_controller():
   1364c:	b508      	push	{r3, lr}
   1364e:	2106      	movs	r1, #6
   13650:	2312      	movs	r3, #18
   13652:	4a06      	ldr	r2, [pc, #24]	; (1366c <_GLOBAL__sub_I_controller+0x20>)
   13654:	4806      	ldr	r0, [pc, #24]	; (13670 <_GLOBAL__sub_I_controller+0x24>)
   13656:	f7ff fa84 	bl	12b62 <can_controller::can_controller(controller_id_t, can_msg_id_t*, unsigned int)>
   1365a:	2020      	movs	r0, #32
   1365c:	2128      	movs	r1, #40	; 0x28
   1365e:	2200      	movs	r2, #0
   13660:	f007 ff85 	bl	1b56e <xQueueGenericCreate>
   13664:	4b03      	ldr	r3, [pc, #12]	; (13674 <_GLOBAL__sub_I_controller+0x28>)
   13666:	6018      	str	r0, [r3, #0]
   13668:	bd08      	pop	{r3, pc}
   1366a:	bf00      	nop
   1366c:	2007c000 	.word	0x2007c000
   13670:	2007c746 	.word	0x2007c746
   13674:	2007c750 	.word	0x2007c750

00013678 <SWITCH::run(void*)>:
_ZN6SWITCH3runEPv():
   13678:	2001      	movs	r0, #1
   1367a:	4770      	bx	lr

0001367c <glcd_con()>:
_Z8glcd_conv():
   1367c:	4b04      	ldr	r3, [pc, #16]	; (13690 <glcd_con()+0x14>)
   1367e:	2201      	movs	r2, #1
   13680:	701a      	strb	r2, [r3, #0]
   13682:	4b04      	ldr	r3, [pc, #16]	; (13694 <glcd_con()+0x18>)
   13684:	7819      	ldrb	r1, [r3, #0]
   13686:	b101      	cbz	r1, 1368a <glcd_con()+0xe>
   13688:	2200      	movs	r2, #0
   1368a:	701a      	strb	r2, [r3, #0]
   1368c:	4770      	bx	lr
   1368e:	bf00      	nop
   13690:	2007c7a2 	.word	0x2007c7a2
   13694:	2007c024 	.word	0x2007c024

00013698 <SWITCH::~SWITCH()>:
_ZN6SWITCHD2Ev():
   13698:	4b01      	ldr	r3, [pc, #4]	; (136a0 <SWITCH::~SWITCH()+0x8>)
   1369a:	6003      	str	r3, [r0, #0]
   1369c:	4770      	bx	lr
   1369e:	bf00      	nop
   136a0:	00025de0 	.word	0x00025de0

000136a4 <LIGHT::~LIGHT()>:
_ZN5LIGHTD1Ev():
   136a4:	4b01      	ldr	r3, [pc, #4]	; (136ac <LIGHT::~LIGHT()+0x8>)
   136a6:	6003      	str	r3, [r0, #0]
   136a8:	4770      	bx	lr
   136aa:	bf00      	nop
   136ac:	00025de0 	.word	0x00025de0

000136b0 <GLCD::~GLCD()>:
_ZN4GLCDD2Ev():
   136b0:	4b01      	ldr	r3, [pc, #4]	; (136b8 <GLCD::~GLCD()+0x8>)
   136b2:	6003      	str	r3, [r0, #0]
   136b4:	4770      	bx	lr
   136b6:	bf00      	nop
   136b8:	00025de0 	.word	0x00025de0

000136bc <SWITCH::~SWITCH()>:
_ZN6SWITCHD0Ev():
   136bc:	b510      	push	{r4, lr}
   136be:	4b03      	ldr	r3, [pc, #12]	; (136cc <SWITCH::~SWITCH()+0x10>)
   136c0:	4604      	mov	r4, r0
   136c2:	6003      	str	r3, [r0, #0]
   136c4:	f7fc fdd6 	bl	10274 <operator delete(void*)>
   136c8:	4620      	mov	r0, r4
   136ca:	bd10      	pop	{r4, pc}
   136cc:	00025de0 	.word	0x00025de0

000136d0 <LIGHT::~LIGHT()>:
_ZN5LIGHTD0Ev():
   136d0:	b510      	push	{r4, lr}
   136d2:	4b03      	ldr	r3, [pc, #12]	; (136e0 <LIGHT::~LIGHT()+0x10>)
   136d4:	4604      	mov	r4, r0
   136d6:	6003      	str	r3, [r0, #0]
   136d8:	f7fc fdcc 	bl	10274 <operator delete(void*)>
   136dc:	4620      	mov	r0, r4
   136de:	bd10      	pop	{r4, pc}
   136e0:	00025de0 	.word	0x00025de0

000136e4 <GLCD::~GLCD()>:
_ZN4GLCDD0Ev():
   136e4:	b510      	push	{r4, lr}
   136e6:	4b03      	ldr	r3, [pc, #12]	; (136f4 <GLCD::~GLCD()+0x10>)
   136e8:	4604      	mov	r4, r0
   136ea:	6003      	str	r3, [r0, #0]
   136ec:	f7fc fdc2 	bl	10274 <operator delete(void*)>
   136f0:	4620      	mov	r0, r4
   136f2:	bd10      	pop	{r4, pc}
   136f4:	00025de0 	.word	0x00025de0

000136f8 <home_dst()>:
_Z8home_dstv():
   136f8:	b513      	push	{r0, r1, r4, lr}
   136fa:	4b07      	ldr	r3, [pc, #28]	; (13718 <home_dst()+0x20>)
   136fc:	2401      	movs	r4, #1
   136fe:	2203      	movs	r2, #3
   13700:	701a      	strb	r2, [r3, #0]
   13702:	2100      	movs	r1, #0
   13704:	9400      	str	r4, [sp, #0]
   13706:	220b      	movs	r2, #11
   13708:	4804      	ldr	r0, [pc, #16]	; (1371c <home_dst()+0x24>)
   1370a:	f7ff fa53 	bl	12bb4 <can_controller::can_send(controller_id_t, msg_id_t, unsigned char*, unsigned short)>
   1370e:	4b04      	ldr	r3, [pc, #16]	; (13720 <home_dst()+0x28>)
   13710:	729c      	strb	r4, [r3, #10]
   13712:	b002      	add	sp, #8
   13714:	bd10      	pop	{r4, pc}
   13716:	bf00      	nop
   13718:	2007c776 	.word	0x2007c776
   1371c:	2007c746 	.word	0x2007c746
   13720:	2007c763 	.word	0x2007c763

00013724 <reset_all()>:
_Z9reset_allv():
   13724:	b507      	push	{r0, r1, r2, lr}
   13726:	2300      	movs	r3, #0
   13728:	9300      	str	r3, [sp, #0]
   1372a:	2102      	movs	r1, #2
   1372c:	2201      	movs	r2, #1
   1372e:	4803      	ldr	r0, [pc, #12]	; (1373c <reset_all()+0x18>)
   13730:	f7ff fa40 	bl	12bb4 <can_controller::can_send(controller_id_t, msg_id_t, unsigned char*, unsigned short)>
   13734:	b003      	add	sp, #12
   13736:	f85d fb04 	ldr.w	pc, [sp], #4
   1373a:	bf00      	nop
   1373c:	2007c746 	.word	0x2007c746

00013740 <timer()>:
_Z5timerv():
   13740:	b570      	push	{r4, r5, r6, lr}
   13742:	4b31      	ldr	r3, [pc, #196]	; (13808 <timer()+0xc8>)
   13744:	781a      	ldrb	r2, [r3, #0]
   13746:	2a01      	cmp	r2, #1
   13748:	d802      	bhi.n	13750 <timer()+0x10>
   1374a:	3201      	adds	r2, #1
   1374c:	701a      	strb	r2, [r3, #0]
   1374e:	bd70      	pop	{r4, r5, r6, pc}
   13750:	2200      	movs	r2, #0
   13752:	701a      	strb	r2, [r3, #0]
   13754:	4b2d      	ldr	r3, [pc, #180]	; (1380c <timer()+0xcc>)
   13756:	781a      	ldrb	r2, [r3, #0]
   13758:	461e      	mov	r6, r3
   1375a:	3201      	adds	r2, #1
   1375c:	b2d2      	uxtb	r2, r2
   1375e:	701a      	strb	r2, [r3, #0]
   13760:	2a00      	cmp	r2, #0
   13762:	d040      	beq.n	137e6 <timer()+0xa6>
   13764:	4b2a      	ldr	r3, [pc, #168]	; (13810 <timer()+0xd0>)
   13766:	482b      	ldr	r0, [pc, #172]	; (13814 <timer()+0xd4>)
   13768:	781a      	ldrb	r2, [r3, #0]
   1376a:	4d2b      	ldr	r5, [pc, #172]	; (13818 <timer()+0xd8>)
   1376c:	3201      	adds	r2, #1
   1376e:	701a      	strb	r2, [r3, #0]
   13770:	785a      	ldrb	r2, [r3, #1]
   13772:	3201      	adds	r2, #1
   13774:	705a      	strb	r2, [r3, #1]
   13776:	789a      	ldrb	r2, [r3, #2]
   13778:	3201      	adds	r2, #1
   1377a:	709a      	strb	r2, [r3, #2]
   1377c:	78da      	ldrb	r2, [r3, #3]
   1377e:	3201      	adds	r2, #1
   13780:	70da      	strb	r2, [r3, #3]
   13782:	791a      	ldrb	r2, [r3, #4]
   13784:	3201      	adds	r2, #1
   13786:	711a      	strb	r2, [r3, #4]
   13788:	795a      	ldrb	r2, [r3, #5]
   1378a:	3201      	adds	r2, #1
   1378c:	715a      	strb	r2, [r3, #5]
   1378e:	4b23      	ldr	r3, [pc, #140]	; (1381c <timer()+0xdc>)
   13790:	88dc      	ldrh	r4, [r3, #6]
   13792:	4b23      	ldr	r3, [pc, #140]	; (13820 <timer()+0xe0>)
   13794:	88db      	ldrh	r3, [r3, #6]
   13796:	441c      	add	r4, r3
   13798:	4b22      	ldr	r3, [pc, #136]	; (13824 <timer()+0xe4>)
   1379a:	88db      	ldrh	r3, [r3, #6]
   1379c:	441c      	add	r4, r3
   1379e:	4b22      	ldr	r3, [pc, #136]	; (13828 <timer()+0xe8>)
   137a0:	88db      	ldrh	r3, [r3, #6]
   137a2:	441c      	add	r4, r3
   137a4:	4b21      	ldr	r3, [pc, #132]	; (1382c <timer()+0xec>)
   137a6:	88db      	ldrh	r3, [r3, #6]
   137a8:	441c      	add	r4, r3
   137aa:	f7ff f9f1 	bl	12b90 <can_controller::get_tx_bytes()>
   137ae:	b2a4      	uxth	r4, r4
   137b0:	4420      	add	r0, r4
   137b2:	b284      	uxth	r4, r0
   137b4:	4b1e      	ldr	r3, [pc, #120]	; (13830 <timer()+0xf0>)
   137b6:	7828      	ldrb	r0, [r5, #0]
   137b8:	801c      	strh	r4, [r3, #0]
   137ba:	1a20      	subs	r0, r4, r0
   137bc:	4b1d      	ldr	r3, [pc, #116]	; (13834 <timer()+0xf4>)
   137be:	b2c0      	uxtb	r0, r0
   137c0:	7018      	strb	r0, [r3, #0]
   137c2:	f00a fb71 	bl	1dea8 <__aeabi_ui2f>
   137c6:	f009 ffe3 	bl	1d790 <__aeabi_f2d>
   137ca:	a30d      	add	r3, pc, #52	; (adr r3, 13800 <timer()+0xc0>)
   137cc:	e9d3 2300 	ldrd	r2, r3, [r3]
   137d0:	f00a f95c 	bl	1da8c <__aeabi_ddiv>
   137d4:	4b18      	ldr	r3, [pc, #96]	; (13838 <timer()+0xf8>)
   137d6:	2200      	movs	r2, #0
   137d8:	f00a f82e 	bl	1d838 <__aeabi_dmul>
   137dc:	f00a fa5e 	bl	1dc9c <__aeabi_d2f>
   137e0:	4b16      	ldr	r3, [pc, #88]	; (1383c <timer()+0xfc>)
   137e2:	802c      	strh	r4, [r5, #0]
   137e4:	6018      	str	r0, [r3, #0]
   137e6:	7833      	ldrb	r3, [r6, #0]
   137e8:	2b02      	cmp	r3, #2
   137ea:	d905      	bls.n	137f8 <timer()+0xb8>
   137ec:	4b07      	ldr	r3, [pc, #28]	; (1380c <timer()+0xcc>)
   137ee:	2200      	movs	r2, #0
   137f0:	701a      	strb	r2, [r3, #0]
   137f2:	4b13      	ldr	r3, [pc, #76]	; (13840 <timer()+0x100>)
   137f4:	2201      	movs	r2, #1
   137f6:	705a      	strb	r2, [r3, #1]
   137f8:	bd70      	pop	{r4, r5, r6, pc}
   137fa:	bf00      	nop
   137fc:	f3af 8000 	nop.w
   13800:	00000000 	.word	0x00000000
   13804:	40c86a00 	.word	0x40c86a00
   13808:	2007c797 	.word	0x2007c797
   1380c:	2007c7a1 	.word	0x2007c7a1
   13810:	2007c798 	.word	0x2007c798
   13814:	2007c746 	.word	0x2007c746
   13818:	2007c778 	.word	0x2007c778
   1381c:	2007c756 	.word	0x2007c756
   13820:	2007c7c2 	.word	0x2007c7c2
   13824:	2007c7a4 	.word	0x2007c7a4
   13828:	2007c7cc 	.word	0x2007c7cc
   1382c:	2007c76e 	.word	0x2007c76e
   13830:	2007c7ca 	.word	0x2007c7ca
   13834:	2007c7ad 	.word	0x2007c7ad
   13838:	40590000 	.word	0x40590000
   1383c:	2007c7b0 	.word	0x2007c7b0
   13840:	2007c763 	.word	0x2007c763
$t():
   13844:	f3af 8000 	nop.w

00013848 <car_con()>:
_Z7car_conv():
   13848:	b507      	push	{r0, r1, r2, lr}
   1384a:	4b0b      	ldr	r3, [pc, #44]	; (13878 <car_con()+0x30>)
   1384c:	4a0b      	ldr	r2, [pc, #44]	; (1387c <car_con()+0x34>)
   1384e:	2101      	movs	r1, #1
   13850:	7019      	strb	r1, [r3, #0]
   13852:	7813      	ldrb	r3, [r2, #0]
   13854:	b133      	cbz	r3, 13864 <car_con()+0x1c>
   13856:	2300      	movs	r3, #0
   13858:	7013      	strb	r3, [r2, #0]
   1385a:	4809      	ldr	r0, [pc, #36]	; (13880 <car_con()+0x38>)
   1385c:	9300      	str	r3, [sp, #0]
   1385e:	2102      	movs	r1, #2
   13860:	2207      	movs	r2, #7
   13862:	e004      	b.n	1386e <car_con()+0x26>
   13864:	4806      	ldr	r0, [pc, #24]	; (13880 <car_con()+0x38>)
   13866:	7011      	strb	r1, [r2, #0]
   13868:	9300      	str	r3, [sp, #0]
   1386a:	2102      	movs	r1, #2
   1386c:	2208      	movs	r2, #8
   1386e:	f7ff f9a1 	bl	12bb4 <can_controller::can_send(controller_id_t, msg_id_t, unsigned char*, unsigned short)>
   13872:	b003      	add	sp, #12
   13874:	f85d fb04 	ldr.w	pc, [sp], #4
   13878:	2007c782 	.word	0x2007c782
   1387c:	2007c7d5 	.word	0x2007c7d5
   13880:	2007c746 	.word	0x2007c746

00013884 <GLCD::tx_data(char)>:
_ZN4GLCD7tx_dataEc():
   13884:	4b03      	ldr	r3, [pc, #12]	; (13894 <GLCD::tx_data(char)+0x10>)
   13886:	b2c9      	uxtb	r1, r1
   13888:	7019      	strb	r1, [r3, #0]
   1388a:	7d1a      	ldrb	r2, [r3, #20]
   1388c:	0652      	lsls	r2, r2, #25
   1388e:	d5fc      	bpl.n	1388a <GLCD::tx_data(char)+0x6>
   13890:	4770      	bx	lr
   13892:	bf00      	nop
   13894:	40098000 	.word	0x40098000

00013898 <GLCD::GLCD_init()>:
_ZN4GLCD9GLCD_initEv():
   13898:	b510      	push	{r4, lr}
   1389a:	f009 f9e1 	bl	1cc60 <sys_get_cpu_clock>
   1389e:	4b1b      	ldr	r3, [pc, #108]	; (1390c <GLCD::GLCD_init()+0x74>)
   138a0:	f44f 3416 	mov.w	r4, #153600	; 0x25800
   138a4:	f8d3 20c4 	ldr.w	r2, [r3, #196]	; 0xc4
   138a8:	fbb0 f0f4 	udiv	r0, r0, r4
   138ac:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
   138b0:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
   138b4:	f8d3 21ac 	ldr.w	r2, [r3, #428]	; 0x1ac
   138b8:	2101      	movs	r1, #1
   138ba:	f422 3240 	bic.w	r2, r2, #196608	; 0x30000
   138be:	f8c3 21ac 	str.w	r2, [r3, #428]	; 0x1ac
   138c2:	f8d3 21ac 	ldr.w	r2, [r3, #428]	; 0x1ac
   138c6:	b2c4      	uxtb	r4, r0
   138c8:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
   138cc:	f8c3 21ac 	str.w	r2, [r3, #428]	; 0x1ac
   138d0:	f5a3 2350 	sub.w	r3, r3, #851968	; 0xd0000
   138d4:	691a      	ldr	r2, [r3, #16]
   138d6:	2003      	movs	r0, #3
   138d8:	f422 2270 	bic.w	r2, r2, #983040	; 0xf0000
   138dc:	611a      	str	r2, [r3, #16]
   138de:	691a      	ldr	r2, [r3, #16]
   138e0:	f442 2220 	orr.w	r2, r2, #655360	; 0xa0000
   138e4:	611a      	str	r2, [r3, #16]
   138e6:	f503 23d8 	add.w	r3, r3, #442368	; 0x6c000
   138ea:	2280      	movs	r2, #128	; 0x80
   138ec:	731a      	strb	r2, [r3, #12]
   138ee:	7119      	strb	r1, [r3, #4]
   138f0:	701c      	strb	r4, [r3, #0]
   138f2:	7318      	strb	r0, [r3, #12]
   138f4:	2041      	movs	r0, #65	; 0x41
   138f6:	7218      	strb	r0, [r3, #8]
   138f8:	6059      	str	r1, [r3, #4]
   138fa:	4b05      	ldr	r3, [pc, #20]	; (13910 <GLCD::GLCD_init()+0x78>)
   138fc:	4805      	ldr	r0, [pc, #20]	; (13914 <GLCD::GLCD_init()+0x7c>)
   138fe:	601a      	str	r2, [r3, #0]
   13900:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
   13904:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   13908:	f006 be60 	b.w	1a5cc <rit_enable>
   1390c:	400fc000 	.word	0x400fc000
   13910:	e000e100 	.word	0xe000e100
   13914:	00013741 	.word	0x00013741

00013918 <GLCD::GLCD(unsigned char)>:
_ZN4GLCDC1Eh():
   13918:	b513      	push	{r0, r1, r4, lr}
   1391a:	2200      	movs	r2, #0
   1391c:	460b      	mov	r3, r1
   1391e:	9200      	str	r2, [sp, #0]
   13920:	490b      	ldr	r1, [pc, #44]	; (13950 <GLCD::GLCD(unsigned char)+0x38>)
   13922:	f44f 5280 	mov.w	r2, #4096	; 0x1000
   13926:	4604      	mov	r4, r0
   13928:	f005 fec2 	bl	196b0 <scheduler_task::scheduler_task(char const*, unsigned long, unsigned char, void*)>
   1392c:	4b09      	ldr	r3, [pc, #36]	; (13954 <GLCD::GLCD(unsigned char)+0x3c>)
   1392e:	4620      	mov	r0, r4
   13930:	6023      	str	r3, [r4, #0]
   13932:	f7ff ffb1 	bl	13898 <GLCD::GLCD_init()>
   13936:	4b08      	ldr	r3, [pc, #32]	; (13958 <GLCD::GLCD(unsigned char)+0x40>)
   13938:	2202      	movs	r2, #2
   1393a:	701a      	strb	r2, [r3, #0]
   1393c:	4b07      	ldr	r3, [pc, #28]	; (1395c <GLCD::GLCD(unsigned char)+0x44>)
   1393e:	2201      	movs	r2, #1
   13940:	729a      	strb	r2, [r3, #10]
   13942:	701a      	strb	r2, [r3, #0]
   13944:	725a      	strb	r2, [r3, #9]
   13946:	4620      	mov	r0, r4
   13948:	2364      	movs	r3, #100	; 0x64
   1394a:	61e3      	str	r3, [r4, #28]
   1394c:	b002      	add	sp, #8
   1394e:	bd10      	pop	{r4, pc}
   13950:	000267e4 	.word	0x000267e4
   13954:	000267c0 	.word	0x000267c0
   13958:	2007c776 	.word	0x2007c776
   1395c:	2007c763 	.word	0x2007c763

00013960 <GLCD::GLCD_write(char, char, char, char, char)>:
_ZN4GLCD10GLCD_writeEccccc():
   13960:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   13964:	f99d 8020 	ldrsb.w	r8, [sp, #32]
   13968:	f99d 7024 	ldrsb.w	r7, [sp, #36]	; 0x24
   1396c:	4699      	mov	r9, r3
   1396e:	ea88 0607 	eor.w	r6, r8, r7
   13972:	405e      	eors	r6, r3
   13974:	4056      	eors	r6, r2
   13976:	4b0f      	ldr	r3, [pc, #60]	; (139b4 <GLCD::GLCD_write(char, char, char, char, char)+0x54>)
   13978:	404e      	eors	r6, r1
   1397a:	4604      	mov	r4, r0
   1397c:	4615      	mov	r5, r2
   1397e:	b2f6      	uxtb	r6, r6
   13980:	701e      	strb	r6, [r3, #0]
   13982:	f7ff ff7f 	bl	13884 <GLCD::tx_data(char)>
   13986:	4620      	mov	r0, r4
   13988:	4629      	mov	r1, r5
   1398a:	f7ff ff7b 	bl	13884 <GLCD::tx_data(char)>
   1398e:	4620      	mov	r0, r4
   13990:	4649      	mov	r1, r9
   13992:	f7ff ff77 	bl	13884 <GLCD::tx_data(char)>
   13996:	4620      	mov	r0, r4
   13998:	4641      	mov	r1, r8
   1399a:	f7ff ff73 	bl	13884 <GLCD::tx_data(char)>
   1399e:	4620      	mov	r0, r4
   139a0:	4639      	mov	r1, r7
   139a2:	f7ff ff6f 	bl	13884 <GLCD::tx_data(char)>
   139a6:	4620      	mov	r0, r4
   139a8:	b271      	sxtb	r1, r6
   139aa:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   139ae:	f7ff bf69 	b.w	13884 <GLCD::tx_data(char)>
   139b2:	bf00      	nop
   139b4:	2007c7d6 	.word	0x2007c7d6

000139b8 <GLCD::GLCD_write_str(char, char, char*)>:
_ZN4GLCD14GLCD_write_strEccPc():
   139b8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   139bc:	4604      	mov	r4, r0
   139be:	4618      	mov	r0, r3
   139c0:	4617      	mov	r7, r2
   139c2:	4688      	mov	r8, r1
   139c4:	461e      	mov	r6, r3
   139c6:	f00c f977 	bl	1fcb8 <strlen>
   139ca:	4641      	mov	r1, r8
   139cc:	4605      	mov	r5, r0
   139ce:	4620      	mov	r0, r4
   139d0:	f7ff ff58 	bl	13884 <GLCD::tx_data(char)>
   139d4:	4639      	mov	r1, r7
   139d6:	4620      	mov	r0, r4
   139d8:	f7ff ff54 	bl	13884 <GLCD::tx_data(char)>
   139dc:	ea88 0707 	eor.w	r7, r8, r7
   139e0:	b2e9      	uxtb	r1, r5
   139e2:	4d0d      	ldr	r5, [pc, #52]	; (13a18 <GLCD::GLCD_write_str(char, char, char*)+0x60>)
   139e4:	404f      	eors	r7, r1
   139e6:	4620      	mov	r0, r4
   139e8:	b249      	sxtb	r1, r1
   139ea:	702f      	strb	r7, [r5, #0]
   139ec:	f7ff ff4a 	bl	13884 <GLCD::tx_data(char)>
   139f0:	f816 1b01 	ldrb.w	r1, [r6], #1
   139f4:	4620      	mov	r0, r4
   139f6:	b141      	cbz	r1, 13a0a <GLCD::GLCD_write_str(char, char, char*)+0x52>
   139f8:	b249      	sxtb	r1, r1
   139fa:	f7ff ff43 	bl	13884 <GLCD::tx_data(char)>
   139fe:	782b      	ldrb	r3, [r5, #0]
   13a00:	f816 2c01 	ldrb.w	r2, [r6, #-1]
   13a04:	4053      	eors	r3, r2
   13a06:	702b      	strb	r3, [r5, #0]
   13a08:	e7f2      	b.n	139f0 <GLCD::GLCD_write_str(char, char, char*)+0x38>
   13a0a:	f995 1000 	ldrsb.w	r1, [r5]
   13a0e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   13a12:	f7ff bf37 	b.w	13884 <GLCD::tx_data(char)>
   13a16:	bf00      	nop
   13a18:	2007c7ac 	.word	0x2007c7ac

00013a1c <GLCD::GLCD_write_int(char, char, int)>:
_ZN4GLCD14GLCD_write_intEcci():
   13a1c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   13a1e:	4604      	mov	r4, r0
   13a20:	460f      	mov	r7, r1
   13a22:	4616      	mov	r6, r2
   13a24:	4916      	ldr	r1, [pc, #88]	; (13a80 <GLCD::GLCD_write_int(char, char, int)+0x64>)
   13a26:	461a      	mov	r2, r3
   13a28:	4668      	mov	r0, sp
   13a2a:	f00c f891 	bl	1fb50 <siprintf>
   13a2e:	4668      	mov	r0, sp
   13a30:	f00c f942 	bl	1fcb8 <strlen>
   13a34:	4639      	mov	r1, r7
   13a36:	4605      	mov	r5, r0
   13a38:	4620      	mov	r0, r4
   13a3a:	f7ff ff23 	bl	13884 <GLCD::tx_data(char)>
   13a3e:	4631      	mov	r1, r6
   13a40:	4620      	mov	r0, r4
   13a42:	f7ff ff1f 	bl	13884 <GLCD::tx_data(char)>
   13a46:	407e      	eors	r6, r7
   13a48:	b2e9      	uxtb	r1, r5
   13a4a:	4d0e      	ldr	r5, [pc, #56]	; (13a84 <GLCD::GLCD_write_int(char, char, int)+0x68>)
   13a4c:	404e      	eors	r6, r1
   13a4e:	4620      	mov	r0, r4
   13a50:	b249      	sxtb	r1, r1
   13a52:	702e      	strb	r6, [r5, #0]
   13a54:	f7ff ff16 	bl	13884 <GLCD::tx_data(char)>
   13a58:	f10d 36ff 	add.w	r6, sp, #4294967295
   13a5c:	7871      	ldrb	r1, [r6, #1]
   13a5e:	4620      	mov	r0, r4
   13a60:	b141      	cbz	r1, 13a74 <GLCD::GLCD_write_int(char, char, int)+0x58>
   13a62:	b249      	sxtb	r1, r1
   13a64:	f7ff ff0e 	bl	13884 <GLCD::tx_data(char)>
   13a68:	782b      	ldrb	r3, [r5, #0]
   13a6a:	f816 2f01 	ldrb.w	r2, [r6, #1]!
   13a6e:	4053      	eors	r3, r2
   13a70:	702b      	strb	r3, [r5, #0]
   13a72:	e7f3      	b.n	13a5c <GLCD::GLCD_write_int(char, char, int)+0x40>
   13a74:	f995 1000 	ldrsb.w	r1, [r5]
   13a78:	f7ff ff04 	bl	13884 <GLCD::tx_data(char)>
   13a7c:	b003      	add	sp, #12
   13a7e:	bdf0      	pop	{r4, r5, r6, r7, pc}
   13a80:	000266f2 	.word	0x000266f2
   13a84:	2007c7d8 	.word	0x2007c7d8

00013a88 <GLCD::GLCD_write_float(char, char, float, unsigned char)>:
_ZN4GLCD16GLCD_write_floatEccfh():
   13a88:	b5f0      	push	{r4, r5, r6, r7, lr}
   13a8a:	4604      	mov	r4, r0
   13a8c:	b087      	sub	sp, #28
   13a8e:	4618      	mov	r0, r3
   13a90:	4616      	mov	r6, r2
   13a92:	460f      	mov	r7, r1
   13a94:	f009 fe7c 	bl	1d790 <__aeabi_f2d>
   13a98:	f89d 2030 	ldrb.w	r2, [sp, #48]	; 0x30
   13a9c:	e9cd 0100 	strd	r0, r1, [sp]
   13aa0:	4916      	ldr	r1, [pc, #88]	; (13afc <GLCD::GLCD_write_float(char, char, float, unsigned char)+0x74>)
   13aa2:	a803      	add	r0, sp, #12
   13aa4:	f00c f854 	bl	1fb50 <siprintf>
   13aa8:	a803      	add	r0, sp, #12
   13aaa:	f00c f905 	bl	1fcb8 <strlen>
   13aae:	4639      	mov	r1, r7
   13ab0:	4605      	mov	r5, r0
   13ab2:	4620      	mov	r0, r4
   13ab4:	f7ff fee6 	bl	13884 <GLCD::tx_data(char)>
   13ab8:	4631      	mov	r1, r6
   13aba:	4620      	mov	r0, r4
   13abc:	f7ff fee2 	bl	13884 <GLCD::tx_data(char)>
   13ac0:	407e      	eors	r6, r7
   13ac2:	b2e9      	uxtb	r1, r5
   13ac4:	4d0e      	ldr	r5, [pc, #56]	; (13b00 <GLCD::GLCD_write_float(char, char, float, unsigned char)+0x78>)
   13ac6:	404e      	eors	r6, r1
   13ac8:	4620      	mov	r0, r4
   13aca:	b249      	sxtb	r1, r1
   13acc:	702e      	strb	r6, [r5, #0]
   13ace:	f7ff fed9 	bl	13884 <GLCD::tx_data(char)>
   13ad2:	f10d 060b 	add.w	r6, sp, #11
   13ad6:	7871      	ldrb	r1, [r6, #1]
   13ad8:	4620      	mov	r0, r4
   13ada:	b141      	cbz	r1, 13aee <GLCD::GLCD_write_float(char, char, float, unsigned char)+0x66>
   13adc:	b249      	sxtb	r1, r1
   13ade:	f7ff fed1 	bl	13884 <GLCD::tx_data(char)>
   13ae2:	782b      	ldrb	r3, [r5, #0]
   13ae4:	f816 2f01 	ldrb.w	r2, [r6, #1]!
   13ae8:	4053      	eors	r3, r2
   13aea:	702b      	strb	r3, [r5, #0]
   13aec:	e7f3      	b.n	13ad6 <GLCD::GLCD_write_float(char, char, float, unsigned char)+0x4e>
   13aee:	f995 1000 	ldrsb.w	r1, [r5]
   13af2:	f7ff fec7 	bl	13884 <GLCD::tx_data(char)>
   13af6:	b007      	add	sp, #28
   13af8:	bdf0      	pop	{r4, r5, r6, r7, pc}
   13afa:	bf00      	nop
   13afc:	000267e9 	.word	0x000267e9
   13b00:	2007c755 	.word	0x2007c755

00013b04 <GLCD::GLCD_contrast(char)>:
_ZN4GLCD13GLCD_contrastEc():
   13b04:	b570      	push	{r4, r5, r6, lr}
   13b06:	4b0a      	ldr	r3, [pc, #40]	; (13b30 <GLCD::GLCD_contrast(char)+0x2c>)
   13b08:	f081 0504 	eor.w	r5, r1, #4
   13b0c:	4604      	mov	r4, r0
   13b0e:	460e      	mov	r6, r1
   13b10:	b2ed      	uxtb	r5, r5
   13b12:	2104      	movs	r1, #4
   13b14:	701d      	strb	r5, [r3, #0]
   13b16:	f7ff feb5 	bl	13884 <GLCD::tx_data(char)>
   13b1a:	4620      	mov	r0, r4
   13b1c:	4631      	mov	r1, r6
   13b1e:	f7ff feb1 	bl	13884 <GLCD::tx_data(char)>
   13b22:	4620      	mov	r0, r4
   13b24:	b269      	sxtb	r1, r5
   13b26:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
   13b2a:	f7ff beab 	b.w	13884 <GLCD::tx_data(char)>
   13b2e:	bf00      	nop
   13b30:	2007c7d4 	.word	0x2007c7d4

00013b34 <GLCD::touch_screen()>:
_ZN4GLCD12touch_screenEv():
   13b34:	4b19      	ldr	r3, [pc, #100]	; (13b9c <GLCD::touch_screen()+0x68>)
   13b36:	b513      	push	{r0, r1, r4, lr}
   13b38:	781a      	ldrb	r2, [r3, #0]
   13b3a:	b1b2      	cbz	r2, 13b6a <GLCD::touch_screen()+0x36>
   13b3c:	2200      	movs	r2, #0
   13b3e:	701a      	strb	r2, [r3, #0]
   13b40:	4b17      	ldr	r3, [pc, #92]	; (13ba0 <GLCD::touch_screen()+0x6c>)
   13b42:	781a      	ldrb	r2, [r3, #0]
   13b44:	2a02      	cmp	r2, #2
   13b46:	d007      	beq.n	13b58 <GLCD::touch_screen()+0x24>
   13b48:	2a03      	cmp	r2, #3
   13b4a:	f04f 0101 	mov.w	r1, #1
   13b4e:	d006      	beq.n	13b5e <GLCD::touch_screen()+0x2a>
   13b50:	428a      	cmp	r2, r1
   13b52:	d104      	bne.n	13b5e <GLCD::touch_screen()+0x2a>
   13b54:	2202      	movs	r2, #2
   13b56:	e000      	b.n	13b5a <GLCD::touch_screen()+0x26>
   13b58:	2203      	movs	r2, #3
   13b5a:	701a      	strb	r2, [r3, #0]
   13b5c:	e000      	b.n	13b60 <GLCD::touch_screen()+0x2c>
   13b5e:	7019      	strb	r1, [r3, #0]
   13b60:	4a10      	ldr	r2, [pc, #64]	; (13ba4 <GLCD::touch_screen()+0x70>)
   13b62:	2301      	movs	r3, #1
   13b64:	7253      	strb	r3, [r2, #9]
   13b66:	4a10      	ldr	r2, [pc, #64]	; (13ba8 <GLCD::touch_screen()+0x74>)
   13b68:	7013      	strb	r3, [r2, #0]
   13b6a:	4b10      	ldr	r3, [pc, #64]	; (13bac <GLCD::touch_screen()+0x78>)
   13b6c:	781a      	ldrb	r2, [r3, #0]
   13b6e:	b192      	cbz	r2, 13b96 <GLCD::touch_screen()+0x62>
   13b70:	2200      	movs	r2, #0
   13b72:	701a      	strb	r2, [r3, #0]
   13b74:	4b0e      	ldr	r3, [pc, #56]	; (13bb0 <GLCD::touch_screen()+0x7c>)
   13b76:	2401      	movs	r4, #1
   13b78:	781a      	ldrb	r2, [r3, #0]
   13b7a:	480e      	ldr	r0, [pc, #56]	; (13bb4 <GLCD::touch_screen()+0x80>)
   13b7c:	2a01      	cmp	r2, #1
   13b7e:	bf06      	itte	eq
   13b80:	2203      	moveq	r2, #3
   13b82:	701a      	strbeq	r2, [r3, #0]
   13b84:	701c      	strbne	r4, [r3, #0]
   13b86:	2100      	movs	r1, #0
   13b88:	4b09      	ldr	r3, [pc, #36]	; (13bb0 <GLCD::touch_screen()+0x7c>)
   13b8a:	9400      	str	r4, [sp, #0]
   13b8c:	220b      	movs	r2, #11
   13b8e:	f7ff f811 	bl	12bb4 <can_controller::can_send(controller_id_t, msg_id_t, unsigned char*, unsigned short)>
   13b92:	4b04      	ldr	r3, [pc, #16]	; (13ba4 <GLCD::touch_screen()+0x70>)
   13b94:	729c      	strb	r4, [r3, #10]
   13b96:	b002      	add	sp, #8
   13b98:	bd10      	pop	{r4, pc}
   13b9a:	bf00      	nop
   13b9c:	2007c77b 	.word	0x2007c77b
   13ba0:	2007c7d7 	.word	0x2007c7d7
   13ba4:	2007c763 	.word	0x2007c763
   13ba8:	2007c7d9 	.word	0x2007c7d9
   13bac:	2007c7c0 	.word	0x2007c7c0
   13bb0:	2007c776 	.word	0x2007c776
   13bb4:	2007c746 	.word	0x2007c746

00013bb8 <LIGHT::light_init()>:
_ZN5LIGHT10light_initEv():
   13bb8:	b510      	push	{r4, lr}
   13bba:	4a08      	ldr	r2, [pc, #32]	; (13bdc <LIGHT::light_init()+0x24>)
   13bbc:	2301      	movs	r3, #1
   13bbe:	2400      	movs	r4, #0
   13bc0:	7013      	strb	r3, [r2, #0]
   13bc2:	4a07      	ldr	r2, [pc, #28]	; (13be0 <LIGHT::light_init()+0x28>)
   13bc4:	4621      	mov	r1, r4
   13bc6:	4807      	ldr	r0, [pc, #28]	; (13be4 <LIGHT::light_init()+0x2c>)
   13bc8:	7253      	strb	r3, [r2, #9]
   13bca:	f006 fcb1 	bl	1a530 <PWM::set(float)>
   13bce:	4621      	mov	r1, r4
   13bd0:	4805      	ldr	r0, [pc, #20]	; (13be8 <LIGHT::light_init()+0x30>)
   13bd2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   13bd6:	f006 bcab 	b.w	1a530 <PWM::set(float)>
   13bda:	bf00      	nop
   13bdc:	2007c7d7 	.word	0x2007c7d7
   13be0:	2007c763 	.word	0x2007c763
   13be4:	2007c7da 	.word	0x2007c7da
   13be8:	2007c781 	.word	0x2007c781

00013bec <LIGHT::LIGHT(unsigned char)>:
_ZN5LIGHTC1Eh():
   13bec:	b513      	push	{r0, r1, r4, lr}
   13bee:	2200      	movs	r2, #0
   13bf0:	460b      	mov	r3, r1
   13bf2:	9200      	str	r2, [sp, #0]
   13bf4:	4907      	ldr	r1, [pc, #28]	; (13c14 <LIGHT::LIGHT(unsigned char)+0x28>)
   13bf6:	f44f 6200 	mov.w	r2, #2048	; 0x800
   13bfa:	4604      	mov	r4, r0
   13bfc:	f005 fd58 	bl	196b0 <scheduler_task::scheduler_task(char const*, unsigned long, unsigned char, void*)>
   13c00:	4b05      	ldr	r3, [pc, #20]	; (13c18 <LIGHT::LIGHT(unsigned char)+0x2c>)
   13c02:	4620      	mov	r0, r4
   13c04:	6023      	str	r3, [r4, #0]
   13c06:	f7ff ffd7 	bl	13bb8 <LIGHT::light_init()>
   13c0a:	2332      	movs	r3, #50	; 0x32
   13c0c:	4620      	mov	r0, r4
   13c0e:	61e3      	str	r3, [r4, #28]
   13c10:	b002      	add	sp, #8
   13c12:	bd10      	pop	{r4, pc}
   13c14:	000267ee 	.word	0x000267ee
   13c18:	00026868 	.word	0x00026868

00013c1c <LIGHT::chk_light()>:
_ZN5LIGHT9chk_lightEv():
   13c1c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   13c20:	4e4b      	ldr	r6, [pc, #300]	; (13d50 <LIGHT::chk_light()+0x134>)
   13c22:	4c4c      	ldr	r4, [pc, #304]	; (13d54 <LIGHT::chk_light()+0x138>)
   13c24:	7833      	ldrb	r3, [r6, #0]
   13c26:	b1f3      	cbz	r3, 13c66 <LIGHT::chk_light()+0x4a>
   13c28:	2300      	movs	r3, #0
   13c2a:	7033      	strb	r3, [r6, #0]
   13c2c:	7823      	ldrb	r3, [r4, #0]
   13c2e:	2b02      	cmp	r3, #2
   13c30:	d00a      	beq.n	13c48 <LIGHT::chk_light()+0x2c>
   13c32:	2b03      	cmp	r3, #3
   13c34:	d10f      	bne.n	13c56 <LIGHT::chk_light()+0x3a>
   13c36:	4b48      	ldr	r3, [pc, #288]	; (13d58 <LIGHT::chk_light()+0x13c>)
   13c38:	7858      	ldrb	r0, [r3, #1]
   13c3a:	f1c0 0064 	rsb	r0, r0, #100	; 0x64
   13c3e:	f00a f937 	bl	1deb0 <__aeabi_i2f>
   13c42:	4601      	mov	r1, r0
   13c44:	4845      	ldr	r0, [pc, #276]	; (13d5c <LIGHT::chk_light()+0x140>)
   13c46:	e001      	b.n	13c4c <LIGHT::chk_light()+0x30>
   13c48:	4844      	ldr	r0, [pc, #272]	; (13d5c <LIGHT::chk_light()+0x140>)
   13c4a:	4945      	ldr	r1, [pc, #276]	; (13d60 <LIGHT::chk_light()+0x144>)
   13c4c:	f006 fc70 	bl	1a530 <PWM::set(float)>
   13c50:	4844      	ldr	r0, [pc, #272]	; (13d64 <LIGHT::chk_light()+0x148>)
   13c52:	4945      	ldr	r1, [pc, #276]	; (13d68 <LIGHT::chk_light()+0x14c>)
   13c54:	e005      	b.n	13c62 <LIGHT::chk_light()+0x46>
   13c56:	2100      	movs	r1, #0
   13c58:	4840      	ldr	r0, [pc, #256]	; (13d5c <LIGHT::chk_light()+0x140>)
   13c5a:	f006 fc69 	bl	1a530 <PWM::set(float)>
   13c5e:	4841      	ldr	r0, [pc, #260]	; (13d64 <LIGHT::chk_light()+0x148>)
   13c60:	2100      	movs	r1, #0
   13c62:	f006 fc65 	bl	1a530 <PWM::set(float)>
   13c66:	7823      	ldrb	r3, [r4, #0]
   13c68:	2b03      	cmp	r3, #3
   13c6a:	d109      	bne.n	13c80 <LIGHT::chk_light()+0x64>
   13c6c:	4b3a      	ldr	r3, [pc, #232]	; (13d58 <LIGHT::chk_light()+0x13c>)
   13c6e:	7858      	ldrb	r0, [r3, #1]
   13c70:	f1c0 0064 	rsb	r0, r0, #100	; 0x64
   13c74:	f00a f91c 	bl	1deb0 <__aeabi_i2f>
   13c78:	4601      	mov	r1, r0
   13c7a:	4838      	ldr	r0, [pc, #224]	; (13d5c <LIGHT::chk_light()+0x140>)
   13c7c:	f006 fc58 	bl	1a530 <PWM::set(float)>
   13c80:	4d3a      	ldr	r5, [pc, #232]	; (13d6c <LIGHT::chk_light()+0x150>)
   13c82:	7a2b      	ldrb	r3, [r5, #8]
   13c84:	b37b      	cbz	r3, 13ce6 <LIGHT::chk_light()+0xca>
   13c86:	4a3a      	ldr	r2, [pc, #232]	; (13d70 <LIGHT::chk_light()+0x154>)
   13c88:	2300      	movs	r3, #0
   13c8a:	7897      	ldrb	r7, [r2, #2]
   13c8c:	722b      	strb	r3, [r5, #8]
   13c8e:	f007 07fb 	and.w	r7, r7, #251	; 0xfb
   13c92:	2f01      	cmp	r7, #1
   13c94:	4690      	mov	r8, r2
   13c96:	4c37      	ldr	r4, [pc, #220]	; (13d74 <LIGHT::chk_light()+0x158>)
   13c98:	d105      	bne.n	13ca6 <LIGHT::chk_light()+0x8a>
   13c9a:	4832      	ldr	r0, [pc, #200]	; (13d64 <LIGHT::chk_light()+0x148>)
   13c9c:	4930      	ldr	r1, [pc, #192]	; (13d60 <LIGHT::chk_light()+0x144>)
   13c9e:	f006 fc47 	bl	1a530 <PWM::set(float)>
   13ca2:	7027      	strb	r7, [r4, #0]
   13ca4:	e000      	b.n	13ca8 <LIGHT::chk_light()+0x8c>
   13ca6:	7023      	strb	r3, [r4, #0]
   13ca8:	f898 3001 	ldrb.w	r3, [r8, #1]
   13cac:	2b02      	cmp	r3, #2
   13cae:	d113      	bne.n	13cd8 <LIGHT::chk_light()+0xbc>
   13cb0:	f894 9000 	ldrb.w	r9, [r4]
   13cb4:	f1b9 0f00 	cmp.w	r9, #0
   13cb8:	d10e      	bne.n	13cd8 <LIGHT::chk_light()+0xbc>
   13cba:	4f2f      	ldr	r7, [pc, #188]	; (13d78 <LIGHT::chk_light()+0x15c>)
   13cbc:	4829      	ldr	r0, [pc, #164]	; (13d64 <LIGHT::chk_light()+0x148>)
   13cbe:	783b      	ldrb	r3, [r7, #0]
   13cc0:	b12b      	cbz	r3, 13cce <LIGHT::chk_light()+0xb2>
   13cc2:	2100      	movs	r1, #0
   13cc4:	f006 fc34 	bl	1a530 <PWM::set(float)>
   13cc8:	f887 9000 	strb.w	r9, [r7]
   13ccc:	e004      	b.n	13cd8 <LIGHT::chk_light()+0xbc>
   13cce:	4924      	ldr	r1, [pc, #144]	; (13d60 <LIGHT::chk_light()+0x144>)
   13cd0:	f006 fc2e 	bl	1a530 <PWM::set(float)>
   13cd4:	2301      	movs	r3, #1
   13cd6:	703b      	strb	r3, [r7, #0]
   13cd8:	f898 3001 	ldrb.w	r3, [r8, #1]
   13cdc:	2b01      	cmp	r3, #1
   13cde:	d102      	bne.n	13ce6 <LIGHT::chk_light()+0xca>
   13ce0:	7822      	ldrb	r2, [r4, #0]
   13ce2:	b902      	cbnz	r2, 13ce6 <LIGHT::chk_light()+0xca>
   13ce4:	7033      	strb	r3, [r6, #0]
   13ce6:	79ab      	ldrb	r3, [r5, #6]
   13ce8:	b1b3      	cbz	r3, 13d18 <LIGHT::chk_light()+0xfc>
   13cea:	4b24      	ldr	r3, [pc, #144]	; (13d7c <LIGHT::chk_light()+0x160>)
   13cec:	481b      	ldr	r0, [pc, #108]	; (13d5c <LIGHT::chk_light()+0x140>)
   13cee:	781a      	ldrb	r2, [r3, #0]
   13cf0:	461c      	mov	r4, r3
   13cf2:	3201      	adds	r2, #1
   13cf4:	b2d2      	uxtb	r2, r2
   13cf6:	f012 0f01 	tst.w	r2, #1
   13cfa:	bf14      	ite	ne
   13cfc:	4918      	ldrne	r1, [pc, #96]	; (13d60 <LIGHT::chk_light()+0x144>)
   13cfe:	2100      	moveq	r1, #0
   13d00:	701a      	strb	r2, [r3, #0]
   13d02:	f006 fc15 	bl	1a530 <PWM::set(float)>
   13d06:	7823      	ldrb	r3, [r4, #0]
   13d08:	2b05      	cmp	r3, #5
   13d0a:	d905      	bls.n	13d18 <LIGHT::chk_light()+0xfc>
   13d0c:	4a1b      	ldr	r2, [pc, #108]	; (13d7c <LIGHT::chk_light()+0x160>)
   13d0e:	2300      	movs	r3, #0
   13d10:	7013      	strb	r3, [r2, #0]
   13d12:	2201      	movs	r2, #1
   13d14:	7032      	strb	r2, [r6, #0]
   13d16:	71ab      	strb	r3, [r5, #6]
   13d18:	4b19      	ldr	r3, [pc, #100]	; (13d80 <LIGHT::chk_light()+0x164>)
   13d1a:	781b      	ldrb	r3, [r3, #0]
   13d1c:	b1ab      	cbz	r3, 13d4a <LIGHT::chk_light()+0x12e>
   13d1e:	4c16      	ldr	r4, [pc, #88]	; (13d78 <LIGHT::chk_light()+0x15c>)
   13d20:	480e      	ldr	r0, [pc, #56]	; (13d5c <LIGHT::chk_light()+0x140>)
   13d22:	7823      	ldrb	r3, [r4, #0]
   13d24:	b143      	cbz	r3, 13d38 <LIGHT::chk_light()+0x11c>
   13d26:	2100      	movs	r1, #0
   13d28:	f006 fc02 	bl	1a530 <PWM::set(float)>
   13d2c:	480d      	ldr	r0, [pc, #52]	; (13d64 <LIGHT::chk_light()+0x148>)
   13d2e:	2100      	movs	r1, #0
   13d30:	f006 fbfe 	bl	1a530 <PWM::set(float)>
   13d34:	2300      	movs	r3, #0
   13d36:	e007      	b.n	13d48 <LIGHT::chk_light()+0x12c>
   13d38:	4909      	ldr	r1, [pc, #36]	; (13d60 <LIGHT::chk_light()+0x144>)
   13d3a:	f006 fbf9 	bl	1a530 <PWM::set(float)>
   13d3e:	4809      	ldr	r0, [pc, #36]	; (13d64 <LIGHT::chk_light()+0x148>)
   13d40:	4907      	ldr	r1, [pc, #28]	; (13d60 <LIGHT::chk_light()+0x144>)
   13d42:	f006 fbf5 	bl	1a530 <PWM::set(float)>
   13d46:	2301      	movs	r3, #1
   13d48:	7023      	strb	r3, [r4, #0]
   13d4a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   13d4e:	bf00      	nop
   13d50:	2007c7d9 	.word	0x2007c7d9
   13d54:	2007c7d7 	.word	0x2007c7d7
   13d58:	2007c79e 	.word	0x2007c79e
   13d5c:	2007c7da 	.word	0x2007c7da
   13d60:	42c80000 	.word	0x42c80000
   13d64:	2007c781 	.word	0x2007c781
   13d68:	41200000 	.word	0x41200000
   13d6c:	2007c763 	.word	0x2007c763
   13d70:	2007c794 	.word	0x2007c794
   13d74:	2007c762 	.word	0x2007c762
   13d78:	2007c77a 	.word	0x2007c77a
   13d7c:	2007c780 	.word	0x2007c780
   13d80:	2007c7a3 	.word	0x2007c7a3

00013d84 <LIGHT::run(void*)>:
_ZN5LIGHT3runEPv():
   13d84:	b508      	push	{r3, lr}
   13d86:	f7ff ff49 	bl	13c1c <LIGHT::chk_light()>
   13d8a:	2001      	movs	r0, #1
   13d8c:	bd08      	pop	{r3, pc}
	...

00013d90 <SWITCH::sw_init()>:
_ZN6SWITCH7sw_initEv():
   13d90:	b508      	push	{r3, lr}
   13d92:	4b13      	ldr	r3, [pc, #76]	; (13de0 <SWITCH::sw_init()+0x50>)
   13d94:	2004      	movs	r0, #4
   13d96:	681a      	ldr	r2, [r3, #0]
   13d98:	2100      	movs	r1, #0
   13d9a:	f042 0210 	orr.w	r2, r2, #16
   13d9e:	601a      	str	r2, [r3, #0]
   13da0:	681a      	ldr	r2, [r3, #0]
   13da2:	f042 0220 	orr.w	r2, r2, #32
   13da6:	601a      	str	r2, [r3, #0]
   13da8:	681a      	ldr	r2, [r3, #0]
   13daa:	f042 0240 	orr.w	r2, r2, #64	; 0x40
   13dae:	601a      	str	r2, [r3, #0]
   13db0:	681a      	ldr	r2, [r3, #0]
   13db2:	f042 0280 	orr.w	r2, r2, #128	; 0x80
   13db6:	601a      	str	r2, [r3, #0]
   13db8:	4a0a      	ldr	r2, [pc, #40]	; (13de4 <SWITCH::sw_init()+0x54>)
   13dba:	f006 fb0d 	bl	1a3d8 <eint3_enable_port2>
   13dbe:	2005      	movs	r0, #5
   13dc0:	2100      	movs	r1, #0
   13dc2:	4a09      	ldr	r2, [pc, #36]	; (13de8 <SWITCH::sw_init()+0x58>)
   13dc4:	f006 fb08 	bl	1a3d8 <eint3_enable_port2>
   13dc8:	2006      	movs	r0, #6
   13dca:	2100      	movs	r1, #0
   13dcc:	4a07      	ldr	r2, [pc, #28]	; (13dec <SWITCH::sw_init()+0x5c>)
   13dce:	f006 fb03 	bl	1a3d8 <eint3_enable_port2>
   13dd2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
   13dd6:	2007      	movs	r0, #7
   13dd8:	2100      	movs	r1, #0
   13dda:	4a05      	ldr	r2, [pc, #20]	; (13df0 <SWITCH::sw_init()+0x60>)
   13ddc:	f006 bafc 	b.w	1a3d8 <eint3_enable_port2>
   13de0:	2009c040 	.word	0x2009c040
   13de4:	00013849 	.word	0x00013849
   13de8:	0001367d 	.word	0x0001367d
   13dec:	000136f9 	.word	0x000136f9
   13df0:	00013725 	.word	0x00013725

00013df4 <SWITCH::SWITCH(unsigned char)>:
_ZN6SWITCHC2Eh():
   13df4:	b513      	push	{r0, r1, r4, lr}
   13df6:	2200      	movs	r2, #0
   13df8:	460b      	mov	r3, r1
   13dfa:	9200      	str	r2, [sp, #0]
   13dfc:	4907      	ldr	r1, [pc, #28]	; (13e1c <SWITCH::SWITCH(unsigned char)+0x28>)
   13dfe:	f44f 6280 	mov.w	r2, #1024	; 0x400
   13e02:	4604      	mov	r4, r0
   13e04:	f005 fc54 	bl	196b0 <scheduler_task::scheduler_task(char const*, unsigned long, unsigned char, void*)>
   13e08:	4b05      	ldr	r3, [pc, #20]	; (13e20 <SWITCH::SWITCH(unsigned char)+0x2c>)
   13e0a:	4620      	mov	r0, r4
   13e0c:	6023      	str	r3, [r4, #0]
   13e0e:	f7ff ffbf 	bl	13d90 <SWITCH::sw_init()>
   13e12:	2319      	movs	r3, #25
   13e14:	4620      	mov	r0, r4
   13e16:	61e3      	str	r3, [r4, #28]
   13e18:	b002      	add	sp, #8
   13e1a:	bd10      	pop	{r4, pc}
   13e1c:	000267f4 	.word	0x000267f4
   13e20:	00026798 	.word	0x00026798

00013e24 <GLCD::display()>:
_ZN4GLCD7displayEv():
   13e24:	4ba3      	ldr	r3, [pc, #652]	; (140b4 <GLCD::display()+0x290>)
   13e26:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
   13e2a:	781a      	ldrb	r2, [r3, #0]
   13e2c:	4604      	mov	r4, r0
   13e2e:	b13a      	cbz	r2, 13e40 <GLCD::display()+0x1c>
   13e30:	2200      	movs	r2, #0
   13e32:	701a      	strb	r2, [r3, #0]
   13e34:	4ba0      	ldr	r3, [pc, #640]	; (140b8 <GLCD::display()+0x294>)
   13e36:	7819      	ldrb	r1, [r3, #0]
   13e38:	b101      	cbz	r1, 13e3c <GLCD::display()+0x18>
   13e3a:	210f      	movs	r1, #15
   13e3c:	f7ff fe62 	bl	13b04 <GLCD::GLCD_contrast(char)>
   13e40:	4e9e      	ldr	r6, [pc, #632]	; (140bc <GLCD::display()+0x298>)
   13e42:	79f3      	ldrb	r3, [r6, #7]
   13e44:	b1db      	cbz	r3, 13e7e <GLCD::display()+0x5a>
   13e46:	4d9e      	ldr	r5, [pc, #632]	; (140c0 <GLCD::display()+0x29c>)
   13e48:	2300      	movs	r3, #0
   13e4a:	71f3      	strb	r3, [r6, #7]
   13e4c:	782b      	ldrb	r3, [r5, #0]
   13e4e:	2b09      	cmp	r3, #9
   13e50:	bf84      	itt	hi
   13e52:	230a      	movhi	r3, #10
   13e54:	702b      	strbhi	r3, [r5, #0]
   13e56:	782b      	ldrb	r3, [r5, #0]
   13e58:	b90b      	cbnz	r3, 13e5e <GLCD::display()+0x3a>
   13e5a:	4a99      	ldr	r2, [pc, #612]	; (140c0 <GLCD::display()+0x29c>)
   13e5c:	7013      	strb	r3, [r2, #0]
   13e5e:	2300      	movs	r3, #0
   13e60:	9300      	str	r3, [sp, #0]
   13e62:	f995 2000 	ldrsb.w	r2, [r5]
   13e66:	4620      	mov	r0, r4
   13e68:	9201      	str	r2, [sp, #4]
   13e6a:	2101      	movs	r1, #1
   13e6c:	2208      	movs	r2, #8
   13e6e:	f7ff fd77 	bl	13960 <GLCD::GLCD_write(char, char, char, char, char)>
   13e72:	4620      	mov	r0, r4
   13e74:	2102      	movs	r1, #2
   13e76:	2214      	movs	r2, #20
   13e78:	782b      	ldrb	r3, [r5, #0]
   13e7a:	f7ff fdcf 	bl	13a1c <GLCD::GLCD_write_int(char, char, int)>
   13e7e:	78b3      	ldrb	r3, [r6, #2]
   13e80:	2b00      	cmp	r3, #0
   13e82:	d072      	beq.n	13f6a <GLCD::display()+0x146>
   13e84:	4a8d      	ldr	r2, [pc, #564]	; (140bc <GLCD::display()+0x298>)
   13e86:	4d8f      	ldr	r5, [pc, #572]	; (140c4 <GLCD::display()+0x2a0>)
   13e88:	2300      	movs	r3, #0
   13e8a:	7093      	strb	r3, [r2, #2]
   13e8c:	782a      	ldrb	r2, [r5, #0]
   13e8e:	2a0b      	cmp	r2, #11
   13e90:	d902      	bls.n	13e98 <GLCD::display()+0x74>
   13e92:	220c      	movs	r2, #12
   13e94:	702a      	strb	r2, [r5, #0]
   13e96:	e001      	b.n	13e9c <GLCD::display()+0x78>
   13e98:	b902      	cbnz	r2, 13e9c <GLCD::display()+0x78>
   13e9a:	702b      	strb	r3, [r5, #0]
   13e9c:	9300      	str	r3, [sp, #0]
   13e9e:	782b      	ldrb	r3, [r5, #0]
   13ea0:	2101      	movs	r1, #1
   13ea2:	f1c3 030c 	rsb	r3, r3, #12
   13ea6:	b25b      	sxtb	r3, r3
   13ea8:	9301      	str	r3, [sp, #4]
   13eaa:	4620      	mov	r0, r4
   13eac:	460b      	mov	r3, r1
   13eae:	220b      	movs	r2, #11
   13eb0:	f7ff fd56 	bl	13960 <GLCD::GLCD_write(char, char, char, char, char)>
   13eb4:	782b      	ldrb	r3, [r5, #0]
   13eb6:	4620      	mov	r0, r4
   13eb8:	2102      	movs	r1, #2
   13eba:	2210      	movs	r2, #16
   13ebc:	f7ff fdae 	bl	13a1c <GLCD::GLCD_write_int(char, char, int)>
   13ec0:	786b      	ldrb	r3, [r5, #1]
   13ec2:	4f80      	ldr	r7, [pc, #512]	; (140c4 <GLCD::display()+0x2a0>)
   13ec4:	2b0b      	cmp	r3, #11
   13ec6:	d901      	bls.n	13ecc <GLCD::display()+0xa8>
   13ec8:	230c      	movs	r3, #12
   13eca:	e000      	b.n	13ece <GLCD::display()+0xaa>
   13ecc:	b903      	cbnz	r3, 13ed0 <GLCD::display()+0xac>
   13ece:	707b      	strb	r3, [r7, #1]
   13ed0:	f04f 0800 	mov.w	r8, #0
   13ed4:	f8cd 8000 	str.w	r8, [sp]
   13ed8:	786b      	ldrb	r3, [r5, #1]
   13eda:	4620      	mov	r0, r4
   13edc:	f1c3 030c 	rsb	r3, r3, #12
   13ee0:	b25b      	sxtb	r3, r3
   13ee2:	9301      	str	r3, [sp, #4]
   13ee4:	2101      	movs	r1, #1
   13ee6:	220b      	movs	r2, #11
   13ee8:	2302      	movs	r3, #2
   13eea:	f7ff fd39 	bl	13960 <GLCD::GLCD_write(char, char, char, char, char)>
   13eee:	220f      	movs	r2, #15
   13ef0:	786b      	ldrb	r3, [r5, #1]
   13ef2:	4620      	mov	r0, r4
   13ef4:	2102      	movs	r1, #2
   13ef6:	f7ff fd91 	bl	13a1c <GLCD::GLCD_write_int(char, char, int)>
   13efa:	78aa      	ldrb	r2, [r5, #2]
   13efc:	4f71      	ldr	r7, [pc, #452]	; (140c4 <GLCD::display()+0x2a0>)
   13efe:	2a0b      	cmp	r2, #11
   13f00:	4643      	mov	r3, r8
   13f02:	d902      	bls.n	13f0a <GLCD::display()+0xe6>
   13f04:	220c      	movs	r2, #12
   13f06:	70ba      	strb	r2, [r7, #2]
   13f08:	e002      	b.n	13f10 <GLCD::display()+0xec>
   13f0a:	b90a      	cbnz	r2, 13f10 <GLCD::display()+0xec>
   13f0c:	f887 8002 	strb.w	r8, [r7, #2]
   13f10:	9300      	str	r3, [sp, #0]
   13f12:	78ab      	ldrb	r3, [r5, #2]
   13f14:	4620      	mov	r0, r4
   13f16:	f1c3 030c 	rsb	r3, r3, #12
   13f1a:	b25b      	sxtb	r3, r3
   13f1c:	9301      	str	r3, [sp, #4]
   13f1e:	2101      	movs	r1, #1
   13f20:	220b      	movs	r2, #11
   13f22:	2303      	movs	r3, #3
   13f24:	f7ff fd1c 	bl	13960 <GLCD::GLCD_write(char, char, char, char, char)>
   13f28:	78ab      	ldrb	r3, [r5, #2]
   13f2a:	4620      	mov	r0, r4
   13f2c:	2102      	movs	r1, #2
   13f2e:	220e      	movs	r2, #14
   13f30:	f7ff fd74 	bl	13a1c <GLCD::GLCD_write_int(char, char, int)>
   13f34:	78eb      	ldrb	r3, [r5, #3]
   13f36:	4f63      	ldr	r7, [pc, #396]	; (140c4 <GLCD::display()+0x2a0>)
   13f38:	2b0b      	cmp	r3, #11
   13f3a:	d901      	bls.n	13f40 <GLCD::display()+0x11c>
   13f3c:	230c      	movs	r3, #12
   13f3e:	e000      	b.n	13f42 <GLCD::display()+0x11e>
   13f40:	b903      	cbnz	r3, 13f44 <GLCD::display()+0x120>
   13f42:	70fb      	strb	r3, [r7, #3]
   13f44:	2300      	movs	r3, #0
   13f46:	9300      	str	r3, [sp, #0]
   13f48:	78eb      	ldrb	r3, [r5, #3]
   13f4a:	4620      	mov	r0, r4
   13f4c:	f1c3 030c 	rsb	r3, r3, #12
   13f50:	b25b      	sxtb	r3, r3
   13f52:	9301      	str	r3, [sp, #4]
   13f54:	2101      	movs	r1, #1
   13f56:	220b      	movs	r2, #11
   13f58:	2304      	movs	r3, #4
   13f5a:	f7ff fd01 	bl	13960 <GLCD::GLCD_write(char, char, char, char, char)>
   13f5e:	4620      	mov	r0, r4
   13f60:	2102      	movs	r1, #2
   13f62:	2211      	movs	r2, #17
   13f64:	78eb      	ldrb	r3, [r5, #3]
   13f66:	f7ff fd59 	bl	13a1c <GLCD::GLCD_write_int(char, char, int)>
   13f6a:	78f3      	ldrb	r3, [r6, #3]
   13f6c:	b343      	cbz	r3, 13fc0 <GLCD::display()+0x19c>
   13f6e:	4b53      	ldr	r3, [pc, #332]	; (140bc <GLCD::display()+0x298>)
   13f70:	4d55      	ldr	r5, [pc, #340]	; (140c8 <GLCD::display()+0x2a4>)
   13f72:	2200      	movs	r2, #0
   13f74:	70da      	strb	r2, [r3, #3]
   13f76:	786b      	ldrb	r3, [r5, #1]
   13f78:	2b63      	cmp	r3, #99	; 0x63
   13f7a:	d901      	bls.n	13f80 <GLCD::display()+0x15c>
   13f7c:	2364      	movs	r3, #100	; 0x64
   13f7e:	e000      	b.n	13f82 <GLCD::display()+0x15e>
   13f80:	b903      	cbnz	r3, 13f84 <GLCD::display()+0x160>
   13f82:	706b      	strb	r3, [r5, #1]
   13f84:	786b      	ldrb	r3, [r5, #1]
   13f86:	4620      	mov	r0, r4
   13f88:	2102      	movs	r1, #2
   13f8a:	2217      	movs	r2, #23
   13f8c:	f7ff fd46 	bl	13a1c <GLCD::GLCD_write_int(char, char, int)>
   13f90:	782b      	ldrb	r3, [r5, #0]
   13f92:	4f4d      	ldr	r7, [pc, #308]	; (140c8 <GLCD::display()+0x2a4>)
   13f94:	2b63      	cmp	r3, #99	; 0x63
   13f96:	d901      	bls.n	13f9c <GLCD::display()+0x178>
   13f98:	2364      	movs	r3, #100	; 0x64
   13f9a:	e000      	b.n	13f9e <GLCD::display()+0x17a>
   13f9c:	b903      	cbnz	r3, 13fa0 <GLCD::display()+0x17c>
   13f9e:	703b      	strb	r3, [r7, #0]
   13fa0:	4620      	mov	r0, r4
   13fa2:	2102      	movs	r1, #2
   13fa4:	2218      	movs	r2, #24
   13fa6:	782b      	ldrb	r3, [r5, #0]
   13fa8:	f7ff fd38 	bl	13a1c <GLCD::GLCD_write_int(char, char, int)>
   13fac:	2300      	movs	r3, #0
   13fae:	9300      	str	r3, [sp, #0]
   13fb0:	f995 2000 	ldrsb.w	r2, [r5]
   13fb4:	4620      	mov	r0, r4
   13fb6:	9201      	str	r2, [sp, #4]
   13fb8:	2101      	movs	r1, #1
   13fba:	220b      	movs	r2, #11
   13fbc:	f7ff fcd0 	bl	13960 <GLCD::GLCD_write(char, char, char, char, char)>
   13fc0:	7873      	ldrb	r3, [r6, #1]
   13fc2:	2b00      	cmp	r3, #0
   13fc4:	f000 80e7 	beq.w	14196 <GLCD::display()+0x372>
   13fc8:	4a3c      	ldr	r2, [pc, #240]	; (140bc <GLCD::display()+0x298>)
   13fca:	4d40      	ldr	r5, [pc, #256]	; (140cc <GLCD::display()+0x2a8>)
   13fcc:	2300      	movs	r3, #0
   13fce:	7053      	strb	r3, [r2, #1]
   13fd0:	782a      	ldrb	r2, [r5, #0]
   13fd2:	2a02      	cmp	r2, #2
   13fd4:	d906      	bls.n	13fe4 <GLCD::display()+0x1c0>
   13fd6:	2206      	movs	r2, #6
   13fd8:	702a      	strb	r2, [r5, #0]
   13fda:	4620      	mov	r0, r4
   13fdc:	9300      	str	r3, [sp, #0]
   13fde:	9301      	str	r3, [sp, #4]
   13fe0:	2101      	movs	r1, #1
   13fe2:	e003      	b.n	13fec <GLCD::display()+0x1c8>
   13fe4:	2101      	movs	r1, #1
   13fe6:	9300      	str	r3, [sp, #0]
   13fe8:	9101      	str	r1, [sp, #4]
   13fea:	4620      	mov	r0, r4
   13fec:	2213      	movs	r2, #19
   13fee:	f7ff fcb7 	bl	13960 <GLCD::GLCD_write(char, char, char, char, char)>
   13ff2:	786b      	ldrb	r3, [r5, #1]
   13ff4:	2b02      	cmp	r3, #2
   13ff6:	f04f 0300 	mov.w	r3, #0
   13ffa:	d907      	bls.n	1400c <GLCD::display()+0x1e8>
   13ffc:	4a33      	ldr	r2, [pc, #204]	; (140cc <GLCD::display()+0x2a8>)
   13ffe:	2106      	movs	r1, #6
   14000:	7051      	strb	r1, [r2, #1]
   14002:	4620      	mov	r0, r4
   14004:	9300      	str	r3, [sp, #0]
   14006:	9301      	str	r3, [sp, #4]
   14008:	2101      	movs	r1, #1
   1400a:	e003      	b.n	14014 <GLCD::display()+0x1f0>
   1400c:	2101      	movs	r1, #1
   1400e:	9300      	str	r3, [sp, #0]
   14010:	9101      	str	r1, [sp, #4]
   14012:	4620      	mov	r0, r4
   14014:	460b      	mov	r3, r1
   14016:	2213      	movs	r2, #19
   14018:	f7ff fca2 	bl	13960 <GLCD::GLCD_write(char, char, char, char, char)>
   1401c:	78ab      	ldrb	r3, [r5, #2]
   1401e:	2b02      	cmp	r3, #2
   14020:	f04f 0300 	mov.w	r3, #0
   14024:	d907      	bls.n	14036 <GLCD::display()+0x212>
   14026:	4a29      	ldr	r2, [pc, #164]	; (140cc <GLCD::display()+0x2a8>)
   14028:	2106      	movs	r1, #6
   1402a:	7091      	strb	r1, [r2, #2]
   1402c:	4620      	mov	r0, r4
   1402e:	9300      	str	r3, [sp, #0]
   14030:	9301      	str	r3, [sp, #4]
   14032:	2101      	movs	r1, #1
   14034:	e003      	b.n	1403e <GLCD::display()+0x21a>
   14036:	2101      	movs	r1, #1
   14038:	9300      	str	r3, [sp, #0]
   1403a:	9101      	str	r1, [sp, #4]
   1403c:	4620      	mov	r0, r4
   1403e:	2302      	movs	r3, #2
   14040:	2213      	movs	r2, #19
   14042:	f7ff fc8d 	bl	13960 <GLCD::GLCD_write(char, char, char, char, char)>
   14046:	78eb      	ldrb	r3, [r5, #3]
   14048:	2b02      	cmp	r3, #2
   1404a:	f04f 0300 	mov.w	r3, #0
   1404e:	d907      	bls.n	14060 <GLCD::display()+0x23c>
   14050:	4a1e      	ldr	r2, [pc, #120]	; (140cc <GLCD::display()+0x2a8>)
   14052:	2106      	movs	r1, #6
   14054:	70d1      	strb	r1, [r2, #3]
   14056:	4620      	mov	r0, r4
   14058:	9300      	str	r3, [sp, #0]
   1405a:	9301      	str	r3, [sp, #4]
   1405c:	2101      	movs	r1, #1
   1405e:	e003      	b.n	14068 <GLCD::display()+0x244>
   14060:	2101      	movs	r1, #1
   14062:	9300      	str	r3, [sp, #0]
   14064:	9101      	str	r1, [sp, #4]
   14066:	4620      	mov	r0, r4
   14068:	2303      	movs	r3, #3
   1406a:	2213      	movs	r2, #19
   1406c:	f7ff fc78 	bl	13960 <GLCD::GLCD_write(char, char, char, char, char)>
   14070:	792b      	ldrb	r3, [r5, #4]
   14072:	2b02      	cmp	r3, #2
   14074:	f04f 0300 	mov.w	r3, #0
   14078:	d907      	bls.n	1408a <GLCD::display()+0x266>
   1407a:	4a14      	ldr	r2, [pc, #80]	; (140cc <GLCD::display()+0x2a8>)
   1407c:	2106      	movs	r1, #6
   1407e:	7111      	strb	r1, [r2, #4]
   14080:	4620      	mov	r0, r4
   14082:	9300      	str	r3, [sp, #0]
   14084:	9301      	str	r3, [sp, #4]
   14086:	2101      	movs	r1, #1
   14088:	e003      	b.n	14092 <GLCD::display()+0x26e>
   1408a:	2101      	movs	r1, #1
   1408c:	9300      	str	r3, [sp, #0]
   1408e:	9101      	str	r1, [sp, #4]
   14090:	4620      	mov	r0, r4
   14092:	2304      	movs	r3, #4
   14094:	2213      	movs	r2, #19
   14096:	f7ff fc63 	bl	13960 <GLCD::GLCD_write(char, char, char, char, char)>
   1409a:	796b      	ldrb	r3, [r5, #5]
   1409c:	2b02      	cmp	r3, #2
   1409e:	f04f 0300 	mov.w	r3, #0
   140a2:	d915      	bls.n	140d0 <GLCD::display()+0x2ac>
   140a4:	4a09      	ldr	r2, [pc, #36]	; (140cc <GLCD::display()+0x2a8>)
   140a6:	2106      	movs	r1, #6
   140a8:	7151      	strb	r1, [r2, #5]
   140aa:	4620      	mov	r0, r4
   140ac:	9300      	str	r3, [sp, #0]
   140ae:	9301      	str	r3, [sp, #4]
   140b0:	2101      	movs	r1, #1
   140b2:	e011      	b.n	140d8 <GLCD::display()+0x2b4>
   140b4:	2007c7a2 	.word	0x2007c7a2
   140b8:	2007c024 	.word	0x2007c024
   140bc:	2007c763 	.word	0x2007c763
   140c0:	2007c794 	.word	0x2007c794
   140c4:	2007c77c 	.word	0x2007c77c
   140c8:	2007c79e 	.word	0x2007c79e
   140cc:	2007c798 	.word	0x2007c798
   140d0:	2101      	movs	r1, #1
   140d2:	9300      	str	r3, [sp, #0]
   140d4:	9101      	str	r1, [sp, #4]
   140d6:	4620      	mov	r0, r4
   140d8:	4d92      	ldr	r5, [pc, #584]	; (14324 <GLCD::display()+0x500>)
   140da:	2213      	movs	r2, #19
   140dc:	2305      	movs	r3, #5
   140de:	f7ff fc3f 	bl	13960 <GLCD::GLCD_write(char, char, char, char, char)>
   140e2:	2102      	movs	r1, #2
   140e4:	460a      	mov	r2, r1
   140e6:	88ab      	ldrh	r3, [r5, #4]
   140e8:	4620      	mov	r0, r4
   140ea:	f7ff fc97 	bl	13a1c <GLCD::GLCD_write_int(char, char, int)>
   140ee:	882b      	ldrh	r3, [r5, #0]
   140f0:	4d8d      	ldr	r5, [pc, #564]	; (14328 <GLCD::display()+0x504>)
   140f2:	4620      	mov	r0, r4
   140f4:	2102      	movs	r1, #2
   140f6:	2208      	movs	r2, #8
   140f8:	f7ff fc90 	bl	13a1c <GLCD::GLCD_write_int(char, char, int)>
   140fc:	88ab      	ldrh	r3, [r5, #4]
   140fe:	4620      	mov	r0, r4
   14100:	2102      	movs	r1, #2
   14102:	2203      	movs	r2, #3
   14104:	f7ff fc8a 	bl	13a1c <GLCD::GLCD_write_int(char, char, int)>
   14108:	882b      	ldrh	r3, [r5, #0]
   1410a:	4d88      	ldr	r5, [pc, #544]	; (1432c <GLCD::display()+0x508>)
   1410c:	4620      	mov	r0, r4
   1410e:	2102      	movs	r1, #2
   14110:	2209      	movs	r2, #9
   14112:	f7ff fc83 	bl	13a1c <GLCD::GLCD_write_int(char, char, int)>
   14116:	88ab      	ldrh	r3, [r5, #4]
   14118:	4620      	mov	r0, r4
   1411a:	2102      	movs	r1, #2
   1411c:	2204      	movs	r2, #4
   1411e:	f7ff fc7d 	bl	13a1c <GLCD::GLCD_write_int(char, char, int)>
   14122:	882b      	ldrh	r3, [r5, #0]
   14124:	4d82      	ldr	r5, [pc, #520]	; (14330 <GLCD::display()+0x50c>)
   14126:	4620      	mov	r0, r4
   14128:	2102      	movs	r1, #2
   1412a:	220a      	movs	r2, #10
   1412c:	f7ff fc76 	bl	13a1c <GLCD::GLCD_write_int(char, char, int)>
   14130:	88ab      	ldrh	r3, [r5, #4]
   14132:	4620      	mov	r0, r4
   14134:	2102      	movs	r1, #2
   14136:	2205      	movs	r2, #5
   14138:	f7ff fc70 	bl	13a1c <GLCD::GLCD_write_int(char, char, int)>
   1413c:	882b      	ldrh	r3, [r5, #0]
   1413e:	4d7d      	ldr	r5, [pc, #500]	; (14334 <GLCD::display()+0x510>)
   14140:	4620      	mov	r0, r4
   14142:	2102      	movs	r1, #2
   14144:	220b      	movs	r2, #11
   14146:	f7ff fc69 	bl	13a1c <GLCD::GLCD_write_int(char, char, int)>
   1414a:	4620      	mov	r0, r4
   1414c:	2102      	movs	r1, #2
   1414e:	2206      	movs	r2, #6
   14150:	88ab      	ldrh	r3, [r5, #4]
   14152:	f7ff fc63 	bl	13a1c <GLCD::GLCD_write_int(char, char, int)>
   14156:	2102      	movs	r1, #2
   14158:	220c      	movs	r2, #12
   1415a:	882b      	ldrh	r3, [r5, #0]
   1415c:	4620      	mov	r0, r4
   1415e:	f7ff fc5d 	bl	13a1c <GLCD::GLCD_write_int(char, char, int)>
   14162:	4875      	ldr	r0, [pc, #468]	; (14338 <GLCD::display()+0x514>)
   14164:	f7fe fd12 	bl	12b8c <can_controller::get_tx_count()>
   14168:	2102      	movs	r1, #2
   1416a:	4603      	mov	r3, r0
   1416c:	2207      	movs	r2, #7
   1416e:	4620      	mov	r0, r4
   14170:	f7ff fc54 	bl	13a1c <GLCD::GLCD_write_int(char, char, int)>
   14174:	4870      	ldr	r0, [pc, #448]	; (14338 <GLCD::display()+0x514>)
   14176:	f7fe fd05 	bl	12b84 <can_controller::get_rx_count()>
   1417a:	2102      	movs	r1, #2
   1417c:	4603      	mov	r3, r0
   1417e:	220d      	movs	r2, #13
   14180:	4620      	mov	r0, r4
   14182:	f7ff fc4b 	bl	13a1c <GLCD::GLCD_write_int(char, char, int)>
   14186:	2102      	movs	r1, #2
   14188:	4b6c      	ldr	r3, [pc, #432]	; (1433c <GLCD::display()+0x518>)
   1418a:	9100      	str	r1, [sp, #0]
   1418c:	4620      	mov	r0, r4
   1418e:	2226      	movs	r2, #38	; 0x26
   14190:	681b      	ldr	r3, [r3, #0]
   14192:	f7ff fc79 	bl	13a88 <GLCD::GLCD_write_float(char, char, float, unsigned char)>
   14196:	7833      	ldrb	r3, [r6, #0]
   14198:	b333      	cbz	r3, 141e8 <GLCD::display()+0x3c4>
   1419a:	4b69      	ldr	r3, [pc, #420]	; (14340 <GLCD::display()+0x51c>)
   1419c:	2200      	movs	r2, #0
   1419e:	701a      	strb	r2, [r3, #0]
   141a0:	4620      	mov	r0, r4
   141a2:	2102      	movs	r1, #2
   141a4:	221d      	movs	r2, #29
   141a6:	4b67      	ldr	r3, [pc, #412]	; (14344 <GLCD::display()+0x520>)
   141a8:	f7ff fc06 	bl	139b8 <GLCD::GLCD_write_str(char, char, char*)>
   141ac:	4620      	mov	r0, r4
   141ae:	2102      	movs	r1, #2
   141b0:	221e      	movs	r2, #30
   141b2:	4b64      	ldr	r3, [pc, #400]	; (14344 <GLCD::display()+0x520>)
   141b4:	f7ff fc00 	bl	139b8 <GLCD::GLCD_write_str(char, char, char*)>
   141b8:	4620      	mov	r0, r4
   141ba:	2102      	movs	r1, #2
   141bc:	221f      	movs	r2, #31
   141be:	4b61      	ldr	r3, [pc, #388]	; (14344 <GLCD::display()+0x520>)
   141c0:	f7ff fbfa 	bl	139b8 <GLCD::GLCD_write_str(char, char, char*)>
   141c4:	4620      	mov	r0, r4
   141c6:	2102      	movs	r1, #2
   141c8:	2220      	movs	r2, #32
   141ca:	4b5e      	ldr	r3, [pc, #376]	; (14344 <GLCD::display()+0x520>)
   141cc:	f7ff fbf4 	bl	139b8 <GLCD::GLCD_write_str(char, char, char*)>
   141d0:	4620      	mov	r0, r4
   141d2:	2102      	movs	r1, #2
   141d4:	2221      	movs	r2, #33	; 0x21
   141d6:	4b5b      	ldr	r3, [pc, #364]	; (14344 <GLCD::display()+0x520>)
   141d8:	f7ff fbee 	bl	139b8 <GLCD::GLCD_write_str(char, char, char*)>
   141dc:	4620      	mov	r0, r4
   141de:	2102      	movs	r1, #2
   141e0:	2222      	movs	r2, #34	; 0x22
   141e2:	4b58      	ldr	r3, [pc, #352]	; (14344 <GLCD::display()+0x520>)
   141e4:	f7ff fbe8 	bl	139b8 <GLCD::GLCD_write_str(char, char, char*)>
   141e8:	4b57      	ldr	r3, [pc, #348]	; (14348 <GLCD::display()+0x524>)
   141ea:	781a      	ldrb	r2, [r3, #0]
   141ec:	b162      	cbz	r2, 14208 <GLCD::display()+0x3e4>
   141ee:	2200      	movs	r2, #0
   141f0:	701a      	strb	r2, [r3, #0]
   141f2:	4b56      	ldr	r3, [pc, #344]	; (1434c <GLCD::display()+0x528>)
   141f4:	4620      	mov	r0, r4
   141f6:	781b      	ldrb	r3, [r3, #0]
   141f8:	2102      	movs	r1, #2
   141fa:	2216      	movs	r2, #22
   141fc:	b10b      	cbz	r3, 14202 <GLCD::display()+0x3de>
   141fe:	4b54      	ldr	r3, [pc, #336]	; (14350 <GLCD::display()+0x52c>)
   14200:	e000      	b.n	14204 <GLCD::display()+0x3e0>
   14202:	4b54      	ldr	r3, [pc, #336]	; (14354 <GLCD::display()+0x530>)
   14204:	f7ff fbd8 	bl	139b8 <GLCD::GLCD_write_str(char, char, char*)>
   14208:	7ab3      	ldrb	r3, [r6, #10]
   1420a:	2b00      	cmp	r3, #0
   1420c:	d030      	beq.n	14270 <GLCD::display()+0x44c>
   1420e:	4b4c      	ldr	r3, [pc, #304]	; (14340 <GLCD::display()+0x51c>)
   14210:	2200      	movs	r2, #0
   14212:	729a      	strb	r2, [r3, #10]
   14214:	4b50      	ldr	r3, [pc, #320]	; (14358 <GLCD::display()+0x534>)
   14216:	4620      	mov	r0, r4
   14218:	781d      	ldrb	r5, [r3, #0]
   1421a:	2d02      	cmp	r5, #2
   1421c:	d017      	beq.n	1424e <GLCD::display()+0x42a>
   1421e:	2d03      	cmp	r5, #3
   14220:	f04f 0102 	mov.w	r1, #2
   14224:	f04f 0225 	mov.w	r2, #37	; 0x25
   14228:	d009      	beq.n	1423e <GLCD::display()+0x41a>
   1422a:	2d01      	cmp	r5, #1
   1422c:	d117      	bne.n	1425e <GLCD::display()+0x43a>
   1422e:	4b4b      	ldr	r3, [pc, #300]	; (1435c <GLCD::display()+0x538>)
   14230:	f7ff fbc2 	bl	139b8 <GLCD::GLCD_write_str(char, char, char*)>
   14234:	4620      	mov	r0, r4
   14236:	2102      	movs	r1, #2
   14238:	2223      	movs	r2, #35	; 0x23
   1423a:	4b48      	ldr	r3, [pc, #288]	; (1435c <GLCD::display()+0x538>)
   1423c:	e016      	b.n	1426c <GLCD::display()+0x448>
   1423e:	4b48      	ldr	r3, [pc, #288]	; (14360 <GLCD::display()+0x53c>)
   14240:	f7ff fbba 	bl	139b8 <GLCD::GLCD_write_str(char, char, char*)>
   14244:	4620      	mov	r0, r4
   14246:	2102      	movs	r1, #2
   14248:	2223      	movs	r2, #35	; 0x23
   1424a:	4b45      	ldr	r3, [pc, #276]	; (14360 <GLCD::display()+0x53c>)
   1424c:	e00e      	b.n	1426c <GLCD::display()+0x448>
   1424e:	4629      	mov	r1, r5
   14250:	2225      	movs	r2, #37	; 0x25
   14252:	4b44      	ldr	r3, [pc, #272]	; (14364 <GLCD::display()+0x540>)
   14254:	f7ff fbb0 	bl	139b8 <GLCD::GLCD_write_str(char, char, char*)>
   14258:	4620      	mov	r0, r4
   1425a:	4629      	mov	r1, r5
   1425c:	e004      	b.n	14268 <GLCD::display()+0x444>
   1425e:	4b41      	ldr	r3, [pc, #260]	; (14364 <GLCD::display()+0x540>)
   14260:	f7ff fbaa 	bl	139b8 <GLCD::GLCD_write_str(char, char, char*)>
   14264:	4620      	mov	r0, r4
   14266:	2102      	movs	r1, #2
   14268:	4b3e      	ldr	r3, [pc, #248]	; (14364 <GLCD::display()+0x540>)
   1426a:	2223      	movs	r2, #35	; 0x23
   1426c:	f7ff fba4 	bl	139b8 <GLCD::GLCD_write_str(char, char, char*)>
   14270:	7a73      	ldrb	r3, [r6, #9]
   14272:	2b00      	cmp	r3, #0
   14274:	d037      	beq.n	142e6 <GLCD::display()+0x4c2>
   14276:	4b32      	ldr	r3, [pc, #200]	; (14340 <GLCD::display()+0x51c>)
   14278:	2200      	movs	r2, #0
   1427a:	725a      	strb	r2, [r3, #9]
   1427c:	4b3a      	ldr	r3, [pc, #232]	; (14368 <GLCD::display()+0x544>)
   1427e:	781d      	ldrb	r5, [r3, #0]
   14280:	2d02      	cmp	r5, #2
   14282:	d019      	beq.n	142b8 <GLCD::display()+0x494>
   14284:	2d03      	cmp	r5, #3
   14286:	d00c      	beq.n	142a2 <GLCD::display()+0x47e>
   14288:	2d01      	cmp	r5, #1
   1428a:	d120      	bne.n	142ce <GLCD::display()+0x4aa>
   1428c:	4620      	mov	r0, r4
   1428e:	2102      	movs	r1, #2
   14290:	2215      	movs	r2, #21
   14292:	4b36      	ldr	r3, [pc, #216]	; (1436c <GLCD::display()+0x548>)
   14294:	f7ff fb90 	bl	139b8 <GLCD::GLCD_write_str(char, char, char*)>
   14298:	4620      	mov	r0, r4
   1429a:	2102      	movs	r1, #2
   1429c:	2224      	movs	r2, #36	; 0x24
   1429e:	4b33      	ldr	r3, [pc, #204]	; (1436c <GLCD::display()+0x548>)
   142a0:	e01f      	b.n	142e2 <GLCD::display()+0x4be>
   142a2:	4620      	mov	r0, r4
   142a4:	2102      	movs	r1, #2
   142a6:	2215      	movs	r2, #21
   142a8:	4b31      	ldr	r3, [pc, #196]	; (14370 <GLCD::display()+0x54c>)
   142aa:	f7ff fb85 	bl	139b8 <GLCD::GLCD_write_str(char, char, char*)>
   142ae:	4620      	mov	r0, r4
   142b0:	2102      	movs	r1, #2
   142b2:	2224      	movs	r2, #36	; 0x24
   142b4:	4b2e      	ldr	r3, [pc, #184]	; (14370 <GLCD::display()+0x54c>)
   142b6:	e014      	b.n	142e2 <GLCD::display()+0x4be>
   142b8:	4620      	mov	r0, r4
   142ba:	4629      	mov	r1, r5
   142bc:	2215      	movs	r2, #21
   142be:	4b2d      	ldr	r3, [pc, #180]	; (14374 <GLCD::display()+0x550>)
   142c0:	f7ff fb7a 	bl	139b8 <GLCD::GLCD_write_str(char, char, char*)>
   142c4:	4620      	mov	r0, r4
   142c6:	4629      	mov	r1, r5
   142c8:	2224      	movs	r2, #36	; 0x24
   142ca:	4b2a      	ldr	r3, [pc, #168]	; (14374 <GLCD::display()+0x550>)
   142cc:	e009      	b.n	142e2 <GLCD::display()+0x4be>
   142ce:	4620      	mov	r0, r4
   142d0:	2102      	movs	r1, #2
   142d2:	2215      	movs	r2, #21
   142d4:	4b28      	ldr	r3, [pc, #160]	; (14378 <GLCD::display()+0x554>)
   142d6:	f7ff fb6f 	bl	139b8 <GLCD::GLCD_write_str(char, char, char*)>
   142da:	4b27      	ldr	r3, [pc, #156]	; (14378 <GLCD::display()+0x554>)
   142dc:	4620      	mov	r0, r4
   142de:	2102      	movs	r1, #2
   142e0:	2224      	movs	r2, #36	; 0x24
   142e2:	f7ff fb69 	bl	139b8 <GLCD::GLCD_write_str(char, char, char*)>
   142e6:	7933      	ldrb	r3, [r6, #4]
   142e8:	2b00      	cmp	r3, #0
   142ea:	d04e      	beq.n	1438a <GLCD::display()+0x566>
   142ec:	4d23      	ldr	r5, [pc, #140]	; (1437c <GLCD::display()+0x558>)
   142ee:	4b14      	ldr	r3, [pc, #80]	; (14340 <GLCD::display()+0x51c>)
   142f0:	2200      	movs	r2, #0
   142f2:	711a      	strb	r2, [r3, #4]
   142f4:	78ab      	ldrb	r3, [r5, #2]
   142f6:	4620      	mov	r0, r4
   142f8:	2b01      	cmp	r3, #1
   142fa:	bf18      	it	ne
   142fc:	4613      	movne	r3, r2
   142fe:	4a20      	ldr	r2, [pc, #128]	; (14380 <GLCD::display()+0x55c>)
   14300:	2102      	movs	r1, #2
   14302:	7013      	strb	r3, [r2, #0]
   14304:	2213      	movs	r2, #19
   14306:	782b      	ldrb	r3, [r5, #0]
   14308:	f7ff fb88 	bl	13a1c <GLCD::GLCD_write_int(char, char, int)>
   1430c:	78eb      	ldrb	r3, [r5, #3]
   1430e:	4620      	mov	r0, r4
   14310:	2b01      	cmp	r3, #1
   14312:	f04f 0102 	mov.w	r1, #2
   14316:	f04f 0212 	mov.w	r2, #18
   1431a:	d133      	bne.n	14384 <GLCD::display()+0x560>
   1431c:	786b      	ldrb	r3, [r5, #1]
   1431e:	f7ff fb7d 	bl	13a1c <GLCD::GLCD_write_int(char, char, int)>
   14322:	e032      	b.n	1438a <GLCD::display()+0x566>
   14324:	2007c7c2 	.word	0x2007c7c2
   14328:	2007c756 	.word	0x2007c756
   1432c:	2007c7a4 	.word	0x2007c7a4
   14330:	2007c7cc 	.word	0x2007c7cc
   14334:	2007c76e 	.word	0x2007c76e
   14338:	2007c746 	.word	0x2007c746
   1433c:	2007c7b0 	.word	0x2007c7b0
   14340:	2007c763 	.word	0x2007c763
   14344:	000267fb 	.word	0x000267fb
   14348:	2007c782 	.word	0x2007c782
   1434c:	2007c7d5 	.word	0x2007c7d5
   14350:	000264e4 	.word	0x000264e4
   14354:	000267ff 	.word	0x000267ff
   14358:	2007c776 	.word	0x2007c776
   1435c:	00026806 	.word	0x00026806
   14360:	0002680f 	.word	0x0002680f
   14364:	00026818 	.word	0x00026818
   14368:	2007c7d7 	.word	0x2007c7d7
   1436c:	0002682a 	.word	0x0002682a
   14370:	00026820 	.word	0x00026820
   14374:	00026825 	.word	0x00026825
   14378:	0002682f 	.word	0x0002682f
   1437c:	2007c75e 	.word	0x2007c75e
   14380:	2007c7a3 	.word	0x2007c7a3
   14384:	4b36      	ldr	r3, [pc, #216]	; (14460 <GLCD::display()+0x63c>)
   14386:	f7ff fb17 	bl	139b8 <GLCD::GLCD_write_str(char, char, char*)>
   1438a:	7973      	ldrb	r3, [r6, #5]
   1438c:	2b00      	cmp	r3, #0
   1438e:	d050      	beq.n	14432 <GLCD::display()+0x60e>
   14390:	4d34      	ldr	r5, [pc, #208]	; (14464 <GLCD::display()+0x640>)
   14392:	4a35      	ldr	r2, [pc, #212]	; (14468 <GLCD::display()+0x644>)
   14394:	7b2e      	ldrb	r6, [r5, #12]
   14396:	2300      	movs	r3, #0
   14398:	f016 0601 	ands.w	r6, r6, #1
   1439c:	7153      	strb	r3, [r2, #5]
   1439e:	d02e      	beq.n	143fe <GLCD::display()+0x5da>
   143a0:	4a32      	ldr	r2, [pc, #200]	; (1446c <GLCD::display()+0x648>)
   143a2:	4631      	mov	r1, r6
   143a4:	8912      	ldrh	r2, [r2, #8]
   143a6:	9300      	str	r3, [sp, #0]
   143a8:	892b      	ldrh	r3, [r5, #8]
   143aa:	4620      	mov	r0, r4
   143ac:	1ad3      	subs	r3, r2, r3
   143ae:	fb93 f3f2 	sdiv	r3, r3, r2
   143b2:	eb03 0383 	add.w	r3, r3, r3, lsl #2
   143b6:	eb03 0383 	add.w	r3, r3, r3, lsl #2
   143ba:	009b      	lsls	r3, r3, #2
   143bc:	b25b      	sxtb	r3, r3
   143be:	9301      	str	r3, [sp, #4]
   143c0:	220b      	movs	r2, #11
   143c2:	2305      	movs	r3, #5
   143c4:	f7ff facc 	bl	13960 <GLCD::GLCD_write(char, char, char, char, char)>
   143c8:	8928      	ldrh	r0, [r5, #8]
   143ca:	f009 fd6d 	bl	1dea8 <__aeabi_ui2f>
   143ce:	2203      	movs	r2, #3
   143d0:	4603      	mov	r3, r0
   143d2:	9200      	str	r2, [sp, #0]
   143d4:	4620      	mov	r0, r4
   143d6:	4632      	mov	r2, r6
   143d8:	2102      	movs	r1, #2
   143da:	2606      	movs	r6, #6
   143dc:	f7ff fb54 	bl	13a88 <GLCD::GLCD_write_float(char, char, float, unsigned char)>
   143e0:	9600      	str	r6, [sp, #0]
   143e2:	4620      	mov	r0, r4
   143e4:	686b      	ldr	r3, [r5, #4]
   143e6:	2102      	movs	r1, #2
   143e8:	221b      	movs	r2, #27
   143ea:	f7ff fb4d 	bl	13a88 <GLCD::GLCD_write_float(char, char, float, unsigned char)>
   143ee:	9600      	str	r6, [sp, #0]
   143f0:	4620      	mov	r0, r4
   143f2:	2102      	movs	r1, #2
   143f4:	221c      	movs	r2, #28
   143f6:	682b      	ldr	r3, [r5, #0]
   143f8:	f7ff fb46 	bl	13a88 <GLCD::GLCD_write_float(char, char, float, unsigned char)>
   143fc:	e019      	b.n	14432 <GLCD::display()+0x60e>
   143fe:	9300      	str	r3, [sp, #0]
   14400:	9301      	str	r3, [sp, #4]
   14402:	4620      	mov	r0, r4
   14404:	2101      	movs	r1, #1
   14406:	220b      	movs	r2, #11
   14408:	2305      	movs	r3, #5
   1440a:	f7ff faa9 	bl	13960 <GLCD::GLCD_write(char, char, char, char, char)>
   1440e:	4620      	mov	r0, r4
   14410:	2102      	movs	r1, #2
   14412:	2201      	movs	r2, #1
   14414:	4b12      	ldr	r3, [pc, #72]	; (14460 <GLCD::display()+0x63c>)
   14416:	f7ff facf 	bl	139b8 <GLCD::GLCD_write_str(char, char, char*)>
   1441a:	4620      	mov	r0, r4
   1441c:	2102      	movs	r1, #2
   1441e:	221b      	movs	r2, #27
   14420:	4b0f      	ldr	r3, [pc, #60]	; (14460 <GLCD::display()+0x63c>)
   14422:	f7ff fac9 	bl	139b8 <GLCD::GLCD_write_str(char, char, char*)>
   14426:	4620      	mov	r0, r4
   14428:	2102      	movs	r1, #2
   1442a:	221c      	movs	r2, #28
   1442c:	4b0c      	ldr	r3, [pc, #48]	; (14460 <GLCD::display()+0x63c>)
   1442e:	f7ff fac3 	bl	139b8 <GLCD::GLCD_write_str(char, char, char*)>
   14432:	f7fe fa57 	bl	128e4 <SingletonTemplate<Acceleration_Sensor>::getInstance()>
   14436:	f001 f9c4 	bl	157c2 <Acceleration_Sensor::getX()>
   1443a:	2102      	movs	r1, #2
   1443c:	4603      	mov	r3, r0
   1443e:	221a      	movs	r2, #26
   14440:	4620      	mov	r0, r4
   14442:	f7ff faeb 	bl	13a1c <GLCD::GLCD_write_int(char, char, int)>
   14446:	f7fe fa4d 	bl	128e4 <SingletonTemplate<Acceleration_Sensor>::getInstance()>
   1444a:	f001 f9c3 	bl	157d4 <Acceleration_Sensor::getY()>
   1444e:	2102      	movs	r1, #2
   14450:	4603      	mov	r3, r0
   14452:	2219      	movs	r2, #25
   14454:	4620      	mov	r0, r4
   14456:	b002      	add	sp, #8
   14458:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   1445c:	f7ff bade 	b.w	13a1c <GLCD::GLCD_write_int(char, char, int)>
   14460:	00026835 	.word	0x00026835
   14464:	2007c784 	.word	0x2007c784
   14468:	2007c763 	.word	0x2007c763
   1446c:	2007c7b4 	.word	0x2007c7b4

00014470 <GLCD::run(void*)>:
_ZN4GLCD3runEPv():
   14470:	b510      	push	{r4, lr}
   14472:	4604      	mov	r4, r0
   14474:	f7ff fcd6 	bl	13e24 <GLCD::display()>
   14478:	4620      	mov	r0, r4
   1447a:	f7ff fb5b 	bl	13b34 <GLCD::touch_screen()>
   1447e:	2001      	movs	r0, #1
   14480:	bd10      	pop	{r4, pc}
	...

00014484 <UART2_IRQHandler>:
UART2_IRQHandler():
   14484:	b538      	push	{r3, r4, r5, lr}
   14486:	4b17      	ldr	r3, [pc, #92]	; (144e4 <UART2_IRQHandler+0x60>)
   14488:	689a      	ldr	r2, [r3, #8]
   1448a:	0752      	lsls	r2, r2, #29
   1448c:	d529      	bpl.n	144e2 <UART2_IRQHandler+0x5e>
   1448e:	781a      	ldrb	r2, [r3, #0]
   14490:	4c15      	ldr	r4, [pc, #84]	; (144e8 <UART2_IRQHandler+0x64>)
   14492:	2a07      	cmp	r2, #7
   14494:	7022      	strb	r2, [r4, #0]
   14496:	d124      	bne.n	144e2 <UART2_IRQHandler+0x5e>
   14498:	781a      	ldrb	r2, [r3, #0]
   1449a:	2a1e      	cmp	r2, #30
   1449c:	7022      	strb	r2, [r4, #0]
   1449e:	d120      	bne.n	144e2 <UART2_IRQHandler+0x5e>
   144a0:	781b      	ldrb	r3, [r3, #0]
   144a2:	7023      	strb	r3, [r4, #0]
   144a4:	b953      	cbnz	r3, 144bc <UART2_IRQHandler+0x38>
   144a6:	f7fd fbdb 	bl	11c60 <SingletonTemplate<LED>::getInstance()>
   144aa:	2101      	movs	r1, #1
   144ac:	f001 fa2a 	bl	15904 <LED::on(int)>
   144b0:	480e      	ldr	r0, [pc, #56]	; (144ec <UART2_IRQHandler+0x68>)
   144b2:	f00b f8db 	bl	1f66c <iprintf>
   144b6:	4b0e      	ldr	r3, [pc, #56]	; (144f0 <UART2_IRQHandler+0x6c>)
   144b8:	2201      	movs	r2, #1
   144ba:	701a      	strb	r2, [r3, #0]
   144bc:	f994 5000 	ldrsb.w	r5, [r4]
   144c0:	2d01      	cmp	r5, #1
   144c2:	d109      	bne.n	144d8 <UART2_IRQHandler+0x54>
   144c4:	f7fd fbcc 	bl	11c60 <SingletonTemplate<LED>::getInstance()>
   144c8:	4629      	mov	r1, r5
   144ca:	f001 fa26 	bl	1591a <LED::off(int)>
   144ce:	4809      	ldr	r0, [pc, #36]	; (144f4 <UART2_IRQHandler+0x70>)
   144d0:	f00b f8cc 	bl	1f66c <iprintf>
   144d4:	4b08      	ldr	r3, [pc, #32]	; (144f8 <UART2_IRQHandler+0x74>)
   144d6:	701d      	strb	r5, [r3, #0]
   144d8:	4b02      	ldr	r3, [pc, #8]	; (144e4 <UART2_IRQHandler+0x60>)
   144da:	781a      	ldrb	r2, [r3, #0]
   144dc:	781a      	ldrb	r2, [r3, #0]
   144de:	781b      	ldrb	r3, [r3, #0]
   144e0:	7023      	strb	r3, [r4, #0]
   144e2:	bd38      	pop	{r3, r4, r5, pc}
   144e4:	40098000 	.word	0x40098000
   144e8:	2007c7a0 	.word	0x2007c7a0
   144ec:	0002683c 	.word	0x0002683c
   144f0:	2007c7c0 	.word	0x2007c7c0
   144f4:	0002684c 	.word	0x0002684c
   144f8:	2007c77b 	.word	0x2007c77b

000144fc <_GLOBAL__sub_I_head>:
_GLOBAL__sub_I_head():
   144fc:	b508      	push	{r3, lr}
   144fe:	2100      	movs	r1, #0
   14500:	2264      	movs	r2, #100	; 0x64
   14502:	480e      	ldr	r0, [pc, #56]	; (1453c <_GLOBAL__sub_I_head+0x40>)
   14504:	f005 ffd2 	bl	1a4ac <PWM::PWM(PWM::pwmType, unsigned int)>
   14508:	2264      	movs	r2, #100	; 0x64
   1450a:	480d      	ldr	r0, [pc, #52]	; (14540 <_GLOBAL__sub_I_head+0x44>)
   1450c:	2101      	movs	r1, #1
   1450e:	f005 ffcd 	bl	1a4ac <PWM::PWM(PWM::pwmType, unsigned int)>
   14512:	4a0c      	ldr	r2, [pc, #48]	; (14544 <_GLOBAL__sub_I_head+0x48>)
   14514:	2300      	movs	r3, #0
   14516:	7013      	strb	r3, [r2, #0]
   14518:	7053      	strb	r3, [r2, #1]
   1451a:	7093      	strb	r3, [r2, #2]
   1451c:	70d3      	strb	r3, [r2, #3]
   1451e:	7113      	strb	r3, [r2, #4]
   14520:	7153      	strb	r3, [r2, #5]
   14522:	4a09      	ldr	r2, [pc, #36]	; (14548 <_GLOBAL__sub_I_head+0x4c>)
   14524:	7013      	strb	r3, [r2, #0]
   14526:	7053      	strb	r3, [r2, #1]
   14528:	7093      	strb	r3, [r2, #2]
   1452a:	70d3      	strb	r3, [r2, #3]
   1452c:	7113      	strb	r3, [r2, #4]
   1452e:	7153      	strb	r3, [r2, #5]
   14530:	7193      	strb	r3, [r2, #6]
   14532:	71d3      	strb	r3, [r2, #7]
   14534:	7213      	strb	r3, [r2, #8]
   14536:	7253      	strb	r3, [r2, #9]
   14538:	7293      	strb	r3, [r2, #10]
   1453a:	bd08      	pop	{r3, pc}
   1453c:	2007c7da 	.word	0x2007c7da
   14540:	2007c781 	.word	0x2007c781
   14544:	2007c798 	.word	0x2007c798
   14548:	2007c763 	.word	0x2007c763

0001454c <main>:
main():
   1454c:	b510      	push	{r4, lr}
   1454e:	f7fe feed 	bl	1332c <controllerInit()>
   14552:	2090      	movs	r0, #144	; 0x90
   14554:	f7fb fe8c 	bl	10270 <operator new(unsigned int)>
   14558:	2102      	movs	r1, #2
   1455a:	4604      	mov	r4, r0
   1455c:	f7fd fec4 	bl	122e8 <terminalTask::terminalTask(unsigned char)>
   14560:	4620      	mov	r0, r4
   14562:	f005 f873 	bl	1964c <scheduler_add_task(scheduler_task*)>
   14566:	2034      	movs	r0, #52	; 0x34
   14568:	f7fb fe82 	bl	10270 <operator new(unsigned int)>
   1456c:	2103      	movs	r1, #3
   1456e:	4604      	mov	r4, r0
   14570:	f7fe fd6e 	bl	13050 <canRxBufferTask::canRxBufferTask(unsigned char)>
   14574:	4620      	mov	r0, r4
   14576:	f005 f869 	bl	1964c <scheduler_add_task(scheduler_task*)>
   1457a:	2034      	movs	r0, #52	; 0x34
   1457c:	f7fb fe78 	bl	10270 <operator new(unsigned int)>
   14580:	2102      	movs	r1, #2
   14582:	4604      	mov	r4, r0
   14584:	f7fe fd78 	bl	13078 <canRxProcessTask::canRxProcessTask(unsigned char)>
   14588:	4620      	mov	r0, r4
   1458a:	f005 f85f 	bl	1964c <scheduler_add_task(scheduler_task*)>
   1458e:	2000      	movs	r0, #0
   14590:	4601      	mov	r1, r0
   14592:	f005 f86b 	bl	1966c <scheduler_start(bool, bool)>
   14596:	f04f 30ff 	mov.w	r0, #4294967295
   1459a:	bd10      	pop	{r4, pc}

0001459c <mesh_incr_soft_timers_for_arr>:
mesh_incr_soft_timers_for_arr():
   1459c:	2324      	movs	r3, #36	; 0x24
   1459e:	b510      	push	{r4, lr}
   145a0:	fb03 0301 	mla	r3, r3, r1, r0
   145a4:	4298      	cmp	r0, r3
   145a6:	d00b      	beq.n	145c0 <mesh_incr_soft_timers_for_arr+0x24>
   145a8:	7841      	ldrb	r1, [r0, #1]
   145aa:	b139      	cbz	r1, 145bc <mesh_incr_soft_timers_for_arr+0x20>
   145ac:	8c01      	ldrh	r1, [r0, #32]
   145ae:	f64f 74ff 	movw	r4, #65535	; 0xffff
   145b2:	4411      	add	r1, r2
   145b4:	42a1      	cmp	r1, r4
   145b6:	bf28      	it	cs
   145b8:	4621      	movcs	r1, r4
   145ba:	8401      	strh	r1, [r0, #32]
   145bc:	3024      	adds	r0, #36	; 0x24
   145be:	e7f1      	b.n	145a4 <mesh_incr_soft_timers_for_arr+0x8>
   145c0:	bd10      	pop	{r4, pc}
	...

000145c4 <mesh_update_soft_timers>:
mesh_update_soft_timers():
   145c4:	b537      	push	{r0, r1, r2, r4, r5, lr}
   145c6:	2300      	movs	r3, #0
   145c8:	a802      	add	r0, sp, #8
   145ca:	f840 3d04 	str.w	r3, [r0, #-4]!
   145ce:	4b0c      	ldr	r3, [pc, #48]	; (14600 <mesh_update_soft_timers+0x3c>)
   145d0:	2104      	movs	r1, #4
   145d2:	685b      	ldr	r3, [r3, #4]
   145d4:	4798      	blx	r3
   145d6:	4b0b      	ldr	r3, [pc, #44]	; (14604 <mesh_update_soft_timers+0x40>)
   145d8:	9a01      	ldr	r2, [sp, #4]
   145da:	681c      	ldr	r4, [r3, #0]
   145dc:	4605      	mov	r5, r0
   145de:	1b14      	subs	r4, r2, r4
   145e0:	601a      	str	r2, [r3, #0]
   145e2:	4809      	ldr	r0, [pc, #36]	; (14608 <mesh_update_soft_timers+0x44>)
   145e4:	4622      	mov	r2, r4
   145e6:	2104      	movs	r1, #4
   145e8:	f7ff ffd8 	bl	1459c <mesh_incr_soft_timers_for_arr>
   145ec:	4807      	ldr	r0, [pc, #28]	; (1460c <mesh_update_soft_timers+0x48>)
   145ee:	2102      	movs	r1, #2
   145f0:	4622      	mov	r2, r4
   145f2:	f7ff ffd3 	bl	1459c <mesh_incr_soft_timers_for_arr>
   145f6:	1c28      	adds	r0, r5, #0
   145f8:	bf18      	it	ne
   145fa:	2001      	movne	r0, #1
   145fc:	b003      	add	sp, #12
   145fe:	bd30      	pop	{r4, r5, pc}
   14600:	2007c7dc 	.word	0x2007c7dc
   14604:	2007c8a4 	.word	0x2007c8a4
   14608:	2007c7f0 	.word	0x2007c7f0
   1460c:	2007c8c8 	.word	0x2007c8c8

00014610 <mesh_send_packet>:
mesh_send_packet():
   14610:	b508      	push	{r3, lr}
   14612:	4b0b      	ldr	r3, [pc, #44]	; (14640 <mesh_send_packet+0x30>)
   14614:	781a      	ldrb	r2, [r3, #0]
   14616:	7803      	ldrb	r3, [r0, #0]
   14618:	4293      	cmp	r3, r2
   1461a:	4b0a      	ldr	r3, [pc, #40]	; (14644 <mesh_send_packet+0x34>)
   1461c:	d103      	bne.n	14626 <mesh_send_packet+0x16>
   1461e:	8819      	ldrh	r1, [r3, #0]
   14620:	3101      	adds	r1, #1
   14622:	8019      	strh	r1, [r3, #0]
   14624:	e002      	b.n	1462c <mesh_send_packet+0x1c>
   14626:	8899      	ldrh	r1, [r3, #4]
   14628:	3101      	adds	r1, #1
   1462a:	8099      	strh	r1, [r3, #4]
   1462c:	4b06      	ldr	r3, [pc, #24]	; (14648 <mesh_send_packet+0x38>)
   1462e:	7082      	strb	r2, [r0, #2]
   14630:	68db      	ldr	r3, [r3, #12]
   14632:	2120      	movs	r1, #32
   14634:	4798      	blx	r3
   14636:	3000      	adds	r0, #0
   14638:	bf18      	it	ne
   1463a:	2001      	movne	r0, #1
   1463c:	bd08      	pop	{r3, pc}
   1463e:	bf00      	nop
   14640:	2007c02d 	.word	0x2007c02d
   14644:	2007c898 	.word	0x2007c898
   14648:	2007c7dc 	.word	0x2007c7dc

0001464c <mesh_send_retry_packet>:
mesh_send_retry_packet():
   1464c:	4b0a      	ldr	r3, [pc, #40]	; (14678 <mesh_send_retry_packet+0x2c>)
   1464e:	7802      	ldrb	r2, [r0, #0]
   14650:	781b      	ldrb	r3, [r3, #0]
   14652:	429a      	cmp	r2, r3
   14654:	4b09      	ldr	r3, [pc, #36]	; (1467c <mesh_send_retry_packet+0x30>)
   14656:	d103      	bne.n	14660 <mesh_send_retry_packet+0x14>
   14658:	88da      	ldrh	r2, [r3, #6]
   1465a:	3201      	adds	r2, #1
   1465c:	80da      	strh	r2, [r3, #6]
   1465e:	e002      	b.n	14666 <mesh_send_retry_packet+0x1a>
   14660:	891a      	ldrh	r2, [r3, #8]
   14662:	3201      	adds	r2, #1
   14664:	811a      	strh	r2, [r3, #8]
   14666:	7903      	ldrb	r3, [r0, #4]
   14668:	f3c3 02c2 	ubfx	r2, r3, #3, #3
   1466c:	3207      	adds	r2, #7
   1466e:	f362 03c5 	bfi	r3, r2, #3, #3
   14672:	7103      	strb	r3, [r0, #4]
   14674:	f7ff bfcc 	b.w	14610 <mesh_send_packet>
   14678:	2007c02d 	.word	0x2007c02d
   1467c:	2007c898 	.word	0x2007c898

00014680 <mesh_find_rte_tbl_entry>:
mesh_find_rte_tbl_entry():
   14680:	b510      	push	{r4, lr}
   14682:	2300      	movs	r3, #0
   14684:	4a06      	ldr	r2, [pc, #24]	; (146a0 <mesh_find_rte_tbl_entry+0x20>)
   14686:	0099      	lsls	r1, r3, #2
   14688:	f812 4023 	ldrb.w	r4, [r2, r3, lsl #2]
   1468c:	4284      	cmp	r4, r0
   1468e:	d101      	bne.n	14694 <mesh_find_rte_tbl_entry+0x14>
   14690:	1850      	adds	r0, r2, r1
   14692:	bd10      	pop	{r4, pc}
   14694:	3301      	adds	r3, #1
   14696:	2b04      	cmp	r3, #4
   14698:	d1f4      	bne.n	14684 <mesh_find_rte_tbl_entry+0x4>
   1469a:	2000      	movs	r0, #0
   1469c:	bd10      	pop	{r4, pc}
   1469e:	bf00      	nop
   146a0:	2007c8b5 	.word	0x2007c8b5

000146a4 <mesh_update_rte_scores>:
mesh_update_rte_scores():
   146a4:	b170      	cbz	r0, 146c4 <mesh_update_rte_scores+0x20>
   146a6:	78c3      	ldrb	r3, [r0, #3]
   146a8:	3301      	adds	r3, #1
   146aa:	b2db      	uxtb	r3, r3
   146ac:	2bff      	cmp	r3, #255	; 0xff
   146ae:	70c3      	strb	r3, [r0, #3]
   146b0:	d108      	bne.n	146c4 <mesh_update_rte_scores+0x20>
   146b2:	2300      	movs	r3, #0
   146b4:	4a04      	ldr	r2, [pc, #16]	; (146c8 <mesh_update_rte_scores+0x24>)
   146b6:	441a      	add	r2, r3
   146b8:	78d1      	ldrb	r1, [r2, #3]
   146ba:	3304      	adds	r3, #4
   146bc:	0849      	lsrs	r1, r1, #1
   146be:	2b10      	cmp	r3, #16
   146c0:	70d1      	strb	r1, [r2, #3]
   146c2:	d1f7      	bne.n	146b4 <mesh_update_rte_scores+0x10>
   146c4:	4770      	bx	lr
   146c6:	bf00      	nop
   146c8:	2007c8b5 	.word	0x2007c8b5

000146cc <mesh_get_pnd_pkt_slot>:
mesh_get_pnd_pkt_slot():
   146cc:	b570      	push	{r4, r5, r6, lr}
   146ce:	2224      	movs	r2, #36	; 0x24
   146d0:	fb02 0101 	mla	r1, r2, r1, r0
   146d4:	4603      	mov	r3, r0
   146d6:	4602      	mov	r2, r0
   146d8:	428a      	cmp	r2, r1
   146da:	d006      	beq.n	146ea <mesh_get_pnd_pkt_slot+0x1e>
   146dc:	4610      	mov	r0, r2
   146de:	3224      	adds	r2, #36	; 0x24
   146e0:	f812 4c23 	ldrb.w	r4, [r2, #-35]
   146e4:	2c00      	cmp	r4, #0
   146e6:	d1f7      	bne.n	146d8 <mesh_get_pnd_pkt_slot+0xc>
   146e8:	e012      	b.n	14710 <mesh_get_pnd_pkt_slot+0x44>
   146ea:	4618      	mov	r0, r3
   146ec:	2200      	movs	r2, #0
   146ee:	428b      	cmp	r3, r1
   146f0:	d00e      	beq.n	14710 <mesh_get_pnd_pkt_slot+0x44>
   146f2:	791c      	ldrb	r4, [r3, #4]
   146f4:	8c1e      	ldrh	r6, [r3, #32]
   146f6:	f3c4 04c2 	ubfx	r4, r4, #3, #3
   146fa:	ea46 4404 	orr.w	r4, r6, r4, lsl #16
   146fe:	42a2      	cmp	r2, r4
   14700:	461d      	mov	r5, r3
   14702:	bf24      	itt	cs
   14704:	4614      	movcs	r4, r2
   14706:	4605      	movcs	r5, r0
   14708:	3324      	adds	r3, #36	; 0x24
   1470a:	4622      	mov	r2, r4
   1470c:	4628      	mov	r0, r5
   1470e:	e7ee      	b.n	146ee <mesh_get_pnd_pkt_slot+0x22>
   14710:	bd70      	pop	{r4, r5, r6, pc}
	...

00014714 <mesh_pending_packets_add>:
mesh_pending_packets_add():
   14714:	b538      	push	{r3, r4, r5, lr}
   14716:	3101      	adds	r1, #1
   14718:	4604      	mov	r4, r0
   1471a:	00cd      	lsls	r5, r1, #3
   1471c:	f7ff ff52 	bl	145c4 <mesh_update_soft_timers>
   14720:	4b1b      	ldr	r3, [pc, #108]	; (14790 <mesh_pending_packets_add+0x7c>)
   14722:	781a      	ldrb	r2, [r3, #0]
   14724:	7823      	ldrb	r3, [r4, #0]
   14726:	429a      	cmp	r2, r3
   14728:	d104      	bne.n	14734 <mesh_pending_packets_add+0x20>
   1472a:	2102      	movs	r1, #2
   1472c:	4819      	ldr	r0, [pc, #100]	; (14794 <mesh_pending_packets_add+0x80>)
   1472e:	f7ff ffcd 	bl	146cc <mesh_get_pnd_pkt_slot>
   14732:	e00c      	b.n	1474e <mesh_pending_packets_add+0x3a>
   14734:	4818      	ldr	r0, [pc, #96]	; (14798 <mesh_pending_packets_add+0x84>)
   14736:	2104      	movs	r1, #4
   14738:	f7ff ffc8 	bl	146cc <mesh_get_pnd_pkt_slot>
   1473c:	78e3      	ldrb	r3, [r4, #3]
   1473e:	b933      	cbnz	r3, 1474e <mesh_pending_packets_add+0x3a>
   14740:	f890 3023 	ldrb.w	r3, [r0, #35]	; 0x23
   14744:	2504      	movs	r5, #4
   14746:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   1474a:	f880 3023 	strb.w	r3, [r0, #35]	; 0x23
   1474e:	2300      	movs	r3, #0
   14750:	f880 3020 	strb.w	r3, [r0, #32]
   14754:	f880 3021 	strb.w	r3, [r0, #33]	; 0x21
   14758:	f890 3023 	ldrb.w	r3, [r0, #35]	; 0x23
   1475c:	f880 5022 	strb.w	r5, [r0, #34]	; 0x22
   14760:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
   14764:	ea43 2515 	orr.w	r5, r3, r5, lsr #8
   14768:	f880 5023 	strb.w	r5, [r0, #35]	; 0x23
   1476c:	4623      	mov	r3, r4
   1476e:	4602      	mov	r2, r0
   14770:	f104 0120 	add.w	r1, r4, #32
   14774:	f853 4b04 	ldr.w	r4, [r3], #4
   14778:	428b      	cmp	r3, r1
   1477a:	f842 4b04 	str.w	r4, [r2], #4
   1477e:	d1f9      	bne.n	14774 <mesh_pending_packets_add+0x60>
   14780:	4a06      	ldr	r2, [pc, #24]	; (1479c <mesh_pending_packets_add+0x88>)
   14782:	7903      	ldrb	r3, [r0, #4]
   14784:	7812      	ldrb	r2, [r2, #0]
   14786:	f362 03c5 	bfi	r3, r2, #3, #3
   1478a:	7103      	strb	r3, [r0, #4]
   1478c:	bd38      	pop	{r3, r4, r5, pc}
   1478e:	bf00      	nop
   14790:	2007c02d 	.word	0x2007c02d
   14794:	2007c8c8 	.word	0x2007c8c8
   14798:	2007c7f0 	.word	0x2007c7f0
   1479c:	2007c02c 	.word	0x2007c02c

000147a0 <mesh_get_rte_to_modify>:
mesh_get_rte_to_modify():
   147a0:	b510      	push	{r4, lr}
   147a2:	f7ff ff6d 	bl	14680 <mesh_find_rte_tbl_entry>
   147a6:	4604      	mov	r4, r0
   147a8:	b9f8      	cbnz	r0, 147ea <mesh_get_rte_to_modify+0x4a>
   147aa:	f7ff ff69 	bl	14680 <mesh_find_rte_tbl_entry>
   147ae:	4604      	mov	r4, r0
   147b0:	b9d8      	cbnz	r0, 147ea <mesh_get_rte_to_modify+0x4a>
   147b2:	4a0f      	ldr	r2, [pc, #60]	; (147f0 <mesh_get_rte_to_modify+0x50>)
   147b4:	78d3      	ldrb	r3, [r2, #3]
   147b6:	79d1      	ldrb	r1, [r2, #7]
   147b8:	4299      	cmp	r1, r3
   147ba:	bf38      	it	cc
   147bc:	460b      	movcc	r3, r1
   147be:	7ad1      	ldrb	r1, [r2, #11]
   147c0:	bf34      	ite	cc
   147c2:	1d14      	addcc	r4, r2, #4
   147c4:	4614      	movcs	r4, r2
   147c6:	4299      	cmp	r1, r3
   147c8:	bf3c      	itt	cc
   147ca:	460b      	movcc	r3, r1
   147cc:	4c09      	ldrcc	r4, [pc, #36]	; (147f4 <mesh_get_rte_to_modify+0x54>)
   147ce:	7bd1      	ldrb	r1, [r2, #15]
   147d0:	4a09      	ldr	r2, [pc, #36]	; (147f8 <mesh_get_rte_to_modify+0x58>)
   147d2:	4299      	cmp	r1, r3
   147d4:	bf38      	it	cc
   147d6:	4614      	movcc	r4, r2
   147d8:	4620      	mov	r0, r4
   147da:	2204      	movs	r2, #4
   147dc:	2100      	movs	r1, #0
   147de:	f00a fa3e 	bl	1ec5e <memset>
   147e2:	4b06      	ldr	r3, [pc, #24]	; (147fc <mesh_get_rte_to_modify+0x5c>)
   147e4:	7ada      	ldrb	r2, [r3, #11]
   147e6:	3201      	adds	r2, #1
   147e8:	72da      	strb	r2, [r3, #11]
   147ea:	4620      	mov	r0, r4
   147ec:	bd10      	pop	{r4, pc}
   147ee:	bf00      	nop
   147f0:	2007c8b5 	.word	0x2007c8b5
   147f4:	2007c8bd 	.word	0x2007c8bd
   147f8:	2007c8c1 	.word	0x2007c8c1
   147fc:	2007c898 	.word	0x2007c898

00014800 <mesh_handle_pnd_pkts_for_arr>:
mesh_handle_pnd_pkts_for_arr():
   14800:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   14802:	2724      	movs	r7, #36	; 0x24
   14804:	fb07 1702 	mla	r7, r7, r2, r1
   14808:	4605      	mov	r5, r0
   1480a:	460c      	mov	r4, r1
   1480c:	42bc      	cmp	r4, r7
   1480e:	f000 80b3 	beq.w	14978 <mesh_handle_pnd_pkts_for_arr+0x178>
   14812:	f894 1023 	ldrb.w	r1, [r4, #35]	; 0x23
   14816:	09cb      	lsrs	r3, r1, #7
   14818:	d02b      	beq.n	14872 <mesh_handle_pnd_pkts_for_arr+0x72>
   1481a:	b1bd      	cbz	r5, 1484c <mesh_handle_pnd_pkts_for_arr+0x4c>
   1481c:	782b      	ldrb	r3, [r5, #0]
   1481e:	7862      	ldrb	r2, [r4, #1]
   14820:	4293      	cmp	r3, r2
   14822:	d103      	bne.n	1482c <mesh_handle_pnd_pkts_for_arr+0x2c>
   14824:	786e      	ldrb	r6, [r5, #1]
   14826:	7820      	ldrb	r0, [r4, #0]
   14828:	4286      	cmp	r6, r0
   1482a:	d01c      	beq.n	14866 <mesh_handle_pnd_pkts_for_arr+0x66>
   1482c:	78e8      	ldrb	r0, [r5, #3]
   1482e:	b168      	cbz	r0, 1484c <mesh_handle_pnd_pkts_for_arr+0x4c>
   14830:	7868      	ldrb	r0, [r5, #1]
   14832:	4290      	cmp	r0, r2
   14834:	d108      	bne.n	14848 <mesh_handle_pnd_pkts_for_arr+0x48>
   14836:	7822      	ldrb	r2, [r4, #0]
   14838:	429a      	cmp	r2, r3
   1483a:	d105      	bne.n	14848 <mesh_handle_pnd_pkts_for_arr+0x48>
   1483c:	79a3      	ldrb	r3, [r4, #6]
   1483e:	79aa      	ldrb	r2, [r5, #6]
   14840:	1ad6      	subs	r6, r2, r3
   14842:	4273      	negs	r3, r6
   14844:	4173      	adcs	r3, r6
   14846:	e000      	b.n	1484a <mesh_handle_pnd_pkts_for_arr+0x4a>
   14848:	2300      	movs	r3, #0
   1484a:	b963      	cbnz	r3, 14866 <mesh_handle_pnd_pkts_for_arr+0x66>
   1484c:	f894 2022 	ldrb.w	r2, [r4, #34]	; 0x22
   14850:	8c23      	ldrh	r3, [r4, #32]
   14852:	f001 017f 	and.w	r1, r1, #127	; 0x7f
   14856:	ea42 2101 	orr.w	r1, r2, r1, lsl #8
   1485a:	428b      	cmp	r3, r1
   1485c:	f2c0 808a 	blt.w	14974 <mesh_handle_pnd_pkts_for_arr+0x174>
   14860:	4620      	mov	r0, r4
   14862:	f7ff fed5 	bl	14610 <mesh_send_packet>
   14866:	4620      	mov	r0, r4
   14868:	2100      	movs	r1, #0
   1486a:	2224      	movs	r2, #36	; 0x24
   1486c:	f00a f9f7 	bl	1ec5e <memset>
   14870:	e080      	b.n	14974 <mesh_handle_pnd_pkts_for_arr+0x174>
   14872:	7863      	ldrb	r3, [r4, #1]
   14874:	2b00      	cmp	r3, #0
   14876:	d07d      	beq.n	14974 <mesh_handle_pnd_pkts_for_arr+0x174>
   14878:	2d00      	cmp	r5, #0
   1487a:	d03c      	beq.n	148f6 <mesh_handle_pnd_pkts_for_arr+0xf6>
   1487c:	792a      	ldrb	r2, [r5, #4]
   1487e:	0992      	lsrs	r2, r2, #6
   14880:	2a03      	cmp	r2, #3
   14882:	d11a      	bne.n	148ba <mesh_handle_pnd_pkts_for_arr+0xba>
   14884:	786a      	ldrb	r2, [r5, #1]
   14886:	7820      	ldrb	r0, [r4, #0]
   14888:	4290      	cmp	r0, r2
   1488a:	d102      	bne.n	14892 <mesh_handle_pnd_pkts_for_arr+0x92>
   1488c:	7828      	ldrb	r0, [r5, #0]
   1488e:	4298      	cmp	r0, r3
   14890:	d0e9      	beq.n	14866 <mesh_handle_pnd_pkts_for_arr+0x66>
   14892:	78e6      	ldrb	r6, [r4, #3]
   14894:	78a8      	ldrb	r0, [r5, #2]
   14896:	4286      	cmp	r6, r0
   14898:	d110      	bne.n	148bc <mesh_handle_pnd_pkts_for_arr+0xbc>
   1489a:	4293      	cmp	r3, r2
   1489c:	d109      	bne.n	148b2 <mesh_handle_pnd_pkts_for_arr+0xb2>
   1489e:	7820      	ldrb	r0, [r4, #0]
   148a0:	782a      	ldrb	r2, [r5, #0]
   148a2:	4290      	cmp	r0, r2
   148a4:	d105      	bne.n	148b2 <mesh_handle_pnd_pkts_for_arr+0xb2>
   148a6:	79aa      	ldrb	r2, [r5, #6]
   148a8:	79a0      	ldrb	r0, [r4, #6]
   148aa:	1a80      	subs	r0, r0, r2
   148ac:	4242      	negs	r2, r0
   148ae:	4142      	adcs	r2, r0
   148b0:	e000      	b.n	148b4 <mesh_handle_pnd_pkts_for_arr+0xb4>
   148b2:	2200      	movs	r2, #0
   148b4:	2a00      	cmp	r2, #0
   148b6:	d1d6      	bne.n	14866 <mesh_handle_pnd_pkts_for_arr+0x66>
   148b8:	e000      	b.n	148bc <mesh_handle_pnd_pkts_for_arr+0xbc>
   148ba:	b1e2      	cbz	r2, 148f6 <mesh_handle_pnd_pkts_for_arr+0xf6>
   148bc:	78a8      	ldrb	r0, [r5, #2]
   148be:	78e2      	ldrb	r2, [r4, #3]
   148c0:	4290      	cmp	r0, r2
   148c2:	d118      	bne.n	148f6 <mesh_handle_pnd_pkts_for_arr+0xf6>
   148c4:	786a      	ldrb	r2, [r5, #1]
   148c6:	429a      	cmp	r2, r3
   148c8:	d109      	bne.n	148de <mesh_handle_pnd_pkts_for_arr+0xde>
   148ca:	7820      	ldrb	r0, [r4, #0]
   148cc:	782a      	ldrb	r2, [r5, #0]
   148ce:	4290      	cmp	r0, r2
   148d0:	d105      	bne.n	148de <mesh_handle_pnd_pkts_for_arr+0xde>
   148d2:	79a0      	ldrb	r0, [r4, #6]
   148d4:	79aa      	ldrb	r2, [r5, #6]
   148d6:	1a82      	subs	r2, r0, r2
   148d8:	4250      	negs	r0, r2
   148da:	4150      	adcs	r0, r2
   148dc:	e000      	b.n	148e0 <mesh_handle_pnd_pkts_for_arr+0xe0>
   148de:	2000      	movs	r0, #0
   148e0:	b148      	cbz	r0, 148f6 <mesh_handle_pnd_pkts_for_arr+0xf6>
   148e2:	7922      	ldrb	r2, [r4, #4]
   148e4:	2300      	movs	r3, #0
   148e6:	f363 02c5 	bfi	r2, r3, #3, #3
   148ea:	f884 3020 	strb.w	r3, [r4, #32]
   148ee:	f884 3021 	strb.w	r3, [r4, #33]	; 0x21
   148f2:	7122      	strb	r2, [r4, #4]
   148f4:	e03e      	b.n	14974 <mesh_handle_pnd_pkts_for_arr+0x174>
   148f6:	f894 0022 	ldrb.w	r0, [r4, #34]	; 0x22
   148fa:	8c22      	ldrh	r2, [r4, #32]
   148fc:	f001 017f 	and.w	r1, r1, #127	; 0x7f
   14900:	ea40 2101 	orr.w	r1, r0, r1, lsl #8
   14904:	428a      	cmp	r2, r1
   14906:	db35      	blt.n	14974 <mesh_handle_pnd_pkts_for_arr+0x174>
   14908:	7921      	ldrb	r1, [r4, #4]
   1490a:	2200      	movs	r2, #0
   1490c:	f884 2020 	strb.w	r2, [r4, #32]
   14910:	f884 2021 	strb.w	r2, [r4, #33]	; 0x21
   14914:	f3c1 02c2 	ubfx	r2, r1, #3, #3
   14918:	b2d6      	uxtb	r6, r2
   1491a:	b11e      	cbz	r6, 14924 <mesh_handle_pnd_pkts_for_arr+0x124>
   1491c:	4620      	mov	r0, r4
   1491e:	f7ff fe95 	bl	1464c <mesh_send_retry_packet>
   14922:	e027      	b.n	14974 <mesh_handle_pnd_pkts_for_arr+0x174>
   14924:	0989      	lsrs	r1, r1, #6
   14926:	2903      	cmp	r1, #3
   14928:	d018      	beq.n	1495c <mesh_handle_pnd_pkts_for_arr+0x15c>
   1492a:	4914      	ldr	r1, [pc, #80]	; (1497c <mesh_handle_pnd_pkts_for_arr+0x17c>)
   1492c:	7820      	ldrb	r0, [r4, #0]
   1492e:	7809      	ldrb	r1, [r1, #0]
   14930:	4288      	cmp	r0, r1
   14932:	d113      	bne.n	1495c <mesh_handle_pnd_pkts_for_arr+0x15c>
   14934:	78e1      	ldrb	r1, [r4, #3]
   14936:	4299      	cmp	r1, r3
   14938:	d010      	beq.n	1495c <mesh_handle_pnd_pkts_for_arr+0x15c>
   1493a:	b179      	cbz	r1, 1495c <mesh_handle_pnd_pkts_for_arr+0x15c>
   1493c:	7963      	ldrb	r3, [r4, #5]
   1493e:	70e2      	strb	r2, [r4, #3]
   14940:	2203      	movs	r2, #3
   14942:	f362 1307 	bfi	r3, r2, #4, #4
   14946:	7163      	strb	r3, [r4, #5]
   14948:	4620      	mov	r0, r4
   1494a:	f7ff fe7f 	bl	1464c <mesh_send_retry_packet>
   1494e:	4a0c      	ldr	r2, [pc, #48]	; (14980 <mesh_handle_pnd_pkts_for_arr+0x180>)
   14950:	7923      	ldrb	r3, [r4, #4]
   14952:	7812      	ldrb	r2, [r2, #0]
   14954:	f362 03c5 	bfi	r3, r2, #3, #3
   14958:	7123      	strb	r3, [r4, #4]
   1495a:	e000      	b.n	1495e <mesh_handle_pnd_pkts_for_arr+0x15e>
   1495c:	2601      	movs	r6, #1
   1495e:	7860      	ldrb	r0, [r4, #1]
   14960:	f7ff fe8e 	bl	14680 <mesh_find_rte_tbl_entry>
   14964:	b118      	cbz	r0, 1496e <mesh_handle_pnd_pkts_for_arr+0x16e>
   14966:	2100      	movs	r1, #0
   14968:	2204      	movs	r2, #4
   1496a:	f00a f978 	bl	1ec5e <memset>
   1496e:	2e00      	cmp	r6, #0
   14970:	f47f af79 	bne.w	14866 <mesh_handle_pnd_pkts_for_arr+0x66>
   14974:	3424      	adds	r4, #36	; 0x24
   14976:	e749      	b.n	1480c <mesh_handle_pnd_pkts_for_arr+0xc>
   14978:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1497a:	bf00      	nop
   1497c:	2007c02d 	.word	0x2007c02d
   14980:	2007c02c 	.word	0x2007c02c

00014984 <mesh_set_node_address>:
mesh_set_node_address():
   14984:	1e43      	subs	r3, r0, #1
   14986:	b2db      	uxtb	r3, r3
   14988:	2bfd      	cmp	r3, #253	; 0xfd
   1498a:	bf9d      	ittte	ls
   1498c:	4b02      	ldrls	r3, [pc, #8]	; (14998 <mesh_set_node_address+0x14>)
   1498e:	7018      	strbls	r0, [r3, #0]
   14990:	2001      	movls	r0, #1
   14992:	2000      	movhi	r0, #0
   14994:	4770      	bx	lr
   14996:	bf00      	nop
   14998:	2007c02d 	.word	0x2007c02d

0001499c <mesh_get_node_address>:
mesh_get_node_address():
   1499c:	4b01      	ldr	r3, [pc, #4]	; (149a4 <mesh_get_node_address+0x8>)
   1499e:	7818      	ldrb	r0, [r3, #0]
   149a0:	4770      	bx	lr
   149a2:	bf00      	nop
   149a4:	2007c02d 	.word	0x2007c02d

000149a8 <mesh_set_retry_count>:
mesh_set_retry_count():
   149a8:	2807      	cmp	r0, #7
   149aa:	bf9c      	itt	ls
   149ac:	4b01      	ldrls	r3, [pc, #4]	; (149b4 <mesh_set_retry_count+0xc>)
   149ae:	7018      	strbls	r0, [r3, #0]
   149b0:	4770      	bx	lr
   149b2:	bf00      	nop
   149b4:	2007c02c 	.word	0x2007c02c

000149b8 <mesh_form_pkt>:
mesh_form_pkt():
   149b8:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   149bc:	4604      	mov	r4, r0
   149be:	4691      	mov	r9, r2
   149c0:	4698      	mov	r8, r3
   149c2:	f89d 6028 	ldrb.w	r6, [sp, #40]	; 0x28
   149c6:	460d      	mov	r5, r1
   149c8:	2900      	cmp	r1, #0
   149ca:	d05b      	beq.n	14a84 <mesh_form_pkt+0xcc>
   149cc:	4b31      	ldr	r3, [pc, #196]	; (14a94 <mesh_form_pkt+0xdc>)
   149ce:	781f      	ldrb	r7, [r3, #0]
   149d0:	42b9      	cmp	r1, r7
   149d2:	d059      	beq.n	14a88 <mesh_form_pkt+0xd0>
   149d4:	f1b8 0f0f 	cmp.w	r8, #15
   149d8:	d856      	bhi.n	14a88 <mesh_form_pkt+0xd0>
   149da:	2800      	cmp	r0, #0
   149dc:	d056      	beq.n	14a8c <mesh_form_pkt+0xd4>
   149de:	2220      	movs	r2, #32
   149e0:	2100      	movs	r1, #0
   149e2:	f00a f93c 	bl	1ec5e <memset>
   149e6:	2dff      	cmp	r5, #255	; 0xff
   149e8:	7923      	ldrb	r3, [r4, #4]
   149ea:	bf14      	ite	ne
   149ec:	f009 0203 	andne.w	r2, r9, #3
   149f0:	2200      	moveq	r2, #0
   149f2:	f362 1387 	bfi	r3, r2, #6, #2
   149f6:	2203      	movs	r2, #3
   149f8:	f362 0302 	bfi	r3, r2, #0, #3
   149fc:	4a26      	ldr	r2, [pc, #152]	; (14a98 <mesh_form_pkt+0xe0>)
   149fe:	7065      	strb	r5, [r4, #1]
   14a00:	7812      	ldrb	r2, [r2, #0]
   14a02:	7027      	strb	r7, [r4, #0]
   14a04:	f362 03c5 	bfi	r3, r2, #3, #3
   14a08:	4a24      	ldr	r2, [pc, #144]	; (14a9c <mesh_form_pkt+0xe4>)
   14a0a:	7123      	strb	r3, [r4, #4]
   14a0c:	7813      	ldrb	r3, [r2, #0]
   14a0e:	70a7      	strb	r7, [r4, #2]
   14a10:	3301      	adds	r3, #1
   14a12:	b2db      	uxtb	r3, r3
   14a14:	7013      	strb	r3, [r2, #0]
   14a16:	71a3      	strb	r3, [r4, #6]
   14a18:	ab0b      	add	r3, sp, #44	; 0x2c
   14a1a:	9301      	str	r3, [sp, #4]
   14a1c:	b90e      	cbnz	r6, 14a22 <mesh_form_pkt+0x6a>
   14a1e:	2701      	movs	r7, #1
   14a20:	e013      	b.n	14a4a <mesh_form_pkt+0x92>
   14a22:	9b01      	ldr	r3, [sp, #4]
   14a24:	79e0      	ldrb	r0, [r4, #7]
   14a26:	461a      	mov	r2, r3
   14a28:	f852 1b08 	ldr.w	r1, [r2], #8
   14a2c:	3e01      	subs	r6, #1
   14a2e:	9201      	str	r2, [sp, #4]
   14a30:	685a      	ldr	r2, [r3, #4]
   14a32:	b2f6      	uxtb	r6, r6
   14a34:	1887      	adds	r7, r0, r2
   14a36:	b2ff      	uxtb	r7, r7
   14a38:	2f18      	cmp	r7, #24
   14a3a:	d805      	bhi.n	14a48 <mesh_form_pkt+0x90>
   14a3c:	3008      	adds	r0, #8
   14a3e:	4420      	add	r0, r4
   14a40:	f00a f8e9 	bl	1ec16 <memcpy>
   14a44:	71e7      	strb	r7, [r4, #7]
   14a46:	e7e9      	b.n	14a1c <mesh_form_pkt+0x64>
   14a48:	2700      	movs	r7, #0
   14a4a:	f8df 9054 	ldr.w	r9, [pc, #84]	; 14aa0 <mesh_form_pkt+0xe8>
   14a4e:	2301      	movs	r3, #1
   14a50:	4628      	mov	r0, r5
   14a52:	f889 3000 	strb.w	r3, [r9]
   14a56:	f7ff fe13 	bl	14680 <mesh_find_rte_tbl_entry>
   14a5a:	4606      	mov	r6, r0
   14a5c:	f7ff fe22 	bl	146a4 <mesh_update_rte_scores>
   14a60:	2300      	movs	r3, #0
   14a62:	f889 3000 	strb.w	r3, [r9]
   14a66:	7963      	ldrb	r3, [r4, #5]
   14a68:	b926      	cbnz	r6, 14a74 <mesh_form_pkt+0xbc>
   14a6a:	f368 1307 	bfi	r3, r8, #4, #4
   14a6e:	7163      	strb	r3, [r4, #5]
   14a70:	70e6      	strb	r6, [r4, #3]
   14a72:	e005      	b.n	14a80 <mesh_form_pkt+0xc8>
   14a74:	78b2      	ldrb	r2, [r6, #2]
   14a76:	f362 1307 	bfi	r3, r2, #4, #4
   14a7a:	7163      	strb	r3, [r4, #5]
   14a7c:	7873      	ldrb	r3, [r6, #1]
   14a7e:	70e3      	strb	r3, [r4, #3]
   14a80:	4638      	mov	r0, r7
   14a82:	e003      	b.n	14a8c <mesh_form_pkt+0xd4>
   14a84:	4608      	mov	r0, r1
   14a86:	e001      	b.n	14a8c <mesh_form_pkt+0xd4>
   14a88:	2000      	movs	r0, #0
   14a8a:	e7ff      	b.n	14a8c <mesh_form_pkt+0xd4>
   14a8c:	b003      	add	sp, #12
   14a8e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   14a92:	bf00      	nop
   14a94:	2007c02d 	.word	0x2007c02d
   14a98:	2007c02c 	.word	0x2007c02c
   14a9c:	2007c8c7 	.word	0x2007c8c7
   14aa0:	2007c8c5 	.word	0x2007c8c5

00014aa4 <mesh_send_formed_pkt>:
mesh_send_formed_pkt():
   14aa4:	4b15      	ldr	r3, [pc, #84]	; (14afc <mesh_send_formed_pkt+0x58>)
   14aa6:	2201      	movs	r2, #1
   14aa8:	b570      	push	{r4, r5, r6, lr}
   14aaa:	701a      	strb	r2, [r3, #0]
   14aac:	4604      	mov	r4, r0
   14aae:	461e      	mov	r6, r3
   14ab0:	b908      	cbnz	r0, 14ab6 <mesh_send_formed_pkt+0x12>
   14ab2:	2500      	movs	r5, #0
   14ab4:	e01d      	b.n	14af2 <mesh_send_formed_pkt+0x4e>
   14ab6:	f7ff fdab 	bl	14610 <mesh_send_packet>
   14aba:	4605      	mov	r5, r0
   14abc:	2800      	cmp	r0, #0
   14abe:	d0f8      	beq.n	14ab2 <mesh_send_formed_pkt+0xe>
   14ac0:	7922      	ldrb	r2, [r4, #4]
   14ac2:	0992      	lsrs	r2, r2, #6
   14ac4:	1cd1      	adds	r1, r2, #3
   14ac6:	2a03      	cmp	r2, #3
   14ac8:	f001 0103 	and.w	r1, r1, #3
   14acc:	d106      	bne.n	14adc <mesh_send_formed_pkt+0x38>
   14ace:	78e3      	ldrb	r3, [r4, #3]
   14ad0:	b12b      	cbz	r3, 14ade <mesh_send_formed_pkt+0x3a>
   14ad2:	7862      	ldrb	r2, [r4, #1]
   14ad4:	1ad3      	subs	r3, r2, r3
   14ad6:	bf18      	it	ne
   14ad8:	2301      	movne	r3, #1
   14ada:	e000      	b.n	14ade <mesh_send_formed_pkt+0x3a>
   14adc:	2300      	movs	r3, #0
   14ade:	2901      	cmp	r1, #1
   14ae0:	f003 0301 	and.w	r3, r3, #1
   14ae4:	d900      	bls.n	14ae8 <mesh_send_formed_pkt+0x44>
   14ae6:	b123      	cbz	r3, 14af2 <mesh_send_formed_pkt+0x4e>
   14ae8:	7961      	ldrb	r1, [r4, #5]
   14aea:	4620      	mov	r0, r4
   14aec:	0909      	lsrs	r1, r1, #4
   14aee:	f7ff fe11 	bl	14714 <mesh_pending_packets_add>
   14af2:	2300      	movs	r3, #0
   14af4:	7033      	strb	r3, [r6, #0]
   14af6:	4628      	mov	r0, r5
   14af8:	bd70      	pop	{r4, r5, r6, pc}
   14afa:	bf00      	nop
   14afc:	2007c8c5 	.word	0x2007c8c5

00014b00 <mesh_init>:
mesh_init():
   14b00:	b082      	sub	sp, #8
   14b02:	b5f0      	push	{r4, r5, r6, r7, lr}
   14b04:	4617      	mov	r7, r2
   14b06:	1e42      	subs	r2, r0, #1
   14b08:	b2d2      	uxtb	r2, r2
   14b0a:	b08d      	sub	sp, #52	; 0x34
   14b0c:	2afd      	cmp	r2, #253	; 0xfd
   14b0e:	4604      	mov	r4, r0
   14b10:	460d      	mov	r5, r1
   14b12:	9313      	str	r3, [sp, #76]	; 0x4c
   14b14:	d901      	bls.n	14b1a <mesh_init+0x1a>
   14b16:	2000      	movs	r0, #0
   14b18:	e05a      	b.n	14bd0 <mesh_init+0xd0>
   14b1a:	2b00      	cmp	r3, #0
   14b1c:	d0fb      	beq.n	14b16 <mesh_init+0x16>
   14b1e:	9b15      	ldr	r3, [sp, #84]	; 0x54
   14b20:	2b00      	cmp	r3, #0
   14b22:	d0f8      	beq.n	14b16 <mesh_init+0x16>
   14b24:	9b17      	ldr	r3, [sp, #92]	; 0x5c
   14b26:	2b00      	cmp	r3, #0
   14b28:	d0f5      	beq.n	14b16 <mesh_init+0x16>
   14b2a:	9b16      	ldr	r3, [sp, #88]	; 0x58
   14b2c:	2b00      	cmp	r3, #0
   14b2e:	d0f2      	beq.n	14b16 <mesh_init+0x16>
   14b30:	9b14      	ldr	r3, [sp, #80]	; 0x50
   14b32:	2b00      	cmp	r3, #0
   14b34:	d0ef      	beq.n	14b16 <mesh_init+0x16>
   14b36:	2100      	movs	r1, #0
   14b38:	2248      	movs	r2, #72	; 0x48
   14b3a:	4828      	ldr	r0, [pc, #160]	; (14bdc <mesh_init+0xdc>)
   14b3c:	f00a f88f 	bl	1ec5e <memset>
   14b40:	2100      	movs	r1, #0
   14b42:	2290      	movs	r2, #144	; 0x90
   14b44:	4826      	ldr	r0, [pc, #152]	; (14be0 <mesh_init+0xe0>)
   14b46:	f00a f88a 	bl	1ec5e <memset>
   14b4a:	2100      	movs	r1, #0
   14b4c:	2210      	movs	r2, #16
   14b4e:	4825      	ldr	r0, [pc, #148]	; (14be4 <mesh_init+0xe4>)
   14b50:	f00a f885 	bl	1ec5e <memset>
   14b54:	2100      	movs	r1, #0
   14b56:	220c      	movs	r2, #12
   14b58:	4823      	ldr	r0, [pc, #140]	; (14be8 <mesh_init+0xe8>)
   14b5a:	f00a f880 	bl	1ec5e <memset>
   14b5e:	2100      	movs	r1, #0
   14b60:	220c      	movs	r2, #12
   14b62:	4822      	ldr	r0, [pc, #136]	; (14bec <mesh_init+0xec>)
   14b64:	f00a f87b 	bl	1ec5e <memset>
   14b68:	4b21      	ldr	r3, [pc, #132]	; (14bf0 <mesh_init+0xf0>)
   14b6a:	4e22      	ldr	r6, [pc, #136]	; (14bf4 <mesh_init+0xf4>)
   14b6c:	701c      	strb	r4, [r3, #0]
   14b6e:	4b22      	ldr	r3, [pc, #136]	; (14bf8 <mesh_init+0xf8>)
   14b70:	4634      	mov	r4, r6
   14b72:	701d      	strb	r5, [r3, #0]
   14b74:	ad13      	add	r5, sp, #76	; 0x4c
   14b76:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
   14b78:	c40f      	stmia	r4!, {r0, r1, r2, r3}
   14b7a:	682b      	ldr	r3, [r5, #0]
   14b7c:	2100      	movs	r1, #0
   14b7e:	2218      	movs	r2, #24
   14b80:	481e      	ldr	r0, [pc, #120]	; (14bfc <mesh_init+0xfc>)
   14b82:	6023      	str	r3, [r4, #0]
   14b84:	f00a f86b 	bl	1ec5e <memset>
   14b88:	4639      	mov	r1, r7
   14b8a:	481c      	ldr	r0, [pc, #112]	; (14bfc <mesh_init+0xfc>)
   14b8c:	2217      	movs	r2, #23
   14b8e:	f00b f8d3 	bl	1fd38 <strncpy>
   14b92:	2000      	movs	r0, #0
   14b94:	68b3      	ldr	r3, [r6, #8]
   14b96:	4601      	mov	r1, r0
   14b98:	4798      	blx	r3
   14b9a:	2800      	cmp	r0, #0
   14b9c:	d0bb      	beq.n	14b16 <mesh_init+0x16>
   14b9e:	f89d 3060 	ldrb.w	r3, [sp, #96]	; 0x60
   14ba2:	b913      	cbnz	r3, 14baa <mesh_init+0xaa>
   14ba4:	f7ff fd0e 	bl	145c4 <mesh_update_soft_timers>
   14ba8:	e012      	b.n	14bd0 <mesh_init+0xd0>
   14baa:	4a15      	ldr	r2, [pc, #84]	; (14c00 <mesh_init+0x100>)
   14bac:	2301      	movs	r3, #1
   14bae:	9201      	str	r2, [sp, #4]
   14bb0:	2206      	movs	r2, #6
   14bb2:	9202      	str	r2, [sp, #8]
   14bb4:	9300      	str	r3, [sp, #0]
   14bb6:	a804      	add	r0, sp, #16
   14bb8:	21ff      	movs	r1, #255	; 0xff
   14bba:	2200      	movs	r2, #0
   14bbc:	f7ff fefc 	bl	149b8 <mesh_form_pkt>
   14bc0:	2800      	cmp	r0, #0
   14bc2:	d0a8      	beq.n	14b16 <mesh_init+0x16>
   14bc4:	a804      	add	r0, sp, #16
   14bc6:	f7ff ff6d 	bl	14aa4 <mesh_send_formed_pkt>
   14bca:	2800      	cmp	r0, #0
   14bcc:	d0a3      	beq.n	14b16 <mesh_init+0x16>
   14bce:	e7e9      	b.n	14ba4 <mesh_init+0xa4>
   14bd0:	b00d      	add	sp, #52	; 0x34
   14bd2:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
   14bd6:	b002      	add	sp, #8
   14bd8:	4770      	bx	lr
   14bda:	bf00      	nop
   14bdc:	2007c8c8 	.word	0x2007c8c8
   14be0:	2007c7f0 	.word	0x2007c7f0
   14be4:	2007c8b5 	.word	0x2007c8b5
   14be8:	2007c8a9 	.word	0x2007c8a9
   14bec:	2007c898 	.word	0x2007c898
   14bf0:	2007c02d 	.word	0x2007c02d
   14bf4:	2007c7dc 	.word	0x2007c7dc
   14bf8:	2007c8a8 	.word	0x2007c8a8
   14bfc:	2007c880 	.word	0x2007c880
   14c00:	00026880 	.word	0x00026880

00014c04 <mesh_send>:
mesh_send():
   14c04:	b570      	push	{r4, r5, r6, lr}
   14c06:	2b18      	cmp	r3, #24
   14c08:	b08c      	sub	sp, #48	; 0x30
   14c0a:	4606      	mov	r6, r0
   14c0c:	460d      	mov	r5, r1
   14c0e:	d817      	bhi.n	14c40 <mesh_send+0x3c>
   14c10:	1c1c      	adds	r4, r3, #0
   14c12:	bf18      	it	ne
   14c14:	2401      	movne	r4, #1
   14c16:	2a00      	cmp	r2, #0
   14c18:	bf14      	ite	ne
   14c1a:	4621      	movne	r1, r4
   14c1c:	f084 0101 	eoreq.w	r1, r4, #1
   14c20:	b171      	cbz	r1, 14c40 <mesh_send+0x3c>
   14c22:	9201      	str	r2, [sp, #4]
   14c24:	9302      	str	r3, [sp, #8]
   14c26:	9400      	str	r4, [sp, #0]
   14c28:	a804      	add	r0, sp, #16
   14c2a:	4631      	mov	r1, r6
   14c2c:	462a      	mov	r2, r5
   14c2e:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
   14c32:	f7ff fec1 	bl	149b8 <mesh_form_pkt>
   14c36:	b118      	cbz	r0, 14c40 <mesh_send+0x3c>
   14c38:	a804      	add	r0, sp, #16
   14c3a:	f7ff ff33 	bl	14aa4 <mesh_send_formed_pkt>
   14c3e:	e000      	b.n	14c42 <mesh_send+0x3e>
   14c40:	2000      	movs	r0, #0
   14c42:	b00c      	add	sp, #48	; 0x30
   14c44:	bd70      	pop	{r4, r5, r6, pc}

00014c46 <mesh_send_ack>:
mesh_send_ack():
   14c46:	b513      	push	{r0, r1, r4, lr}
   14c48:	4604      	mov	r4, r0
   14c4a:	7810      	ldrb	r0, [r2, #0]
   14c4c:	7952      	ldrb	r2, [r2, #5]
   14c4e:	460b      	mov	r3, r1
   14c50:	0912      	lsrs	r2, r2, #4
   14c52:	9200      	str	r2, [sp, #0]
   14c54:	2103      	movs	r1, #3
   14c56:	4622      	mov	r2, r4
   14c58:	f7ff ffd4 	bl	14c04 <mesh_send>
   14c5c:	b002      	add	sp, #8
   14c5e:	bd10      	pop	{r4, pc}

00014c60 <mesh_get_routing_entry>:
mesh_get_routing_entry():
   14c60:	b530      	push	{r4, r5, lr}
   14c62:	2300      	movs	r3, #0
   14c64:	461a      	mov	r2, r3
   14c66:	4908      	ldr	r1, [pc, #32]	; (14c88 <mesh_get_routing_entry+0x28>)
   14c68:	009c      	lsls	r4, r3, #2
   14c6a:	f811 5023 	ldrb.w	r5, [r1, r3, lsl #2]
   14c6e:	b12d      	cbz	r5, 14c7c <mesh_get_routing_entry+0x1c>
   14c70:	4290      	cmp	r0, r2
   14c72:	d101      	bne.n	14c78 <mesh_get_routing_entry+0x18>
   14c74:	1908      	adds	r0, r1, r4
   14c76:	bd30      	pop	{r4, r5, pc}
   14c78:	3201      	adds	r2, #1
   14c7a:	b2d2      	uxtb	r2, r2
   14c7c:	3301      	adds	r3, #1
   14c7e:	2b04      	cmp	r3, #4
   14c80:	d1f1      	bne.n	14c66 <mesh_get_routing_entry+0x6>
   14c82:	2000      	movs	r0, #0
   14c84:	bd30      	pop	{r4, r5, pc}
   14c86:	bf00      	nop
   14c88:	2007c8b5 	.word	0x2007c8b5

00014c8c <mesh_get_num_routing_entries>:
mesh_get_num_routing_entries():
   14c8c:	2300      	movs	r3, #0
   14c8e:	4618      	mov	r0, r3
   14c90:	4a04      	ldr	r2, [pc, #16]	; (14ca4 <mesh_get_num_routing_entries+0x18>)
   14c92:	5c9a      	ldrb	r2, [r3, r2]
   14c94:	b10a      	cbz	r2, 14c9a <mesh_get_num_routing_entries+0xe>
   14c96:	3001      	adds	r0, #1
   14c98:	b2c0      	uxtb	r0, r0
   14c9a:	3304      	adds	r3, #4
   14c9c:	2b10      	cmp	r3, #16
   14c9e:	d1f7      	bne.n	14c90 <mesh_get_num_routing_entries+0x4>
   14ca0:	4770      	bx	lr
   14ca2:	bf00      	nop
   14ca4:	2007c8b5 	.word	0x2007c8b5

00014ca8 <mesh_service>:
mesh_service():
   14ca8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   14cac:	b088      	sub	sp, #32
   14cae:	4668      	mov	r0, sp
   14cb0:	2100      	movs	r1, #0
   14cb2:	2220      	movs	r2, #32
   14cb4:	f009 ffd3 	bl	1ec5e <memset>
   14cb8:	4b9c      	ldr	r3, [pc, #624]	; (14f2c <mesh_service+0x284>)
   14cba:	781b      	ldrb	r3, [r3, #0]
   14cbc:	f003 04ff 	and.w	r4, r3, #255	; 0xff
   14cc0:	2b00      	cmp	r3, #0
   14cc2:	f040 8130 	bne.w	14f26 <mesh_service+0x27e>
   14cc6:	4f9a      	ldr	r7, [pc, #616]	; (14f30 <mesh_service+0x288>)
   14cc8:	4668      	mov	r0, sp
   14cca:	693b      	ldr	r3, [r7, #16]
   14ccc:	2120      	movs	r1, #32
   14cce:	4798      	blx	r3
   14cd0:	2800      	cmp	r0, #0
   14cd2:	f000 8082 	beq.w	14dda <mesh_service+0x132>
   14cd6:	4d97      	ldr	r5, [pc, #604]	; (14f34 <mesh_service+0x28c>)
   14cd8:	886b      	ldrh	r3, [r5, #2]
   14cda:	3301      	adds	r3, #1
   14cdc:	806b      	strh	r3, [r5, #2]
   14cde:	f7ff ffd5 	bl	14c8c <mesh_get_num_routing_entries>
   14ce2:	f89d 1004 	ldrb.w	r1, [sp, #4]
   14ce6:	72a8      	strb	r0, [r5, #10]
   14ce8:	f001 0307 	and.w	r3, r1, #7
   14cec:	2b03      	cmp	r3, #3
   14cee:	d004      	beq.n	14cfa <mesh_service+0x52>
   14cf0:	4b91      	ldr	r3, [pc, #580]	; (14f38 <mesh_service+0x290>)
   14cf2:	781a      	ldrb	r2, [r3, #0]
   14cf4:	f042 0201 	orr.w	r2, r2, #1
   14cf8:	e009      	b.n	14d0e <mesh_service+0x66>
   14cfa:	4b90      	ldr	r3, [pc, #576]	; (14f3c <mesh_service+0x294>)
   14cfc:	781d      	ldrb	r5, [r3, #0]
   14cfe:	f89d 3002 	ldrb.w	r3, [sp, #2]
   14d02:	42ab      	cmp	r3, r5
   14d04:	d105      	bne.n	14d12 <mesh_service+0x6a>
   14d06:	4b8c      	ldr	r3, [pc, #560]	; (14f38 <mesh_service+0x290>)
   14d08:	781a      	ldrb	r2, [r3, #0]
   14d0a:	f042 0202 	orr.w	r2, r2, #2
   14d0e:	701a      	strb	r2, [r3, #0]
   14d10:	e0db      	b.n	14eca <mesh_service+0x222>
   14d12:	f3c1 01c2 	ubfx	r1, r1, #3, #3
   14d16:	f89d e000 	ldrb.w	lr, [sp]
   14d1a:	f89d 0006 	ldrb.w	r0, [sp, #6]
   14d1e:	b2ce      	uxtb	r6, r1
   14d20:	4a87      	ldr	r2, [pc, #540]	; (14f40 <mesh_service+0x298>)
   14d22:	1913      	adds	r3, r2, r4
   14d24:	5ca2      	ldrb	r2, [r4, r2]
   14d26:	4572      	cmp	r2, lr
   14d28:	d109      	bne.n	14d3e <mesh_service+0x96>
   14d2a:	785a      	ldrb	r2, [r3, #1]
   14d2c:	4282      	cmp	r2, r0
   14d2e:	d106      	bne.n	14d3e <mesh_service+0x96>
   14d30:	789a      	ldrb	r2, [r3, #2]
   14d32:	2401      	movs	r4, #1
   14d34:	1b96      	subs	r6, r2, r6
   14d36:	bf18      	it	ne
   14d38:	2601      	movne	r6, #1
   14d3a:	7099      	strb	r1, [r3, #2]
   14d3c:	e018      	b.n	14d70 <mesh_service+0xc8>
   14d3e:	3403      	adds	r4, #3
   14d40:	2c0c      	cmp	r4, #12
   14d42:	d1ed      	bne.n	14d20 <mesh_service+0x78>
   14d44:	4a7f      	ldr	r2, [pc, #508]	; (14f44 <mesh_service+0x29c>)
   14d46:	6813      	ldr	r3, [r2, #0]
   14d48:	7099      	strb	r1, [r3, #2]
   14d4a:	497d      	ldr	r1, [pc, #500]	; (14f40 <mesh_service+0x298>)
   14d4c:	7058      	strb	r0, [r3, #1]
   14d4e:	f101 0009 	add.w	r0, r1, #9
   14d52:	4283      	cmp	r3, r0
   14d54:	f883 e000 	strb.w	lr, [r3]
   14d58:	f040 80c4 	bne.w	14ee4 <mesh_service+0x23c>
   14d5c:	6011      	str	r1, [r2, #0]
   14d5e:	f89d 0000 	ldrb.w	r0, [sp]
   14d62:	f89d 3002 	ldrb.w	r3, [sp, #2]
   14d66:	4283      	cmp	r3, r0
   14d68:	f040 80bf 	bne.w	14eea <mesh_service+0x242>
   14d6c:	2400      	movs	r4, #0
   14d6e:	4626      	mov	r6, r4
   14d70:	f89d 0002 	ldrb.w	r0, [sp, #2]
   14d74:	f7ff fd14 	bl	147a0 <mesh_get_rte_to_modify>
   14d78:	f89d 2002 	ldrb.w	r2, [sp, #2]
   14d7c:	7002      	strb	r2, [r0, #0]
   14d7e:	f89d 2002 	ldrb.w	r2, [sp, #2]
   14d82:	7042      	strb	r2, [r0, #1]
   14d84:	2200      	movs	r2, #0
   14d86:	7082      	strb	r2, [r0, #2]
   14d88:	f7ff fc8c 	bl	146a4 <mesh_update_rte_scores>
   14d8c:	2c00      	cmp	r4, #0
   14d8e:	bf08      	it	eq
   14d90:	2601      	moveq	r6, #1
   14d92:	b316      	cbz	r6, 14dda <mesh_service+0x132>
   14d94:	f89d 3000 	ldrb.w	r3, [sp]
   14d98:	42ab      	cmp	r3, r5
   14d9a:	f000 8095 	beq.w	14ec8 <mesh_service+0x220>
   14d9e:	f89d 6001 	ldrb.w	r6, [sp, #1]
   14da2:	2eff      	cmp	r6, #255	; 0xff
   14da4:	d11b      	bne.n	14dde <mesh_service+0x136>
   14da6:	683b      	ldr	r3, [r7, #0]
   14da8:	4668      	mov	r0, sp
   14daa:	2120      	movs	r1, #32
   14dac:	4798      	blx	r3
   14dae:	b920      	cbnz	r0, 14dba <mesh_service+0x112>
   14db0:	4b61      	ldr	r3, [pc, #388]	; (14f38 <mesh_service+0x290>)
   14db2:	781a      	ldrb	r2, [r3, #0]
   14db4:	f042 0204 	orr.w	r2, r2, #4
   14db8:	701a      	strb	r2, [r3, #0]
   14dba:	f89d 3005 	ldrb.w	r3, [sp, #5]
   14dbe:	f003 020f 	and.w	r2, r3, #15
   14dc2:	1c51      	adds	r1, r2, #1
   14dc4:	f361 0303 	bfi	r3, r1, #0, #4
   14dc8:	f88d 3005 	strb.w	r3, [sp, #5]
   14dcc:	f3c3 1303 	ubfx	r3, r3, #4, #4
   14dd0:	429a      	cmp	r2, r3
   14dd2:	da02      	bge.n	14dda <mesh_service+0x132>
   14dd4:	4668      	mov	r0, sp
   14dd6:	f7ff fc1b 	bl	14610 <mesh_send_packet>
   14dda:	2400      	movs	r4, #0
   14ddc:	e075      	b.n	14eca <mesh_service+0x222>
   14dde:	42b5      	cmp	r5, r6
   14de0:	d12a      	bne.n	14e38 <mesh_service+0x190>
   14de2:	b964      	cbnz	r4, 14dfe <mesh_service+0x156>
   14de4:	f89d 3007 	ldrb.w	r3, [sp, #7]
   14de8:	b14b      	cbz	r3, 14dfe <mesh_service+0x156>
   14dea:	683b      	ldr	r3, [r7, #0]
   14dec:	4668      	mov	r0, sp
   14dee:	2120      	movs	r1, #32
   14df0:	4798      	blx	r3
   14df2:	b920      	cbnz	r0, 14dfe <mesh_service+0x156>
   14df4:	4b50      	ldr	r3, [pc, #320]	; (14f38 <mesh_service+0x290>)
   14df6:	781a      	ldrb	r2, [r3, #0]
   14df8:	f042 0204 	orr.w	r2, r2, #4
   14dfc:	701a      	strb	r2, [r3, #0]
   14dfe:	f89d 3004 	ldrb.w	r3, [sp, #4]
   14e02:	099b      	lsrs	r3, r3, #6
   14e04:	2b01      	cmp	r3, #1
   14e06:	d112      	bne.n	14e2e <mesh_service+0x186>
   14e08:	f89d 3007 	ldrb.w	r3, [sp, #7]
   14e0c:	b913      	cbnz	r3, 14e14 <mesh_service+0x16c>
   14e0e:	484e      	ldr	r0, [pc, #312]	; (14f48 <mesh_service+0x2a0>)
   14e10:	2118      	movs	r1, #24
   14e12:	e008      	b.n	14e26 <mesh_service+0x17e>
   14e14:	4847      	ldr	r0, [pc, #284]	; (14f34 <mesh_service+0x28c>)
   14e16:	210c      	movs	r1, #12
   14e18:	466a      	mov	r2, sp
   14e1a:	f7ff ff14 	bl	14c46 <mesh_send_ack>
   14e1e:	2800      	cmp	r0, #0
   14e20:	d152      	bne.n	14ec8 <mesh_service+0x220>
   14e22:	2000      	movs	r0, #0
   14e24:	4601      	mov	r1, r0
   14e26:	466a      	mov	r2, sp
   14e28:	f7ff ff0d 	bl	14c46 <mesh_send_ack>
   14e2c:	e04c      	b.n	14ec8 <mesh_service+0x220>
   14e2e:	f89d 3003 	ldrb.w	r3, [sp, #3]
   14e32:	2b00      	cmp	r3, #0
   14e34:	d148      	bne.n	14ec8 <mesh_service+0x220>
   14e36:	e7f4      	b.n	14e22 <mesh_service+0x17a>
   14e38:	4b44      	ldr	r3, [pc, #272]	; (14f4c <mesh_service+0x2a4>)
   14e3a:	781b      	ldrb	r3, [r3, #0]
   14e3c:	2b00      	cmp	r3, #0
   14e3e:	d0cc      	beq.n	14dda <mesh_service+0x132>
   14e40:	f89d 4005 	ldrb.w	r4, [sp, #5]
   14e44:	f004 080f 	and.w	r8, r4, #15
   14e48:	0927      	lsrs	r7, r4, #4
   14e4a:	45b8      	cmp	r8, r7
   14e4c:	dac5      	bge.n	14dda <mesh_service+0x132>
   14e4e:	4630      	mov	r0, r6
   14e50:	f7ff fc16 	bl	14680 <mesh_find_rte_tbl_entry>
   14e54:	f89d 3003 	ldrb.w	r3, [sp, #3]
   14e58:	f108 0801 	add.w	r8, r8, #1
   14e5c:	f368 0403 	bfi	r4, r8, #0, #4
   14e60:	429d      	cmp	r5, r3
   14e62:	f88d 4005 	strb.w	r4, [sp, #5]
   14e66:	d119      	bne.n	14e9c <mesh_service+0x1f4>
   14e68:	f89d 2004 	ldrb.w	r2, [sp, #4]
   14e6c:	0992      	lsrs	r2, r2, #6
   14e6e:	1cd5      	adds	r5, r2, #3
   14e70:	f005 0503 	and.w	r5, r5, #3
   14e74:	2d01      	cmp	r5, #1
   14e76:	bf8c      	ite	hi
   14e78:	2500      	movhi	r5, #0
   14e7a:	2501      	movls	r5, #1
   14e7c:	b108      	cbz	r0, 14e82 <mesh_service+0x1da>
   14e7e:	7843      	ldrb	r3, [r0, #1]
   14e80:	e000      	b.n	14e84 <mesh_service+0x1dc>
   14e82:	4603      	mov	r3, r0
   14e84:	2a03      	cmp	r2, #3
   14e86:	d105      	bne.n	14e94 <mesh_service+0x1ec>
   14e88:	429e      	cmp	r6, r3
   14e8a:	d003      	beq.n	14e94 <mesh_service+0x1ec>
   14e8c:	3300      	adds	r3, #0
   14e8e:	bf18      	it	ne
   14e90:	2301      	movne	r3, #1
   14e92:	e000      	b.n	14e96 <mesh_service+0x1ee>
   14e94:	2300      	movs	r3, #0
   14e96:	431d      	orrs	r5, r3
   14e98:	b930      	cbnz	r0, 14ea8 <mesh_service+0x200>
   14e9a:	e00a      	b.n	14eb2 <mesh_service+0x20a>
   14e9c:	b9a3      	cbnz	r3, 14ec8 <mesh_service+0x220>
   14e9e:	461d      	mov	r5, r3
   14ea0:	b910      	cbnz	r0, 14ea8 <mesh_service+0x200>
   14ea2:	4668      	mov	r0, sp
   14ea4:	4639      	mov	r1, r7
   14ea6:	e00d      	b.n	14ec4 <mesh_service+0x21c>
   14ea8:	7843      	ldrb	r3, [r0, #1]
   14eaa:	f88d 3003 	strb.w	r3, [sp, #3]
   14eae:	7884      	ldrb	r4, [r0, #2]
   14eb0:	e002      	b.n	14eb8 <mesh_service+0x210>
   14eb2:	f88d 0003 	strb.w	r0, [sp, #3]
   14eb6:	4604      	mov	r4, r0
   14eb8:	4668      	mov	r0, sp
   14eba:	f7ff fba9 	bl	14610 <mesh_send_packet>
   14ebe:	b11d      	cbz	r5, 14ec8 <mesh_service+0x220>
   14ec0:	4668      	mov	r0, sp
   14ec2:	4621      	mov	r1, r4
   14ec4:	f7ff fc26 	bl	14714 <mesh_pending_packets_add>
   14ec8:	466c      	mov	r4, sp
   14eca:	f7ff fb7b 	bl	145c4 <mesh_update_soft_timers>
   14ece:	4620      	mov	r0, r4
   14ed0:	491f      	ldr	r1, [pc, #124]	; (14f50 <mesh_service+0x2a8>)
   14ed2:	2204      	movs	r2, #4
   14ed4:	f7ff fc94 	bl	14800 <mesh_handle_pnd_pkts_for_arr>
   14ed8:	4620      	mov	r0, r4
   14eda:	491e      	ldr	r1, [pc, #120]	; (14f54 <mesh_service+0x2ac>)
   14edc:	2202      	movs	r2, #2
   14ede:	f7ff fc8f 	bl	14800 <mesh_handle_pnd_pkts_for_arr>
   14ee2:	e020      	b.n	14f26 <mesh_service+0x27e>
   14ee4:	3303      	adds	r3, #3
   14ee6:	6013      	str	r3, [r2, #0]
   14ee8:	e739      	b.n	14d5e <mesh_service+0xb6>
   14eea:	4285      	cmp	r5, r0
   14eec:	f43f af3e 	beq.w	14d6c <mesh_service+0xc4>
   14ef0:	f7ff fc56 	bl	147a0 <mesh_get_rte_to_modify>
   14ef4:	4604      	mov	r4, r0
   14ef6:	f7ff fbd5 	bl	146a4 <mesh_update_rte_scores>
   14efa:	7823      	ldrb	r3, [r4, #0]
   14efc:	b13b      	cbz	r3, 14f0e <mesh_service+0x266>
   14efe:	f89d 2005 	ldrb.w	r2, [sp, #5]
   14f02:	78a3      	ldrb	r3, [r4, #2]
   14f04:	f002 020f 	and.w	r2, r2, #15
   14f08:	429a      	cmp	r2, r3
   14f0a:	f73f af2f 	bgt.w	14d6c <mesh_service+0xc4>
   14f0e:	f89d 3000 	ldrb.w	r3, [sp]
   14f12:	7023      	strb	r3, [r4, #0]
   14f14:	f89d 3002 	ldrb.w	r3, [sp, #2]
   14f18:	7063      	strb	r3, [r4, #1]
   14f1a:	f89d 3005 	ldrb.w	r3, [sp, #5]
   14f1e:	f3c3 0303 	ubfx	r3, r3, #0, #4
   14f22:	70a3      	strb	r3, [r4, #2]
   14f24:	e722      	b.n	14d6c <mesh_service+0xc4>
   14f26:	b008      	add	sp, #32
   14f28:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   14f2c:	2007c8c5 	.word	0x2007c8c5
   14f30:	2007c7dc 	.word	0x2007c7dc
   14f34:	2007c898 	.word	0x2007c898
   14f38:	2007c8c6 	.word	0x2007c8c6
   14f3c:	2007c02d 	.word	0x2007c02d
   14f40:	2007c8a9 	.word	0x2007c8a9
   14f44:	2007c028 	.word	0x2007c028
   14f48:	2007c880 	.word	0x2007c880
   14f4c:	2007c8a8 	.word	0x2007c8a8
   14f50:	2007c7f0 	.word	0x2007c7f0
   14f54:	2007c8c8 	.word	0x2007c8c8

00014f58 <mesh_get_pnd_pkt_count>:
mesh_get_pnd_pkt_count():
   14f58:	2300      	movs	r3, #0
   14f5a:	4618      	mov	r0, r3
   14f5c:	4a09      	ldr	r2, [pc, #36]	; (14f84 <mesh_get_pnd_pkt_count+0x2c>)
   14f5e:	441a      	add	r2, r3
   14f60:	7852      	ldrb	r2, [r2, #1]
   14f62:	b10a      	cbz	r2, 14f68 <mesh_get_pnd_pkt_count+0x10>
   14f64:	3001      	adds	r0, #1
   14f66:	b2c0      	uxtb	r0, r0
   14f68:	3324      	adds	r3, #36	; 0x24
   14f6a:	2b90      	cmp	r3, #144	; 0x90
   14f6c:	d1f6      	bne.n	14f5c <mesh_get_pnd_pkt_count+0x4>
   14f6e:	4b06      	ldr	r3, [pc, #24]	; (14f88 <mesh_get_pnd_pkt_count+0x30>)
   14f70:	785a      	ldrb	r2, [r3, #1]
   14f72:	b10a      	cbz	r2, 14f78 <mesh_get_pnd_pkt_count+0x20>
   14f74:	3001      	adds	r0, #1
   14f76:	b2c0      	uxtb	r0, r0
   14f78:	f893 3025 	ldrb.w	r3, [r3, #37]	; 0x25
   14f7c:	b10b      	cbz	r3, 14f82 <mesh_get_pnd_pkt_count+0x2a>
   14f7e:	3001      	adds	r0, #1
   14f80:	b2c0      	uxtb	r0, r0
   14f82:	4770      	bx	lr
   14f84:	2007c7f0 	.word	0x2007c7f0
   14f88:	2007c8c8 	.word	0x2007c8c8

00014f8c <mesh_get_max_timeout_before_packet_fails>:
mesh_get_max_timeout_before_packet_fails():
   14f8c:	b508      	push	{r3, lr}
   14f8e:	f7ff fb77 	bl	14680 <mesh_find_rte_tbl_entry>
   14f92:	4b06      	ldr	r3, [pc, #24]	; (14fac <mesh_get_max_timeout_before_packet_fails+0x20>)
   14f94:	b128      	cbz	r0, 14fa2 <mesh_get_max_timeout_before_packet_fails+0x16>
   14f96:	7882      	ldrb	r2, [r0, #2]
   14f98:	7818      	ldrb	r0, [r3, #0]
   14f9a:	fb02 0000 	mla	r0, r2, r0, r0
   14f9e:	00c0      	lsls	r0, r0, #3
   14fa0:	bd08      	pop	{r3, pc}
   14fa2:	781b      	ldrb	r3, [r3, #0]
   14fa4:	2018      	movs	r0, #24
   14fa6:	4358      	muls	r0, r3
   14fa8:	bd08      	pop	{r3, pc}
   14faa:	bf00      	nop
   14fac:	2007c02c 	.word	0x2007c02c

00014fb0 <mesh_get_stats>:
mesh_get_stats():
   14fb0:	4903      	ldr	r1, [pc, #12]	; (14fc0 <mesh_get_stats+0x10>)
   14fb2:	680b      	ldr	r3, [r1, #0]
   14fb4:	6003      	str	r3, [r0, #0]
   14fb6:	684b      	ldr	r3, [r1, #4]
   14fb8:	6043      	str	r3, [r0, #4]
   14fba:	688b      	ldr	r3, [r1, #8]
   14fbc:	6083      	str	r3, [r0, #8]
   14fbe:	4770      	bx	lr
   14fc0:	2007c898 	.word	0x2007c898

00014fc4 <nordic_transfer>:
nordic_transfer():
   14fc4:	b530      	push	{r4, r5, lr}
   14fc6:	4c46      	ldr	r4, [pc, #280]	; (150e0 <nordic_transfer+0x11c>)
   14fc8:	f44f 3580 	mov.w	r5, #65536	; 0x10000
   14fcc:	61e5      	str	r5, [r4, #28]
   14fce:	4c45      	ldr	r4, [pc, #276]	; (150e4 <nordic_transfer+0x120>)
   14fd0:	60a0      	str	r0, [r4, #8]
   14fd2:	68e0      	ldr	r0, [r4, #12]
   14fd4:	06c5      	lsls	r5, r0, #27
   14fd6:	d4fc      	bmi.n	14fd2 <nordic_transfer+0xe>
   14fd8:	4842      	ldr	r0, [pc, #264]	; (150e4 <nordic_transfer+0x120>)
   14fda:	6880      	ldr	r0, [r0, #8]
   14fdc:	b2c0      	uxtb	r0, r0
   14fde:	2b00      	cmp	r3, #0
   14fe0:	d077      	beq.n	150d2 <nordic_transfer+0x10e>
   14fe2:	460b      	mov	r3, r1
   14fe4:	2a00      	cmp	r2, #0
   14fe6:	d068      	beq.n	150ba <nordic_transfer+0xf6>
   14fe8:	2a07      	cmp	r2, #7
   14fea:	4c3e      	ldr	r4, [pc, #248]	; (150e4 <nordic_transfer+0x120>)
   14fec:	f991 5000 	ldrsb.w	r5, [r1]
   14ff0:	dd36      	ble.n	15060 <nordic_transfer+0x9c>
   14ff2:	60a5      	str	r5, [r4, #8]
   14ff4:	f991 5001 	ldrsb.w	r5, [r1, #1]
   14ff8:	3a08      	subs	r2, #8
   14ffa:	60a5      	str	r5, [r4, #8]
   14ffc:	f991 5002 	ldrsb.w	r5, [r1, #2]
   15000:	60a5      	str	r5, [r4, #8]
   15002:	f991 5003 	ldrsb.w	r5, [r1, #3]
   15006:	60a5      	str	r5, [r4, #8]
   15008:	f991 5004 	ldrsb.w	r5, [r1, #4]
   1500c:	60a5      	str	r5, [r4, #8]
   1500e:	f991 5005 	ldrsb.w	r5, [r1, #5]
   15012:	60a5      	str	r5, [r4, #8]
   15014:	f991 5006 	ldrsb.w	r5, [r1, #6]
   15018:	60a5      	str	r5, [r4, #8]
   1501a:	f101 0508 	add.w	r5, r1, #8
   1501e:	f991 1007 	ldrsb.w	r1, [r1, #7]
   15022:	60a1      	str	r1, [r4, #8]
   15024:	492f      	ldr	r1, [pc, #188]	; (150e4 <nordic_transfer+0x120>)
   15026:	698c      	ldr	r4, [r1, #24]
   15028:	0764      	lsls	r4, r4, #29
   1502a:	d5fb      	bpl.n	15024 <nordic_transfer+0x60>
   1502c:	688c      	ldr	r4, [r1, #8]
   1502e:	701c      	strb	r4, [r3, #0]
   15030:	688c      	ldr	r4, [r1, #8]
   15032:	705c      	strb	r4, [r3, #1]
   15034:	688c      	ldr	r4, [r1, #8]
   15036:	709c      	strb	r4, [r3, #2]
   15038:	6889      	ldr	r1, [r1, #8]
   1503a:	70d9      	strb	r1, [r3, #3]
   1503c:	4929      	ldr	r1, [pc, #164]	; (150e4 <nordic_transfer+0x120>)
   1503e:	68cc      	ldr	r4, [r1, #12]
   15040:	06e4      	lsls	r4, r4, #27
   15042:	d4fb      	bmi.n	1503c <nordic_transfer+0x78>
   15044:	688c      	ldr	r4, [r1, #8]
   15046:	3308      	adds	r3, #8
   15048:	f803 4c04 	strb.w	r4, [r3, #-4]
   1504c:	688c      	ldr	r4, [r1, #8]
   1504e:	f803 4c03 	strb.w	r4, [r3, #-3]
   15052:	688c      	ldr	r4, [r1, #8]
   15054:	f803 4c02 	strb.w	r4, [r3, #-2]
   15058:	6889      	ldr	r1, [r1, #8]
   1505a:	f803 1c01 	strb.w	r1, [r3, #-1]
   1505e:	e01e      	b.n	1509e <nordic_transfer+0xda>
   15060:	2a03      	cmp	r2, #3
   15062:	dd1e      	ble.n	150a2 <nordic_transfer+0xde>
   15064:	60a5      	str	r5, [r4, #8]
   15066:	f991 5001 	ldrsb.w	r5, [r1, #1]
   1506a:	3a04      	subs	r2, #4
   1506c:	60a5      	str	r5, [r4, #8]
   1506e:	f991 5002 	ldrsb.w	r5, [r1, #2]
   15072:	60a5      	str	r5, [r4, #8]
   15074:	1d0d      	adds	r5, r1, #4
   15076:	f991 1003 	ldrsb.w	r1, [r1, #3]
   1507a:	60a1      	str	r1, [r4, #8]
   1507c:	4919      	ldr	r1, [pc, #100]	; (150e4 <nordic_transfer+0x120>)
   1507e:	68cc      	ldr	r4, [r1, #12]
   15080:	06e4      	lsls	r4, r4, #27
   15082:	d4fb      	bmi.n	1507c <nordic_transfer+0xb8>
   15084:	688c      	ldr	r4, [r1, #8]
   15086:	3304      	adds	r3, #4
   15088:	f803 4c04 	strb.w	r4, [r3, #-4]
   1508c:	688c      	ldr	r4, [r1, #8]
   1508e:	f803 4c03 	strb.w	r4, [r3, #-3]
   15092:	688c      	ldr	r4, [r1, #8]
   15094:	f803 4c02 	strb.w	r4, [r3, #-2]
   15098:	6889      	ldr	r1, [r1, #8]
   1509a:	f803 1c01 	strb.w	r1, [r3, #-1]
   1509e:	4629      	mov	r1, r5
   150a0:	e7a0      	b.n	14fe4 <nordic_transfer+0x20>
   150a2:	3101      	adds	r1, #1
   150a4:	60a5      	str	r5, [r4, #8]
   150a6:	3a01      	subs	r2, #1
   150a8:	68e5      	ldr	r5, [r4, #12]
   150aa:	06ed      	lsls	r5, r5, #27
   150ac:	d4fc      	bmi.n	150a8 <nordic_transfer+0xe4>
   150ae:	4c0d      	ldr	r4, [pc, #52]	; (150e4 <nordic_transfer+0x120>)
   150b0:	3301      	adds	r3, #1
   150b2:	68a4      	ldr	r4, [r4, #8]
   150b4:	f803 4c01 	strb.w	r4, [r3, #-1]
   150b8:	e794      	b.n	14fe4 <nordic_transfer+0x20>
   150ba:	4b09      	ldr	r3, [pc, #36]	; (150e0 <nordic_transfer+0x11c>)
   150bc:	f44f 3280 	mov.w	r2, #65536	; 0x10000
   150c0:	619a      	str	r2, [r3, #24]
   150c2:	b240      	sxtb	r0, r0
   150c4:	bd30      	pop	{r4, r5, pc}
   150c6:	68e5      	ldr	r5, [r4, #12]
   150c8:	06ed      	lsls	r5, r5, #27
   150ca:	d4fc      	bmi.n	150c6 <nordic_transfer+0x102>
   150cc:	4c05      	ldr	r4, [pc, #20]	; (150e4 <nordic_transfer+0x120>)
   150ce:	3301      	adds	r3, #1
   150d0:	68a4      	ldr	r4, [r4, #8]
   150d2:	4293      	cmp	r3, r2
   150d4:	daf1      	bge.n	150ba <nordic_transfer+0xf6>
   150d6:	56cd      	ldrsb	r5, [r1, r3]
   150d8:	4c02      	ldr	r4, [pc, #8]	; (150e4 <nordic_transfer+0x120>)
   150da:	60a5      	str	r5, [r4, #8]
   150dc:	e7f3      	b.n	150c6 <nordic_transfer+0x102>
   150de:	bf00      	nop
   150e0:	2009c000 	.word	0x2009c000
   150e4:	40088000 	.word	0x40088000

000150e8 <nordic_readRegister>:
nordic_readRegister():
   150e8:	b507      	push	{r0, r1, r2, lr}
   150ea:	2300      	movs	r3, #0
   150ec:	a902      	add	r1, sp, #8
   150ee:	2201      	movs	r2, #1
   150f0:	f801 3d01 	strb.w	r3, [r1, #-1]!
   150f4:	f000 001f 	and.w	r0, r0, #31
   150f8:	4613      	mov	r3, r2
   150fa:	f7ff ff63 	bl	14fc4 <nordic_transfer>
   150fe:	f99d 0007 	ldrsb.w	r0, [sp, #7]
   15102:	b003      	add	sp, #12
   15104:	f85d fb04 	ldr.w	pc, [sp], #4

00015108 <nordic_writeRegister>:
nordic_writeRegister():
   15108:	b507      	push	{r0, r1, r2, lr}
   1510a:	ab02      	add	r3, sp, #8
   1510c:	f803 1d01 	strb.w	r1, [r3, #-1]!
   15110:	f000 001f 	and.w	r0, r0, #31
   15114:	4619      	mov	r1, r3
   15116:	2201      	movs	r2, #1
   15118:	2300      	movs	r3, #0
   1511a:	f040 0020 	orr.w	r0, r0, #32
   1511e:	f7ff ff51 	bl	14fc4 <nordic_transfer>
   15122:	b003      	add	sp, #12
   15124:	f85d fb04 	ldr.w	pc, [sp], #4

00015128 <nordic_is_tx_fifo_empty>:
nordic_is_tx_fifo_empty():
   15128:	b508      	push	{r3, lr}
   1512a:	2017      	movs	r0, #23
   1512c:	f7ff ffdc 	bl	150e8 <nordic_readRegister>
   15130:	f3c0 1000 	ubfx	r0, r0, #4, #1
   15134:	bd08      	pop	{r3, pc}

00015136 <nordic_clear_all_intr_flags>:
nordic_clear_all_intr_flags():
   15136:	2007      	movs	r0, #7
   15138:	2170      	movs	r1, #112	; 0x70
   1513a:	f7ff bfe5 	b.w	15108 <nordic_writeRegister>

0001513e <nordic_queue_tx_fifo>:
nordic_queue_tx_fifo():
   1513e:	4603      	mov	r3, r0
   15140:	460a      	mov	r2, r1
   15142:	f06f 005f 	mvn.w	r0, #95	; 0x5f
   15146:	4619      	mov	r1, r3
   15148:	2300      	movs	r3, #0
   1514a:	f7ff bf3b 	b.w	14fc4 <nordic_transfer>

0001514e <nordic_standby1_to_tx_mode1>:
nordic_standby1_to_tx_mode1():
   1514e:	b508      	push	{r3, lr}
   15150:	2000      	movs	r0, #0
   15152:	f7ff ffc9 	bl	150e8 <nordic_readRegister>
   15156:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
   1515a:	f020 0101 	bic.w	r1, r0, #1
   1515e:	b249      	sxtb	r1, r1
   15160:	2000      	movs	r0, #0
   15162:	f7ff bfd1 	b.w	15108 <nordic_writeRegister>
	...

00015168 <nordic_rx_to_Stanby1>:
nordic_rx_to_Stanby1():
   15168:	4b02      	ldr	r3, [pc, #8]	; (15174 <nordic_rx_to_Stanby1+0xc>)
   1516a:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
   1516e:	61da      	str	r2, [r3, #28]
   15170:	4770      	bx	lr
   15172:	bf00      	nop
   15174:	2009c020 	.word	0x2009c020

00015178 <nordic_standby1_to_rx>:
nordic_standby1_to_rx():
   15178:	b508      	push	{r3, lr}
   1517a:	2000      	movs	r0, #0
   1517c:	f7ff ffb4 	bl	150e8 <nordic_readRegister>
   15180:	f040 0101 	orr.w	r1, r0, #1
   15184:	b249      	sxtb	r1, r1
   15186:	2000      	movs	r0, #0
   15188:	f7ff ffbe 	bl	15108 <nordic_writeRegister>
   1518c:	4b02      	ldr	r3, [pc, #8]	; (15198 <nordic_standby1_to_rx+0x20>)
   1518e:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
   15192:	619a      	str	r2, [r3, #24]
   15194:	bd08      	pop	{r3, pc}
   15196:	bf00      	nop
   15198:	2009c020 	.word	0x2009c020

0001519c <nordic_clear_packet_sent_flag>:
nordic_clear_packet_sent_flag():
   1519c:	2007      	movs	r0, #7
   1519e:	2120      	movs	r1, #32
   151a0:	f7ff bfb2 	b.w	15108 <nordic_writeRegister>

000151a4 <nordic_flush_tx_fifo>:
nordic_flush_tx_fifo():
   151a4:	2100      	movs	r1, #0
   151a6:	f06f 001e 	mvn.w	r0, #30
   151aa:	460a      	mov	r2, r1
   151ac:	460b      	mov	r3, r1
   151ae:	f7ff bf09 	b.w	14fc4 <nordic_transfer>
	...

000151b4 <nordic_mode1_send_single_packet>:
nordic_mode1_send_single_packet():
   151b4:	b537      	push	{r0, r1, r2, r4, r5, lr}
   151b6:	460c      	mov	r4, r1
   151b8:	4605      	mov	r5, r0
   151ba:	f7ff fff3 	bl	151a4 <nordic_flush_tx_fifo>
   151be:	4621      	mov	r1, r4
   151c0:	4628      	mov	r0, r5
   151c2:	f7ff ffbc 	bl	1513e <nordic_queue_tx_fifo>
   151c6:	4b0d      	ldr	r3, [pc, #52]	; (151fc <nordic_mode1_send_single_packet+0x48>)
   151c8:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
   151cc:	619a      	str	r2, [r3, #24]
   151ce:	2200      	movs	r2, #0
   151d0:	f8ad 2006 	strh.w	r2, [sp, #6]
   151d4:	461c      	mov	r4, r3
   151d6:	f8bd 3006 	ldrh.w	r3, [sp, #6]
   151da:	3301      	adds	r3, #1
   151dc:	b29b      	uxth	r3, r3
   151de:	f8ad 3006 	strh.w	r3, [sp, #6]
   151e2:	b933      	cbnz	r3, 151f2 <nordic_mode1_send_single_packet+0x3e>
   151e4:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
   151e8:	61e3      	str	r3, [r4, #28]
   151ea:	f7ff ffdb 	bl	151a4 <nordic_flush_tx_fifo>
   151ee:	b003      	add	sp, #12
   151f0:	bd30      	pop	{r4, r5, pc}
   151f2:	f7ff ff99 	bl	15128 <nordic_is_tx_fifo_empty>
   151f6:	2800      	cmp	r0, #0
   151f8:	d0ed      	beq.n	151d6 <nordic_mode1_send_single_packet+0x22>
   151fa:	e7f3      	b.n	151e4 <nordic_mode1_send_single_packet+0x30>
   151fc:	2009c020 	.word	0x2009c020

00015200 <nordic_is_packet_available>:
nordic_is_packet_available():
   15200:	b508      	push	{r3, lr}
   15202:	2017      	movs	r0, #23
   15204:	f7ff ff70 	bl	150e8 <nordic_readRegister>
   15208:	f000 0001 	and.w	r0, r0, #1
   1520c:	f080 0001 	eor.w	r0, r0, #1
   15210:	bd08      	pop	{r3, pc}

00015212 <nordic_clear_packet_available_flag>:
nordic_clear_packet_available_flag():
   15212:	2007      	movs	r0, #7
   15214:	2140      	movs	r1, #64	; 0x40
   15216:	f7ff bf77 	b.w	15108 <nordic_writeRegister>

0001521a <nordic_read_rx_fifo>:
nordic_read_rx_fifo():
   1521a:	b508      	push	{r3, lr}
   1521c:	4603      	mov	r3, r0
   1521e:	460a      	mov	r2, r1
   15220:	2061      	movs	r0, #97	; 0x61
   15222:	4619      	mov	r1, r3
   15224:	2301      	movs	r3, #1
   15226:	f7ff fecd 	bl	14fc4 <nordic_transfer>
   1522a:	f3c0 0042 	ubfx	r0, r0, #1, #3
   1522e:	bd08      	pop	{r3, pc}

00015230 <nordic_flush_rx_fifo>:
nordic_flush_rx_fifo():
   15230:	2100      	movs	r1, #0
   15232:	f06f 001d 	mvn.w	r0, #29
   15236:	460a      	mov	r2, r1
   15238:	460b      	mov	r3, r1
   1523a:	f7ff bec3 	b.w	14fc4 <nordic_transfer>

0001523e <nordic_set_intr_signals>:
nordic_set_intr_signals():
   1523e:	b570      	push	{r4, r5, r6, lr}
   15240:	4604      	mov	r4, r0
   15242:	2000      	movs	r0, #0
   15244:	460d      	mov	r5, r1
   15246:	4616      	mov	r6, r2
   15248:	f7ff ff4e 	bl	150e8 <nordic_readRegister>
   1524c:	b114      	cbz	r4, 15254 <nordic_set_intr_signals+0x16>
   1524e:	f000 00bf 	and.w	r0, r0, #191	; 0xbf
   15252:	e002      	b.n	1525a <nordic_set_intr_signals+0x1c>
   15254:	f040 0040 	orr.w	r0, r0, #64	; 0x40
   15258:	b2c0      	uxtb	r0, r0
   1525a:	b115      	cbz	r5, 15262 <nordic_set_intr_signals+0x24>
   1525c:	f000 00df 	and.w	r0, r0, #223	; 0xdf
   15260:	e001      	b.n	15266 <nordic_set_intr_signals+0x28>
   15262:	f040 0020 	orr.w	r0, r0, #32
   15266:	b116      	cbz	r6, 1526e <nordic_set_intr_signals+0x30>
   15268:	f000 01ef 	and.w	r1, r0, #239	; 0xef
   1526c:	e001      	b.n	15272 <nordic_set_intr_signals+0x34>
   1526e:	f040 0110 	orr.w	r1, r0, #16
   15272:	2000      	movs	r0, #0
   15274:	b249      	sxtb	r1, r1
   15276:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
   1527a:	f7ff bf45 	b.w	15108 <nordic_writeRegister>

0001527e <nordic_set_crc>:
nordic_set_crc():
   1527e:	b510      	push	{r4, lr}
   15280:	4604      	mov	r4, r0
   15282:	2000      	movs	r0, #0
   15284:	f7ff ff30 	bl	150e8 <nordic_readRegister>
   15288:	b914      	cbnz	r4, 15290 <nordic_set_crc+0x12>
   1528a:	f000 01f7 	and.w	r1, r0, #247	; 0xf7
   1528e:	e00d      	b.n	152ac <nordic_set_crc+0x2e>
   15290:	2c01      	cmp	r4, #1
   15292:	d104      	bne.n	1529e <nordic_set_crc+0x20>
   15294:	f000 01fb 	and.w	r1, r0, #251	; 0xfb
   15298:	f041 0108 	orr.w	r1, r1, #8
   1529c:	e006      	b.n	152ac <nordic_set_crc+0x2e>
   1529e:	2c02      	cmp	r4, #2
   152a0:	bf14      	ite	ne
   152a2:	f040 0108 	orrne.w	r1, r0, #8
   152a6:	f040 010c 	orreq.w	r1, r0, #12
   152aa:	b2c9      	uxtb	r1, r1
   152ac:	2000      	movs	r0, #0
   152ae:	b249      	sxtb	r1, r1
   152b0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   152b4:	f7ff bf28 	b.w	15108 <nordic_writeRegister>

000152b8 <nordic_power_up>:
nordic_power_up():
   152b8:	b508      	push	{r3, lr}
   152ba:	2000      	movs	r0, #0
   152bc:	f7ff ff14 	bl	150e8 <nordic_readRegister>
   152c0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
   152c4:	f040 0102 	orr.w	r1, r0, #2
   152c8:	b249      	sxtb	r1, r1
   152ca:	2000      	movs	r0, #0
   152cc:	f7ff bf1c 	b.w	15108 <nordic_writeRegister>

000152d0 <nordic_power_down>:
nordic_power_down():
   152d0:	b508      	push	{r3, lr}
   152d2:	2000      	movs	r0, #0
   152d4:	f7ff ff08 	bl	150e8 <nordic_readRegister>
   152d8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
   152dc:	f020 0102 	bic.w	r1, r0, #2
   152e0:	b249      	sxtb	r1, r1
   152e2:	2000      	movs	r0, #0
   152e4:	f7ff bf10 	b.w	15108 <nordic_writeRegister>

000152e8 <nordic_set_channel>:
nordic_set_channel():
   152e8:	f640 13dd 	movw	r3, #2525	; 0x9dd
   152ec:	4298      	cmp	r0, r3
   152ee:	d806      	bhi.n	152fe <nordic_set_channel+0x16>
   152f0:	f640 1362 	movw	r3, #2402	; 0x962
   152f4:	f5b0 6f16 	cmp.w	r0, #2400	; 0x960
   152f8:	bf38      	it	cc
   152fa:	4618      	movcc	r0, r3
   152fc:	e000      	b.n	15300 <nordic_set_channel+0x18>
   152fe:	4618      	mov	r0, r3
   15300:	f5a0 6116 	sub.w	r1, r0, #2400	; 0x960
   15304:	b249      	sxtb	r1, r1
   15306:	2005      	movs	r0, #5
   15308:	f7ff befe 	b.w	15108 <nordic_writeRegister>

0001530c <nordic_set_air_data_rate>:
nordic_set_air_data_rate():
   1530c:	b510      	push	{r4, lr}
   1530e:	4604      	mov	r4, r0
   15310:	2006      	movs	r0, #6
   15312:	f7ff fee9 	bl	150e8 <nordic_readRegister>
   15316:	2cfa      	cmp	r4, #250	; 0xfa
   15318:	f000 01d7 	and.w	r1, r0, #215	; 0xd7
   1531c:	d102      	bne.n	15324 <nordic_set_air_data_rate+0x18>
   1531e:	f041 0120 	orr.w	r1, r1, #32
   15322:	e004      	b.n	1532e <nordic_set_air_data_rate+0x22>
   15324:	f5b4 6ffa 	cmp.w	r4, #2000	; 0x7d0
   15328:	bf08      	it	eq
   1532a:	f041 0108 	orreq.w	r1, r1, #8
   1532e:	2006      	movs	r0, #6
   15330:	b249      	sxtb	r1, r1
   15332:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   15336:	f7ff bee7 	b.w	15108 <nordic_writeRegister>

0001533a <nordic_set_power_level>:
nordic_set_power_level():
   1533a:	b510      	push	{r4, lr}
   1533c:	4604      	mov	r4, r0
   1533e:	2006      	movs	r0, #6
   15340:	f7ff fed2 	bl	150e8 <nordic_readRegister>
   15344:	2c03      	cmp	r4, #3
   15346:	bf34      	ite	cc
   15348:	4621      	movcc	r1, r4
   1534a:	2103      	movcs	r1, #3
   1534c:	f000 00f9 	and.w	r0, r0, #249	; 0xf9
   15350:	ea40 0141 	orr.w	r1, r0, r1, lsl #1
   15354:	b249      	sxtb	r1, r1
   15356:	2006      	movs	r0, #6
   15358:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   1535c:	f7ff bed4 	b.w	15108 <nordic_writeRegister>

00015360 <nordic_set_auto_transmit_options>:
nordic_set_auto_transmit_options():
   15360:	28f9      	cmp	r0, #249	; 0xf9
   15362:	f04f 03fa 	mov.w	r3, #250	; 0xfa
   15366:	d905      	bls.n	15374 <nordic_set_auto_transmit_options+0x14>
   15368:	f5b0 6f7a 	cmp.w	r0, #4000	; 0xfa0
   1536c:	bf88      	it	hi
   1536e:	f44f 607a 	movhi.w	r0, #4000	; 0xfa0
   15372:	e000      	b.n	15376 <nordic_set_auto_transmit_options+0x16>
   15374:	4618      	mov	r0, r3
   15376:	fbb0 f3f3 	udiv	r3, r0, r3
   1537a:	3b01      	subs	r3, #1
   1537c:	b2db      	uxtb	r3, r3
   1537e:	290f      	cmp	r1, #15
   15380:	bf28      	it	cs
   15382:	210f      	movcs	r1, #15
   15384:	ea41 1103 	orr.w	r1, r1, r3, lsl #4
   15388:	2004      	movs	r0, #4
   1538a:	b249      	sxtb	r1, r1
   1538c:	f7ff bebc 	b.w	15108 <nordic_writeRegister>

00015390 <nordic_set_payload_for_pipe>:
nordic_set_payload_for_pipe():
   15390:	3011      	adds	r0, #17
   15392:	b2c0      	uxtb	r0, r0
   15394:	2816      	cmp	r0, #22
   15396:	d806      	bhi.n	153a6 <nordic_set_payload_for_pipe+0x16>
   15398:	2920      	cmp	r1, #32
   1539a:	bf28      	it	cs
   1539c:	2120      	movcs	r1, #32
   1539e:	b240      	sxtb	r0, r0
   153a0:	b249      	sxtb	r1, r1
   153a2:	f7ff beb1 	b.w	15108 <nordic_writeRegister>
   153a6:	4770      	bx	lr

000153a8 <nordic_set_addr_width>:
nordic_set_addr_width():
   153a8:	2803      	cmp	r0, #3
   153aa:	d004      	beq.n	153b6 <nordic_set_addr_width+0xe>
   153ac:	2804      	cmp	r0, #4
   153ae:	bf0c      	ite	eq
   153b0:	2102      	moveq	r1, #2
   153b2:	2103      	movne	r1, #3
   153b4:	e000      	b.n	153b8 <nordic_set_addr_width+0x10>
   153b6:	2101      	movs	r1, #1
   153b8:	2003      	movs	r0, #3
   153ba:	f7ff bea5 	b.w	15108 <nordic_writeRegister>

000153be <nordic_set_tx_address>:
nordic_set_tx_address():
   153be:	4603      	mov	r3, r0
   153c0:	460a      	mov	r2, r1
   153c2:	2030      	movs	r0, #48	; 0x30
   153c4:	4619      	mov	r1, r3
   153c6:	2300      	movs	r3, #0
   153c8:	f7ff bdfc 	b.w	14fc4 <nordic_transfer>

000153cc <nordic_set_rx_pipe0_addr>:
nordic_set_rx_pipe0_addr():
   153cc:	4603      	mov	r3, r0
   153ce:	460a      	mov	r2, r1
   153d0:	202a      	movs	r0, #42	; 0x2a
   153d2:	4619      	mov	r1, r3
   153d4:	2300      	movs	r3, #0
   153d6:	f7ff bdf5 	b.w	14fc4 <nordic_transfer>
	...

000153dc <nordic_init>:
nordic_init():
   153dc:	b573      	push	{r0, r1, r4, r5, r6, lr}
   153de:	4604      	mov	r4, r0
   153e0:	460e      	mov	r6, r1
   153e2:	4615      	mov	r5, r2
   153e4:	f7ff ff24 	bl	15230 <nordic_flush_rx_fifo>
   153e8:	f7ff fedc 	bl	151a4 <nordic_flush_tx_fifo>
   153ec:	4b2b      	ldr	r3, [pc, #172]	; (1549c <nordic_init+0xc0>)
   153ee:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
   153f2:	61da      	str	r2, [r3, #28]
   153f4:	f7ff ff6c 	bl	152d0 <nordic_power_down>
   153f8:	2100      	movs	r1, #0
   153fa:	460a      	mov	r2, r1
   153fc:	2001      	movs	r0, #1
   153fe:	f7ff ff1e 	bl	1523e <nordic_set_intr_signals>
   15402:	f7ff fe98 	bl	15136 <nordic_clear_all_intr_flags>
   15406:	2002      	movs	r0, #2
   15408:	f7ff ff39 	bl	1527e <nordic_set_crc>
   1540c:	4630      	mov	r0, r6
   1540e:	f7ff ff6b 	bl	152e8 <nordic_set_channel>
   15412:	4628      	mov	r0, r5
   15414:	f7ff ff7a 	bl	1530c <nordic_set_air_data_rate>
   15418:	2003      	movs	r0, #3
   1541a:	f7ff ff8e 	bl	1533a <nordic_set_power_level>
   1541e:	2002      	movs	r0, #2
   15420:	2103      	movs	r1, #3
   15422:	f7ff fe71 	bl	15108 <nordic_writeRegister>
   15426:	2001      	movs	r0, #1
   15428:	2100      	movs	r1, #0
   1542a:	f7ff fe6d 	bl	15108 <nordic_writeRegister>
   1542e:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
   15432:	2103      	movs	r1, #3
   15434:	f7ff ff94 	bl	15360 <nordic_set_auto_transmit_options>
   15438:	4621      	mov	r1, r4
   1543a:	2000      	movs	r0, #0
   1543c:	f7ff ffa8 	bl	15390 <nordic_set_payload_for_pipe>
   15440:	2012      	movs	r0, #18
   15442:	2100      	movs	r1, #0
   15444:	f7ff fe60 	bl	15108 <nordic_writeRegister>
   15448:	2013      	movs	r0, #19
   1544a:	2100      	movs	r1, #0
   1544c:	f7ff fe5c 	bl	15108 <nordic_writeRegister>
   15450:	2014      	movs	r0, #20
   15452:	2100      	movs	r1, #0
   15454:	f7ff fe58 	bl	15108 <nordic_writeRegister>
   15458:	2015      	movs	r0, #21
   1545a:	2100      	movs	r1, #0
   1545c:	f7ff fe54 	bl	15108 <nordic_writeRegister>
   15460:	2100      	movs	r1, #0
   15462:	2016      	movs	r0, #22
   15464:	f7ff fe50 	bl	15108 <nordic_writeRegister>
   15468:	4b0d      	ldr	r3, [pc, #52]	; (154a0 <nordic_init+0xc4>)
   1546a:	6818      	ldr	r0, [r3, #0]
   1546c:	791b      	ldrb	r3, [r3, #4]
   1546e:	9000      	str	r0, [sp, #0]
   15470:	2005      	movs	r0, #5
   15472:	f88d 3004 	strb.w	r3, [sp, #4]
   15476:	f7ff ff97 	bl	153a8 <nordic_set_addr_width>
   1547a:	4668      	mov	r0, sp
   1547c:	2105      	movs	r1, #5
   1547e:	f7ff ff9e 	bl	153be <nordic_set_tx_address>
   15482:	4668      	mov	r0, sp
   15484:	2105      	movs	r1, #5
   15486:	f7ff ffa1 	bl	153cc <nordic_set_rx_pipe0_addr>
   1548a:	f7ff ff15 	bl	152b8 <nordic_power_up>
   1548e:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
   15492:	f004 fbb6 	bl	19c02 <delay_us>
   15496:	b002      	add	sp, #8
   15498:	bd70      	pop	{r4, r5, r6, pc}
   1549a:	bf00      	nop
   1549c:	2009c020 	.word	0x2009c020
   154a0:	00026887 	.word	0x00026887

000154a4 <nrf_irq_callback>:
nrf_irq_callback():
   154a4:	b507      	push	{r0, r1, r2, lr}
   154a6:	4b09      	ldr	r3, [pc, #36]	; (154cc <nrf_irq_callback+0x28>)
   154a8:	2100      	movs	r1, #0
   154aa:	aa02      	add	r2, sp, #8
   154ac:	6818      	ldr	r0, [r3, #0]
   154ae:	f842 1d04 	str.w	r1, [r2, #-4]!
   154b2:	460b      	mov	r3, r1
   154b4:	f006 f923 	bl	1b6fe <xQueueGenericSendFromISR>
   154b8:	9b01      	ldr	r3, [sp, #4]
   154ba:	b11b      	cbz	r3, 154c4 <nrf_irq_callback+0x20>
   154bc:	4b04      	ldr	r3, [pc, #16]	; (154d0 <nrf_irq_callback+0x2c>)
   154be:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   154c2:	601a      	str	r2, [r3, #0]
   154c4:	b003      	add	sp, #12
   154c6:	f85d fb04 	ldr.w	pc, [sp], #4
   154ca:	bf00      	nop
   154cc:	2007c918 	.word	0x2007c918
   154d0:	e000ed04 	.word	0xe000ed04

000154d4 <nrf_driver_init>:
nrf_driver_init():
   154d4:	b570      	push	{r4, r5, r6, lr}
   154d6:	4e17      	ldr	r6, [pc, #92]	; (15534 <nrf_driver_init+0x60>)
   154d8:	6832      	ldr	r2, [r6, #0]
   154da:	b922      	cbnz	r2, 154e6 <nrf_driver_init+0x12>
   154dc:	2003      	movs	r0, #3
   154de:	2120      	movs	r1, #32
   154e0:	f006 f845 	bl	1b56e <xQueueGenericCreate>
   154e4:	6030      	str	r0, [r6, #0]
   154e6:	4d14      	ldr	r5, [pc, #80]	; (15538 <nrf_driver_init+0x64>)
   154e8:	682a      	ldr	r2, [r5, #0]
   154ea:	b922      	cbnz	r2, 154f6 <nrf_driver_init+0x22>
   154ec:	2001      	movs	r0, #1
   154ee:	2120      	movs	r1, #32
   154f0:	f006 f83d 	bl	1b56e <xQueueGenericCreate>
   154f4:	6028      	str	r0, [r5, #0]
   154f6:	4c11      	ldr	r4, [pc, #68]	; (1553c <nrf_driver_init+0x68>)
   154f8:	6821      	ldr	r1, [r4, #0]
   154fa:	b921      	cbnz	r1, 15506 <nrf_driver_init+0x32>
   154fc:	2001      	movs	r0, #1
   154fe:	2203      	movs	r2, #3
   15500:	f006 f835 	bl	1b56e <xQueueGenericCreate>
   15504:	6020      	str	r0, [r4, #0]
   15506:	2020      	movs	r0, #32
   15508:	f640 11c3 	movw	r1, #2499	; 0x9c3
   1550c:	f44f 62fa 	mov.w	r2, #2000	; 0x7d0
   15510:	f7ff ff64 	bl	153dc <nordic_init>
   15514:	f7ff fe30 	bl	15178 <nordic_standby1_to_rx>
   15518:	2016      	movs	r0, #22
   1551a:	2101      	movs	r1, #1
   1551c:	4a08      	ldr	r2, [pc, #32]	; (15540 <nrf_driver_init+0x6c>)
   1551e:	f004 ff43 	bl	1a3a8 <eint3_enable_port0>
   15522:	6830      	ldr	r0, [r6, #0]
   15524:	b128      	cbz	r0, 15532 <nrf_driver_init+0x5e>
   15526:	6828      	ldr	r0, [r5, #0]
   15528:	b118      	cbz	r0, 15532 <nrf_driver_init+0x5e>
   1552a:	6820      	ldr	r0, [r4, #0]
   1552c:	3000      	adds	r0, #0
   1552e:	bf18      	it	ne
   15530:	2001      	movne	r0, #1
   15532:	bd70      	pop	{r4, r5, r6, pc}
   15534:	2007c914 	.word	0x2007c914
   15538:	2007c910 	.word	0x2007c910
   1553c:	2007c918 	.word	0x2007c918
   15540:	000154a5 	.word	0x000154a5

00015544 <nrf_driver_app_recv>:
nrf_driver_app_recv():
   15544:	b570      	push	{r4, r5, r6, lr}
   15546:	7903      	ldrb	r3, [r0, #4]
   15548:	4606      	mov	r6, r0
   1554a:	099b      	lsrs	r3, r3, #6
   1554c:	2b03      	cmp	r3, #3
   1554e:	bf0c      	ite	eq
   15550:	4b0d      	ldreq	r3, [pc, #52]	; (15588 <nrf_driver_app_recv+0x44>)
   15552:	4b0e      	ldrne	r3, [pc, #56]	; (1558c <nrf_driver_app_recv+0x48>)
   15554:	2200      	movs	r2, #0
   15556:	681d      	ldr	r5, [r3, #0]
   15558:	b088      	sub	sp, #32
   1555a:	4628      	mov	r0, r5
   1555c:	4631      	mov	r1, r6
   1555e:	4613      	mov	r3, r2
   15560:	f006 f836 	bl	1b5d0 <xQueueGenericSend>
   15564:	4604      	mov	r4, r0
   15566:	b960      	cbnz	r0, 15582 <nrf_driver_app_recv+0x3e>
   15568:	4622      	mov	r2, r4
   1556a:	4623      	mov	r3, r4
   1556c:	4669      	mov	r1, sp
   1556e:	4628      	mov	r0, r5
   15570:	f006 f8fe 	bl	1b770 <xQueueGenericReceive>
   15574:	4622      	mov	r2, r4
   15576:	4623      	mov	r3, r4
   15578:	4628      	mov	r0, r5
   1557a:	4631      	mov	r1, r6
   1557c:	f006 f828 	bl	1b5d0 <xQueueGenericSend>
   15580:	4604      	mov	r4, r0
   15582:	4620      	mov	r0, r4
   15584:	b008      	add	sp, #32
   15586:	bd70      	pop	{r4, r5, r6, pc}
   15588:	2007c910 	.word	0x2007c910
   1558c:	2007c914 	.word	0x2007c914

00015590 <nrf_driver_send>:
nrf_driver_send():
   15590:	b538      	push	{r3, r4, r5, lr}
   15592:	4604      	mov	r4, r0
   15594:	460d      	mov	r5, r1
   15596:	f7ff fa01 	bl	1499c <mesh_get_node_address>
   1559a:	7823      	ldrb	r3, [r4, #0]
   1559c:	4283      	cmp	r3, r0
   1559e:	d00a      	beq.n	155b6 <nrf_driver_send+0x26>
   155a0:	78e3      	ldrb	r3, [r4, #3]
   155a2:	b943      	cbnz	r3, 155b6 <nrf_driver_send+0x26>
   155a4:	f00a f90c 	bl	1f7c0 <rand>
   155a8:	23bd      	movs	r3, #189	; 0xbd
   155aa:	f000 0003 	and.w	r0, r0, #3
   155ae:	fb00 3003 	mla	r0, r0, r3, r3
   155b2:	f004 fb26 	bl	19c02 <delay_us>
   155b6:	f7ff fdd7 	bl	15168 <nordic_rx_to_Stanby1>
   155ba:	f7ff fdc8 	bl	1514e <nordic_standby1_to_tx_mode1>
   155be:	4620      	mov	r0, r4
   155c0:	b2a9      	uxth	r1, r5
   155c2:	f7ff fdf7 	bl	151b4 <nordic_mode1_send_single_packet>
   155c6:	f7ff fde9 	bl	1519c <nordic_clear_packet_sent_flag>
   155ca:	f7ff fdd5 	bl	15178 <nordic_standby1_to_rx>
   155ce:	f006 fe4f 	bl	1c270 <xTaskGetSchedulerState>
   155d2:	2802      	cmp	r0, #2
   155d4:	d106      	bne.n	155e4 <nrf_driver_send+0x54>
   155d6:	4b04      	ldr	r3, [pc, #16]	; (155e8 <nrf_driver_send+0x58>)
   155d8:	2100      	movs	r1, #0
   155da:	6818      	ldr	r0, [r3, #0]
   155dc:	460a      	mov	r2, r1
   155de:	460b      	mov	r3, r1
   155e0:	f006 f88d 	bl	1b6fe <xQueueGenericSendFromISR>
   155e4:	2001      	movs	r0, #1
   155e6:	bd38      	pop	{r3, r4, r5, pc}
   155e8:	2007c918 	.word	0x2007c918

000155ec <nrf_driver_receive>:
nrf_driver_receive():
   155ec:	b538      	push	{r3, r4, r5, lr}
   155ee:	4604      	mov	r4, r0
   155f0:	460d      	mov	r5, r1
   155f2:	f7ff fe05 	bl	15200 <nordic_is_packet_available>
   155f6:	b148      	cbz	r0, 1560c <nrf_driver_receive+0x20>
   155f8:	b2a9      	uxth	r1, r5
   155fa:	4620      	mov	r0, r4
   155fc:	f7ff fe0d 	bl	1521a <nordic_read_rx_fifo>
   15600:	f7ff fdfe 	bl	15200 <nordic_is_packet_available>
   15604:	b908      	cbnz	r0, 1560a <nrf_driver_receive+0x1e>
   15606:	f7ff fe04 	bl	15212 <nordic_clear_packet_available_flag>
   1560a:	2001      	movs	r0, #1
   1560c:	bd38      	pop	{r3, r4, r5, pc}

0001560e <wireless_get_queued_pkt>:
wireless_get_queued_pkt():
   1560e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   15612:	4680      	mov	r8, r0
   15614:	460f      	mov	r7, r1
   15616:	4616      	mov	r6, r2
   15618:	f006 fe2a 	bl	1c270 <xTaskGetSchedulerState>
   1561c:	2802      	cmp	r0, #2
   1561e:	d107      	bne.n	15630 <wireless_get_queued_pkt+0x22>
   15620:	4632      	mov	r2, r6
   15622:	4640      	mov	r0, r8
   15624:	4639      	mov	r1, r7
   15626:	2300      	movs	r3, #0
   15628:	f006 f8a2 	bl	1b770 <xQueueGenericReceive>
   1562c:	b2c6      	uxtb	r6, r0
   1562e:	e01c      	b.n	1566a <wireless_get_queued_pkt+0x5c>
   15630:	f007 f9a8 	bl	1c984 <sys_get_uptime_us>
   15634:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   15638:	2300      	movs	r3, #0
   1563a:	f008 fe99 	bl	1e370 <__aeabi_uldivmod>
   1563e:	1984      	adds	r4, r0, r6
   15640:	f141 0500 	adc.w	r5, r1, #0
   15644:	2200      	movs	r2, #0
   15646:	4640      	mov	r0, r8
   15648:	4639      	mov	r1, r7
   1564a:	4613      	mov	r3, r2
   1564c:	f006 f890 	bl	1b770 <xQueueGenericReceive>
   15650:	b2c6      	uxtb	r6, r0
   15652:	b956      	cbnz	r6, 1566a <wireless_get_queued_pkt+0x5c>
   15654:	f007 f996 	bl	1c984 <sys_get_uptime_us>
   15658:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   1565c:	2300      	movs	r3, #0
   1565e:	f008 fe87 	bl	1e370 <__aeabi_uldivmod>
   15662:	428d      	cmp	r5, r1
   15664:	bf08      	it	eq
   15666:	4284      	cmpeq	r4, r0
   15668:	d2ec      	bcs.n	15644 <wireless_get_queued_pkt+0x36>
   1566a:	b270      	sxtb	r0, r6
   1566c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00015670 <nrf_driver_get_timer>:
nrf_driver_get_timer():
   15670:	2904      	cmp	r1, #4
   15672:	b538      	push	{r3, r4, r5, lr}
   15674:	4605      	mov	r5, r0
   15676:	d103      	bne.n	15680 <nrf_driver_get_timer+0x10>
   15678:	1c04      	adds	r4, r0, #0
   1567a:	bf18      	it	ne
   1567c:	2401      	movne	r4, #1
   1567e:	e000      	b.n	15682 <nrf_driver_get_timer+0x12>
   15680:	2400      	movs	r4, #0
   15682:	f007 f97f 	bl	1c984 <sys_get_uptime_us>
   15686:	b12c      	cbz	r4, 15694 <nrf_driver_get_timer+0x24>
   15688:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   1568c:	2300      	movs	r3, #0
   1568e:	f008 fe6f 	bl	1e370 <__aeabi_uldivmod>
   15692:	6028      	str	r0, [r5, #0]
   15694:	4620      	mov	r0, r4
   15696:	bd38      	pop	{r3, r4, r5, pc}

00015698 <wireless_init>:
wireless_init():
   15698:	b500      	push	{lr}
   1569a:	4b0c      	ldr	r3, [pc, #48]	; (156cc <wireless_init+0x34>)
   1569c:	b08d      	sub	sp, #52	; 0x34
   1569e:	9309      	str	r3, [sp, #36]	; 0x24
   156a0:	4b0b      	ldr	r3, [pc, #44]	; (156d0 <wireless_init+0x38>)
   156a2:	4a0c      	ldr	r2, [pc, #48]	; (156d4 <wireless_init+0x3c>)
   156a4:	930b      	str	r3, [sp, #44]	; 0x2c
   156a6:	4b0c      	ldr	r3, [pc, #48]	; (156d8 <wireless_init+0x40>)
   156a8:	930a      	str	r3, [sp, #40]	; 0x28
   156aa:	ab0c      	add	r3, sp, #48	; 0x30
   156ac:	f843 2d10 	str.w	r2, [r3, #-16]!
   156b0:	2200      	movs	r2, #0
   156b2:	9204      	str	r2, [sp, #16]
   156b4:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
   156b6:	e88d 000f 	stmia.w	sp, {r0, r1, r2, r3}
   156ba:	4b08      	ldr	r3, [pc, #32]	; (156dc <wireless_init+0x44>)
   156bc:	2101      	movs	r1, #1
   156be:	4a08      	ldr	r2, [pc, #32]	; (156e0 <wireless_init+0x48>)
   156c0:	206a      	movs	r0, #106	; 0x6a
   156c2:	f7ff fa1d 	bl	14b00 <mesh_init>
   156c6:	b00d      	add	sp, #52	; 0x34
   156c8:	f85d fb04 	ldr.w	pc, [sp], #4
   156cc:	000154d5 	.word	0x000154d5
   156d0:	000155ed 	.word	0x000155ed
   156d4:	00015671 	.word	0x00015671
   156d8:	00015591 	.word	0x00015591
   156dc:	00015545 	.word	0x00015545
   156e0:	0002688c 	.word	0x0002688c

000156e4 <wireless_get_rx_pkt>:
wireless_get_rx_pkt():
   156e4:	460a      	mov	r2, r1
   156e6:	4903      	ldr	r1, [pc, #12]	; (156f4 <wireless_get_rx_pkt+0x10>)
   156e8:	4603      	mov	r3, r0
   156ea:	6808      	ldr	r0, [r1, #0]
   156ec:	4619      	mov	r1, r3
   156ee:	f7ff bf8e 	b.w	1560e <wireless_get_queued_pkt>
   156f2:	bf00      	nop
   156f4:	2007c914 	.word	0x2007c914

000156f8 <wireless_get_ack_pkt>:
wireless_get_ack_pkt():
   156f8:	460a      	mov	r2, r1
   156fa:	4903      	ldr	r1, [pc, #12]	; (15708 <wireless_get_ack_pkt+0x10>)
   156fc:	4603      	mov	r3, r0
   156fe:	6808      	ldr	r0, [r1, #0]
   15700:	4619      	mov	r1, r3
   15702:	f7ff bf84 	b.w	1560e <wireless_get_queued_pkt>
   15706:	bf00      	nop
   15708:	2007c910 	.word	0x2007c910

0001570c <wireless_service>:
wireless_service():
   1570c:	b508      	push	{r3, lr}
   1570e:	f006 fdaf 	bl	1c270 <xTaskGetSchedulerState>
   15712:	4b0f      	ldr	r3, [pc, #60]	; (15750 <wireless_service+0x44>)
   15714:	2802      	cmp	r0, #2
   15716:	695b      	ldr	r3, [r3, #20]
   15718:	d113      	bne.n	15742 <wireless_service+0x36>
   1571a:	025a      	lsls	r2, r3, #9
   1571c:	d50d      	bpl.n	1573a <wireless_service+0x2e>
   1571e:	f7ff fc1b 	bl	14f58 <mesh_get_pnd_pkt_count>
   15722:	4b0c      	ldr	r3, [pc, #48]	; (15754 <wireless_service+0x48>)
   15724:	2800      	cmp	r0, #0
   15726:	f04f 0100 	mov.w	r1, #0
   1572a:	6818      	ldr	r0, [r3, #0]
   1572c:	bf0c      	ite	eq
   1572e:	f04f 32ff 	moveq.w	r2, #4294967295
   15732:	2201      	movne	r2, #1
   15734:	460b      	mov	r3, r1
   15736:	f006 f81b 	bl	1b770 <xQueueGenericReceive>
   1573a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
   1573e:	f7ff bab3 	b.w	14ca8 <mesh_service>
   15742:	025b      	lsls	r3, r3, #9
   15744:	d5f9      	bpl.n	1573a <wireless_service+0x2e>
   15746:	f7ff fc07 	bl	14f58 <mesh_get_pnd_pkt_count>
   1574a:	2800      	cmp	r0, #0
   1574c:	d1f5      	bne.n	1573a <wireless_service+0x2e>
   1574e:	bd08      	pop	{r3, pc}
   15750:	2009c000 	.word	0x2009c000
   15754:	2007c918 	.word	0x2007c918

00015758 <i2c2_device::writeReg(unsigned char, unsigned char)>:
_ZN11i2c2_device8writeRegEhh():
   15758:	b530      	push	{r4, r5, lr}
   1575a:	4604      	mov	r4, r0
   1575c:	b24d      	sxtb	r5, r1
   1575e:	b253      	sxtb	r3, r2
   15760:	f994 1004 	ldrsb.w	r1, [r4, #4]
   15764:	462a      	mov	r2, r5
   15766:	6800      	ldr	r0, [r0, #0]
   15768:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
   1576c:	f005 bb62 	b.w	1ae34 <I2C_Base::writeReg(char, char, char)>

00015770 <i2c2_device::get16BitRegister(unsigned char)>:
_ZN11i2c2_device16get16BitRegisterEh():
   15770:	b51f      	push	{r0, r1, r2, r3, r4, lr}
   15772:	2200      	movs	r2, #0
   15774:	ab04      	add	r3, sp, #16
   15776:	f990 4004 	ldrsb.w	r4, [r0, #4]
   1577a:	f823 2d04 	strh.w	r2, [r3, #-4]!
   1577e:	b24a      	sxtb	r2, r1
   15780:	2102      	movs	r1, #2
   15782:	9100      	str	r1, [sp, #0]
   15784:	6800      	ldr	r0, [r0, #0]
   15786:	4621      	mov	r1, r4
   15788:	f005 fb3f 	bl	1ae0a <I2C_Base::readRegisters(char, char, char*, unsigned int)>
   1578c:	f99d 000c 	ldrsb.w	r0, [sp, #12]
   15790:	f89d 300d 	ldrb.w	r3, [sp, #13]
   15794:	b280      	uxth	r0, r0
   15796:	ea43 2000 	orr.w	r0, r3, r0, lsl #8
   1579a:	b280      	uxth	r0, r0
   1579c:	b004      	add	sp, #16
   1579e:	bd10      	pop	{r4, pc}

000157a0 <Acceleration_Sensor::init()>:
_ZN19Acceleration_Sensor4initEv():
   157a0:	b510      	push	{r4, lr}
   157a2:	212a      	movs	r1, #42	; 0x2a
   157a4:	4604      	mov	r4, r0
   157a6:	2219      	movs	r2, #25
   157a8:	f7ff ffd6 	bl	15758 <i2c2_device::writeReg(unsigned char, unsigned char)>
   157ac:	6820      	ldr	r0, [r4, #0]
   157ae:	f994 1004 	ldrsb.w	r1, [r4, #4]
   157b2:	220d      	movs	r2, #13
   157b4:	f005 fb2d 	bl	1ae12 <I2C_Base::readReg(char, char)>
   157b8:	f1b0 032a 	subs.w	r3, r0, #42	; 0x2a
   157bc:	4258      	negs	r0, r3
   157be:	4158      	adcs	r0, r3
   157c0:	bd10      	pop	{r4, pc}

000157c2 <Acceleration_Sensor::getX()>:
_ZN19Acceleration_Sensor4getXEv():
   157c2:	b508      	push	{r3, lr}
   157c4:	2101      	movs	r1, #1
   157c6:	f7ff ffd3 	bl	15770 <i2c2_device::get16BitRegister(unsigned char)>
   157ca:	2310      	movs	r3, #16
   157cc:	b200      	sxth	r0, r0
   157ce:	fb90 f0f3 	sdiv	r0, r0, r3
   157d2:	bd08      	pop	{r3, pc}

000157d4 <Acceleration_Sensor::getY()>:
_ZN19Acceleration_Sensor4getYEv():
   157d4:	b508      	push	{r3, lr}
   157d6:	2103      	movs	r1, #3
   157d8:	f7ff ffca 	bl	15770 <i2c2_device::get16BitRegister(unsigned char)>
   157dc:	2310      	movs	r3, #16
   157de:	b200      	sxth	r0, r0
   157e0:	fb90 f0f3 	sdiv	r0, r0, r3
   157e4:	bd08      	pop	{r3, pc}
	...

000157e8 <IR_Sensor::init()>:
_ZN9IR_Sensor4initEv():
   157e8:	b508      	push	{r3, lr}
   157ea:	2002      	movs	r0, #2
   157ec:	2101      	movs	r1, #1
   157ee:	f007 f86b 	bl	1c8c8 <lpc_pconp>
   157f2:	4b08      	ldr	r3, [pc, #32]	; (15814 <IR_Sensor::init()+0x2c>)
   157f4:	2001      	movs	r0, #1
   157f6:	6a9a      	ldr	r2, [r3, #40]	; 0x28
   157f8:	f022 0207 	bic.w	r2, r2, #7
   157fc:	629a      	str	r2, [r3, #40]	; 0x28
   157fe:	6a9a      	ldr	r2, [r3, #40]	; 0x28
   15800:	f042 0206 	orr.w	r2, r2, #6
   15804:	629a      	str	r2, [r3, #40]	; 0x28
   15806:	f503 3310 	add.w	r3, r3, #147456	; 0x24000
   1580a:	68da      	ldr	r2, [r3, #12]
   1580c:	f042 0230 	orr.w	r2, r2, #48	; 0x30
   15810:	60da      	str	r2, [r3, #12]
   15812:	bd08      	pop	{r3, pc}
   15814:	40008000 	.word	0x40008000

00015818 <LED_Display::setLeftDigit(char)>:
_ZN11LED_Display12setLeftDigitEc():
   15818:	b508      	push	{r3, lr}
   1581a:	4a04      	ldr	r2, [pc, #16]	; (1582c <LED_Display::setLeftDigit(char)+0x14>)
   1581c:	f001 037f 	and.w	r3, r1, #127	; 0x7f
   15820:	7141      	strb	r1, [r0, #5]
   15822:	5cd2      	ldrb	r2, [r2, r3]
   15824:	2103      	movs	r1, #3
   15826:	f7ff ff97 	bl	15758 <i2c2_device::writeReg(unsigned char, unsigned char)>
   1582a:	bd08      	pop	{r3, pc}
   1582c:	00026891 	.word	0x00026891

00015830 <LED_Display::setRightDigit(char)>:
_ZN11LED_Display13setRightDigitEc():
   15830:	b508      	push	{r3, lr}
   15832:	4a04      	ldr	r2, [pc, #16]	; (15844 <LED_Display::setRightDigit(char)+0x14>)
   15834:	f001 037f 	and.w	r3, r1, #127	; 0x7f
   15838:	7181      	strb	r1, [r0, #6]
   1583a:	5cd2      	ldrb	r2, [r2, r3]
   1583c:	2102      	movs	r1, #2
   1583e:	f7ff ff8b 	bl	15758 <i2c2_device::writeReg(unsigned char, unsigned char)>
   15842:	bd08      	pop	{r3, pc}
   15844:	00026891 	.word	0x00026891

00015848 <LED_Display::init()>:
_ZN11LED_Display4initEv():
   15848:	b538      	push	{r3, r4, r5, lr}
   1584a:	4604      	mov	r4, r0
   1584c:	f994 1004 	ldrsb.w	r1, [r4, #4]
   15850:	6800      	ldr	r0, [r0, #0]
   15852:	f005 fafa 	bl	1ae4a <I2C_Base::checkDeviceResponse(char)>
   15856:	4605      	mov	r5, r0
   15858:	b188      	cbz	r0, 1587e <LED_Display::init()+0x36>
   1585a:	4620      	mov	r0, r4
   1585c:	2106      	movs	r1, #6
   1585e:	2200      	movs	r2, #0
   15860:	f7ff ff7a 	bl	15758 <i2c2_device::writeReg(unsigned char, unsigned char)>
   15864:	4620      	mov	r0, r4
   15866:	2107      	movs	r1, #7
   15868:	2200      	movs	r2, #0
   1586a:	f7ff ff75 	bl	15758 <i2c2_device::writeReg(unsigned char, unsigned char)>
   1586e:	4620      	mov	r0, r4
   15870:	212e      	movs	r1, #46	; 0x2e
   15872:	f7ff ffd1 	bl	15818 <LED_Display::setLeftDigit(char)>
   15876:	4620      	mov	r0, r4
   15878:	212e      	movs	r1, #46	; 0x2e
   1587a:	f7ff ffd9 	bl	15830 <LED_Display::setRightDigit(char)>
   1587e:	4628      	mov	r0, r5
   15880:	bd38      	pop	{r3, r4, r5, pc}

00015882 <LED_Display::setNumber(char)>:
_ZN11LED_Display9setNumberEc():
   15882:	2364      	movs	r3, #100	; 0x64
   15884:	b570      	push	{r4, r5, r6, lr}
   15886:	fb91 f4f3 	sdiv	r4, r1, r3
   1588a:	fb04 1113 	mls	r1, r4, r3, r1
   1588e:	230a      	movs	r3, #10
   15890:	b24c      	sxtb	r4, r1
   15892:	fb94 f6f3 	sdiv	r6, r4, r3
   15896:	fb03 4316 	mls	r3, r3, r6, r4
   1589a:	f103 0130 	add.w	r1, r3, #48	; 0x30
   1589e:	b249      	sxtb	r1, r1
   158a0:	4605      	mov	r5, r0
   158a2:	f7ff ffc5 	bl	15830 <LED_Display::setRightDigit(char)>
   158a6:	2c09      	cmp	r4, #9
   158a8:	dc02      	bgt.n	158b0 <LED_Display::setNumber(char)+0x2e>
   158aa:	4628      	mov	r0, r5
   158ac:	2120      	movs	r1, #32
   158ae:	e003      	b.n	158b8 <LED_Display::setNumber(char)+0x36>
   158b0:	f106 0130 	add.w	r1, r6, #48	; 0x30
   158b4:	4628      	mov	r0, r5
   158b6:	b249      	sxtb	r1, r1
   158b8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
   158bc:	f7ff bfac 	b.w	15818 <LED_Display::setLeftDigit(char)>

000158c0 <LED::init()>:
_ZN3LED4initEv():
   158c0:	2001      	movs	r0, #1
   158c2:	4770      	bx	lr

000158c4 <LED::setAll(char)>:
_ZN3LED6setAllEc():
   158c4:	4b0e      	ldr	r3, [pc, #56]	; (15900 <LED::setAll(char)+0x3c>)
   158c6:	f001 010f 	and.w	r1, r1, #15
   158ca:	f240 1213 	movw	r2, #275	; 0x113
   158ce:	7001      	strb	r1, [r0, #0]
   158d0:	619a      	str	r2, [r3, #24]
   158d2:	7802      	ldrb	r2, [r0, #0]
   158d4:	07d1      	lsls	r1, r2, #31
   158d6:	bf44      	itt	mi
   158d8:	2201      	movmi	r2, #1
   158da:	61da      	strmi	r2, [r3, #28]
   158dc:	7802      	ldrb	r2, [r0, #0]
   158de:	0792      	lsls	r2, r2, #30
   158e0:	bf44      	itt	mi
   158e2:	2202      	movmi	r2, #2
   158e4:	61da      	strmi	r2, [r3, #28]
   158e6:	7802      	ldrb	r2, [r0, #0]
   158e8:	0751      	lsls	r1, r2, #29
   158ea:	bf44      	itt	mi
   158ec:	2210      	movmi	r2, #16
   158ee:	61da      	strmi	r2, [r3, #28]
   158f0:	7802      	ldrb	r2, [r0, #0]
   158f2:	0712      	lsls	r2, r2, #28
   158f4:	bf44      	itt	mi
   158f6:	f44f 7280 	movmi.w	r2, #256	; 0x100
   158fa:	61da      	strmi	r2, [r3, #28]
   158fc:	4770      	bx	lr
   158fe:	bf00      	nop
   15900:	2009c020 	.word	0x2009c020

00015904 <LED::on(int)>:
_ZN3LED2onEi():
   15904:	2201      	movs	r2, #1
   15906:	3901      	subs	r1, #1
   15908:	fa02 f101 	lsl.w	r1, r2, r1
   1590c:	7802      	ldrb	r2, [r0, #0]
   1590e:	4311      	orrs	r1, r2
   15910:	b2c9      	uxtb	r1, r1
   15912:	7001      	strb	r1, [r0, #0]
   15914:	b249      	sxtb	r1, r1
   15916:	f7ff bfd5 	b.w	158c4 <LED::setAll(char)>

0001591a <LED::off(int)>:
_ZN3LED3offEi():
   1591a:	2201      	movs	r2, #1
   1591c:	3901      	subs	r1, #1
   1591e:	fa02 f101 	lsl.w	r1, r2, r1
   15922:	7802      	ldrb	r2, [r0, #0]
   15924:	ea22 0101 	bic.w	r1, r2, r1
   15928:	7001      	strb	r1, [r0, #0]
   1592a:	b249      	sxtb	r1, r1
   1592c:	f7ff bfca 	b.w	158c4 <LED::setAll(char)>

00015930 <LED::set(int, bool)>:
_ZN3LED3setEib():
   15930:	b10a      	cbz	r2, 15936 <LED::set(int, bool)+0x6>
   15932:	f7ff bfe7 	b.w	15904 <LED::on(int)>
   15936:	f7ff bff0 	b.w	1591a <LED::off(int)>

0001593a <LED::getValues() const>:
_ZNK3LED9getValuesEv():
   1593a:	7800      	ldrb	r0, [r0, #0]
   1593c:	4770      	bx	lr

0001593e <Light_Sensor::init()>:
_ZN12Light_Sensor4initEv():
   1593e:	2001      	movs	r0, #1
   15940:	4770      	bx	lr

00015942 <Light_Sensor::getRawValue()>:
_ZN12Light_Sensor11getRawValueEv():
   15942:	2002      	movs	r0, #2
   15944:	f004 b9ee 	b.w	19d24 <adc0_get_reading>

00015948 <Switches::init()>:
_ZN8Switches4initEv():
   15948:	2001      	movs	r0, #1
   1594a:	4770      	bx	lr

0001594c <Switches::getSwitchValues()>:
_ZN8Switches15getSwitchValuesEv():
   1594c:	4b04      	ldr	r3, [pc, #16]	; (15960 <Switches::getSwitchValues()+0x14>)
   1594e:	695b      	ldr	r3, [r3, #20]
   15950:	f3c3 3081 	ubfx	r0, r3, #14, #2
   15954:	f3c3 2341 	ubfx	r3, r3, #9, #2
   15958:	ea43 0080 	orr.w	r0, r3, r0, lsl #2
   1595c:	4770      	bx	lr
   1595e:	bf00      	nop
   15960:	2009c020 	.word	0x2009c020

00015964 <I2C_Temp::init()>:
_ZN8I2C_Temp4initEv():
   15964:	b510      	push	{r4, lr}
   15966:	2101      	movs	r1, #1
   15968:	4604      	mov	r4, r0
   1596a:	2281      	movs	r2, #129	; 0x81
   1596c:	f7ff fef4 	bl	15758 <i2c2_device::writeReg(unsigned char, unsigned char)>
   15970:	6820      	ldr	r0, [r4, #0]
   15972:	f994 1004 	ldrsb.w	r1, [r4, #4]
   15976:	2201      	movs	r2, #1
   15978:	f005 fa4b 	bl	1ae12 <I2C_Base::readReg(char, char)>
   1597c:	f010 0f60 	tst.w	r0, #96	; 0x60
   15980:	bf0c      	ite	eq
   15982:	2000      	moveq	r0, #0
   15984:	2001      	movne	r0, #1
   15986:	bd10      	pop	{r4, pc}

00015988 <I2C_Temp::getCelsius()>:
_ZN8I2C_Temp10getCelsiusEv():
   15988:	b538      	push	{r3, r4, r5, lr}
   1598a:	2100      	movs	r1, #0
   1598c:	4604      	mov	r4, r0
   1598e:	f7ff feef 	bl	15770 <i2c2_device::get16BitRegister(unsigned char)>
   15992:	2281      	movs	r2, #129	; 0x81
   15994:	b285      	uxth	r5, r0
   15996:	2101      	movs	r1, #1
   15998:	4620      	mov	r0, r4
   1599a:	f7ff fedd 	bl	15758 <i2c2_device::writeReg(unsigned char, unsigned char)>
   1599e:	2310      	movs	r3, #16
   159a0:	b228      	sxth	r0, r5
   159a2:	fb90 f0f3 	sdiv	r0, r0, r3
   159a6:	f008 fa83 	bl	1deb0 <__aeabi_i2f>
   159aa:	f04f 5176 	mov.w	r1, #1031798784	; 0x3d800000
   159ae:	f008 fad3 	bl	1df58 <__aeabi_fmul>
   159b2:	68a1      	ldr	r1, [r4, #8]
   159b4:	f008 f9c8 	bl	1dd48 <__addsf3>
   159b8:	bd38      	pop	{r3, r4, r5, pc}
	...

000159bc <I2C_Temp::getFarenheit()>:
_ZN8I2C_Temp12getFarenheitEv():
   159bc:	b508      	push	{r3, lr}
   159be:	f7ff ffe3 	bl	15988 <I2C_Temp::getCelsius()>
   159c2:	4905      	ldr	r1, [pc, #20]	; (159d8 <I2C_Temp::getFarenheit()+0x1c>)
   159c4:	f008 fac8 	bl	1df58 <__aeabi_fmul>
   159c8:	4904      	ldr	r1, [pc, #16]	; (159dc <I2C_Temp::getFarenheit()+0x20>)
   159ca:	f008 fb79 	bl	1e0c0 <__aeabi_fdiv>
   159ce:	f04f 4184 	mov.w	r1, #1107296256	; 0x42000000
   159d2:	f008 f9b9 	bl	1dd48 <__addsf3>
   159d6:	bd08      	pop	{r3, pc}
   159d8:	41100000 	.word	0x41100000
   159dc:	40a00000 	.word	0x40a00000

000159e0 <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)>:
_ZN7Storage4copyEPKcS1_PjS2_S2_():
   159e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   159e4:	4605      	mov	r5, r0
   159e6:	f2ad 6d54 	subw	sp, sp, #1620	; 0x654
   159ea:	460c      	mov	r4, r1
   159ec:	4617      	mov	r7, r2
   159ee:	a882      	add	r0, sp, #520	; 0x208
   159f0:	4629      	mov	r1, r5
   159f2:	2201      	movs	r2, #1
   159f4:	469b      	mov	fp, r3
   159f6:	f002 f847 	bl	17a88 <f_open>
   159fa:	2800      	cmp	r0, #0
   159fc:	d16a      	bne.n	15ad4 <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)+0xf4>
   159fe:	4621      	mov	r1, r4
   15a00:	f20d 402c 	addw	r0, sp, #1068	; 0x42c
   15a04:	220a      	movs	r2, #10
   15a06:	f002 f83f 	bl	17a88 <f_open>
   15a0a:	4604      	mov	r4, r0
   15a0c:	b120      	cbz	r0, 15a18 <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)+0x38>
   15a0e:	a882      	add	r0, sp, #520	; 0x208
   15a10:	f002 faae 	bl	17f70 <f_close>
   15a14:	4620      	mov	r0, r4
   15a16:	e05d      	b.n	15ad4 <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)+0xf4>
   15a18:	9000      	str	r0, [sp, #0]
   15a1a:	9001      	str	r0, [sp, #4]
   15a1c:	4682      	mov	sl, r0
   15a1e:	4604      	mov	r4, r0
   15a20:	4606      	mov	r6, r0
   15a22:	f006 ffaf 	bl	1c984 <sys_get_uptime_us>
   15a26:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   15a2a:	2300      	movs	r3, #0
   15a2c:	f008 fca0 	bl	1e370 <__aeabi_uldivmod>
   15a30:	a902      	add	r1, sp, #8
   15a32:	4680      	mov	r8, r0
   15a34:	f44f 7200 	mov.w	r2, #512	; 0x200
   15a38:	a882      	add	r0, sp, #520	; 0x208
   15a3a:	466b      	mov	r3, sp
   15a3c:	f002 f8b6 	bl	17bac <f_read>
   15a40:	4605      	mov	r5, r0
   15a42:	b9f8      	cbnz	r0, 15a84 <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)+0xa4>
   15a44:	9b00      	ldr	r3, [sp, #0]
   15a46:	b1eb      	cbz	r3, 15a84 <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)+0xa4>
   15a48:	f006 ff9c 	bl	1c984 <sys_get_uptime_us>
   15a4c:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   15a50:	2300      	movs	r3, #0
   15a52:	f008 fc8d 	bl	1e370 <__aeabi_uldivmod>
   15a56:	ebb6 0808 	subs.w	r8, r6, r8
   15a5a:	eb66 0906 	sbc.w	r9, r6, r6
   15a5e:	eb00 0608 	add.w	r6, r0, r8
   15a62:	f006 ff8f 	bl	1c984 <sys_get_uptime_us>
   15a66:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   15a6a:	2300      	movs	r3, #0
   15a6c:	f008 fc80 	bl	1e370 <__aeabi_uldivmod>
   15a70:	a902      	add	r1, sp, #8
   15a72:	4680      	mov	r8, r0
   15a74:	9a00      	ldr	r2, [sp, #0]
   15a76:	f20d 402c 	addw	r0, sp, #1068	; 0x42c
   15a7a:	ab01      	add	r3, sp, #4
   15a7c:	f002 f954 	bl	17d28 <f_write>
   15a80:	4605      	mov	r5, r0
   15a82:	b1a0      	cbz	r0, 15aae <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)+0xce>
   15a84:	b107      	cbz	r7, 15a88 <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)+0xa8>
   15a86:	603e      	str	r6, [r7, #0]
   15a88:	f1bb 0f00 	cmp.w	fp, #0
   15a8c:	d001      	beq.n	15a92 <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)+0xb2>
   15a8e:	f8cb 4000 	str.w	r4, [fp]
   15a92:	f8dd 3678 	ldr.w	r3, [sp, #1656]	; 0x678
   15a96:	b10b      	cbz	r3, 15a9c <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)+0xbc>
   15a98:	f8c3 a000 	str.w	sl, [r3]
   15a9c:	a882      	add	r0, sp, #520	; 0x208
   15a9e:	f002 fa67 	bl	17f70 <f_close>
   15aa2:	f20d 402c 	addw	r0, sp, #1068	; 0x42c
   15aa6:	f002 fa63 	bl	17f70 <f_close>
   15aaa:	4628      	mov	r0, r5
   15aac:	e012      	b.n	15ad4 <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)+0xf4>
   15aae:	9a01      	ldr	r2, [sp, #4]
   15ab0:	9b00      	ldr	r3, [sp, #0]
   15ab2:	429a      	cmp	r2, r3
   15ab4:	d1e6      	bne.n	15a84 <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)+0xa4>
   15ab6:	f006 ff65 	bl	1c984 <sys_get_uptime_us>
   15aba:	2300      	movs	r3, #0
   15abc:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   15ac0:	f008 fc56 	bl	1e370 <__aeabi_uldivmod>
   15ac4:	9b00      	ldr	r3, [sp, #0]
   15ac6:	ebb4 0408 	subs.w	r4, r4, r8
   15aca:	eb64 0504 	sbc.w	r5, r4, r4
   15ace:	4404      	add	r4, r0
   15ad0:	449a      	add	sl, r3
   15ad2:	e7a6      	b.n	15a22 <Storage::copy(char const*, char const*, unsigned int*, unsigned int*, unsigned int*)+0x42>
   15ad4:	f20d 6d54 	addw	sp, sp, #1620	; 0x654
   15ad8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00015adc <Storage::read(char const*, void*, unsigned int, unsigned int)>:
_ZN7Storage4readEPKcPvjj():
   15adc:	b5f0      	push	{r4, r5, r6, r7, lr}
   15ade:	4604      	mov	r4, r0
   15ae0:	f5ad 7d0b 	sub.w	sp, sp, #556	; 0x22c
   15ae4:	460f      	mov	r7, r1
   15ae6:	4616      	mov	r6, r2
   15ae8:	4621      	mov	r1, r4
   15aea:	461d      	mov	r5, r3
   15aec:	a801      	add	r0, sp, #4
   15aee:	2300      	movs	r3, #0
   15af0:	2201      	movs	r2, #1
   15af2:	9300      	str	r3, [sp, #0]
   15af4:	f001 ffc8 	bl	17a88 <f_open>
   15af8:	4604      	mov	r4, r0
   15afa:	b970      	cbnz	r0, 15b1a <Storage::read(char const*, void*, unsigned int, unsigned int)+0x3e>
   15afc:	b11d      	cbz	r5, 15b06 <Storage::read(char const*, void*, unsigned int, unsigned int)+0x2a>
   15afe:	a801      	add	r0, sp, #4
   15b00:	4629      	mov	r1, r5
   15b02:	f002 fa47 	bl	17f94 <f_lseek>
   15b06:	a801      	add	r0, sp, #4
   15b08:	4639      	mov	r1, r7
   15b0a:	4632      	mov	r2, r6
   15b0c:	466b      	mov	r3, sp
   15b0e:	f002 f84d 	bl	17bac <f_read>
   15b12:	4604      	mov	r4, r0
   15b14:	a801      	add	r0, sp, #4
   15b16:	f002 fa2b 	bl	17f70 <f_close>
   15b1a:	4620      	mov	r0, r4
   15b1c:	f50d 7d0b 	add.w	sp, sp, #556	; 0x22c
   15b20:	bdf0      	pop	{r4, r5, r6, r7, pc}

00015b22 <Storage::write(char const*, void*, unsigned int, unsigned int)>:
_ZN7Storage5writeEPKcPvjj():
   15b22:	b5f0      	push	{r4, r5, r6, r7, lr}
   15b24:	4604      	mov	r4, r0
   15b26:	f5ad 7d0b 	sub.w	sp, sp, #556	; 0x22c
   15b2a:	460f      	mov	r7, r1
   15b2c:	4616      	mov	r6, r2
   15b2e:	4621      	mov	r1, r4
   15b30:	461d      	mov	r5, r3
   15b32:	a801      	add	r0, sp, #4
   15b34:	2300      	movs	r3, #0
   15b36:	220a      	movs	r2, #10
   15b38:	9300      	str	r3, [sp, #0]
   15b3a:	f001 ffa5 	bl	17a88 <f_open>
   15b3e:	4604      	mov	r4, r0
   15b40:	b970      	cbnz	r0, 15b60 <Storage::write(char const*, void*, unsigned int, unsigned int)+0x3e>
   15b42:	b11d      	cbz	r5, 15b4c <Storage::write(char const*, void*, unsigned int, unsigned int)+0x2a>
   15b44:	a801      	add	r0, sp, #4
   15b46:	4629      	mov	r1, r5
   15b48:	f002 fa24 	bl	17f94 <f_lseek>
   15b4c:	a801      	add	r0, sp, #4
   15b4e:	4639      	mov	r1, r7
   15b50:	4632      	mov	r2, r6
   15b52:	466b      	mov	r3, sp
   15b54:	f002 f8e8 	bl	17d28 <f_write>
   15b58:	4604      	mov	r4, r0
   15b5a:	a801      	add	r0, sp, #4
   15b5c:	f002 fa08 	bl	17f70 <f_close>
   15b60:	4620      	mov	r0, r4
   15b62:	f50d 7d0b 	add.w	sp, sp, #556	; 0x22c
   15b66:	bdf0      	pop	{r4, r5, r6, r7, pc}

00015b68 <Storage::append(char const*, void*, unsigned int, unsigned int)>:
_ZN7Storage6appendEPKcPvjj():
   15b68:	b5f0      	push	{r4, r5, r6, r7, lr}
   15b6a:	4604      	mov	r4, r0
   15b6c:	f5ad 7d0b 	sub.w	sp, sp, #556	; 0x22c
   15b70:	460f      	mov	r7, r1
   15b72:	4616      	mov	r6, r2
   15b74:	4621      	mov	r1, r4
   15b76:	461d      	mov	r5, r3
   15b78:	a801      	add	r0, sp, #4
   15b7a:	2300      	movs	r3, #0
   15b7c:	2212      	movs	r2, #18
   15b7e:	9300      	str	r3, [sp, #0]
   15b80:	f001 ff82 	bl	17a88 <f_open>
   15b84:	4604      	mov	r4, r0
   15b86:	b980      	cbnz	r0, 15baa <Storage::append(char const*, void*, unsigned int, unsigned int)+0x42>
   15b88:	a801      	add	r0, sp, #4
   15b8a:	b10d      	cbz	r5, 15b90 <Storage::append(char const*, void*, unsigned int, unsigned int)+0x28>
   15b8c:	4629      	mov	r1, r5
   15b8e:	e000      	b.n	15b92 <Storage::append(char const*, void*, unsigned int, unsigned int)+0x2a>
   15b90:	9904      	ldr	r1, [sp, #16]
   15b92:	f002 f9ff 	bl	17f94 <f_lseek>
   15b96:	a801      	add	r0, sp, #4
   15b98:	4639      	mov	r1, r7
   15b9a:	4632      	mov	r2, r6
   15b9c:	466b      	mov	r3, sp
   15b9e:	f002 f8c3 	bl	17d28 <f_write>
   15ba2:	4604      	mov	r4, r0
   15ba4:	a801      	add	r0, sp, #4
   15ba6:	f002 f9e3 	bl	17f70 <f_close>
   15baa:	4620      	mov	r0, r4
   15bac:	f50d 7d0b 	add.w	sp, sp, #556	; 0x22c
   15bb0:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

00015bb4 <ff_convert>:
ff_convert():
   15bb4:	287f      	cmp	r0, #127	; 0x7f
   15bb6:	d916      	bls.n	15be6 <ff_convert+0x32>
   15bb8:	b131      	cbz	r1, 15bc8 <ff_convert+0x14>
   15bba:	28ff      	cmp	r0, #255	; 0xff
   15bbc:	d812      	bhi.n	15be4 <ff_convert+0x30>
   15bbe:	4b0a      	ldr	r3, [pc, #40]	; (15be8 <ff_convert+0x34>)
   15bc0:	3880      	subs	r0, #128	; 0x80
   15bc2:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
   15bc6:	4770      	bx	lr
   15bc8:	4a07      	ldr	r2, [pc, #28]	; (15be8 <ff_convert+0x34>)
   15bca:	b28b      	uxth	r3, r1
   15bcc:	f832 2011 	ldrh.w	r2, [r2, r1, lsl #1]
   15bd0:	4282      	cmp	r2, r0
   15bd2:	d003      	beq.n	15bdc <ff_convert+0x28>
   15bd4:	3101      	adds	r1, #1
   15bd6:	2980      	cmp	r1, #128	; 0x80
   15bd8:	d1f6      	bne.n	15bc8 <ff_convert+0x14>
   15bda:	460b      	mov	r3, r1
   15bdc:	f103 0080 	add.w	r0, r3, #128	; 0x80
   15be0:	b2c0      	uxtb	r0, r0
   15be2:	4770      	bx	lr
   15be4:	2000      	movs	r0, #0
   15be6:	4770      	bx	lr
   15be8:	00026912 	.word	0x00026912

00015bec <ff_wtoupper>:
ff_wtoupper():
   15bec:	2300      	movs	r3, #0
   15bee:	4a06      	ldr	r2, [pc, #24]	; (15c08 <ff_wtoupper+0x1c>)
   15bf0:	f832 2013 	ldrh.w	r2, [r2, r3, lsl #1]
   15bf4:	b132      	cbz	r2, 15c04 <ff_wtoupper+0x18>
   15bf6:	4290      	cmp	r0, r2
   15bf8:	d001      	beq.n	15bfe <ff_wtoupper+0x12>
   15bfa:	3301      	adds	r3, #1
   15bfc:	e7f7      	b.n	15bee <ff_wtoupper+0x2>
   15bfe:	4a03      	ldr	r2, [pc, #12]	; (15c0c <ff_wtoupper+0x20>)
   15c00:	f832 0013 	ldrh.w	r0, [r2, r3, lsl #1]
   15c04:	4770      	bx	lr
   15c06:	bf00      	nop
   15c08:	00026a12 	.word	0x00026a12
   15c0c:	00026bf2 	.word	0x00026bf2

00015c10 <ff_cre_syncobj>:
ff_cre_syncobj():
   15c10:	b510      	push	{r4, lr}
   15c12:	2001      	movs	r0, #1
   15c14:	460c      	mov	r4, r1
   15c16:	f005 fd4c 	bl	1b6b2 <xQueueCreateMutex>
   15c1a:	6020      	str	r0, [r4, #0]
   15c1c:	3000      	adds	r0, #0
   15c1e:	bf18      	it	ne
   15c20:	2001      	movne	r0, #1
   15c22:	bd10      	pop	{r4, pc}

00015c24 <ff_del_syncobj>:
ff_del_syncobj():
   15c24:	2001      	movs	r0, #1
   15c26:	4770      	bx	lr

00015c28 <ff_req_grant>:
ff_req_grant():
   15c28:	b510      	push	{r4, lr}
   15c2a:	4604      	mov	r4, r0
   15c2c:	f006 fb20 	bl	1c270 <xTaskGetSchedulerState>
   15c30:	2802      	cmp	r0, #2
   15c32:	d10a      	bne.n	15c4a <ff_req_grant+0x22>
   15c34:	2100      	movs	r1, #0
   15c36:	460b      	mov	r3, r1
   15c38:	4620      	mov	r0, r4
   15c3a:	f04f 32ff 	mov.w	r2, #4294967295
   15c3e:	f005 fd97 	bl	1b770 <xQueueGenericReceive>
   15c42:	1e43      	subs	r3, r0, #1
   15c44:	4258      	negs	r0, r3
   15c46:	4158      	adcs	r0, r3
   15c48:	bd10      	pop	{r4, pc}
   15c4a:	2001      	movs	r0, #1
   15c4c:	bd10      	pop	{r4, pc}

00015c4e <ff_rel_grant>:
ff_rel_grant():
   15c4e:	b510      	push	{r4, lr}
   15c50:	4604      	mov	r4, r0
   15c52:	f006 fb0d 	bl	1c270 <xTaskGetSchedulerState>
   15c56:	2802      	cmp	r0, #2
   15c58:	d107      	bne.n	15c6a <ff_rel_grant+0x1c>
   15c5a:	2100      	movs	r1, #0
   15c5c:	4620      	mov	r0, r4
   15c5e:	460a      	mov	r2, r1
   15c60:	460b      	mov	r3, r1
   15c62:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   15c66:	f005 bcb3 	b.w	1b5d0 <xQueueGenericSend>
   15c6a:	bd10      	pop	{r4, pc}

00015c6c <disk_initialize>:
disk_initialize():
   15c6c:	b510      	push	{r4, lr}
   15c6e:	4604      	mov	r4, r0
   15c70:	f004 fee2 	bl	1aa38 <spi1_lock>
   15c74:	b124      	cbz	r4, 15c80 <disk_initialize+0x14>
   15c76:	2c01      	cmp	r4, #1
   15c78:	d106      	bne.n	15c88 <disk_initialize+0x1c>
   15c7a:	f000 f989 	bl	15f90 <sd_initialize>
   15c7e:	e001      	b.n	15c84 <disk_initialize+0x18>
   15c80:	f000 fd24 	bl	166cc <flash_initialize>
   15c84:	4604      	mov	r4, r0
   15c86:	e000      	b.n	15c8a <disk_initialize+0x1e>
   15c88:	2404      	movs	r4, #4
   15c8a:	f004 feed 	bl	1aa68 <spi1_unlock>
   15c8e:	4620      	mov	r0, r4
   15c90:	bd10      	pop	{r4, pc}

00015c92 <disk_status>:
disk_status():
   15c92:	b120      	cbz	r0, 15c9e <disk_status+0xc>
   15c94:	2801      	cmp	r0, #1
   15c96:	d101      	bne.n	15c9c <disk_status+0xa>
   15c98:	f000 ba38 	b.w	1610c <sd_status>
   15c9c:	2004      	movs	r0, #4
   15c9e:	4770      	bx	lr

00015ca0 <disk_read>:
disk_read():
   15ca0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   15ca2:	4604      	mov	r4, r0
   15ca4:	460f      	mov	r7, r1
   15ca6:	4616      	mov	r6, r2
   15ca8:	461d      	mov	r5, r3
   15caa:	f004 fec5 	bl	1aa38 <spi1_lock>
   15cae:	b13c      	cbz	r4, 15cc0 <disk_read+0x20>
   15cb0:	2c01      	cmp	r4, #1
   15cb2:	d10c      	bne.n	15cce <disk_read+0x2e>
   15cb4:	4638      	mov	r0, r7
   15cb6:	4631      	mov	r1, r6
   15cb8:	462a      	mov	r2, r5
   15cba:	f000 fa2f 	bl	1611c <sd_read>
   15cbe:	e004      	b.n	15cca <disk_read+0x2a>
   15cc0:	4638      	mov	r0, r7
   15cc2:	4631      	mov	r1, r6
   15cc4:	462a      	mov	r2, r5
   15cc6:	f000 fd4f 	bl	16768 <flash_read_sectors>
   15cca:	4604      	mov	r4, r0
   15ccc:	e000      	b.n	15cd0 <disk_read+0x30>
   15cce:	2404      	movs	r4, #4
   15cd0:	f004 feca 	bl	1aa68 <spi1_unlock>
   15cd4:	4620      	mov	r0, r4
   15cd6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00015cd8 <disk_write>:
disk_write():
   15cd8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   15cda:	4604      	mov	r4, r0
   15cdc:	460f      	mov	r7, r1
   15cde:	4616      	mov	r6, r2
   15ce0:	461d      	mov	r5, r3
   15ce2:	f004 fea9 	bl	1aa38 <spi1_lock>
   15ce6:	b13c      	cbz	r4, 15cf8 <disk_write+0x20>
   15ce8:	2c01      	cmp	r4, #1
   15cea:	d10c      	bne.n	15d06 <disk_write+0x2e>
   15cec:	4638      	mov	r0, r7
   15cee:	4631      	mov	r1, r6
   15cf0:	462a      	mov	r2, r5
   15cf2:	f000 fa61 	bl	161b8 <sd_write>
   15cf6:	e004      	b.n	15d02 <disk_write+0x2a>
   15cf8:	4638      	mov	r0, r7
   15cfa:	4631      	mov	r1, r6
   15cfc:	462a      	mov	r2, r5
   15cfe:	f000 fd5b 	bl	167b8 <flash_write_sectors>
   15d02:	4604      	mov	r4, r0
   15d04:	e000      	b.n	15d08 <disk_write+0x30>
   15d06:	2404      	movs	r4, #4
   15d08:	f004 feae 	bl	1aa68 <spi1_unlock>
   15d0c:	4620      	mov	r0, r4
   15d0e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00015d10 <disk_ioctl>:
disk_ioctl():
   15d10:	b570      	push	{r4, r5, r6, lr}
   15d12:	4604      	mov	r4, r0
   15d14:	460e      	mov	r6, r1
   15d16:	4615      	mov	r5, r2
   15d18:	f004 fe8e 	bl	1aa38 <spi1_lock>
   15d1c:	b134      	cbz	r4, 15d2c <disk_ioctl+0x1c>
   15d1e:	2c01      	cmp	r4, #1
   15d20:	d10a      	bne.n	15d38 <disk_ioctl+0x28>
   15d22:	4630      	mov	r0, r6
   15d24:	4629      	mov	r1, r5
   15d26:	f000 faa3 	bl	16270 <sd_ioctl>
   15d2a:	e003      	b.n	15d34 <disk_ioctl+0x24>
   15d2c:	4630      	mov	r0, r6
   15d2e:	4629      	mov	r1, r5
   15d30:	f000 fd68 	bl	16804 <flash_ioctl>
   15d34:	4604      	mov	r4, r0
   15d36:	e000      	b.n	15d3a <disk_ioctl+0x2a>
   15d38:	2404      	movs	r4, #4
   15d3a:	f004 fe95 	bl	1aa68 <spi1_unlock>
   15d3e:	4620      	mov	r0, r4
   15d40:	bd70      	pop	{r4, r5, r6, pc}

00015d42 <sys_get_uptime_ms>:
sys_get_uptime_ms():
   15d42:	b508      	push	{r3, lr}
   15d44:	f006 fe1e 	bl	1c984 <sys_get_uptime_us>
   15d48:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   15d4c:	2300      	movs	r3, #0
   15d4e:	f008 fb0f 	bl	1e370 <__aeabi_uldivmod>
   15d52:	bd08      	pop	{r3, pc}

00015d54 <ssp_set_max_clock.constprop.2>:
ssp_set_max_clock.constprop.2():
   15d54:	b510      	push	{r4, lr}
   15d56:	4604      	mov	r4, r0
   15d58:	f006 ff82 	bl	1cc60 <sys_get_cpu_clock>
   15d5c:	4b07      	ldr	r3, [pc, #28]	; (15d7c <ssp_set_max_clock.constprop.2+0x28>)
   15d5e:	fbb0 f0f3 	udiv	r0, r0, r3
   15d62:	2302      	movs	r3, #2
   15d64:	fbb0 f2f3 	udiv	r2, r0, r3
   15d68:	4294      	cmp	r4, r2
   15d6a:	d302      	bcc.n	15d72 <ssp_set_max_clock.constprop.2+0x1e>
   15d6c:	4a04      	ldr	r2, [pc, #16]	; (15d80 <ssp_set_max_clock.constprop.2+0x2c>)
   15d6e:	6113      	str	r3, [r2, #16]
   15d70:	bd10      	pop	{r4, pc}
   15d72:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
   15d76:	d0f9      	beq.n	15d6c <ssp_set_max_clock.constprop.2+0x18>
   15d78:	3302      	adds	r3, #2
   15d7a:	e7f3      	b.n	15d64 <ssp_set_max_clock.constprop.2+0x10>
   15d7c:	000f4240 	.word	0x000f4240
   15d80:	40030000 	.word	0x40030000

00015d84 <ssp1_exchange_byte>:
ssp1_exchange_byte():
   15d84:	4b04      	ldr	r3, [pc, #16]	; (15d98 <ssp1_exchange_byte+0x14>)
   15d86:	6098      	str	r0, [r3, #8]
   15d88:	68da      	ldr	r2, [r3, #12]
   15d8a:	06d2      	lsls	r2, r2, #27
   15d8c:	d4fc      	bmi.n	15d88 <ssp1_exchange_byte+0x4>
   15d8e:	4b02      	ldr	r3, [pc, #8]	; (15d98 <ssp1_exchange_byte+0x14>)
   15d90:	6898      	ldr	r0, [r3, #8]
   15d92:	b240      	sxtb	r0, r0
   15d94:	4770      	bx	lr
   15d96:	bf00      	nop
   15d98:	40030000 	.word	0x40030000

00015d9c <wait_ready>:
wait_ready():
   15d9c:	b538      	push	{r3, r4, r5, lr}
   15d9e:	f7ff ffd0 	bl	15d42 <sys_get_uptime_ms>
   15da2:	f500 75fa 	add.w	r5, r0, #500	; 0x1f4
   15da6:	f04f 30ff 	mov.w	r0, #4294967295
   15daa:	f7ff ffeb 	bl	15d84 <ssp1_exchange_byte>
   15dae:	f04f 30ff 	mov.w	r0, #4294967295
   15db2:	f7ff ffe7 	bl	15d84 <ssp1_exchange_byte>
   15db6:	b2c4      	uxtb	r4, r0
   15db8:	2cff      	cmp	r4, #255	; 0xff
   15dba:	d007      	beq.n	15dcc <wait_ready+0x30>
   15dbc:	f7ff ffc1 	bl	15d42 <sys_get_uptime_ms>
   15dc0:	462a      	mov	r2, r5
   15dc2:	2300      	movs	r3, #0
   15dc4:	4299      	cmp	r1, r3
   15dc6:	bf08      	it	eq
   15dc8:	4290      	cmpeq	r0, r2
   15dca:	d3f0      	bcc.n	15dae <wait_ready+0x12>
   15dcc:	4620      	mov	r0, r4
   15dce:	bd38      	pop	{r3, r4, r5, pc}

00015dd0 <power_off>:
power_off():
   15dd0:	b538      	push	{r3, r4, r5, lr}
   15dd2:	4c06      	ldr	r4, [pc, #24]	; (15dec <power_off+0x1c>)
   15dd4:	f04f 7500 	mov.w	r5, #33554432	; 0x2000000
   15dd8:	61e5      	str	r5, [r4, #28]
   15dda:	f7ff ffdf 	bl	15d9c <wait_ready>
   15dde:	4b04      	ldr	r3, [pc, #16]	; (15df0 <power_off+0x20>)
   15de0:	61a5      	str	r5, [r4, #24]
   15de2:	781a      	ldrb	r2, [r3, #0]
   15de4:	f042 0201 	orr.w	r2, r2, #1
   15de8:	701a      	strb	r2, [r3, #0]
   15dea:	bd38      	pop	{r3, r4, r5, pc}
   15dec:	2009c020 	.word	0x2009c020
   15df0:	2007c02e 	.word	0x2007c02e

00015df4 <rcvr_datablock>:
rcvr_datablock():
   15df4:	b570      	push	{r4, r5, r6, lr}
   15df6:	4605      	mov	r5, r0
   15df8:	460e      	mov	r6, r1
   15dfa:	f7ff ffa2 	bl	15d42 <sys_get_uptime_ms>
   15dfe:	f100 0464 	add.w	r4, r0, #100	; 0x64
   15e02:	f04f 30ff 	mov.w	r0, #4294967295
   15e06:	f7ff ffbd 	bl	15d84 <ssp1_exchange_byte>
   15e0a:	b2c0      	uxtb	r0, r0
   15e0c:	28ff      	cmp	r0, #255	; 0xff
   15e0e:	d109      	bne.n	15e24 <rcvr_datablock+0x30>
   15e10:	f7ff ff97 	bl	15d42 <sys_get_uptime_ms>
   15e14:	4622      	mov	r2, r4
   15e16:	2300      	movs	r3, #0
   15e18:	4299      	cmp	r1, r3
   15e1a:	bf08      	it	eq
   15e1c:	4290      	cmpeq	r0, r2
   15e1e:	d3f0      	bcc.n	15e02 <rcvr_datablock+0xe>
   15e20:	2000      	movs	r0, #0
   15e22:	bd70      	pop	{r4, r5, r6, pc}
   15e24:	28fe      	cmp	r0, #254	; 0xfe
   15e26:	d1fb      	bne.n	15e20 <rcvr_datablock+0x2c>
   15e28:	2e10      	cmp	r6, #16
   15e2a:	d906      	bls.n	15e3a <rcvr_datablock+0x46>
   15e2c:	4628      	mov	r0, r5
   15e2e:	f44f 7100 	mov.w	r1, #512	; 0x200
   15e32:	2200      	movs	r2, #0
   15e34:	f004 fd9e 	bl	1a974 <ssp1_dma_transfer_block>
   15e38:	e019      	b.n	15e6e <rcvr_datablock+0x7a>
   15e3a:	462c      	mov	r4, r5
   15e3c:	f04f 30ff 	mov.w	r0, #4294967295
   15e40:	f7ff ffa0 	bl	15d84 <ssp1_exchange_byte>
   15e44:	7020      	strb	r0, [r4, #0]
   15e46:	f04f 30ff 	mov.w	r0, #4294967295
   15e4a:	f7ff ff9b 	bl	15d84 <ssp1_exchange_byte>
   15e4e:	7060      	strb	r0, [r4, #1]
   15e50:	f04f 30ff 	mov.w	r0, #4294967295
   15e54:	f7ff ff96 	bl	15d84 <ssp1_exchange_byte>
   15e58:	70a0      	strb	r0, [r4, #2]
   15e5a:	f04f 30ff 	mov.w	r0, #4294967295
   15e5e:	f7ff ff91 	bl	15d84 <ssp1_exchange_byte>
   15e62:	3404      	adds	r4, #4
   15e64:	f804 0c01 	strb.w	r0, [r4, #-1]
   15e68:	19ab      	adds	r3, r5, r6
   15e6a:	42a3      	cmp	r3, r4
   15e6c:	d1e6      	bne.n	15e3c <rcvr_datablock+0x48>
   15e6e:	f04f 30ff 	mov.w	r0, #4294967295
   15e72:	f7ff ff87 	bl	15d84 <ssp1_exchange_byte>
   15e76:	f04f 30ff 	mov.w	r0, #4294967295
   15e7a:	f7ff ff83 	bl	15d84 <ssp1_exchange_byte>
   15e7e:	2001      	movs	r0, #1
   15e80:	bd70      	pop	{r4, r5, r6, pc}

00015e82 <xmit_datablock>:
xmit_datablock():
   15e82:	b538      	push	{r3, r4, r5, lr}
   15e84:	4605      	mov	r5, r0
   15e86:	460c      	mov	r4, r1
   15e88:	f7ff ff88 	bl	15d9c <wait_ready>
   15e8c:	28ff      	cmp	r0, #255	; 0xff
   15e8e:	d11d      	bne.n	15ecc <xmit_datablock+0x4a>
   15e90:	b260      	sxtb	r0, r4
   15e92:	f7ff ff77 	bl	15d84 <ssp1_exchange_byte>
   15e96:	2cfd      	cmp	r4, #253	; 0xfd
   15e98:	d01a      	beq.n	15ed0 <xmit_datablock+0x4e>
   15e9a:	f44f 7100 	mov.w	r1, #512	; 0x200
   15e9e:	f04f 32ff 	mov.w	r2, #4294967295
   15ea2:	4628      	mov	r0, r5
   15ea4:	f004 fd66 	bl	1a974 <ssp1_dma_transfer_block>
   15ea8:	f04f 30ff 	mov.w	r0, #4294967295
   15eac:	f7ff ff6a 	bl	15d84 <ssp1_exchange_byte>
   15eb0:	f04f 30ff 	mov.w	r0, #4294967295
   15eb4:	f7ff ff66 	bl	15d84 <ssp1_exchange_byte>
   15eb8:	f04f 30ff 	mov.w	r0, #4294967295
   15ebc:	f7ff ff62 	bl	15d84 <ssp1_exchange_byte>
   15ec0:	f000 001f 	and.w	r0, r0, #31
   15ec4:	1f43      	subs	r3, r0, #5
   15ec6:	4258      	negs	r0, r3
   15ec8:	4158      	adcs	r0, r3
   15eca:	bd38      	pop	{r3, r4, r5, pc}
   15ecc:	2000      	movs	r0, #0
   15ece:	bd38      	pop	{r3, r4, r5, pc}
   15ed0:	2001      	movs	r0, #1
   15ed2:	bd38      	pop	{r3, r4, r5, pc}

00015ed4 <send_cmd>:
send_cmd():
   15ed4:	b538      	push	{r3, r4, r5, lr}
   15ed6:	0603      	lsls	r3, r0, #24
   15ed8:	4604      	mov	r4, r0
   15eda:	460d      	mov	r5, r1
   15edc:	d507      	bpl.n	15eee <send_cmd+0x1a>
   15ede:	2077      	movs	r0, #119	; 0x77
   15ee0:	2100      	movs	r1, #0
   15ee2:	f7ff fff7 	bl	15ed4 <send_cmd>
   15ee6:	2801      	cmp	r0, #1
   15ee8:	d83c      	bhi.n	15f64 <send_cmd+0x90>
   15eea:	f004 047f 	and.w	r4, r4, #127	; 0x7f
   15eee:	4b1e      	ldr	r3, [pc, #120]	; (15f68 <send_cmd+0x94>)
   15ef0:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
   15ef4:	619a      	str	r2, [r3, #24]
   15ef6:	61da      	str	r2, [r3, #28]
   15ef8:	f7ff ff50 	bl	15d9c <wait_ready>
   15efc:	28ff      	cmp	r0, #255	; 0xff
   15efe:	d12e      	bne.n	15f5e <send_cmd+0x8a>
   15f00:	b260      	sxtb	r0, r4
   15f02:	f7ff ff3f 	bl	15d84 <ssp1_exchange_byte>
   15f06:	1628      	asrs	r0, r5, #24
   15f08:	f7ff ff3c 	bl	15d84 <ssp1_exchange_byte>
   15f0c:	f345 4007 	sbfx	r0, r5, #16, #8
   15f10:	f7ff ff38 	bl	15d84 <ssp1_exchange_byte>
   15f14:	f345 2007 	sbfx	r0, r5, #8, #8
   15f18:	f7ff ff34 	bl	15d84 <ssp1_exchange_byte>
   15f1c:	b268      	sxtb	r0, r5
   15f1e:	f7ff ff31 	bl	15d84 <ssp1_exchange_byte>
   15f22:	2c40      	cmp	r4, #64	; 0x40
   15f24:	d004      	beq.n	15f30 <send_cmd+0x5c>
   15f26:	2c48      	cmp	r4, #72	; 0x48
   15f28:	bf0c      	ite	eq
   15f2a:	2087      	moveq	r0, #135	; 0x87
   15f2c:	2001      	movne	r0, #1
   15f2e:	e000      	b.n	15f32 <send_cmd+0x5e>
   15f30:	2095      	movs	r0, #149	; 0x95
   15f32:	b240      	sxtb	r0, r0
   15f34:	f7ff ff26 	bl	15d84 <ssp1_exchange_byte>
   15f38:	2c4c      	cmp	r4, #76	; 0x4c
   15f3a:	d103      	bne.n	15f44 <send_cmd+0x70>
   15f3c:	f04f 30ff 	mov.w	r0, #4294967295
   15f40:	f7ff ff20 	bl	15d84 <ssp1_exchange_byte>
   15f44:	240a      	movs	r4, #10
   15f46:	f04f 30ff 	mov.w	r0, #4294967295
   15f4a:	f7ff ff1b 	bl	15d84 <ssp1_exchange_byte>
   15f4e:	2800      	cmp	r0, #0
   15f50:	b2c3      	uxtb	r3, r0
   15f52:	da06      	bge.n	15f62 <send_cmd+0x8e>
   15f54:	3c01      	subs	r4, #1
   15f56:	f014 04ff 	ands.w	r4, r4, #255	; 0xff
   15f5a:	d1f4      	bne.n	15f46 <send_cmd+0x72>
   15f5c:	e001      	b.n	15f62 <send_cmd+0x8e>
   15f5e:	20ff      	movs	r0, #255	; 0xff
   15f60:	bd38      	pop	{r3, r4, r5, pc}
   15f62:	4618      	mov	r0, r3
   15f64:	bd38      	pop	{r3, r4, r5, pc}
   15f66:	bf00      	nop
   15f68:	2009c020 	.word	0x2009c020

00015f6c <sd_update_card_status>:
sd_update_card_status():
   15f6c:	4a06      	ldr	r2, [pc, #24]	; (15f88 <sd_update_card_status+0x1c>)
   15f6e:	4907      	ldr	r1, [pc, #28]	; (15f8c <sd_update_card_status+0x20>)
   15f70:	7813      	ldrb	r3, [r2, #0]
   15f72:	6949      	ldr	r1, [r1, #20]
   15f74:	b2db      	uxtb	r3, r3
   15f76:	0149      	lsls	r1, r1, #5
   15f78:	bf54      	ite	pl
   15f7a:	f003 03fd 	andpl.w	r3, r3, #253	; 0xfd
   15f7e:	f043 0303 	orrmi.w	r3, r3, #3
   15f82:	7013      	strb	r3, [r2, #0]
   15f84:	4770      	bx	lr
   15f86:	bf00      	nop
   15f88:	2007c02e 	.word	0x2007c02e
   15f8c:	2009c020 	.word	0x2009c020

00015f90 <sd_initialize>:
sd_initialize():
   15f90:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
   15f94:	f7ff ffea 	bl	15f6c <sd_update_card_status>
   15f98:	4b59      	ldr	r3, [pc, #356]	; (16100 <sd_initialize+0x170>)
   15f9a:	781a      	ldrb	r2, [r3, #0]
   15f9c:	461e      	mov	r6, r3
   15f9e:	f012 0f02 	tst.w	r2, #2
   15fa2:	d001      	beq.n	15fa8 <sd_initialize+0x18>
   15fa4:	7818      	ldrb	r0, [r3, #0]
   15fa6:	e0a7      	b.n	160f8 <sd_initialize+0x168>
   15fa8:	2001      	movs	r0, #1
   15faa:	f7ff fed3 	bl	15d54 <ssp_set_max_clock.constprop.2>
   15fae:	240a      	movs	r4, #10
   15fb0:	f04f 30ff 	mov.w	r0, #4294967295
   15fb4:	3c01      	subs	r4, #1
   15fb6:	f7ff fee5 	bl	15d84 <ssp1_exchange_byte>
   15fba:	f014 04ff 	ands.w	r4, r4, #255	; 0xff
   15fbe:	d1f7      	bne.n	15fb0 <sd_initialize+0x20>
   15fc0:	4d50      	ldr	r5, [pc, #320]	; (16104 <sd_initialize+0x174>)
   15fc2:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
   15fc6:	61eb      	str	r3, [r5, #28]
   15fc8:	2040      	movs	r0, #64	; 0x40
   15fca:	4621      	mov	r1, r4
   15fcc:	f7ff ff82 	bl	15ed4 <send_cmd>
   15fd0:	2801      	cmp	r0, #1
   15fd2:	46a8      	mov	r8, r5
   15fd4:	d002      	beq.n	15fdc <sd_initialize+0x4c>
   15fd6:	f04f 0900 	mov.w	r9, #0
   15fda:	e078      	b.n	160ce <sd_initialize+0x13e>
   15fdc:	f7ff feb1 	bl	15d42 <sys_get_uptime_ms>
   15fe0:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
   15fe4:	f500 777a 	add.w	r7, r0, #1000	; 0x3e8
   15fe8:	2048      	movs	r0, #72	; 0x48
   15fea:	f7ff ff73 	bl	15ed4 <send_cmd>
   15fee:	2801      	cmp	r0, #1
   15ff0:	d143      	bne.n	1607a <sd_initialize+0xea>
   15ff2:	f04f 30ff 	mov.w	r0, #4294967295
   15ff6:	f7ff fec5 	bl	15d84 <ssp1_exchange_byte>
   15ffa:	f10d 0904 	add.w	r9, sp, #4
   15ffe:	f809 0004 	strb.w	r0, [r9, r4]
   16002:	3401      	adds	r4, #1
   16004:	2c04      	cmp	r4, #4
   16006:	d1f4      	bne.n	15ff2 <sd_initialize+0x62>
   16008:	f89d 3006 	ldrb.w	r3, [sp, #6]
   1600c:	2b01      	cmp	r3, #1
   1600e:	d1e2      	bne.n	15fd6 <sd_initialize+0x46>
   16010:	f89d 3007 	ldrb.w	r3, [sp, #7]
   16014:	2baa      	cmp	r3, #170	; 0xaa
   16016:	d1de      	bne.n	15fd6 <sd_initialize+0x46>
   16018:	f7ff fe93 	bl	15d42 <sys_get_uptime_ms>
   1601c:	463c      	mov	r4, r7
   1601e:	2500      	movs	r5, #0
   16020:	42a9      	cmp	r1, r5
   16022:	bf08      	it	eq
   16024:	42a0      	cmpeq	r0, r4
   16026:	d306      	bcc.n	16036 <sd_initialize+0xa6>
   16028:	f7ff fe8b 	bl	15d42 <sys_get_uptime_ms>
   1602c:	42a9      	cmp	r1, r5
   1602e:	bf08      	it	eq
   16030:	42a0      	cmpeq	r0, r4
   16032:	d2d0      	bcs.n	15fd6 <sd_initialize+0x46>
   16034:	e007      	b.n	16046 <sd_initialize+0xb6>
   16036:	20e9      	movs	r0, #233	; 0xe9
   16038:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
   1603c:	f7ff ff4a 	bl	15ed4 <send_cmd>
   16040:	2800      	cmp	r0, #0
   16042:	d1e9      	bne.n	16018 <sd_initialize+0x88>
   16044:	e7f0      	b.n	16028 <sd_initialize+0x98>
   16046:	207a      	movs	r0, #122	; 0x7a
   16048:	2100      	movs	r1, #0
   1604a:	f7ff ff43 	bl	15ed4 <send_cmd>
   1604e:	2800      	cmp	r0, #0
   16050:	d1c1      	bne.n	15fd6 <sd_initialize+0x46>
   16052:	4604      	mov	r4, r0
   16054:	f04f 30ff 	mov.w	r0, #4294967295
   16058:	f7ff fe94 	bl	15d84 <ssp1_exchange_byte>
   1605c:	f809 0004 	strb.w	r0, [r9, r4]
   16060:	3401      	adds	r4, #1
   16062:	2c04      	cmp	r4, #4
   16064:	d1f6      	bne.n	16054 <sd_initialize+0xc4>
   16066:	f89d 3004 	ldrb.w	r3, [sp, #4]
   1606a:	f013 0f40 	tst.w	r3, #64	; 0x40
   1606e:	bf0c      	ite	eq
   16070:	f04f 0904 	moveq.w	r9, #4
   16074:	f04f 090c 	movne.w	r9, #12
   16078:	e029      	b.n	160ce <sd_initialize+0x13e>
   1607a:	20e9      	movs	r0, #233	; 0xe9
   1607c:	4621      	mov	r1, r4
   1607e:	f7ff ff29 	bl	15ed4 <send_cmd>
   16082:	2801      	cmp	r0, #1
   16084:	bf8c      	ite	hi
   16086:	f04f 0901 	movhi.w	r9, #1
   1608a:	f04f 0902 	movls.w	r9, #2
   1608e:	bf8c      	ite	hi
   16090:	f04f 0a41 	movhi.w	sl, #65	; 0x41
   16094:	f04f 0ae9 	movls.w	sl, #233	; 0xe9
   16098:	f7ff fe53 	bl	15d42 <sys_get_uptime_ms>
   1609c:	463c      	mov	r4, r7
   1609e:	2500      	movs	r5, #0
   160a0:	42a9      	cmp	r1, r5
   160a2:	bf08      	it	eq
   160a4:	42a0      	cmpeq	r0, r4
   160a6:	d30b      	bcc.n	160c0 <sd_initialize+0x130>
   160a8:	f7ff fe4b 	bl	15d42 <sys_get_uptime_ms>
   160ac:	42a9      	cmp	r1, r5
   160ae:	bf08      	it	eq
   160b0:	42a0      	cmpeq	r0, r4
   160b2:	d30c      	bcc.n	160ce <sd_initialize+0x13e>
   160b4:	f44f 7100 	mov.w	r1, #512	; 0x200
   160b8:	2050      	movs	r0, #80	; 0x50
   160ba:	f7ff ff0b 	bl	15ed4 <send_cmd>
   160be:	e006      	b.n	160ce <sd_initialize+0x13e>
   160c0:	4650      	mov	r0, sl
   160c2:	2100      	movs	r1, #0
   160c4:	f7ff ff06 	bl	15ed4 <send_cmd>
   160c8:	2800      	cmp	r0, #0
   160ca:	d1e5      	bne.n	16098 <sd_initialize+0x108>
   160cc:	e7ec      	b.n	160a8 <sd_initialize+0x118>
   160ce:	4b0e      	ldr	r3, [pc, #56]	; (16108 <sd_initialize+0x178>)
   160d0:	f883 9000 	strb.w	r9, [r3]
   160d4:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
   160d8:	f8c8 3018 	str.w	r3, [r8, #24]
   160dc:	f1b9 0f00 	cmp.w	r9, #0
   160e0:	d007      	beq.n	160f2 <sd_initialize+0x162>
   160e2:	7833      	ldrb	r3, [r6, #0]
   160e4:	2018      	movs	r0, #24
   160e6:	f003 03fe 	and.w	r3, r3, #254	; 0xfe
   160ea:	7033      	strb	r3, [r6, #0]
   160ec:	f7ff fe32 	bl	15d54 <ssp_set_max_clock.constprop.2>
   160f0:	e001      	b.n	160f6 <sd_initialize+0x166>
   160f2:	f7ff fe6d 	bl	15dd0 <power_off>
   160f6:	7830      	ldrb	r0, [r6, #0]
   160f8:	b2c0      	uxtb	r0, r0
   160fa:	b002      	add	sp, #8
   160fc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   16100:	2007c02e 	.word	0x2007c02e
   16104:	2009c020 	.word	0x2009c020
   16108:	2007c91c 	.word	0x2007c91c

0001610c <sd_status>:
sd_status():
   1610c:	b508      	push	{r3, lr}
   1610e:	f7ff ff2d 	bl	15f6c <sd_update_card_status>
   16112:	4b01      	ldr	r3, [pc, #4]	; (16118 <sd_status+0xc>)
   16114:	7818      	ldrb	r0, [r3, #0]
   16116:	bd08      	pop	{r3, pc}
   16118:	2007c02e 	.word	0x2007c02e

0001611c <sd_read>:
sd_read():
   1611c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1611e:	4614      	mov	r4, r2
   16120:	4605      	mov	r5, r0
   16122:	460e      	mov	r6, r1
   16124:	f7ff ff22 	bl	15f6c <sd_update_card_status>
   16128:	2c00      	cmp	r4, #0
   1612a:	d03b      	beq.n	161a4 <sd_read+0x88>
   1612c:	4b1f      	ldr	r3, [pc, #124]	; (161ac <sd_read+0x90>)
   1612e:	781b      	ldrb	r3, [r3, #0]
   16130:	07db      	lsls	r3, r3, #31
   16132:	d439      	bmi.n	161a8 <sd_read+0x8c>
   16134:	4b1e      	ldr	r3, [pc, #120]	; (161b0 <sd_read+0x94>)
   16136:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
   1613a:	61da      	str	r2, [r3, #28]
   1613c:	4a1d      	ldr	r2, [pc, #116]	; (161b4 <sd_read+0x98>)
   1613e:	461f      	mov	r7, r3
   16140:	7812      	ldrb	r2, [r2, #0]
   16142:	f012 0f08 	tst.w	r2, #8
   16146:	bf08      	it	eq
   16148:	0276      	lsleq	r6, r6, #9
   1614a:	2c01      	cmp	r4, #1
   1614c:	d10e      	bne.n	1616c <sd_read+0x50>
   1614e:	2051      	movs	r0, #81	; 0x51
   16150:	4631      	mov	r1, r6
   16152:	f7ff febf 	bl	15ed4 <send_cmd>
   16156:	b9f0      	cbnz	r0, 16196 <sd_read+0x7a>
   16158:	4628      	mov	r0, r5
   1615a:	f44f 7100 	mov.w	r1, #512	; 0x200
   1615e:	f7ff fe49 	bl	15df4 <rcvr_datablock>
   16162:	f1d0 0401 	rsbs	r4, r0, #1
   16166:	bf38      	it	cc
   16168:	2400      	movcc	r4, #0
   1616a:	e014      	b.n	16196 <sd_read+0x7a>
   1616c:	2052      	movs	r0, #82	; 0x52
   1616e:	4631      	mov	r1, r6
   16170:	f7ff feb0 	bl	15ed4 <send_cmd>
   16174:	b978      	cbnz	r0, 16196 <sd_read+0x7a>
   16176:	4628      	mov	r0, r5
   16178:	f44f 7100 	mov.w	r1, #512	; 0x200
   1617c:	f7ff fe3a 	bl	15df4 <rcvr_datablock>
   16180:	b128      	cbz	r0, 1618e <sd_read+0x72>
   16182:	3c01      	subs	r4, #1
   16184:	f014 04ff 	ands.w	r4, r4, #255	; 0xff
   16188:	f505 7500 	add.w	r5, r5, #512	; 0x200
   1618c:	d1f3      	bne.n	16176 <sd_read+0x5a>
   1618e:	204c      	movs	r0, #76	; 0x4c
   16190:	2100      	movs	r1, #0
   16192:	f7ff fe9f 	bl	15ed4 <send_cmd>
   16196:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
   1619a:	1c20      	adds	r0, r4, #0
   1619c:	61bb      	str	r3, [r7, #24]
   1619e:	bf18      	it	ne
   161a0:	2001      	movne	r0, #1
   161a2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   161a4:	2004      	movs	r0, #4
   161a6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   161a8:	2003      	movs	r0, #3
   161aa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   161ac:	2007c02e 	.word	0x2007c02e
   161b0:	2009c020 	.word	0x2009c020
   161b4:	2007c91c 	.word	0x2007c91c

000161b8 <sd_write>:
sd_write():
   161b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   161ba:	4614      	mov	r4, r2
   161bc:	4605      	mov	r5, r0
   161be:	460e      	mov	r6, r1
   161c0:	f7ff fed4 	bl	15f6c <sd_update_card_status>
   161c4:	2c00      	cmp	r4, #0
   161c6:	d046      	beq.n	16256 <sd_write+0x9e>
   161c8:	4b26      	ldr	r3, [pc, #152]	; (16264 <sd_write+0xac>)
   161ca:	781a      	ldrb	r2, [r3, #0]
   161cc:	07d2      	lsls	r2, r2, #31
   161ce:	d444      	bmi.n	1625a <sd_write+0xa2>
   161d0:	781b      	ldrb	r3, [r3, #0]
   161d2:	075b      	lsls	r3, r3, #29
   161d4:	d443      	bmi.n	1625e <sd_write+0xa6>
   161d6:	4a24      	ldr	r2, [pc, #144]	; (16268 <sd_write+0xb0>)
   161d8:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
   161dc:	61d3      	str	r3, [r2, #28]
   161de:	4b23      	ldr	r3, [pc, #140]	; (1626c <sd_write+0xb4>)
   161e0:	4617      	mov	r7, r2
   161e2:	781b      	ldrb	r3, [r3, #0]
   161e4:	f013 0f08 	tst.w	r3, #8
   161e8:	bf08      	it	eq
   161ea:	0276      	lsleq	r6, r6, #9
   161ec:	2c01      	cmp	r4, #1
   161ee:	d10d      	bne.n	1620c <sd_write+0x54>
   161f0:	2058      	movs	r0, #88	; 0x58
   161f2:	4631      	mov	r1, r6
   161f4:	f7ff fe6e 	bl	15ed4 <send_cmd>
   161f8:	bb30      	cbnz	r0, 16248 <sd_write+0x90>
   161fa:	4628      	mov	r0, r5
   161fc:	21fe      	movs	r1, #254	; 0xfe
   161fe:	f7ff fe40 	bl	15e82 <xmit_datablock>
   16202:	f1d0 0401 	rsbs	r4, r0, #1
   16206:	bf38      	it	cc
   16208:	2400      	movcc	r4, #0
   1620a:	e01d      	b.n	16248 <sd_write+0x90>
   1620c:	f013 0f06 	tst.w	r3, #6
   16210:	d003      	beq.n	1621a <sd_write+0x62>
   16212:	20d7      	movs	r0, #215	; 0xd7
   16214:	4621      	mov	r1, r4
   16216:	f7ff fe5d 	bl	15ed4 <send_cmd>
   1621a:	2059      	movs	r0, #89	; 0x59
   1621c:	4631      	mov	r1, r6
   1621e:	f7ff fe59 	bl	15ed4 <send_cmd>
   16222:	b988      	cbnz	r0, 16248 <sd_write+0x90>
   16224:	4628      	mov	r0, r5
   16226:	21fc      	movs	r1, #252	; 0xfc
   16228:	f7ff fe2b 	bl	15e82 <xmit_datablock>
   1622c:	b128      	cbz	r0, 1623a <sd_write+0x82>
   1622e:	3c01      	subs	r4, #1
   16230:	f014 04ff 	ands.w	r4, r4, #255	; 0xff
   16234:	f505 7500 	add.w	r5, r5, #512	; 0x200
   16238:	d1f4      	bne.n	16224 <sd_write+0x6c>
   1623a:	2000      	movs	r0, #0
   1623c:	21fd      	movs	r1, #253	; 0xfd
   1623e:	f7ff fe20 	bl	15e82 <xmit_datablock>
   16242:	2800      	cmp	r0, #0
   16244:	bf08      	it	eq
   16246:	2401      	moveq	r4, #1
   16248:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
   1624c:	1c20      	adds	r0, r4, #0
   1624e:	61bb      	str	r3, [r7, #24]
   16250:	bf18      	it	ne
   16252:	2001      	movne	r0, #1
   16254:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   16256:	2004      	movs	r0, #4
   16258:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1625a:	2003      	movs	r0, #3
   1625c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1625e:	2002      	movs	r0, #2
   16260:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   16262:	bf00      	nop
   16264:	2007c02e 	.word	0x2007c02e
   16268:	2009c020 	.word	0x2009c020
   1626c:	2007c91c 	.word	0x2007c91c

00016270 <sd_ioctl>:
sd_ioctl():
   16270:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   16272:	4605      	mov	r5, r0
   16274:	460c      	mov	r4, r1
   16276:	f7ff fe79 	bl	15f6c <sd_update_card_status>
   1627a:	2d05      	cmp	r5, #5
   1627c:	d118      	bne.n	162b0 <sd_ioctl+0x40>
   1627e:	7823      	ldrb	r3, [r4, #0]
   16280:	2b01      	cmp	r3, #1
   16282:	f000 810c 	beq.w	1649e <sd_ioctl+0x22e>
   16286:	d30a      	bcc.n	1629e <sd_ioctl+0x2e>
   16288:	2b02      	cmp	r3, #2
   1628a:	f040 8106 	bne.w	1649a <sd_ioctl+0x22a>
   1628e:	4b86      	ldr	r3, [pc, #536]	; (164a8 <sd_ioctl+0x238>)
   16290:	695b      	ldr	r3, [r3, #20]
   16292:	f083 6380 	eor.w	r3, r3, #67108864	; 0x4000000
   16296:	f3c3 6380 	ubfx	r3, r3, #26, #1
   1629a:	7063      	strb	r3, [r4, #1]
   1629c:	e0ff      	b.n	1649e <sd_ioctl+0x22e>
   1629e:	4b82      	ldr	r3, [pc, #520]	; (164a8 <sd_ioctl+0x238>)
   162a0:	6958      	ldr	r0, [r3, #20]
   162a2:	f010 6480 	ands.w	r4, r0, #67108864	; 0x4000000
   162a6:	f040 80fa 	bne.w	1649e <sd_ioctl+0x22e>
   162aa:	f7ff fd91 	bl	15dd0 <power_off>
   162ae:	e0f6      	b.n	1649e <sd_ioctl+0x22e>
   162b0:	4b7e      	ldr	r3, [pc, #504]	; (164ac <sd_ioctl+0x23c>)
   162b2:	781b      	ldrb	r3, [r3, #0]
   162b4:	07db      	lsls	r3, r3, #31
   162b6:	f100 80f4 	bmi.w	164a2 <sd_ioctl+0x232>
   162ba:	2d0e      	cmp	r5, #14
   162bc:	f200 80e5 	bhi.w	1648a <sd_ioctl+0x21a>
   162c0:	e8df f015 	tbh	[pc, r5, lsl #1]
   162c4:	0019000f 	.word	0x0019000f
   162c8:	00550051 	.word	0x00550051
   162cc:	00e300e3 	.word	0x00e300e3
   162d0:	00e300e3 	.word	0x00e300e3
   162d4:	00e300e3 	.word	0x00e300e3
   162d8:	00b200ae 	.word	0x00b200ae
   162dc:	00be00b4 	.word	0x00be00b4
   162e0:	00cf      	.short	0x00cf
   162e2:	4b71      	ldr	r3, [pc, #452]	; (164a8 <sd_ioctl+0x238>)
   162e4:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
   162e8:	61da      	str	r2, [r3, #28]
   162ea:	f7ff fd57 	bl	15d9c <wait_ready>
   162ee:	38ff      	subs	r0, #255	; 0xff
   162f0:	bf18      	it	ne
   162f2:	2001      	movne	r0, #1
   162f4:	e0cc      	b.n	16490 <sd_ioctl+0x220>
   162f6:	2049      	movs	r0, #73	; 0x49
   162f8:	2100      	movs	r1, #0
   162fa:	f7ff fdeb 	bl	15ed4 <send_cmd>
   162fe:	4605      	mov	r5, r0
   16300:	b108      	cbz	r0, 16306 <sd_ioctl+0x96>
   16302:	2001      	movs	r0, #1
   16304:	e0c4      	b.n	16490 <sd_ioctl+0x220>
   16306:	4668      	mov	r0, sp
   16308:	2110      	movs	r1, #16
   1630a:	f7ff fd73 	bl	15df4 <rcvr_datablock>
   1630e:	2800      	cmp	r0, #0
   16310:	d0f7      	beq.n	16302 <sd_ioctl+0x92>
   16312:	f89d 3000 	ldrb.w	r3, [sp]
   16316:	f89d 2008 	ldrb.w	r2, [sp, #8]
   1631a:	099b      	lsrs	r3, r3, #6
   1631c:	2b01      	cmp	r3, #1
   1631e:	f89d 3009 	ldrb.w	r3, [sp, #9]
   16322:	d106      	bne.n	16332 <sd_ioctl+0xc2>
   16324:	3301      	adds	r3, #1
   16326:	eb03 2202 	add.w	r2, r3, r2, lsl #8
   1632a:	b292      	uxth	r2, r2
   1632c:	0292      	lsls	r2, r2, #10
   1632e:	6022      	str	r2, [r4, #0]
   16330:	e044      	b.n	163bc <sd_ioctl+0x14c>
   16332:	f89d 1007 	ldrb.w	r1, [sp, #7]
   16336:	f89d 000a 	ldrb.w	r0, [sp, #10]
   1633a:	0089      	lsls	r1, r1, #2
   1633c:	eb01 1292 	add.w	r2, r1, r2, lsr #6
   16340:	f89d 1006 	ldrb.w	r1, [sp, #6]
   16344:	3201      	adds	r2, #1
   16346:	f001 0103 	and.w	r1, r1, #3
   1634a:	eb02 2281 	add.w	r2, r2, r1, lsl #10
   1634e:	f89d 1005 	ldrb.w	r1, [sp, #5]
   16352:	f003 0303 	and.w	r3, r3, #3
   16356:	f001 010f 	and.w	r1, r1, #15
   1635a:	eb01 11d0 	add.w	r1, r1, r0, lsr #7
   1635e:	eb01 0343 	add.w	r3, r1, r3, lsl #1
   16362:	3b07      	subs	r3, #7
   16364:	e027      	b.n	163b6 <sd_ioctl+0x146>
   16366:	f44f 7300 	mov.w	r3, #512	; 0x200
   1636a:	8023      	strh	r3, [r4, #0]
   1636c:	e08f      	b.n	1648e <sd_ioctl+0x21e>
   1636e:	4d50      	ldr	r5, [pc, #320]	; (164b0 <sd_ioctl+0x240>)
   16370:	782b      	ldrb	r3, [r5, #0]
   16372:	f003 0304 	and.w	r3, r3, #4
   16376:	f003 01ff 	and.w	r1, r3, #255	; 0xff
   1637a:	b30b      	cbz	r3, 163c0 <sd_ioctl+0x150>
   1637c:	20cd      	movs	r0, #205	; 0xcd
   1637e:	2100      	movs	r1, #0
   16380:	f7ff fda8 	bl	15ed4 <send_cmd>
   16384:	2800      	cmp	r0, #0
   16386:	d1bc      	bne.n	16302 <sd_ioctl+0x92>
   16388:	f04f 30ff 	mov.w	r0, #4294967295
   1638c:	f7ff fcfa 	bl	15d84 <ssp1_exchange_byte>
   16390:	4668      	mov	r0, sp
   16392:	2110      	movs	r1, #16
   16394:	f7ff fd2e 	bl	15df4 <rcvr_datablock>
   16398:	2800      	cmp	r0, #0
   1639a:	d0b2      	beq.n	16302 <sd_ioctl+0x92>
   1639c:	2530      	movs	r5, #48	; 0x30
   1639e:	f04f 30ff 	mov.w	r0, #4294967295
   163a2:	3d01      	subs	r5, #1
   163a4:	f7ff fcee 	bl	15d84 <ssp1_exchange_byte>
   163a8:	f015 05ff 	ands.w	r5, r5, #255	; 0xff
   163ac:	d1f7      	bne.n	1639e <sd_ioctl+0x12e>
   163ae:	f89d 300a 	ldrb.w	r3, [sp, #10]
   163b2:	2210      	movs	r2, #16
   163b4:	091b      	lsrs	r3, r3, #4
   163b6:	fa02 f303 	lsl.w	r3, r2, r3
   163ba:	6023      	str	r3, [r4, #0]
   163bc:	4628      	mov	r0, r5
   163be:	e067      	b.n	16490 <sd_ioctl+0x220>
   163c0:	2049      	movs	r0, #73	; 0x49
   163c2:	f7ff fd87 	bl	15ed4 <send_cmd>
   163c6:	4606      	mov	r6, r0
   163c8:	2800      	cmp	r0, #0
   163ca:	d19a      	bne.n	16302 <sd_ioctl+0x92>
   163cc:	4668      	mov	r0, sp
   163ce:	2110      	movs	r1, #16
   163d0:	f7ff fd10 	bl	15df4 <rcvr_datablock>
   163d4:	2800      	cmp	r0, #0
   163d6:	d094      	beq.n	16302 <sd_ioctl+0x92>
   163d8:	7829      	ldrb	r1, [r5, #0]
   163da:	f89d 200a 	ldrb.w	r2, [sp, #10]
   163de:	f001 0102 	and.w	r1, r1, #2
   163e2:	f001 00ff 	and.w	r0, r1, #255	; 0xff
   163e6:	f89d 300b 	ldrb.w	r3, [sp, #11]
   163ea:	b169      	cbz	r1, 16408 <sd_ioctl+0x198>
   163ec:	f89d 100d 	ldrb.w	r1, [sp, #13]
   163f0:	f002 023f 	and.w	r2, r2, #63	; 0x3f
   163f4:	09db      	lsrs	r3, r3, #7
   163f6:	eb03 0342 	add.w	r3, r3, r2, lsl #1
   163fa:	0989      	lsrs	r1, r1, #6
   163fc:	3301      	adds	r3, #1
   163fe:	3901      	subs	r1, #1
   16400:	408b      	lsls	r3, r1
   16402:	4630      	mov	r0, r6
   16404:	6023      	str	r3, [r4, #0]
   16406:	e043      	b.n	16490 <sd_ioctl+0x220>
   16408:	f003 0103 	and.w	r1, r3, #3
   1640c:	095b      	lsrs	r3, r3, #5
   1640e:	eb03 03c1 	add.w	r3, r3, r1, lsl #3
   16412:	f3c2 0284 	ubfx	r2, r2, #2, #5
   16416:	3301      	adds	r3, #1
   16418:	fb02 3303 	mla	r3, r2, r3, r3
   1641c:	6023      	str	r3, [r4, #0]
   1641e:	e037      	b.n	16490 <sd_ioctl+0x220>
   16420:	4b23      	ldr	r3, [pc, #140]	; (164b0 <sd_ioctl+0x240>)
   16422:	781b      	ldrb	r3, [r3, #0]
   16424:	7023      	strb	r3, [r4, #0]
   16426:	e032      	b.n	1648e <sd_ioctl+0x21e>
   16428:	2049      	movs	r0, #73	; 0x49
   1642a:	e000      	b.n	1642e <sd_ioctl+0x1be>
   1642c:	204a      	movs	r0, #74	; 0x4a
   1642e:	2100      	movs	r1, #0
   16430:	f7ff fd50 	bl	15ed4 <send_cmd>
   16434:	2800      	cmp	r0, #0
   16436:	f47f af64 	bne.w	16302 <sd_ioctl+0x92>
   1643a:	4620      	mov	r0, r4
   1643c:	2110      	movs	r1, #16
   1643e:	e01d      	b.n	1647c <sd_ioctl+0x20c>
   16440:	207a      	movs	r0, #122	; 0x7a
   16442:	2100      	movs	r1, #0
   16444:	f7ff fd46 	bl	15ed4 <send_cmd>
   16448:	2800      	cmp	r0, #0
   1644a:	f47f af5a 	bne.w	16302 <sd_ioctl+0x92>
   1644e:	4605      	mov	r5, r0
   16450:	f04f 30ff 	mov.w	r0, #4294967295
   16454:	f7ff fc96 	bl	15d84 <ssp1_exchange_byte>
   16458:	5560      	strb	r0, [r4, r5]
   1645a:	3501      	adds	r5, #1
   1645c:	2d04      	cmp	r5, #4
   1645e:	d1f7      	bne.n	16450 <sd_ioctl+0x1e0>
   16460:	e015      	b.n	1648e <sd_ioctl+0x21e>
   16462:	20cd      	movs	r0, #205	; 0xcd
   16464:	2100      	movs	r1, #0
   16466:	f7ff fd35 	bl	15ed4 <send_cmd>
   1646a:	2800      	cmp	r0, #0
   1646c:	f47f af49 	bne.w	16302 <sd_ioctl+0x92>
   16470:	f04f 30ff 	mov.w	r0, #4294967295
   16474:	f7ff fc86 	bl	15d84 <ssp1_exchange_byte>
   16478:	4620      	mov	r0, r4
   1647a:	2140      	movs	r1, #64	; 0x40
   1647c:	f7ff fcba 	bl	15df4 <rcvr_datablock>
   16480:	f1d0 0001 	rsbs	r0, r0, #1
   16484:	bf38      	it	cc
   16486:	2000      	movcc	r0, #0
   16488:	e002      	b.n	16490 <sd_ioctl+0x220>
   1648a:	2004      	movs	r0, #4
   1648c:	e000      	b.n	16490 <sd_ioctl+0x220>
   1648e:	2000      	movs	r0, #0
   16490:	4b05      	ldr	r3, [pc, #20]	; (164a8 <sd_ioctl+0x238>)
   16492:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
   16496:	619a      	str	r2, [r3, #24]
   16498:	e004      	b.n	164a4 <sd_ioctl+0x234>
   1649a:	2004      	movs	r0, #4
   1649c:	e002      	b.n	164a4 <sd_ioctl+0x234>
   1649e:	2000      	movs	r0, #0
   164a0:	e000      	b.n	164a4 <sd_ioctl+0x234>
   164a2:	2003      	movs	r0, #3
   164a4:	b004      	add	sp, #16
   164a6:	bd70      	pop	{r4, r5, r6, pc}
   164a8:	2009c020 	.word	0x2009c020
   164ac:	2007c02e 	.word	0x2007c02e
   164b0:	2007c91c 	.word	0x2007c91c

000164b4 <flash_get_mem_size_bytes()>:
_ZL24flash_get_mem_size_bytesv():
   164b4:	4b05      	ldr	r3, [pc, #20]	; (164cc <flash_get_mem_size_bytes()+0x18>)
   164b6:	781b      	ldrb	r3, [r3, #0]
   164b8:	3b25      	subs	r3, #37	; 0x25
   164ba:	b2db      	uxtb	r3, r3
   164bc:	2b03      	cmp	r3, #3
   164be:	bf9a      	itte	ls
   164c0:	4a03      	ldrls	r2, [pc, #12]	; (164d0 <flash_get_mem_size_bytes()+0x1c>)
   164c2:	f852 0023 	ldrls.w	r0, [r2, r3, lsl #2]
   164c6:	2000      	movhi	r0, #0
   164c8:	4770      	bx	lr
   164ca:	bf00      	nop
   164cc:	2007c920 	.word	0x2007c920
   164d0:	00026ddc 	.word	0x00026ddc

000164d4 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)>:
_ZL37flash_perform_page_io_of_fatfs_sectorPFvPhmmES_m():
   164d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   164d6:	4b19      	ldr	r3, [pc, #100]	; (1653c <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)+0x68>)
   164d8:	4605      	mov	r5, r0
   164da:	881c      	ldrh	r4, [r3, #0]
   164dc:	460e      	mov	r6, r1
   164de:	f5b4 7f00 	cmp.w	r4, #512	; 0x200
   164e2:	4617      	mov	r7, r2
   164e4:	d102      	bne.n	164ec <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)+0x18>
   164e6:	4608      	mov	r0, r1
   164e8:	4611      	mov	r1, r2
   164ea:	e00a      	b.n	16502 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)+0x2e>
   164ec:	f5b4 7f80 	cmp.w	r4, #256	; 0x100
   164f0:	d109      	bne.n	16506 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)+0x32>
   164f2:	4608      	mov	r0, r1
   164f4:	4611      	mov	r1, r2
   164f6:	4622      	mov	r2, r4
   164f8:	47a8      	blx	r5
   164fa:	f506 7080 	add.w	r0, r6, #256	; 0x100
   164fe:	f507 7180 	add.w	r1, r7, #256	; 0x100
   16502:	4622      	mov	r2, r4
   16504:	e017      	b.n	16536 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)+0x62>
   16506:	f5b4 7f04 	cmp.w	r4, #528	; 0x210
   1650a:	d105      	bne.n	16518 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)+0x44>
   1650c:	0a51      	lsrs	r1, r2, #9
   1650e:	4630      	mov	r0, r6
   16510:	0289      	lsls	r1, r1, #10
   16512:	f44f 7200 	mov.w	r2, #512	; 0x200
   16516:	e00e      	b.n	16536 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)+0x62>
   16518:	f5b4 7f84 	cmp.w	r4, #264	; 0x108
   1651c:	d10c      	bne.n	16538 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)+0x64>
   1651e:	0a17      	lsrs	r7, r2, #8
   16520:	4608      	mov	r0, r1
   16522:	f44f 7280 	mov.w	r2, #256	; 0x100
   16526:	0279      	lsls	r1, r7, #9
   16528:	47a8      	blx	r5
   1652a:	1c79      	adds	r1, r7, #1
   1652c:	f506 7080 	add.w	r0, r6, #256	; 0x100
   16530:	0249      	lsls	r1, r1, #9
   16532:	f44f 7280 	mov.w	r2, #256	; 0x100
   16536:	47a8      	blx	r5
   16538:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1653a:	bf00      	nop
   1653c:	2007c91e 	.word	0x2007c91e

00016540 <ssp1_exchange_data>:
ssp1_exchange_data():
   16540:	b510      	push	{r4, lr}
   16542:	4603      	mov	r3, r0
   16544:	2900      	cmp	r1, #0
   16546:	dd68      	ble.n	1661a <ssp1_exchange_data+0xda>
   16548:	2907      	cmp	r1, #7
   1654a:	f993 4000 	ldrsb.w	r4, [r3]
   1654e:	4a33      	ldr	r2, [pc, #204]	; (1661c <ssp1_exchange_data+0xdc>)
   16550:	dd36      	ble.n	165c0 <ssp1_exchange_data+0x80>
   16552:	6094      	str	r4, [r2, #8]
   16554:	f993 4001 	ldrsb.w	r4, [r3, #1]
   16558:	3908      	subs	r1, #8
   1655a:	6094      	str	r4, [r2, #8]
   1655c:	f993 4002 	ldrsb.w	r4, [r3, #2]
   16560:	6094      	str	r4, [r2, #8]
   16562:	f993 4003 	ldrsb.w	r4, [r3, #3]
   16566:	6094      	str	r4, [r2, #8]
   16568:	f993 4004 	ldrsb.w	r4, [r3, #4]
   1656c:	6094      	str	r4, [r2, #8]
   1656e:	f993 4005 	ldrsb.w	r4, [r3, #5]
   16572:	6094      	str	r4, [r2, #8]
   16574:	f993 4006 	ldrsb.w	r4, [r3, #6]
   16578:	6094      	str	r4, [r2, #8]
   1657a:	f103 0408 	add.w	r4, r3, #8
   1657e:	f993 3007 	ldrsb.w	r3, [r3, #7]
   16582:	6093      	str	r3, [r2, #8]
   16584:	4b25      	ldr	r3, [pc, #148]	; (1661c <ssp1_exchange_data+0xdc>)
   16586:	699a      	ldr	r2, [r3, #24]
   16588:	0752      	lsls	r2, r2, #29
   1658a:	d5fb      	bpl.n	16584 <ssp1_exchange_data+0x44>
   1658c:	689a      	ldr	r2, [r3, #8]
   1658e:	7002      	strb	r2, [r0, #0]
   16590:	689a      	ldr	r2, [r3, #8]
   16592:	7042      	strb	r2, [r0, #1]
   16594:	689a      	ldr	r2, [r3, #8]
   16596:	7082      	strb	r2, [r0, #2]
   16598:	689b      	ldr	r3, [r3, #8]
   1659a:	70c3      	strb	r3, [r0, #3]
   1659c:	4b1f      	ldr	r3, [pc, #124]	; (1661c <ssp1_exchange_data+0xdc>)
   1659e:	68da      	ldr	r2, [r3, #12]
   165a0:	06d2      	lsls	r2, r2, #27
   165a2:	d4fb      	bmi.n	1659c <ssp1_exchange_data+0x5c>
   165a4:	689a      	ldr	r2, [r3, #8]
   165a6:	3008      	adds	r0, #8
   165a8:	f800 2c04 	strb.w	r2, [r0, #-4]
   165ac:	689a      	ldr	r2, [r3, #8]
   165ae:	f800 2c03 	strb.w	r2, [r0, #-3]
   165b2:	689a      	ldr	r2, [r3, #8]
   165b4:	f800 2c02 	strb.w	r2, [r0, #-2]
   165b8:	689b      	ldr	r3, [r3, #8]
   165ba:	f800 3c01 	strb.w	r3, [r0, #-1]
   165be:	e01e      	b.n	165fe <ssp1_exchange_data+0xbe>
   165c0:	2903      	cmp	r1, #3
   165c2:	dd1e      	ble.n	16602 <ssp1_exchange_data+0xc2>
   165c4:	6094      	str	r4, [r2, #8]
   165c6:	f993 4001 	ldrsb.w	r4, [r3, #1]
   165ca:	3904      	subs	r1, #4
   165cc:	6094      	str	r4, [r2, #8]
   165ce:	f993 4002 	ldrsb.w	r4, [r3, #2]
   165d2:	6094      	str	r4, [r2, #8]
   165d4:	1d1c      	adds	r4, r3, #4
   165d6:	f993 3003 	ldrsb.w	r3, [r3, #3]
   165da:	6093      	str	r3, [r2, #8]
   165dc:	4b0f      	ldr	r3, [pc, #60]	; (1661c <ssp1_exchange_data+0xdc>)
   165de:	68da      	ldr	r2, [r3, #12]
   165e0:	06d2      	lsls	r2, r2, #27
   165e2:	d4fb      	bmi.n	165dc <ssp1_exchange_data+0x9c>
   165e4:	689a      	ldr	r2, [r3, #8]
   165e6:	3004      	adds	r0, #4
   165e8:	f800 2c04 	strb.w	r2, [r0, #-4]
   165ec:	689a      	ldr	r2, [r3, #8]
   165ee:	f800 2c03 	strb.w	r2, [r0, #-3]
   165f2:	689a      	ldr	r2, [r3, #8]
   165f4:	f800 2c02 	strb.w	r2, [r0, #-2]
   165f8:	689b      	ldr	r3, [r3, #8]
   165fa:	f800 3c01 	strb.w	r3, [r0, #-1]
   165fe:	4623      	mov	r3, r4
   16600:	e7a0      	b.n	16544 <ssp1_exchange_data+0x4>
   16602:	3301      	adds	r3, #1
   16604:	6094      	str	r4, [r2, #8]
   16606:	3901      	subs	r1, #1
   16608:	68d4      	ldr	r4, [r2, #12]
   1660a:	06e4      	lsls	r4, r4, #27
   1660c:	d4fc      	bmi.n	16608 <ssp1_exchange_data+0xc8>
   1660e:	4a03      	ldr	r2, [pc, #12]	; (1661c <ssp1_exchange_data+0xdc>)
   16610:	3001      	adds	r0, #1
   16612:	6892      	ldr	r2, [r2, #8]
   16614:	f800 2c01 	strb.w	r2, [r0, #-1]
   16618:	e794      	b.n	16544 <ssp1_exchange_data+0x4>
   1661a:	bd10      	pop	{r4, pc}
   1661c:	40030000 	.word	0x40030000

00016620 <flash_send_op_addr(flash_opcode_t, unsigned long)>:
_ZL18flash_send_op_addr14flash_opcode_tm():
   16620:	b507      	push	{r0, r1, r2, lr}
   16622:	0c0b      	lsrs	r3, r1, #16
   16624:	f88d 0004 	strb.w	r0, [sp, #4]
   16628:	f88d 3005 	strb.w	r3, [sp, #5]
   1662c:	f88d 1007 	strb.w	r1, [sp, #7]
   16630:	0a0b      	lsrs	r3, r1, #8
   16632:	a801      	add	r0, sp, #4
   16634:	2104      	movs	r1, #4
   16636:	f88d 3006 	strb.w	r3, [sp, #6]
   1663a:	f7ff ff81 	bl	16540 <ssp1_exchange_data>
   1663e:	b003      	add	sp, #12
   16640:	f85d fb04 	ldr.w	pc, [sp], #4

00016644 <flash_read_page(unsigned char*, unsigned long, unsigned long)>:
_ZL15flash_read_pagePhmm():
   16644:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   16646:	4c0f      	ldr	r4, [pc, #60]	; (16684 <flash_read_page(unsigned char*, unsigned long, unsigned long)+0x40>)
   16648:	2540      	movs	r5, #64	; 0x40
   1664a:	4617      	mov	r7, r2
   1664c:	2203      	movs	r2, #3
   1664e:	61e5      	str	r5, [r4, #28]
   16650:	f88d 2004 	strb.w	r2, [sp, #4]
   16654:	0c0a      	lsrs	r2, r1, #16
   16656:	4606      	mov	r6, r0
   16658:	f88d 2005 	strb.w	r2, [sp, #5]
   1665c:	f88d 1007 	strb.w	r1, [sp, #7]
   16660:	0a0a      	lsrs	r2, r1, #8
   16662:	a801      	add	r0, sp, #4
   16664:	2104      	movs	r1, #4
   16666:	f88d 2006 	strb.w	r2, [sp, #6]
   1666a:	f7ff ff69 	bl	16540 <ssp1_exchange_data>
   1666e:	4630      	mov	r0, r6
   16670:	4639      	mov	r1, r7
   16672:	2200      	movs	r2, #0
   16674:	f004 f97e 	bl	1a974 <ssp1_dma_transfer_block>
   16678:	61a5      	str	r5, [r4, #24]
   1667a:	61a5      	str	r5, [r4, #24]
   1667c:	61a5      	str	r5, [r4, #24]
   1667e:	b003      	add	sp, #12
   16680:	bdf0      	pop	{r4, r5, r6, r7, pc}
   16682:	bf00      	nop
   16684:	2009c000 	.word	0x2009c000

00016688 <flash_wait_for_ready()>:
_ZL20flash_wait_for_readyv():
   16688:	4b0e      	ldr	r3, [pc, #56]	; (166c4 <flash_wait_for_ready()+0x3c>)
   1668a:	2240      	movs	r2, #64	; 0x40
   1668c:	61da      	str	r2, [r3, #28]
   1668e:	4b0e      	ldr	r3, [pc, #56]	; (166c8 <flash_wait_for_ready()+0x40>)
   16690:	f06f 0228 	mvn.w	r2, #40	; 0x28
   16694:	609a      	str	r2, [r3, #8]
   16696:	68da      	ldr	r2, [r3, #12]
   16698:	06d1      	lsls	r1, r2, #27
   1669a:	d4fc      	bmi.n	16696 <flash_wait_for_ready()+0xe>
   1669c:	4b0a      	ldr	r3, [pc, #40]	; (166c8 <flash_wait_for_ready()+0x40>)
   1669e:	689b      	ldr	r3, [r3, #8]
   166a0:	4b09      	ldr	r3, [pc, #36]	; (166c8 <flash_wait_for_ready()+0x40>)
   166a2:	f04f 32ff 	mov.w	r2, #4294967295
   166a6:	609a      	str	r2, [r3, #8]
   166a8:	68da      	ldr	r2, [r3, #12]
   166aa:	06d2      	lsls	r2, r2, #27
   166ac:	d4fc      	bmi.n	166a8 <flash_wait_for_ready()+0x20>
   166ae:	4b06      	ldr	r3, [pc, #24]	; (166c8 <flash_wait_for_ready()+0x40>)
   166b0:	6898      	ldr	r0, [r3, #8]
   166b2:	0603      	lsls	r3, r0, #24
   166b4:	d5f4      	bpl.n	166a0 <flash_wait_for_ready()+0x18>
   166b6:	4b03      	ldr	r3, [pc, #12]	; (166c4 <flash_wait_for_ready()+0x3c>)
   166b8:	2240      	movs	r2, #64	; 0x40
   166ba:	619a      	str	r2, [r3, #24]
   166bc:	b2c0      	uxtb	r0, r0
   166be:	619a      	str	r2, [r3, #24]
   166c0:	619a      	str	r2, [r3, #24]
   166c2:	4770      	bx	lr
   166c4:	2009c000 	.word	0x2009c000
   166c8:	40030000 	.word	0x40030000

000166cc <flash_initialize>:
flash_initialize():
   166cc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   166ce:	f7ff ffdb 	bl	16688 <flash_wait_for_ready()>
   166d2:	4e20      	ldr	r6, [pc, #128]	; (16754 <flash_initialize+0x88>)
   166d4:	2300      	movs	r3, #0
   166d6:	8033      	strh	r3, [r6, #0]
   166d8:	4b1f      	ldr	r3, [pc, #124]	; (16758 <flash_initialize+0x8c>)
   166da:	4c20      	ldr	r4, [pc, #128]	; (1675c <flash_initialize+0x90>)
   166dc:	2540      	movs	r5, #64	; 0x40
   166de:	881a      	ldrh	r2, [r3, #0]
   166e0:	789b      	ldrb	r3, [r3, #2]
   166e2:	61e5      	str	r5, [r4, #28]
   166e4:	4607      	mov	r7, r0
   166e6:	2103      	movs	r1, #3
   166e8:	a801      	add	r0, sp, #4
   166ea:	f8ad 2004 	strh.w	r2, [sp, #4]
   166ee:	f88d 3006 	strb.w	r3, [sp, #6]
   166f2:	f7ff ff25 	bl	16540 <ssp1_exchange_data>
   166f6:	f89d 2005 	ldrb.w	r2, [sp, #5]
   166fa:	f89d 3006 	ldrb.w	r3, [sp, #6]
   166fe:	2a1f      	cmp	r2, #31
   16700:	61a5      	str	r5, [r4, #24]
   16702:	61a5      	str	r5, [r4, #24]
   16704:	61a5      	str	r5, [r4, #24]
   16706:	4634      	mov	r4, r6
   16708:	d11c      	bne.n	16744 <flash_initialize+0x78>
   1670a:	f1a3 0225 	sub.w	r2, r3, #37	; 0x25
   1670e:	2a03      	cmp	r2, #3
   16710:	d818      	bhi.n	16744 <flash_initialize+0x78>
   16712:	4a13      	ldr	r2, [pc, #76]	; (16760 <flash_initialize+0x94>)
   16714:	2b25      	cmp	r3, #37	; 0x25
   16716:	7013      	strb	r3, [r2, #0]
   16718:	f007 0001 	and.w	r0, r7, #1
   1671c:	d106      	bne.n	1672c <flash_initialize+0x60>
   1671e:	2800      	cmp	r0, #0
   16720:	bf0c      	ite	eq
   16722:	f44f 7384 	moveq.w	r3, #264	; 0x108
   16726:	f44f 7380 	movne.w	r3, #256	; 0x100
   1672a:	e005      	b.n	16738 <flash_initialize+0x6c>
   1672c:	2800      	cmp	r0, #0
   1672e:	bf0c      	ite	eq
   16730:	f44f 7304 	moveq.w	r3, #528	; 0x210
   16734:	f44f 7300 	movne.w	r3, #512	; 0x200
   16738:	8023      	strh	r3, [r4, #0]
   1673a:	f7ff febb 	bl	164b4 <flash_get_mem_size_bytes()>
   1673e:	4b09      	ldr	r3, [pc, #36]	; (16764 <flash_initialize+0x98>)
   16740:	0a40      	lsrs	r0, r0, #9
   16742:	6018      	str	r0, [r3, #0]
   16744:	8820      	ldrh	r0, [r4, #0]
   16746:	f1d0 0001 	rsbs	r0, r0, #1
   1674a:	bf38      	it	cc
   1674c:	2000      	movcc	r0, #0
   1674e:	b003      	add	sp, #12
   16750:	bdf0      	pop	{r4, r5, r6, r7, pc}
   16752:	bf00      	nop
   16754:	2007c91e 	.word	0x2007c91e
   16758:	00026dd2 	.word	0x00026dd2
   1675c:	2009c000 	.word	0x2009c000
   16760:	2007c920 	.word	0x2007c920
   16764:	2007c924 	.word	0x2007c924

00016768 <flash_read_sectors>:
flash_read_sectors():
   16768:	4b11      	ldr	r3, [pc, #68]	; (167b0 <flash_read_sectors+0x48>)
   1676a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1676e:	681b      	ldr	r3, [r3, #0]
   16770:	4616      	mov	r6, r2
   16772:	188a      	adds	r2, r1, r2
   16774:	3a01      	subs	r2, #1
   16776:	429a      	cmp	r2, r3
   16778:	4607      	mov	r7, r0
   1677a:	d815      	bhi.n	167a8 <flash_read_sectors+0x40>
   1677c:	ea4f 2841 	mov.w	r8, r1, lsl #9
   16780:	f7ff ff82 	bl	16688 <flash_wait_for_ready()>
   16784:	463c      	mov	r4, r7
   16786:	2500      	movs	r5, #0
   16788:	ebc7 0208 	rsb	r2, r7, r8
   1678c:	42b5      	cmp	r5, r6
   1678e:	4422      	add	r2, r4
   16790:	da07      	bge.n	167a2 <flash_read_sectors+0x3a>
   16792:	4621      	mov	r1, r4
   16794:	4807      	ldr	r0, [pc, #28]	; (167b4 <flash_read_sectors+0x4c>)
   16796:	f7ff fe9d 	bl	164d4 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)>
   1679a:	f504 7400 	add.w	r4, r4, #512	; 0x200
   1679e:	3501      	adds	r5, #1
   167a0:	e7f2      	b.n	16788 <flash_read_sectors+0x20>
   167a2:	2000      	movs	r0, #0
   167a4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   167a8:	2001      	movs	r0, #1
   167aa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   167ae:	bf00      	nop
   167b0:	2007c924 	.word	0x2007c924
   167b4:	00016645 	.word	0x00016645

000167b8 <flash_write_sectors>:
flash_write_sectors():
   167b8:	4b10      	ldr	r3, [pc, #64]	; (167fc <flash_write_sectors+0x44>)
   167ba:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   167be:	681b      	ldr	r3, [r3, #0]
   167c0:	4616      	mov	r6, r2
   167c2:	188a      	adds	r2, r1, r2
   167c4:	3a01      	subs	r2, #1
   167c6:	429a      	cmp	r2, r3
   167c8:	4607      	mov	r7, r0
   167ca:	d813      	bhi.n	167f4 <flash_write_sectors+0x3c>
   167cc:	ea4f 2841 	mov.w	r8, r1, lsl #9
   167d0:	4604      	mov	r4, r0
   167d2:	2500      	movs	r5, #0
   167d4:	ebc7 0208 	rsb	r2, r7, r8
   167d8:	42b5      	cmp	r5, r6
   167da:	4422      	add	r2, r4
   167dc:	da07      	bge.n	167ee <flash_write_sectors+0x36>
   167de:	4621      	mov	r1, r4
   167e0:	4807      	ldr	r0, [pc, #28]	; (16800 <flash_write_sectors+0x48>)
   167e2:	f7ff fe77 	bl	164d4 <flash_perform_page_io_of_fatfs_sector(void (*)(unsigned char*, unsigned long, unsigned long), unsigned char*, unsigned long)>
   167e6:	f504 7400 	add.w	r4, r4, #512	; 0x200
   167ea:	3501      	adds	r5, #1
   167ec:	e7f2      	b.n	167d4 <flash_write_sectors+0x1c>
   167ee:	2000      	movs	r0, #0
   167f0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   167f4:	2001      	movs	r0, #1
   167f6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   167fa:	bf00      	nop
   167fc:	2007c924 	.word	0x2007c924
   16800:	000168e1 	.word	0x000168e1

00016804 <flash_ioctl>:
flash_ioctl():
   16804:	b510      	push	{r4, lr}
   16806:	460c      	mov	r4, r1
   16808:	2807      	cmp	r0, #7
   1680a:	d815      	bhi.n	16838 <flash_ioctl+0x34>
   1680c:	e8df f000 	tbb	[pc, r0]
   16810:	100c0704 	.word	0x100c0704
   16814:	12121212 	.word	0x12121212
   16818:	f7ff ff36 	bl	16688 <flash_wait_for_ready()>
   1681c:	e00a      	b.n	16834 <flash_ioctl+0x30>
   1681e:	f7ff fe49 	bl	164b4 <flash_get_mem_size_bytes()>
   16822:	0a40      	lsrs	r0, r0, #9
   16824:	6020      	str	r0, [r4, #0]
   16826:	e005      	b.n	16834 <flash_ioctl+0x30>
   16828:	f44f 7300 	mov.w	r3, #512	; 0x200
   1682c:	800b      	strh	r3, [r1, #0]
   1682e:	e001      	b.n	16834 <flash_ioctl+0x30>
   16830:	2301      	movs	r3, #1
   16832:	600b      	str	r3, [r1, #0]
   16834:	2000      	movs	r0, #0
   16836:	bd10      	pop	{r4, pc}
   16838:	2004      	movs	r0, #4
   1683a:	bd10      	pop	{r4, pc}

0001683c <flash_write_permanent_id>:
flash_write_permanent_id():
   1683c:	b570      	push	{r4, r5, r6, lr}
   1683e:	b090      	sub	sp, #64	; 0x40
   16840:	4603      	mov	r3, r0
   16842:	466a      	mov	r2, sp
   16844:	f100 0540 	add.w	r5, r0, #64	; 0x40
   16848:	6818      	ldr	r0, [r3, #0]
   1684a:	6859      	ldr	r1, [r3, #4]
   1684c:	4614      	mov	r4, r2
   1684e:	c403      	stmia	r4!, {r0, r1}
   16850:	3308      	adds	r3, #8
   16852:	42ab      	cmp	r3, r5
   16854:	4622      	mov	r2, r4
   16856:	d1f7      	bne.n	16848 <flash_write_permanent_id+0xc>
   16858:	4d07      	ldr	r5, [pc, #28]	; (16878 <flash_write_permanent_id+0x3c>)
   1685a:	2440      	movs	r4, #64	; 0x40
   1685c:	61ec      	str	r4, [r5, #28]
   1685e:	209b      	movs	r0, #155	; 0x9b
   16860:	2100      	movs	r1, #0
   16862:	f7ff fedd 	bl	16620 <flash_send_op_addr(flash_opcode_t, unsigned long)>
   16866:	4668      	mov	r0, sp
   16868:	4621      	mov	r1, r4
   1686a:	f7ff fe69 	bl	16540 <ssp1_exchange_data>
   1686e:	61ac      	str	r4, [r5, #24]
   16870:	61ac      	str	r4, [r5, #24]
   16872:	61ac      	str	r4, [r5, #24]
   16874:	b010      	add	sp, #64	; 0x40
   16876:	bd70      	pop	{r4, r5, r6, pc}
   16878:	2009c000 	.word	0x2009c000

0001687c <flash_read_permanent_id>:
flash_read_permanent_id():
   1687c:	b570      	push	{r4, r5, r6, lr}
   1687e:	4d08      	ldr	r5, [pc, #32]	; (168a0 <flash_read_permanent_id+0x24>)
   16880:	2440      	movs	r4, #64	; 0x40
   16882:	4606      	mov	r6, r0
   16884:	2100      	movs	r1, #0
   16886:	2077      	movs	r0, #119	; 0x77
   16888:	61ec      	str	r4, [r5, #28]
   1688a:	f7ff fec9 	bl	16620 <flash_send_op_addr(flash_opcode_t, unsigned long)>
   1688e:	4630      	mov	r0, r6
   16890:	4621      	mov	r1, r4
   16892:	f7ff fe55 	bl	16540 <ssp1_exchange_data>
   16896:	61ac      	str	r4, [r5, #24]
   16898:	61ac      	str	r4, [r5, #24]
   1689a:	61ac      	str	r4, [r5, #24]
   1689c:	bd70      	pop	{r4, r5, r6, pc}
   1689e:	bf00      	nop
   168a0:	2009c000 	.word	0x2009c000

000168a4 <flash_get_page_count>:
flash_get_page_count():
   168a4:	4b06      	ldr	r3, [pc, #24]	; (168c0 <flash_get_page_count+0x1c>)
   168a6:	b510      	push	{r4, lr}
   168a8:	881c      	ldrh	r4, [r3, #0]
   168aa:	f034 041f 	bics.w	r4, r4, #31
   168ae:	d004      	beq.n	168ba <flash_get_page_count+0x16>
   168b0:	f7ff fe00 	bl	164b4 <flash_get_mem_size_bytes()>
   168b4:	fbb0 f0f4 	udiv	r0, r0, r4
   168b8:	bd10      	pop	{r4, pc}
   168ba:	4620      	mov	r0, r4
   168bc:	bd10      	pop	{r4, pc}
   168be:	bf00      	nop
   168c0:	2007c91e 	.word	0x2007c91e

000168c4 <flash_get_page_size>:
flash_get_page_size():
   168c4:	4b01      	ldr	r3, [pc, #4]	; (168cc <flash_get_page_size+0x8>)
   168c6:	8818      	ldrh	r0, [r3, #0]
   168c8:	4770      	bx	lr
   168ca:	bf00      	nop
   168cc:	2007c91e 	.word	0x2007c91e

000168d0 <flash_supports_metadata>:
flash_supports_metadata():
   168d0:	4b02      	ldr	r3, [pc, #8]	; (168dc <flash_supports_metadata+0xc>)
   168d2:	7818      	ldrb	r0, [r3, #0]
   168d4:	3000      	adds	r0, #0
   168d6:	bf18      	it	ne
   168d8:	2001      	movne	r0, #1
   168da:	4770      	bx	lr
   168dc:	2007c91e 	.word	0x2007c91e

000168e0 <flash_write_page(unsigned char*, unsigned long, unsigned long)>:
_ZL16flash_write_pagePhmm():
   168e0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   168e4:	f04f 33ff 	mov.w	r3, #4294967295
   168e8:	460f      	mov	r7, r1
   168ea:	4690      	mov	r8, r2
   168ec:	9301      	str	r3, [sp, #4]
   168ee:	4681      	mov	r9, r0
   168f0:	f7ff feca 	bl	16688 <flash_wait_for_ready()>
   168f4:	f7ff ffec 	bl	168d0 <flash_supports_metadata>
   168f8:	4606      	mov	r6, r0
   168fa:	b1b0      	cbz	r0, 1692a <flash_write_page(unsigned char*, unsigned long, unsigned long)+0x4a>
   168fc:	4c19      	ldr	r4, [pc, #100]	; (16964 <flash_write_page(unsigned char*, unsigned long, unsigned long)+0x84>)
   168fe:	2540      	movs	r5, #64	; 0x40
   16900:	4b19      	ldr	r3, [pc, #100]	; (16968 <flash_write_page(unsigned char*, unsigned long, unsigned long)+0x88>)
   16902:	61e5      	str	r5, [r4, #28]
   16904:	881b      	ldrh	r3, [r3, #0]
   16906:	2003      	movs	r0, #3
   16908:	f5b3 7f84 	cmp.w	r3, #264	; 0x108
   1690c:	bf14      	ite	ne
   1690e:	f44f 7100 	movne.w	r1, #512	; 0x200
   16912:	f44f 7180 	moveq.w	r1, #256	; 0x100
   16916:	4339      	orrs	r1, r7
   16918:	f7ff fe82 	bl	16620 <flash_send_op_addr(flash_opcode_t, unsigned long)>
   1691c:	a801      	add	r0, sp, #4
   1691e:	2104      	movs	r1, #4
   16920:	f7ff fe0e 	bl	16540 <ssp1_exchange_data>
   16924:	61a5      	str	r5, [r4, #24]
   16926:	61a5      	str	r5, [r4, #24]
   16928:	61a5      	str	r5, [r4, #24]
   1692a:	4c0e      	ldr	r4, [pc, #56]	; (16964 <flash_write_page(unsigned char*, unsigned long, unsigned long)+0x84>)
   1692c:	2340      	movs	r3, #64	; 0x40
   1692e:	2082      	movs	r0, #130	; 0x82
   16930:	4639      	mov	r1, r7
   16932:	61e3      	str	r3, [r4, #28]
   16934:	f7ff fe74 	bl	16620 <flash_send_op_addr(flash_opcode_t, unsigned long)>
   16938:	4648      	mov	r0, r9
   1693a:	4641      	mov	r1, r8
   1693c:	2201      	movs	r2, #1
   1693e:	f004 f819 	bl	1a974 <ssp1_dma_transfer_block>
   16942:	b13e      	cbz	r6, 16954 <flash_write_page(unsigned char*, unsigned long, unsigned long)+0x74>
   16944:	9b01      	ldr	r3, [sp, #4]
   16946:	a802      	add	r0, sp, #8
   16948:	3301      	adds	r3, #1
   1694a:	f840 3d04 	str.w	r3, [r0, #-4]!
   1694e:	2104      	movs	r1, #4
   16950:	f7ff fdf6 	bl	16540 <ssp1_exchange_data>
   16954:	2340      	movs	r3, #64	; 0x40
   16956:	61a3      	str	r3, [r4, #24]
   16958:	61a3      	str	r3, [r4, #24]
   1695a:	61a3      	str	r3, [r4, #24]
   1695c:	b003      	add	sp, #12
   1695e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   16962:	bf00      	nop
   16964:	2009c000 	.word	0x2009c000
   16968:	2007c91e 	.word	0x2007c91e

0001696c <flash_get_page_write_count>:
flash_get_page_write_count():
   1696c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   1696e:	4b12      	ldr	r3, [pc, #72]	; (169b8 <flash_get_page_write_count+0x4c>)
   16970:	4607      	mov	r7, r0
   16972:	881b      	ldrh	r3, [r3, #0]
   16974:	f5b3 7f84 	cmp.w	r3, #264	; 0x108
   16978:	f04f 33ff 	mov.w	r3, #4294967295
   1697c:	bf14      	ite	ne
   1697e:	f44f 7600 	movne.w	r6, #512	; 0x200
   16982:	f44f 7680 	moveq.w	r6, #256	; 0x100
   16986:	9301      	str	r3, [sp, #4]
   16988:	f7ff ffa2 	bl	168d0 <flash_supports_metadata>
   1698c:	b170      	cbz	r0, 169ac <flash_get_page_write_count+0x40>
   1698e:	4c0b      	ldr	r4, [pc, #44]	; (169bc <flash_get_page_write_count+0x50>)
   16990:	2540      	movs	r5, #64	; 0x40
   16992:	2003      	movs	r0, #3
   16994:	ea46 2147 	orr.w	r1, r6, r7, lsl #9
   16998:	61e5      	str	r5, [r4, #28]
   1699a:	f7ff fe41 	bl	16620 <flash_send_op_addr(flash_opcode_t, unsigned long)>
   1699e:	a801      	add	r0, sp, #4
   169a0:	2104      	movs	r1, #4
   169a2:	f7ff fdcd 	bl	16540 <ssp1_exchange_data>
   169a6:	61a5      	str	r5, [r4, #24]
   169a8:	61a5      	str	r5, [r4, #24]
   169aa:	61a5      	str	r5, [r4, #24]
   169ac:	9801      	ldr	r0, [sp, #4]
   169ae:	1c43      	adds	r3, r0, #1
   169b0:	bf08      	it	eq
   169b2:	2000      	moveq	r0, #0
   169b4:	b003      	add	sp, #12
   169b6:	bdf0      	pop	{r4, r5, r6, r7, pc}
   169b8:	2007c91e 	.word	0x2007c91e
   169bc:	2009c000 	.word	0x2009c000

000169c0 <flash_chip_erase>:
flash_chip_erase():
   169c0:	b537      	push	{r0, r1, r2, r4, r5, lr}
   169c2:	4b07      	ldr	r3, [pc, #28]	; (169e0 <flash_chip_erase+0x20>)
   169c4:	4c07      	ldr	r4, [pc, #28]	; (169e4 <flash_chip_erase+0x24>)
   169c6:	6818      	ldr	r0, [r3, #0]
   169c8:	2540      	movs	r5, #64	; 0x40
   169ca:	9001      	str	r0, [sp, #4]
   169cc:	2104      	movs	r1, #4
   169ce:	61e5      	str	r5, [r4, #28]
   169d0:	a801      	add	r0, sp, #4
   169d2:	f7ff fdb5 	bl	16540 <ssp1_exchange_data>
   169d6:	61a5      	str	r5, [r4, #24]
   169d8:	61a5      	str	r5, [r4, #24]
   169da:	61a5      	str	r5, [r4, #24]
   169dc:	b003      	add	sp, #12
   169de:	bd30      	pop	{r4, r5, pc}
   169e0:	00026dd5 	.word	0x00026dd5
   169e4:	2009c000 	.word	0x2009c000

000169e8 <get_fattime>:
get_fattime():
   169e8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
   169ea:	a801      	add	r0, sp, #4
   169ec:	f003 fee4 	bl	1a7b8 <rtc_gettime>
   169f0:	f89d 2009 	ldrb.w	r2, [sp, #9]
   169f4:	f89d 3008 	ldrb.w	r3, [sp, #8]
   169f8:	f002 020f 	and.w	r2, r2, #15
   169fc:	f003 031f 	and.w	r3, r3, #31
   16a00:	0552      	lsls	r2, r2, #21
   16a02:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
   16a06:	f89d 3006 	ldrb.w	r3, [sp, #6]
   16a0a:	f89d 0005 	ldrb.w	r0, [sp, #5]
   16a0e:	f003 031f 	and.w	r3, r3, #31
   16a12:	ea42 23c3 	orr.w	r3, r2, r3, lsl #11
   16a16:	f000 003f 	and.w	r0, r0, #63	; 0x3f
   16a1a:	ea43 1040 	orr.w	r0, r3, r0, lsl #5
   16a1e:	f89d 3004 	ldrb.w	r3, [sp, #4]
   16a22:	f3c3 0344 	ubfx	r3, r3, #1, #5
   16a26:	4318      	orrs	r0, r3
   16a28:	f8bd 300a 	ldrh.w	r3, [sp, #10]
   16a2c:	065b      	lsls	r3, r3, #25
   16a2e:	f103 4308 	add.w	r3, r3, #2281701376	; 0x88000000
   16a32:	4318      	orrs	r0, r3
   16a34:	b005      	add	sp, #20
   16a36:	f85d fb04 	ldr.w	pc, [sp], #4

00016a3a <mem_cpy>:
mem_cpy():
   16a3a:	b510      	push	{r4, lr}
   16a3c:	2300      	movs	r3, #0
   16a3e:	1ad4      	subs	r4, r2, r3
   16a40:	2c03      	cmp	r4, #3
   16a42:	d903      	bls.n	16a4c <mem_cpy+0x12>
   16a44:	58cc      	ldr	r4, [r1, r3]
   16a46:	50c4      	str	r4, [r0, r3]
   16a48:	3304      	adds	r3, #4
   16a4a:	e7f8      	b.n	16a3e <mem_cpy+0x4>
   16a4c:	f002 0403 	and.w	r4, r2, #3
   16a50:	f022 0203 	bic.w	r2, r2, #3
   16a54:	4410      	add	r0, r2
   16a56:	2300      	movs	r3, #0
   16a58:	440a      	add	r2, r1
   16a5a:	42a3      	cmp	r3, r4
   16a5c:	d003      	beq.n	16a66 <mem_cpy+0x2c>
   16a5e:	5cd1      	ldrb	r1, [r2, r3]
   16a60:	54c1      	strb	r1, [r0, r3]
   16a62:	3301      	adds	r3, #1
   16a64:	e7f9      	b.n	16a5a <mem_cpy+0x20>
   16a66:	bd10      	pop	{r4, pc}

00016a68 <mem_set>:
mem_set():
   16a68:	4402      	add	r2, r0
   16a6a:	4290      	cmp	r0, r2
   16a6c:	d002      	beq.n	16a74 <mem_set+0xc>
   16a6e:	f800 1b01 	strb.w	r1, [r0], #1
   16a72:	e7fa      	b.n	16a6a <mem_set+0x2>
   16a74:	4770      	bx	lr

00016a76 <sum_sfn>:
sum_sfn():
   16a76:	2300      	movs	r3, #0
   16a78:	b510      	push	{r4, lr}
   16a7a:	4604      	mov	r4, r0
   16a7c:	4618      	mov	r0, r3
   16a7e:	01c2      	lsls	r2, r0, #7
   16a80:	5ce1      	ldrb	r1, [r4, r3]
   16a82:	ea42 0250 	orr.w	r2, r2, r0, lsr #1
   16a86:	3301      	adds	r3, #1
   16a88:	440a      	add	r2, r1
   16a8a:	2b0b      	cmp	r3, #11
   16a8c:	f002 00ff 	and.w	r0, r2, #255	; 0xff
   16a90:	d1f5      	bne.n	16a7e <sum_sfn+0x8>
   16a92:	bd10      	pop	{r4, pc}

00016a94 <get_ldnumber>:
get_ldnumber():
   16a94:	6803      	ldr	r3, [r0, #0]
   16a96:	b510      	push	{r4, lr}
   16a98:	4604      	mov	r4, r0
   16a9a:	b1c3      	cbz	r3, 16ace <get_ldnumber+0x3a>
   16a9c:	461a      	mov	r2, r3
   16a9e:	4610      	mov	r0, r2
   16aa0:	f812 1b01 	ldrb.w	r1, [r2], #1
   16aa4:	291f      	cmp	r1, #31
   16aa6:	d902      	bls.n	16aae <get_ldnumber+0x1a>
   16aa8:	293a      	cmp	r1, #58	; 0x3a
   16aaa:	d1f8      	bne.n	16a9e <get_ldnumber+0xa>
   16aac:	e001      	b.n	16ab2 <get_ldnumber+0x1e>
   16aae:	2000      	movs	r0, #0
   16ab0:	bd10      	pop	{r4, pc}
   16ab2:	461a      	mov	r2, r3
   16ab4:	f812 1b01 	ldrb.w	r1, [r2], #1
   16ab8:	4290      	cmp	r0, r2
   16aba:	d108      	bne.n	16ace <get_ldnumber+0x3a>
   16abc:	f1a1 0230 	sub.w	r2, r1, #48	; 0x30
   16ac0:	2a01      	cmp	r2, #1
   16ac2:	d804      	bhi.n	16ace <get_ldnumber+0x3a>
   16ac4:	b248      	sxtb	r0, r1
   16ac6:	3302      	adds	r3, #2
   16ac8:	3830      	subs	r0, #48	; 0x30
   16aca:	6023      	str	r3, [r4, #0]
   16acc:	bd10      	pop	{r4, pc}
   16ace:	f04f 30ff 	mov.w	r0, #4294967295
   16ad2:	bd10      	pop	{r4, pc}

00016ad4 <get_fileinfo>:
get_fileinfo():
   16ad4:	6902      	ldr	r2, [r0, #16]
   16ad6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   16ad8:	460c      	mov	r4, r1
   16ada:	f101 0309 	add.w	r3, r1, #9
   16ade:	b372      	cbz	r2, 16b3e <get_fileinfo+0x6a>
   16ae0:	6942      	ldr	r2, [r0, #20]
   16ae2:	2100      	movs	r1, #0
   16ae4:	3101      	adds	r1, #1
   16ae6:	1855      	adds	r5, r2, r1
   16ae8:	f815 5c01 	ldrb.w	r5, [r5, #-1]
   16aec:	b26e      	sxtb	r6, r5
   16aee:	2e20      	cmp	r6, #32
   16af0:	d01b      	beq.n	16b2a <get_fileinfo+0x56>
   16af2:	2e05      	cmp	r6, #5
   16af4:	bf08      	it	eq
   16af6:	25e5      	moveq	r5, #229	; 0xe5
   16af8:	2909      	cmp	r1, #9
   16afa:	d102      	bne.n	16b02 <get_fileinfo+0x2e>
   16afc:	262e      	movs	r6, #46	; 0x2e
   16afe:	701e      	strb	r6, [r3, #0]
   16b00:	3301      	adds	r3, #1
   16b02:	b2ee      	uxtb	r6, r5
   16b04:	f1a6 0741 	sub.w	r7, r6, #65	; 0x41
   16b08:	2f19      	cmp	r7, #25
   16b0a:	d80c      	bhi.n	16b26 <get_fileinfo+0x52>
   16b0c:	2909      	cmp	r1, #9
   16b0e:	7b17      	ldrb	r7, [r2, #12]
   16b10:	bf34      	ite	cc
   16b12:	f04f 0c08 	movcc.w	ip, #8
   16b16:	f04f 0c10 	movcs.w	ip, #16
   16b1a:	ea1c 0f07 	tst.w	ip, r7
   16b1e:	bf1c      	itt	ne
   16b20:	f106 0520 	addne.w	r5, r6, #32
   16b24:	b2ed      	uxtbne	r5, r5
   16b26:	701d      	strb	r5, [r3, #0]
   16b28:	3301      	adds	r3, #1
   16b2a:	290b      	cmp	r1, #11
   16b2c:	d1da      	bne.n	16ae4 <get_fileinfo+0x10>
   16b2e:	7ad1      	ldrb	r1, [r2, #11]
   16b30:	7221      	strb	r1, [r4, #8]
   16b32:	69d1      	ldr	r1, [r2, #28]
   16b34:	6021      	str	r1, [r4, #0]
   16b36:	8b11      	ldrh	r1, [r2, #24]
   16b38:	80a1      	strh	r1, [r4, #4]
   16b3a:	8ad2      	ldrh	r2, [r2, #22]
   16b3c:	80e2      	strh	r2, [r4, #6]
   16b3e:	2500      	movs	r5, #0
   16b40:	701d      	strb	r5, [r3, #0]
   16b42:	69a6      	ldr	r6, [r4, #24]
   16b44:	b1ee      	cbz	r6, 16b82 <get_fileinfo+0xae>
   16b46:	6903      	ldr	r3, [r0, #16]
   16b48:	b90b      	cbnz	r3, 16b4e <get_fileinfo+0x7a>
   16b4a:	2500      	movs	r5, #0
   16b4c:	e017      	b.n	16b7e <get_fileinfo+0xaa>
   16b4e:	69e3      	ldr	r3, [r4, #28]
   16b50:	2b00      	cmp	r3, #0
   16b52:	d0fa      	beq.n	16b4a <get_fileinfo+0x76>
   16b54:	8c02      	ldrh	r2, [r0, #32]
   16b56:	f64f 73ff 	movw	r3, #65535	; 0xffff
   16b5a:	429a      	cmp	r2, r3
   16b5c:	d0f5      	beq.n	16b4a <get_fileinfo+0x76>
   16b5e:	69c7      	ldr	r7, [r0, #28]
   16b60:	f837 0015 	ldrh.w	r0, [r7, r5, lsl #1]
   16b64:	b158      	cbz	r0, 16b7e <get_fileinfo+0xaa>
   16b66:	2100      	movs	r1, #0
   16b68:	f7ff f824 	bl	15bb4 <ff_convert>
   16b6c:	2800      	cmp	r0, #0
   16b6e:	d0ec      	beq.n	16b4a <get_fileinfo+0x76>
   16b70:	69e3      	ldr	r3, [r4, #28]
   16b72:	3b01      	subs	r3, #1
   16b74:	429d      	cmp	r5, r3
   16b76:	d2e8      	bcs.n	16b4a <get_fileinfo+0x76>
   16b78:	5570      	strb	r0, [r6, r5]
   16b7a:	3501      	adds	r5, #1
   16b7c:	e7f0      	b.n	16b60 <get_fileinfo+0x8c>
   16b7e:	2300      	movs	r3, #0
   16b80:	5573      	strb	r3, [r6, r5]
   16b82:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00016b84 <sync_window>:
sync_window():
   16b84:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   16b86:	4604      	mov	r4, r0
   16b88:	7900      	ldrb	r0, [r0, #4]
   16b8a:	b1f8      	cbz	r0, 16bcc <sync_window+0x48>
   16b8c:	6b25      	ldr	r5, [r4, #48]	; 0x30
   16b8e:	f104 0734 	add.w	r7, r4, #52	; 0x34
   16b92:	7860      	ldrb	r0, [r4, #1]
   16b94:	4639      	mov	r1, r7
   16b96:	462a      	mov	r2, r5
   16b98:	2301      	movs	r3, #1
   16b9a:	f7ff f89d 	bl	15cd8 <disk_write>
   16b9e:	b9a0      	cbnz	r0, 16bca <sync_window+0x46>
   16ba0:	6a63      	ldr	r3, [r4, #36]	; 0x24
   16ba2:	7120      	strb	r0, [r4, #4]
   16ba4:	1aea      	subs	r2, r5, r3
   16ba6:	69e3      	ldr	r3, [r4, #28]
   16ba8:	429a      	cmp	r2, r3
   16baa:	d301      	bcc.n	16bb0 <sync_window+0x2c>
   16bac:	2000      	movs	r0, #0
   16bae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   16bb0:	78e6      	ldrb	r6, [r4, #3]
   16bb2:	2e01      	cmp	r6, #1
   16bb4:	d9fa      	bls.n	16bac <sync_window+0x28>
   16bb6:	69e3      	ldr	r3, [r4, #28]
   16bb8:	7860      	ldrb	r0, [r4, #1]
   16bba:	441d      	add	r5, r3
   16bbc:	4639      	mov	r1, r7
   16bbe:	462a      	mov	r2, r5
   16bc0:	2301      	movs	r3, #1
   16bc2:	f7ff f889 	bl	15cd8 <disk_write>
   16bc6:	3e01      	subs	r6, #1
   16bc8:	e7f3      	b.n	16bb2 <sync_window+0x2e>
   16bca:	2001      	movs	r0, #1
   16bcc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

00016bd0 <sync_fs>:
sync_fs():
   16bd0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   16bd2:	4604      	mov	r4, r0
   16bd4:	f7ff ffd6 	bl	16b84 <sync_window>
   16bd8:	4605      	mov	r5, r0
   16bda:	2d00      	cmp	r5, #0
   16bdc:	d131      	bne.n	16c42 <sync_fs+0x72>
   16bde:	7823      	ldrb	r3, [r4, #0]
   16be0:	2b03      	cmp	r3, #3
   16be2:	d126      	bne.n	16c32 <sync_fs+0x62>
   16be4:	7966      	ldrb	r6, [r4, #5]
   16be6:	2e01      	cmp	r6, #1
   16be8:	d123      	bne.n	16c32 <sync_fs+0x62>
   16bea:	f104 0734 	add.w	r7, r4, #52	; 0x34
   16bee:	4638      	mov	r0, r7
   16bf0:	4629      	mov	r1, r5
   16bf2:	f44f 7200 	mov.w	r2, #512	; 0x200
   16bf6:	f7ff ff37 	bl	16a68 <mem_set>
   16bfa:	f64a 2355 	movw	r3, #43605	; 0xaa55
   16bfe:	f8a4 3232 	strh.w	r3, [r4, #562]	; 0x232
   16c02:	4b10      	ldr	r3, [pc, #64]	; (16c44 <sync_fs+0x74>)
   16c04:	6a22      	ldr	r2, [r4, #32]
   16c06:	6363      	str	r3, [r4, #52]	; 0x34
   16c08:	f103 53ff 	add.w	r3, r3, #534773760	; 0x1fe00000
   16c0c:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
   16c10:	3320      	adds	r3, #32
   16c12:	f8c4 3218 	str.w	r3, [r4, #536]	; 0x218
   16c16:	6963      	ldr	r3, [r4, #20]
   16c18:	3201      	adds	r2, #1
   16c1a:	f8c4 321c 	str.w	r3, [r4, #540]	; 0x21c
   16c1e:	6923      	ldr	r3, [r4, #16]
   16c20:	6322      	str	r2, [r4, #48]	; 0x30
   16c22:	f8c4 3220 	str.w	r3, [r4, #544]	; 0x220
   16c26:	7860      	ldrb	r0, [r4, #1]
   16c28:	4639      	mov	r1, r7
   16c2a:	4633      	mov	r3, r6
   16c2c:	f7ff f854 	bl	15cd8 <disk_write>
   16c30:	7165      	strb	r5, [r4, #5]
   16c32:	2100      	movs	r1, #0
   16c34:	7860      	ldrb	r0, [r4, #1]
   16c36:	460a      	mov	r2, r1
   16c38:	f7ff f86a 	bl	15d10 <disk_ioctl>
   16c3c:	3000      	adds	r0, #0
   16c3e:	bf18      	it	ne
   16c40:	2001      	movne	r0, #1
   16c42:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   16c44:	41615252 	.word	0x41615252

00016c48 <move_window>:
move_window():
   16c48:	6b03      	ldr	r3, [r0, #48]	; 0x30
   16c4a:	b570      	push	{r4, r5, r6, lr}
   16c4c:	4299      	cmp	r1, r3
   16c4e:	4605      	mov	r5, r0
   16c50:	460e      	mov	r6, r1
   16c52:	d00d      	beq.n	16c70 <move_window+0x28>
   16c54:	f7ff ff96 	bl	16b84 <sync_window>
   16c58:	4604      	mov	r4, r0
   16c5a:	b958      	cbnz	r0, 16c74 <move_window+0x2c>
   16c5c:	7868      	ldrb	r0, [r5, #1]
   16c5e:	f105 0134 	add.w	r1, r5, #52	; 0x34
   16c62:	4632      	mov	r2, r6
   16c64:	2301      	movs	r3, #1
   16c66:	f7ff f81b 	bl	15ca0 <disk_read>
   16c6a:	b918      	cbnz	r0, 16c74 <move_window+0x2c>
   16c6c:	632e      	str	r6, [r5, #48]	; 0x30
   16c6e:	e002      	b.n	16c76 <move_window+0x2e>
   16c70:	2400      	movs	r4, #0
   16c72:	e000      	b.n	16c76 <move_window+0x2e>
   16c74:	2401      	movs	r4, #1
   16c76:	4620      	mov	r0, r4
   16c78:	bd70      	pop	{r4, r5, r6, pc}
	...

00016c7c <check_fs>:
check_fs():
   16c7c:	2300      	movs	r3, #0
   16c7e:	b510      	push	{r4, lr}
   16c80:	7103      	strb	r3, [r0, #4]
   16c82:	f04f 33ff 	mov.w	r3, #4294967295
   16c86:	6303      	str	r3, [r0, #48]	; 0x30
   16c88:	4604      	mov	r4, r0
   16c8a:	f7ff ffdd 	bl	16c48 <move_window>
   16c8e:	b9a0      	cbnz	r0, 16cba <check_fs+0x3e>
   16c90:	f8b4 2232 	ldrh.w	r2, [r4, #562]	; 0x232
   16c94:	f64a 2355 	movw	r3, #43605	; 0xaa55
   16c98:	429a      	cmp	r2, r3
   16c9a:	d110      	bne.n	16cbe <check_fs+0x42>
   16c9c:	f8d4 306a 	ldr.w	r3, [r4, #106]	; 0x6a
   16ca0:	f023 427f 	bic.w	r2, r3, #4278190080	; 0xff000000
   16ca4:	4b07      	ldr	r3, [pc, #28]	; (16cc4 <check_fs+0x48>)
   16ca6:	429a      	cmp	r2, r3
   16ca8:	d00a      	beq.n	16cc0 <check_fs+0x44>
   16caa:	f8d4 0086 	ldr.w	r0, [r4, #134]	; 0x86
   16cae:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
   16cb2:	1ac0      	subs	r0, r0, r3
   16cb4:	bf18      	it	ne
   16cb6:	2001      	movne	r0, #1
   16cb8:	bd10      	pop	{r4, pc}
   16cba:	2003      	movs	r0, #3
   16cbc:	bd10      	pop	{r4, pc}
   16cbe:	2002      	movs	r0, #2
   16cc0:	bd10      	pop	{r4, pc}
   16cc2:	bf00      	nop
   16cc4:	00544146 	.word	0x00544146

00016cc8 <find_volume>:
find_volume():
   16cc8:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
   16ccc:	2300      	movs	r3, #0
   16cce:	6003      	str	r3, [r0, #0]
   16cd0:	4607      	mov	r7, r0
   16cd2:	4608      	mov	r0, r1
   16cd4:	4615      	mov	r5, r2
   16cd6:	f7ff fedd 	bl	16a94 <get_ldnumber>
   16cda:	1e06      	subs	r6, r0, #0
   16cdc:	f2c0 80ec 	blt.w	16eb8 <find_volume+0x1f0>
   16ce0:	4b7d      	ldr	r3, [pc, #500]	; (16ed8 <find_volume+0x210>)
   16ce2:	f853 4026 	ldr.w	r4, [r3, r6, lsl #2]
   16ce6:	2c00      	cmp	r4, #0
   16ce8:	f000 80e8 	beq.w	16ebc <find_volume+0x1f4>
   16cec:	68e0      	ldr	r0, [r4, #12]
   16cee:	f7fe ff9b 	bl	15c28 <ff_req_grant>
   16cf2:	2800      	cmp	r0, #0
   16cf4:	f000 80e4 	beq.w	16ec0 <find_volume+0x1f8>
   16cf8:	603c      	str	r4, [r7, #0]
   16cfa:	7823      	ldrb	r3, [r4, #0]
   16cfc:	b16b      	cbz	r3, 16d1a <find_volume+0x52>
   16cfe:	7860      	ldrb	r0, [r4, #1]
   16d00:	f7fe ffc7 	bl	15c92 <disk_status>
   16d04:	07c7      	lsls	r7, r0, #31
   16d06:	d408      	bmi.n	16d1a <find_volume+0x52>
   16d08:	2d00      	cmp	r5, #0
   16d0a:	f000 80db 	beq.w	16ec4 <find_volume+0x1fc>
   16d0e:	f010 0f04 	tst.w	r0, #4
   16d12:	bf0c      	ite	eq
   16d14:	2000      	moveq	r0, #0
   16d16:	200a      	movne	r0, #10
   16d18:	e0db      	b.n	16ed2 <find_volume+0x20a>
   16d1a:	b2f0      	uxtb	r0, r6
   16d1c:	2300      	movs	r3, #0
   16d1e:	7023      	strb	r3, [r4, #0]
   16d20:	7060      	strb	r0, [r4, #1]
   16d22:	f7fe ffa3 	bl	15c6c <disk_initialize>
   16d26:	07c6      	lsls	r6, r0, #31
   16d28:	f100 80ce 	bmi.w	16ec8 <find_volume+0x200>
   16d2c:	b115      	cbz	r5, 16d34 <find_volume+0x6c>
   16d2e:	0741      	lsls	r1, r0, #29
   16d30:	f100 80cc 	bmi.w	16ecc <find_volume+0x204>
   16d34:	4620      	mov	r0, r4
   16d36:	2100      	movs	r1, #0
   16d38:	f7ff ffa0 	bl	16c7c <check_fs>
   16d3c:	2801      	cmp	r0, #1
   16d3e:	d11c      	bne.n	16d7a <find_volume+0xb2>
   16d40:	1d22      	adds	r2, r4, #4
   16d42:	2300      	movs	r3, #0
   16d44:	f892 11f2 	ldrb.w	r1, [r2, #498]	; 0x1f2
   16d48:	b109      	cbz	r1, 16d4e <find_volume+0x86>
   16d4a:	f8d2 11f6 	ldr.w	r1, [r2, #502]	; 0x1f6
   16d4e:	f84d 1003 	str.w	r1, [sp, r3]
   16d52:	3304      	adds	r3, #4
   16d54:	2b10      	cmp	r3, #16
   16d56:	f102 0210 	add.w	r2, r2, #16
   16d5a:	d1f3      	bne.n	16d44 <find_volume+0x7c>
   16d5c:	2600      	movs	r6, #0
   16d5e:	f85d 5006 	ldr.w	r5, [sp, r6]
   16d62:	b12d      	cbz	r5, 16d70 <find_volume+0xa8>
   16d64:	4620      	mov	r0, r4
   16d66:	4629      	mov	r1, r5
   16d68:	f7ff ff88 	bl	16c7c <check_fs>
   16d6c:	b908      	cbnz	r0, 16d72 <find_volume+0xaa>
   16d6e:	e00b      	b.n	16d88 <find_volume+0xc0>
   16d70:	2002      	movs	r0, #2
   16d72:	3604      	adds	r6, #4
   16d74:	2e10      	cmp	r6, #16
   16d76:	d1f2      	bne.n	16d5e <find_volume+0x96>
   16d78:	e000      	b.n	16d7c <find_volume+0xb4>
   16d7a:	2500      	movs	r5, #0
   16d7c:	2803      	cmp	r0, #3
   16d7e:	f000 80a7 	beq.w	16ed0 <find_volume+0x208>
   16d82:	b108      	cbz	r0, 16d88 <find_volume+0xc0>
   16d84:	200d      	movs	r0, #13
   16d86:	e0a4      	b.n	16ed2 <find_volume+0x20a>
   16d88:	f8b4 303f 	ldrh.w	r3, [r4, #63]	; 0x3f
   16d8c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   16d90:	d1f8      	bne.n	16d84 <find_volume+0xbc>
   16d92:	f8b4 304a 	ldrh.w	r3, [r4, #74]	; 0x4a
   16d96:	b903      	cbnz	r3, 16d9a <find_volume+0xd2>
   16d98:	6da3      	ldr	r3, [r4, #88]	; 0x58
   16d9a:	f894 6044 	ldrb.w	r6, [r4, #68]	; 0x44
   16d9e:	61e3      	str	r3, [r4, #28]
   16da0:	1e72      	subs	r2, r6, #1
   16da2:	2a01      	cmp	r2, #1
   16da4:	70e6      	strb	r6, [r4, #3]
   16da6:	d8ed      	bhi.n	16d84 <find_volume+0xbc>
   16da8:	f894 0041 	ldrb.w	r0, [r4, #65]	; 0x41
   16dac:	70a0      	strb	r0, [r4, #2]
   16dae:	2800      	cmp	r0, #0
   16db0:	d0e8      	beq.n	16d84 <find_volume+0xbc>
   16db2:	1e42      	subs	r2, r0, #1
   16db4:	4202      	tst	r2, r0
   16db6:	d1e5      	bne.n	16d84 <find_volume+0xbc>
   16db8:	f8b4 1045 	ldrh.w	r1, [r4, #69]	; 0x45
   16dbc:	070a      	lsls	r2, r1, #28
   16dbe:	8121      	strh	r1, [r4, #8]
   16dc0:	d1e0      	bne.n	16d84 <find_volume+0xbc>
   16dc2:	f8b4 2047 	ldrh.w	r2, [r4, #71]	; 0x47
   16dc6:	b902      	cbnz	r2, 16dca <find_volume+0x102>
   16dc8:	6d62      	ldr	r2, [r4, #84]	; 0x54
   16dca:	f8b4 c042 	ldrh.w	ip, [r4, #66]	; 0x42
   16dce:	f1bc 0f00 	cmp.w	ip, #0
   16dd2:	d0d7      	beq.n	16d84 <find_volume+0xbc>
   16dd4:	fb06 f803 	mul.w	r8, r6, r3
   16dd8:	eb0c 1711 	add.w	r7, ip, r1, lsr #4
   16ddc:	4447      	add	r7, r8
   16dde:	42ba      	cmp	r2, r7
   16de0:	d3d0      	bcc.n	16d84 <find_volume+0xbc>
   16de2:	1bd2      	subs	r2, r2, r7
   16de4:	fbb2 f2f0 	udiv	r2, r2, r0
   16de8:	2a00      	cmp	r2, #0
   16dea:	d0cb      	beq.n	16d84 <find_volume+0xbc>
   16dec:	f640 70f5 	movw	r0, #4085	; 0xff5
   16df0:	4282      	cmp	r2, r0
   16df2:	d906      	bls.n	16e02 <find_volume+0x13a>
   16df4:	f64f 76f5 	movw	r6, #65525	; 0xfff5
   16df8:	42b2      	cmp	r2, r6
   16dfa:	bf8c      	ite	hi
   16dfc:	2603      	movhi	r6, #3
   16dfe:	2602      	movls	r6, #2
   16e00:	e000      	b.n	16e04 <find_volume+0x13c>
   16e02:	2601      	movs	r6, #1
   16e04:	3202      	adds	r2, #2
   16e06:	eb05 000c 	add.w	r0, r5, ip
   16e0a:	442f      	add	r7, r5
   16e0c:	2e03      	cmp	r6, #3
   16e0e:	61a2      	str	r2, [r4, #24]
   16e10:	6225      	str	r5, [r4, #32]
   16e12:	6260      	str	r0, [r4, #36]	; 0x24
   16e14:	62e7      	str	r7, [r4, #44]	; 0x2c
   16e16:	d105      	bne.n	16e24 <find_volume+0x15c>
   16e18:	2900      	cmp	r1, #0
   16e1a:	d1b3      	bne.n	16d84 <find_volume+0xbc>
   16e1c:	6e21      	ldr	r1, [r4, #96]	; 0x60
   16e1e:	0092      	lsls	r2, r2, #2
   16e20:	62a1      	str	r1, [r4, #40]	; 0x28
   16e22:	e00f      	b.n	16e44 <find_volume+0x17c>
   16e24:	2900      	cmp	r1, #0
   16e26:	d0ad      	beq.n	16d84 <find_volume+0xbc>
   16e28:	2e02      	cmp	r6, #2
   16e2a:	ea4f 0142 	mov.w	r1, r2, lsl #1
   16e2e:	bf18      	it	ne
   16e30:	1889      	addne	r1, r1, r2
   16e32:	4440      	add	r0, r8
   16e34:	bf18      	it	ne
   16e36:	f002 0201 	andne.w	r2, r2, #1
   16e3a:	62a0      	str	r0, [r4, #40]	; 0x28
   16e3c:	bf0c      	ite	eq
   16e3e:	460a      	moveq	r2, r1
   16e40:	eb02 0251 	addne.w	r2, r2, r1, lsr #1
   16e44:	f202 12ff 	addw	r2, r2, #511	; 0x1ff
   16e48:	ebb3 2f52 	cmp.w	r3, r2, lsr #9
   16e4c:	d39a      	bcc.n	16d84 <find_volume+0xbc>
   16e4e:	f04f 33ff 	mov.w	r3, #4294967295
   16e52:	6163      	str	r3, [r4, #20]
   16e54:	6123      	str	r3, [r4, #16]
   16e56:	2e03      	cmp	r6, #3
   16e58:	f04f 0380 	mov.w	r3, #128	; 0x80
   16e5c:	7163      	strb	r3, [r4, #5]
   16e5e:	d122      	bne.n	16ea6 <find_volume+0x1de>
   16e60:	f8b4 3064 	ldrh.w	r3, [r4, #100]	; 0x64
   16e64:	2b01      	cmp	r3, #1
   16e66:	d11e      	bne.n	16ea6 <find_volume+0x1de>
   16e68:	4620      	mov	r0, r4
   16e6a:	1c69      	adds	r1, r5, #1
   16e6c:	f7ff feec 	bl	16c48 <move_window>
   16e70:	b9c8      	cbnz	r0, 16ea6 <find_volume+0x1de>
   16e72:	f8b4 2232 	ldrh.w	r2, [r4, #562]	; 0x232
   16e76:	f64a 2355 	movw	r3, #43605	; 0xaa55
   16e7a:	429a      	cmp	r2, r3
   16e7c:	7160      	strb	r0, [r4, #5]
   16e7e:	d112      	bne.n	16ea6 <find_volume+0x1de>
   16e80:	6b63      	ldr	r3, [r4, #52]	; 0x34
   16e82:	4a16      	ldr	r2, [pc, #88]	; (16edc <find_volume+0x214>)
   16e84:	4293      	cmp	r3, r2
   16e86:	d10e      	bne.n	16ea6 <find_volume+0x1de>
   16e88:	f102 52ff 	add.w	r2, r2, #534773760	; 0x1fe00000
   16e8c:	f8d4 3218 	ldr.w	r3, [r4, #536]	; 0x218
   16e90:	f502 5200 	add.w	r2, r2, #8192	; 0x2000
   16e94:	3220      	adds	r2, #32
   16e96:	4293      	cmp	r3, r2
   16e98:	d105      	bne.n	16ea6 <find_volume+0x1de>
   16e9a:	f8d4 321c 	ldr.w	r3, [r4, #540]	; 0x21c
   16e9e:	6163      	str	r3, [r4, #20]
   16ea0:	f8d4 3220 	ldr.w	r3, [r4, #544]	; 0x220
   16ea4:	6123      	str	r3, [r4, #16]
   16ea6:	4a0e      	ldr	r2, [pc, #56]	; (16ee0 <find_volume+0x218>)
   16ea8:	7026      	strb	r6, [r4, #0]
   16eaa:	8813      	ldrh	r3, [r2, #0]
   16eac:	2000      	movs	r0, #0
   16eae:	3301      	adds	r3, #1
   16eb0:	b29b      	uxth	r3, r3
   16eb2:	8013      	strh	r3, [r2, #0]
   16eb4:	80e3      	strh	r3, [r4, #6]
   16eb6:	e00c      	b.n	16ed2 <find_volume+0x20a>
   16eb8:	200b      	movs	r0, #11
   16eba:	e00a      	b.n	16ed2 <find_volume+0x20a>
   16ebc:	200c      	movs	r0, #12
   16ebe:	e008      	b.n	16ed2 <find_volume+0x20a>
   16ec0:	200f      	movs	r0, #15
   16ec2:	e006      	b.n	16ed2 <find_volume+0x20a>
   16ec4:	4628      	mov	r0, r5
   16ec6:	e004      	b.n	16ed2 <find_volume+0x20a>
   16ec8:	2003      	movs	r0, #3
   16eca:	e002      	b.n	16ed2 <find_volume+0x20a>
   16ecc:	200a      	movs	r0, #10
   16ece:	e000      	b.n	16ed2 <find_volume+0x20a>
   16ed0:	2001      	movs	r0, #1
   16ed2:	b004      	add	sp, #16
   16ed4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   16ed8:	2007c92c 	.word	0x2007c92c
   16edc:	41615252 	.word	0x41615252
   16ee0:	2007c928 	.word	0x2007c928

00016ee4 <validate>:
validate():
   16ee4:	b510      	push	{r4, lr}
   16ee6:	4604      	mov	r4, r0
   16ee8:	b1a8      	cbz	r0, 16f16 <validate+0x32>
   16eea:	6803      	ldr	r3, [r0, #0]
   16eec:	b19b      	cbz	r3, 16f16 <validate+0x32>
   16eee:	781a      	ldrb	r2, [r3, #0]
   16ef0:	b18a      	cbz	r2, 16f16 <validate+0x32>
   16ef2:	88d9      	ldrh	r1, [r3, #6]
   16ef4:	8882      	ldrh	r2, [r0, #4]
   16ef6:	4291      	cmp	r1, r2
   16ef8:	d10d      	bne.n	16f16 <validate+0x32>
   16efa:	68d8      	ldr	r0, [r3, #12]
   16efc:	f7fe fe94 	bl	15c28 <ff_req_grant>
   16f00:	b158      	cbz	r0, 16f1a <validate+0x36>
   16f02:	6823      	ldr	r3, [r4, #0]
   16f04:	7858      	ldrb	r0, [r3, #1]
   16f06:	f7fe fec4 	bl	15c92 <disk_status>
   16f0a:	f010 0f01 	tst.w	r0, #1
   16f0e:	bf0c      	ite	eq
   16f10:	2000      	moveq	r0, #0
   16f12:	2003      	movne	r0, #3
   16f14:	bd10      	pop	{r4, pc}
   16f16:	2009      	movs	r0, #9
   16f18:	bd10      	pop	{r4, pc}
   16f1a:	200f      	movs	r0, #15
   16f1c:	bd10      	pop	{r4, pc}

00016f1e <unlock_fs>:
unlock_fs():
   16f1e:	b150      	cbz	r0, 16f36 <unlock_fs+0x18>
   16f20:	f1a1 030b 	sub.w	r3, r1, #11
   16f24:	2b01      	cmp	r3, #1
   16f26:	d906      	bls.n	16f36 <unlock_fs+0x18>
   16f28:	2909      	cmp	r1, #9
   16f2a:	d004      	beq.n	16f36 <unlock_fs+0x18>
   16f2c:	290f      	cmp	r1, #15
   16f2e:	d002      	beq.n	16f36 <unlock_fs+0x18>
   16f30:	68c0      	ldr	r0, [r0, #12]
   16f32:	f7fe be8c 	b.w	15c4e <ff_rel_grant>
   16f36:	4770      	bx	lr

00016f38 <clust2sect>:
clust2sect():
   16f38:	6983      	ldr	r3, [r0, #24]
   16f3a:	3902      	subs	r1, #2
   16f3c:	3b02      	subs	r3, #2
   16f3e:	4299      	cmp	r1, r3
   16f40:	bf3d      	ittte	cc
   16f42:	7882      	ldrbcc	r2, [r0, #2]
   16f44:	6ac3      	ldrcc	r3, [r0, #44]	; 0x2c
   16f46:	fb02 3001 	mlacc	r0, r2, r1, r3
   16f4a:	2000      	movcs	r0, #0
   16f4c:	4770      	bx	lr

00016f4e <get_fat>:
get_fat():
   16f4e:	2901      	cmp	r1, #1
   16f50:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   16f52:	4604      	mov	r4, r0
   16f54:	460d      	mov	r5, r1
   16f56:	d94b      	bls.n	16ff0 <get_fat+0xa2>
   16f58:	6983      	ldr	r3, [r0, #24]
   16f5a:	4299      	cmp	r1, r3
   16f5c:	d248      	bcs.n	16ff0 <get_fat+0xa2>
   16f5e:	7803      	ldrb	r3, [r0, #0]
   16f60:	2b02      	cmp	r3, #2
   16f62:	d029      	beq.n	16fb8 <get_fat+0x6a>
   16f64:	2b03      	cmp	r3, #3
   16f66:	d034      	beq.n	16fd2 <get_fat+0x84>
   16f68:	2b01      	cmp	r3, #1
   16f6a:	d141      	bne.n	16ff0 <get_fat+0xa2>
   16f6c:	eb01 0651 	add.w	r6, r1, r1, lsr #1
   16f70:	6a41      	ldr	r1, [r0, #36]	; 0x24
   16f72:	eb01 2156 	add.w	r1, r1, r6, lsr #9
   16f76:	f7ff fe67 	bl	16c48 <move_window>
   16f7a:	b110      	cbz	r0, 16f82 <get_fat+0x34>
   16f7c:	f04f 30ff 	mov.w	r0, #4294967295
   16f80:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   16f82:	6a61      	ldr	r1, [r4, #36]	; 0x24
   16f84:	f3c6 0308 	ubfx	r3, r6, #0, #9
   16f88:	3601      	adds	r6, #1
   16f8a:	4423      	add	r3, r4
   16f8c:	4620      	mov	r0, r4
   16f8e:	eb01 2156 	add.w	r1, r1, r6, lsr #9
   16f92:	f893 7034 	ldrb.w	r7, [r3, #52]	; 0x34
   16f96:	f7ff fe57 	bl	16c48 <move_window>
   16f9a:	2800      	cmp	r0, #0
   16f9c:	d1ee      	bne.n	16f7c <get_fat+0x2e>
   16f9e:	f3c6 0608 	ubfx	r6, r6, #0, #9
   16fa2:	4434      	add	r4, r6
   16fa4:	f894 0034 	ldrb.w	r0, [r4, #52]	; 0x34
   16fa8:	07eb      	lsls	r3, r5, #31
   16faa:	ea47 2000 	orr.w	r0, r7, r0, lsl #8
   16fae:	bf4c      	ite	mi
   16fb0:	0900      	lsrmi	r0, r0, #4
   16fb2:	f3c0 000b 	ubfxpl	r0, r0, #0, #12
   16fb6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   16fb8:	6a41      	ldr	r1, [r0, #36]	; 0x24
   16fba:	eb01 2115 	add.w	r1, r1, r5, lsr #8
   16fbe:	f7ff fe43 	bl	16c48 <move_window>
   16fc2:	2800      	cmp	r0, #0
   16fc4:	d1da      	bne.n	16f7c <get_fat+0x2e>
   16fc6:	006d      	lsls	r5, r5, #1
   16fc8:	f405 75ff 	and.w	r5, r5, #510	; 0x1fe
   16fcc:	442c      	add	r4, r5
   16fce:	8ea0      	ldrh	r0, [r4, #52]	; 0x34
   16fd0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   16fd2:	6a41      	ldr	r1, [r0, #36]	; 0x24
   16fd4:	eb01 11d5 	add.w	r1, r1, r5, lsr #7
   16fd8:	f7ff fe36 	bl	16c48 <move_window>
   16fdc:	2800      	cmp	r0, #0
   16fde:	d1cd      	bne.n	16f7c <get_fat+0x2e>
   16fe0:	00ad      	lsls	r5, r5, #2
   16fe2:	f405 75fe 	and.w	r5, r5, #508	; 0x1fc
   16fe6:	442c      	add	r4, r5
   16fe8:	6b60      	ldr	r0, [r4, #52]	; 0x34
   16fea:	f020 4070 	bic.w	r0, r0, #4026531840	; 0xf0000000
   16fee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   16ff0:	2001      	movs	r0, #1
   16ff2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00016ff4 <dir_sdi>:
dir_sdi():
   16ff4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   16ff6:	6884      	ldr	r4, [r0, #8]
   16ff8:	4605      	mov	r5, r0
   16ffa:	2c01      	cmp	r4, #1
   16ffc:	460e      	mov	r6, r1
   16ffe:	80e9      	strh	r1, [r5, #6]
   17000:	d101      	bne.n	17006 <dir_sdi+0x12>
   17002:	2002      	movs	r0, #2
   17004:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   17006:	6803      	ldr	r3, [r0, #0]
   17008:	699a      	ldr	r2, [r3, #24]
   1700a:	4294      	cmp	r4, r2
   1700c:	d2f9      	bcs.n	17002 <dir_sdi+0xe>
   1700e:	b954      	cbnz	r4, 17026 <dir_sdi+0x32>
   17010:	781a      	ldrb	r2, [r3, #0]
   17012:	2a03      	cmp	r2, #3
   17014:	d101      	bne.n	1701a <dir_sdi+0x26>
   17016:	6a9a      	ldr	r2, [r3, #40]	; 0x28
   17018:	b922      	cbnz	r2, 17024 <dir_sdi+0x30>
   1701a:	891a      	ldrh	r2, [r3, #8]
   1701c:	4296      	cmp	r6, r2
   1701e:	d2f0      	bcs.n	17002 <dir_sdi+0xe>
   17020:	6a98      	ldr	r0, [r3, #40]	; 0x28
   17022:	e015      	b.n	17050 <dir_sdi+0x5c>
   17024:	4614      	mov	r4, r2
   17026:	789f      	ldrb	r7, [r3, #2]
   17028:	013f      	lsls	r7, r7, #4
   1702a:	42be      	cmp	r6, r7
   1702c:	6828      	ldr	r0, [r5, #0]
   1702e:	4621      	mov	r1, r4
   17030:	d30c      	bcc.n	1704c <dir_sdi+0x58>
   17032:	f7ff ff8c 	bl	16f4e <get_fat>
   17036:	1c43      	adds	r3, r0, #1
   17038:	4604      	mov	r4, r0
   1703a:	d018      	beq.n	1706e <dir_sdi+0x7a>
   1703c:	2801      	cmp	r0, #1
   1703e:	d9e0      	bls.n	17002 <dir_sdi+0xe>
   17040:	682b      	ldr	r3, [r5, #0]
   17042:	699b      	ldr	r3, [r3, #24]
   17044:	4298      	cmp	r0, r3
   17046:	d2dc      	bcs.n	17002 <dir_sdi+0xe>
   17048:	1bf6      	subs	r6, r6, r7
   1704a:	e7ee      	b.n	1702a <dir_sdi+0x36>
   1704c:	f7ff ff74 	bl	16f38 <clust2sect>
   17050:	60ec      	str	r4, [r5, #12]
   17052:	2800      	cmp	r0, #0
   17054:	d0d5      	beq.n	17002 <dir_sdi+0xe>
   17056:	682b      	ldr	r3, [r5, #0]
   17058:	eb00 1016 	add.w	r0, r0, r6, lsr #4
   1705c:	f006 060f 	and.w	r6, r6, #15
   17060:	eb03 1346 	add.w	r3, r3, r6, lsl #5
   17064:	3334      	adds	r3, #52	; 0x34
   17066:	6128      	str	r0, [r5, #16]
   17068:	616b      	str	r3, [r5, #20]
   1706a:	2000      	movs	r0, #0
   1706c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1706e:	2001      	movs	r0, #1
   17070:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00017072 <put_fat>:
put_fat():
   17072:	2901      	cmp	r1, #1
   17074:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   17076:	4604      	mov	r4, r0
   17078:	460d      	mov	r5, r1
   1707a:	4616      	mov	r6, r2
   1707c:	d95e      	bls.n	1713c <put_fat+0xca>
   1707e:	6983      	ldr	r3, [r0, #24]
   17080:	4299      	cmp	r1, r3
   17082:	d25b      	bcs.n	1713c <put_fat+0xca>
   17084:	7803      	ldrb	r3, [r0, #0]
   17086:	2b02      	cmp	r3, #2
   17088:	d037      	beq.n	170fa <put_fat+0x88>
   1708a:	2b03      	cmp	r3, #3
   1708c:	d041      	beq.n	17112 <put_fat+0xa0>
   1708e:	2b01      	cmp	r3, #1
   17090:	d150      	bne.n	17134 <put_fat+0xc2>
   17092:	eb01 0751 	add.w	r7, r1, r1, lsr #1
   17096:	6a41      	ldr	r1, [r0, #36]	; 0x24
   17098:	eb01 2157 	add.w	r1, r1, r7, lsr #9
   1709c:	f7ff fdd4 	bl	16c48 <move_window>
   170a0:	2800      	cmp	r0, #0
   170a2:	d148      	bne.n	17136 <put_fat+0xc4>
   170a4:	f3c7 0308 	ubfx	r3, r7, #0, #9
   170a8:	f015 0501 	ands.w	r5, r5, #1
   170ac:	4423      	add	r3, r4
   170ae:	b2f2      	uxtb	r2, r6
   170b0:	d006      	beq.n	170c0 <put_fat+0x4e>
   170b2:	f893 1034 	ldrb.w	r1, [r3, #52]	; 0x34
   170b6:	f001 010f 	and.w	r1, r1, #15
   170ba:	ea41 1202 	orr.w	r2, r1, r2, lsl #4
   170be:	b2d2      	uxtb	r2, r2
   170c0:	6a61      	ldr	r1, [r4, #36]	; 0x24
   170c2:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
   170c6:	3701      	adds	r7, #1
   170c8:	2301      	movs	r3, #1
   170ca:	7123      	strb	r3, [r4, #4]
   170cc:	4620      	mov	r0, r4
   170ce:	eb01 2157 	add.w	r1, r1, r7, lsr #9
   170d2:	f7ff fdb9 	bl	16c48 <move_window>
   170d6:	bb70      	cbnz	r0, 17136 <put_fat+0xc4>
   170d8:	f3c7 0708 	ubfx	r7, r7, #0, #9
   170dc:	4427      	add	r7, r4
   170de:	b115      	cbz	r5, 170e6 <put_fat+0x74>
   170e0:	f3c6 1607 	ubfx	r6, r6, #4, #8
   170e4:	e006      	b.n	170f4 <put_fat+0x82>
   170e6:	f897 3034 	ldrb.w	r3, [r7, #52]	; 0x34
   170ea:	f3c6 2603 	ubfx	r6, r6, #8, #4
   170ee:	f023 030f 	bic.w	r3, r3, #15
   170f2:	431e      	orrs	r6, r3
   170f4:	f887 6034 	strb.w	r6, [r7, #52]	; 0x34
   170f8:	e01d      	b.n	17136 <put_fat+0xc4>
   170fa:	6a41      	ldr	r1, [r0, #36]	; 0x24
   170fc:	eb01 2115 	add.w	r1, r1, r5, lsr #8
   17100:	f7ff fda2 	bl	16c48 <move_window>
   17104:	b9b8      	cbnz	r0, 17136 <put_fat+0xc4>
   17106:	006d      	lsls	r5, r5, #1
   17108:	f405 75ff 	and.w	r5, r5, #510	; 0x1fe
   1710c:	4425      	add	r5, r4
   1710e:	86ae      	strh	r6, [r5, #52]	; 0x34
   17110:	e011      	b.n	17136 <put_fat+0xc4>
   17112:	6a41      	ldr	r1, [r0, #36]	; 0x24
   17114:	eb01 11d5 	add.w	r1, r1, r5, lsr #7
   17118:	f7ff fd96 	bl	16c48 <move_window>
   1711c:	b958      	cbnz	r0, 17136 <put_fat+0xc4>
   1711e:	00ad      	lsls	r5, r5, #2
   17120:	f405 75fe 	and.w	r5, r5, #508	; 0x1fc
   17124:	3530      	adds	r5, #48	; 0x30
   17126:	4425      	add	r5, r4
   17128:	686b      	ldr	r3, [r5, #4]
   1712a:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
   1712e:	431e      	orrs	r6, r3
   17130:	606e      	str	r6, [r5, #4]
   17132:	e000      	b.n	17136 <put_fat+0xc4>
   17134:	2002      	movs	r0, #2
   17136:	2301      	movs	r3, #1
   17138:	7123      	strb	r3, [r4, #4]
   1713a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1713c:	2002      	movs	r0, #2
   1713e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00017140 <create_chain>:
create_chain():
   17140:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   17142:	4604      	mov	r4, r0
   17144:	460f      	mov	r7, r1
   17146:	b931      	cbnz	r1, 17156 <create_chain+0x16>
   17148:	6906      	ldr	r6, [r0, #16]
   1714a:	b196      	cbz	r6, 17172 <create_chain+0x32>
   1714c:	6983      	ldr	r3, [r0, #24]
   1714e:	429e      	cmp	r6, r3
   17150:	bf28      	it	cs
   17152:	2601      	movcs	r6, #1
   17154:	e00e      	b.n	17174 <create_chain+0x34>
   17156:	f7ff fefa 	bl	16f4e <get_fat>
   1715a:	2801      	cmp	r0, #1
   1715c:	d93f      	bls.n	171de <create_chain+0x9e>
   1715e:	1c45      	adds	r5, r0, #1
   17160:	d102      	bne.n	17168 <create_chain+0x28>
   17162:	f04f 30ff 	mov.w	r0, #4294967295
   17166:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   17168:	69a3      	ldr	r3, [r4, #24]
   1716a:	4298      	cmp	r0, r3
   1716c:	d338      	bcc.n	171e0 <create_chain+0xa0>
   1716e:	463e      	mov	r6, r7
   17170:	e000      	b.n	17174 <create_chain+0x34>
   17172:	2601      	movs	r6, #1
   17174:	4635      	mov	r5, r6
   17176:	69a3      	ldr	r3, [r4, #24]
   17178:	3501      	adds	r5, #1
   1717a:	429d      	cmp	r5, r3
   1717c:	d304      	bcc.n	17188 <create_chain+0x48>
   1717e:	2e01      	cmp	r6, #1
   17180:	d801      	bhi.n	17186 <create_chain+0x46>
   17182:	2000      	movs	r0, #0
   17184:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   17186:	2502      	movs	r5, #2
   17188:	4620      	mov	r0, r4
   1718a:	4629      	mov	r1, r5
   1718c:	f7ff fedf 	bl	16f4e <get_fat>
   17190:	b130      	cbz	r0, 171a0 <create_chain+0x60>
   17192:	1c41      	adds	r1, r0, #1
   17194:	d0e5      	beq.n	17162 <create_chain+0x22>
   17196:	2801      	cmp	r0, #1
   17198:	d021      	beq.n	171de <create_chain+0x9e>
   1719a:	42b5      	cmp	r5, r6
   1719c:	d1eb      	bne.n	17176 <create_chain+0x36>
   1719e:	e7f0      	b.n	17182 <create_chain+0x42>
   171a0:	4620      	mov	r0, r4
   171a2:	4629      	mov	r1, r5
   171a4:	f06f 4270 	mvn.w	r2, #4026531840	; 0xf0000000
   171a8:	f7ff ff63 	bl	17072 <put_fat>
   171ac:	b9a8      	cbnz	r0, 171da <create_chain+0x9a>
   171ae:	b957      	cbnz	r7, 171c6 <create_chain+0x86>
   171b0:	6963      	ldr	r3, [r4, #20]
   171b2:	6125      	str	r5, [r4, #16]
   171b4:	1c5a      	adds	r2, r3, #1
   171b6:	d00e      	beq.n	171d6 <create_chain+0x96>
   171b8:	3b01      	subs	r3, #1
   171ba:	6163      	str	r3, [r4, #20]
   171bc:	7963      	ldrb	r3, [r4, #5]
   171be:	f043 0301 	orr.w	r3, r3, #1
   171c2:	7163      	strb	r3, [r4, #5]
   171c4:	e007      	b.n	171d6 <create_chain+0x96>
   171c6:	4620      	mov	r0, r4
   171c8:	4639      	mov	r1, r7
   171ca:	462a      	mov	r2, r5
   171cc:	f7ff ff51 	bl	17072 <put_fat>
   171d0:	2800      	cmp	r0, #0
   171d2:	d0ed      	beq.n	171b0 <create_chain+0x70>
   171d4:	e001      	b.n	171da <create_chain+0x9a>
   171d6:	4628      	mov	r0, r5
   171d8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   171da:	2801      	cmp	r0, #1
   171dc:	d0c1      	beq.n	17162 <create_chain+0x22>
   171de:	2001      	movs	r0, #1
   171e0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

000171e2 <dir_next>:
dir_next():
   171e2:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   171e6:	88c6      	ldrh	r6, [r0, #6]
   171e8:	4604      	mov	r4, r0
   171ea:	3601      	adds	r6, #1
   171ec:	b2b3      	uxth	r3, r6
   171ee:	460f      	mov	r7, r1
   171f0:	b913      	cbnz	r3, 171f8 <dir_next+0x16>
   171f2:	2004      	movs	r0, #4
   171f4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   171f8:	6903      	ldr	r3, [r0, #16]
   171fa:	2b00      	cmp	r3, #0
   171fc:	d0f9      	beq.n	171f2 <dir_next+0x10>
   171fe:	f016 080f 	ands.w	r8, r6, #15
   17202:	d159      	bne.n	172b8 <dir_next+0xd6>
   17204:	68c1      	ldr	r1, [r0, #12]
   17206:	3301      	adds	r3, #1
   17208:	6103      	str	r3, [r0, #16]
   1720a:	6800      	ldr	r0, [r0, #0]
   1720c:	b919      	cbnz	r1, 17216 <dir_next+0x34>
   1720e:	8903      	ldrh	r3, [r0, #8]
   17210:	429e      	cmp	r6, r3
   17212:	d2ee      	bcs.n	171f2 <dir_next+0x10>
   17214:	e050      	b.n	172b8 <dir_next+0xd6>
   17216:	7882      	ldrb	r2, [r0, #2]
   17218:	3a01      	subs	r2, #1
   1721a:	ea12 1216 	ands.w	r2, r2, r6, lsr #4
   1721e:	d14b      	bne.n	172b8 <dir_next+0xd6>
   17220:	f7ff fe95 	bl	16f4e <get_fat>
   17224:	2801      	cmp	r0, #1
   17226:	4605      	mov	r5, r0
   17228:	d802      	bhi.n	17230 <dir_next+0x4e>
   1722a:	2002      	movs	r0, #2
   1722c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   17230:	1c42      	adds	r2, r0, #1
   17232:	d102      	bne.n	1723a <dir_next+0x58>
   17234:	2001      	movs	r0, #1
   17236:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   1723a:	6820      	ldr	r0, [r4, #0]
   1723c:	6983      	ldr	r3, [r0, #24]
   1723e:	429d      	cmp	r5, r3
   17240:	d334      	bcc.n	172ac <dir_next+0xca>
   17242:	2f00      	cmp	r7, #0
   17244:	d0d5      	beq.n	171f2 <dir_next+0x10>
   17246:	68e1      	ldr	r1, [r4, #12]
   17248:	f7ff ff7a 	bl	17140 <create_chain>
   1724c:	4605      	mov	r5, r0
   1724e:	2800      	cmp	r0, #0
   17250:	d03b      	beq.n	172ca <dir_next+0xe8>
   17252:	2801      	cmp	r0, #1
   17254:	d0e9      	beq.n	1722a <dir_next+0x48>
   17256:	1c43      	adds	r3, r0, #1
   17258:	d0ec      	beq.n	17234 <dir_next+0x52>
   1725a:	6820      	ldr	r0, [r4, #0]
   1725c:	f7ff fc92 	bl	16b84 <sync_window>
   17260:	4607      	mov	r7, r0
   17262:	2800      	cmp	r0, #0
   17264:	d1e6      	bne.n	17234 <dir_next+0x52>
   17266:	6820      	ldr	r0, [r4, #0]
   17268:	4639      	mov	r1, r7
   1726a:	3034      	adds	r0, #52	; 0x34
   1726c:	f44f 7200 	mov.w	r2, #512	; 0x200
   17270:	f7ff fbfa 	bl	16a68 <mem_set>
   17274:	f8d4 9000 	ldr.w	r9, [r4]
   17278:	4629      	mov	r1, r5
   1727a:	4648      	mov	r0, r9
   1727c:	f7ff fe5c 	bl	16f38 <clust2sect>
   17280:	f8c9 0030 	str.w	r0, [r9, #48]	; 0x30
   17284:	6823      	ldr	r3, [r4, #0]
   17286:	789a      	ldrb	r2, [r3, #2]
   17288:	4297      	cmp	r7, r2
   1728a:	d20c      	bcs.n	172a6 <dir_next+0xc4>
   1728c:	2201      	movs	r2, #1
   1728e:	711a      	strb	r2, [r3, #4]
   17290:	6820      	ldr	r0, [r4, #0]
   17292:	f7ff fc77 	bl	16b84 <sync_window>
   17296:	2800      	cmp	r0, #0
   17298:	d1cc      	bne.n	17234 <dir_next+0x52>
   1729a:	6823      	ldr	r3, [r4, #0]
   1729c:	3701      	adds	r7, #1
   1729e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
   172a0:	3201      	adds	r2, #1
   172a2:	631a      	str	r2, [r3, #48]	; 0x30
   172a4:	e7ee      	b.n	17284 <dir_next+0xa2>
   172a6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
   172a8:	1bd7      	subs	r7, r2, r7
   172aa:	631f      	str	r7, [r3, #48]	; 0x30
   172ac:	60e5      	str	r5, [r4, #12]
   172ae:	6820      	ldr	r0, [r4, #0]
   172b0:	4629      	mov	r1, r5
   172b2:	f7ff fe41 	bl	16f38 <clust2sect>
   172b6:	6120      	str	r0, [r4, #16]
   172b8:	6823      	ldr	r3, [r4, #0]
   172ba:	80e6      	strh	r6, [r4, #6]
   172bc:	eb03 1348 	add.w	r3, r3, r8, lsl #5
   172c0:	3334      	adds	r3, #52	; 0x34
   172c2:	6163      	str	r3, [r4, #20]
   172c4:	2000      	movs	r0, #0
   172c6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   172ca:	2007      	movs	r0, #7
   172cc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

000172d0 <dir_find.part.9>:
dir_find.part.9():
   172d0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   172d4:	f64f 73ff 	movw	r3, #65535	; 0xffff
   172d8:	f04f 08ff 	mov.w	r8, #255	; 0xff
   172dc:	4604      	mov	r4, r0
   172de:	8403      	strh	r3, [r0, #32]
   172e0:	4645      	mov	r5, r8
   172e2:	6820      	ldr	r0, [r4, #0]
   172e4:	6921      	ldr	r1, [r4, #16]
   172e6:	f7ff fcaf 	bl	16c48 <move_window>
   172ea:	4607      	mov	r7, r0
   172ec:	2800      	cmp	r0, #0
   172ee:	d17c      	bne.n	173ea <dir_find.part.9+0x11a>
   172f0:	6966      	ldr	r6, [r4, #20]
   172f2:	7833      	ldrb	r3, [r6, #0]
   172f4:	2b00      	cmp	r3, #0
   172f6:	d073      	beq.n	173e0 <dir_find.part.9+0x110>
   172f8:	2be5      	cmp	r3, #229	; 0xe5
   172fa:	7af1      	ldrb	r1, [r6, #11]
   172fc:	d064      	beq.n	173c8 <dir_find.part.9+0xf8>
   172fe:	f001 023f 	and.w	r2, r1, #63	; 0x3f
   17302:	0709      	lsls	r1, r1, #28
   17304:	d502      	bpl.n	1730c <dir_find.part.9+0x3c>
   17306:	2a0f      	cmp	r2, #15
   17308:	d15e      	bne.n	173c8 <dir_find.part.9+0xf8>
   1730a:	e001      	b.n	17310 <dir_find.part.9+0x40>
   1730c:	2a0f      	cmp	r2, #15
   1730e:	d146      	bne.n	1739e <dir_find.part.9+0xce>
   17310:	f8d4 b01c 	ldr.w	fp, [r4, #28]
   17314:	f1bb 0f00 	cmp.w	fp, #0
   17318:	d05a      	beq.n	173d0 <dir_find.part.9+0x100>
   1731a:	065a      	lsls	r2, r3, #25
   1731c:	d506      	bpl.n	1732c <dir_find.part.9+0x5c>
   1731e:	f003 05bf 	and.w	r5, r3, #191	; 0xbf
   17322:	88e3      	ldrh	r3, [r4, #6]
   17324:	f896 800d 	ldrb.w	r8, [r6, #13]
   17328:	8423      	strh	r3, [r4, #32]
   1732a:	e001      	b.n	17330 <dir_find.part.9+0x60>
   1732c:	42ab      	cmp	r3, r5
   1732e:	d14e      	bne.n	173ce <dir_find.part.9+0xfe>
   17330:	7b73      	ldrb	r3, [r6, #13]
   17332:	4543      	cmp	r3, r8
   17334:	d14b      	bne.n	173ce <dir_find.part.9+0xfe>
   17336:	7837      	ldrb	r7, [r6, #0]
   17338:	230d      	movs	r3, #13
   1733a:	f027 0740 	bic.w	r7, r7, #64	; 0x40
   1733e:	3f01      	subs	r7, #1
   17340:	435f      	muls	r7, r3
   17342:	f04f 0901 	mov.w	r9, #1
   17346:	f04f 0a00 	mov.w	sl, #0
   1734a:	4b2a      	ldr	r3, [pc, #168]	; (173f4 <dir_find.part.9+0x124>)
   1734c:	f81a 3003 	ldrb.w	r3, [sl, r3]
   17350:	5af0      	ldrh	r0, [r6, r3]
   17352:	f1b9 0f00 	cmp.w	r9, #0
   17356:	d00f      	beq.n	17378 <dir_find.part.9+0xa8>
   17358:	f7fe fc48 	bl	15bec <ff_wtoupper>
   1735c:	2f7f      	cmp	r7, #127	; 0x7f
   1735e:	4681      	mov	r9, r0
   17360:	d835      	bhi.n	173ce <dir_find.part.9+0xfe>
   17362:	1c7b      	adds	r3, r7, #1
   17364:	f83b 0017 	ldrh.w	r0, [fp, r7, lsl #1]
   17368:	9301      	str	r3, [sp, #4]
   1736a:	f7fe fc3f 	bl	15bec <ff_wtoupper>
   1736e:	4581      	cmp	r9, r0
   17370:	9b01      	ldr	r3, [sp, #4]
   17372:	d12c      	bne.n	173ce <dir_find.part.9+0xfe>
   17374:	461f      	mov	r7, r3
   17376:	e003      	b.n	17380 <dir_find.part.9+0xb0>
   17378:	f64f 73ff 	movw	r3, #65535	; 0xffff
   1737c:	4298      	cmp	r0, r3
   1737e:	d126      	bne.n	173ce <dir_find.part.9+0xfe>
   17380:	f10a 0a01 	add.w	sl, sl, #1
   17384:	f1ba 0f0d 	cmp.w	sl, #13
   17388:	d1df      	bne.n	1734a <dir_find.part.9+0x7a>
   1738a:	7833      	ldrb	r3, [r6, #0]
   1738c:	065b      	lsls	r3, r3, #25
   1738e:	d529      	bpl.n	173e4 <dir_find.part.9+0x114>
   17390:	f1b9 0f00 	cmp.w	r9, #0
   17394:	d026      	beq.n	173e4 <dir_find.part.9+0x114>
   17396:	f83b 3017 	ldrh.w	r3, [fp, r7, lsl #1]
   1739a:	b31b      	cbz	r3, 173e4 <dir_find.part.9+0x114>
   1739c:	e017      	b.n	173ce <dir_find.part.9+0xfe>
   1739e:	b925      	cbnz	r5, 173aa <dir_find.part.9+0xda>
   173a0:	4630      	mov	r0, r6
   173a2:	f7ff fb68 	bl	16a76 <sum_sfn>
   173a6:	4580      	cmp	r8, r0
   173a8:	d01f      	beq.n	173ea <dir_find.part.9+0x11a>
   173aa:	69a2      	ldr	r2, [r4, #24]
   173ac:	7ad3      	ldrb	r3, [r2, #11]
   173ae:	f013 0301 	ands.w	r3, r3, #1
   173b2:	d109      	bne.n	173c8 <dir_find.part.9+0xf8>
   173b4:	5cf1      	ldrb	r1, [r6, r3]
   173b6:	3301      	adds	r3, #1
   173b8:	18d0      	adds	r0, r2, r3
   173ba:	f810 0c01 	ldrb.w	r0, [r0, #-1]
   173be:	4288      	cmp	r0, r1
   173c0:	d102      	bne.n	173c8 <dir_find.part.9+0xf8>
   173c2:	2b0b      	cmp	r3, #11
   173c4:	d1f6      	bne.n	173b4 <dir_find.part.9+0xe4>
   173c6:	e010      	b.n	173ea <dir_find.part.9+0x11a>
   173c8:	f64f 73ff 	movw	r3, #65535	; 0xffff
   173cc:	8423      	strh	r3, [r4, #32]
   173ce:	25ff      	movs	r5, #255	; 0xff
   173d0:	4620      	mov	r0, r4
   173d2:	2100      	movs	r1, #0
   173d4:	f7ff ff05 	bl	171e2 <dir_next>
   173d8:	4607      	mov	r7, r0
   173da:	2800      	cmp	r0, #0
   173dc:	d081      	beq.n	172e2 <dir_find.part.9+0x12>
   173de:	e004      	b.n	173ea <dir_find.part.9+0x11a>
   173e0:	2704      	movs	r7, #4
   173e2:	e002      	b.n	173ea <dir_find.part.9+0x11a>
   173e4:	3d01      	subs	r5, #1
   173e6:	b2ed      	uxtb	r5, r5
   173e8:	e7f2      	b.n	173d0 <dir_find.part.9+0x100>
   173ea:	4638      	mov	r0, r7
   173ec:	b003      	add	sp, #12
   173ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   173f2:	bf00      	nop
   173f4:	00026ec6 	.word	0x00026ec6

000173f8 <follow_path>:
follow_path():
   173f8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   173fc:	f991 3000 	ldrsb.w	r3, [r1]
   17400:	4606      	mov	r6, r0
   17402:	2b2f      	cmp	r3, #47	; 0x2f
   17404:	4689      	mov	r9, r1
   17406:	d001      	beq.n	1740c <follow_path+0x14>
   17408:	2b5c      	cmp	r3, #92	; 0x5c
   1740a:	d101      	bne.n	17410 <follow_path+0x18>
   1740c:	f109 0901 	add.w	r9, r9, #1
   17410:	2400      	movs	r4, #0
   17412:	60b4      	str	r4, [r6, #8]
   17414:	f899 3000 	ldrb.w	r3, [r9]
   17418:	2b1f      	cmp	r3, #31
   1741a:	d862      	bhi.n	174e2 <follow_path+0xea>
   1741c:	4630      	mov	r0, r6
   1741e:	4621      	mov	r1, r4
   17420:	f7ff fde8 	bl	16ff4 <dir_sdi>
   17424:	6174      	str	r4, [r6, #20]
   17426:	e114      	b.n	17652 <follow_path+0x25a>
   17428:	3301      	adds	r3, #1
   1742a:	f83a 1013 	ldrh.w	r1, [sl, r3, lsl #1]
   1742e:	2920      	cmp	r1, #32
   17430:	d0fa      	beq.n	17428 <follow_path+0x30>
   17432:	292e      	cmp	r1, #46	; 0x2e
   17434:	d0f8      	beq.n	17428 <follow_path+0x30>
   17436:	b10b      	cbz	r3, 1743c <follow_path+0x44>
   17438:	f044 0403 	orr.w	r4, r4, #3
   1743c:	4642      	mov	r2, r8
   1743e:	f832 1d02 	ldrh.w	r1, [r2, #-2]!
   17442:	292e      	cmp	r1, #46	; 0x2e
   17444:	d001      	beq.n	1744a <follow_path+0x52>
   17446:	3d01      	subs	r5, #1
   17448:	d1f9      	bne.n	1743e <follow_path+0x46>
   1744a:	f04f 0b00 	mov.w	fp, #0
   1744e:	f04f 0808 	mov.w	r8, #8
   17452:	465f      	mov	r7, fp
   17454:	1c5a      	adds	r2, r3, #1
   17456:	f83a 3013 	ldrh.w	r3, [sl, r3, lsl #1]
   1745a:	2b00      	cmp	r3, #0
   1745c:	f040 808f 	bne.w	1757e <follow_path+0x186>
   17460:	69b3      	ldr	r3, [r6, #24]
   17462:	781a      	ldrb	r2, [r3, #0]
   17464:	2ae5      	cmp	r2, #229	; 0xe5
   17466:	bf04      	itt	eq
   17468:	2205      	moveq	r2, #5
   1746a:	701a      	strbeq	r2, [r3, #0]
   1746c:	f1b8 0f08 	cmp.w	r8, #8
   17470:	bf04      	itt	eq
   17472:	00bf      	lsleq	r7, r7, #2
   17474:	b2ff      	uxtbeq	r7, r7
   17476:	f007 030c 	and.w	r3, r7, #12
   1747a:	2b0c      	cmp	r3, #12
   1747c:	f000 80cd 	beq.w	1761a <follow_path+0x222>
   17480:	f007 0203 	and.w	r2, r7, #3
   17484:	2a03      	cmp	r2, #3
   17486:	f000 80c8 	beq.w	1761a <follow_path+0x222>
   1748a:	07a1      	lsls	r1, r4, #30
   1748c:	d409      	bmi.n	174a2 <follow_path+0xaa>
   1748e:	f007 0703 	and.w	r7, r7, #3
   17492:	2f01      	cmp	r7, #1
   17494:	bf08      	it	eq
   17496:	f044 0410 	orreq.w	r4, r4, #16
   1749a:	2b04      	cmp	r3, #4
   1749c:	bf08      	it	eq
   1749e:	f044 0408 	orreq.w	r4, r4, #8
   174a2:	69b3      	ldr	r3, [r6, #24]
   174a4:	4630      	mov	r0, r6
   174a6:	72dc      	strb	r4, [r3, #11]
   174a8:	2100      	movs	r1, #0
   174aa:	f7ff fda3 	bl	16ff4 <dir_sdi>
   174ae:	b910      	cbnz	r0, 174b6 <follow_path+0xbe>
   174b0:	4630      	mov	r0, r6
   174b2:	f7ff ff0d 	bl	172d0 <dir_find.part.9>
   174b6:	69b3      	ldr	r3, [r6, #24]
   174b8:	7adb      	ldrb	r3, [r3, #11]
   174ba:	2800      	cmp	r0, #0
   174bc:	f040 80b0 	bne.w	17620 <follow_path+0x228>
   174c0:	075a      	lsls	r2, r3, #29
   174c2:	f100 80c6 	bmi.w	17652 <follow_path+0x25a>
   174c6:	6972      	ldr	r2, [r6, #20]
   174c8:	7ad3      	ldrb	r3, [r2, #11]
   174ca:	06db      	lsls	r3, r3, #27
   174cc:	f140 80af 	bpl.w	1762e <follow_path+0x236>
   174d0:	6831      	ldr	r1, [r6, #0]
   174d2:	8b53      	ldrh	r3, [r2, #26]
   174d4:	7809      	ldrb	r1, [r1, #0]
   174d6:	2903      	cmp	r1, #3
   174d8:	bf04      	itt	eq
   174da:	8a92      	ldrheq	r2, [r2, #20]
   174dc:	ea43 4302 	orreq.w	r3, r3, r2, lsl #16
   174e0:	60b3      	str	r3, [r6, #8]
   174e2:	464f      	mov	r7, r9
   174e4:	783b      	ldrb	r3, [r7, #0]
   174e6:	f109 0901 	add.w	r9, r9, #1
   174ea:	b25b      	sxtb	r3, r3
   174ec:	2b2f      	cmp	r3, #47	; 0x2f
   174ee:	d0f8      	beq.n	174e2 <follow_path+0xea>
   174f0:	2b5c      	cmp	r3, #92	; 0x5c
   174f2:	d0f6      	beq.n	174e2 <follow_path+0xea>
   174f4:	f8d6 a01c 	ldr.w	sl, [r6, #28]
   174f8:	2500      	movs	r5, #0
   174fa:	1c6c      	adds	r4, r5, #1
   174fc:	193b      	adds	r3, r7, r4
   174fe:	f913 0c01 	ldrsb.w	r0, [r3, #-1]
   17502:	b280      	uxth	r0, r0
   17504:	281f      	cmp	r0, #31
   17506:	d91d      	bls.n	17544 <follow_path+0x14c>
   17508:	282f      	cmp	r0, #47	; 0x2f
   1750a:	d01b      	beq.n	17544 <follow_path+0x14c>
   1750c:	285c      	cmp	r0, #92	; 0x5c
   1750e:	d019      	beq.n	17544 <follow_path+0x14c>
   17510:	2c81      	cmp	r4, #129	; 0x81
   17512:	f000 8098 	beq.w	17646 <follow_path+0x24e>
   17516:	b2c0      	uxtb	r0, r0
   17518:	2101      	movs	r1, #1
   1751a:	f7fe fb4b 	bl	15bb4 <ff_convert>
   1751e:	2800      	cmp	r0, #0
   17520:	f000 8091 	beq.w	17646 <follow_path+0x24e>
   17524:	287f      	cmp	r0, #127	; 0x7f
   17526:	d807      	bhi.n	17538 <follow_path+0x140>
   17528:	4a4b      	ldr	r2, [pc, #300]	; (17658 <follow_path+0x260>)
   1752a:	f812 3f01 	ldrb.w	r3, [r2, #1]!
   1752e:	b11b      	cbz	r3, 17538 <follow_path+0x140>
   17530:	b25b      	sxtb	r3, r3
   17532:	4283      	cmp	r3, r0
   17534:	d1f9      	bne.n	1752a <follow_path+0x132>
   17536:	e086      	b.n	17646 <follow_path+0x24e>
   17538:	eb0a 0344 	add.w	r3, sl, r4, lsl #1
   1753c:	f823 0c02 	strh.w	r0, [r3, #-2]
   17540:	4625      	mov	r5, r4
   17542:	e7da      	b.n	174fa <follow_path+0x102>
   17544:	281f      	cmp	r0, #31
   17546:	4699      	mov	r9, r3
   17548:	bf8c      	ite	hi
   1754a:	2400      	movhi	r4, #0
   1754c:	2404      	movls	r4, #4
   1754e:	eb0a 0345 	add.w	r3, sl, r5, lsl #1
   17552:	2d00      	cmp	r5, #0
   17554:	d077      	beq.n	17646 <follow_path+0x24e>
   17556:	f833 2d02 	ldrh.w	r2, [r3, #-2]!
   1755a:	2a20      	cmp	r2, #32
   1755c:	d001      	beq.n	17562 <follow_path+0x16a>
   1755e:	2a2e      	cmp	r2, #46	; 0x2e
   17560:	d101      	bne.n	17566 <follow_path+0x16e>
   17562:	3d01      	subs	r5, #1
   17564:	e7f5      	b.n	17552 <follow_path+0x15a>
   17566:	2700      	movs	r7, #0
   17568:	f82a 7015 	strh.w	r7, [sl, r5, lsl #1]
   1756c:	69b0      	ldr	r0, [r6, #24]
   1756e:	2120      	movs	r1, #32
   17570:	220b      	movs	r2, #11
   17572:	f7ff fa79 	bl	16a68 <mem_set>
   17576:	eb0a 0845 	add.w	r8, sl, r5, lsl #1
   1757a:	463b      	mov	r3, r7
   1757c:	e755      	b.n	1742a <follow_path+0x32>
   1757e:	2b20      	cmp	r3, #32
   17580:	d003      	beq.n	1758a <follow_path+0x192>
   17582:	2b2e      	cmp	r3, #46	; 0x2e
   17584:	d105      	bne.n	17592 <follow_path+0x19a>
   17586:	42aa      	cmp	r2, r5
   17588:	d05f      	beq.n	1764a <follow_path+0x252>
   1758a:	f044 0403 	orr.w	r4, r4, #3
   1758e:	4613      	mov	r3, r2
   17590:	e760      	b.n	17454 <follow_path+0x5c>
   17592:	45c3      	cmp	fp, r8
   17594:	d202      	bcs.n	1759c <follow_path+0x1a4>
   17596:	42aa      	cmp	r2, r5
   17598:	d116      	bne.n	175c8 <follow_path+0x1d0>
   1759a:	e056      	b.n	1764a <follow_path+0x252>
   1759c:	f1b8 0f0b 	cmp.w	r8, #11
   175a0:	d104      	bne.n	175ac <follow_path+0x1b4>
   175a2:	f044 0403 	orr.w	r4, r4, #3
   175a6:	f04f 080b 	mov.w	r8, #11
   175aa:	e759      	b.n	17460 <follow_path+0x68>
   175ac:	42aa      	cmp	r2, r5
   175ae:	d003      	beq.n	175b8 <follow_path+0x1c0>
   175b0:	f044 0403 	orr.w	r4, r4, #3
   175b4:	f63f af54 	bhi.w	17460 <follow_path+0x68>
   175b8:	00bf      	lsls	r7, r7, #2
   175ba:	b2ff      	uxtb	r7, r7
   175bc:	462a      	mov	r2, r5
   175be:	f04f 080b 	mov.w	r8, #11
   175c2:	f04f 0b08 	mov.w	fp, #8
   175c6:	e7e2      	b.n	1758e <follow_path+0x196>
   175c8:	2b7f      	cmp	r3, #127	; 0x7f
   175ca:	d90e      	bls.n	175ea <follow_path+0x1f2>
   175cc:	4618      	mov	r0, r3
   175ce:	2100      	movs	r1, #0
   175d0:	9201      	str	r2, [sp, #4]
   175d2:	f7fe faef 	bl	15bb4 <ff_convert>
   175d6:	9a01      	ldr	r2, [sp, #4]
   175d8:	4603      	mov	r3, r0
   175da:	b118      	cbz	r0, 175e4 <follow_path+0x1ec>
   175dc:	491f      	ldr	r1, [pc, #124]	; (1765c <follow_path+0x264>)
   175de:	440b      	add	r3, r1
   175e0:	f813 3c80 	ldrb.w	r3, [r3, #-128]
   175e4:	f044 0402 	orr.w	r4, r4, #2
   175e8:	b133      	cbz	r3, 175f8 <follow_path+0x200>
   175ea:	481d      	ldr	r0, [pc, #116]	; (17660 <follow_path+0x268>)
   175ec:	f810 1f01 	ldrb.w	r1, [r0, #1]!
   175f0:	b131      	cbz	r1, 17600 <follow_path+0x208>
   175f2:	b249      	sxtb	r1, r1
   175f4:	4299      	cmp	r1, r3
   175f6:	d1f9      	bne.n	175ec <follow_path+0x1f4>
   175f8:	f044 0403 	orr.w	r4, r4, #3
   175fc:	235f      	movs	r3, #95	; 0x5f
   175fe:	e006      	b.n	1760e <follow_path+0x216>
   17600:	f1a3 0141 	sub.w	r1, r3, #65	; 0x41
   17604:	b289      	uxth	r1, r1
   17606:	2919      	cmp	r1, #25
   17608:	d813      	bhi.n	17632 <follow_path+0x23a>
   1760a:	f047 0702 	orr.w	r7, r7, #2
   1760e:	69b1      	ldr	r1, [r6, #24]
   17610:	f801 300b 	strb.w	r3, [r1, fp]
   17614:	f10b 0b01 	add.w	fp, fp, #1
   17618:	e7b9      	b.n	1758e <follow_path+0x196>
   1761a:	f044 0402 	orr.w	r4, r4, #2
   1761e:	e734      	b.n	1748a <follow_path+0x92>
   17620:	2804      	cmp	r0, #4
   17622:	d116      	bne.n	17652 <follow_path+0x25a>
   17624:	f013 0f04 	tst.w	r3, #4
   17628:	bf08      	it	eq
   1762a:	2005      	moveq	r0, #5
   1762c:	e011      	b.n	17652 <follow_path+0x25a>
   1762e:	2005      	movs	r0, #5
   17630:	e00f      	b.n	17652 <follow_path+0x25a>
   17632:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
   17636:	b289      	uxth	r1, r1
   17638:	2919      	cmp	r1, #25
   1763a:	d8e8      	bhi.n	1760e <follow_path+0x216>
   1763c:	3b20      	subs	r3, #32
   1763e:	f047 0701 	orr.w	r7, r7, #1
   17642:	b29b      	uxth	r3, r3
   17644:	e7e3      	b.n	1760e <follow_path+0x216>
   17646:	2006      	movs	r0, #6
   17648:	e003      	b.n	17652 <follow_path+0x25a>
   1764a:	f1b8 0f0b 	cmp.w	r8, #11
   1764e:	d1b3      	bne.n	175b8 <follow_path+0x1c0>
   17650:	e7a7      	b.n	175a2 <follow_path+0x1aa>
   17652:	b003      	add	sp, #12
   17654:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17658:	00026e01 	.word	0x00026e01
   1765c:	00026e46 	.word	0x00026e46
   17660:	00026e0a 	.word	0x00026e0a

00017664 <dir_register>:
dir_register():
   17664:	b5f0      	push	{r4, r5, r6, r7, lr}
   17666:	6985      	ldr	r5, [r0, #24]
   17668:	b087      	sub	sp, #28
   1766a:	69c7      	ldr	r7, [r0, #28]
   1766c:	4604      	mov	r4, r0
   1766e:	4629      	mov	r1, r5
   17670:	a803      	add	r0, sp, #12
   17672:	220c      	movs	r2, #12
   17674:	f7ff f9e1 	bl	16a3a <mem_cpy>
   17678:	f89d 3017 	ldrb.w	r3, [sp, #23]
   1767c:	07db      	lsls	r3, r3, #31
   1767e:	d55f      	bpl.n	17740 <dir_register+0xdc>
   17680:	2300      	movs	r3, #0
   17682:	72eb      	strb	r3, [r5, #11]
   17684:	2601      	movs	r6, #1
   17686:	61e3      	str	r3, [r4, #28]
   17688:	4628      	mov	r0, r5
   1768a:	a903      	add	r1, sp, #12
   1768c:	220b      	movs	r2, #11
   1768e:	f7ff f9d4 	bl	16a3a <mem_cpy>
   17692:	2e05      	cmp	r6, #5
   17694:	d915      	bls.n	176c2 <dir_register+0x5e>
   17696:	1eb8      	subs	r0, r7, #2
   17698:	4633      	mov	r3, r6
   1769a:	f830 2f02 	ldrh.w	r2, [r0, #2]!
   1769e:	b18a      	cbz	r2, 176c4 <dir_register+0x60>
   176a0:	2110      	movs	r1, #16
   176a2:	f002 0e01 	and.w	lr, r2, #1
   176a6:	eb0e 0343 	add.w	r3, lr, r3, lsl #1
   176aa:	f413 3f80 	tst.w	r3, #65536	; 0x10000
   176ae:	bf1c      	itt	ne
   176b0:	f483 3388 	eorne.w	r3, r3, #69632	; 0x11000
   176b4:	f083 0321 	eorne.w	r3, r3, #33	; 0x21
   176b8:	3901      	subs	r1, #1
   176ba:	ea4f 0252 	mov.w	r2, r2, lsr #1
   176be:	d1f0      	bne.n	176a2 <dir_register+0x3e>
   176c0:	e7eb      	b.n	1769a <dir_register+0x36>
   176c2:	4633      	mov	r3, r6
   176c4:	2207      	movs	r2, #7
   176c6:	f003 000f 	and.w	r0, r3, #15
   176ca:	f100 0130 	add.w	r1, r0, #48	; 0x30
   176ce:	2939      	cmp	r1, #57	; 0x39
   176d0:	bf88      	it	hi
   176d2:	f100 0137 	addhi.w	r1, r0, #55	; 0x37
   176d6:	3a01      	subs	r2, #1
   176d8:	a806      	add	r0, sp, #24
   176da:	4410      	add	r0, r2
   176dc:	091b      	lsrs	r3, r3, #4
   176de:	f800 1c13 	strb.w	r1, [r0, #-19]
   176e2:	d1f0      	bne.n	176c6 <dir_register+0x62>
   176e4:	a906      	add	r1, sp, #24
   176e6:	207e      	movs	r0, #126	; 0x7e
   176e8:	4411      	add	r1, r2
   176ea:	f801 0c14 	strb.w	r0, [r1, #-20]
   176ee:	4293      	cmp	r3, r2
   176f0:	d009      	beq.n	17706 <dir_register+0xa2>
   176f2:	5ce9      	ldrb	r1, [r5, r3]
   176f4:	2920      	cmp	r1, #32
   176f6:	d006      	beq.n	17706 <dir_register+0xa2>
   176f8:	3301      	adds	r3, #1
   176fa:	e7f8      	b.n	176ee <dir_register+0x8a>
   176fc:	2120      	movs	r1, #32
   176fe:	54e9      	strb	r1, [r5, r3]
   17700:	3301      	adds	r3, #1
   17702:	2b07      	cmp	r3, #7
   17704:	d807      	bhi.n	17716 <dir_register+0xb2>
   17706:	2a07      	cmp	r2, #7
   17708:	d8f8      	bhi.n	176fc <dir_register+0x98>
   1770a:	a906      	add	r1, sp, #24
   1770c:	4411      	add	r1, r2
   1770e:	f811 1c14 	ldrb.w	r1, [r1, #-20]
   17712:	3201      	adds	r2, #1
   17714:	e7f3      	b.n	176fe <dir_register+0x9a>
   17716:	4620      	mov	r0, r4
   17718:	2100      	movs	r1, #0
   1771a:	f7ff fc6b 	bl	16ff4 <dir_sdi>
   1771e:	b940      	cbnz	r0, 17732 <dir_register+0xce>
   17720:	4620      	mov	r0, r4
   17722:	f7ff fdd5 	bl	172d0 <dir_find.part.9>
   17726:	b920      	cbnz	r0, 17732 <dir_register+0xce>
   17728:	3601      	adds	r6, #1
   1772a:	2e64      	cmp	r6, #100	; 0x64
   1772c:	d1ac      	bne.n	17688 <dir_register+0x24>
   1772e:	2007      	movs	r0, #7
   17730:	e099      	b.n	17866 <dir_register+0x202>
   17732:	2804      	cmp	r0, #4
   17734:	f040 8097 	bne.w	17866 <dir_register+0x202>
   17738:	f89d 3017 	ldrb.w	r3, [sp, #23]
   1773c:	72eb      	strb	r3, [r5, #11]
   1773e:	61e7      	str	r7, [r4, #28]
   17740:	f89d 3017 	ldrb.w	r3, [sp, #23]
   17744:	079b      	lsls	r3, r3, #30
   17746:	d50a      	bpl.n	1775e <dir_register+0xfa>
   17748:	2300      	movs	r3, #0
   1774a:	f837 2013 	ldrh.w	r2, [r7, r3, lsl #1]
   1774e:	b10a      	cbz	r2, 17754 <dir_register+0xf0>
   17750:	3301      	adds	r3, #1
   17752:	e7fa      	b.n	1774a <dir_register+0xe6>
   17754:	3319      	adds	r3, #25
   17756:	220d      	movs	r2, #13
   17758:	fbb3 f6f2 	udiv	r6, r3, r2
   1775c:	e000      	b.n	17760 <dir_register+0xfc>
   1775e:	2601      	movs	r6, #1
   17760:	4620      	mov	r0, r4
   17762:	2100      	movs	r1, #0
   17764:	f7ff fc46 	bl	16ff4 <dir_sdi>
   17768:	b9a8      	cbnz	r0, 17796 <dir_register+0x132>
   1776a:	4605      	mov	r5, r0
   1776c:	6820      	ldr	r0, [r4, #0]
   1776e:	6921      	ldr	r1, [r4, #16]
   17770:	f7ff fa6a 	bl	16c48 <move_window>
   17774:	b978      	cbnz	r0, 17796 <dir_register+0x132>
   17776:	6963      	ldr	r3, [r4, #20]
   17778:	781b      	ldrb	r3, [r3, #0]
   1777a:	2be5      	cmp	r3, #229	; 0xe5
   1777c:	d000      	beq.n	17780 <dir_register+0x11c>
   1777e:	b91b      	cbnz	r3, 17788 <dir_register+0x124>
   17780:	3501      	adds	r5, #1
   17782:	42b5      	cmp	r5, r6
   17784:	d101      	bne.n	1778a <dir_register+0x126>
   17786:	e00a      	b.n	1779e <dir_register+0x13a>
   17788:	4605      	mov	r5, r0
   1778a:	4620      	mov	r0, r4
   1778c:	2101      	movs	r1, #1
   1778e:	f7ff fd28 	bl	171e2 <dir_next>
   17792:	2800      	cmp	r0, #0
   17794:	d0ea      	beq.n	1776c <dir_register+0x108>
   17796:	2804      	cmp	r0, #4
   17798:	bf08      	it	eq
   1779a:	2007      	moveq	r0, #7
   1779c:	e063      	b.n	17866 <dir_register+0x202>
   1779e:	3d01      	subs	r5, #1
   177a0:	d047      	beq.n	17832 <dir_register+0x1ce>
   177a2:	88e1      	ldrh	r1, [r4, #6]
   177a4:	4620      	mov	r0, r4
   177a6:	1b49      	subs	r1, r1, r5
   177a8:	f7ff fc24 	bl	16ff4 <dir_sdi>
   177ac:	2800      	cmp	r0, #0
   177ae:	d15a      	bne.n	17866 <dir_register+0x202>
   177b0:	69a0      	ldr	r0, [r4, #24]
   177b2:	f7ff f960 	bl	16a76 <sum_sfn>
   177b6:	4606      	mov	r6, r0
   177b8:	6820      	ldr	r0, [r4, #0]
   177ba:	6921      	ldr	r1, [r4, #16]
   177bc:	f7ff fa44 	bl	16c48 <move_window>
   177c0:	4603      	mov	r3, r0
   177c2:	2b00      	cmp	r3, #0
   177c4:	d14f      	bne.n	17866 <dir_register+0x202>
   177c6:	6962      	ldr	r2, [r4, #20]
   177c8:	200f      	movs	r0, #15
   177ca:	b2e9      	uxtb	r1, r5
   177cc:	f8d4 e01c 	ldr.w	lr, [r4, #28]
   177d0:	270d      	movs	r7, #13
   177d2:	72d0      	strb	r0, [r2, #11]
   177d4:	1e48      	subs	r0, r1, #1
   177d6:	4378      	muls	r0, r7
   177d8:	7356      	strb	r6, [r2, #13]
   177da:	7313      	strb	r3, [r2, #12]
   177dc:	8353      	strh	r3, [r2, #26]
   177de:	461f      	mov	r7, r3
   177e0:	f64f 7cff 	movw	ip, #65535	; 0xffff
   177e4:	4563      	cmp	r3, ip
   177e6:	f8df c084 	ldr.w	ip, [pc, #132]	; 1786c <dir_register+0x208>
   177ea:	bf18      	it	ne
   177ec:	f83e 3010 	ldrhne.w	r3, [lr, r0, lsl #1]
   177f0:	f817 c00c 	ldrb.w	ip, [r7, ip]
   177f4:	f107 0701 	add.w	r7, r7, #1
   177f8:	f822 300c 	strh.w	r3, [r2, ip]
   177fc:	f64f 7cff 	movw	ip, #65535	; 0xffff
   17800:	bf18      	it	ne
   17802:	3001      	addne	r0, #1
   17804:	2b00      	cmp	r3, #0
   17806:	bf08      	it	eq
   17808:	4663      	moveq	r3, ip
   1780a:	2f0d      	cmp	r7, #13
   1780c:	d1e8      	bne.n	177e0 <dir_register+0x17c>
   1780e:	4563      	cmp	r3, ip
   17810:	d002      	beq.n	17818 <dir_register+0x1b4>
   17812:	f83e 3010 	ldrh.w	r3, [lr, r0, lsl #1]
   17816:	b90b      	cbnz	r3, 1781c <dir_register+0x1b8>
   17818:	f041 0140 	orr.w	r1, r1, #64	; 0x40
   1781c:	7011      	strb	r1, [r2, #0]
   1781e:	6823      	ldr	r3, [r4, #0]
   17820:	2201      	movs	r2, #1
   17822:	711a      	strb	r2, [r3, #4]
   17824:	4620      	mov	r0, r4
   17826:	2100      	movs	r1, #0
   17828:	f7ff fcdb 	bl	171e2 <dir_next>
   1782c:	b9d8      	cbnz	r0, 17866 <dir_register+0x202>
   1782e:	3d01      	subs	r5, #1
   17830:	d1c2      	bne.n	177b8 <dir_register+0x154>
   17832:	6820      	ldr	r0, [r4, #0]
   17834:	6921      	ldr	r1, [r4, #16]
   17836:	f7ff fa07 	bl	16c48 <move_window>
   1783a:	4605      	mov	r5, r0
   1783c:	b990      	cbnz	r0, 17864 <dir_register+0x200>
   1783e:	6960      	ldr	r0, [r4, #20]
   17840:	4629      	mov	r1, r5
   17842:	2220      	movs	r2, #32
   17844:	f7ff f910 	bl	16a68 <mem_set>
   17848:	220b      	movs	r2, #11
   1784a:	6960      	ldr	r0, [r4, #20]
   1784c:	69a1      	ldr	r1, [r4, #24]
   1784e:	f7ff f8f4 	bl	16a3a <mem_cpy>
   17852:	69a2      	ldr	r2, [r4, #24]
   17854:	6963      	ldr	r3, [r4, #20]
   17856:	7ad2      	ldrb	r2, [r2, #11]
   17858:	f002 0218 	and.w	r2, r2, #24
   1785c:	731a      	strb	r2, [r3, #12]
   1785e:	6823      	ldr	r3, [r4, #0]
   17860:	2201      	movs	r2, #1
   17862:	711a      	strb	r2, [r3, #4]
   17864:	4628      	mov	r0, r5
   17866:	b007      	add	sp, #28
   17868:	bdf0      	pop	{r4, r5, r6, r7, pc}
   1786a:	bf00      	nop
   1786c:	00026ec6 	.word	0x00026ec6

00017870 <dir_remove>:
dir_remove():
   17870:	b570      	push	{r4, r5, r6, lr}
   17872:	8c01      	ldrh	r1, [r0, #32]
   17874:	88c6      	ldrh	r6, [r0, #6]
   17876:	f64f 73ff 	movw	r3, #65535	; 0xffff
   1787a:	4299      	cmp	r1, r3
   1787c:	bf08      	it	eq
   1787e:	4631      	moveq	r1, r6
   17880:	4605      	mov	r5, r0
   17882:	f7ff fbb7 	bl	16ff4 <dir_sdi>
   17886:	4604      	mov	r4, r0
   17888:	b9e8      	cbnz	r0, 178c6 <dir_remove+0x56>
   1788a:	6828      	ldr	r0, [r5, #0]
   1788c:	6929      	ldr	r1, [r5, #16]
   1788e:	f7ff f9db 	bl	16c48 <move_window>
   17892:	4604      	mov	r4, r0
   17894:	b9a0      	cbnz	r0, 178c0 <dir_remove+0x50>
   17896:	2220      	movs	r2, #32
   17898:	6968      	ldr	r0, [r5, #20]
   1789a:	4621      	mov	r1, r4
   1789c:	f7ff f8e4 	bl	16a68 <mem_set>
   178a0:	696b      	ldr	r3, [r5, #20]
   178a2:	22e5      	movs	r2, #229	; 0xe5
   178a4:	701a      	strb	r2, [r3, #0]
   178a6:	682b      	ldr	r3, [r5, #0]
   178a8:	2201      	movs	r2, #1
   178aa:	711a      	strb	r2, [r3, #4]
   178ac:	88eb      	ldrh	r3, [r5, #6]
   178ae:	42b3      	cmp	r3, r6
   178b0:	d209      	bcs.n	178c6 <dir_remove+0x56>
   178b2:	4621      	mov	r1, r4
   178b4:	4628      	mov	r0, r5
   178b6:	f7ff fc94 	bl	171e2 <dir_next>
   178ba:	4604      	mov	r4, r0
   178bc:	2800      	cmp	r0, #0
   178be:	d0e4      	beq.n	1788a <dir_remove+0x1a>
   178c0:	2c04      	cmp	r4, #4
   178c2:	bf08      	it	eq
   178c4:	2402      	moveq	r4, #2
   178c6:	4620      	mov	r0, r4
   178c8:	bd70      	pop	{r4, r5, r6, pc}
	...

000178cc <dir_read.constprop.11>:
dir_read.constprop.11():
   178cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   178ce:	27ff      	movs	r7, #255	; 0xff
   178d0:	4605      	mov	r5, r0
   178d2:	463c      	mov	r4, r7
   178d4:	2304      	movs	r3, #4
   178d6:	6929      	ldr	r1, [r5, #16]
   178d8:	2900      	cmp	r1, #0
   178da:	d05a      	beq.n	17992 <dir_read.constprop.11+0xc6>
   178dc:	6828      	ldr	r0, [r5, #0]
   178de:	f7ff f9b3 	bl	16c48 <move_window>
   178e2:	4606      	mov	r6, r0
   178e4:	2800      	cmp	r0, #0
   178e6:	d15e      	bne.n	179a6 <dir_read.constprop.11+0xda>
   178e8:	6968      	ldr	r0, [r5, #20]
   178ea:	7803      	ldrb	r3, [r0, #0]
   178ec:	2b00      	cmp	r3, #0
   178ee:	d059      	beq.n	179a4 <dir_read.constprop.11+0xd8>
   178f0:	2be5      	cmp	r3, #229	; 0xe5
   178f2:	7ac2      	ldrb	r2, [r0, #11]
   178f4:	d044      	beq.n	17980 <dir_read.constprop.11+0xb4>
   178f6:	2b2e      	cmp	r3, #46	; 0x2e
   178f8:	d042      	beq.n	17980 <dir_read.constprop.11+0xb4>
   178fa:	f002 023f 	and.w	r2, r2, #63	; 0x3f
   178fe:	2a08      	cmp	r2, #8
   17900:	d03e      	beq.n	17980 <dir_read.constprop.11+0xb4>
   17902:	2a0f      	cmp	r2, #15
   17904:	d133      	bne.n	1796e <dir_read.constprop.11+0xa2>
   17906:	0659      	lsls	r1, r3, #25
   17908:	d505      	bpl.n	17916 <dir_read.constprop.11+0x4a>
   1790a:	f003 04bf 	and.w	r4, r3, #191	; 0xbf
   1790e:	88eb      	ldrh	r3, [r5, #6]
   17910:	7b47      	ldrb	r7, [r0, #13]
   17912:	842b      	strh	r3, [r5, #32]
   17914:	e001      	b.n	1791a <dir_read.constprop.11+0x4e>
   17916:	42a3      	cmp	r3, r4
   17918:	d132      	bne.n	17980 <dir_read.constprop.11+0xb4>
   1791a:	7b43      	ldrb	r3, [r0, #13]
   1791c:	42bb      	cmp	r3, r7
   1791e:	d12f      	bne.n	17980 <dir_read.constprop.11+0xb4>
   17920:	7803      	ldrb	r3, [r0, #0]
   17922:	220d      	movs	r2, #13
   17924:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   17928:	3b01      	subs	r3, #1
   1792a:	69ee      	ldr	r6, [r5, #28]
   1792c:	4353      	muls	r3, r2
   1792e:	f04f 0e01 	mov.w	lr, #1
   17932:	2200      	movs	r2, #0
   17934:	491e      	ldr	r1, [pc, #120]	; (179b0 <dir_read.constprop.11+0xe4>)
   17936:	5c51      	ldrb	r1, [r2, r1]
   17938:	5a41      	ldrh	r1, [r0, r1]
   1793a:	f1be 0f00 	cmp.w	lr, #0
   1793e:	d006      	beq.n	1794e <dir_read.constprop.11+0x82>
   17940:	2b7f      	cmp	r3, #127	; 0x7f
   17942:	d81d      	bhi.n	17980 <dir_read.constprop.11+0xb4>
   17944:	f826 1013 	strh.w	r1, [r6, r3, lsl #1]
   17948:	468e      	mov	lr, r1
   1794a:	3301      	adds	r3, #1
   1794c:	e003      	b.n	17956 <dir_read.constprop.11+0x8a>
   1794e:	f64f 7cff 	movw	ip, #65535	; 0xffff
   17952:	4561      	cmp	r1, ip
   17954:	d114      	bne.n	17980 <dir_read.constprop.11+0xb4>
   17956:	3201      	adds	r2, #1
   17958:	2a0d      	cmp	r2, #13
   1795a:	d1eb      	bne.n	17934 <dir_read.constprop.11+0x68>
   1795c:	7802      	ldrb	r2, [r0, #0]
   1795e:	0652      	lsls	r2, r2, #25
   17960:	d51d      	bpl.n	1799e <dir_read.constprop.11+0xd2>
   17962:	2b7f      	cmp	r3, #127	; 0x7f
   17964:	d80c      	bhi.n	17980 <dir_read.constprop.11+0xb4>
   17966:	2200      	movs	r2, #0
   17968:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
   1796c:	e017      	b.n	1799e <dir_read.constprop.11+0xd2>
   1796e:	b91c      	cbnz	r4, 17978 <dir_read.constprop.11+0xac>
   17970:	f7ff f881 	bl	16a76 <sum_sfn>
   17974:	4287      	cmp	r7, r0
   17976:	d018      	beq.n	179aa <dir_read.constprop.11+0xde>
   17978:	f64f 73ff 	movw	r3, #65535	; 0xffff
   1797c:	842b      	strh	r3, [r5, #32]
   1797e:	e014      	b.n	179aa <dir_read.constprop.11+0xde>
   17980:	24ff      	movs	r4, #255	; 0xff
   17982:	4628      	mov	r0, r5
   17984:	2100      	movs	r1, #0
   17986:	f7ff fc2c 	bl	171e2 <dir_next>
   1798a:	4606      	mov	r6, r0
   1798c:	b958      	cbnz	r0, 179a6 <dir_read.constprop.11+0xda>
   1798e:	4603      	mov	r3, r0
   17990:	e7a1      	b.n	178d6 <dir_read.constprop.11+0xa>
   17992:	461e      	mov	r6, r3
   17994:	b14b      	cbz	r3, 179aa <dir_read.constprop.11+0xde>
   17996:	2200      	movs	r2, #0
   17998:	612a      	str	r2, [r5, #16]
   1799a:	461e      	mov	r6, r3
   1799c:	e005      	b.n	179aa <dir_read.constprop.11+0xde>
   1799e:	3c01      	subs	r4, #1
   179a0:	b2e4      	uxtb	r4, r4
   179a2:	e7ee      	b.n	17982 <dir_read.constprop.11+0xb6>
   179a4:	2604      	movs	r6, #4
   179a6:	4633      	mov	r3, r6
   179a8:	e7f5      	b.n	17996 <dir_read.constprop.11+0xca>
   179aa:	4630      	mov	r0, r6
   179ac:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   179ae:	bf00      	nop
   179b0:	00026ec6 	.word	0x00026ec6

000179b4 <remove_chain>:
remove_chain():
   179b4:	2901      	cmp	r1, #1
   179b6:	b570      	push	{r4, r5, r6, lr}
   179b8:	4604      	mov	r4, r0
   179ba:	460d      	mov	r5, r1
   179bc:	d924      	bls.n	17a08 <remove_chain+0x54>
   179be:	6983      	ldr	r3, [r0, #24]
   179c0:	4299      	cmp	r1, r3
   179c2:	d221      	bcs.n	17a08 <remove_chain+0x54>
   179c4:	69a3      	ldr	r3, [r4, #24]
   179c6:	429d      	cmp	r5, r3
   179c8:	d205      	bcs.n	179d6 <remove_chain+0x22>
   179ca:	4620      	mov	r0, r4
   179cc:	4629      	mov	r1, r5
   179ce:	f7ff fabe 	bl	16f4e <get_fat>
   179d2:	4606      	mov	r6, r0
   179d4:	b908      	cbnz	r0, 179da <remove_chain+0x26>
   179d6:	2000      	movs	r0, #0
   179d8:	bd70      	pop	{r4, r5, r6, pc}
   179da:	2801      	cmp	r0, #1
   179dc:	d014      	beq.n	17a08 <remove_chain+0x54>
   179de:	1c41      	adds	r1, r0, #1
   179e0:	d010      	beq.n	17a04 <remove_chain+0x50>
   179e2:	4620      	mov	r0, r4
   179e4:	4629      	mov	r1, r5
   179e6:	2200      	movs	r2, #0
   179e8:	f7ff fb43 	bl	17072 <put_fat>
   179ec:	b968      	cbnz	r0, 17a0a <remove_chain+0x56>
   179ee:	6963      	ldr	r3, [r4, #20]
   179f0:	1c5a      	adds	r2, r3, #1
   179f2:	d005      	beq.n	17a00 <remove_chain+0x4c>
   179f4:	3301      	adds	r3, #1
   179f6:	6163      	str	r3, [r4, #20]
   179f8:	7963      	ldrb	r3, [r4, #5]
   179fa:	f043 0301 	orr.w	r3, r3, #1
   179fe:	7163      	strb	r3, [r4, #5]
   17a00:	4635      	mov	r5, r6
   17a02:	e7df      	b.n	179c4 <remove_chain+0x10>
   17a04:	2001      	movs	r0, #1
   17a06:	bd70      	pop	{r4, r5, r6, pc}
   17a08:	2002      	movs	r0, #2
   17a0a:	bd70      	pop	{r4, r5, r6, pc}

00017a0c <f_mount>:
f_mount():
   17a0c:	b5f0      	push	{r4, r5, r6, r7, lr}
   17a0e:	b085      	sub	sp, #20
   17a10:	9001      	str	r0, [sp, #4]
   17a12:	a804      	add	r0, sp, #16
   17a14:	f840 1d04 	str.w	r1, [r0, #-4]!
   17a18:	9100      	str	r1, [sp, #0]
   17a1a:	4616      	mov	r6, r2
   17a1c:	f7ff f83a 	bl	16a94 <get_ldnumber>
   17a20:	1e04      	subs	r4, r0, #0
   17a22:	db2a      	blt.n	17a7a <f_mount+0x6e>
   17a24:	4b17      	ldr	r3, [pc, #92]	; (17a84 <f_mount+0x78>)
   17a26:	f853 5024 	ldr.w	r5, [r3, r4, lsl #2]
   17a2a:	461f      	mov	r7, r3
   17a2c:	b13d      	cbz	r5, 17a3e <f_mount+0x32>
   17a2e:	68e8      	ldr	r0, [r5, #12]
   17a30:	f7fe f8f8 	bl	15c24 <ff_del_syncobj>
   17a34:	b908      	cbnz	r0, 17a3a <f_mount+0x2e>
   17a36:	2002      	movs	r0, #2
   17a38:	e022      	b.n	17a80 <f_mount+0x74>
   17a3a:	2300      	movs	r3, #0
   17a3c:	702b      	strb	r3, [r5, #0]
   17a3e:	9901      	ldr	r1, [sp, #4]
   17a40:	b921      	cbnz	r1, 17a4c <f_mount+0x40>
   17a42:	9801      	ldr	r0, [sp, #4]
   17a44:	f847 0024 	str.w	r0, [r7, r4, lsl #2]
   17a48:	b948      	cbnz	r0, 17a5e <f_mount+0x52>
   17a4a:	e019      	b.n	17a80 <f_mount+0x74>
   17a4c:	2300      	movs	r3, #0
   17a4e:	f801 3b0c 	strb.w	r3, [r1], #12
   17a52:	b2e0      	uxtb	r0, r4
   17a54:	f7fe f8dc 	bl	15c10 <ff_cre_syncobj>
   17a58:	2800      	cmp	r0, #0
   17a5a:	d0ec      	beq.n	17a36 <f_mount+0x2a>
   17a5c:	e7f1      	b.n	17a42 <f_mount+0x36>
   17a5e:	2e01      	cmp	r6, #1
   17a60:	d10d      	bne.n	17a7e <f_mount+0x72>
   17a62:	4669      	mov	r1, sp
   17a64:	2200      	movs	r2, #0
   17a66:	a801      	add	r0, sp, #4
   17a68:	f7ff f92e 	bl	16cc8 <find_volume>
   17a6c:	4604      	mov	r4, r0
   17a6e:	4621      	mov	r1, r4
   17a70:	9801      	ldr	r0, [sp, #4]
   17a72:	f7ff fa54 	bl	16f1e <unlock_fs>
   17a76:	4620      	mov	r0, r4
   17a78:	e002      	b.n	17a80 <f_mount+0x74>
   17a7a:	200b      	movs	r0, #11
   17a7c:	e000      	b.n	17a80 <f_mount+0x74>
   17a7e:	2000      	movs	r0, #0
   17a80:	b005      	add	sp, #20
   17a82:	bdf0      	pop	{r4, r5, r6, r7, pc}
   17a84:	2007c92c 	.word	0x2007c92c

00017a88 <f_open>:
f_open():
   17a88:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   17a8c:	b0d1      	sub	sp, #324	; 0x144
   17a8e:	9101      	str	r1, [sp, #4]
   17a90:	4617      	mov	r7, r2
   17a92:	4605      	mov	r5, r0
   17a94:	2800      	cmp	r0, #0
   17a96:	d07d      	beq.n	17b94 <f_open+0x10c>
   17a98:	2300      	movs	r3, #0
   17a9a:	6003      	str	r3, [r0, #0]
   17a9c:	a901      	add	r1, sp, #4
   17a9e:	a806      	add	r0, sp, #24
   17aa0:	f002 021e 	and.w	r2, r2, #30
   17aa4:	f7ff f910 	bl	16cc8 <find_volume>
   17aa8:	4680      	mov	r8, r0
   17aaa:	2800      	cmp	r0, #0
   17aac:	d16c      	bne.n	17b88 <f_open+0x100>
   17aae:	ab03      	add	r3, sp, #12
   17ab0:	930c      	str	r3, [sp, #48]	; 0x30
   17ab2:	a806      	add	r0, sp, #24
   17ab4:	ab0f      	add	r3, sp, #60	; 0x3c
   17ab6:	9901      	ldr	r1, [sp, #4]
   17ab8:	930d      	str	r3, [sp, #52]	; 0x34
   17aba:	f7ff fc9d 	bl	173f8 <follow_path>
   17abe:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
   17ac0:	b910      	cbnz	r0, 17ac8 <f_open+0x40>
   17ac2:	2c00      	cmp	r4, #0
   17ac4:	bf08      	it	eq
   17ac6:	2006      	moveq	r0, #6
   17ac8:	f017 0f1c 	tst.w	r7, #28
   17acc:	f007 061f 	and.w	r6, r7, #31
   17ad0:	d036      	beq.n	17b40 <f_open+0xb8>
   17ad2:	b148      	cbz	r0, 17ae8 <f_open+0x60>
   17ad4:	2804      	cmp	r0, #4
   17ad6:	d102      	bne.n	17ade <f_open+0x56>
   17ad8:	a806      	add	r0, sp, #24
   17ada:	f7ff fdc3 	bl	17664 <dir_register>
   17ade:	f046 0608 	orr.w	r6, r6, #8
   17ae2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
   17ae4:	b130      	cbz	r0, 17af4 <f_open+0x6c>
   17ae6:	e05c      	b.n	17ba2 <f_open+0x11a>
   17ae8:	7ae3      	ldrb	r3, [r4, #11]
   17aea:	f013 0f11 	tst.w	r3, #17
   17aee:	d157      	bne.n	17ba0 <f_open+0x118>
   17af0:	077b      	lsls	r3, r7, #29
   17af2:	d451      	bmi.n	17b98 <f_open+0x110>
   17af4:	0737      	lsls	r7, r6, #28
   17af6:	d52c      	bpl.n	17b52 <f_open+0xca>
   17af8:	f7fe ff76 	bl	169e8 <get_fattime>
   17afc:	2300      	movs	r3, #0
   17afe:	f8c4 000e 	str.w	r0, [r4, #14]
   17b02:	9806      	ldr	r0, [sp, #24]
   17b04:	72e3      	strb	r3, [r4, #11]
   17b06:	61e3      	str	r3, [r4, #28]
   17b08:	7802      	ldrb	r2, [r0, #0]
   17b0a:	8b67      	ldrh	r7, [r4, #26]
   17b0c:	2a03      	cmp	r2, #3
   17b0e:	bf08      	it	eq
   17b10:	8aa2      	ldrheq	r2, [r4, #20]
   17b12:	8363      	strh	r3, [r4, #26]
   17b14:	82a3      	strh	r3, [r4, #20]
   17b16:	bf08      	it	eq
   17b18:	ea47 4702 	orreq.w	r7, r7, r2, lsl #16
   17b1c:	2301      	movs	r3, #1
   17b1e:	7103      	strb	r3, [r0, #4]
   17b20:	b1bf      	cbz	r7, 17b52 <f_open+0xca>
   17b22:	4639      	mov	r1, r7
   17b24:	f8d0 9030 	ldr.w	r9, [r0, #48]	; 0x30
   17b28:	f7ff ff44 	bl	179b4 <remove_chain>
   17b2c:	2800      	cmp	r0, #0
   17b2e:	d138      	bne.n	17ba2 <f_open+0x11a>
   17b30:	9806      	ldr	r0, [sp, #24]
   17b32:	3f01      	subs	r7, #1
   17b34:	6107      	str	r7, [r0, #16]
   17b36:	4649      	mov	r1, r9
   17b38:	f7ff f886 	bl	16c48 <move_window>
   17b3c:	b148      	cbz	r0, 17b52 <f_open+0xca>
   17b3e:	e030      	b.n	17ba2 <f_open+0x11a>
   17b40:	2800      	cmp	r0, #0
   17b42:	d12e      	bne.n	17ba2 <f_open+0x11a>
   17b44:	7ae3      	ldrb	r3, [r4, #11]
   17b46:	06d8      	lsls	r0, r3, #27
   17b48:	d428      	bmi.n	17b9c <f_open+0x114>
   17b4a:	07b9      	lsls	r1, r7, #30
   17b4c:	d501      	bpl.n	17b52 <f_open+0xca>
   17b4e:	07da      	lsls	r2, r3, #31
   17b50:	d426      	bmi.n	17ba0 <f_open+0x118>
   17b52:	0733      	lsls	r3, r6, #28
   17b54:	9b06      	ldr	r3, [sp, #24]
   17b56:	bf48      	it	mi
   17b58:	f046 0620 	orrmi.w	r6, r6, #32
   17b5c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
   17b5e:	71ae      	strb	r6, [r5, #6]
   17b60:	61ea      	str	r2, [r5, #28]
   17b62:	2200      	movs	r2, #0
   17b64:	71ea      	strb	r2, [r5, #7]
   17b66:	622c      	str	r4, [r5, #32]
   17b68:	7819      	ldrb	r1, [r3, #0]
   17b6a:	8b62      	ldrh	r2, [r4, #26]
   17b6c:	2903      	cmp	r1, #3
   17b6e:	bf04      	itt	eq
   17b70:	8aa1      	ldrheq	r1, [r4, #20]
   17b72:	ea42 4201 	orreq.w	r2, r2, r1, lsl #16
   17b76:	612a      	str	r2, [r5, #16]
   17b78:	69e2      	ldr	r2, [r4, #28]
   17b7a:	602b      	str	r3, [r5, #0]
   17b7c:	88db      	ldrh	r3, [r3, #6]
   17b7e:	60ea      	str	r2, [r5, #12]
   17b80:	2200      	movs	r2, #0
   17b82:	60aa      	str	r2, [r5, #8]
   17b84:	61aa      	str	r2, [r5, #24]
   17b86:	80ab      	strh	r3, [r5, #4]
   17b88:	9806      	ldr	r0, [sp, #24]
   17b8a:	4641      	mov	r1, r8
   17b8c:	f7ff f9c7 	bl	16f1e <unlock_fs>
   17b90:	4640      	mov	r0, r8
   17b92:	e008      	b.n	17ba6 <f_open+0x11e>
   17b94:	2009      	movs	r0, #9
   17b96:	e006      	b.n	17ba6 <f_open+0x11e>
   17b98:	2008      	movs	r0, #8
   17b9a:	e002      	b.n	17ba2 <f_open+0x11a>
   17b9c:	2004      	movs	r0, #4
   17b9e:	e000      	b.n	17ba2 <f_open+0x11a>
   17ba0:	2007      	movs	r0, #7
   17ba2:	4680      	mov	r8, r0
   17ba4:	e7f0      	b.n	17b88 <f_open+0x100>
   17ba6:	b051      	add	sp, #324	; 0x144
   17ba8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

00017bac <f_read>:
f_read():
   17bac:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17bb0:	469a      	mov	sl, r3
   17bb2:	2300      	movs	r3, #0
   17bb4:	f8ca 3000 	str.w	r3, [sl]
   17bb8:	4604      	mov	r4, r0
   17bba:	460f      	mov	r7, r1
   17bbc:	4690      	mov	r8, r2
   17bbe:	f7ff f991 	bl	16ee4 <validate>
   17bc2:	4606      	mov	r6, r0
   17bc4:	b130      	cbz	r0, 17bd4 <f_read+0x28>
   17bc6:	6820      	ldr	r0, [r4, #0]
   17bc8:	4631      	mov	r1, r6
   17bca:	f7ff f9a8 	bl	16f1e <unlock_fs>
   17bce:	4630      	mov	r0, r6
   17bd0:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17bd4:	79e1      	ldrb	r1, [r4, #7]
   17bd6:	b129      	cbz	r1, 17be4 <f_read+0x38>
   17bd8:	6820      	ldr	r0, [r4, #0]
   17bda:	f7ff f9a0 	bl	16f1e <unlock_fs>
   17bde:	79e0      	ldrb	r0, [r4, #7]
   17be0:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17be4:	79a3      	ldrb	r3, [r4, #6]
   17be6:	07d9      	lsls	r1, r3, #31
   17be8:	d406      	bmi.n	17bf8 <f_read+0x4c>
   17bea:	6820      	ldr	r0, [r4, #0]
   17bec:	2107      	movs	r1, #7
   17bee:	f7ff f996 	bl	16f1e <unlock_fs>
   17bf2:	2007      	movs	r0, #7
   17bf4:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17bf8:	68e1      	ldr	r1, [r4, #12]
   17bfa:	68a3      	ldr	r3, [r4, #8]
   17bfc:	1acd      	subs	r5, r1, r3
   17bfe:	45a8      	cmp	r8, r5
   17c00:	bf38      	it	cc
   17c02:	4645      	movcc	r5, r8
   17c04:	2d00      	cmp	r5, #0
   17c06:	f000 8088 	beq.w	17d1a <f_read+0x16e>
   17c0a:	68a3      	ldr	r3, [r4, #8]
   17c0c:	f3c3 0208 	ubfx	r2, r3, #0, #9
   17c10:	2a00      	cmp	r2, #0
   17c12:	d169      	bne.n	17ce8 <f_read+0x13c>
   17c14:	6820      	ldr	r0, [r4, #0]
   17c16:	f890 b002 	ldrb.w	fp, [r0, #2]
   17c1a:	f10b 3bff 	add.w	fp, fp, #4294967295
   17c1e:	ea0b 2b53 	and.w	fp, fp, r3, lsr #9
   17c22:	f01b 0bff 	ands.w	fp, fp, #255	; 0xff
   17c26:	d10c      	bne.n	17c42 <f_read+0x96>
   17c28:	b90b      	cbnz	r3, 17c2e <f_read+0x82>
   17c2a:	6920      	ldr	r0, [r4, #16]
   17c2c:	e002      	b.n	17c34 <f_read+0x88>
   17c2e:	6961      	ldr	r1, [r4, #20]
   17c30:	f7ff f98d 	bl	16f4e <get_fat>
   17c34:	2801      	cmp	r0, #1
   17c36:	d801      	bhi.n	17c3c <f_read+0x90>
   17c38:	2502      	movs	r5, #2
   17c3a:	e052      	b.n	17ce2 <f_read+0x136>
   17c3c:	1c42      	adds	r2, r0, #1
   17c3e:	d04f      	beq.n	17ce0 <f_read+0x134>
   17c40:	6160      	str	r0, [r4, #20]
   17c42:	f8d4 9000 	ldr.w	r9, [r4]
   17c46:	6961      	ldr	r1, [r4, #20]
   17c48:	4648      	mov	r0, r9
   17c4a:	f7ff f975 	bl	16f38 <clust2sect>
   17c4e:	b918      	cbnz	r0, 17c58 <f_read+0xac>
   17c50:	2502      	movs	r5, #2
   17c52:	71e5      	strb	r5, [r4, #7]
   17c54:	4648      	mov	r0, r9
   17c56:	e061      	b.n	17d1c <f_read+0x170>
   17c58:	ea5f 2855 	movs.w	r8, r5, lsr #9
   17c5c:	eb00 060b 	add.w	r6, r0, fp
   17c60:	d022      	beq.n	17ca8 <f_read+0xfc>
   17c62:	f899 3002 	ldrb.w	r3, [r9, #2]
   17c66:	eb08 020b 	add.w	r2, r8, fp
   17c6a:	429a      	cmp	r2, r3
   17c6c:	bf88      	it	hi
   17c6e:	ebcb 0803 	rsbhi	r8, fp, r3
   17c72:	f899 0001 	ldrb.w	r0, [r9, #1]
   17c76:	4639      	mov	r1, r7
   17c78:	4632      	mov	r2, r6
   17c7a:	fa5f f388 	uxtb.w	r3, r8
   17c7e:	f7fe f80f 	bl	15ca0 <disk_read>
   17c82:	bb68      	cbnz	r0, 17ce0 <f_read+0x134>
   17c84:	79a3      	ldrb	r3, [r4, #6]
   17c86:	065b      	lsls	r3, r3, #25
   17c88:	d50b      	bpl.n	17ca2 <f_read+0xf6>
   17c8a:	69a3      	ldr	r3, [r4, #24]
   17c8c:	1b98      	subs	r0, r3, r6
   17c8e:	4540      	cmp	r0, r8
   17c90:	d207      	bcs.n	17ca2 <f_read+0xf6>
   17c92:	eb07 2040 	add.w	r0, r7, r0, lsl #9
   17c96:	f104 0124 	add.w	r1, r4, #36	; 0x24
   17c9a:	f44f 7200 	mov.w	r2, #512	; 0x200
   17c9e:	f7fe fecc 	bl	16a3a <mem_cpy>
   17ca2:	ea4f 2648 	mov.w	r6, r8, lsl #9
   17ca6:	e02d      	b.n	17d04 <f_read+0x158>
   17ca8:	69a2      	ldr	r2, [r4, #24]
   17caa:	42b2      	cmp	r2, r6
   17cac:	d01b      	beq.n	17ce6 <f_read+0x13a>
   17cae:	79a3      	ldrb	r3, [r4, #6]
   17cb0:	f104 0824 	add.w	r8, r4, #36	; 0x24
   17cb4:	f013 0f40 	tst.w	r3, #64	; 0x40
   17cb8:	d00a      	beq.n	17cd0 <f_read+0x124>
   17cba:	f899 0001 	ldrb.w	r0, [r9, #1]
   17cbe:	4641      	mov	r1, r8
   17cc0:	2301      	movs	r3, #1
   17cc2:	f7fe f809 	bl	15cd8 <disk_write>
   17cc6:	b958      	cbnz	r0, 17ce0 <f_read+0x134>
   17cc8:	79a3      	ldrb	r3, [r4, #6]
   17cca:	f023 0340 	bic.w	r3, r3, #64	; 0x40
   17cce:	71a3      	strb	r3, [r4, #6]
   17cd0:	6823      	ldr	r3, [r4, #0]
   17cd2:	4641      	mov	r1, r8
   17cd4:	7858      	ldrb	r0, [r3, #1]
   17cd6:	4632      	mov	r2, r6
   17cd8:	2301      	movs	r3, #1
   17cda:	f7fd ffe1 	bl	15ca0 <disk_read>
   17cde:	b110      	cbz	r0, 17ce6 <f_read+0x13a>
   17ce0:	2501      	movs	r5, #1
   17ce2:	71e5      	strb	r5, [r4, #7]
   17ce4:	e019      	b.n	17d1a <f_read+0x16e>
   17ce6:	61a6      	str	r6, [r4, #24]
   17ce8:	68a1      	ldr	r1, [r4, #8]
   17cea:	4638      	mov	r0, r7
   17cec:	f3c1 0108 	ubfx	r1, r1, #0, #9
   17cf0:	f5c1 7600 	rsb	r6, r1, #512	; 0x200
   17cf4:	42b5      	cmp	r5, r6
   17cf6:	bf38      	it	cc
   17cf8:	462e      	movcc	r6, r5
   17cfa:	4421      	add	r1, r4
   17cfc:	3124      	adds	r1, #36	; 0x24
   17cfe:	4632      	mov	r2, r6
   17d00:	f7fe fe9b 	bl	16a3a <mem_cpy>
   17d04:	68a3      	ldr	r3, [r4, #8]
   17d06:	4437      	add	r7, r6
   17d08:	4433      	add	r3, r6
   17d0a:	60a3      	str	r3, [r4, #8]
   17d0c:	f8da 3000 	ldr.w	r3, [sl]
   17d10:	1bad      	subs	r5, r5, r6
   17d12:	4433      	add	r3, r6
   17d14:	f8ca 3000 	str.w	r3, [sl]
   17d18:	e774      	b.n	17c04 <f_read+0x58>
   17d1a:	6820      	ldr	r0, [r4, #0]
   17d1c:	4629      	mov	r1, r5
   17d1e:	f7ff f8fe 	bl	16f1e <unlock_fs>
   17d22:	4628      	mov	r0, r5
   17d24:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

00017d28 <f_write>:
f_write():
   17d28:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17d2c:	4699      	mov	r9, r3
   17d2e:	2300      	movs	r3, #0
   17d30:	f8c9 3000 	str.w	r3, [r9]
   17d34:	4604      	mov	r4, r0
   17d36:	460f      	mov	r7, r1
   17d38:	4615      	mov	r5, r2
   17d3a:	f7ff f8d3 	bl	16ee4 <validate>
   17d3e:	4606      	mov	r6, r0
   17d40:	b130      	cbz	r0, 17d50 <f_write+0x28>
   17d42:	6820      	ldr	r0, [r4, #0]
   17d44:	4631      	mov	r1, r6
   17d46:	f7ff f8ea 	bl	16f1e <unlock_fs>
   17d4a:	4630      	mov	r0, r6
   17d4c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17d50:	79e1      	ldrb	r1, [r4, #7]
   17d52:	b129      	cbz	r1, 17d60 <f_write+0x38>
   17d54:	6820      	ldr	r0, [r4, #0]
   17d56:	f7ff f8e2 	bl	16f1e <unlock_fs>
   17d5a:	79e0      	ldrb	r0, [r4, #7]
   17d5c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17d60:	79a3      	ldrb	r3, [r4, #6]
   17d62:	0799      	lsls	r1, r3, #30
   17d64:	d406      	bmi.n	17d74 <f_write+0x4c>
   17d66:	6820      	ldr	r0, [r4, #0]
   17d68:	2107      	movs	r1, #7
   17d6a:	f7ff f8d8 	bl	16f1e <unlock_fs>
   17d6e:	2007      	movs	r0, #7
   17d70:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17d74:	68a3      	ldr	r3, [r4, #8]
   17d76:	42dd      	cmn	r5, r3
   17d78:	bf28      	it	cs
   17d7a:	2500      	movcs	r5, #0
   17d7c:	b1c5      	cbz	r5, 17db0 <f_write+0x88>
   17d7e:	68a3      	ldr	r3, [r4, #8]
   17d80:	f3c3 0208 	ubfx	r2, r3, #0, #9
   17d84:	2a00      	cmp	r2, #0
   17d86:	f040 8085 	bne.w	17e94 <f_write+0x16c>
   17d8a:	6820      	ldr	r0, [r4, #0]
   17d8c:	f890 a002 	ldrb.w	sl, [r0, #2]
   17d90:	f10a 3aff 	add.w	sl, sl, #4294967295
   17d94:	ea0a 2a53 	and.w	sl, sl, r3, lsr #9
   17d98:	f01a 0aff 	ands.w	sl, sl, #255	; 0xff
   17d9c:	d122      	bne.n	17de4 <f_write+0xbc>
   17d9e:	b913      	cbnz	r3, 17da6 <f_write+0x7e>
   17da0:	6921      	ldr	r1, [r4, #16]
   17da2:	b961      	cbnz	r1, 17dbe <f_write+0x96>
   17da4:	e000      	b.n	17da8 <f_write+0x80>
   17da6:	6961      	ldr	r1, [r4, #20]
   17da8:	f7ff f9ca 	bl	17140 <create_chain>
   17dac:	4601      	mov	r1, r0
   17dae:	b930      	cbnz	r0, 17dbe <f_write+0x96>
   17db0:	68a3      	ldr	r3, [r4, #8]
   17db2:	68e2      	ldr	r2, [r4, #12]
   17db4:	4293      	cmp	r3, r2
   17db6:	f240 808a 	bls.w	17ece <f_write+0x1a6>
   17dba:	60e3      	str	r3, [r4, #12]
   17dbc:	e087      	b.n	17ece <f_write+0x1a6>
   17dbe:	2901      	cmp	r1, #1
   17dc0:	d101      	bne.n	17dc6 <f_write+0x9e>
   17dc2:	2502      	movs	r5, #2
   17dc4:	e002      	b.n	17dcc <f_write+0xa4>
   17dc6:	1c4a      	adds	r2, r1, #1
   17dc8:	d108      	bne.n	17ddc <f_write+0xb4>
   17dca:	2501      	movs	r5, #1
   17dcc:	6820      	ldr	r0, [r4, #0]
   17dce:	71e5      	strb	r5, [r4, #7]
   17dd0:	4629      	mov	r1, r5
   17dd2:	f7ff f8a4 	bl	16f1e <unlock_fs>
   17dd6:	4628      	mov	r0, r5
   17dd8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17ddc:	6923      	ldr	r3, [r4, #16]
   17dde:	6161      	str	r1, [r4, #20]
   17de0:	b903      	cbnz	r3, 17de4 <f_write+0xbc>
   17de2:	6121      	str	r1, [r4, #16]
   17de4:	79a3      	ldrb	r3, [r4, #6]
   17de6:	065b      	lsls	r3, r3, #25
   17de8:	d50d      	bpl.n	17e06 <f_write+0xde>
   17dea:	4621      	mov	r1, r4
   17dec:	f851 3b24 	ldr.w	r3, [r1], #36
   17df0:	69a2      	ldr	r2, [r4, #24]
   17df2:	7858      	ldrb	r0, [r3, #1]
   17df4:	2301      	movs	r3, #1
   17df6:	f7fd ff6f 	bl	15cd8 <disk_write>
   17dfa:	2800      	cmp	r0, #0
   17dfc:	d1e5      	bne.n	17dca <f_write+0xa2>
   17dfe:	79a3      	ldrb	r3, [r4, #6]
   17e00:	f023 0340 	bic.w	r3, r3, #64	; 0x40
   17e04:	71a3      	strb	r3, [r4, #6]
   17e06:	f8d4 b000 	ldr.w	fp, [r4]
   17e0a:	6961      	ldr	r1, [r4, #20]
   17e0c:	4658      	mov	r0, fp
   17e0e:	f7ff f893 	bl	16f38 <clust2sect>
   17e12:	b918      	cbnz	r0, 17e1c <f_write+0xf4>
   17e14:	2502      	movs	r5, #2
   17e16:	71e5      	strb	r5, [r4, #7]
   17e18:	4658      	mov	r0, fp
   17e1a:	e7d9      	b.n	17dd0 <f_write+0xa8>
   17e1c:	ea5f 2855 	movs.w	r8, r5, lsr #9
   17e20:	eb00 060a 	add.w	r6, r0, sl
   17e24:	d024      	beq.n	17e70 <f_write+0x148>
   17e26:	f89b 3002 	ldrb.w	r3, [fp, #2]
   17e2a:	eb08 020a 	add.w	r2, r8, sl
   17e2e:	429a      	cmp	r2, r3
   17e30:	bf88      	it	hi
   17e32:	ebca 0803 	rsbhi	r8, sl, r3
   17e36:	f89b 0001 	ldrb.w	r0, [fp, #1]
   17e3a:	4639      	mov	r1, r7
   17e3c:	4632      	mov	r2, r6
   17e3e:	fa5f f388 	uxtb.w	r3, r8
   17e42:	f7fd ff49 	bl	15cd8 <disk_write>
   17e46:	2800      	cmp	r0, #0
   17e48:	d1bf      	bne.n	17dca <f_write+0xa2>
   17e4a:	69a3      	ldr	r3, [r4, #24]
   17e4c:	1b99      	subs	r1, r3, r6
   17e4e:	4541      	cmp	r1, r8
   17e50:	d20b      	bcs.n	17e6a <f_write+0x142>
   17e52:	f104 0024 	add.w	r0, r4, #36	; 0x24
   17e56:	eb07 2141 	add.w	r1, r7, r1, lsl #9
   17e5a:	f44f 7200 	mov.w	r2, #512	; 0x200
   17e5e:	f7fe fdec 	bl	16a3a <mem_cpy>
   17e62:	79a3      	ldrb	r3, [r4, #6]
   17e64:	f023 0340 	bic.w	r3, r3, #64	; 0x40
   17e68:	71a3      	strb	r3, [r4, #6]
   17e6a:	ea4f 2648 	mov.w	r6, r8, lsl #9
   17e6e:	e023      	b.n	17eb8 <f_write+0x190>
   17e70:	69a3      	ldr	r3, [r4, #24]
   17e72:	42b3      	cmp	r3, r6
   17e74:	d00d      	beq.n	17e92 <f_write+0x16a>
   17e76:	68a2      	ldr	r2, [r4, #8]
   17e78:	68e3      	ldr	r3, [r4, #12]
   17e7a:	429a      	cmp	r2, r3
   17e7c:	d209      	bcs.n	17e92 <f_write+0x16a>
   17e7e:	f89b 0001 	ldrb.w	r0, [fp, #1]
   17e82:	f104 0124 	add.w	r1, r4, #36	; 0x24
   17e86:	4632      	mov	r2, r6
   17e88:	2301      	movs	r3, #1
   17e8a:	f7fd ff09 	bl	15ca0 <disk_read>
   17e8e:	2800      	cmp	r0, #0
   17e90:	d19b      	bne.n	17dca <f_write+0xa2>
   17e92:	61a6      	str	r6, [r4, #24]
   17e94:	68a0      	ldr	r0, [r4, #8]
   17e96:	4639      	mov	r1, r7
   17e98:	f3c0 0008 	ubfx	r0, r0, #0, #9
   17e9c:	f5c0 7600 	rsb	r6, r0, #512	; 0x200
   17ea0:	42b5      	cmp	r5, r6
   17ea2:	bf38      	it	cc
   17ea4:	462e      	movcc	r6, r5
   17ea6:	4420      	add	r0, r4
   17ea8:	3024      	adds	r0, #36	; 0x24
   17eaa:	4632      	mov	r2, r6
   17eac:	f7fe fdc5 	bl	16a3a <mem_cpy>
   17eb0:	79a3      	ldrb	r3, [r4, #6]
   17eb2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   17eb6:	71a3      	strb	r3, [r4, #6]
   17eb8:	68a3      	ldr	r3, [r4, #8]
   17eba:	4437      	add	r7, r6
   17ebc:	4433      	add	r3, r6
   17ebe:	60a3      	str	r3, [r4, #8]
   17ec0:	f8d9 3000 	ldr.w	r3, [r9]
   17ec4:	1bad      	subs	r5, r5, r6
   17ec6:	4433      	add	r3, r6
   17ec8:	f8c9 3000 	str.w	r3, [r9]
   17ecc:	e756      	b.n	17d7c <f_write+0x54>
   17ece:	79a3      	ldrb	r3, [r4, #6]
   17ed0:	6820      	ldr	r0, [r4, #0]
   17ed2:	f043 0320 	orr.w	r3, r3, #32
   17ed6:	71a3      	strb	r3, [r4, #6]
   17ed8:	2100      	movs	r1, #0
   17eda:	f7ff f820 	bl	16f1e <unlock_fs>
   17ede:	2000      	movs	r0, #0
   17ee0:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

00017ee4 <f_sync>:
f_sync():
   17ee4:	b570      	push	{r4, r5, r6, lr}
   17ee6:	4604      	mov	r4, r0
   17ee8:	f7fe fffc 	bl	16ee4 <validate>
   17eec:	4605      	mov	r5, r0
   17eee:	2800      	cmp	r0, #0
   17ef0:	d138      	bne.n	17f64 <f_sync+0x80>
   17ef2:	79a3      	ldrb	r3, [r4, #6]
   17ef4:	069a      	lsls	r2, r3, #26
   17ef6:	d535      	bpl.n	17f64 <f_sync+0x80>
   17ef8:	065b      	lsls	r3, r3, #25
   17efa:	d512      	bpl.n	17f22 <f_sync+0x3e>
   17efc:	4621      	mov	r1, r4
   17efe:	f851 3b24 	ldr.w	r3, [r1], #36
   17f02:	69a2      	ldr	r2, [r4, #24]
   17f04:	7858      	ldrb	r0, [r3, #1]
   17f06:	2301      	movs	r3, #1
   17f08:	f7fd fee6 	bl	15cd8 <disk_write>
   17f0c:	b128      	cbz	r0, 17f1a <f_sync+0x36>
   17f0e:	6820      	ldr	r0, [r4, #0]
   17f10:	2101      	movs	r1, #1
   17f12:	f7ff f804 	bl	16f1e <unlock_fs>
   17f16:	2001      	movs	r0, #1
   17f18:	bd70      	pop	{r4, r5, r6, pc}
   17f1a:	79a3      	ldrb	r3, [r4, #6]
   17f1c:	f023 0340 	bic.w	r3, r3, #64	; 0x40
   17f20:	71a3      	strb	r3, [r4, #6]
   17f22:	6820      	ldr	r0, [r4, #0]
   17f24:	69e1      	ldr	r1, [r4, #28]
   17f26:	f7fe fe8f 	bl	16c48 <move_window>
   17f2a:	4605      	mov	r5, r0
   17f2c:	b9d0      	cbnz	r0, 17f64 <f_sync+0x80>
   17f2e:	6a26      	ldr	r6, [r4, #32]
   17f30:	7af3      	ldrb	r3, [r6, #11]
   17f32:	f043 0320 	orr.w	r3, r3, #32
   17f36:	72f3      	strb	r3, [r6, #11]
   17f38:	68e3      	ldr	r3, [r4, #12]
   17f3a:	61f3      	str	r3, [r6, #28]
   17f3c:	6923      	ldr	r3, [r4, #16]
   17f3e:	8373      	strh	r3, [r6, #26]
   17f40:	0c1b      	lsrs	r3, r3, #16
   17f42:	82b3      	strh	r3, [r6, #20]
   17f44:	f7fe fd50 	bl	169e8 <get_fattime>
   17f48:	8275      	strh	r5, [r6, #18]
   17f4a:	f8c6 0016 	str.w	r0, [r6, #22]
   17f4e:	79a3      	ldrb	r3, [r4, #6]
   17f50:	2201      	movs	r2, #1
   17f52:	f023 0320 	bic.w	r3, r3, #32
   17f56:	71a3      	strb	r3, [r4, #6]
   17f58:	6823      	ldr	r3, [r4, #0]
   17f5a:	711a      	strb	r2, [r3, #4]
   17f5c:	6820      	ldr	r0, [r4, #0]
   17f5e:	f7fe fe37 	bl	16bd0 <sync_fs>
   17f62:	4605      	mov	r5, r0
   17f64:	6820      	ldr	r0, [r4, #0]
   17f66:	4629      	mov	r1, r5
   17f68:	f7fe ffd9 	bl	16f1e <unlock_fs>
   17f6c:	4628      	mov	r0, r5
   17f6e:	bd70      	pop	{r4, r5, r6, pc}

00017f70 <f_close>:
f_close():
   17f70:	b538      	push	{r3, r4, r5, lr}
   17f72:	4605      	mov	r5, r0
   17f74:	f7ff ffb6 	bl	17ee4 <f_sync>
   17f78:	4604      	mov	r4, r0
   17f7a:	b948      	cbnz	r0, 17f90 <f_close+0x20>
   17f7c:	4628      	mov	r0, r5
   17f7e:	f7fe ffb1 	bl	16ee4 <validate>
   17f82:	4604      	mov	r4, r0
   17f84:	b920      	cbnz	r0, 17f90 <f_close+0x20>
   17f86:	6828      	ldr	r0, [r5, #0]
   17f88:	4621      	mov	r1, r4
   17f8a:	602c      	str	r4, [r5, #0]
   17f8c:	f7fe ffc7 	bl	16f1e <unlock_fs>
   17f90:	4620      	mov	r0, r4
   17f92:	bd38      	pop	{r3, r4, r5, pc}

00017f94 <f_lseek>:
f_lseek():
   17f94:	b570      	push	{r4, r5, r6, lr}
   17f96:	4604      	mov	r4, r0
   17f98:	460d      	mov	r5, r1
   17f9a:	f7fe ffa3 	bl	16ee4 <validate>
   17f9e:	4606      	mov	r6, r0
   17fa0:	b128      	cbz	r0, 17fae <f_lseek+0x1a>
   17fa2:	6820      	ldr	r0, [r4, #0]
   17fa4:	4631      	mov	r1, r6
   17fa6:	f7fe ffba 	bl	16f1e <unlock_fs>
   17faa:	4630      	mov	r0, r6
   17fac:	bd70      	pop	{r4, r5, r6, pc}
   17fae:	79e1      	ldrb	r1, [r4, #7]
   17fb0:	b121      	cbz	r1, 17fbc <f_lseek+0x28>
   17fb2:	6820      	ldr	r0, [r4, #0]
   17fb4:	f7fe ffb3 	bl	16f1e <unlock_fs>
   17fb8:	79e0      	ldrb	r0, [r4, #7]
   17fba:	bd70      	pop	{r4, r5, r6, pc}
   17fbc:	68e3      	ldr	r3, [r4, #12]
   17fbe:	429d      	cmp	r5, r3
   17fc0:	d904      	bls.n	17fcc <f_lseek+0x38>
   17fc2:	79a2      	ldrb	r2, [r4, #6]
   17fc4:	f012 0f02 	tst.w	r2, #2
   17fc8:	bf08      	it	eq
   17fca:	461d      	moveq	r5, r3
   17fcc:	2200      	movs	r2, #0
   17fce:	68a3      	ldr	r3, [r4, #8]
   17fd0:	60a2      	str	r2, [r4, #8]
   17fd2:	b90d      	cbnz	r5, 17fd8 <f_lseek+0x44>
   17fd4:	2500      	movs	r5, #0
   17fd6:	e058      	b.n	1808a <f_lseek+0xf6>
   17fd8:	6820      	ldr	r0, [r4, #0]
   17fda:	7886      	ldrb	r6, [r0, #2]
   17fdc:	0276      	lsls	r6, r6, #9
   17fde:	b16b      	cbz	r3, 17ffc <f_lseek+0x68>
   17fe0:	3b01      	subs	r3, #1
   17fe2:	1e69      	subs	r1, r5, #1
   17fe4:	fbb1 f1f6 	udiv	r1, r1, r6
   17fe8:	fbb3 f2f6 	udiv	r2, r3, r6
   17fec:	4291      	cmp	r1, r2
   17fee:	d305      	bcc.n	17ffc <f_lseek+0x68>
   17ff0:	4272      	negs	r2, r6
   17ff2:	4013      	ands	r3, r2
   17ff4:	60a3      	str	r3, [r4, #8]
   17ff6:	1aed      	subs	r5, r5, r3
   17ff8:	6961      	ldr	r1, [r4, #20]
   17ffa:	e013      	b.n	18024 <f_lseek+0x90>
   17ffc:	6921      	ldr	r1, [r4, #16]
   17ffe:	b981      	cbnz	r1, 18022 <f_lseek+0x8e>
   18000:	f7ff f89e 	bl	17140 <create_chain>
   18004:	2801      	cmp	r0, #1
   18006:	4601      	mov	r1, r0
   18008:	d026      	beq.n	18058 <f_lseek+0xc4>
   1800a:	3001      	adds	r0, #1
   1800c:	bf18      	it	ne
   1800e:	6121      	strne	r1, [r4, #16]
   18010:	d107      	bne.n	18022 <f_lseek+0x8e>
   18012:	2501      	movs	r5, #1
   18014:	6820      	ldr	r0, [r4, #0]
   18016:	71e5      	strb	r5, [r4, #7]
   18018:	4629      	mov	r1, r5
   1801a:	f7fe ff80 	bl	16f1e <unlock_fs>
   1801e:	4628      	mov	r0, r5
   18020:	bd70      	pop	{r4, r5, r6, pc}
   18022:	6161      	str	r1, [r4, #20]
   18024:	2900      	cmp	r1, #0
   18026:	d0d5      	beq.n	17fd4 <f_lseek+0x40>
   18028:	e008      	b.n	1803c <f_lseek+0xa8>
   1802a:	6823      	ldr	r3, [r4, #0]
   1802c:	699b      	ldr	r3, [r3, #24]
   1802e:	4299      	cmp	r1, r3
   18030:	d212      	bcs.n	18058 <f_lseek+0xc4>
   18032:	68a3      	ldr	r3, [r4, #8]
   18034:	6161      	str	r1, [r4, #20]
   18036:	4433      	add	r3, r6
   18038:	60a3      	str	r3, [r4, #8]
   1803a:	1bad      	subs	r5, r5, r6
   1803c:	42b5      	cmp	r5, r6
   1803e:	d912      	bls.n	18066 <f_lseek+0xd2>
   18040:	79a3      	ldrb	r3, [r4, #6]
   18042:	6820      	ldr	r0, [r4, #0]
   18044:	079a      	lsls	r2, r3, #30
   18046:	d509      	bpl.n	1805c <f_lseek+0xc8>
   18048:	f7ff f87a 	bl	17140 <create_chain>
   1804c:	4601      	mov	r1, r0
   1804e:	b148      	cbz	r0, 18064 <f_lseek+0xd0>
   18050:	1c4b      	adds	r3, r1, #1
   18052:	d0de      	beq.n	18012 <f_lseek+0x7e>
   18054:	2901      	cmp	r1, #1
   18056:	d8e8      	bhi.n	1802a <f_lseek+0x96>
   18058:	2502      	movs	r5, #2
   1805a:	e7db      	b.n	18014 <f_lseek+0x80>
   1805c:	f7fe ff77 	bl	16f4e <get_fat>
   18060:	4601      	mov	r1, r0
   18062:	e7f5      	b.n	18050 <f_lseek+0xbc>
   18064:	4635      	mov	r5, r6
   18066:	68a3      	ldr	r3, [r4, #8]
   18068:	442b      	add	r3, r5
   1806a:	60a3      	str	r3, [r4, #8]
   1806c:	f3c5 0308 	ubfx	r3, r5, #0, #9
   18070:	2b00      	cmp	r3, #0
   18072:	d0af      	beq.n	17fd4 <f_lseek+0x40>
   18074:	6826      	ldr	r6, [r4, #0]
   18076:	4630      	mov	r0, r6
   18078:	f7fe ff5e 	bl	16f38 <clust2sect>
   1807c:	b918      	cbnz	r0, 18086 <f_lseek+0xf2>
   1807e:	2502      	movs	r5, #2
   18080:	71e5      	strb	r5, [r4, #7]
   18082:	4630      	mov	r0, r6
   18084:	e7c8      	b.n	18018 <f_lseek+0x84>
   18086:	eb00 2555 	add.w	r5, r0, r5, lsr #9
   1808a:	68a3      	ldr	r3, [r4, #8]
   1808c:	f3c3 0308 	ubfx	r3, r3, #0, #9
   18090:	b1f3      	cbz	r3, 180d0 <f_lseek+0x13c>
   18092:	69a2      	ldr	r2, [r4, #24]
   18094:	4295      	cmp	r5, r2
   18096:	d01b      	beq.n	180d0 <f_lseek+0x13c>
   18098:	79a3      	ldrb	r3, [r4, #6]
   1809a:	f104 0624 	add.w	r6, r4, #36	; 0x24
   1809e:	f013 0f40 	tst.w	r3, #64	; 0x40
   180a2:	d00b      	beq.n	180bc <f_lseek+0x128>
   180a4:	6823      	ldr	r3, [r4, #0]
   180a6:	4631      	mov	r1, r6
   180a8:	7858      	ldrb	r0, [r3, #1]
   180aa:	2301      	movs	r3, #1
   180ac:	f7fd fe14 	bl	15cd8 <disk_write>
   180b0:	2800      	cmp	r0, #0
   180b2:	d1ae      	bne.n	18012 <f_lseek+0x7e>
   180b4:	79a3      	ldrb	r3, [r4, #6]
   180b6:	f023 0340 	bic.w	r3, r3, #64	; 0x40
   180ba:	71a3      	strb	r3, [r4, #6]
   180bc:	6823      	ldr	r3, [r4, #0]
   180be:	4631      	mov	r1, r6
   180c0:	7858      	ldrb	r0, [r3, #1]
   180c2:	462a      	mov	r2, r5
   180c4:	2301      	movs	r3, #1
   180c6:	f7fd fdeb 	bl	15ca0 <disk_read>
   180ca:	2800      	cmp	r0, #0
   180cc:	d1a1      	bne.n	18012 <f_lseek+0x7e>
   180ce:	61a5      	str	r5, [r4, #24]
   180d0:	68a3      	ldr	r3, [r4, #8]
   180d2:	68e2      	ldr	r2, [r4, #12]
   180d4:	4293      	cmp	r3, r2
   180d6:	d904      	bls.n	180e2 <f_lseek+0x14e>
   180d8:	60e3      	str	r3, [r4, #12]
   180da:	79a3      	ldrb	r3, [r4, #6]
   180dc:	f043 0320 	orr.w	r3, r3, #32
   180e0:	71a3      	strb	r3, [r4, #6]
   180e2:	6820      	ldr	r0, [r4, #0]
   180e4:	2100      	movs	r1, #0
   180e6:	f7fe ff1a 	bl	16f1e <unlock_fs>
   180ea:	2000      	movs	r0, #0
   180ec:	bd70      	pop	{r4, r5, r6, pc}

000180ee <f_opendir>:
f_opendir():
   180ee:	b530      	push	{r4, r5, lr}
   180f0:	b0c9      	sub	sp, #292	; 0x124
   180f2:	9101      	str	r1, [sp, #4]
   180f4:	4604      	mov	r4, r0
   180f6:	2800      	cmp	r0, #0
   180f8:	d035      	beq.n	18166 <f_opendir+0x78>
   180fa:	a803      	add	r0, sp, #12
   180fc:	a901      	add	r1, sp, #4
   180fe:	2200      	movs	r2, #0
   18100:	f7fe fde2 	bl	16cc8 <find_volume>
   18104:	4605      	mov	r5, r0
   18106:	bb30      	cbnz	r0, 18156 <f_opendir+0x68>
   18108:	9b03      	ldr	r3, [sp, #12]
   1810a:	4620      	mov	r0, r4
   1810c:	6023      	str	r3, [r4, #0]
   1810e:	ab04      	add	r3, sp, #16
   18110:	61a3      	str	r3, [r4, #24]
   18112:	ab07      	add	r3, sp, #28
   18114:	61e3      	str	r3, [r4, #28]
   18116:	9901      	ldr	r1, [sp, #4]
   18118:	f7ff f96e 	bl	173f8 <follow_path>
   1811c:	4605      	mov	r5, r0
   1811e:	b9a8      	cbnz	r0, 1814c <f_opendir+0x5e>
   18120:	6963      	ldr	r3, [r4, #20]
   18122:	b15b      	cbz	r3, 1813c <f_opendir+0x4e>
   18124:	7ada      	ldrb	r2, [r3, #11]
   18126:	06d2      	lsls	r2, r2, #27
   18128:	d514      	bpl.n	18154 <f_opendir+0x66>
   1812a:	9903      	ldr	r1, [sp, #12]
   1812c:	8b5a      	ldrh	r2, [r3, #26]
   1812e:	7809      	ldrb	r1, [r1, #0]
   18130:	2903      	cmp	r1, #3
   18132:	bf04      	itt	eq
   18134:	8a9b      	ldrheq	r3, [r3, #20]
   18136:	ea42 4203 	orreq.w	r2, r2, r3, lsl #16
   1813a:	60a2      	str	r2, [r4, #8]
   1813c:	9b03      	ldr	r3, [sp, #12]
   1813e:	4620      	mov	r0, r4
   18140:	88db      	ldrh	r3, [r3, #6]
   18142:	2100      	movs	r1, #0
   18144:	80a3      	strh	r3, [r4, #4]
   18146:	f7fe ff55 	bl	16ff4 <dir_sdi>
   1814a:	4605      	mov	r5, r0
   1814c:	2d04      	cmp	r5, #4
   1814e:	d001      	beq.n	18154 <f_opendir+0x66>
   18150:	b11d      	cbz	r5, 1815a <f_opendir+0x6c>
   18152:	e000      	b.n	18156 <f_opendir+0x68>
   18154:	2505      	movs	r5, #5
   18156:	2300      	movs	r3, #0
   18158:	6023      	str	r3, [r4, #0]
   1815a:	9803      	ldr	r0, [sp, #12]
   1815c:	4629      	mov	r1, r5
   1815e:	f7fe fede 	bl	16f1e <unlock_fs>
   18162:	4628      	mov	r0, r5
   18164:	e000      	b.n	18168 <f_opendir+0x7a>
   18166:	2009      	movs	r0, #9
   18168:	b049      	add	sp, #292	; 0x124
   1816a:	bd30      	pop	{r4, r5, pc}

0001816c <f_readdir>:
f_readdir():
   1816c:	b570      	push	{r4, r5, r6, lr}
   1816e:	b0c4      	sub	sp, #272	; 0x110
   18170:	4604      	mov	r4, r0
   18172:	460e      	mov	r6, r1
   18174:	f7fe feb6 	bl	16ee4 <validate>
   18178:	4605      	mov	r5, r0
   1817a:	b9f8      	cbnz	r0, 181bc <f_readdir+0x50>
   1817c:	b926      	cbnz	r6, 18188 <f_readdir+0x1c>
   1817e:	4620      	mov	r0, r4
   18180:	4629      	mov	r1, r5
   18182:	f7fe ff37 	bl	16ff4 <dir_sdi>
   18186:	e018      	b.n	181ba <f_readdir+0x4e>
   18188:	ab00      	add	r3, sp, #0
   1818a:	61a3      	str	r3, [r4, #24]
   1818c:	ab03      	add	r3, sp, #12
   1818e:	61e3      	str	r3, [r4, #28]
   18190:	4620      	mov	r0, r4
   18192:	f7ff fb9b 	bl	178cc <dir_read.constprop.11>
   18196:	2804      	cmp	r0, #4
   18198:	d101      	bne.n	1819e <f_readdir+0x32>
   1819a:	6125      	str	r5, [r4, #16]
   1819c:	e000      	b.n	181a0 <f_readdir+0x34>
   1819e:	b960      	cbnz	r0, 181ba <f_readdir+0x4e>
   181a0:	4620      	mov	r0, r4
   181a2:	4631      	mov	r1, r6
   181a4:	f7fe fc96 	bl	16ad4 <get_fileinfo>
   181a8:	4620      	mov	r0, r4
   181aa:	2100      	movs	r1, #0
   181ac:	f7ff f819 	bl	171e2 <dir_next>
   181b0:	2804      	cmp	r0, #4
   181b2:	d102      	bne.n	181ba <f_readdir+0x4e>
   181b4:	2300      	movs	r3, #0
   181b6:	6123      	str	r3, [r4, #16]
   181b8:	e000      	b.n	181bc <f_readdir+0x50>
   181ba:	4605      	mov	r5, r0
   181bc:	6820      	ldr	r0, [r4, #0]
   181be:	4629      	mov	r1, r5
   181c0:	f7fe fead 	bl	16f1e <unlock_fs>
   181c4:	4628      	mov	r0, r5
   181c6:	b044      	add	sp, #272	; 0x110
   181c8:	bd70      	pop	{r4, r5, r6, pc}

000181ca <f_getfree>:
f_getfree():
   181ca:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
   181ce:	ab02      	add	r3, sp, #8
   181d0:	f843 0d04 	str.w	r0, [r3, #-4]!
   181d4:	4614      	mov	r4, r2
   181d6:	4610      	mov	r0, r2
   181d8:	4688      	mov	r8, r1
   181da:	2200      	movs	r2, #0
   181dc:	4619      	mov	r1, r3
   181de:	f7fe fd73 	bl	16cc8 <find_volume>
   181e2:	6824      	ldr	r4, [r4, #0]
   181e4:	4605      	mov	r5, r0
   181e6:	2800      	cmp	r0, #0
   181e8:	d14c      	bne.n	18284 <f_getfree+0xba>
   181ea:	69a7      	ldr	r7, [r4, #24]
   181ec:	6963      	ldr	r3, [r4, #20]
   181ee:	1eba      	subs	r2, r7, #2
   181f0:	4293      	cmp	r3, r2
   181f2:	d802      	bhi.n	181fa <f_getfree+0x30>
   181f4:	f8c8 3000 	str.w	r3, [r8]
   181f8:	e044      	b.n	18284 <f_getfree+0xba>
   181fa:	f894 9000 	ldrb.w	r9, [r4]
   181fe:	f1b9 0f01 	cmp.w	r9, #1
   18202:	d110      	bne.n	18226 <f_getfree+0x5c>
   18204:	2702      	movs	r7, #2
   18206:	4606      	mov	r6, r0
   18208:	4620      	mov	r0, r4
   1820a:	4639      	mov	r1, r7
   1820c:	f7fe fe9f 	bl	16f4e <get_fat>
   18210:	1c43      	adds	r3, r0, #1
   18212:	d02b      	beq.n	1826c <f_getfree+0xa2>
   18214:	2801      	cmp	r0, #1
   18216:	d02b      	beq.n	18270 <f_getfree+0xa6>
   18218:	b900      	cbnz	r0, 1821c <f_getfree+0x52>
   1821a:	3601      	adds	r6, #1
   1821c:	69a3      	ldr	r3, [r4, #24]
   1821e:	3701      	adds	r7, #1
   18220:	429f      	cmp	r7, r3
   18222:	d3f1      	bcc.n	18208 <f_getfree+0x3e>
   18224:	e027      	b.n	18276 <f_getfree+0xac>
   18226:	6a61      	ldr	r1, [r4, #36]	; 0x24
   18228:	4603      	mov	r3, r0
   1822a:	4602      	mov	r2, r0
   1822c:	4606      	mov	r6, r0
   1822e:	b952      	cbnz	r2, 18246 <f_getfree+0x7c>
   18230:	4620      	mov	r0, r4
   18232:	f101 0a01 	add.w	sl, r1, #1
   18236:	f7fe fd07 	bl	16c48 <move_window>
   1823a:	b9d8      	cbnz	r0, 18274 <f_getfree+0xaa>
   1823c:	f104 0334 	add.w	r3, r4, #52	; 0x34
   18240:	4651      	mov	r1, sl
   18242:	f44f 7200 	mov.w	r2, #512	; 0x200
   18246:	f1b9 0f02 	cmp.w	r9, #2
   1824a:	d105      	bne.n	18258 <f_getfree+0x8e>
   1824c:	8818      	ldrh	r0, [r3, #0]
   1824e:	b900      	cbnz	r0, 18252 <f_getfree+0x88>
   18250:	3601      	adds	r6, #1
   18252:	3302      	adds	r3, #2
   18254:	3a02      	subs	r2, #2
   18256:	e006      	b.n	18266 <f_getfree+0x9c>
   18258:	6818      	ldr	r0, [r3, #0]
   1825a:	f020 4070 	bic.w	r0, r0, #4026531840	; 0xf0000000
   1825e:	b900      	cbnz	r0, 18262 <f_getfree+0x98>
   18260:	3601      	adds	r6, #1
   18262:	3304      	adds	r3, #4
   18264:	3a04      	subs	r2, #4
   18266:	3f01      	subs	r7, #1
   18268:	d1e1      	bne.n	1822e <f_getfree+0x64>
   1826a:	e004      	b.n	18276 <f_getfree+0xac>
   1826c:	2501      	movs	r5, #1
   1826e:	e002      	b.n	18276 <f_getfree+0xac>
   18270:	2502      	movs	r5, #2
   18272:	e000      	b.n	18276 <f_getfree+0xac>
   18274:	4605      	mov	r5, r0
   18276:	7963      	ldrb	r3, [r4, #5]
   18278:	6166      	str	r6, [r4, #20]
   1827a:	f043 0301 	orr.w	r3, r3, #1
   1827e:	7163      	strb	r3, [r4, #5]
   18280:	f8c8 6000 	str.w	r6, [r8]
   18284:	4620      	mov	r0, r4
   18286:	4629      	mov	r1, r5
   18288:	f7fe fe49 	bl	16f1e <unlock_fs>
   1828c:	4628      	mov	r0, r5
   1828e:	b002      	add	sp, #8
   18290:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

00018294 <f_unlink>:
f_unlink():
   18294:	b530      	push	{r4, r5, lr}
   18296:	b0d9      	sub	sp, #356	; 0x164
   18298:	9001      	str	r0, [sp, #4]
   1829a:	a901      	add	r1, sp, #4
   1829c:	a805      	add	r0, sp, #20
   1829e:	2201      	movs	r2, #1
   182a0:	f7fe fd12 	bl	16cc8 <find_volume>
   182a4:	4604      	mov	r4, r0
   182a6:	2800      	cmp	r0, #0
   182a8:	d14a      	bne.n	18340 <f_unlink+0xac>
   182aa:	ab02      	add	r3, sp, #8
   182ac:	930b      	str	r3, [sp, #44]	; 0x2c
   182ae:	a805      	add	r0, sp, #20
   182b0:	ab17      	add	r3, sp, #92	; 0x5c
   182b2:	9901      	ldr	r1, [sp, #4]
   182b4:	930c      	str	r3, [sp, #48]	; 0x30
   182b6:	f7ff f89f 	bl	173f8 <follow_path>
   182ba:	4604      	mov	r4, r0
   182bc:	2800      	cmp	r0, #0
   182be:	d13f      	bne.n	18340 <f_unlink+0xac>
   182c0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   182c2:	b133      	cbz	r3, 182d2 <f_unlink+0x3e>
   182c4:	7ada      	ldrb	r2, [r3, #11]
   182c6:	f012 0f01 	tst.w	r2, #1
   182ca:	bf0c      	ite	eq
   182cc:	2400      	moveq	r4, #0
   182ce:	2407      	movne	r4, #7
   182d0:	e000      	b.n	182d4 <f_unlink+0x40>
   182d2:	2406      	movs	r4, #6
   182d4:	9a05      	ldr	r2, [sp, #20]
   182d6:	8b5d      	ldrh	r5, [r3, #26]
   182d8:	7812      	ldrb	r2, [r2, #0]
   182da:	2a03      	cmp	r2, #3
   182dc:	bf04      	itt	eq
   182de:	8a9a      	ldrheq	r2, [r3, #20]
   182e0:	ea45 4502 	orreq.w	r5, r5, r2, lsl #16
   182e4:	bb64      	cbnz	r4, 18340 <f_unlink+0xac>
   182e6:	7adb      	ldrb	r3, [r3, #11]
   182e8:	06db      	lsls	r3, r3, #27
   182ea:	d514      	bpl.n	18316 <f_unlink+0x82>
   182ec:	2d01      	cmp	r5, #1
   182ee:	d924      	bls.n	1833a <f_unlink+0xa6>
   182f0:	a80e      	add	r0, sp, #56	; 0x38
   182f2:	a905      	add	r1, sp, #20
   182f4:	2224      	movs	r2, #36	; 0x24
   182f6:	f7fe fba0 	bl	16a3a <mem_cpy>
   182fa:	a80e      	add	r0, sp, #56	; 0x38
   182fc:	2102      	movs	r1, #2
   182fe:	9510      	str	r5, [sp, #64]	; 0x40
   18300:	f7fe fe78 	bl	16ff4 <dir_sdi>
   18304:	4604      	mov	r4, r0
   18306:	b9d8      	cbnz	r0, 18340 <f_unlink+0xac>
   18308:	a80e      	add	r0, sp, #56	; 0x38
   1830a:	f7ff fadf 	bl	178cc <dir_read.constprop.11>
   1830e:	4604      	mov	r4, r0
   18310:	b1a8      	cbz	r0, 1833e <f_unlink+0xaa>
   18312:	2804      	cmp	r0, #4
   18314:	d114      	bne.n	18340 <f_unlink+0xac>
   18316:	a805      	add	r0, sp, #20
   18318:	f7ff faaa 	bl	17870 <dir_remove>
   1831c:	4604      	mov	r4, r0
   1831e:	b978      	cbnz	r0, 18340 <f_unlink+0xac>
   18320:	b925      	cbnz	r5, 1832c <f_unlink+0x98>
   18322:	9805      	ldr	r0, [sp, #20]
   18324:	f7fe fc54 	bl	16bd0 <sync_fs>
   18328:	4604      	mov	r4, r0
   1832a:	e009      	b.n	18340 <f_unlink+0xac>
   1832c:	9805      	ldr	r0, [sp, #20]
   1832e:	4629      	mov	r1, r5
   18330:	f7ff fb40 	bl	179b4 <remove_chain>
   18334:	4604      	mov	r4, r0
   18336:	b918      	cbnz	r0, 18340 <f_unlink+0xac>
   18338:	e7f3      	b.n	18322 <f_unlink+0x8e>
   1833a:	2402      	movs	r4, #2
   1833c:	e000      	b.n	18340 <f_unlink+0xac>
   1833e:	2407      	movs	r4, #7
   18340:	9805      	ldr	r0, [sp, #20]
   18342:	4621      	mov	r1, r4
   18344:	f7fe fdeb 	bl	16f1e <unlock_fs>
   18348:	4620      	mov	r0, r4
   1834a:	b059      	add	sp, #356	; 0x164
   1834c:	bd30      	pop	{r4, r5, pc}

0001834e <f_mkdir>:
f_mkdir():
   1834e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18352:	b0d1      	sub	sp, #324	; 0x144
   18354:	9001      	str	r0, [sp, #4]
   18356:	f7fe fb47 	bl	169e8 <get_fattime>
   1835a:	a901      	add	r1, sp, #4
   1835c:	4680      	mov	r8, r0
   1835e:	2201      	movs	r2, #1
   18360:	a806      	add	r0, sp, #24
   18362:	f7fe fcb1 	bl	16cc8 <find_volume>
   18366:	4604      	mov	r4, r0
   18368:	4605      	mov	r5, r0
   1836a:	2800      	cmp	r0, #0
   1836c:	f040 8092 	bne.w	18494 <f_mkdir+0x146>
   18370:	ab03      	add	r3, sp, #12
   18372:	930c      	str	r3, [sp, #48]	; 0x30
   18374:	a806      	add	r0, sp, #24
   18376:	ab0f      	add	r3, sp, #60	; 0x3c
   18378:	9901      	ldr	r1, [sp, #4]
   1837a:	930d      	str	r3, [sp, #52]	; 0x34
   1837c:	f7ff f83c 	bl	173f8 <follow_path>
   18380:	4604      	mov	r4, r0
   18382:	b1a8      	cbz	r0, 183b0 <f_mkdir+0x62>
   18384:	2804      	cmp	r0, #4
   18386:	f040 8085 	bne.w	18494 <f_mkdir+0x146>
   1838a:	9806      	ldr	r0, [sp, #24]
   1838c:	4629      	mov	r1, r5
   1838e:	f7fe fed7 	bl	17140 <create_chain>
   18392:	4606      	mov	r6, r0
   18394:	b130      	cbz	r0, 183a4 <f_mkdir+0x56>
   18396:	2801      	cmp	r0, #1
   18398:	d00c      	beq.n	183b4 <f_mkdir+0x66>
   1839a:	1c43      	adds	r3, r0, #1
   1839c:	bf08      	it	eq
   1839e:	2401      	moveq	r4, #1
   183a0:	d001      	beq.n	183a6 <f_mkdir+0x58>
   183a2:	e009      	b.n	183b8 <f_mkdir+0x6a>
   183a4:	2407      	movs	r4, #7
   183a6:	9806      	ldr	r0, [sp, #24]
   183a8:	4631      	mov	r1, r6
   183aa:	f7ff fb03 	bl	179b4 <remove_chain>
   183ae:	e071      	b.n	18494 <f_mkdir+0x146>
   183b0:	2408      	movs	r4, #8
   183b2:	e06f      	b.n	18494 <f_mkdir+0x146>
   183b4:	2402      	movs	r4, #2
   183b6:	e7f6      	b.n	183a6 <f_mkdir+0x58>
   183b8:	9806      	ldr	r0, [sp, #24]
   183ba:	f7fe fbe3 	bl	16b84 <sync_window>
   183be:	4604      	mov	r4, r0
   183c0:	2800      	cmp	r0, #0
   183c2:	d1f0      	bne.n	183a6 <f_mkdir+0x58>
   183c4:	9d06      	ldr	r5, [sp, #24]
   183c6:	4631      	mov	r1, r6
   183c8:	4628      	mov	r0, r5
   183ca:	f7fe fdb5 	bl	16f38 <clust2sect>
   183ce:	f105 0734 	add.w	r7, r5, #52	; 0x34
   183d2:	4621      	mov	r1, r4
   183d4:	f44f 7200 	mov.w	r2, #512	; 0x200
   183d8:	4683      	mov	fp, r0
   183da:	4638      	mov	r0, r7
   183dc:	f7fe fb44 	bl	16a68 <mem_set>
   183e0:	4638      	mov	r0, r7
   183e2:	2120      	movs	r1, #32
   183e4:	220b      	movs	r2, #11
   183e6:	f7fe fb3f 	bl	16a68 <mem_set>
   183ea:	2310      	movs	r3, #16
   183ec:	fa26 f903 	lsr.w	r9, r6, r3
   183f0:	242e      	movs	r4, #46	; 0x2e
   183f2:	fa1f fa86 	uxth.w	sl, r6
   183f6:	f885 303f 	strb.w	r3, [r5, #63]	; 0x3f
   183fa:	4639      	mov	r1, r7
   183fc:	2220      	movs	r2, #32
   183fe:	f885 4034 	strb.w	r4, [r5, #52]	; 0x34
   18402:	f8c5 804a 	str.w	r8, [r5, #74]	; 0x4a
   18406:	f8a5 a04e 	strh.w	sl, [r5, #78]	; 0x4e
   1840a:	f8a5 9048 	strh.w	r9, [r5, #72]	; 0x48
   1840e:	f105 0054 	add.w	r0, r5, #84	; 0x54
   18412:	f7fe fb12 	bl	16a3a <mem_cpy>
   18416:	9a06      	ldr	r2, [sp, #24]
   18418:	f885 4055 	strb.w	r4, [r5, #85]	; 0x55
   1841c:	7811      	ldrb	r1, [r2, #0]
   1841e:	9b08      	ldr	r3, [sp, #32]
   18420:	2903      	cmp	r1, #3
   18422:	d103      	bne.n	1842c <f_mkdir+0xde>
   18424:	6a91      	ldr	r1, [r2, #40]	; 0x28
   18426:	428b      	cmp	r3, r1
   18428:	bf08      	it	eq
   1842a:	2300      	moveq	r3, #0
   1842c:	f8a5 306e 	strh.w	r3, [r5, #110]	; 0x6e
   18430:	0c1b      	lsrs	r3, r3, #16
   18432:	f8a5 3068 	strh.w	r3, [r5, #104]	; 0x68
   18436:	7895      	ldrb	r5, [r2, #2]
   18438:	b1bd      	cbz	r5, 1846a <f_mkdir+0x11c>
   1843a:	9806      	ldr	r0, [sp, #24]
   1843c:	2201      	movs	r2, #1
   1843e:	f10b 0301 	add.w	r3, fp, #1
   18442:	f8c0 b030 	str.w	fp, [r0, #48]	; 0x30
   18446:	7102      	strb	r2, [r0, #4]
   18448:	9300      	str	r3, [sp, #0]
   1844a:	f7fe fb9b 	bl	16b84 <sync_window>
   1844e:	4604      	mov	r4, r0
   18450:	2800      	cmp	r0, #0
   18452:	d1a8      	bne.n	183a6 <f_mkdir+0x58>
   18454:	4638      	mov	r0, r7
   18456:	4621      	mov	r1, r4
   18458:	f44f 7200 	mov.w	r2, #512	; 0x200
   1845c:	f7fe fb04 	bl	16a68 <mem_set>
   18460:	1e6b      	subs	r3, r5, #1
   18462:	b2dd      	uxtb	r5, r3
   18464:	f8dd b000 	ldr.w	fp, [sp]
   18468:	e7e6      	b.n	18438 <f_mkdir+0xea>
   1846a:	a806      	add	r0, sp, #24
   1846c:	f7ff f8fa 	bl	17664 <dir_register>
   18470:	4604      	mov	r4, r0
   18472:	2800      	cmp	r0, #0
   18474:	d197      	bne.n	183a6 <f_mkdir+0x58>
   18476:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   18478:	2210      	movs	r2, #16
   1847a:	9806      	ldr	r0, [sp, #24]
   1847c:	72da      	strb	r2, [r3, #11]
   1847e:	f8c3 8016 	str.w	r8, [r3, #22]
   18482:	f8a3 a01a 	strh.w	sl, [r3, #26]
   18486:	f8a3 9014 	strh.w	r9, [r3, #20]
   1848a:	2301      	movs	r3, #1
   1848c:	7103      	strb	r3, [r0, #4]
   1848e:	f7fe fb9f 	bl	16bd0 <sync_fs>
   18492:	4604      	mov	r4, r0
   18494:	9806      	ldr	r0, [sp, #24]
   18496:	4621      	mov	r1, r4
   18498:	f7fe fd41 	bl	16f1e <unlock_fs>
   1849c:	4620      	mov	r0, r4
   1849e:	b051      	add	sp, #324	; 0x144
   184a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

000184a4 <f_rename>:
f_rename():
   184a4:	b530      	push	{r4, r5, lr}
   184a6:	b0df      	sub	sp, #380	; 0x17c
   184a8:	9001      	str	r0, [sp, #4]
   184aa:	9100      	str	r1, [sp, #0]
   184ac:	a80b      	add	r0, sp, #44	; 0x2c
   184ae:	a901      	add	r1, sp, #4
   184b0:	2201      	movs	r2, #1
   184b2:	f7fe fc09 	bl	16cc8 <find_volume>
   184b6:	4604      	mov	r4, r0
   184b8:	2800      	cmp	r0, #0
   184ba:	d17c      	bne.n	185b6 <f_rename+0x112>
   184bc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   184be:	a80b      	add	r0, sp, #44	; 0x2c
   184c0:	9314      	str	r3, [sp, #80]	; 0x50
   184c2:	ab02      	add	r3, sp, #8
   184c4:	9311      	str	r3, [sp, #68]	; 0x44
   184c6:	9901      	ldr	r1, [sp, #4]
   184c8:	ab1d      	add	r3, sp, #116	; 0x74
   184ca:	9312      	str	r3, [sp, #72]	; 0x48
   184cc:	f7fe ff94 	bl	173f8 <follow_path>
   184d0:	4604      	mov	r4, r0
   184d2:	2800      	cmp	r0, #0
   184d4:	d16f      	bne.n	185b6 <f_rename+0x112>
   184d6:	9910      	ldr	r1, [sp, #64]	; 0x40
   184d8:	2900      	cmp	r1, #0
   184da:	d05b      	beq.n	18594 <f_rename+0xf0>
   184dc:	a805      	add	r0, sp, #20
   184de:	310b      	adds	r1, #11
   184e0:	2215      	movs	r2, #21
   184e2:	f7fe faaa 	bl	16a3a <mem_cpy>
   184e6:	a814      	add	r0, sp, #80	; 0x50
   184e8:	a90b      	add	r1, sp, #44	; 0x2c
   184ea:	2224      	movs	r2, #36	; 0x24
   184ec:	f7fe faa5 	bl	16a3a <mem_cpy>
   184f0:	4668      	mov	r0, sp
   184f2:	f7fe facf 	bl	16a94 <get_ldnumber>
   184f6:	2800      	cmp	r0, #0
   184f8:	db4e      	blt.n	18598 <f_rename+0xf4>
   184fa:	a814      	add	r0, sp, #80	; 0x50
   184fc:	9900      	ldr	r1, [sp, #0]
   184fe:	f7fe ff7b 	bl	173f8 <follow_path>
   18502:	4604      	mov	r4, r0
   18504:	2800      	cmp	r0, #0
   18506:	d049      	beq.n	1859c <f_rename+0xf8>
   18508:	2804      	cmp	r0, #4
   1850a:	d154      	bne.n	185b6 <f_rename+0x112>
   1850c:	a814      	add	r0, sp, #80	; 0x50
   1850e:	f7ff f8a9 	bl	17664 <dir_register>
   18512:	4604      	mov	r4, r0
   18514:	2800      	cmp	r0, #0
   18516:	d14e      	bne.n	185b6 <f_rename+0x112>
   18518:	9c19      	ldr	r4, [sp, #100]	; 0x64
   1851a:	2213      	movs	r2, #19
   1851c:	f104 000d 	add.w	r0, r4, #13
   18520:	f10d 0116 	add.w	r1, sp, #22
   18524:	f7fe fa89 	bl	16a3a <mem_cpy>
   18528:	f89d 3014 	ldrb.w	r3, [sp, #20]
   1852c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   1852e:	f043 0320 	orr.w	r3, r3, #32
   18532:	72e3      	strb	r3, [r4, #11]
   18534:	2301      	movs	r3, #1
   18536:	712b      	strb	r3, [r5, #4]
   18538:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   1853a:	9b16      	ldr	r3, [sp, #88]	; 0x58
   1853c:	429a      	cmp	r2, r3
   1853e:	d02f      	beq.n	185a0 <f_rename+0xfc>
   18540:	7ae3      	ldrb	r3, [r4, #11]
   18542:	06db      	lsls	r3, r3, #27
   18544:	d52c      	bpl.n	185a0 <f_rename+0xfc>
   18546:	782b      	ldrb	r3, [r5, #0]
   18548:	8b61      	ldrh	r1, [r4, #26]
   1854a:	2b03      	cmp	r3, #3
   1854c:	bf08      	it	eq
   1854e:	8aa3      	ldrheq	r3, [r4, #20]
   18550:	4628      	mov	r0, r5
   18552:	bf08      	it	eq
   18554:	ea41 4103 	orreq.w	r1, r1, r3, lsl #16
   18558:	f7fe fcee 	bl	16f38 <clust2sect>
   1855c:	4601      	mov	r1, r0
   1855e:	b348      	cbz	r0, 185b4 <f_rename+0x110>
   18560:	4628      	mov	r0, r5
   18562:	f7fe fb71 	bl	16c48 <move_window>
   18566:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   18568:	4604      	mov	r4, r0
   1856a:	bb20      	cbnz	r0, 185b6 <f_rename+0x112>
   1856c:	f893 2055 	ldrb.w	r2, [r3, #85]	; 0x55
   18570:	2a2e      	cmp	r2, #46	; 0x2e
   18572:	d115      	bne.n	185a0 <f_rename+0xfc>
   18574:	781a      	ldrb	r2, [r3, #0]
   18576:	2a03      	cmp	r2, #3
   18578:	d103      	bne.n	18582 <f_rename+0xde>
   1857a:	9916      	ldr	r1, [sp, #88]	; 0x58
   1857c:	6a9a      	ldr	r2, [r3, #40]	; 0x28
   1857e:	4291      	cmp	r1, r2
   18580:	d000      	beq.n	18584 <f_rename+0xe0>
   18582:	9c16      	ldr	r4, [sp, #88]	; 0x58
   18584:	f8a3 406e 	strh.w	r4, [r3, #110]	; 0x6e
   18588:	2201      	movs	r2, #1
   1858a:	0c24      	lsrs	r4, r4, #16
   1858c:	f8a3 4068 	strh.w	r4, [r3, #104]	; 0x68
   18590:	711a      	strb	r2, [r3, #4]
   18592:	e005      	b.n	185a0 <f_rename+0xfc>
   18594:	2404      	movs	r4, #4
   18596:	e00e      	b.n	185b6 <f_rename+0x112>
   18598:	240b      	movs	r4, #11
   1859a:	e00c      	b.n	185b6 <f_rename+0x112>
   1859c:	2408      	movs	r4, #8
   1859e:	e00a      	b.n	185b6 <f_rename+0x112>
   185a0:	a80b      	add	r0, sp, #44	; 0x2c
   185a2:	f7ff f965 	bl	17870 <dir_remove>
   185a6:	4604      	mov	r4, r0
   185a8:	b928      	cbnz	r0, 185b6 <f_rename+0x112>
   185aa:	980b      	ldr	r0, [sp, #44]	; 0x2c
   185ac:	f7fe fb10 	bl	16bd0 <sync_fs>
   185b0:	4604      	mov	r4, r0
   185b2:	e000      	b.n	185b6 <f_rename+0x112>
   185b4:	2402      	movs	r4, #2
   185b6:	980b      	ldr	r0, [sp, #44]	; 0x2c
   185b8:	4621      	mov	r1, r4
   185ba:	f7fe fcb0 	bl	16f1e <unlock_fs>
   185be:	4620      	mov	r0, r4
   185c0:	b05f      	add	sp, #380	; 0x17c
   185c2:	bd30      	pop	{r4, r5, pc}

000185c4 <f_mkfs>:
f_mkfs():
   185c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   185c8:	b089      	sub	sp, #36	; 0x24
   185ca:	ab08      	add	r3, sp, #32
   185cc:	f843 0d0c 	str.w	r0, [r3, #-12]!
   185d0:	4618      	mov	r0, r3
   185d2:	460f      	mov	r7, r1
   185d4:	4615      	mov	r5, r2
   185d6:	f7fe fa5d 	bl	16a94 <get_ldnumber>
   185da:	2800      	cmp	r0, #0
   185dc:	f2c0 820d 	blt.w	189fa <f_mkfs+0x436>
   185e0:	2f01      	cmp	r7, #1
   185e2:	f200 820c 	bhi.w	189fe <f_mkfs+0x43a>
   185e6:	1e6b      	subs	r3, r5, #1
   185e8:	402b      	ands	r3, r5
   185ea:	f040 8208 	bne.w	189fe <f_mkfs+0x43a>
   185ee:	4abf      	ldr	r2, [pc, #764]	; (188ec <f_mkfs+0x328>)
   185f0:	f852 4020 	ldr.w	r4, [r2, r0, lsl #2]
   185f4:	2c00      	cmp	r4, #0
   185f6:	f000 8204 	beq.w	18a02 <f_mkfs+0x43e>
   185fa:	b2c6      	uxtb	r6, r0
   185fc:	7023      	strb	r3, [r4, #0]
   185fe:	4630      	mov	r0, r6
   18600:	f7fd fb34 	bl	15c6c <disk_initialize>
   18604:	07c2      	lsls	r2, r0, #31
   18606:	f100 81fe 	bmi.w	18a06 <f_mkfs+0x442>
   1860a:	0743      	lsls	r3, r0, #29
   1860c:	f100 81fd 	bmi.w	18a0a <f_mkfs+0x446>
   18610:	4630      	mov	r0, r6
   18612:	2101      	movs	r1, #1
   18614:	aa07      	add	r2, sp, #28
   18616:	f7fd fb7b 	bl	15d10 <disk_ioctl>
   1861a:	b108      	cbz	r0, 18620 <f_mkfs+0x5c>
   1861c:	2001      	movs	r0, #1
   1861e:	e20e      	b.n	18a3e <f_mkfs+0x47a>
   18620:	9b07      	ldr	r3, [sp, #28]
   18622:	2b7f      	cmp	r3, #127	; 0x7f
   18624:	d9fa      	bls.n	1861c <f_mkfs+0x58>
   18626:	2f00      	cmp	r7, #0
   18628:	bf0c      	ite	eq
   1862a:	f04f 083f 	moveq.w	r8, #63	; 0x3f
   1862e:	f04f 0800 	movne.w	r8, #0
   18632:	ebc8 0303 	rsb	r3, r8, r3
   18636:	9307      	str	r3, [sp, #28]
   18638:	b96d      	cbnz	r5, 18656 <f_mkfs+0x92>
   1863a:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
   1863e:	fbb3 f1f1 	udiv	r1, r3, r1
   18642:	4aab      	ldr	r2, [pc, #684]	; (188f0 <f_mkfs+0x32c>)
   18644:	f832 2015 	ldrh.w	r2, [r2, r5, lsl #1]
   18648:	4291      	cmp	r1, r2
   1864a:	d201      	bcs.n	18650 <f_mkfs+0x8c>
   1864c:	3501      	adds	r5, #1
   1864e:	e7f8      	b.n	18642 <f_mkfs+0x7e>
   18650:	4aa8      	ldr	r2, [pc, #672]	; (188f4 <f_mkfs+0x330>)
   18652:	f832 5015 	ldrh.w	r5, [r2, r5, lsl #1]
   18656:	ea5f 2955 	movs.w	r9, r5, lsr #9
   1865a:	d005      	beq.n	18668 <f_mkfs+0xa4>
   1865c:	f1b9 0f81 	cmp.w	r9, #129	; 0x81
   18660:	bf28      	it	cs
   18662:	f04f 0980 	movcs.w	r9, #128	; 0x80
   18666:	e001      	b.n	1866c <f_mkfs+0xa8>
   18668:	f04f 0901 	mov.w	r9, #1
   1866c:	fbb3 faf9 	udiv	sl, r3, r9
   18670:	f640 72f5 	movw	r2, #4085	; 0xff5
   18674:	4592      	cmp	sl, r2
   18676:	f240 81ca 	bls.w	18a0e <f_mkfs+0x44a>
   1867a:	f64f 72f5 	movw	r2, #65525	; 0xfff5
   1867e:	4592      	cmp	sl, r2
   18680:	f240 81d7 	bls.w	18a32 <f_mkfs+0x46e>
   18684:	ea4f 0a8a 	mov.w	sl, sl, lsl #2
   18688:	f20a 2a07 	addw	sl, sl, #519	; 0x207
   1868c:	2100      	movs	r1, #0
   1868e:	ea4f 2a5a 	mov.w	sl, sl, lsr #9
   18692:	2503      	movs	r5, #3
   18694:	9102      	str	r1, [sp, #8]
   18696:	f04f 0c20 	mov.w	ip, #32
   1869a:	f8dd b008 	ldr.w	fp, [sp, #8]
   1869e:	eb0c 0208 	add.w	r2, ip, r8
   186a2:	44d3      	add	fp, sl
   186a4:	4493      	add	fp, r2
   186a6:	9203      	str	r2, [sp, #12]
   186a8:	ebc8 0209 	rsb	r2, r8, r9
   186ac:	445a      	add	r2, fp
   186ae:	4293      	cmp	r3, r2
   186b0:	d201      	bcs.n	186b6 <f_mkfs+0xf2>
   186b2:	200e      	movs	r0, #14
   186b4:	e1c3      	b.n	18a3e <f_mkfs+0x47a>
   186b6:	4630      	mov	r0, r6
   186b8:	2103      	movs	r1, #3
   186ba:	aa06      	add	r2, sp, #24
   186bc:	f8cd c000 	str.w	ip, [sp]
   186c0:	f7fd fb26 	bl	15d10 <disk_ioctl>
   186c4:	f8dd c000 	ldr.w	ip, [sp]
   186c8:	b920      	cbnz	r0, 186d4 <f_mkfs+0x110>
   186ca:	9b06      	ldr	r3, [sp, #24]
   186cc:	3b01      	subs	r3, #1
   186ce:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
   186d2:	d301      	bcc.n	186d8 <f_mkfs+0x114>
   186d4:	2301      	movs	r3, #1
   186d6:	9306      	str	r3, [sp, #24]
   186d8:	9a06      	ldr	r2, [sp, #24]
   186da:	2d03      	cmp	r5, #3
   186dc:	f102 33ff 	add.w	r3, r2, #4294967295
   186e0:	445b      	add	r3, fp
   186e2:	f1c2 0200 	rsb	r2, r2, #0
   186e6:	ea03 0302 	and.w	r3, r3, r2
   186ea:	ebcb 0303 	rsb	r3, fp, r3
   186ee:	9306      	str	r3, [sp, #24]
   186f0:	d104      	bne.n	186fc <f_mkfs+0x138>
   186f2:	9903      	ldr	r1, [sp, #12]
   186f4:	449c      	add	ip, r3
   186f6:	4419      	add	r1, r3
   186f8:	9103      	str	r1, [sp, #12]
   186fa:	e000      	b.n	186fe <f_mkfs+0x13a>
   186fc:	449a      	add	sl, r3
   186fe:	9b07      	ldr	r3, [sp, #28]
   18700:	9902      	ldr	r1, [sp, #8]
   18702:	ebcc 0203 	rsb	r2, ip, r3
   18706:	ebca 0202 	rsb	r2, sl, r2
   1870a:	1a52      	subs	r2, r2, r1
   1870c:	fbb2 f2f9 	udiv	r2, r2, r9
   18710:	2d02      	cmp	r5, #2
   18712:	9204      	str	r2, [sp, #16]
   18714:	d105      	bne.n	18722 <f_mkfs+0x15e>
   18716:	9904      	ldr	r1, [sp, #16]
   18718:	f640 72f5 	movw	r2, #4085	; 0xff5
   1871c:	4291      	cmp	r1, r2
   1871e:	d9c8      	bls.n	186b2 <f_mkfs+0xee>
   18720:	e013      	b.n	1874a <f_mkfs+0x186>
   18722:	2d03      	cmp	r5, #3
   18724:	d107      	bne.n	18736 <f_mkfs+0x172>
   18726:	9a04      	ldr	r2, [sp, #16]
   18728:	f64f 73f5 	movw	r3, #65525	; 0xfff5
   1872c:	429a      	cmp	r2, r3
   1872e:	d9c0      	bls.n	186b2 <f_mkfs+0xee>
   18730:	f04f 0b0c 	mov.w	fp, #12
   18734:	e010      	b.n	18758 <f_mkfs+0x194>
   18736:	2d01      	cmp	r5, #1
   18738:	d107      	bne.n	1874a <f_mkfs+0x186>
   1873a:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
   1873e:	bf34      	ite	cc
   18740:	f04f 0b01 	movcc.w	fp, #1
   18744:	f04f 0b06 	movcs.w	fp, #6
   18748:	e006      	b.n	18758 <f_mkfs+0x194>
   1874a:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
   1874e:	bf34      	ite	cc
   18750:	f04f 0b04 	movcc.w	fp, #4
   18754:	f04f 0b06 	movcs.w	fp, #6
   18758:	2f00      	cmp	r7, #0
   1875a:	d13e      	bne.n	187da <f_mkfs+0x216>
   1875c:	f104 0334 	add.w	r3, r4, #52	; 0x34
   18760:	4618      	mov	r0, r3
   18762:	4639      	mov	r1, r7
   18764:	f44f 7200 	mov.w	r2, #512	; 0x200
   18768:	f8cd c000 	str.w	ip, [sp]
   1876c:	9301      	str	r3, [sp, #4]
   1876e:	f7fe f97b 	bl	16a68 <mem_set>
   18772:	9907      	ldr	r1, [sp, #28]
   18774:	22fe      	movs	r2, #254	; 0xfe
   18776:	f884 21f7 	strb.w	r2, [r4, #503]	; 0x1f7
   1877a:	eb08 0001 	add.w	r0, r8, r1
   1877e:	f643 62c1 	movw	r2, #16065	; 0x3ec1
   18782:	fbb0 f2f2 	udiv	r2, r0, r2
   18786:	0890      	lsrs	r0, r2, #2
   18788:	f04f 0e01 	mov.w	lr, #1
   1878c:	f040 003f 	orr.w	r0, r0, #63	; 0x3f
   18790:	f884 01f8 	strb.w	r0, [r4, #504]	; 0x1f8
   18794:	f884 21f9 	strb.w	r2, [r4, #505]	; 0x1f9
   18798:	f884 e1f3 	strb.w	lr, [r4, #499]	; 0x1f3
   1879c:	f884 e1f4 	strb.w	lr, [r4, #500]	; 0x1f4
   187a0:	f884 71f5 	strb.w	r7, [r4, #501]	; 0x1f5
   187a4:	f884 b1f6 	strb.w	fp, [r4, #502]	; 0x1f6
   187a8:	9b01      	ldr	r3, [sp, #4]
   187aa:	9206      	str	r2, [sp, #24]
   187ac:	223f      	movs	r2, #63	; 0x3f
   187ae:	f8c4 21fa 	str.w	r2, [r4, #506]	; 0x1fa
   187b2:	f64a 2255 	movw	r2, #43605	; 0xaa55
   187b6:	f8c4 11fe 	str.w	r1, [r4, #510]	; 0x1fe
   187ba:	f8a4 2232 	strh.w	r2, [r4, #562]	; 0x232
   187be:	4619      	mov	r1, r3
   187c0:	4630      	mov	r0, r6
   187c2:	463a      	mov	r2, r7
   187c4:	4673      	mov	r3, lr
   187c6:	f7fd fa87 	bl	15cd8 <disk_write>
   187ca:	f8dd c000 	ldr.w	ip, [sp]
   187ce:	2800      	cmp	r0, #0
   187d0:	f47f af24 	bne.w	1861c <f_mkfs+0x58>
   187d4:	f04f 0bf8 	mov.w	fp, #248	; 0xf8
   187d8:	e001      	b.n	187de <f_mkfs+0x21a>
   187da:	f04f 0bf0 	mov.w	fp, #240	; 0xf0
   187de:	f104 0734 	add.w	r7, r4, #52	; 0x34
   187e2:	4638      	mov	r0, r7
   187e4:	2100      	movs	r1, #0
   187e6:	f44f 7200 	mov.w	r2, #512	; 0x200
   187ea:	f8cd c000 	str.w	ip, [sp]
   187ee:	f7fe f93b 	bl	16a68 <mem_set>
   187f2:	4638      	mov	r0, r7
   187f4:	4940      	ldr	r1, [pc, #256]	; (188f8 <f_mkfs+0x334>)
   187f6:	220b      	movs	r2, #11
   187f8:	f7fe f91f 	bl	16a3a <mem_cpy>
   187fc:	f44f 7300 	mov.w	r3, #512	; 0x200
   18800:	f8a4 303f 	strh.w	r3, [r4, #63]	; 0x3f
   18804:	f884 9041 	strb.w	r9, [r4, #65]	; 0x41
   18808:	2301      	movs	r3, #1
   1880a:	2d03      	cmp	r5, #3
   1880c:	f8dd c000 	ldr.w	ip, [sp]
   18810:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
   18814:	bf14      	ite	ne
   18816:	f44f 7300 	movne.w	r3, #512	; 0x200
   1881a:	2300      	moveq	r3, #0
   1881c:	f8a4 3045 	strh.w	r3, [r4, #69]	; 0x45
   18820:	9b07      	ldr	r3, [sp, #28]
   18822:	f8a4 c042 	strh.w	ip, [r4, #66]	; 0x42
   18826:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
   1882a:	bf34      	ite	cc
   1882c:	f8a4 3047 	strhcc.w	r3, [r4, #71]	; 0x47
   18830:	6563      	strcs	r3, [r4, #84]	; 0x54
   18832:	233f      	movs	r3, #63	; 0x3f
   18834:	f8a4 304c 	strh.w	r3, [r4, #76]	; 0x4c
   18838:	23ff      	movs	r3, #255	; 0xff
   1883a:	f884 b049 	strb.w	fp, [r4, #73]	; 0x49
   1883e:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
   18842:	f8c4 8050 	str.w	r8, [r4, #80]	; 0x50
   18846:	f7fe f8cf 	bl	169e8 <get_fattime>
   1884a:	2d03      	cmp	r5, #3
   1884c:	9006      	str	r0, [sp, #24]
   1884e:	d115      	bne.n	1887c <f_mkfs+0x2b8>
   18850:	2302      	movs	r3, #2
   18852:	6623      	str	r3, [r4, #96]	; 0x60
   18854:	2301      	movs	r3, #1
   18856:	f8a4 3064 	strh.w	r3, [r4, #100]	; 0x64
   1885a:	2306      	movs	r3, #6
   1885c:	f8a4 3066 	strh.w	r3, [r4, #102]	; 0x66
   18860:	2380      	movs	r3, #128	; 0x80
   18862:	f884 3074 	strb.w	r3, [r4, #116]	; 0x74
   18866:	2329      	movs	r3, #41	; 0x29
   18868:	f8c4 0077 	str.w	r0, [r4, #119]	; 0x77
   1886c:	f8c4 a058 	str.w	sl, [r4, #88]	; 0x58
   18870:	f884 3076 	strb.w	r3, [r4, #118]	; 0x76
   18874:	f104 007b 	add.w	r0, r4, #123	; 0x7b
   18878:	4920      	ldr	r1, [pc, #128]	; (188fc <f_mkfs+0x338>)
   1887a:	e00c      	b.n	18896 <f_mkfs+0x2d2>
   1887c:	2380      	movs	r3, #128	; 0x80
   1887e:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
   18882:	491f      	ldr	r1, [pc, #124]	; (18900 <f_mkfs+0x33c>)
   18884:	2329      	movs	r3, #41	; 0x29
   18886:	f8c4 005b 	str.w	r0, [r4, #91]	; 0x5b
   1888a:	f8a4 a04a 	strh.w	sl, [r4, #74]	; 0x4a
   1888e:	f884 305a 	strb.w	r3, [r4, #90]	; 0x5a
   18892:	f104 005f 	add.w	r0, r4, #95	; 0x5f
   18896:	2213      	movs	r2, #19
   18898:	f7fe f8cf 	bl	16a3a <mem_cpy>
   1889c:	f64a 2355 	movw	r3, #43605	; 0xaa55
   188a0:	f8a4 3232 	strh.w	r3, [r4, #562]	; 0x232
   188a4:	4630      	mov	r0, r6
   188a6:	4639      	mov	r1, r7
   188a8:	4642      	mov	r2, r8
   188aa:	2301      	movs	r3, #1
   188ac:	f7fd fa14 	bl	15cd8 <disk_write>
   188b0:	2800      	cmp	r0, #0
   188b2:	f47f aeb3 	bne.w	1861c <f_mkfs+0x58>
   188b6:	2d03      	cmp	r5, #3
   188b8:	d106      	bne.n	188c8 <f_mkfs+0x304>
   188ba:	4630      	mov	r0, r6
   188bc:	4639      	mov	r1, r7
   188be:	f108 0206 	add.w	r2, r8, #6
   188c2:	2301      	movs	r3, #1
   188c4:	f7fd fa08 	bl	15cd8 <disk_write>
   188c8:	4638      	mov	r0, r7
   188ca:	2100      	movs	r1, #0
   188cc:	f44f 7200 	mov.w	r2, #512	; 0x200
   188d0:	f7fe f8ca 	bl	16a68 <mem_set>
   188d4:	2d03      	cmp	r5, #3
   188d6:	d017      	beq.n	18908 <f_mkfs+0x344>
   188d8:	4b0a      	ldr	r3, [pc, #40]	; (18904 <f_mkfs+0x340>)
   188da:	2d01      	cmp	r5, #1
   188dc:	bf18      	it	ne
   188de:	f06f 03ff 	mvnne.w	r3, #255	; 0xff
   188e2:	ea43 030b 	orr.w	r3, r3, fp
   188e6:	9306      	str	r3, [sp, #24]
   188e8:	6363      	str	r3, [r4, #52]	; 0x34
   188ea:	e017      	b.n	1891c <f_mkfs+0x358>
   188ec:	2007c92c 	.word	0x2007c92c
   188f0:	00026ed4 	.word	0x00026ed4
   188f4:	00026dec 	.word	0x00026dec
   188f8:	00026e12 	.word	0x00026e12
   188fc:	00026e1e 	.word	0x00026e1e
   18900:	00026e32 	.word	0x00026e32
   18904:	00ffff00 	.word	0x00ffff00
   18908:	f06b 03ff 	orn	r3, fp, #255	; 0xff
   1890c:	9306      	str	r3, [sp, #24]
   1890e:	6363      	str	r3, [r4, #52]	; 0x34
   18910:	f04f 33ff 	mov.w	r3, #4294967295
   18914:	63a3      	str	r3, [r4, #56]	; 0x38
   18916:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
   1891a:	63e3      	str	r3, [r4, #60]	; 0x3c
   1891c:	9b03      	ldr	r3, [sp, #12]
   1891e:	4639      	mov	r1, r7
   18920:	461a      	mov	r2, r3
   18922:	f103 0b01 	add.w	fp, r3, #1
   18926:	4630      	mov	r0, r6
   18928:	2301      	movs	r3, #1
   1892a:	f7fd f9d5 	bl	15cd8 <disk_write>
   1892e:	4601      	mov	r1, r0
   18930:	2800      	cmp	r0, #0
   18932:	f47f ae73 	bne.w	1861c <f_mkfs+0x58>
   18936:	4638      	mov	r0, r7
   18938:	f44f 7200 	mov.w	r2, #512	; 0x200
   1893c:	f7fe f894 	bl	16a68 <mem_set>
   18940:	2301      	movs	r3, #1
   18942:	9306      	str	r3, [sp, #24]
   18944:	9b06      	ldr	r3, [sp, #24]
   18946:	4553      	cmp	r3, sl
   18948:	d213      	bcs.n	18972 <f_mkfs+0x3ae>
   1894a:	f10b 0c01 	add.w	ip, fp, #1
   1894e:	4630      	mov	r0, r6
   18950:	4639      	mov	r1, r7
   18952:	465a      	mov	r2, fp
   18954:	2301      	movs	r3, #1
   18956:	f8cd c000 	str.w	ip, [sp]
   1895a:	f7fd f9bd 	bl	15cd8 <disk_write>
   1895e:	f8dd c000 	ldr.w	ip, [sp]
   18962:	2800      	cmp	r0, #0
   18964:	f47f ae5a 	bne.w	1861c <f_mkfs+0x58>
   18968:	9b06      	ldr	r3, [sp, #24]
   1896a:	46e3      	mov	fp, ip
   1896c:	3301      	adds	r3, #1
   1896e:	9306      	str	r3, [sp, #24]
   18970:	e7e8      	b.n	18944 <f_mkfs+0x380>
   18972:	9902      	ldr	r1, [sp, #8]
   18974:	46da      	mov	sl, fp
   18976:	2d03      	cmp	r5, #3
   18978:	bf08      	it	eq
   1897a:	4649      	moveq	r1, r9
   1897c:	9102      	str	r1, [sp, #8]
   1897e:	4630      	mov	r0, r6
   18980:	4639      	mov	r1, r7
   18982:	465a      	mov	r2, fp
   18984:	2301      	movs	r3, #1
   18986:	f10b 0901 	add.w	r9, fp, #1
   1898a:	f7fd f9a5 	bl	15cd8 <disk_write>
   1898e:	2800      	cmp	r0, #0
   18990:	f47f ae44 	bne.w	1861c <f_mkfs+0x58>
   18994:	9b02      	ldr	r3, [sp, #8]
   18996:	4453      	add	r3, sl
   18998:	454b      	cmp	r3, r9
   1899a:	d001      	beq.n	189a0 <f_mkfs+0x3dc>
   1899c:	46cb      	mov	fp, r9
   1899e:	e7ee      	b.n	1897e <f_mkfs+0x3ba>
   189a0:	2d03      	cmp	r5, #3
   189a2:	d121      	bne.n	189e8 <f_mkfs+0x424>
   189a4:	4b27      	ldr	r3, [pc, #156]	; (18a44 <f_mkfs+0x480>)
   189a6:	9a04      	ldr	r2, [sp, #16]
   189a8:	6363      	str	r3, [r4, #52]	; 0x34
   189aa:	f103 53ff 	add.w	r3, r3, #534773760	; 0x1fe00000
   189ae:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
   189b2:	3320      	adds	r3, #32
   189b4:	f8c4 3218 	str.w	r3, [r4, #536]	; 0x218
   189b8:	1e53      	subs	r3, r2, #1
   189ba:	f8c4 321c 	str.w	r3, [r4, #540]	; 0x21c
   189be:	2302      	movs	r3, #2
   189c0:	f8c4 3220 	str.w	r3, [r4, #544]	; 0x220
   189c4:	f64a 2355 	movw	r3, #43605	; 0xaa55
   189c8:	f8a4 3232 	strh.w	r3, [r4, #562]	; 0x232
   189cc:	4639      	mov	r1, r7
   189ce:	f108 0201 	add.w	r2, r8, #1
   189d2:	2301      	movs	r3, #1
   189d4:	4630      	mov	r0, r6
   189d6:	f7fd f97f 	bl	15cd8 <disk_write>
   189da:	4630      	mov	r0, r6
   189dc:	4639      	mov	r1, r7
   189de:	f108 0207 	add.w	r2, r8, #7
   189e2:	2301      	movs	r3, #1
   189e4:	f7fd f978 	bl	15cd8 <disk_write>
   189e8:	2100      	movs	r1, #0
   189ea:	4630      	mov	r0, r6
   189ec:	460a      	mov	r2, r1
   189ee:	f7fd f98f 	bl	15d10 <disk_ioctl>
   189f2:	3000      	adds	r0, #0
   189f4:	bf18      	it	ne
   189f6:	2001      	movne	r0, #1
   189f8:	e021      	b.n	18a3e <f_mkfs+0x47a>
   189fa:	200b      	movs	r0, #11
   189fc:	e01f      	b.n	18a3e <f_mkfs+0x47a>
   189fe:	2013      	movs	r0, #19
   18a00:	e01d      	b.n	18a3e <f_mkfs+0x47a>
   18a02:	200c      	movs	r0, #12
   18a04:	e01b      	b.n	18a3e <f_mkfs+0x47a>
   18a06:	2003      	movs	r0, #3
   18a08:	e019      	b.n	18a3e <f_mkfs+0x47a>
   18a0a:	200a      	movs	r0, #10
   18a0c:	e017      	b.n	18a3e <f_mkfs+0x47a>
   18a0e:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
   18a12:	f10a 0a01 	add.w	sl, sl, #1
   18a16:	ea4f 0a5a 	mov.w	sl, sl, lsr #1
   18a1a:	f10a 0a03 	add.w	sl, sl, #3
   18a1e:	2501      	movs	r5, #1
   18a20:	f20a 1aff 	addw	sl, sl, #511	; 0x1ff
   18a24:	2120      	movs	r1, #32
   18a26:	ea4f 2a5a 	mov.w	sl, sl, lsr #9
   18a2a:	9102      	str	r1, [sp, #8]
   18a2c:	f04f 0c01 	mov.w	ip, #1
   18a30:	e633      	b.n	1869a <f_mkfs+0xd6>
   18a32:	f10a 0a02 	add.w	sl, sl, #2
   18a36:	ea4f 0a4a 	mov.w	sl, sl, lsl #1
   18a3a:	2502      	movs	r5, #2
   18a3c:	e7f0      	b.n	18a20 <f_mkfs+0x45c>
   18a3e:	b009      	add	sp, #36	; 0x24
   18a40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18a44:	41615252 	.word	0x41615252

00018a48 <c_list_for_each_elm>:
c_list_for_each_elm():
   18a48:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   18a4c:	9e06      	ldr	r6, [sp, #24]
   18a4e:	460d      	mov	r5, r1
   18a50:	4617      	mov	r7, r2
   18a52:	4698      	mov	r8, r3
   18a54:	b910      	cbnz	r0, 18a5c <c_list_for_each_elm+0x14>
   18a56:	2001      	movs	r0, #1
   18a58:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   18a5c:	2900      	cmp	r1, #0
   18a5e:	d0fa      	beq.n	18a56 <c_list_for_each_elm+0xe>
   18a60:	6804      	ldr	r4, [r0, #0]
   18a62:	2c00      	cmp	r4, #0
   18a64:	d0f7      	beq.n	18a56 <c_list_for_each_elm+0xe>
   18a66:	6820      	ldr	r0, [r4, #0]
   18a68:	4639      	mov	r1, r7
   18a6a:	4642      	mov	r2, r8
   18a6c:	4633      	mov	r3, r6
   18a6e:	47a8      	blx	r5
   18a70:	b108      	cbz	r0, 18a76 <c_list_for_each_elm+0x2e>
   18a72:	6864      	ldr	r4, [r4, #4]
   18a74:	e7f5      	b.n	18a62 <c_list_for_each_elm+0x1a>
   18a76:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

00018a7c <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)>:
_ZN16CommandProcessor10addHandlerEPFbR3strR7CharDevPvEPKcS8_S4_():
   18a7c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18a80:	460f      	mov	r7, r1
   18a82:	491b      	ldr	r1, [pc, #108]	; (18af0 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)+0x74>)
   18a84:	4604      	mov	r4, r0
   18a86:	2b00      	cmp	r3, #0
   18a88:	bf14      	ite	ne
   18a8a:	4699      	movne	r9, r3
   18a8c:	4689      	moveq	r9, r1
   18a8e:	4690      	mov	r8, r2
   18a90:	b362      	cbz	r2, 18aec <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)+0x70>
   18a92:	b35f      	cbz	r7, 18aec <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)+0x70>
   18a94:	6840      	ldr	r0, [r0, #4]
   18a96:	68a3      	ldr	r3, [r4, #8]
   18a98:	4283      	cmp	r3, r0
   18a9a:	d31c      	bcc.n	18ad6 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)+0x5a>
   18a9c:	6826      	ldr	r6, [r4, #0]
   18a9e:	1986      	adds	r6, r0, r6
   18aa0:	d219      	bcs.n	18ad6 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)+0x5a>
   18aa2:	68e0      	ldr	r0, [r4, #12]
   18aa4:	00b1      	lsls	r1, r6, #2
   18aa6:	f006 fec5 	bl	1f834 <realloc>
   18aaa:	68a5      	ldr	r5, [r4, #8]
   18aac:	60e0      	str	r0, [r4, #12]
   18aae:	ea4f 0a85 	mov.w	sl, r5, lsl #2
   18ab2:	42b5      	cmp	r5, r6
   18ab4:	d20e      	bcs.n	18ad4 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)+0x58>
   18ab6:	2010      	movs	r0, #16
   18ab8:	f7f7 fbda 	bl	10270 <operator new(unsigned int)>
   18abc:	2100      	movs	r1, #0
   18abe:	2210      	movs	r2, #16
   18ac0:	4683      	mov	fp, r0
   18ac2:	f006 f8cc 	bl	1ec5e <memset>
   18ac6:	68e3      	ldr	r3, [r4, #12]
   18ac8:	3501      	adds	r5, #1
   18aca:	f843 b00a 	str.w	fp, [r3, sl]
   18ace:	f10a 0a04 	add.w	sl, sl, #4
   18ad2:	e7ee      	b.n	18ab2 <CommandProcessor::addHandler(bool (*)(str&, CharDev&, void*), char const*, char const*, void*)+0x36>
   18ad4:	6066      	str	r6, [r4, #4]
   18ad6:	68a3      	ldr	r3, [r4, #8]
   18ad8:	68e2      	ldr	r2, [r4, #12]
   18ada:	1c59      	adds	r1, r3, #1
   18adc:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
   18ae0:	60a1      	str	r1, [r4, #8]
   18ae2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   18ae4:	e880 0300 	stmia.w	r0, {r8, r9}
   18ae8:	6087      	str	r7, [r0, #8]
   18aea:	60c3      	str	r3, [r0, #12]
   18aec:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18af0:	00025375 	.word	0x00025375

00018af4 <CommandProcessor::getRegisteredCommandList(CharDev&)>:
_ZN16CommandProcessor24getRegisteredCommandListER7CharDev():
   18af4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   18af8:	f04f 32ff 	mov.w	r2, #4294967295
   18afc:	b091      	sub	sp, #68	; 0x44
   18afe:	4681      	mov	r9, r0
   18b00:	460c      	mov	r4, r1
   18b02:	4608      	mov	r0, r1
   18b04:	491d      	ldr	r1, [pc, #116]	; (18b7c <CommandProcessor::getRegisteredCommandList(CharDev&)+0x88>)
   18b06:	f002 f874 	bl	1abf2 <CharDev::put(char const*, unsigned int)>
   18b0a:	2500      	movs	r5, #0
   18b0c:	f8d9 3008 	ldr.w	r3, [r9, #8]
   18b10:	429d      	cmp	r5, r3
   18b12:	d229      	bcs.n	18b68 <CommandProcessor::getRegisteredCommandList(CharDev&)+0x74>
   18b14:	f8d9 300c 	ldr.w	r3, [r9, #12]
   18b18:	f853 8025 	ldr.w	r8, [r3, r5, lsl #2]
   18b1c:	f8d8 7004 	ldr.w	r7, [r8, #4]
   18b20:	4638      	mov	r0, r7
   18b22:	f007 f8c9 	bl	1fcb8 <strlen>
   18b26:	2820      	cmp	r0, #32
   18b28:	d915      	bls.n	18b56 <CommandProcessor::getRegisteredCommandList(CharDev&)+0x62>
   18b2a:	4915      	ldr	r1, [pc, #84]	; (18b80 <CommandProcessor::getRegisteredCommandList(CharDev&)+0x8c>)
   18b2c:	f8d8 2000 	ldr.w	r2, [r8]
   18b30:	463b      	mov	r3, r7
   18b32:	4668      	mov	r0, sp
   18b34:	f007 f80c 	bl	1fb50 <siprintf>
   18b38:	4668      	mov	r0, sp
   18b3a:	210a      	movs	r1, #10
   18b3c:	f007 f90e 	bl	1fd5c <strrchr>
   18b40:	466e      	mov	r6, sp
   18b42:	4286      	cmp	r6, r0
   18b44:	d202      	bcs.n	18b4c <CommandProcessor::getRegisteredCommandList(CharDev&)+0x58>
   18b46:	490f      	ldr	r1, [pc, #60]	; (18b84 <CommandProcessor::getRegisteredCommandList(CharDev&)+0x90>)
   18b48:	f007 f8ae 	bl	1fca8 <strcpy>
   18b4c:	4620      	mov	r0, r4
   18b4e:	4669      	mov	r1, sp
   18b50:	f002 f89b 	bl	1ac8a <CharDev::printf(char const*, ...)>
   18b54:	e006      	b.n	18b64 <CommandProcessor::getRegisteredCommandList(CharDev&)+0x70>
   18b56:	4620      	mov	r0, r4
   18b58:	490b      	ldr	r1, [pc, #44]	; (18b88 <CommandProcessor::getRegisteredCommandList(CharDev&)+0x94>)
   18b5a:	f8d8 2000 	ldr.w	r2, [r8]
   18b5e:	463b      	mov	r3, r7
   18b60:	f002 f893 	bl	1ac8a <CharDev::printf(char const*, ...)>
   18b64:	3501      	adds	r5, #1
   18b66:	e7d1      	b.n	18b0c <CommandProcessor::getRegisteredCommandList(CharDev&)+0x18>
   18b68:	4620      	mov	r0, r4
   18b6a:	4908      	ldr	r1, [pc, #32]	; (18b8c <CommandProcessor::getRegisteredCommandList(CharDev&)+0x98>)
   18b6c:	f04f 32ff 	mov.w	r2, #4294967295
   18b70:	f002 f854 	bl	1ac1c <CharDev::putline(char const*, unsigned int)>
   18b74:	b011      	add	sp, #68	; 0x44
   18b76:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   18b7a:	bf00      	nop
   18b7c:	00026eea 	.word	0x00026eea
   18b80:	00026efe 	.word	0x00026efe
   18b84:	00027519 	.word	0x00027519
   18b88:	00026f11 	.word	0x00026f11
   18b8c:	00026f1d 	.word	0x00026f1d

00018b90 <CommandProcessor::getHelpText(str&, CharDev&)>:
_ZN16CommandProcessor11getHelpTextER3strR7CharDev():
   18b90:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   18b94:	4605      	mov	r5, r0
   18b96:	4608      	mov	r0, r1
   18b98:	460f      	mov	r7, r1
   18b9a:	4616      	mov	r6, r2
   18b9c:	f000 fdd5 	bl	1974a <str::getLen() const>
   18ba0:	2800      	cmp	r0, #0
   18ba2:	dd24      	ble.n	18bee <CommandProcessor::getHelpText(str&, CharDev&)+0x5e>
   18ba4:	2400      	movs	r4, #0
   18ba6:	68ab      	ldr	r3, [r5, #8]
   18ba8:	429c      	cmp	r4, r3
   18baa:	d218      	bcs.n	18bde <CommandProcessor::getHelpText(str&, CharDev&)+0x4e>
   18bac:	68eb      	ldr	r3, [r5, #12]
   18bae:	4638      	mov	r0, r7
   18bb0:	f853 8024 	ldr.w	r8, [r3, r4, lsl #2]
   18bb4:	f8d8 1000 	ldr.w	r1, [r8]
   18bb8:	f000 fe0f 	bl	197da <str::compareToIgnoreCase(char const*) const>
   18bbc:	b168      	cbz	r0, 18bda <CommandProcessor::getHelpText(str&, CharDev&)+0x4a>
   18bbe:	f8d8 3004 	ldr.w	r3, [r8, #4]
   18bc2:	b133      	cbz	r3, 18bd2 <CommandProcessor::getHelpText(str&, CharDev&)+0x42>
   18bc4:	f993 1000 	ldrsb.w	r1, [r3]
   18bc8:	4a0c      	ldr	r2, [pc, #48]	; (18bfc <CommandProcessor::getHelpText(str&, CharDev&)+0x6c>)
   18bca:	2900      	cmp	r1, #0
   18bcc:	bf08      	it	eq
   18bce:	4613      	moveq	r3, r2
   18bd0:	e000      	b.n	18bd4 <CommandProcessor::getHelpText(str&, CharDev&)+0x44>
   18bd2:	4b0a      	ldr	r3, [pc, #40]	; (18bfc <CommandProcessor::getHelpText(str&, CharDev&)+0x6c>)
   18bd4:	4630      	mov	r0, r6
   18bd6:	4619      	mov	r1, r3
   18bd8:	e003      	b.n	18be2 <CommandProcessor::getHelpText(str&, CharDev&)+0x52>
   18bda:	3401      	adds	r4, #1
   18bdc:	e7e3      	b.n	18ba6 <CommandProcessor::getHelpText(str&, CharDev&)+0x16>
   18bde:	4908      	ldr	r1, [pc, #32]	; (18c00 <CommandProcessor::getHelpText(str&, CharDev&)+0x70>)
   18be0:	4630      	mov	r0, r6
   18be2:	f04f 32ff 	mov.w	r2, #4294967295
   18be6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   18bea:	f002 b817 	b.w	1ac1c <CharDev::putline(char const*, unsigned int)>
   18bee:	4628      	mov	r0, r5
   18bf0:	4631      	mov	r1, r6
   18bf2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   18bf6:	f7ff bf7d 	b.w	18af4 <CommandProcessor::getRegisteredCommandList(CharDev&)>
   18bfa:	bf00      	nop
   18bfc:	00026f49 	.word	0x00026f49
   18c00:	00026f6d 	.word	0x00026f6d

00018c04 <CommandProcessor::prepareCmdParam(str&, char const*)>:
_ZN16CommandProcessor15prepareCmdParamER3strPKc():
   18c04:	b538      	push	{r3, r4, r5, lr}
   18c06:	460d      	mov	r5, r1
   18c08:	2400      	movs	r4, #0
   18c0a:	4628      	mov	r0, r5
   18c0c:	f000 fd9d 	bl	1974a <str::getLen() const>
   18c10:	4284      	cmp	r4, r0
   18c12:	da07      	bge.n	18c24 <CommandProcessor::prepareCmdParam(str&, char const*)+0x20>
   18c14:	4628      	mov	r0, r5
   18c16:	4621      	mov	r1, r4
   18c18:	f000 ff3e 	bl	19a98 <str::operator[](int)>
   18c1c:	f990 3000 	ldrsb.w	r3, [r0]
   18c20:	2b20      	cmp	r3, #32
   18c22:	d109      	bne.n	18c38 <CommandProcessor::prepareCmdParam(str&, char const*)+0x34>
   18c24:	4621      	mov	r1, r4
   18c26:	4628      	mov	r0, r5
   18c28:	f000 fe88 	bl	1993c <str::eraseFirst(int)>
   18c2c:	4628      	mov	r0, r5
   18c2e:	4903      	ldr	r1, [pc, #12]	; (18c3c <CommandProcessor::prepareCmdParam(str&, char const*)+0x38>)
   18c30:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   18c34:	f000 beeb 	b.w	19a0e <str::trimStart(char const*)>
   18c38:	3401      	adds	r4, #1
   18c3a:	e7e6      	b.n	18c0a <CommandProcessor::prepareCmdParam(str&, char const*)+0x6>
   18c3c:	00025e2a 	.word	0x00025e2a

00018c40 <CommandProcessor::handleCommand(str&, CharDev&)>:
_ZN16CommandProcessor13handleCommandER3strR7CharDev():
   18c40:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   18c44:	460c      	mov	r4, r1
   18c46:	b090      	sub	sp, #64	; 0x40
   18c48:	4606      	mov	r6, r0
   18c4a:	4608      	mov	r0, r1
   18c4c:	4946      	ldr	r1, [pc, #280]	; (18d68 <CommandProcessor::handleCommand(str&, CharDev&)+0x128>)
   18c4e:	4615      	mov	r5, r2
   18c50:	f000 fefd 	bl	19a4e <str::trimEnd(char const*)>
   18c54:	4620      	mov	r0, r4
   18c56:	4945      	ldr	r1, [pc, #276]	; (18d6c <CommandProcessor::handleCommand(str&, CharDev&)+0x12c>)
   18c58:	2220      	movs	r2, #32
   18c5a:	f000 fe51 	bl	19900 <str::beginsWithWholeWordIgnoreCase(char const*, char) const>
   18c5e:	b908      	cbnz	r0, 18c64 <CommandProcessor::handleCommand(str&, CharDev&)+0x24>
   18c60:	4680      	mov	r8, r0
   18c62:	e015      	b.n	18c90 <CommandProcessor::handleCommand(str&, CharDev&)+0x50>
   18c64:	4630      	mov	r0, r6
   18c66:	4621      	mov	r1, r4
   18c68:	4a40      	ldr	r2, [pc, #256]	; (18d6c <CommandProcessor::handleCommand(str&, CharDev&)+0x12c>)
   18c6a:	f7ff ffcb 	bl	18c04 <CommandProcessor::prepareCmdParam(str&, char const*)>
   18c6e:	4630      	mov	r0, r6
   18c70:	4621      	mov	r1, r4
   18c72:	462a      	mov	r2, r5
   18c74:	f7ff ff8c 	bl	18b90 <CommandProcessor::getHelpText(str&, CharDev&)>
   18c78:	e06a      	b.n	18d50 <CommandProcessor::handleCommand(str&, CharDev&)+0x110>
   18c7a:	68f3      	ldr	r3, [r6, #12]
   18c7c:	4620      	mov	r0, r4
   18c7e:	f853 7028 	ldr.w	r7, [r3, r8, lsl #2]
   18c82:	2220      	movs	r2, #32
   18c84:	6839      	ldr	r1, [r7, #0]
   18c86:	f000 fe3b 	bl	19900 <str::beginsWithWholeWordIgnoreCase(char const*, char) const>
   18c8a:	b928      	cbnz	r0, 18c98 <CommandProcessor::handleCommand(str&, CharDev&)+0x58>
   18c8c:	f108 0801 	add.w	r8, r8, #1
   18c90:	68b3      	ldr	r3, [r6, #8]
   18c92:	4598      	cmp	r8, r3
   18c94:	d3f1      	bcc.n	18c7a <CommandProcessor::handleCommand(str&, CharDev&)+0x3a>
   18c96:	e018      	b.n	18cca <CommandProcessor::handleCommand(str&, CharDev&)+0x8a>
   18c98:	4630      	mov	r0, r6
   18c9a:	4621      	mov	r1, r4
   18c9c:	683a      	ldr	r2, [r7, #0]
   18c9e:	f7ff ffb1 	bl	18c04 <CommandProcessor::prepareCmdParam(str&, char const*)>
   18ca2:	68bb      	ldr	r3, [r7, #8]
   18ca4:	4620      	mov	r0, r4
   18ca6:	4629      	mov	r1, r5
   18ca8:	68fa      	ldr	r2, [r7, #12]
   18caa:	4798      	blx	r3
   18cac:	2800      	cmp	r0, #0
   18cae:	d14f      	bne.n	18d50 <CommandProcessor::handleCommand(str&, CharDev&)+0x110>
   18cb0:	4628      	mov	r0, r5
   18cb2:	492f      	ldr	r1, [pc, #188]	; (18d70 <CommandProcessor::handleCommand(str&, CharDev&)+0x130>)
   18cb4:	f04f 32ff 	mov.w	r2, #4294967295
   18cb8:	f001 ffb0 	bl	1ac1c <CharDev::putline(char const*, unsigned int)>
   18cbc:	4628      	mov	r0, r5
   18cbe:	6879      	ldr	r1, [r7, #4]
   18cc0:	f04f 32ff 	mov.w	r2, #4294967295
   18cc4:	f001 ffaa 	bl	1ac1c <CharDev::putline(char const*, unsigned int)>
   18cc8:	e042      	b.n	18d50 <CommandProcessor::handleCommand(str&, CharDev&)+0x110>
   18cca:	f04f 0800 	mov.w	r8, #0
   18cce:	68b3      	ldr	r3, [r6, #8]
   18cd0:	4598      	cmp	r8, r3
   18cd2:	d23f      	bcs.n	18d54 <CommandProcessor::handleCommand(str&, CharDev&)+0x114>
   18cd4:	68f3      	ldr	r3, [r6, #12]
   18cd6:	2220      	movs	r2, #32
   18cd8:	f853 7028 	ldr.w	r7, [r3, r8, lsl #2]
   18cdc:	a908      	add	r1, sp, #32
   18cde:	a803      	add	r0, sp, #12
   18ce0:	f000 fd0c 	bl	196fc <str::str(char*, int)>
   18ce4:	a803      	add	r0, sp, #12
   18ce6:	6839      	ldr	r1, [r7, #0]
   18ce8:	f000 ff89 	bl	19bfe <str::operator=(char const*)>
   18cec:	2300      	movs	r3, #0
   18cee:	4921      	ldr	r1, [pc, #132]	; (18d74 <CommandProcessor::handleCommand(str&, CharDev&)+0x134>)
   18cf0:	aa01      	add	r2, sp, #4
   18cf2:	4620      	mov	r0, r4
   18cf4:	9301      	str	r3, [sp, #4]
   18cf6:	9302      	str	r3, [sp, #8]
   18cf8:	f000 fd30 	bl	1975c <str::scanf(char const*, ...)>
   18cfc:	a801      	add	r0, sp, #4
   18cfe:	f006 ffdb 	bl	1fcb8 <strlen>
   18d02:	2801      	cmp	r0, #1
   18d04:	d904      	bls.n	18d10 <CommandProcessor::handleCommand(str&, CharDev&)+0xd0>
   18d06:	a803      	add	r0, sp, #12
   18d08:	a901      	add	r1, sp, #4
   18d0a:	f000 fde1 	bl	198d0 <str::beginsWithIgnoreCase(char const*) const>
   18d0e:	b928      	cbnz	r0, 18d1c <CommandProcessor::handleCommand(str&, CharDev&)+0xdc>
   18d10:	a803      	add	r0, sp, #12
   18d12:	f000 fd08 	bl	19726 <str::~str()>
   18d16:	f108 0801 	add.w	r8, r8, #1
   18d1a:	e7d8      	b.n	18cce <CommandProcessor::handleCommand(str&, CharDev&)+0x8e>
   18d1c:	4630      	mov	r0, r6
   18d1e:	4621      	mov	r1, r4
   18d20:	683a      	ldr	r2, [r7, #0]
   18d22:	f7ff ff6f 	bl	18c04 <CommandProcessor::prepareCmdParam(str&, char const*)>
   18d26:	68bb      	ldr	r3, [r7, #8]
   18d28:	4620      	mov	r0, r4
   18d2a:	4629      	mov	r1, r5
   18d2c:	68fa      	ldr	r2, [r7, #12]
   18d2e:	4798      	blx	r3
   18d30:	b958      	cbnz	r0, 18d4a <CommandProcessor::handleCommand(str&, CharDev&)+0x10a>
   18d32:	4628      	mov	r0, r5
   18d34:	490e      	ldr	r1, [pc, #56]	; (18d70 <CommandProcessor::handleCommand(str&, CharDev&)+0x130>)
   18d36:	f04f 32ff 	mov.w	r2, #4294967295
   18d3a:	f001 ff6f 	bl	1ac1c <CharDev::putline(char const*, unsigned int)>
   18d3e:	4628      	mov	r0, r5
   18d40:	6879      	ldr	r1, [r7, #4]
   18d42:	f04f 32ff 	mov.w	r2, #4294967295
   18d46:	f001 ff69 	bl	1ac1c <CharDev::putline(char const*, unsigned int)>
   18d4a:	a803      	add	r0, sp, #12
   18d4c:	f000 fceb 	bl	19726 <str::~str()>
   18d50:	2001      	movs	r0, #1
   18d52:	e006      	b.n	18d62 <CommandProcessor::handleCommand(str&, CharDev&)+0x122>
   18d54:	4628      	mov	r0, r5
   18d56:	4908      	ldr	r1, [pc, #32]	; (18d78 <CommandProcessor::handleCommand(str&, CharDev&)+0x138>)
   18d58:	f04f 32ff 	mov.w	r2, #4294967295
   18d5c:	f001 ff5e 	bl	1ac1c <CharDev::putline(char const*, unsigned int)>
   18d60:	2000      	movs	r0, #0
   18d62:	b010      	add	sp, #64	; 0x40
   18d64:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   18d68:	00026f92 	.word	0x00026f92
   18d6c:	00025751 	.word	0x00025751
   18d70:	00026f95 	.word	0x00026f95
   18d74:	00026fba 	.word	0x00026fba
   18d78:	00026f6d 	.word	0x00026f6d

00018d7c <logger_get_buffer_ptr>:
logger_get_buffer_ptr():
   18d7c:	b537      	push	{r0, r1, r2, r4, r5, lr}
   18d7e:	2300      	movs	r3, #0
   18d80:	ac02      	add	r4, sp, #8
   18d82:	4d0d      	ldr	r5, [pc, #52]	; (18db8 <logger_get_buffer_ptr+0x3c>)
   18d84:	f844 3d04 	str.w	r3, [r4, #-4]!
   18d88:	4602      	mov	r2, r0
   18d8a:	4621      	mov	r1, r4
   18d8c:	6828      	ldr	r0, [r5, #0]
   18d8e:	b90a      	cbnz	r2, 18d94 <logger_get_buffer_ptr+0x18>
   18d90:	4613      	mov	r3, r2
   18d92:	e00c      	b.n	18dae <logger_get_buffer_ptr+0x32>
   18d94:	220a      	movs	r2, #10
   18d96:	f002 fceb 	bl	1b770 <xQueueGenericReceive>
   18d9a:	4603      	mov	r3, r0
   18d9c:	b948      	cbnz	r0, 18db2 <logger_get_buffer_ptr+0x36>
   18d9e:	4a07      	ldr	r2, [pc, #28]	; (18dbc <logger_get_buffer_ptr+0x40>)
   18da0:	6828      	ldr	r0, [r5, #0]
   18da2:	8811      	ldrh	r1, [r2, #0]
   18da4:	3101      	adds	r1, #1
   18da6:	8011      	strh	r1, [r2, #0]
   18da8:	4621      	mov	r1, r4
   18daa:	f04f 32ff 	mov.w	r2, #4294967295
   18dae:	f002 fcdf 	bl	1b770 <xQueueGenericReceive>
   18db2:	9801      	ldr	r0, [sp, #4]
   18db4:	b003      	add	sp, #12
   18db6:	bd30      	pop	{r4, r5, pc}
   18db8:	2007c944 	.word	0x2007c944
   18dbc:	2007c93c 	.word	0x2007c93c

00018dc0 <logger_write_to_file>:
logger_write_to_file():
   18dc0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   18dc4:	2600      	movs	r6, #0
   18dc6:	f5ad 7d0c 	sub.w	sp, sp, #560	; 0x230
   18dca:	460f      	mov	r7, r1
   18dcc:	4680      	mov	r8, r0
   18dce:	9602      	str	r6, [sp, #8]
   18dd0:	f003 fdd8 	bl	1c984 <sys_get_uptime_us>
   18dd4:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   18dd8:	2300      	movs	r3, #0
   18dda:	f005 fac9 	bl	1e370 <__aeabi_uldivmod>
   18dde:	4631      	mov	r1, r6
   18de0:	4604      	mov	r4, r0
   18de2:	f44f 7209 	mov.w	r2, #548	; 0x224
   18de6:	a803      	add	r0, sp, #12
   18de8:	f005 ff39 	bl	1ec5e <memset>
   18dec:	b1df      	cbz	r7, 18e26 <logger_write_to_file+0x66>
   18dee:	a803      	add	r0, sp, #12
   18df0:	491c      	ldr	r1, [pc, #112]	; (18e64 <logger_write_to_file+0xa4>)
   18df2:	2212      	movs	r2, #18
   18df4:	f7fe fe48 	bl	17a88 <f_open>
   18df8:	4606      	mov	r6, r0
   18dfa:	b980      	cbnz	r0, 18e1e <logger_write_to_file+0x5e>
   18dfc:	a803      	add	r0, sp, #12
   18dfe:	9906      	ldr	r1, [sp, #24]
   18e00:	f7ff f8c8 	bl	17f94 <f_lseek>
   18e04:	4606      	mov	r6, r0
   18e06:	b930      	cbnz	r0, 18e16 <logger_write_to_file+0x56>
   18e08:	a803      	add	r0, sp, #12
   18e0a:	4641      	mov	r1, r8
   18e0c:	463a      	mov	r2, r7
   18e0e:	ab02      	add	r3, sp, #8
   18e10:	f7fe ff8a 	bl	17d28 <f_write>
   18e14:	4606      	mov	r6, r0
   18e16:	a803      	add	r0, sp, #12
   18e18:	f7ff f8aa 	bl	17f70 <f_close>
   18e1c:	e004      	b.n	18e28 <logger_write_to_file+0x68>
   18e1e:	4812      	ldr	r0, [pc, #72]	; (18e68 <logger_write_to_file+0xa8>)
   18e20:	f006 fc24 	bl	1f66c <iprintf>
   18e24:	e000      	b.n	18e28 <logger_write_to_file+0x68>
   18e26:	463e      	mov	r6, r7
   18e28:	f003 fdac 	bl	1c984 <sys_get_uptime_us>
   18e2c:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   18e30:	2300      	movs	r3, #0
   18e32:	f005 fa9d 	bl	1e370 <__aeabi_uldivmod>
   18e36:	4b0d      	ldr	r3, [pc, #52]	; (18e6c <logger_write_to_file+0xac>)
   18e38:	1b00      	subs	r0, r0, r4
   18e3a:	681a      	ldr	r2, [r3, #0]
   18e3c:	4290      	cmp	r0, r2
   18e3e:	9a02      	ldr	r2, [sp, #8]
   18e40:	bf88      	it	hi
   18e42:	6018      	strhi	r0, [r3, #0]
   18e44:	1abb      	subs	r3, r7, r2
   18e46:	425c      	negs	r4, r3
   18e48:	415c      	adcs	r4, r3
   18e4a:	b934      	cbnz	r4, 18e5a <logger_write_to_file+0x9a>
   18e4c:	9b05      	ldr	r3, [sp, #20]
   18e4e:	4808      	ldr	r0, [pc, #32]	; (18e70 <logger_write_to_file+0xb0>)
   18e50:	9300      	str	r3, [sp, #0]
   18e52:	4631      	mov	r1, r6
   18e54:	463b      	mov	r3, r7
   18e56:	f006 fc09 	bl	1f66c <iprintf>
   18e5a:	4620      	mov	r0, r4
   18e5c:	f50d 7d0c 	add.w	sp, sp, #560	; 0x230
   18e60:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   18e64:	00026fd0 	.word	0x00026fd0
   18e68:	00026fda 	.word	0x00026fda
   18e6c:	2007c938 	.word	0x2007c938
   18e70:	00026fee 	.word	0x00026fee

00018e74 <logger_task>:
logger_task():
   18e74:	4b2e      	ldr	r3, [pc, #184]	; (18f30 <logger_task+0xbc>)
   18e76:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   18e7a:	681c      	ldr	r4, [r3, #0]
   18e7c:	f504 6780 	add.w	r7, r4, #1024	; 0x400
   18e80:	4625      	mov	r5, r4
   18e82:	ae02      	add	r6, sp, #8
   18e84:	2300      	movs	r3, #0
   18e86:	f8df 80b4 	ldr.w	r8, [pc, #180]	; 18f3c <logger_task+0xc8>
   18e8a:	f846 3d04 	str.w	r3, [r6, #-4]!
   18e8e:	f8d8 0000 	ldr.w	r0, [r8]
   18e92:	4631      	mov	r1, r6
   18e94:	f64e 2260 	movw	r2, #60000	; 0xea60
   18e98:	f002 fc6a 	bl	1b770 <xQueueGenericReceive>
   18e9c:	b108      	cbz	r0, 18ea2 <logger_task+0x2e>
   18e9e:	9b01      	ldr	r3, [sp, #4]
   18ea0:	b923      	cbnz	r3, 18eac <logger_task+0x38>
   18ea2:	4620      	mov	r0, r4
   18ea4:	1b29      	subs	r1, r5, r4
   18ea6:	f7ff ff8b 	bl	18dc0 <logger_write_to_file>
   18eaa:	e7e9      	b.n	18e80 <logger_task+0xc>
   18eac:	f8d8 0000 	ldr.w	r0, [r8]
   18eb0:	f002 fd08 	bl	1b8c4 <uxQueueMessagesWaiting>
   18eb4:	4b1f      	ldr	r3, [pc, #124]	; (18f34 <logger_task+0xc0>)
   18eb6:	f8dd 8004 	ldr.w	r8, [sp, #4]
   18eba:	881a      	ldrh	r2, [r3, #0]
   18ebc:	3001      	adds	r0, #1
   18ebe:	4290      	cmp	r0, r2
   18ec0:	bf88      	it	hi
   18ec2:	8018      	strhhi	r0, [r3, #0]
   18ec4:	4640      	mov	r0, r8
   18ec6:	f006 fef7 	bl	1fcb8 <strlen>
   18eca:	230a      	movs	r3, #10
   18ecc:	f808 3000 	strb.w	r3, [r8, r0]
   18ed0:	f100 0901 	add.w	r9, r0, #1
   18ed4:	9b01      	ldr	r3, [sp, #4]
   18ed6:	2200      	movs	r2, #0
   18ed8:	eb05 0809 	add.w	r8, r5, r9
   18edc:	f803 2009 	strb.w	r2, [r3, r9]
   18ee0:	45b8      	cmp	r8, r7
   18ee2:	9901      	ldr	r1, [sp, #4]
   18ee4:	d316      	bcc.n	18f14 <logger_task+0xa0>
   18ee6:	4628      	mov	r0, r5
   18ee8:	1b7a      	subs	r2, r7, r5
   18eea:	f005 fe94 	bl	1ec16 <memcpy>
   18eee:	ebc7 0808 	rsb	r8, r7, r8
   18ef2:	4620      	mov	r0, r4
   18ef4:	1b39      	subs	r1, r7, r4
   18ef6:	f7ff ff63 	bl	18dc0 <logger_write_to_file>
   18efa:	f1b8 0f00 	cmp.w	r8, #0
   18efe:	d007      	beq.n	18f10 <logger_task+0x9c>
   18f00:	9b01      	ldr	r3, [sp, #4]
   18f02:	ebc8 0109 	rsb	r1, r8, r9
   18f06:	4620      	mov	r0, r4
   18f08:	4419      	add	r1, r3
   18f0a:	4642      	mov	r2, r8
   18f0c:	f005 fe83 	bl	1ec16 <memcpy>
   18f10:	44a0      	add	r8, r4
   18f12:	e003      	b.n	18f1c <logger_task+0xa8>
   18f14:	4628      	mov	r0, r5
   18f16:	464a      	mov	r2, r9
   18f18:	f005 fe7d 	bl	1ec16 <memcpy>
   18f1c:	4b06      	ldr	r3, [pc, #24]	; (18f38 <logger_task+0xc4>)
   18f1e:	4631      	mov	r1, r6
   18f20:	6818      	ldr	r0, [r3, #0]
   18f22:	f04f 32ff 	mov.w	r2, #4294967295
   18f26:	2300      	movs	r3, #0
   18f28:	f002 fb52 	bl	1b5d0 <xQueueGenericSend>
   18f2c:	4645      	mov	r5, r8
   18f2e:	e7a8      	b.n	18e82 <logger_task+0xe>
   18f30:	2007c940 	.word	0x2007c940
   18f34:	2007c948 	.word	0x2007c948
   18f38:	2007c944 	.word	0x2007c944
   18f3c:	2007c934 	.word	0x2007c934

00018f40 <logger_write_log_message>:
logger_write_log_message():
   18f40:	b573      	push	{r0, r1, r4, r5, r6, lr}
   18f42:	ac02      	add	r4, sp, #8
   18f44:	f844 0d04 	str.w	r0, [r4, #-4]!
   18f48:	460d      	mov	r5, r1
   18f4a:	b131      	cbz	r1, 18f5a <logger_write_log_message+0x1a>
   18f4c:	4b0d      	ldr	r3, [pc, #52]	; (18f84 <logger_write_log_message+0x44>)
   18f4e:	4621      	mov	r1, r4
   18f50:	6818      	ldr	r0, [r3, #0]
   18f52:	f04f 32ff 	mov.w	r2, #4294967295
   18f56:	2300      	movs	r3, #0
   18f58:	e00f      	b.n	18f7a <logger_write_log_message+0x3a>
   18f5a:	4606      	mov	r6, r0
   18f5c:	f006 feac 	bl	1fcb8 <strlen>
   18f60:	230a      	movs	r3, #10
   18f62:	5433      	strb	r3, [r6, r0]
   18f64:	9b01      	ldr	r3, [sp, #4]
   18f66:	1c41      	adds	r1, r0, #1
   18f68:	545d      	strb	r5, [r3, r1]
   18f6a:	9801      	ldr	r0, [sp, #4]
   18f6c:	f7ff ff28 	bl	18dc0 <logger_write_to_file>
   18f70:	4b05      	ldr	r3, [pc, #20]	; (18f88 <logger_write_log_message+0x48>)
   18f72:	4621      	mov	r1, r4
   18f74:	6818      	ldr	r0, [r3, #0]
   18f76:	462a      	mov	r2, r5
   18f78:	462b      	mov	r3, r5
   18f7a:	f002 fb29 	bl	1b5d0 <xQueueGenericSend>
   18f7e:	b002      	add	sp, #8
   18f80:	bd70      	pop	{r4, r5, r6, pc}
   18f82:	bf00      	nop
   18f84:	2007c934 	.word	0x2007c934
   18f88:	2007c944 	.word	0x2007c944

00018f8c <logger_send_flush_request>:
logger_send_flush_request():
   18f8c:	b507      	push	{r0, r1, r2, lr}
   18f8e:	f003 f96f 	bl	1c270 <xTaskGetSchedulerState>
   18f92:	2802      	cmp	r0, #2
   18f94:	d10c      	bne.n	18fb0 <logger_send_flush_request+0x24>
   18f96:	4b08      	ldr	r3, [pc, #32]	; (18fb8 <logger_send_flush_request+0x2c>)
   18f98:	681b      	ldr	r3, [r3, #0]
   18f9a:	b14b      	cbz	r3, 18fb0 <logger_send_flush_request+0x24>
   18f9c:	4a07      	ldr	r2, [pc, #28]	; (18fbc <logger_send_flush_request+0x30>)
   18f9e:	2300      	movs	r3, #0
   18fa0:	a902      	add	r1, sp, #8
   18fa2:	6810      	ldr	r0, [r2, #0]
   18fa4:	f841 3d04 	str.w	r3, [r1, #-4]!
   18fa8:	f04f 32ff 	mov.w	r2, #4294967295
   18fac:	f002 fb10 	bl	1b5d0 <xQueueGenericSend>
   18fb0:	b003      	add	sp, #12
   18fb2:	f85d fb04 	ldr.w	pc, [sp], #4
   18fb6:	bf00      	nop
   18fb8:	2007c940 	.word	0x2007c940
   18fbc:	2007c934 	.word	0x2007c934

00018fc0 <logger_init>:
logger_init():
   18fc0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   18fc4:	4e2f      	ldr	r6, [pc, #188]	; (19084 <logger_init+0xc4>)
   18fc6:	b086      	sub	sp, #24
   18fc8:	6834      	ldr	r4, [r6, #0]
   18fca:	4680      	mov	r8, r0
   18fcc:	2c00      	cmp	r4, #0
   18fce:	d155      	bne.n	1907c <logger_init+0xbc>
   18fd0:	f44f 6080 	mov.w	r0, #1024	; 0x400
   18fd4:	9405      	str	r4, [sp, #20]
   18fd6:	f005 fdf1 	bl	1ebbc <malloc>
   18fda:	4d2b      	ldr	r5, [pc, #172]	; (19088 <logger_init+0xc8>)
   18fdc:	6030      	str	r0, [r6, #0]
   18fde:	b940      	cbnz	r0, 18ff2 <logger_init+0x32>
   18fe0:	6830      	ldr	r0, [r6, #0]
   18fe2:	2800      	cmp	r0, #0
   18fe4:	d035      	beq.n	19052 <logger_init+0x92>
   18fe6:	f005 fdf1 	bl	1ebcc <free>
   18fea:	4b26      	ldr	r3, [pc, #152]	; (19084 <logger_init+0xc4>)
   18fec:	2200      	movs	r2, #0
   18fee:	601a      	str	r2, [r3, #0]
   18ff0:	e02f      	b.n	19052 <logger_init+0x92>
   18ff2:	2104      	movs	r1, #4
   18ff4:	4622      	mov	r2, r4
   18ff6:	200a      	movs	r0, #10
   18ff8:	f002 fab9 	bl	1b56e <xQueueGenericCreate>
   18ffc:	4f23      	ldr	r7, [pc, #140]	; (1908c <logger_init+0xcc>)
   18ffe:	2104      	movs	r1, #4
   19000:	6038      	str	r0, [r7, #0]
   19002:	4622      	mov	r2, r4
   19004:	200a      	movs	r0, #10
   19006:	f002 fab2 	bl	1b56e <xQueueGenericCreate>
   1900a:	683b      	ldr	r3, [r7, #0]
   1900c:	6028      	str	r0, [r5, #0]
   1900e:	2b00      	cmp	r3, #0
   19010:	d0e6      	beq.n	18fe0 <logger_init+0x20>
   19012:	2800      	cmp	r0, #0
   19014:	d0e4      	beq.n	18fe0 <logger_init+0x20>
   19016:	240a      	movs	r4, #10
   19018:	2096      	movs	r0, #150	; 0x96
   1901a:	f005 fdcf 	bl	1ebbc <malloc>
   1901e:	9005      	str	r0, [sp, #20]
   19020:	2800      	cmp	r0, #0
   19022:	d0dd      	beq.n	18fe0 <logger_init+0x20>
   19024:	2200      	movs	r2, #0
   19026:	6828      	ldr	r0, [r5, #0]
   19028:	a905      	add	r1, sp, #20
   1902a:	4613      	mov	r3, r2
   1902c:	f002 fad0 	bl	1b5d0 <xQueueGenericSend>
   19030:	3c01      	subs	r4, #1
   19032:	d1f1      	bne.n	19018 <logger_init+0x58>
   19034:	f8cd 8000 	str.w	r8, [sp]
   19038:	9401      	str	r4, [sp, #4]
   1903a:	9402      	str	r4, [sp, #8]
   1903c:	9403      	str	r4, [sp, #12]
   1903e:	4814      	ldr	r0, [pc, #80]	; (19090 <logger_init+0xd0>)
   19040:	4914      	ldr	r1, [pc, #80]	; (19094 <logger_init+0xd4>)
   19042:	f44f 72c0 	mov.w	r2, #384	; 0x180
   19046:	4623      	mov	r3, r4
   19048:	f002 fcf8 	bl	1ba3c <xTaskGenericCreate>
   1904c:	2800      	cmp	r0, #0
   1904e:	d0c7      	beq.n	18fe0 <logger_init+0x20>
   19050:	e014      	b.n	1907c <logger_init+0xbc>
   19052:	682b      	ldr	r3, [r5, #0]
   19054:	240a      	movs	r4, #10
   19056:	b92b      	cbnz	r3, 19064 <logger_init+0xa4>
   19058:	480f      	ldr	r0, [pc, #60]	; (19098 <logger_init+0xd8>)
   1905a:	f006 fb7f 	bl	1f75c <puts>
   1905e:	e00d      	b.n	1907c <logger_init+0xbc>
   19060:	3c01      	subs	r4, #1
   19062:	d0f9      	beq.n	19058 <logger_init+0x98>
   19064:	2200      	movs	r2, #0
   19066:	6828      	ldr	r0, [r5, #0]
   19068:	a905      	add	r1, sp, #20
   1906a:	4613      	mov	r3, r2
   1906c:	f002 fb80 	bl	1b770 <xQueueGenericReceive>
   19070:	2800      	cmp	r0, #0
   19072:	d0f5      	beq.n	19060 <logger_init+0xa0>
   19074:	9805      	ldr	r0, [sp, #20]
   19076:	f005 fda9 	bl	1ebcc <free>
   1907a:	e7f1      	b.n	19060 <logger_init+0xa0>
   1907c:	b006      	add	sp, #24
   1907e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   19082:	bf00      	nop
   19084:	2007c940 	.word	0x2007c940
   19088:	2007c944 	.word	0x2007c944
   1908c:	2007c934 	.word	0x2007c934
   19090:	00018e75 	.word	0x00018e75
   19094:	00027021 	.word	0x00027021
   19098:	00027028 	.word	0x00027028

0001909c <logger_log>:
logger_log():
   1909c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   190a0:	4699      	mov	r9, r3
   190a2:	4b3d      	ldr	r3, [pc, #244]	; (19198 <logger_log+0xfc>)
   190a4:	b097      	sub	sp, #92	; 0x5c
   190a6:	681b      	ldr	r3, [r3, #0]
   190a8:	4682      	mov	sl, r0
   190aa:	460c      	mov	r4, r1
   190ac:	4615      	mov	r5, r2
   190ae:	2b00      	cmp	r3, #0
   190b0:	d06e      	beq.n	19190 <logger_log+0xf4>
   190b2:	a80f      	add	r0, sp, #60	; 0x3c
   190b4:	f001 fb80 	bl	1a7b8 <rtc_gettime>
   190b8:	f003 fc64 	bl	1c984 <sys_get_uptime_us>
   190bc:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   190c0:	2300      	movs	r3, #0
   190c2:	f005 f955 	bl	1e370 <__aeabi_uldivmod>
   190c6:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
   190ca:	f003 f8d1 	bl	1c270 <xTaskGetSchedulerState>
   190ce:	1e83      	subs	r3, r0, #2
   190d0:	425e      	negs	r6, r3
   190d2:	415e      	adcs	r6, r3
   190d4:	4b31      	ldr	r3, [pc, #196]	; (1919c <logger_log+0x100>)
   190d6:	af16      	add	r7, sp, #88	; 0x58
   190d8:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
   190da:	e907 000f 	stmdb	r7, {r0, r1, r2, r3}
   190de:	b15c      	cbz	r4, 190f8 <logger_log+0x5c>
   190e0:	4620      	mov	r0, r4
   190e2:	212f      	movs	r1, #47	; 0x2f
   190e4:	f006 fe3a 	bl	1fd5c <strrchr>
   190e8:	b920      	cbnz	r0, 190f4 <logger_log+0x58>
   190ea:	4620      	mov	r0, r4
   190ec:	215c      	movs	r1, #92	; 0x5c
   190ee:	f006 fe35 	bl	1fd5c <strrchr>
   190f2:	b110      	cbz	r0, 190fa <logger_log+0x5e>
   190f4:	1c44      	adds	r4, r0, #1
   190f6:	e000      	b.n	190fa <logger_log+0x5e>
   190f8:	4c29      	ldr	r4, [pc, #164]	; (191a0 <logger_log+0x104>)
   190fa:	4630      	mov	r0, r6
   190fc:	f7ff fe3e 	bl	18d7c <logger_get_buffer_ptr>
   19100:	f89d 103c 	ldrb.w	r1, [sp, #60]	; 0x3c
   19104:	f10d 0b58 	add.w	fp, sp, #88	; 0x58
   19108:	eb0b 0a8a 	add.w	sl, fp, sl, lsl #2
   1910c:	f001 013f 	and.w	r1, r1, #63	; 0x3f
   19110:	910a      	str	r1, [sp, #40]	; 0x28
   19112:	f85a 1c10 	ldr.w	r1, [sl, #-16]
   19116:	f8df 8088 	ldr.w	r8, [pc, #136]	; 191a0 <logger_log+0x104>
   1911a:	910b      	str	r1, [sp, #44]	; 0x2c
   1911c:	990a      	ldr	r1, [sp, #40]	; 0x28
   1911e:	2d00      	cmp	r5, #0
   19120:	bf08      	it	eq
   19122:	4645      	moveq	r5, r8
   19124:	f995 b000 	ldrsb.w	fp, [r5]
   19128:	9102      	str	r1, [sp, #8]
   1912a:	990c      	ldr	r1, [sp, #48]	; 0x30
   1912c:	f89d c03e 	ldrb.w	ip, [sp, #62]	; 0x3e
   19130:	f89d e03d 	ldrb.w	lr, [sp, #61]	; 0x3d
   19134:	f8df a070 	ldr.w	sl, [pc, #112]	; 191a8 <logger_log+0x10c>
   19138:	f89d 2041 	ldrb.w	r2, [sp, #65]	; 0x41
   1913c:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
   19140:	9103      	str	r1, [sp, #12]
   19142:	990b      	ldr	r1, [sp, #44]	; 0x2c
   19144:	f00c 0c1f 	and.w	ip, ip, #31
   19148:	f00e 0e3f 	and.w	lr, lr, #63	; 0x3f
   1914c:	f1bb 0f00 	cmp.w	fp, #0
   19150:	bf18      	it	ne
   19152:	46d0      	movne	r8, sl
   19154:	e88d 5000 	stmia.w	sp, {ip, lr}
   19158:	9104      	str	r1, [sp, #16]
   1915a:	f002 020f 	and.w	r2, r2, #15
   1915e:	4911      	ldr	r1, [pc, #68]	; (191a4 <logger_log+0x108>)
   19160:	f003 031f 	and.w	r3, r3, #31
   19164:	9405      	str	r4, [sp, #20]
   19166:	9506      	str	r5, [sp, #24]
   19168:	f8cd 801c 	str.w	r8, [sp, #28]
   1916c:	f8cd 9020 	str.w	r9, [sp, #32]
   19170:	4607      	mov	r7, r0
   19172:	f006 fced 	bl	1fb50 <siprintf>
   19176:	4601      	mov	r1, r0
   19178:	ab21      	add	r3, sp, #132	; 0x84
   1917a:	f1c1 0195 	rsb	r1, r1, #149	; 0x95
   1917e:	1838      	adds	r0, r7, r0
   19180:	9a20      	ldr	r2, [sp, #128]	; 0x80
   19182:	930e      	str	r3, [sp, #56]	; 0x38
   19184:	f009 fb34 	bl	227f0 <vsniprintf>
   19188:	4638      	mov	r0, r7
   1918a:	4631      	mov	r1, r6
   1918c:	f7ff fed8 	bl	18f40 <logger_write_log_message>
   19190:	b017      	add	sp, #92	; 0x5c
   19192:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19196:	bf00      	nop
   19198:	2007c940 	.word	0x2007c940
   1919c:	00026fc0 	.word	0x00026fc0
   191a0:	00025375 	.word	0x00025375
   191a4:	0002704d 	.word	0x0002704d
   191a8:	000271b3 	.word	0x000271b3

000191ac <logger_log_raw>:
logger_log_raw():
   191ac:	b40f      	push	{r0, r1, r2, r3}
   191ae:	4b0e      	ldr	r3, [pc, #56]	; (191e8 <logger_log_raw+0x3c>)
   191b0:	b537      	push	{r0, r1, r2, r4, r5, lr}
   191b2:	681b      	ldr	r3, [r3, #0]
   191b4:	b193      	cbz	r3, 191dc <logger_log_raw+0x30>
   191b6:	f003 f85b 	bl	1c270 <xTaskGetSchedulerState>
   191ba:	1e83      	subs	r3, r0, #2
   191bc:	425c      	negs	r4, r3
   191be:	415c      	adcs	r4, r3
   191c0:	4620      	mov	r0, r4
   191c2:	f7ff fddb 	bl	18d7c <logger_get_buffer_ptr>
   191c6:	ab07      	add	r3, sp, #28
   191c8:	4605      	mov	r5, r0
   191ca:	2195      	movs	r1, #149	; 0x95
   191cc:	9a06      	ldr	r2, [sp, #24]
   191ce:	9301      	str	r3, [sp, #4]
   191d0:	f009 fb0e 	bl	227f0 <vsniprintf>
   191d4:	4628      	mov	r0, r5
   191d6:	4621      	mov	r1, r4
   191d8:	f7ff feb2 	bl	18f40 <logger_write_log_message>
   191dc:	b003      	add	sp, #12
   191de:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
   191e2:	b004      	add	sp, #16
   191e4:	4770      	bx	lr
   191e6:	bf00      	nop
   191e8:	2007c940 	.word	0x2007c940

000191ec <for_each_recur_alarm_callback>:
for_each_recur_alarm_callback():
   191ec:	b513      	push	{r0, r1, r4, lr}
   191ee:	460c      	mov	r4, r1
   191f0:	aa02      	add	r2, sp, #8
   191f2:	2100      	movs	r1, #0
   191f4:	460b      	mov	r3, r1
   191f6:	f842 1d04 	str.w	r1, [r2, #-4]!
   191fa:	6800      	ldr	r0, [r0, #0]
   191fc:	f002 fa7f 	bl	1b6fe <xQueueGenericSendFromISR>
   19200:	9b01      	ldr	r3, [sp, #4]
   19202:	b11b      	cbz	r3, 1920c <for_each_recur_alarm_callback+0x20>
   19204:	6823      	ldr	r3, [r4, #0]
   19206:	f043 0301 	orr.w	r3, r3, #1
   1920a:	6023      	str	r3, [r4, #0]
   1920c:	2001      	movs	r0, #1
   1920e:	b002      	add	sp, #8
   19210:	bd10      	pop	{r4, pc}

00019212 <for_each_alarm_callback>:
for_each_alarm_callback():
   19212:	b530      	push	{r4, r5, lr}
   19214:	b085      	sub	sp, #20
   19216:	4604      	mov	r4, r0
   19218:	a801      	add	r0, sp, #4
   1921a:	460d      	mov	r5, r1
   1921c:	f001 facc 	bl	1a7b8 <rtc_gettime>
   19220:	f89d 3006 	ldrb.w	r3, [sp, #6]
   19224:	7922      	ldrb	r2, [r4, #4]
   19226:	f003 031f 	and.w	r3, r3, #31
   1922a:	429a      	cmp	r2, r3
   1922c:	d11d      	bne.n	1926a <for_each_alarm_callback+0x58>
   1922e:	f89d 3005 	ldrb.w	r3, [sp, #5]
   19232:	7962      	ldrb	r2, [r4, #5]
   19234:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   19238:	429a      	cmp	r2, r3
   1923a:	d116      	bne.n	1926a <for_each_alarm_callback+0x58>
   1923c:	f89d 3004 	ldrb.w	r3, [sp, #4]
   19240:	79a2      	ldrb	r2, [r4, #6]
   19242:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   19246:	429a      	cmp	r2, r3
   19248:	d10f      	bne.n	1926a <for_each_alarm_callback+0x58>
   1924a:	6823      	ldr	r3, [r4, #0]
   1924c:	2100      	movs	r1, #0
   1924e:	aa04      	add	r2, sp, #16
   19250:	f842 1d10 	str.w	r1, [r2, #-16]!
   19254:	6818      	ldr	r0, [r3, #0]
   19256:	466a      	mov	r2, sp
   19258:	460b      	mov	r3, r1
   1925a:	f002 fa50 	bl	1b6fe <xQueueGenericSendFromISR>
   1925e:	9b00      	ldr	r3, [sp, #0]
   19260:	b11b      	cbz	r3, 1926a <for_each_alarm_callback+0x58>
   19262:	682b      	ldr	r3, [r5, #0]
   19264:	f043 0301 	orr.w	r3, r3, #1
   19268:	602b      	str	r3, [r5, #0]
   1926a:	2001      	movs	r0, #1
   1926c:	b005      	add	sp, #20
   1926e:	bd30      	pop	{r4, r5, pc}

00019270 <RTC_IRQHandler>:
RTC_IRQHandler():
   19270:	b530      	push	{r4, r5, lr}
   19272:	4b22      	ldr	r3, [pc, #136]	; (192fc <RTC_IRQHandler+0x8c>)
   19274:	b087      	sub	sp, #28
   19276:	781a      	ldrb	r2, [r3, #0]
   19278:	4c21      	ldr	r4, [pc, #132]	; (19300 <RTC_IRQHandler+0x90>)
   1927a:	f042 0201 	orr.w	r2, r2, #1
   1927e:	701a      	strb	r2, [r3, #0]
   19280:	2500      	movs	r5, #0
   19282:	a803      	add	r0, sp, #12
   19284:	9502      	str	r5, [sp, #8]
   19286:	f001 fa97 	bl	1a7b8 <rtc_gettime>
   1928a:	462b      	mov	r3, r5
   1928c:	9500      	str	r5, [sp, #0]
   1928e:	6820      	ldr	r0, [r4, #0]
   19290:	491c      	ldr	r1, [pc, #112]	; (19304 <RTC_IRQHandler+0x94>)
   19292:	aa02      	add	r2, sp, #8
   19294:	f7ff fbd8 	bl	18a48 <c_list_for_each_elm>
   19298:	f89d 300c 	ldrb.w	r3, [sp, #12]
   1929c:	f013 033f 	ands.w	r3, r3, #63	; 0x3f
   192a0:	d11b      	bne.n	192da <RTC_IRQHandler+0x6a>
   192a2:	9300      	str	r3, [sp, #0]
   192a4:	6860      	ldr	r0, [r4, #4]
   192a6:	4917      	ldr	r1, [pc, #92]	; (19304 <RTC_IRQHandler+0x94>)
   192a8:	aa02      	add	r2, sp, #8
   192aa:	f7ff fbcd 	bl	18a48 <c_list_for_each_elm>
   192ae:	f89d 300d 	ldrb.w	r3, [sp, #13]
   192b2:	f013 033f 	ands.w	r3, r3, #63	; 0x3f
   192b6:	d110      	bne.n	192da <RTC_IRQHandler+0x6a>
   192b8:	9300      	str	r3, [sp, #0]
   192ba:	68a0      	ldr	r0, [r4, #8]
   192bc:	4911      	ldr	r1, [pc, #68]	; (19304 <RTC_IRQHandler+0x94>)
   192be:	aa02      	add	r2, sp, #8
   192c0:	f7ff fbc2 	bl	18a48 <c_list_for_each_elm>
   192c4:	f89d 300e 	ldrb.w	r3, [sp, #14]
   192c8:	f013 031f 	ands.w	r3, r3, #31
   192cc:	d105      	bne.n	192da <RTC_IRQHandler+0x6a>
   192ce:	9300      	str	r3, [sp, #0]
   192d0:	68e0      	ldr	r0, [r4, #12]
   192d2:	490c      	ldr	r1, [pc, #48]	; (19304 <RTC_IRQHandler+0x94>)
   192d4:	aa02      	add	r2, sp, #8
   192d6:	f7ff fbb7 	bl	18a48 <c_list_for_each_elm>
   192da:	2300      	movs	r3, #0
   192dc:	4a0a      	ldr	r2, [pc, #40]	; (19308 <RTC_IRQHandler+0x98>)
   192de:	9300      	str	r3, [sp, #0]
   192e0:	6810      	ldr	r0, [r2, #0]
   192e2:	490a      	ldr	r1, [pc, #40]	; (1930c <RTC_IRQHandler+0x9c>)
   192e4:	aa02      	add	r2, sp, #8
   192e6:	f7ff fbaf 	bl	18a48 <c_list_for_each_elm>
   192ea:	9b02      	ldr	r3, [sp, #8]
   192ec:	b11b      	cbz	r3, 192f6 <RTC_IRQHandler+0x86>
   192ee:	4b08      	ldr	r3, [pc, #32]	; (19310 <RTC_IRQHandler+0xa0>)
   192f0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   192f4:	601a      	str	r2, [r3, #0]
   192f6:	b007      	add	sp, #28
   192f8:	bd30      	pop	{r4, r5, pc}
   192fa:	bf00      	nop
   192fc:	40024000 	.word	0x40024000
   19300:	2007c94c 	.word	0x2007c94c
   19304:	000191ed 	.word	0x000191ed
   19308:	2007c95c 	.word	0x2007c95c
   1930c:	00019213 	.word	0x00019213
   19310:	e000ed04 	.word	0xe000ed04

00019314 <printline(char const*, char const*)>:
_ZL9printlinePKcS0_():
   19314:	b570      	push	{r4, r5, r6, lr}
   19316:	460e      	mov	r6, r1
   19318:	4604      	mov	r4, r0
   1931a:	f814 3b01 	ldrb.w	r3, [r4], #1
   1931e:	b333      	cbz	r3, 1936e <printline(char const*, char const*)+0x5a>
   19320:	4b28      	ldr	r3, [pc, #160]	; (193c4 <printline(char const*, char const*)+0xb0>)
   19322:	6818      	ldr	r0, [r3, #0]
   19324:	6882      	ldr	r2, [r0, #8]
   19326:	6895      	ldr	r5, [r2, #8]
   19328:	3d01      	subs	r5, #1
   1932a:	2d00      	cmp	r5, #0
   1932c:	6095      	str	r5, [r2, #8]
   1932e:	da14      	bge.n	1935a <printline(char const*, char const*)+0x46>
   19330:	6991      	ldr	r1, [r2, #24]
   19332:	428d      	cmp	r5, r1
   19334:	db0c      	blt.n	19350 <printline(char const*, char const*)+0x3c>
   19336:	6812      	ldr	r2, [r2, #0]
   19338:	f814 1c01 	ldrb.w	r1, [r4, #-1]
   1933c:	7011      	strb	r1, [r2, #0]
   1933e:	6818      	ldr	r0, [r3, #0]
   19340:	6882      	ldr	r2, [r0, #8]
   19342:	6813      	ldr	r3, [r2, #0]
   19344:	7819      	ldrb	r1, [r3, #0]
   19346:	290a      	cmp	r1, #10
   19348:	d004      	beq.n	19354 <printline(char const*, char const*)+0x40>
   1934a:	3301      	adds	r3, #1
   1934c:	6013      	str	r3, [r2, #0]
   1934e:	e7e4      	b.n	1931a <printline(char const*, char const*)+0x6>
   19350:	f914 1c01 	ldrsb.w	r1, [r4, #-1]
   19354:	f009 fa8e 	bl	22874 <__swbuf_r>
   19358:	e7df      	b.n	1931a <printline(char const*, char const*)+0x6>
   1935a:	6812      	ldr	r2, [r2, #0]
   1935c:	f814 1c01 	ldrb.w	r1, [r4, #-1]
   19360:	7011      	strb	r1, [r2, #0]
   19362:	681b      	ldr	r3, [r3, #0]
   19364:	689b      	ldr	r3, [r3, #8]
   19366:	681a      	ldr	r2, [r3, #0]
   19368:	3201      	adds	r2, #1
   1936a:	601a      	str	r2, [r3, #0]
   1936c:	e7d5      	b.n	1931a <printline(char const*, char const*)+0x6>
   1936e:	b126      	cbz	r6, 1937a <printline(char const*, char const*)+0x66>
   19370:	4630      	mov	r0, r6
   19372:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
   19376:	f006 b9f1 	b.w	1f75c <puts>
   1937a:	4b12      	ldr	r3, [pc, #72]	; (193c4 <printline(char const*, char const*)+0xb0>)
   1937c:	6818      	ldr	r0, [r3, #0]
   1937e:	6882      	ldr	r2, [r0, #8]
   19380:	6891      	ldr	r1, [r2, #8]
   19382:	3901      	subs	r1, #1
   19384:	2900      	cmp	r1, #0
   19386:	6091      	str	r1, [r2, #8]
   19388:	da13      	bge.n	193b2 <printline(char const*, char const*)+0x9e>
   1938a:	6994      	ldr	r4, [r2, #24]
   1938c:	42a1      	cmp	r1, r4
   1938e:	db0b      	blt.n	193a8 <printline(char const*, char const*)+0x94>
   19390:	6812      	ldr	r2, [r2, #0]
   19392:	210a      	movs	r1, #10
   19394:	7011      	strb	r1, [r2, #0]
   19396:	6818      	ldr	r0, [r3, #0]
   19398:	6882      	ldr	r2, [r0, #8]
   1939a:	6813      	ldr	r3, [r2, #0]
   1939c:	7819      	ldrb	r1, [r3, #0]
   1939e:	290a      	cmp	r1, #10
   193a0:	d003      	beq.n	193aa <printline(char const*, char const*)+0x96>
   193a2:	3301      	adds	r3, #1
   193a4:	6013      	str	r3, [r2, #0]
   193a6:	bd70      	pop	{r4, r5, r6, pc}
   193a8:	210a      	movs	r1, #10
   193aa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
   193ae:	f009 ba61 	b.w	22874 <__swbuf_r>
   193b2:	6812      	ldr	r2, [r2, #0]
   193b4:	210a      	movs	r1, #10
   193b6:	7011      	strb	r1, [r2, #0]
   193b8:	681b      	ldr	r3, [r3, #0]
   193ba:	689b      	ldr	r3, [r3, #8]
   193bc:	681a      	ldr	r2, [r3, #0]
   193be:	3201      	adds	r2, #1
   193c0:	601a      	str	r2, [r3, #0]
   193c2:	bd70      	pop	{r4, r5, r6, pc}
   193c4:	2007c16c 	.word	0x2007c16c

000193c8 <dbg_print(char const*, char const*)>:
_ZL9dbg_printPKcS0_():
   193c8:	4b1b      	ldr	r3, [pc, #108]	; (19438 <dbg_print(char const*, char const*)+0x70>)
   193ca:	b570      	push	{r4, r5, r6, lr}
   193cc:	781b      	ldrb	r3, [r3, #0]
   193ce:	460e      	mov	r6, r1
   193d0:	2b00      	cmp	r3, #0
   193d2:	d030      	beq.n	19436 <dbg_print(char const*, char const*)+0x6e>
   193d4:	4604      	mov	r4, r0
   193d6:	f814 3b01 	ldrb.w	r3, [r4], #1
   193da:	b333      	cbz	r3, 1942a <dbg_print(char const*, char const*)+0x62>
   193dc:	4b17      	ldr	r3, [pc, #92]	; (1943c <dbg_print(char const*, char const*)+0x74>)
   193de:	6818      	ldr	r0, [r3, #0]
   193e0:	6882      	ldr	r2, [r0, #8]
   193e2:	6895      	ldr	r5, [r2, #8]
   193e4:	3d01      	subs	r5, #1
   193e6:	2d00      	cmp	r5, #0
   193e8:	6095      	str	r5, [r2, #8]
   193ea:	da14      	bge.n	19416 <dbg_print(char const*, char const*)+0x4e>
   193ec:	6991      	ldr	r1, [r2, #24]
   193ee:	428d      	cmp	r5, r1
   193f0:	db0c      	blt.n	1940c <dbg_print(char const*, char const*)+0x44>
   193f2:	6812      	ldr	r2, [r2, #0]
   193f4:	f814 1c01 	ldrb.w	r1, [r4, #-1]
   193f8:	7011      	strb	r1, [r2, #0]
   193fa:	6818      	ldr	r0, [r3, #0]
   193fc:	6882      	ldr	r2, [r0, #8]
   193fe:	6813      	ldr	r3, [r2, #0]
   19400:	7819      	ldrb	r1, [r3, #0]
   19402:	290a      	cmp	r1, #10
   19404:	d004      	beq.n	19410 <dbg_print(char const*, char const*)+0x48>
   19406:	3301      	adds	r3, #1
   19408:	6013      	str	r3, [r2, #0]
   1940a:	e7e4      	b.n	193d6 <dbg_print(char const*, char const*)+0xe>
   1940c:	f914 1c01 	ldrsb.w	r1, [r4, #-1]
   19410:	f009 fa30 	bl	22874 <__swbuf_r>
   19414:	e7df      	b.n	193d6 <dbg_print(char const*, char const*)+0xe>
   19416:	6812      	ldr	r2, [r2, #0]
   19418:	f814 1c01 	ldrb.w	r1, [r4, #-1]
   1941c:	7011      	strb	r1, [r2, #0]
   1941e:	681b      	ldr	r3, [r3, #0]
   19420:	689b      	ldr	r3, [r3, #8]
   19422:	681a      	ldr	r2, [r3, #0]
   19424:	3201      	adds	r2, #1
   19426:	601a      	str	r2, [r3, #0]
   19428:	e7d5      	b.n	193d6 <dbg_print(char const*, char const*)+0xe>
   1942a:	b126      	cbz	r6, 19436 <dbg_print(char const*, char const*)+0x6e>
   1942c:	4630      	mov	r0, r6
   1942e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
   19432:	f006 b993 	b.w	1f75c <puts>
   19436:	bd70      	pop	{r4, r5, r6, pc}
   19438:	2007c960 	.word	0x2007c960
   1943c:	2007c16c 	.word	0x2007c16c

00019440 <scheduler_c_task_private(void*)>:
_Z24scheduler_c_task_privatePv():
   19440:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
   19444:	4b3c      	ldr	r3, [pc, #240]	; (19538 <scheduler_c_task_private(void*)+0xf8>)
   19446:	4604      	mov	r4, r0
   19448:	681a      	ldr	r2, [r3, #0]
   1944a:	6903      	ldr	r3, [r0, #16]
   1944c:	429a      	cmp	r2, r3
   1944e:	d137      	bne.n	194c0 <scheduler_c_task_private(void*)+0x80>
   19450:	483a      	ldr	r0, [pc, #232]	; (1953c <scheduler_c_task_private(void*)+0xfc>)
   19452:	2100      	movs	r1, #0
   19454:	f7ff ffb8 	bl	193c8 <dbg_print(char const*, char const*)>
   19458:	6a60      	ldr	r0, [r4, #36]	; 0x24
   1945a:	4939      	ldr	r1, [pc, #228]	; (19540 <scheduler_c_task_private(void*)+0x100>)
   1945c:	f7ff ffb4 	bl	193c8 <dbg_print(char const*, char const*)>
   19460:	4838      	ldr	r0, [pc, #224]	; (19544 <scheduler_c_task_private(void*)+0x104>)
   19462:	2100      	movs	r1, #0
   19464:	f7ff ffb0 	bl	193c8 <dbg_print(char const*, char const*)>
   19468:	4b37      	ldr	r3, [pc, #220]	; (19548 <scheduler_c_task_private(void*)+0x108>)
   1946a:	2600      	movs	r6, #0
   1946c:	681d      	ldr	r5, [r3, #0]
   1946e:	4637      	mov	r7, r6
   19470:	b18d      	cbz	r5, 19496 <scheduler_c_task_private(void*)+0x56>
   19472:	f8d5 8000 	ldr.w	r8, [r5]
   19476:	3601      	adds	r6, #1
   19478:	f8d8 3000 	ldr.w	r3, [r8]
   1947c:	4640      	mov	r0, r8
   1947e:	691b      	ldr	r3, [r3, #16]
   19480:	686d      	ldr	r5, [r5, #4]
   19482:	4798      	blx	r3
   19484:	2800      	cmp	r0, #0
   19486:	d1f3      	bne.n	19470 <scheduler_c_task_private(void*)+0x30>
   19488:	f8d8 0024 	ldr.w	r0, [r8, #36]	; 0x24
   1948c:	492f      	ldr	r1, [pc, #188]	; (1954c <scheduler_c_task_private(void*)+0x10c>)
   1948e:	f7ff ff41 	bl	19314 <printline(char const*, char const*)>
   19492:	2701      	movs	r7, #1
   19494:	e7ec      	b.n	19470 <scheduler_c_task_private(void*)+0x30>
   19496:	b90f      	cbnz	r7, 1949c <scheduler_c_task_private(void*)+0x5c>
   19498:	463d      	mov	r5, r7
   1949a:	e006      	b.n	194aa <scheduler_c_task_private(void*)+0x6a>
   1949c:	482c      	ldr	r0, [pc, #176]	; (19550 <scheduler_c_task_private(void*)+0x110>)
   1949e:	4629      	mov	r1, r5
   194a0:	f7ff ff38 	bl	19314 <printline(char const*, char const*)>
   194a4:	f002 fbc6 	bl	1bc34 <vTaskEndScheduler>
   194a8:	e00a      	b.n	194c0 <scheduler_c_task_private(void*)+0x80>
   194aa:	42b5      	cmp	r5, r6
   194ac:	d008      	beq.n	194c0 <scheduler_c_task_private(void*)+0x80>
   194ae:	4b29      	ldr	r3, [pc, #164]	; (19554 <scheduler_c_task_private(void*)+0x114>)
   194b0:	2100      	movs	r1, #0
   194b2:	6818      	ldr	r0, [r3, #0]
   194b4:	460a      	mov	r2, r1
   194b6:	460b      	mov	r3, r1
   194b8:	f002 f88a 	bl	1b5d0 <xQueueGenericSend>
   194bc:	3501      	adds	r5, #1
   194be:	e7f4      	b.n	194aa <scheduler_c_task_private(void*)+0x6a>
   194c0:	4b24      	ldr	r3, [pc, #144]	; (19554 <scheduler_c_task_private(void*)+0x114>)
   194c2:	2100      	movs	r1, #0
   194c4:	f04f 32ff 	mov.w	r2, #4294967295
   194c8:	6818      	ldr	r0, [r3, #0]
   194ca:	460b      	mov	r3, r1
   194cc:	f002 f950 	bl	1b770 <xQueueGenericReceive>
   194d0:	f002 fbc4 	bl	1bc5c <xTaskGetTickCount>
   194d4:	9001      	str	r0, [sp, #4]
   194d6:	f002 fbc1 	bl	1bc5c <xTaskGetTickCount>
   194da:	4605      	mov	r5, r0
   194dc:	6860      	ldr	r0, [r4, #4]
   194de:	b118      	cbz	r0, 194e8 <scheduler_c_task_private(void*)+0xa8>
   194e0:	68e1      	ldr	r1, [r4, #12]
   194e2:	f002 f9fa 	bl	1b8da <xQueueSelectFromSet>
   194e6:	60a0      	str	r0, [r4, #8]
   194e8:	6823      	ldr	r3, [r4, #0]
   194ea:	4620      	mov	r0, r4
   194ec:	695b      	ldr	r3, [r3, #20]
   194ee:	6aa1      	ldr	r1, [r4, #40]	; 0x28
   194f0:	4798      	blx	r3
   194f2:	4606      	mov	r6, r0
   194f4:	b930      	cbnz	r0, 19504 <scheduler_c_task_private(void*)+0xc4>
   194f6:	6a60      	ldr	r0, [r4, #36]	; 0x24
   194f8:	4917      	ldr	r1, [pc, #92]	; (19558 <scheduler_c_task_private(void*)+0x118>)
   194fa:	f7ff ff0b 	bl	19314 <printline(char const*, char const*)>
   194fe:	4630      	mov	r0, r6
   19500:	f002 fdb4 	bl	1c06c <vTaskSuspend>
   19504:	69a3      	ldr	r3, [r4, #24]
   19506:	3301      	adds	r3, #1
   19508:	61a3      	str	r3, [r4, #24]
   1950a:	6a23      	ldr	r3, [r4, #32]
   1950c:	b11b      	cbz	r3, 19516 <scheduler_c_task_private(void*)+0xd6>
   1950e:	f002 fba5 	bl	1bc5c <xTaskGetTickCount>
   19512:	42a8      	cmp	r0, r5
   19514:	d806      	bhi.n	19524 <scheduler_c_task_private(void*)+0xe4>
   19516:	69e1      	ldr	r1, [r4, #28]
   19518:	2900      	cmp	r1, #0
   1951a:	d0df      	beq.n	194dc <scheduler_c_task_private(void*)+0x9c>
   1951c:	a801      	add	r0, sp, #4
   1951e:	f002 fc99 	bl	1be54 <vTaskDelayUntil>
   19522:	e7db      	b.n	194dc <scheduler_c_task_private(void*)+0x9c>
   19524:	f002 fb9a 	bl	1bc5c <xTaskGetTickCount>
   19528:	6a25      	ldr	r5, [r4, #32]
   1952a:	4405      	add	r5, r0
   1952c:	6920      	ldr	r0, [r4, #16]
   1952e:	f002 fe89 	bl	1c244 <uxTaskGetStackHighWaterMark>
   19532:	0080      	lsls	r0, r0, #2
   19534:	6160      	str	r0, [r4, #20]
   19536:	e7ee      	b.n	19516 <scheduler_c_task_private(void*)+0xd6>
   19538:	2007c970 	.word	0x2007c970
   1953c:	00027087 	.word	0x00027087
   19540:	0002708b 	.word	0x0002708b
   19544:	000270b8 	.word	0x000270b8
   19548:	2007c974 	.word	0x2007c974
   1954c:	000270e5 	.word	0x000270e5
   19550:	000270fe 	.word	0x000270fe
   19554:	2007c96c 	.word	0x2007c96c
   19558:	00027126 	.word	0x00027126

0001955c <scheduler_init_all(bool)>:
_Z18scheduler_init_allb():
   1955c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
   19560:	4b30      	ldr	r3, [pc, #192]	; (19624 <scheduler_init_all(bool)+0xc8>)
   19562:	6819      	ldr	r1, [r3, #0]
   19564:	4698      	mov	r8, r3
   19566:	b921      	cbnz	r1, 19572 <scheduler_init_all(bool)+0x16>
   19568:	482f      	ldr	r0, [pc, #188]	; (19628 <scheduler_init_all(bool)+0xcc>)
   1956a:	f7ff fed3 	bl	19314 <printline(char const*, char const*)>
   1956e:	2001      	movs	r0, #1
   19570:	e054      	b.n	1961c <scheduler_init_all(bool)+0xc0>
   19572:	482e      	ldr	r0, [pc, #184]	; (1962c <scheduler_init_all(bool)+0xd0>)
   19574:	2100      	movs	r1, #0
   19576:	f7ff ff27 	bl	193c8 <dbg_print(char const*, char const*)>
   1957a:	2700      	movs	r7, #0
   1957c:	f8d8 4000 	ldr.w	r4, [r8]
   19580:	463e      	mov	r6, r7
   19582:	b1dc      	cbz	r4, 195bc <scheduler_init_all(bool)+0x60>
   19584:	6825      	ldr	r5, [r4, #0]
   19586:	6864      	ldr	r4, [r4, #4]
   19588:	f895 3030 	ldrb.w	r3, [r5, #48]	; 0x30
   1958c:	6aea      	ldr	r2, [r5, #44]	; 0x2c
   1958e:	9300      	str	r3, [sp, #0]
   19590:	f105 0310 	add.w	r3, r5, #16
   19594:	9301      	str	r3, [sp, #4]
   19596:	2300      	movs	r3, #0
   19598:	9302      	str	r3, [sp, #8]
   1959a:	9303      	str	r3, [sp, #12]
   1959c:	4824      	ldr	r0, [pc, #144]	; (19630 <scheduler_init_all(bool)+0xd4>)
   1959e:	6a69      	ldr	r1, [r5, #36]	; 0x24
   195a0:	f3c2 028f 	ubfx	r2, r2, #2, #16
   195a4:	462b      	mov	r3, r5
   195a6:	3701      	adds	r7, #1
   195a8:	f002 fa48 	bl	1ba3c <xTaskGenericCreate>
   195ac:	2800      	cmp	r0, #0
   195ae:	d1e8      	bne.n	19582 <scheduler_init_all(bool)+0x26>
   195b0:	6a68      	ldr	r0, [r5, #36]	; 0x24
   195b2:	4920      	ldr	r1, [pc, #128]	; (19634 <scheduler_init_all(bool)+0xd8>)
   195b4:	f7ff feae 	bl	19314 <printline(char const*, char const*)>
   195b8:	2601      	movs	r6, #1
   195ba:	e7e2      	b.n	19582 <scheduler_init_all(bool)+0x26>
   195bc:	4638      	mov	r0, r7
   195be:	4621      	mov	r1, r4
   195c0:	f001 fffd 	bl	1b5be <xQueueCreateCountingSemaphore>
   195c4:	4b1c      	ldr	r3, [pc, #112]	; (19638 <scheduler_init_all(bool)+0xdc>)
   195c6:	6018      	str	r0, [r3, #0]
   195c8:	b920      	cbnz	r0, 195d4 <scheduler_init_all(bool)+0x78>
   195ca:	481c      	ldr	r0, [pc, #112]	; (1963c <scheduler_init_all(bool)+0xe0>)
   195cc:	4621      	mov	r1, r4
   195ce:	f7ff fea1 	bl	19314 <printline(char const*, char const*)>
   195d2:	2601      	movs	r6, #1
   195d4:	481a      	ldr	r0, [pc, #104]	; (19640 <scheduler_init_all(bool)+0xe4>)
   195d6:	2100      	movs	r1, #0
   195d8:	f7ff fef6 	bl	193c8 <dbg_print(char const*, char const*)>
   195dc:	f8d8 4000 	ldr.w	r4, [r8]
   195e0:	b16c      	cbz	r4, 195fe <scheduler_init_all(bool)+0xa2>
   195e2:	6825      	ldr	r5, [r4, #0]
   195e4:	6864      	ldr	r4, [r4, #4]
   195e6:	682b      	ldr	r3, [r5, #0]
   195e8:	4628      	mov	r0, r5
   195ea:	689b      	ldr	r3, [r3, #8]
   195ec:	4798      	blx	r3
   195ee:	2800      	cmp	r0, #0
   195f0:	d1f6      	bne.n	195e0 <scheduler_init_all(bool)+0x84>
   195f2:	6a68      	ldr	r0, [r5, #36]	; 0x24
   195f4:	4913      	ldr	r1, [pc, #76]	; (19644 <scheduler_init_all(bool)+0xe8>)
   195f6:	f7ff fe8d 	bl	19314 <printline(char const*, char const*)>
   195fa:	2601      	movs	r6, #1
   195fc:	e7f0      	b.n	195e0 <scheduler_init_all(bool)+0x84>
   195fe:	4912      	ldr	r1, [pc, #72]	; (19648 <scheduler_init_all(bool)+0xec>)
   19600:	f8d8 3000 	ldr.w	r3, [r8]
   19604:	680a      	ldr	r2, [r1, #0]
   19606:	460d      	mov	r5, r1
   19608:	b133      	cbz	r3, 19618 <scheduler_init_all(bool)+0xbc>
   1960a:	cb09      	ldmia	r3, {r0, r3}
   1960c:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
   1960e:	42a1      	cmp	r1, r4
   19610:	bf84      	itt	hi
   19612:	6902      	ldrhi	r2, [r0, #16]
   19614:	460c      	movhi	r4, r1
   19616:	e7f7      	b.n	19608 <scheduler_init_all(bool)+0xac>
   19618:	602a      	str	r2, [r5, #0]
   1961a:	4630      	mov	r0, r6
   1961c:	b004      	add	sp, #16
   1961e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   19622:	bf00      	nop
   19624:	2007c974 	.word	0x2007c974
   19628:	00027156 	.word	0x00027156
   1962c:	00027184 	.word	0x00027184
   19630:	00019441 	.word	0x00019441
   19634:	0002719b 	.word	0x0002719b
   19638:	2007c96c 	.word	0x2007c96c
   1963c:	000271b6 	.word	0x000271b6
   19640:	000271d9 	.word	0x000271d9
   19644:	000271f4 	.word	0x000271f4
   19648:	2007c970 	.word	0x2007c970

0001964c <scheduler_add_task(scheduler_task*)>:
_Z18scheduler_add_taskP14scheduler_task():
   1964c:	b510      	push	{r4, lr}
   1964e:	4604      	mov	r4, r0
   19650:	b140      	cbz	r0, 19664 <scheduler_add_task(scheduler_task*)+0x18>
   19652:	2008      	movs	r0, #8
   19654:	f7f6 fe0c 	bl	10270 <operator new(unsigned int)>
   19658:	b120      	cbz	r0, 19664 <scheduler_add_task(scheduler_task*)+0x18>
   1965a:	4a03      	ldr	r2, [pc, #12]	; (19668 <scheduler_add_task(scheduler_task*)+0x1c>)
   1965c:	6004      	str	r4, [r0, #0]
   1965e:	6811      	ldr	r1, [r2, #0]
   19660:	6010      	str	r0, [r2, #0]
   19662:	6041      	str	r1, [r0, #4]
   19664:	bd10      	pop	{r4, pc}
   19666:	bf00      	nop
   19668:	2007c974 	.word	0x2007c974

0001966c <scheduler_start(bool, bool)>:
_Z15scheduler_startbb():
   1966c:	4b0c      	ldr	r3, [pc, #48]	; (196a0 <scheduler_start(bool, bool)+0x34>)
   1966e:	b510      	push	{r4, lr}
   19670:	7018      	strb	r0, [r3, #0]
   19672:	4608      	mov	r0, r1
   19674:	f7ff ff72 	bl	1955c <scheduler_init_all(bool)>
   19678:	4604      	mov	r4, r0
   1967a:	b950      	cbnz	r0, 19692 <scheduler_start(bool, bool)+0x26>
   1967c:	4809      	ldr	r0, [pc, #36]	; (196a4 <scheduler_start(bool, bool)+0x38>)
   1967e:	4621      	mov	r1, r4
   19680:	f7ff fea2 	bl	193c8 <dbg_print(char const*, char const*)>
   19684:	f002 fe82 	bl	1c38c <vTaskResetRunTimeStats>
   19688:	f002 faaa 	bl	1bbe0 <vTaskStartScheduler>
   1968c:	4806      	ldr	r0, [pc, #24]	; (196a8 <scheduler_start(bool, bool)+0x3c>)
   1968e:	4621      	mov	r1, r4
   19690:	e001      	b.n	19696 <scheduler_start(bool, bool)+0x2a>
   19692:	4806      	ldr	r0, [pc, #24]	; (196ac <scheduler_start(bool, bool)+0x40>)
   19694:	2100      	movs	r1, #0
   19696:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   1969a:	f7ff be3b 	b.w	19314 <printline(char const*, char const*)>
   1969e:	bf00      	nop
   196a0:	2007c960 	.word	0x2007c960
   196a4:	00027208 	.word	0x00027208
   196a8:	00027223 	.word	0x00027223
   196ac:	00027247 	.word	0x00027247

000196b0 <scheduler_task::scheduler_task(char const*, unsigned long, unsigned char, void*)>:
_ZN14scheduler_taskC2EPKcmhPv():
   196b0:	b570      	push	{r4, r5, r6, lr}
   196b2:	4d0b      	ldr	r5, [pc, #44]	; (196e0 <scheduler_task::scheduler_task(char const*, unsigned long, unsigned char, void*)+0x30>)
   196b4:	6241      	str	r1, [r0, #36]	; 0x24
   196b6:	6005      	str	r5, [r0, #0]
   196b8:	9904      	ldr	r1, [sp, #16]
   196ba:	2500      	movs	r5, #0
   196bc:	6045      	str	r5, [r0, #4]
   196be:	6085      	str	r5, [r0, #8]
   196c0:	f44f 767a 	mov.w	r6, #1000	; 0x3e8
   196c4:	6105      	str	r5, [r0, #16]
   196c6:	6145      	str	r5, [r0, #20]
   196c8:	6185      	str	r5, [r0, #24]
   196ca:	61c5      	str	r5, [r0, #28]
   196cc:	f64e 2560 	movw	r5, #60000	; 0xea60
   196d0:	60c6      	str	r6, [r0, #12]
   196d2:	6205      	str	r5, [r0, #32]
   196d4:	6281      	str	r1, [r0, #40]	; 0x28
   196d6:	62c2      	str	r2, [r0, #44]	; 0x2c
   196d8:	f880 3030 	strb.w	r3, [r0, #48]	; 0x30
   196dc:	bd70      	pop	{r4, r5, r6, pc}
   196de:	bf00      	nop
   196e0:	00025de0 	.word	0x00025de0

000196e4 <scheduler_task::getSharedObject(unsigned char)>:
_ZN14scheduler_task15getSharedObjectEh():
   196e4:	4b04      	ldr	r3, [pc, #16]	; (196f8 <scheduler_task::getSharedObject(unsigned char)+0x14>)
   196e6:	681a      	ldr	r2, [r3, #0]
   196e8:	4290      	cmp	r0, r2
   196ea:	bf3a      	itte	cc
   196ec:	685b      	ldrcc	r3, [r3, #4]
   196ee:	f853 0020 	ldrcc.w	r0, [r3, r0, lsl #2]
   196f2:	2000      	movcs	r0, #0
   196f4:	4770      	bx	lr
   196f6:	bf00      	nop
   196f8:	2007c964 	.word	0x2007c964

000196fc <str::str(char*, int)>:
_ZN3strC2EPci():
   196fc:	b510      	push	{r4, lr}
   196fe:	2301      	movs	r3, #1
   19700:	2a00      	cmp	r2, #0
   19702:	7003      	strb	r3, [r0, #0]
   19704:	f04f 0300 	mov.w	r3, #0
   19708:	bfcc      	ite	gt
   1970a:	f102 32ff 	addgt.w	r2, r2, #4294967295
   1970e:	461a      	movle	r2, r3
   19710:	4604      	mov	r4, r0
   19712:	6081      	str	r1, [r0, #8]
   19714:	60c3      	str	r3, [r0, #12]
   19716:	6103      	str	r3, [r0, #16]
   19718:	6042      	str	r2, [r0, #4]
   1971a:	4608      	mov	r0, r1
   1971c:	2100      	movs	r1, #0
   1971e:	f005 fa9e 	bl	1ec5e <memset>
   19722:	4620      	mov	r0, r4
   19724:	bd10      	pop	{r4, pc}

00019726 <str::~str()>:
_ZN3strD1Ev():
   19726:	b538      	push	{r3, r4, r5, lr}
   19728:	4604      	mov	r4, r0
   1972a:	6880      	ldr	r0, [r0, #8]
   1972c:	b118      	cbz	r0, 19736 <str::~str()+0x10>
   1972e:	7823      	ldrb	r3, [r4, #0]
   19730:	b90b      	cbnz	r3, 19736 <str::~str()+0x10>
   19732:	f005 fa4b 	bl	1ebcc <free>
   19736:	68e5      	ldr	r5, [r4, #12]
   19738:	b12d      	cbz	r5, 19746 <str::~str()+0x20>
   1973a:	4628      	mov	r0, r5
   1973c:	f7ff fff3 	bl	19726 <str::~str()>
   19740:	4628      	mov	r0, r5
   19742:	f7f6 fd97 	bl	10274 <operator delete(void*)>
   19746:	4620      	mov	r0, r4
   19748:	bd38      	pop	{r3, r4, r5, pc}

0001974a <str::getLen() const>:
_ZNK3str6getLenEv():
   1974a:	6880      	ldr	r0, [r0, #8]
   1974c:	f006 bab4 	b.w	1fcb8 <strlen>

00019750 <str::getCapacity() const>:
_ZNK3str11getCapacityEv():
   19750:	6840      	ldr	r0, [r0, #4]
   19752:	4770      	bx	lr

00019754 <str::clear()>:
_ZN3str5clearEv():
   19754:	6883      	ldr	r3, [r0, #8]
   19756:	2200      	movs	r2, #0
   19758:	701a      	strb	r2, [r3, #0]
   1975a:	4770      	bx	lr

0001975c <str::scanf(char const*, ...)>:
_ZN3str5scanfEPKcz():
   1975c:	b40e      	push	{r1, r2, r3}
   1975e:	b503      	push	{r0, r1, lr}
   19760:	aa03      	add	r2, sp, #12
   19762:	f852 1b04 	ldr.w	r1, [r2], #4
   19766:	6880      	ldr	r0, [r0, #8]
   19768:	9201      	str	r2, [sp, #4]
   1976a:	f009 f875 	bl	22858 <vsiscanf>
   1976e:	b002      	add	sp, #8
   19770:	f85d eb04 	ldr.w	lr, [sp], #4
   19774:	b003      	add	sp, #12
   19776:	4770      	bx	lr

00019778 <str::tokenize(char const*, int, ...)>:
_ZN3str8tokenizeEPKciz():
   19778:	b40c      	push	{r2, r3}
   1977a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   1977c:	2400      	movs	r4, #0
   1977e:	ab08      	add	r3, sp, #32
   19780:	ad02      	add	r5, sp, #8
   19782:	f853 6b04 	ldr.w	r6, [r3], #4
   19786:	f845 4d04 	str.w	r4, [r5, #-4]!
   1978a:	6880      	ldr	r0, [r0, #8]
   1978c:	462a      	mov	r2, r5
   1978e:	460f      	mov	r7, r1
   19790:	9300      	str	r3, [sp, #0]
   19792:	f007 f98c 	bl	20aae <strtok_r>
   19796:	b178      	cbz	r0, 197b8 <str::tokenize(char const*, int, ...)+0x40>
   19798:	1b33      	subs	r3, r6, r4
   1979a:	2b00      	cmp	r3, #0
   1979c:	dd0c      	ble.n	197b8 <str::tokenize(char const*, int, ...)+0x40>
   1979e:	9b00      	ldr	r3, [sp, #0]
   197a0:	1d1a      	adds	r2, r3, #4
   197a2:	681b      	ldr	r3, [r3, #0]
   197a4:	9200      	str	r2, [sp, #0]
   197a6:	b103      	cbz	r3, 197aa <str::tokenize(char const*, int, ...)+0x32>
   197a8:	6018      	str	r0, [r3, #0]
   197aa:	2000      	movs	r0, #0
   197ac:	4639      	mov	r1, r7
   197ae:	462a      	mov	r2, r5
   197b0:	f007 f97d 	bl	20aae <strtok_r>
   197b4:	3401      	adds	r4, #1
   197b6:	e7ee      	b.n	19796 <str::tokenize(char const*, int, ...)+0x1e>
   197b8:	4620      	mov	r0, r4
   197ba:	b003      	add	sp, #12
   197bc:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
   197c0:	b002      	add	sp, #8
   197c2:	4770      	bx	lr

000197c4 <str::compareTo(char const*) const>:
_ZNK3str9compareToEPKc():
   197c4:	b508      	push	{r3, lr}
   197c6:	4603      	mov	r3, r0
   197c8:	4608      	mov	r0, r1
   197ca:	6899      	ldr	r1, [r3, #8]
   197cc:	f006 fa62 	bl	1fc94 <strcmp>
   197d0:	f1d0 0001 	rsbs	r0, r0, #1
   197d4:	bf38      	it	cc
   197d6:	2000      	movcc	r0, #0
   197d8:	bd08      	pop	{r3, pc}

000197da <str::compareToIgnoreCase(char const*) const>:
_ZNK3str19compareToIgnoreCaseEPKc():
   197da:	b508      	push	{r3, lr}
   197dc:	6880      	ldr	r0, [r0, #8]
   197de:	f006 fa21 	bl	1fc24 <strcasecmp>
   197e2:	f1d0 0001 	rsbs	r0, r0, #1
   197e6:	bf38      	it	cc
   197e8:	2000      	movcc	r0, #0
   197ea:	bd08      	pop	{r3, pc}

000197ec <str::firstIndexOfIgnoreCase(char const*) const>:
_ZNK3str22firstIndexOfIgnoreCaseEPKc():
   197ec:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   197f0:	780f      	ldrb	r7, [r1, #0]
   197f2:	4688      	mov	r8, r1
   197f4:	2f00      	cmp	r7, #0
   197f6:	d03b      	beq.n	19870 <str::firstIndexOfIgnoreCase(char const*) const+0x84>
   197f8:	6884      	ldr	r4, [r0, #8]
   197fa:	f04f 35ff 	mov.w	r5, #4294967295
   197fe:	f994 3000 	ldrsb.w	r3, [r4]
   19802:	2b00      	cmp	r3, #0
   19804:	d036      	beq.n	19874 <str::firstIndexOfIgnoreCase(char const*) const+0x88>
   19806:	f994 3000 	ldrsb.w	r3, [r4]
   1980a:	2b00      	cmp	r3, #0
   1980c:	d032      	beq.n	19874 <str::firstIndexOfIgnoreCase(char const*) const+0x88>
   1980e:	b27d      	sxtb	r5, r7
   19810:	4628      	mov	r0, r5
   19812:	f007 fcf1 	bl	211f8 <tolower>
   19816:	4601      	mov	r1, r0
   19818:	4620      	mov	r0, r4
   1981a:	f006 fa2e 	bl	1fc7a <strchr>
   1981e:	b938      	cbnz	r0, 19830 <str::firstIndexOfIgnoreCase(char const*) const+0x44>
   19820:	4628      	mov	r0, r5
   19822:	f007 fcf5 	bl	21210 <toupper>
   19826:	4601      	mov	r1, r0
   19828:	4620      	mov	r0, r4
   1982a:	f006 fa26 	bl	1fc7a <strchr>
   1982e:	b1f8      	cbz	r0, 19870 <str::firstIndexOfIgnoreCase(char const*) const+0x84>
   19830:	1b05      	subs	r5, r0, r4
   19832:	4683      	mov	fp, r0
   19834:	1c44      	adds	r4, r0, #1
   19836:	f108 0601 	add.w	r6, r8, #1
   1983a:	f81b 0f01 	ldrb.w	r0, [fp, #1]!
   1983e:	46b1      	mov	r9, r6
   19840:	b198      	cbz	r0, 1986a <str::firstIndexOfIgnoreCase(char const*) const+0x7e>
   19842:	f896 a000 	ldrb.w	sl, [r6]
   19846:	3601      	adds	r6, #1
   19848:	f1ba 0f00 	cmp.w	sl, #0
   1984c:	d00d      	beq.n	1986a <str::firstIndexOfIgnoreCase(char const*) const+0x7e>
   1984e:	b240      	sxtb	r0, r0
   19850:	f007 fcd2 	bl	211f8 <tolower>
   19854:	4603      	mov	r3, r0
   19856:	fa4f f08a 	sxtb.w	r0, sl
   1985a:	9301      	str	r3, [sp, #4]
   1985c:	f007 fccc 	bl	211f8 <tolower>
   19860:	9b01      	ldr	r3, [sp, #4]
   19862:	4283      	cmp	r3, r0
   19864:	d0e9      	beq.n	1983a <str::firstIndexOfIgnoreCase(char const*) const+0x4e>
   19866:	f04f 35ff 	mov.w	r5, #4294967295
   1986a:	f999 3000 	ldrsb.w	r3, [r9]
   1986e:	e7c8      	b.n	19802 <str::firstIndexOfIgnoreCase(char const*) const+0x16>
   19870:	f04f 35ff 	mov.w	r5, #4294967295
   19874:	4628      	mov	r0, r5
   19876:	b003      	add	sp, #12
   19878:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001987c <str::containsIgnoreCase(char const*) const>:
_ZNK3str18containsIgnoreCaseEPKc():
   1987c:	b508      	push	{r3, lr}
   1987e:	f7ff ffb5 	bl	197ec <str::firstIndexOfIgnoreCase(char const*) const>
   19882:	3001      	adds	r0, #1
   19884:	bf18      	it	ne
   19886:	2001      	movne	r0, #1
   19888:	bd08      	pop	{r3, pc}

0001988a <str::firstIndexOf(char const*) const>:
_ZNK3str12firstIndexOfEPKc():
   1988a:	b510      	push	{r4, lr}
   1988c:	6884      	ldr	r4, [r0, #8]
   1988e:	4620      	mov	r0, r4
   19890:	f006 fa77 	bl	1fd82 <strstr>
   19894:	b108      	cbz	r0, 1989a <str::firstIndexOf(char const*) const+0x10>
   19896:	1b00      	subs	r0, r0, r4
   19898:	bd10      	pop	{r4, pc}
   1989a:	f04f 30ff 	mov.w	r0, #4294967295
   1989e:	bd10      	pop	{r4, pc}

000198a0 <str::beginsWith(char const*) const>:
_ZNK3str10beginsWithEPKc():
   198a0:	b570      	push	{r4, r5, r6, lr}
   198a2:	4604      	mov	r4, r0
   198a4:	4608      	mov	r0, r1
   198a6:	460e      	mov	r6, r1
   198a8:	f006 fa06 	bl	1fcb8 <strlen>
   198ac:	4605      	mov	r5, r0
   198ae:	4620      	mov	r0, r4
   198b0:	f7ff ff4b 	bl	1974a <str::getLen() const>
   198b4:	42a8      	cmp	r0, r5
   198b6:	db09      	blt.n	198cc <str::beginsWith(char const*) const+0x2c>
   198b8:	68a0      	ldr	r0, [r4, #8]
   198ba:	4631      	mov	r1, r6
   198bc:	462a      	mov	r2, r5
   198be:	f006 fa25 	bl	1fd0c <strncmp>
   198c2:	f1d0 0001 	rsbs	r0, r0, #1
   198c6:	bf38      	it	cc
   198c8:	2000      	movcc	r0, #0
   198ca:	bd70      	pop	{r4, r5, r6, pc}
   198cc:	2000      	movs	r0, #0
   198ce:	bd70      	pop	{r4, r5, r6, pc}

000198d0 <str::beginsWithIgnoreCase(char const*) const>:
_ZNK3str20beginsWithIgnoreCaseEPKc():
   198d0:	b570      	push	{r4, r5, r6, lr}
   198d2:	4604      	mov	r4, r0
   198d4:	4608      	mov	r0, r1
   198d6:	460e      	mov	r6, r1
   198d8:	f006 f9ee 	bl	1fcb8 <strlen>
   198dc:	4605      	mov	r5, r0
   198de:	4620      	mov	r0, r4
   198e0:	f7ff ff33 	bl	1974a <str::getLen() const>
   198e4:	42a8      	cmp	r0, r5
   198e6:	db09      	blt.n	198fc <str::beginsWithIgnoreCase(char const*) const+0x2c>
   198e8:	4630      	mov	r0, r6
   198ea:	68a1      	ldr	r1, [r4, #8]
   198ec:	462a      	mov	r2, r5
   198ee:	f006 f9eb 	bl	1fcc8 <strncasecmp>
   198f2:	f1d0 0001 	rsbs	r0, r0, #1
   198f6:	bf38      	it	cc
   198f8:	2000      	movcc	r0, #0
   198fa:	bd70      	pop	{r4, r5, r6, pc}
   198fc:	2000      	movs	r0, #0
   198fe:	bd70      	pop	{r4, r5, r6, pc}

00019900 <str::beginsWithWholeWordIgnoreCase(char const*, char) const>:
_ZNK3str29beginsWithWholeWordIgnoreCaseEPKcc():
   19900:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   19902:	4604      	mov	r4, r0
   19904:	4608      	mov	r0, r1
   19906:	460d      	mov	r5, r1
   19908:	4617      	mov	r7, r2
   1990a:	f006 f9d5 	bl	1fcb8 <strlen>
   1990e:	4606      	mov	r6, r0
   19910:	4620      	mov	r0, r4
   19912:	f7ff ff1a 	bl	1974a <str::getLen() const>
   19916:	4286      	cmp	r6, r0
   19918:	dc0e      	bgt.n	19938 <str::beginsWithWholeWordIgnoreCase(char const*, char) const+0x38>
   1991a:	68a3      	ldr	r3, [r4, #8]
   1991c:	4620      	mov	r0, r4
   1991e:	4629      	mov	r1, r5
   19920:	5d9e      	ldrb	r6, [r3, r6]
   19922:	f7ff ffd5 	bl	198d0 <str::beginsWithIgnoreCase(char const*) const>
   19926:	b140      	cbz	r0, 1993a <str::beginsWithWholeWordIgnoreCase(char const*, char) const+0x3a>
   19928:	b273      	sxtb	r3, r6
   1992a:	429f      	cmp	r7, r3
   1992c:	d005      	beq.n	1993a <str::beginsWithWholeWordIgnoreCase(char const*, char) const+0x3a>
   1992e:	f1d3 0001 	rsbs	r0, r3, #1
   19932:	bf38      	it	cc
   19934:	2000      	movcc	r0, #0
   19936:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   19938:	2000      	movs	r0, #0
   1993a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0001993c <str::eraseFirst(int)>:
_ZN3str10eraseFirstEi():
   1993c:	b538      	push	{r3, r4, r5, lr}
   1993e:	460c      	mov	r4, r1
   19940:	4605      	mov	r5, r0
   19942:	f7ff ff02 	bl	1974a <str::getLen() const>
   19946:	2c00      	cmp	r4, #0
   19948:	4602      	mov	r2, r0
   1994a:	dd09      	ble.n	19960 <str::eraseFirst(int)+0x24>
   1994c:	4284      	cmp	r4, r0
   1994e:	dc07      	bgt.n	19960 <str::eraseFirst(int)+0x24>
   19950:	68a8      	ldr	r0, [r5, #8]
   19952:	1b12      	subs	r2, r2, r4
   19954:	1901      	adds	r1, r0, r4
   19956:	3201      	adds	r2, #1
   19958:	f005 f966 	bl	1ec28 <memmove>
   1995c:	2001      	movs	r0, #1
   1995e:	bd38      	pop	{r3, r4, r5, pc}
   19960:	2000      	movs	r0, #0
   19962:	bd38      	pop	{r3, r4, r5, pc}

00019964 <str::eraseLast(int)>:
_ZN3str9eraseLastEi():
   19964:	b538      	push	{r3, r4, r5, lr}
   19966:	460c      	mov	r4, r1
   19968:	4605      	mov	r5, r0
   1996a:	f7ff feee 	bl	1974a <str::getLen() const>
   1996e:	4284      	cmp	r4, r0
   19970:	f04f 0300 	mov.w	r3, #0
   19974:	dc04      	bgt.n	19980 <str::eraseLast(int)+0x1c>
   19976:	68aa      	ldr	r2, [r5, #8]
   19978:	1b04      	subs	r4, r0, r4
   1997a:	5513      	strb	r3, [r2, r4]
   1997c:	2001      	movs	r0, #1
   1997e:	bd38      	pop	{r3, r4, r5, pc}
   19980:	4618      	mov	r0, r3
   19982:	bd38      	pop	{r3, r4, r5, pc}

00019984 <str::eraseAfter(int, int)>:
_ZN3str10eraseAfterEii():
   19984:	b570      	push	{r4, r5, r6, lr}
   19986:	460c      	mov	r4, r1
   19988:	4606      	mov	r6, r0
   1998a:	4615      	mov	r5, r2
   1998c:	f7ff fedd 	bl	1974a <str::getLen() const>
   19990:	2c00      	cmp	r4, #0
   19992:	db11      	blt.n	199b8 <str::eraseAfter(int, int)+0x34>
   19994:	4284      	cmp	r4, r0
   19996:	da0f      	bge.n	199b8 <str::eraseAfter(int, int)+0x34>
   19998:	2d00      	cmp	r5, #0
   1999a:	dd0d      	ble.n	199b8 <str::eraseAfter(int, int)+0x34>
   1999c:	1b02      	subs	r2, r0, r4
   1999e:	68b3      	ldr	r3, [r6, #8]
   199a0:	42aa      	cmp	r2, r5
   199a2:	bfb8      	it	lt
   199a4:	4615      	movlt	r5, r2
   199a6:	1929      	adds	r1, r5, r4
   199a8:	1b52      	subs	r2, r2, r5
   199aa:	1918      	adds	r0, r3, r4
   199ac:	4419      	add	r1, r3
   199ae:	3201      	adds	r2, #1
   199b0:	f005 f93a 	bl	1ec28 <memmove>
   199b4:	2001      	movs	r0, #1
   199b6:	bd70      	pop	{r4, r5, r6, pc}
   199b8:	2000      	movs	r0, #0
   199ba:	bd70      	pop	{r4, r5, r6, pc}

000199bc <str::erase(char const*)>:
_ZN3str5eraseEPKc():
   199bc:	b570      	push	{r4, r5, r6, lr}
   199be:	4605      	mov	r5, r0
   199c0:	460e      	mov	r6, r1
   199c2:	f7ff ff62 	bl	1988a <str::firstIndexOf(char const*) const>
   199c6:	1c43      	adds	r3, r0, #1
   199c8:	4604      	mov	r4, r0
   199ca:	d009      	beq.n	199e0 <str::erase(char const*)+0x24>
   199cc:	4630      	mov	r0, r6
   199ce:	f006 f973 	bl	1fcb8 <strlen>
   199d2:	4621      	mov	r1, r4
   199d4:	4602      	mov	r2, r0
   199d6:	4628      	mov	r0, r5
   199d8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
   199dc:	f7ff bfd2 	b.w	19984 <str::eraseAfter(int, int)>
   199e0:	2000      	movs	r0, #0
   199e2:	bd70      	pop	{r4, r5, r6, pc}

000199e4 <str::eraseFirstWords(int, char)>:
_ZN3str15eraseFirstWordsEic():
   199e4:	b570      	push	{r4, r5, r6, lr}
   199e6:	2400      	movs	r4, #0
   199e8:	6886      	ldr	r6, [r0, #8]
   199ea:	4623      	mov	r3, r4
   199ec:	5cf5      	ldrb	r5, [r6, r3]
   199ee:	b155      	cbz	r5, 19a06 <str::eraseFirstWords(int, char)+0x22>
   199f0:	428c      	cmp	r4, r1
   199f2:	d005      	beq.n	19a00 <str::eraseFirstWords(int, char)+0x1c>
   199f4:	b26d      	sxtb	r5, r5
   199f6:	4295      	cmp	r5, r2
   199f8:	bf08      	it	eq
   199fa:	3401      	addeq	r4, #1
   199fc:	3301      	adds	r3, #1
   199fe:	e7f5      	b.n	199ec <str::eraseFirstWords(int, char)+0x8>
   19a00:	4619      	mov	r1, r3
   19a02:	f7ff ff9b 	bl	1993c <str::eraseFirst(int)>
   19a06:	1c20      	adds	r0, r4, #0
   19a08:	bf18      	it	ne
   19a0a:	2001      	movne	r0, #1
   19a0c:	bd70      	pop	{r4, r5, r6, pc}

00019a0e <str::trimStart(char const*)>:
_ZN3str9trimStartEPKc():
   19a0e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   19a10:	4606      	mov	r6, r0
   19a12:	460d      	mov	r5, r1
   19a14:	f7ff fe99 	bl	1974a <str::getLen() const>
   19a18:	2400      	movs	r4, #0
   19a1a:	4607      	mov	r7, r0
   19a1c:	42bc      	cmp	r4, r7
   19a1e:	da0e      	bge.n	19a3e <str::trimStart(char const*)+0x30>
   19a20:	4628      	mov	r0, r5
   19a22:	f006 f949 	bl	1fcb8 <strlen>
   19a26:	2300      	movs	r3, #0
   19a28:	4283      	cmp	r3, r0
   19a2a:	da08      	bge.n	19a3e <str::trimStart(char const*)+0x30>
   19a2c:	68b2      	ldr	r2, [r6, #8]
   19a2e:	56e9      	ldrsb	r1, [r5, r3]
   19a30:	5712      	ldrsb	r2, [r2, r4]
   19a32:	4291      	cmp	r1, r2
   19a34:	d101      	bne.n	19a3a <str::trimStart(char const*)+0x2c>
   19a36:	3401      	adds	r4, #1
   19a38:	e7f0      	b.n	19a1c <str::trimStart(char const*)+0xe>
   19a3a:	3301      	adds	r3, #1
   19a3c:	e7f4      	b.n	19a28 <str::trimStart(char const*)+0x1a>
   19a3e:	b904      	cbnz	r4, 19a42 <str::trimStart(char const*)+0x34>
   19a40:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   19a42:	4630      	mov	r0, r6
   19a44:	4621      	mov	r1, r4
   19a46:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
   19a4a:	f7ff bf77 	b.w	1993c <str::eraseFirst(int)>

00019a4e <str::trimEnd(char const*)>:
_ZN3str7trimEndEPKc():
   19a4e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   19a50:	4604      	mov	r4, r0
   19a52:	4608      	mov	r0, r1
   19a54:	460d      	mov	r5, r1
   19a56:	f006 f92f 	bl	1fcb8 <strlen>
   19a5a:	4606      	mov	r6, r0
   19a5c:	4620      	mov	r0, r4
   19a5e:	f7ff fe74 	bl	1974a <str::getLen() const>
   19a62:	1e43      	subs	r3, r0, #1
   19a64:	2b00      	cmp	r3, #0
   19a66:	db0f      	blt.n	19a88 <str::trimEnd(char const*)+0x3a>
   19a68:	2200      	movs	r2, #0
   19a6a:	42b2      	cmp	r2, r6
   19a6c:	da0b      	bge.n	19a86 <str::trimEnd(char const*)+0x38>
   19a6e:	68a1      	ldr	r1, [r4, #8]
   19a70:	56af      	ldrsb	r7, [r5, r2]
   19a72:	18c8      	adds	r0, r1, r3
   19a74:	56c9      	ldrsb	r1, [r1, r3]
   19a76:	428f      	cmp	r7, r1
   19a78:	d103      	bne.n	19a82 <str::trimEnd(char const*)+0x34>
   19a7a:	2200      	movs	r2, #0
   19a7c:	7002      	strb	r2, [r0, #0]
   19a7e:	3b01      	subs	r3, #1
   19a80:	e7f0      	b.n	19a64 <str::trimEnd(char const*)+0x16>
   19a82:	3201      	adds	r2, #1
   19a84:	e7f1      	b.n	19a6a <str::trimEnd(char const*)+0x1c>
   19a86:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   19a88:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00019a8a <str::operator==(char const*) const>:
_ZNK3streqEPKc():
   19a8a:	f7ff be9b 	b.w	197c4 <str::compareTo(char const*) const>

00019a8e <str::operator()() const>:
_ZNK3strclEv():
   19a8e:	6880      	ldr	r0, [r0, #8]
   19a90:	4770      	bx	lr

00019a92 <str::operator int() const>:
_ZNK3strcviEv():
   19a92:	6880      	ldr	r0, [r0, #8]
   19a94:	f004 bf53 	b.w	1e93e <atoi>

00019a98 <str::operator[](int)>:
_ZN3strixEi():
   19a98:	b538      	push	{r3, r4, r5, lr}
   19a9a:	460c      	mov	r4, r1
   19a9c:	4605      	mov	r5, r0
   19a9e:	f7ff fe54 	bl	1974a <str::getLen() const>
   19aa2:	4284      	cmp	r4, r0
   19aa4:	68a8      	ldr	r0, [r5, #8]
   19aa6:	bfb8      	it	lt
   19aa8:	1900      	addlt	r0, r0, r4
   19aaa:	bd38      	pop	{r3, r4, r5, pc}

00019aac <str::reAllocateMem(int)>:
_ZN3str13reAllocateMemEi():
   19aac:	7803      	ldrb	r3, [r0, #0]
   19aae:	b570      	push	{r4, r5, r6, lr}
   19ab0:	4604      	mov	r4, r0
   19ab2:	b9fb      	cbnz	r3, 19af4 <str::reAllocateMem(int)+0x48>
   19ab4:	b109      	cbz	r1, 19aba <str::reAllocateMem(int)+0xe>
   19ab6:	3101      	adds	r1, #1
   19ab8:	e000      	b.n	19abc <str::reAllocateMem(int)+0x10>
   19aba:	2104      	movs	r1, #4
   19abc:	2510      	movs	r5, #16
   19abe:	fb91 f1f5 	sdiv	r1, r1, r5
   19ac2:	1c4d      	adds	r5, r1, #1
   19ac4:	68a6      	ldr	r6, [r4, #8]
   19ac6:	012d      	lsls	r5, r5, #4
   19ac8:	6065      	str	r5, [r4, #4]
   19aca:	b94e      	cbnz	r6, 19ae0 <str::reAllocateMem(int)+0x34>
   19acc:	4628      	mov	r0, r5
   19ace:	f005 f875 	bl	1ebbc <malloc>
   19ad2:	60a0      	str	r0, [r4, #8]
   19ad4:	b148      	cbz	r0, 19aea <str::reAllocateMem(int)+0x3e>
   19ad6:	4631      	mov	r1, r6
   19ad8:	462a      	mov	r2, r5
   19ada:	f005 f8c0 	bl	1ec5e <memset>
   19ade:	e004      	b.n	19aea <str::reAllocateMem(int)+0x3e>
   19ae0:	4630      	mov	r0, r6
   19ae2:	1c69      	adds	r1, r5, #1
   19ae4:	f005 fea6 	bl	1f834 <realloc>
   19ae8:	60a0      	str	r0, [r4, #8]
   19aea:	68a0      	ldr	r0, [r4, #8]
   19aec:	3000      	adds	r0, #0
   19aee:	bf18      	it	ne
   19af0:	2001      	movne	r0, #1
   19af2:	bd70      	pop	{r4, r5, r6, pc}
   19af4:	2000      	movs	r0, #0
   19af6:	bd70      	pop	{r4, r5, r6, pc}

00019af8 <str::init(int)>:
_ZN3str4initEi():
   19af8:	2200      	movs	r2, #0
   19afa:	7002      	strb	r2, [r0, #0]
   19afc:	6042      	str	r2, [r0, #4]
   19afe:	6082      	str	r2, [r0, #8]
   19b00:	60c2      	str	r2, [r0, #12]
   19b02:	6102      	str	r2, [r0, #16]
   19b04:	f7ff bfd2 	b.w	19aac <str::reAllocateMem(int)>

00019b08 <str::str(int)>:
_ZN3strC1Ei():
   19b08:	b510      	push	{r4, lr}
   19b0a:	4604      	mov	r4, r0
   19b0c:	f7ff fff4 	bl	19af8 <str::init(int)>
   19b10:	4620      	mov	r0, r4
   19b12:	bd10      	pop	{r4, pc}

00019b14 <str::reserve(int)>:
_ZN3str7reserveEi():
   19b14:	6843      	ldr	r3, [r0, #4]
   19b16:	428b      	cmp	r3, r1
   19b18:	da01      	bge.n	19b1e <str::reserve(int)+0xa>
   19b1a:	f7ff bfc7 	b.w	19aac <str::reAllocateMem(int)>
   19b1e:	2001      	movs	r0, #1
   19b20:	4770      	bx	lr

00019b22 <str::printf(char const*, ...)>:
_ZN3str6printfEPKcz():
   19b22:	b40e      	push	{r1, r2, r3}
   19b24:	b5f3      	push	{r0, r1, r4, r5, r6, r7, lr}
   19b26:	ab07      	add	r3, sp, #28
   19b28:	f853 6b04 	ldr.w	r6, [r3], #4
   19b2c:	4605      	mov	r5, r0
   19b2e:	9300      	str	r3, [sp, #0]
   19b30:	2400      	movs	r4, #0
   19b32:	68a8      	ldr	r0, [r5, #8]
   19b34:	b180      	cbz	r0, 19b58 <str::printf(char const*, ...)+0x36>
   19b36:	686f      	ldr	r7, [r5, #4]
   19b38:	9b00      	ldr	r3, [sp, #0]
   19b3a:	3701      	adds	r7, #1
   19b3c:	4639      	mov	r1, r7
   19b3e:	4632      	mov	r2, r6
   19b40:	9301      	str	r3, [sp, #4]
   19b42:	f008 fe55 	bl	227f0 <vsniprintf>
   19b46:	42b8      	cmp	r0, r7
   19b48:	4604      	mov	r4, r0
   19b4a:	db05      	blt.n	19b58 <str::printf(char const*, ...)+0x36>
   19b4c:	4628      	mov	r0, r5
   19b4e:	1c61      	adds	r1, r4, #1
   19b50:	f7ff ffe0 	bl	19b14 <str::reserve(int)>
   19b54:	2800      	cmp	r0, #0
   19b56:	d1ec      	bne.n	19b32 <str::printf(char const*, ...)+0x10>
   19b58:	4620      	mov	r0, r4
   19b5a:	b002      	add	sp, #8
   19b5c:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
   19b60:	b003      	add	sp, #12
   19b62:	4770      	bx	lr

00019b64 <str::ensureMemoryToInsertNChars(int)>:
_ZN3str26ensureMemoryToInsertNCharsEi():
   19b64:	b538      	push	{r3, r4, r5, lr}
   19b66:	4604      	mov	r4, r0
   19b68:	460d      	mov	r5, r1
   19b6a:	f7ff fdee 	bl	1974a <str::getLen() const>
   19b6e:	6863      	ldr	r3, [r4, #4]
   19b70:	1829      	adds	r1, r5, r0
   19b72:	428b      	cmp	r3, r1
   19b74:	da05      	bge.n	19b82 <str::ensureMemoryToInsertNChars(int)+0x1e>
   19b76:	4620      	mov	r0, r4
   19b78:	3120      	adds	r1, #32
   19b7a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   19b7e:	f7ff bf95 	b.w	19aac <str::reAllocateMem(int)>
   19b82:	2001      	movs	r0, #1
   19b84:	bd38      	pop	{r3, r4, r5, pc}

00019b86 <str::insertAtEnd(char const*)>:
_ZN3str11insertAtEndEPKc():
   19b86:	b538      	push	{r3, r4, r5, lr}
   19b88:	4604      	mov	r4, r0
   19b8a:	4608      	mov	r0, r1
   19b8c:	460d      	mov	r5, r1
   19b8e:	f006 f893 	bl	1fcb8 <strlen>
   19b92:	4601      	mov	r1, r0
   19b94:	4620      	mov	r0, r4
   19b96:	f7ff ffe5 	bl	19b64 <str::ensureMemoryToInsertNChars(int)>
   19b9a:	b120      	cbz	r0, 19ba6 <str::insertAtEnd(char const*)+0x20>
   19b9c:	68a0      	ldr	r0, [r4, #8]
   19b9e:	4629      	mov	r1, r5
   19ba0:	f006 f85e 	bl	1fc60 <strcat>
   19ba4:	2001      	movs	r0, #1
   19ba6:	bd38      	pop	{r3, r4, r5, pc}

00019ba8 <str::operator+=(char)>:
_ZN3strpLEc():
   19ba8:	b507      	push	{r0, r1, r2, lr}
   19baa:	2300      	movs	r3, #0
   19bac:	f8ad 3004 	strh.w	r3, [sp, #4]
   19bb0:	ab02      	add	r3, sp, #8
   19bb2:	f803 1d04 	strb.w	r1, [r3, #-4]!
   19bb6:	4619      	mov	r1, r3
   19bb8:	f7ff ffe5 	bl	19b86 <str::insertAtEnd(char const*)>
   19bbc:	b003      	add	sp, #12
   19bbe:	f85d fb04 	ldr.w	pc, [sp], #4

00019bc2 <str::copyFrom(char const*)>:
_ZN3str8copyFromEPKc():
   19bc2:	b570      	push	{r4, r5, r6, lr}
   19bc4:	4604      	mov	r4, r0
   19bc6:	4608      	mov	r0, r1
   19bc8:	460d      	mov	r5, r1
   19bca:	f006 f875 	bl	1fcb8 <strlen>
   19bce:	6863      	ldr	r3, [r4, #4]
   19bd0:	4601      	mov	r1, r0
   19bd2:	4298      	cmp	r0, r3
   19bd4:	dd0d      	ble.n	19bf2 <str::copyFrom(char const*)+0x30>
   19bd6:	4620      	mov	r0, r4
   19bd8:	f7ff ff68 	bl	19aac <str::reAllocateMem(int)>
   19bdc:	4606      	mov	r6, r0
   19bde:	b940      	cbnz	r0, 19bf2 <str::copyFrom(char const*)+0x30>
   19be0:	6862      	ldr	r2, [r4, #4]
   19be2:	68a0      	ldr	r0, [r4, #8]
   19be4:	4629      	mov	r1, r5
   19be6:	f006 f8a7 	bl	1fd38 <strncpy>
   19bea:	68a2      	ldr	r2, [r4, #8]
   19bec:	6863      	ldr	r3, [r4, #4]
   19bee:	54d6      	strb	r6, [r2, r3]
   19bf0:	bd70      	pop	{r4, r5, r6, pc}
   19bf2:	68a0      	ldr	r0, [r4, #8]
   19bf4:	4629      	mov	r1, r5
   19bf6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
   19bfa:	f006 b855 	b.w	1fca8 <strcpy>

00019bfe <str::operator=(char const*)>:
_ZN3straSEPKc():
   19bfe:	f7ff bfe0 	b.w	19bc2 <str::copyFrom(char const*)>

00019c02 <delay_us>:
delay_us():
   19c02:	b570      	push	{r4, r5, r6, lr}
   19c04:	4606      	mov	r6, r0
   19c06:	f002 febd 	bl	1c984 <sys_get_uptime_us>
   19c0a:	1984      	adds	r4, r0, r6
   19c0c:	f141 0500 	adc.w	r5, r1, #0
   19c10:	f002 feb8 	bl	1c984 <sys_get_uptime_us>
   19c14:	42a9      	cmp	r1, r5
   19c16:	bf08      	it	eq
   19c18:	42a0      	cmpeq	r0, r4
   19c1a:	d3f9      	bcc.n	19c10 <delay_us+0xe>
   19c1c:	bd70      	pop	{r4, r5, r6, pc}

00019c1e <is_freertos_running>:
is_freertos_running():
   19c1e:	b508      	push	{r3, lr}
   19c20:	f002 fb26 	bl	1c270 <xTaskGetSchedulerState>
   19c24:	1e83      	subs	r3, r0, #2
   19c26:	4258      	negs	r0, r3
   19c28:	4158      	adcs	r0, r3
   19c2a:	bd08      	pop	{r3, pc}

00019c2c <delay_ms>:
delay_ms():
   19c2c:	b510      	push	{r4, lr}
   19c2e:	4604      	mov	r4, r0
   19c30:	f7ff fff5 	bl	19c1e <is_freertos_running>
   19c34:	b120      	cbz	r0, 19c40 <delay_ms+0x14>
   19c36:	4620      	mov	r0, r4
   19c38:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   19c3c:	f002 b946 	b.w	1becc <vTaskDelay>
   19c40:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
   19c44:	4360      	muls	r0, r4
   19c46:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   19c4a:	f7ff bfda 	b.w	19c02 <delay_us>
	...

00019c50 <adc0_start_conversion>:
adc0_start_conversion():
   19c50:	2101      	movs	r1, #1
   19c52:	fa01 f000 	lsl.w	r0, r1, r0
   19c56:	4b06      	ldr	r3, [pc, #24]	; (19c70 <adc0_start_conversion+0x20>)
   19c58:	681a      	ldr	r2, [r3, #0]
   19c5a:	f022 62e0 	bic.w	r2, r2, #117440512	; 0x7000000
   19c5e:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
   19c62:	601a      	str	r2, [r3, #0]
   19c64:	681a      	ldr	r2, [r3, #0]
   19c66:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
   19c6a:	4302      	orrs	r2, r0
   19c6c:	601a      	str	r2, [r3, #0]
   19c6e:	4770      	bx	lr
   19c70:	40034000 	.word	0x40034000

00019c74 <ADC_IRQHandler>:
ADC_IRQHandler():
   19c74:	b507      	push	{r0, r1, r2, lr}
   19c76:	2300      	movs	r3, #0
   19c78:	4a0a      	ldr	r2, [pc, #40]	; (19ca4 <ADC_IRQHandler+0x30>)
   19c7a:	9301      	str	r3, [sp, #4]
   19c7c:	6852      	ldr	r2, [r2, #4]
   19c7e:	a902      	add	r1, sp, #8
   19c80:	f3c2 120b 	ubfx	r2, r2, #4, #12
   19c84:	f821 2d06 	strh.w	r2, [r1, #-6]!
   19c88:	4a07      	ldr	r2, [pc, #28]	; (19ca8 <ADC_IRQHandler+0x34>)
   19c8a:	6810      	ldr	r0, [r2, #0]
   19c8c:	aa01      	add	r2, sp, #4
   19c8e:	f001 fd36 	bl	1b6fe <xQueueGenericSendFromISR>
   19c92:	9b01      	ldr	r3, [sp, #4]
   19c94:	b11b      	cbz	r3, 19c9e <ADC_IRQHandler+0x2a>
   19c96:	4b05      	ldr	r3, [pc, #20]	; (19cac <ADC_IRQHandler+0x38>)
   19c98:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   19c9c:	601a      	str	r2, [r3, #0]
   19c9e:	b003      	add	sp, #12
   19ca0:	f85d fb04 	ldr.w	pc, [sp], #4
   19ca4:	40034000 	.word	0x40034000
   19ca8:	2007c978 	.word	0x2007c978
   19cac:	e000ed04 	.word	0xe000ed04

00019cb0 <adc0_init>:
adc0_init():
   19cb0:	b510      	push	{r4, lr}
   19cb2:	f002 ffd5 	bl	1cc60 <sys_get_cpu_clock>
   19cb6:	2101      	movs	r1, #1
   19cb8:	08c4      	lsrs	r4, r0, #3
   19cba:	200c      	movs	r0, #12
   19cbc:	f002 fe04 	bl	1c8c8 <lpc_pconp>
   19cc0:	200c      	movs	r0, #12
   19cc2:	2103      	movs	r1, #3
   19cc4:	f002 fe18 	bl	1c8f8 <lpc_pclk>
   19cc8:	4a11      	ldr	r2, [pc, #68]	; (19d10 <adc0_init+0x60>)
   19cca:	f44f 1300 	mov.w	r3, #2097152	; 0x200000
   19cce:	6013      	str	r3, [r2, #0]
   19cd0:	2302      	movs	r3, #2
   19cd2:	4910      	ldr	r1, [pc, #64]	; (19d14 <adc0_init+0x64>)
   19cd4:	fbb4 f0f3 	udiv	r0, r4, r3
   19cd8:	4288      	cmp	r0, r1
   19cda:	d804      	bhi.n	19ce6 <adc0_init+0x36>
   19cdc:	6811      	ldr	r1, [r2, #0]
   19cde:	ea41 2303 	orr.w	r3, r1, r3, lsl #8
   19ce2:	6013      	str	r3, [r2, #0]
   19ce4:	e003      	b.n	19cee <adc0_init+0x3e>
   19ce6:	3302      	adds	r3, #2
   19ce8:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
   19cec:	d1f1      	bne.n	19cd2 <adc0_init+0x22>
   19cee:	2001      	movs	r0, #1
   19cf0:	f001 fcdf 	bl	1b6b2 <xQueueCreateMutex>
   19cf4:	4b08      	ldr	r3, [pc, #32]	; (19d18 <adc0_init+0x68>)
   19cf6:	2200      	movs	r2, #0
   19cf8:	6018      	str	r0, [r3, #0]
   19cfa:	2102      	movs	r1, #2
   19cfc:	2001      	movs	r0, #1
   19cfe:	f001 fc36 	bl	1b56e <xQueueGenericCreate>
   19d02:	4b06      	ldr	r3, [pc, #24]	; (19d1c <adc0_init+0x6c>)
   19d04:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
   19d08:	6018      	str	r0, [r3, #0]
   19d0a:	4b05      	ldr	r3, [pc, #20]	; (19d20 <adc0_init+0x70>)
   19d0c:	601a      	str	r2, [r3, #0]
   19d0e:	bd10      	pop	{r4, pc}
   19d10:	40034000 	.word	0x40034000
   19d14:	00c65d3f 	.word	0x00c65d3f
   19d18:	2007c97c 	.word	0x2007c97c
   19d1c:	2007c978 	.word	0x2007c978
   19d20:	e000e100 	.word	0xe000e100

00019d24 <adc0_get_reading>:
adc0_get_reading():
   19d24:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   19d26:	2807      	cmp	r0, #7
   19d28:	f04f 0400 	mov.w	r4, #0
   19d2c:	4605      	mov	r5, r0
   19d2e:	f8ad 4006 	strh.w	r4, [sp, #6]
   19d32:	d82a      	bhi.n	19d8a <adc0_get_reading+0x66>
   19d34:	f002 fa9c 	bl	1c270 <xTaskGetSchedulerState>
   19d38:	2802      	cmp	r0, #2
   19d3a:	4e16      	ldr	r6, [pc, #88]	; (19d94 <adc0_get_reading+0x70>)
   19d3c:	d119      	bne.n	19d72 <adc0_get_reading+0x4e>
   19d3e:	4f16      	ldr	r7, [pc, #88]	; (19d98 <adc0_get_reading+0x74>)
   19d40:	4621      	mov	r1, r4
   19d42:	4623      	mov	r3, r4
   19d44:	f04f 32ff 	mov.w	r2, #4294967295
   19d48:	6838      	ldr	r0, [r7, #0]
   19d4a:	f001 fd11 	bl	1b770 <xQueueGenericReceive>
   19d4e:	4628      	mov	r0, r5
   19d50:	f7ff ff7e 	bl	19c50 <adc0_start_conversion>
   19d54:	f10d 0106 	add.w	r1, sp, #6
   19d58:	4623      	mov	r3, r4
   19d5a:	6830      	ldr	r0, [r6, #0]
   19d5c:	f04f 32ff 	mov.w	r2, #4294967295
   19d60:	f001 fd06 	bl	1b770 <xQueueGenericReceive>
   19d64:	6838      	ldr	r0, [r7, #0]
   19d66:	4621      	mov	r1, r4
   19d68:	4622      	mov	r2, r4
   19d6a:	4623      	mov	r3, r4
   19d6c:	f001 fc30 	bl	1b5d0 <xQueueGenericSend>
   19d70:	e00b      	b.n	19d8a <adc0_get_reading+0x66>
   19d72:	4628      	mov	r0, r5
   19d74:	f7ff ff6c 	bl	19c50 <adc0_start_conversion>
   19d78:	2200      	movs	r2, #0
   19d7a:	6830      	ldr	r0, [r6, #0]
   19d7c:	f10d 0106 	add.w	r1, sp, #6
   19d80:	4613      	mov	r3, r2
   19d82:	f001 fcf5 	bl	1b770 <xQueueGenericReceive>
   19d86:	2800      	cmp	r0, #0
   19d88:	d0f6      	beq.n	19d78 <adc0_get_reading+0x54>
   19d8a:	f8bd 0006 	ldrh.w	r0, [sp, #6]
   19d8e:	b003      	add	sp, #12
   19d90:	bdf0      	pop	{r4, r5, r6, r7, pc}
   19d92:	bf00      	nop
   19d94:	2007c978 	.word	0x2007c978
   19d98:	2007c97c 	.word	0x2007c97c

00019d9c <CAN_tx_now>:
CAN_tx_now():
   19d9c:	6803      	ldr	r3, [r0, #0]
   19d9e:	b530      	push	{r4, r5, lr}
   19da0:	69da      	ldr	r2, [r3, #28]
   19da2:	f012 0204 	ands.w	r2, r2, #4
   19da6:	d010      	beq.n	19dca <CAN_tx_now+0x2e>
   19da8:	f103 0230 	add.w	r2, r3, #48	; 0x30
   19dac:	f101 0410 	add.w	r4, r1, #16
   19db0:	f851 5b04 	ldr.w	r5, [r1], #4
   19db4:	42a1      	cmp	r1, r4
   19db6:	f842 5b04 	str.w	r5, [r2], #4
   19dba:	d1f9      	bne.n	19db0 <CAN_tx_now+0x14>
   19dbc:	8a42      	ldrh	r2, [r0, #18]
   19dbe:	3201      	adds	r2, #1
   19dc0:	8242      	strh	r2, [r0, #18]
   19dc2:	2221      	movs	r2, #33	; 0x21
   19dc4:	605a      	str	r2, [r3, #4]
   19dc6:	2001      	movs	r0, #1
   19dc8:	bd30      	pop	{r4, r5, pc}
   19dca:	4610      	mov	r0, r2
   19dcc:	bd30      	pop	{r4, r5, pc}
	...

00019dd0 <CAN_handle_isr>:
CAN_handle_isr():
   19dd0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   19dd2:	4b21      	ldr	r3, [pc, #132]	; (19e58 <CAN_handle_isr+0x88>)
   19dd4:	0140      	lsls	r0, r0, #5
   19dd6:	581e      	ldr	r6, [r3, r0]
   19dd8:	181c      	adds	r4, r3, r0
   19dda:	68f5      	ldr	r5, [r6, #12]
   19ddc:	68b3      	ldr	r3, [r6, #8]
   19dde:	432b      	orrs	r3, r5
   19de0:	07d9      	lsls	r1, r3, #31
   19de2:	d517      	bpl.n	19e14 <CAN_handle_isr+0x44>
   19de4:	6860      	ldr	r0, [r4, #4]
   19de6:	f001 fd76 	bl	1b8d6 <uxQueueMessagesWaitingFromISR>
   19dea:	89e3      	ldrh	r3, [r4, #14]
   19dec:	2200      	movs	r2, #0
   19dee:	4298      	cmp	r0, r3
   19df0:	bf88      	it	hi
   19df2:	81e0      	strhhi	r0, [r4, #14]
   19df4:	f106 0120 	add.w	r1, r6, #32
   19df8:	6860      	ldr	r0, [r4, #4]
   19dfa:	4613      	mov	r3, r2
   19dfc:	f001 fc7f 	bl	1b6fe <xQueueGenericSendFromISR>
   19e00:	b118      	cbz	r0, 19e0a <CAN_handle_isr+0x3a>
   19e02:	8aa3      	ldrh	r3, [r4, #20]
   19e04:	3301      	adds	r3, #1
   19e06:	82a3      	strh	r3, [r4, #20]
   19e08:	e002      	b.n	19e10 <CAN_handle_isr+0x40>
   19e0a:	89a3      	ldrh	r3, [r4, #12]
   19e0c:	3301      	adds	r3, #1
   19e0e:	81a3      	strh	r3, [r4, #12]
   19e10:	2304      	movs	r3, #4
   19e12:	6073      	str	r3, [r6, #4]
   19e14:	f240 6302 	movw	r3, #1538	; 0x602
   19e18:	402b      	ands	r3, r5
   19e1a:	b183      	cbz	r3, 19e3e <CAN_handle_isr+0x6e>
   19e1c:	68a0      	ldr	r0, [r4, #8]
   19e1e:	f001 fd5a 	bl	1b8d6 <uxQueueMessagesWaitingFromISR>
   19e22:	8a23      	ldrh	r3, [r4, #16]
   19e24:	4669      	mov	r1, sp
   19e26:	4298      	cmp	r0, r3
   19e28:	bf88      	it	hi
   19e2a:	8220      	strhhi	r0, [r4, #16]
   19e2c:	2200      	movs	r2, #0
   19e2e:	68a0      	ldr	r0, [r4, #8]
   19e30:	f001 fd1f 	bl	1b872 <xQueueReceiveFromISR>
   19e34:	b118      	cbz	r0, 19e3e <CAN_handle_isr+0x6e>
   19e36:	4620      	mov	r0, r4
   19e38:	4669      	mov	r1, sp
   19e3a:	f7ff ffaf 	bl	19d9c <CAN_tx_now>
   19e3e:	06aa      	lsls	r2, r5, #26
   19e40:	d502      	bpl.n	19e48 <CAN_handle_isr+0x78>
   19e42:	69a3      	ldr	r3, [r4, #24]
   19e44:	4628      	mov	r0, r5
   19e46:	4798      	blx	r3
   19e48:	072b      	lsls	r3, r5, #28
   19e4a:	d502      	bpl.n	19e52 <CAN_handle_isr+0x82>
   19e4c:	69e3      	ldr	r3, [r4, #28]
   19e4e:	4628      	mov	r0, r5
   19e50:	4798      	blx	r3
   19e52:	b004      	add	sp, #16
   19e54:	bd70      	pop	{r4, r5, r6, pc}
   19e56:	bf00      	nop
   19e58:	2007c030 	.word	0x2007c030

00019e5c <CAN_IRQHandler>:
CAN_IRQHandler():
   19e5c:	4b08      	ldr	r3, [pc, #32]	; (19e80 <CAN_IRQHandler+0x24>)
   19e5e:	b510      	push	{r4, lr}
   19e60:	f8d3 40c4 	ldr.w	r4, [r3, #196]	; 0xc4
   19e64:	04a2      	lsls	r2, r4, #18
   19e66:	d502      	bpl.n	19e6e <CAN_IRQHandler+0x12>
   19e68:	2000      	movs	r0, #0
   19e6a:	f7ff ffb1 	bl	19dd0 <CAN_handle_isr>
   19e6e:	0463      	lsls	r3, r4, #17
   19e70:	d504      	bpl.n	19e7c <CAN_IRQHandler+0x20>
   19e72:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   19e76:	2001      	movs	r0, #1
   19e78:	f7ff bfaa 	b.w	19dd0 <CAN_handle_isr>
   19e7c:	bd10      	pop	{r4, pc}
   19e7e:	bf00      	nop
   19e80:	400fc000 	.word	0x400fc000

00019e84 <CAN_init>:
CAN_init():
   19e84:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19e88:	2801      	cmp	r0, #1
   19e8a:	468a      	mov	sl, r1
   19e8c:	461e      	mov	r6, r3
   19e8e:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
   19e92:	f8dd 802c 	ldr.w	r8, [sp, #44]	; 0x2c
   19e96:	f200 809f 	bhi.w	19fd8 <CAN_init+0x154>
   19e9a:	4951      	ldr	r1, [pc, #324]	; (19fe0 <CAN_init+0x15c>)
   19e9c:	0143      	lsls	r3, r0, #5
   19e9e:	18cf      	adds	r7, r1, r3
   19ea0:	58cc      	ldr	r4, [r1, r3]
   19ea2:	4950      	ldr	r1, [pc, #320]	; (19fe4 <CAN_init+0x160>)
   19ea4:	4d50      	ldr	r5, [pc, #320]	; (19fe8 <CAN_init+0x164>)
   19ea6:	f8d1 30c4 	ldr.w	r3, [r1, #196]	; 0xc4
   19eaa:	b960      	cbnz	r0, 19ec6 <CAN_init+0x42>
   19eac:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
   19eb0:	f8c1 30c4 	str.w	r3, [r1, #196]	; 0xc4
   19eb4:	682b      	ldr	r3, [r5, #0]
   19eb6:	f023 030f 	bic.w	r3, r3, #15
   19eba:	602b      	str	r3, [r5, #0]
   19ebc:	682b      	ldr	r3, [r5, #0]
   19ebe:	f043 0305 	orr.w	r3, r3, #5
   19ec2:	602b      	str	r3, [r5, #0]
   19ec4:	e00b      	b.n	19ede <CAN_init+0x5a>
   19ec6:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
   19eca:	f8c1 30c4 	str.w	r3, [r1, #196]	; 0xc4
   19ece:	692b      	ldr	r3, [r5, #16]
   19ed0:	f423 3370 	bic.w	r3, r3, #245760	; 0x3c000
   19ed4:	612b      	str	r3, [r5, #16]
   19ed6:	692b      	ldr	r3, [r5, #16]
   19ed8:	f443 33a0 	orr.w	r3, r3, #81920	; 0x14000
   19edc:	612b      	str	r3, [r5, #16]
   19ede:	687b      	ldr	r3, [r7, #4]
   19ee0:	b943      	cbnz	r3, 19ef4 <CAN_init+0x70>
   19ee2:	2a00      	cmp	r2, #0
   19ee4:	bf14      	ite	ne
   19ee6:	4610      	movne	r0, r2
   19ee8:	2001      	moveq	r0, #1
   19eea:	2110      	movs	r1, #16
   19eec:	461a      	mov	r2, r3
   19eee:	f001 fb3e 	bl	1b56e <xQueueGenericCreate>
   19ef2:	6078      	str	r0, [r7, #4]
   19ef4:	68ba      	ldr	r2, [r7, #8]
   19ef6:	b93a      	cbnz	r2, 19f08 <CAN_init+0x84>
   19ef8:	2e00      	cmp	r6, #0
   19efa:	bf14      	ite	ne
   19efc:	4630      	movne	r0, r6
   19efe:	2001      	moveq	r0, #1
   19f00:	2110      	movs	r1, #16
   19f02:	f001 fb34 	bl	1b56e <xQueueGenericCreate>
   19f06:	60b8      	str	r0, [r7, #8]
   19f08:	200d      	movs	r0, #13
   19f0a:	2101      	movs	r1, #1
   19f0c:	f002 fcf4 	bl	1c8f8 <lpc_pclk>
   19f10:	200e      	movs	r0, #14
   19f12:	2101      	movs	r1, #1
   19f14:	4e35      	ldr	r6, [pc, #212]	; (19fec <CAN_init+0x168>)
   19f16:	f002 fcef 	bl	1c8f8 <lpc_pclk>
   19f1a:	200f      	movs	r0, #15
   19f1c:	2101      	movs	r1, #1
   19f1e:	f002 fceb 	bl	1c8f8 <lpc_pclk>
   19f22:	2500      	movs	r5, #0
   19f24:	f04f 0b01 	mov.w	fp, #1
   19f28:	230e      	movs	r3, #14
   19f2a:	f8c4 b000 	str.w	fp, [r4]
   19f2e:	6125      	str	r5, [r4, #16]
   19f30:	60a5      	str	r5, [r4, #8]
   19f32:	6063      	str	r3, [r4, #4]
   19f34:	f8c6 b000 	str.w	fp, [r6]
   19f38:	68e3      	ldr	r3, [r4, #12]
   19f3a:	482d      	ldr	r0, [pc, #180]	; (19ff0 <CAN_init+0x16c>)
   19f3c:	4629      	mov	r1, r5
   19f3e:	6003      	str	r3, [r0, #0]
   19f40:	f44f 6200 	mov.w	r2, #2048	; 0x800
   19f44:	f004 fe8b 	bl	1ec5e <memset>
   19f48:	6075      	str	r5, [r6, #4]
   19f4a:	60b5      	str	r5, [r6, #8]
   19f4c:	60f5      	str	r5, [r6, #12]
   19f4e:	6135      	str	r5, [r6, #16]
   19f50:	6175      	str	r5, [r6, #20]
   19f52:	f8c6 b000 	str.w	fp, [r6]
   19f56:	f002 fe83 	bl	1cc60 <sys_get_cpu_clock>
   19f5a:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
   19f5e:	fb03 fa0a 	mul.w	sl, r3, sl
   19f62:	2318      	movs	r3, #24
   19f64:	fbb0 f0fa 	udiv	r0, r0, sl
   19f68:	fbb0 f1f3 	udiv	r1, r0, r3
   19f6c:	fb03 0511 	mls	r5, r3, r1, r0
   19f70:	1e9a      	subs	r2, r3, #2
   19f72:	b9d5      	cbnz	r5, 19faa <CAN_init+0x126>
   19f74:	2003      	movs	r0, #3
   19f76:	3b01      	subs	r3, #1
   19f78:	fbb3 f3f0 	udiv	r3, r3, r0
   19f7c:	3901      	subs	r1, #1
   19f7e:	1e58      	subs	r0, r3, #1
   19f80:	f441 4140 	orr.w	r1, r1, #49152	; 0xc000
   19f84:	ea41 5100 	orr.w	r1, r1, r0, lsl #20
   19f88:	1ad3      	subs	r3, r2, r3
   19f8a:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
   19f8e:	6163      	str	r3, [r4, #20]
   19f90:	f240 6303 	movw	r3, #1539	; 0x603
   19f94:	6123      	str	r3, [r4, #16]
   19f96:	f1b9 0f00 	cmp.w	r9, #0
   19f9a:	d00b      	beq.n	19fb4 <CAN_init+0x130>
   19f9c:	6923      	ldr	r3, [r4, #16]
   19f9e:	f8c7 9018 	str.w	r9, [r7, #24]
   19fa2:	f043 0320 	orr.w	r3, r3, #32
   19fa6:	6123      	str	r3, [r4, #16]
   19fa8:	e004      	b.n	19fb4 <CAN_init+0x130>
   19faa:	4613      	mov	r3, r2
   19fac:	2a00      	cmp	r2, #0
   19fae:	d1db      	bne.n	19f68 <CAN_init+0xe4>
   19fb0:	2001      	movs	r0, #1
   19fb2:	e00d      	b.n	19fd0 <CAN_init+0x14c>
   19fb4:	f1b8 0f00 	cmp.w	r8, #0
   19fb8:	d005      	beq.n	19fc6 <CAN_init+0x142>
   19fba:	6923      	ldr	r3, [r4, #16]
   19fbc:	f8c7 801c 	str.w	r8, [r7, #28]
   19fc0:	f043 0308 	orr.w	r3, r3, #8
   19fc4:	6123      	str	r3, [r4, #16]
   19fc6:	4b0b      	ldr	r3, [pc, #44]	; (19ff4 <CAN_init+0x170>)
   19fc8:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
   19fcc:	601a      	str	r2, [r3, #0]
   19fce:	2000      	movs	r0, #0
   19fd0:	f080 0001 	eor.w	r0, r0, #1
   19fd4:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19fd8:	2000      	movs	r0, #0
   19fda:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19fde:	bf00      	nop
   19fe0:	2007c030 	.word	0x2007c030
   19fe4:	400fc000 	.word	0x400fc000
   19fe8:	4002c000 	.word	0x4002c000
   19fec:	4003c000 	.word	0x4003c000
   19ff0:	40038000 	.word	0x40038000
   19ff4:	e000e100 	.word	0xe000e100

00019ff8 <CAN_rx>:
CAN_rx():
   19ff8:	2801      	cmp	r0, #1
   19ffa:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   19ffe:	4607      	mov	r7, r0
   1a000:	460e      	mov	r6, r1
   1a002:	4691      	mov	r9, r2
   1a004:	d902      	bls.n	1a00c <CAN_rx+0x14>
   1a006:	2000      	movs	r0, #0
   1a008:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   1a00c:	2900      	cmp	r1, #0
   1a00e:	d0fa      	beq.n	1a006 <CAN_rx+0xe>
   1a010:	f002 f92e 	bl	1c270 <xTaskGetSchedulerState>
   1a014:	2802      	cmp	r0, #2
   1a016:	f8df 8068 	ldr.w	r8, [pc, #104]	; 1a080 <CAN_rx+0x88>
   1a01a:	ea4f 1747 	mov.w	r7, r7, lsl #5
   1a01e:	d10b      	bne.n	1a038 <CAN_rx+0x40>
   1a020:	4447      	add	r7, r8
   1a022:	6878      	ldr	r0, [r7, #4]
   1a024:	4631      	mov	r1, r6
   1a026:	464a      	mov	r2, r9
   1a028:	2300      	movs	r3, #0
   1a02a:	f001 fba1 	bl	1b770 <xQueueGenericReceive>
   1a02e:	3000      	adds	r0, #0
   1a030:	bf18      	it	ne
   1a032:	2001      	movne	r0, #1
   1a034:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   1a038:	f002 fca4 	bl	1c984 <sys_get_uptime_us>
   1a03c:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   1a040:	2300      	movs	r3, #0
   1a042:	f004 f995 	bl	1e370 <__aeabi_uldivmod>
   1a046:	eb10 0409 	adds.w	r4, r0, r9
   1a04a:	f141 0500 	adc.w	r5, r1, #0
   1a04e:	eb08 0307 	add.w	r3, r8, r7
   1a052:	2200      	movs	r2, #0
   1a054:	6858      	ldr	r0, [r3, #4]
   1a056:	4631      	mov	r1, r6
   1a058:	4613      	mov	r3, r2
   1a05a:	f001 fb89 	bl	1b770 <xQueueGenericReceive>
   1a05e:	b958      	cbnz	r0, 1a078 <CAN_rx+0x80>
   1a060:	f002 fc90 	bl	1c984 <sys_get_uptime_us>
   1a064:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   1a068:	2300      	movs	r3, #0
   1a06a:	f004 f981 	bl	1e370 <__aeabi_uldivmod>
   1a06e:	428d      	cmp	r5, r1
   1a070:	bf08      	it	eq
   1a072:	4284      	cmpeq	r4, r0
   1a074:	d2eb      	bcs.n	1a04e <CAN_rx+0x56>
   1a076:	e7c6      	b.n	1a006 <CAN_rx+0xe>
   1a078:	2001      	movs	r0, #1
   1a07a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   1a07e:	bf00      	nop
   1a080:	2007c030 	.word	0x2007c030

0001a084 <CAN_is_bus_off>:
CAN_is_bus_off():
   1a084:	2801      	cmp	r0, #1
   1a086:	d806      	bhi.n	1a096 <CAN_is_bus_off+0x12>
   1a088:	4b04      	ldr	r3, [pc, #16]	; (1a09c <CAN_is_bus_off+0x18>)
   1a08a:	0140      	lsls	r0, r0, #5
   1a08c:	581b      	ldr	r3, [r3, r0]
   1a08e:	6898      	ldr	r0, [r3, #8]
   1a090:	f3c0 10c0 	ubfx	r0, r0, #7, #1
   1a094:	4770      	bx	lr
   1a096:	2001      	movs	r0, #1
   1a098:	4770      	bx	lr
   1a09a:	bf00      	nop
   1a09c:	2007c030 	.word	0x2007c030

0001a0a0 <CAN_tx>:
CAN_tx():
   1a0a0:	2801      	cmp	r0, #1
   1a0a2:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
   1a0a6:	4604      	mov	r4, r0
   1a0a8:	460d      	mov	r5, r1
   1a0aa:	4690      	mov	r8, r2
   1a0ac:	d901      	bls.n	1a0b2 <CAN_tx+0x12>
   1a0ae:	2000      	movs	r0, #0
   1a0b0:	e03d      	b.n	1a12e <CAN_tx+0x8e>
   1a0b2:	2900      	cmp	r1, #0
   1a0b4:	d0fb      	beq.n	1a0ae <CAN_tx+0xe>
   1a0b6:	f7ff ffe5 	bl	1a084 <CAN_is_bus_off>
   1a0ba:	2800      	cmp	r0, #0
   1a0bc:	d1f7      	bne.n	1a0ae <CAN_tx+0xe>
   1a0be:	491d      	ldr	r1, [pc, #116]	; (1a134 <CAN_tx+0x94>)
   1a0c0:	0163      	lsls	r3, r4, #5
   1a0c2:	18cc      	adds	r4, r1, r3
   1a0c4:	58cf      	ldr	r7, [r1, r3]
   1a0c6:	f002 f9ed 	bl	1c4a4 <vPortEnterCritical>
   1a0ca:	4620      	mov	r0, r4
   1a0cc:	4629      	mov	r1, r5
   1a0ce:	f7ff fe65 	bl	19d9c <CAN_tx_now>
   1a0d2:	4606      	mov	r6, r0
   1a0d4:	f002 f9f8 	bl	1c4c8 <vPortExitCritical>
   1a0d8:	bb46      	cbnz	r6, 1a12c <CAN_tx+0x8c>
   1a0da:	f002 f8c9 	bl	1c270 <xTaskGetSchedulerState>
   1a0de:	2802      	cmp	r0, #2
   1a0e0:	bf19      	ittee	ne
   1a0e2:	4632      	movne	r2, r6
   1a0e4:	4613      	movne	r3, r2
   1a0e6:	4642      	moveq	r2, r8
   1a0e8:	4633      	moveq	r3, r6
   1a0ea:	4629      	mov	r1, r5
   1a0ec:	68a0      	ldr	r0, [r4, #8]
   1a0ee:	f001 fa6f 	bl	1b5d0 <xQueueGenericSend>
   1a0f2:	1c05      	adds	r5, r0, #0
   1a0f4:	bf18      	it	ne
   1a0f6:	2501      	movne	r5, #1
   1a0f8:	f002 f9d4 	bl	1c4a4 <vPortEnterCritical>
   1a0fc:	69fb      	ldr	r3, [r7, #28]
   1a0fe:	4a0e      	ldr	r2, [pc, #56]	; (1a138 <CAN_tx+0x98>)
   1a100:	f003 3304 	and.w	r3, r3, #67372036	; 0x4040404
   1a104:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
   1a108:	4293      	cmp	r3, r2
   1a10a:	d10b      	bne.n	1a124 <CAN_tx+0x84>
   1a10c:	2200      	movs	r2, #0
   1a10e:	68a0      	ldr	r0, [r4, #8]
   1a110:	4669      	mov	r1, sp
   1a112:	4613      	mov	r3, r2
   1a114:	f001 fb2c 	bl	1b770 <xQueueGenericReceive>
   1a118:	b120      	cbz	r0, 1a124 <CAN_tx+0x84>
   1a11a:	4620      	mov	r0, r4
   1a11c:	4669      	mov	r1, sp
   1a11e:	f7ff fe3d 	bl	19d9c <CAN_tx_now>
   1a122:	4605      	mov	r5, r0
   1a124:	f002 f9d0 	bl	1c4c8 <vPortExitCritical>
   1a128:	4628      	mov	r0, r5
   1a12a:	e000      	b.n	1a12e <CAN_tx+0x8e>
   1a12c:	2001      	movs	r0, #1
   1a12e:	b004      	add	sp, #16
   1a130:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1a134:	2007c030 	.word	0x2007c030
   1a138:	00040404 	.word	0x00040404

0001a13c <CAN_reset_bus>:
CAN_reset_bus():
   1a13c:	2801      	cmp	r0, #1
   1a13e:	d806      	bhi.n	1a14e <CAN_reset_bus+0x12>
   1a140:	4b03      	ldr	r3, [pc, #12]	; (1a150 <CAN_reset_bus+0x14>)
   1a142:	0140      	lsls	r0, r0, #5
   1a144:	581b      	ldr	r3, [r3, r0]
   1a146:	2201      	movs	r2, #1
   1a148:	601a      	str	r2, [r3, #0]
   1a14a:	2208      	movs	r2, #8
   1a14c:	601a      	str	r2, [r3, #0]
   1a14e:	4770      	bx	lr
   1a150:	2007c030 	.word	0x2007c030

0001a154 <CAN_bypass_filter_accept_all_msgs>:
CAN_bypass_filter_accept_all_msgs():
   1a154:	4b01      	ldr	r3, [pc, #4]	; (1a15c <CAN_bypass_filter_accept_all_msgs+0x8>)
   1a156:	2202      	movs	r2, #2
   1a158:	601a      	str	r2, [r3, #0]
   1a15a:	4770      	bx	lr
   1a15c:	4003c000 	.word	0x4003c000

0001a160 <CAN_gen_sid>:
CAN_gen_sid():
   1a160:	b513      	push	{r0, r1, r4, lr}
   1a162:	f8bd 3004 	ldrh.w	r3, [sp, #4]
   1a166:	f64f 74ff 	movw	r4, #65535	; 0xffff
   1a16a:	f361 030a 	bfi	r3, r1, #0, #11
   1a16e:	1b0c      	subs	r4, r1, r4
   1a170:	0a1a      	lsrs	r2, r3, #8
   1a172:	4261      	negs	r1, r4
   1a174:	4161      	adcs	r1, r4
   1a176:	f002 02f7 	and.w	r2, r2, #247	; 0xf7
   1a17a:	f361 1204 	bfi	r2, r1, #4, #1
   1a17e:	f360 1247 	bfi	r2, r0, #5, #3
   1a182:	b2db      	uxtb	r3, r3
   1a184:	2000      	movs	r0, #0
   1a186:	f363 0007 	bfi	r0, r3, #0, #8
   1a18a:	b2d2      	uxtb	r2, r2
   1a18c:	f362 200f 	bfi	r0, r2, #8, #8
   1a190:	b002      	add	sp, #8
   1a192:	bd10      	pop	{r4, pc}

0001a194 <CAN_setup_filter>:
CAN_setup_filter():
   1a194:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a198:	f011 0701 	ands.w	r7, r1, #1
   1a19c:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   1a1a0:	f040 8089 	bne.w	1a2b6 <CAN_setup_filter+0x122>
   1a1a4:	4c45      	ldr	r4, [pc, #276]	; (1a2bc <CAN_setup_filter+0x128>)
   1a1a6:	2601      	movs	r6, #1
   1a1a8:	6026      	str	r6, [r4, #0]
   1a1aa:	6865      	ldr	r5, [r4, #4]
   1a1ac:	f04f 080c 	mov.w	r8, #12
   1a1b0:	f3c5 0547 	ubfx	r5, r5, #1, #8
   1a1b4:	fb08 f505 	mul.w	r5, r8, r5
   1a1b8:	f8d4 8004 	ldr.w	r8, [r4, #4]
   1a1bc:	f1c5 4580 	rsb	r5, r5, #1073741824	; 0x40000000
   1a1c0:	f108 4480 	add.w	r4, r8, #1073741824	; 0x40000000
   1a1c4:	f505 3562 	add.w	r5, r5, #231424	; 0x38800
   1a1c8:	f504 3460 	add.w	r4, r4, #229376	; 0x38000
   1a1cc:	b1b0      	cbz	r0, 1a1fc <CAN_setup_filter+0x68>
   1a1ce:	40b1      	lsls	r1, r6
   1a1d0:	190e      	adds	r6, r1, r4
   1a1d2:	42ae      	cmp	r6, r5
   1a1d4:	d214      	bcs.n	1a200 <CAN_setup_filter+0x6c>
   1a1d6:	0889      	lsrs	r1, r1, #2
   1a1d8:	0089      	lsls	r1, r1, #2
   1a1da:	eb00 0901 	add.w	r9, r0, r1
   1a1de:	4606      	mov	r6, r0
   1a1e0:	454e      	cmp	r6, r9
   1a1e2:	d00a      	beq.n	1a1fa <CAN_setup_filter+0x66>
   1a1e4:	f856 ab04 	ldr.w	sl, [r6], #4
   1a1e8:	4f35      	ldr	r7, [pc, #212]	; (1a2c0 <CAN_setup_filter+0x12c>)
   1a1ea:	ebc0 0b06 	rsb	fp, r0, r6
   1a1ee:	44c3      	add	fp, r8
   1a1f0:	ea4f 4a3a 	mov.w	sl, sl, ror #16
   1a1f4:	f847 a00b 	str.w	sl, [r7, fp]
   1a1f8:	e7f2      	b.n	1a1e0 <CAN_setup_filter+0x4c>
   1a1fa:	440c      	add	r4, r1
   1a1fc:	2001      	movs	r0, #1
   1a1fe:	e000      	b.n	1a202 <CAN_setup_filter+0x6e>
   1a200:	4638      	mov	r0, r7
   1a202:	f104 4140 	add.w	r1, r4, #3221225472	; 0xc0000000
   1a206:	4e2d      	ldr	r6, [pc, #180]	; (1a2bc <CAN_setup_filter+0x128>)
   1a208:	f5a1 3160 	sub.w	r1, r1, #229376	; 0x38000
   1a20c:	60b1      	str	r1, [r6, #8]
   1a20e:	b17a      	cbz	r2, 1a230 <CAN_setup_filter+0x9c>
   1a210:	009b      	lsls	r3, r3, #2
   1a212:	18e1      	adds	r1, r4, r3
   1a214:	42a9      	cmp	r1, r5
   1a216:	d20a      	bcs.n	1a22e <CAN_setup_filter+0x9a>
   1a218:	2100      	movs	r1, #0
   1a21a:	4299      	cmp	r1, r3
   1a21c:	d005      	beq.n	1a22a <CAN_setup_filter+0x96>
   1a21e:	5856      	ldr	r6, [r2, r1]
   1a220:	ea4f 4636 	mov.w	r6, r6, ror #16
   1a224:	5066      	str	r6, [r4, r1]
   1a226:	3104      	adds	r1, #4
   1a228:	e7f7      	b.n	1a21a <CAN_setup_filter+0x86>
   1a22a:	440c      	add	r4, r1
   1a22c:	e000      	b.n	1a230 <CAN_setup_filter+0x9c>
   1a22e:	2000      	movs	r0, #0
   1a230:	f104 4340 	add.w	r3, r4, #3221225472	; 0xc0000000
   1a234:	4a21      	ldr	r2, [pc, #132]	; (1a2bc <CAN_setup_filter+0x128>)
   1a236:	f5a3 3360 	sub.w	r3, r3, #229376	; 0x38000
   1a23a:	60d3      	str	r3, [r2, #12]
   1a23c:	f1bc 0f00 	cmp.w	ip, #0
   1a240:	d011      	beq.n	1a266 <CAN_setup_filter+0xd2>
   1a242:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
   1a246:	009b      	lsls	r3, r3, #2
   1a248:	18e2      	adds	r2, r4, r3
   1a24a:	42aa      	cmp	r2, r5
   1a24c:	d20a      	bcs.n	1a264 <CAN_setup_filter+0xd0>
   1a24e:	4619      	mov	r1, r3
   1a250:	2300      	movs	r3, #0
   1a252:	428b      	cmp	r3, r1
   1a254:	d004      	beq.n	1a260 <CAN_setup_filter+0xcc>
   1a256:	f85c 2003 	ldr.w	r2, [ip, r3]
   1a25a:	50e2      	str	r2, [r4, r3]
   1a25c:	3304      	adds	r3, #4
   1a25e:	e7f8      	b.n	1a252 <CAN_setup_filter+0xbe>
   1a260:	441c      	add	r4, r3
   1a262:	e000      	b.n	1a266 <CAN_setup_filter+0xd2>
   1a264:	2000      	movs	r0, #0
   1a266:	f104 4340 	add.w	r3, r4, #3221225472	; 0xc0000000
   1a26a:	4a14      	ldr	r2, [pc, #80]	; (1a2bc <CAN_setup_filter+0x128>)
   1a26c:	f5a3 3360 	sub.w	r3, r3, #229376	; 0x38000
   1a270:	6113      	str	r3, [r2, #16]
   1a272:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   1a274:	b18b      	cbz	r3, 1a29a <CAN_setup_filter+0x106>
   1a276:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
   1a27a:	00db      	lsls	r3, r3, #3
   1a27c:	18e2      	adds	r2, r4, r3
   1a27e:	42aa      	cmp	r2, r5
   1a280:	d20a      	bcs.n	1a298 <CAN_setup_filter+0x104>
   1a282:	4619      	mov	r1, r3
   1a284:	2300      	movs	r3, #0
   1a286:	428b      	cmp	r3, r1
   1a288:	d004      	beq.n	1a294 <CAN_setup_filter+0x100>
   1a28a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   1a28c:	58ea      	ldr	r2, [r5, r3]
   1a28e:	50e2      	str	r2, [r4, r3]
   1a290:	3304      	adds	r3, #4
   1a292:	e7f8      	b.n	1a286 <CAN_setup_filter+0xf2>
   1a294:	441c      	add	r4, r3
   1a296:	e000      	b.n	1a29a <CAN_setup_filter+0x106>
   1a298:	2000      	movs	r0, #0
   1a29a:	4b08      	ldr	r3, [pc, #32]	; (1a2bc <CAN_setup_filter+0x128>)
   1a29c:	f104 4440 	add.w	r4, r4, #3221225472	; 0xc0000000
   1a2a0:	f5a4 3460 	sub.w	r4, r4, #229376	; 0x38000
   1a2a4:	615c      	str	r4, [r3, #20]
   1a2a6:	685a      	ldr	r2, [r3, #4]
   1a2a8:	2a00      	cmp	r2, #0
   1a2aa:	bf14      	ite	ne
   1a2ac:	2204      	movne	r2, #4
   1a2ae:	2200      	moveq	r2, #0
   1a2b0:	601a      	str	r2, [r3, #0]
   1a2b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a2b6:	2000      	movs	r0, #0
   1a2b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a2bc:	4003c000 	.word	0x4003c000
   1a2c0:	40037ffc 	.word	0x40037ffc

0001a2c4 <handle_eint_list>:
handle_eint_list():
   1a2c4:	b570      	push	{r4, r5, r6, lr}
   1a2c6:	4605      	mov	r5, r0
   1a2c8:	460e      	mov	r6, r1
   1a2ca:	4614      	mov	r4, r2
   1a2cc:	b17c      	cbz	r4, 1a2ee <handle_eint_list+0x2a>
   1a2ce:	682b      	ldr	r3, [r5, #0]
   1a2d0:	b16b      	cbz	r3, 1a2ee <handle_eint_list+0x2a>
   1a2d2:	6822      	ldr	r2, [r4, #0]
   1a2d4:	4213      	tst	r3, r2
   1a2d6:	d008      	beq.n	1a2ea <handle_eint_list+0x26>
   1a2d8:	6863      	ldr	r3, [r4, #4]
   1a2da:	4798      	blx	r3
   1a2dc:	6822      	ldr	r2, [r4, #0]
   1a2de:	682b      	ldr	r3, [r5, #0]
   1a2e0:	ea23 0302 	bic.w	r3, r3, r2
   1a2e4:	602b      	str	r3, [r5, #0]
   1a2e6:	6823      	ldr	r3, [r4, #0]
   1a2e8:	6033      	str	r3, [r6, #0]
   1a2ea:	68a4      	ldr	r4, [r4, #8]
   1a2ec:	e7ee      	b.n	1a2cc <handle_eint_list+0x8>
   1a2ee:	bd70      	pop	{r4, r5, r6, pc}

0001a2f0 <eint3_enable.isra.0>:
eint3_enable.isra.0():
   1a2f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1a2f2:	2701      	movs	r7, #1
   1a2f4:	4087      	lsls	r7, r0
   1a2f6:	460c      	mov	r4, r1
   1a2f8:	4615      	mov	r5, r2
   1a2fa:	461e      	mov	r6, r3
   1a2fc:	d010      	beq.n	1a320 <eint3_enable.isra.0+0x30>
   1a2fe:	b179      	cbz	r1, 1a320 <eint3_enable.isra.0+0x30>
   1a300:	200c      	movs	r0, #12
   1a302:	f004 fc5b 	bl	1ebbc <malloc>
   1a306:	b158      	cbz	r0, 1a320 <eint3_enable.isra.0+0x30>
   1a308:	6044      	str	r4, [r0, #4]
   1a30a:	682b      	ldr	r3, [r5, #0]
   1a30c:	6007      	str	r7, [r0, #0]
   1a30e:	6083      	str	r3, [r0, #8]
   1a310:	6833      	ldr	r3, [r6, #0]
   1a312:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
   1a316:	431f      	orrs	r7, r3
   1a318:	4b02      	ldr	r3, [pc, #8]	; (1a324 <eint3_enable.isra.0+0x34>)
   1a31a:	6028      	str	r0, [r5, #0]
   1a31c:	6037      	str	r7, [r6, #0]
   1a31e:	601a      	str	r2, [r3, #0]
   1a320:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1a322:	bf00      	nop
   1a324:	e000e100 	.word	0xe000e100

0001a328 <EINT3_IRQHandler>:
EINT3_IRQHandler():
   1a328:	b51f      	push	{r0, r1, r2, r3, r4, lr}
   1a32a:	4c18      	ldr	r4, [pc, #96]	; (1a38c <EINT3_IRQHandler+0x64>)
   1a32c:	4668      	mov	r0, sp
   1a32e:	6863      	ldr	r3, [r4, #4]
   1a330:	4917      	ldr	r1, [pc, #92]	; (1a390 <EINT3_IRQHandler+0x68>)
   1a332:	9300      	str	r3, [sp, #0]
   1a334:	68a3      	ldr	r3, [r4, #8]
   1a336:	9301      	str	r3, [sp, #4]
   1a338:	6a63      	ldr	r3, [r4, #36]	; 0x24
   1a33a:	9302      	str	r3, [sp, #8]
   1a33c:	6aa3      	ldr	r3, [r4, #40]	; 0x28
   1a33e:	9303      	str	r3, [sp, #12]
   1a340:	4b14      	ldr	r3, [pc, #80]	; (1a394 <EINT3_IRQHandler+0x6c>)
   1a342:	681a      	ldr	r2, [r3, #0]
   1a344:	f7ff ffbe 	bl	1a2c4 <handle_eint_list>
   1a348:	4b13      	ldr	r3, [pc, #76]	; (1a398 <EINT3_IRQHandler+0x70>)
   1a34a:	a801      	add	r0, sp, #4
   1a34c:	681a      	ldr	r2, [r3, #0]
   1a34e:	4910      	ldr	r1, [pc, #64]	; (1a390 <EINT3_IRQHandler+0x68>)
   1a350:	f7ff ffb8 	bl	1a2c4 <handle_eint_list>
   1a354:	4b11      	ldr	r3, [pc, #68]	; (1a39c <EINT3_IRQHandler+0x74>)
   1a356:	a802      	add	r0, sp, #8
   1a358:	681a      	ldr	r2, [r3, #0]
   1a35a:	4911      	ldr	r1, [pc, #68]	; (1a3a0 <EINT3_IRQHandler+0x78>)
   1a35c:	f7ff ffb2 	bl	1a2c4 <handle_eint_list>
   1a360:	4b10      	ldr	r3, [pc, #64]	; (1a3a4 <EINT3_IRQHandler+0x7c>)
   1a362:	a803      	add	r0, sp, #12
   1a364:	681a      	ldr	r2, [r3, #0]
   1a366:	490e      	ldr	r1, [pc, #56]	; (1a3a0 <EINT3_IRQHandler+0x78>)
   1a368:	f7ff ffac 	bl	1a2c4 <handle_eint_list>
   1a36c:	9b00      	ldr	r3, [sp, #0]
   1a36e:	b90b      	cbnz	r3, 1a374 <EINT3_IRQHandler+0x4c>
   1a370:	9b01      	ldr	r3, [sp, #4]
   1a372:	b113      	cbz	r3, 1a37a <EINT3_IRQHandler+0x52>
   1a374:	f04f 33ff 	mov.w	r3, #4294967295
   1a378:	60e3      	str	r3, [r4, #12]
   1a37a:	9b02      	ldr	r3, [sp, #8]
   1a37c:	b90b      	cbnz	r3, 1a382 <EINT3_IRQHandler+0x5a>
   1a37e:	9b03      	ldr	r3, [sp, #12]
   1a380:	b113      	cbz	r3, 1a388 <EINT3_IRQHandler+0x60>
   1a382:	f04f 33ff 	mov.w	r3, #4294967295
   1a386:	62e3      	str	r3, [r4, #44]	; 0x2c
   1a388:	b004      	add	sp, #16
   1a38a:	bd10      	pop	{r4, pc}
   1a38c:	40028080 	.word	0x40028080
   1a390:	4002808c 	.word	0x4002808c
   1a394:	2007c988 	.word	0x2007c988
   1a398:	2007c98c 	.word	0x2007c98c
   1a39c:	2007c980 	.word	0x2007c980
   1a3a0:	400280ac 	.word	0x400280ac
   1a3a4:	2007c984 	.word	0x2007c984

0001a3a8 <eint3_enable_port0>:
eint3_enable_port0():
   1a3a8:	b510      	push	{r4, lr}
   1a3aa:	2900      	cmp	r1, #0
   1a3ac:	4b06      	ldr	r3, [pc, #24]	; (1a3c8 <eint3_enable_port0+0x20>)
   1a3ae:	4611      	mov	r1, r2
   1a3b0:	4a06      	ldr	r2, [pc, #24]	; (1a3cc <eint3_enable_port0+0x24>)
   1a3b2:	4c07      	ldr	r4, [pc, #28]	; (1a3d0 <eint3_enable_port0+0x28>)
   1a3b4:	bf18      	it	ne
   1a3b6:	461a      	movne	r2, r3
   1a3b8:	4b06      	ldr	r3, [pc, #24]	; (1a3d4 <eint3_enable_port0+0x2c>)
   1a3ba:	bf08      	it	eq
   1a3bc:	4623      	moveq	r3, r4
   1a3be:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   1a3c2:	f7ff bf95 	b.w	1a2f0 <eint3_enable.isra.0>
   1a3c6:	bf00      	nop
   1a3c8:	2007c98c 	.word	0x2007c98c
   1a3cc:	2007c988 	.word	0x2007c988
   1a3d0:	40028090 	.word	0x40028090
   1a3d4:	40028094 	.word	0x40028094

0001a3d8 <eint3_enable_port2>:
eint3_enable_port2():
   1a3d8:	b510      	push	{r4, lr}
   1a3da:	2900      	cmp	r1, #0
   1a3dc:	4b06      	ldr	r3, [pc, #24]	; (1a3f8 <eint3_enable_port2+0x20>)
   1a3de:	4611      	mov	r1, r2
   1a3e0:	4a06      	ldr	r2, [pc, #24]	; (1a3fc <eint3_enable_port2+0x24>)
   1a3e2:	4c07      	ldr	r4, [pc, #28]	; (1a400 <eint3_enable_port2+0x28>)
   1a3e4:	bf18      	it	ne
   1a3e6:	461a      	movne	r2, r3
   1a3e8:	4b06      	ldr	r3, [pc, #24]	; (1a404 <eint3_enable_port2+0x2c>)
   1a3ea:	bf08      	it	eq
   1a3ec:	4623      	moveq	r3, r4
   1a3ee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   1a3f2:	f7ff bf7d 	b.w	1a2f0 <eint3_enable.isra.0>
   1a3f6:	bf00      	nop
   1a3f8:	2007c984 	.word	0x2007c984
   1a3fc:	2007c980 	.word	0x2007c980
   1a400:	400280b0 	.word	0x400280b0
   1a404:	400280b4 	.word	0x400280b4

0001a408 <I2C2::init(unsigned int)>:
_ZN4I2C24initEj():
   1a408:	b570      	push	{r4, r5, r6, lr}
   1a40a:	4b18      	ldr	r3, [pc, #96]	; (1a46c <I2C2::init(unsigned int)+0x64>)
   1a40c:	4604      	mov	r4, r0
   1a40e:	695d      	ldr	r5, [r3, #20]
   1a410:	4b17      	ldr	r3, [pc, #92]	; (1a470 <I2C2::init(unsigned int)+0x68>)
   1a412:	201a      	movs	r0, #26
   1a414:	6c1a      	ldr	r2, [r3, #64]	; 0x40
   1a416:	460e      	mov	r6, r1
   1a418:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
   1a41c:	641a      	str	r2, [r3, #64]	; 0x40
   1a41e:	6c1a      	ldr	r2, [r3, #64]	; 0x40
   1a420:	2103      	movs	r1, #3
   1a422:	f442 0220 	orr.w	r2, r2, #10485760	; 0xa00000
   1a426:	641a      	str	r2, [r3, #64]	; 0x40
   1a428:	6e9a      	ldr	r2, [r3, #104]	; 0x68
   1a42a:	f405 6540 	and.w	r5, r5, #3072	; 0xc00
   1a42e:	f442 6240 	orr.w	r2, r2, #3072	; 0xc00
   1a432:	669a      	str	r2, [r3, #104]	; 0x68
   1a434:	681a      	ldr	r2, [r3, #0]
   1a436:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
   1a43a:	601a      	str	r2, [r3, #0]
   1a43c:	681a      	ldr	r2, [r3, #0]
   1a43e:	f442 0220 	orr.w	r2, r2, #10485760	; 0xa00000
   1a442:	601a      	str	r2, [r3, #0]
   1a444:	f002 fa58 	bl	1c8f8 <lpc_pclk>
   1a448:	f002 fc0a 	bl	1cc60 <sys_get_cpu_clock>
   1a44c:	f5b5 6f40 	cmp.w	r5, #3072	; 0xc00
   1a450:	4601      	mov	r1, r0
   1a452:	d106      	bne.n	1a462 <I2C2::init(unsigned int)+0x5a>
   1a454:	4620      	mov	r0, r4
   1a456:	4632      	mov	r2, r6
   1a458:	08c9      	lsrs	r1, r1, #3
   1a45a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
   1a45e:	f000 bd2d 	b.w	1aebc <I2C_Base::init(unsigned int, unsigned int)>
   1a462:	2301      	movs	r3, #1
   1a464:	7163      	strb	r3, [r4, #5]
   1a466:	2000      	movs	r0, #0
   1a468:	bd70      	pop	{r4, r5, r6, pc}
   1a46a:	bf00      	nop
   1a46c:	2009c000 	.word	0x2009c000
   1a470:	4002c000 	.word	0x4002c000

0001a474 <I2C2::I2C2()>:
_ZN4I2C2C1Ev():
   1a474:	b510      	push	{r4, lr}
   1a476:	4903      	ldr	r1, [pc, #12]	; (1a484 <I2C2::I2C2()+0x10>)
   1a478:	4604      	mov	r4, r0
   1a47a:	f000 fcf1 	bl	1ae60 <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)>
   1a47e:	4620      	mov	r0, r4
   1a480:	bd10      	pop	{r4, pc}
   1a482:	bf00      	nop
   1a484:	400a0000 	.word	0x400a0000

0001a488 <I2C2_IRQHandler>:
I2C2_IRQHandler():
   1a488:	b538      	push	{r3, r4, r5, lr}
   1a48a:	4c07      	ldr	r4, [pc, #28]	; (1a4a8 <I2C2_IRQHandler+0x20>)
   1a48c:	6823      	ldr	r3, [r4, #0]
   1a48e:	b933      	cbnz	r3, 1a49e <I2C2_IRQHandler+0x16>
   1a490:	201c      	movs	r0, #28
   1a492:	f7f5 feed 	bl	10270 <operator new(unsigned int)>
   1a496:	4605      	mov	r5, r0
   1a498:	f7ff ffec 	bl	1a474 <I2C2::I2C2()>
   1a49c:	6025      	str	r5, [r4, #0]
   1a49e:	6820      	ldr	r0, [r4, #0]
   1a4a0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   1a4a4:	f000 bde2 	b.w	1b06c <I2C_Base::handleInterrupt()>
   1a4a8:	2007c210 	.word	0x2007c210

0001a4ac <PWM::PWM(PWM::pwmType, unsigned int)>:
_ZN3PWMC2ENS_7pwmTypeEj():
   1a4ac:	b570      	push	{r4, r5, r6, lr}
   1a4ae:	4d1d      	ldr	r5, [pc, #116]	; (1a524 <PWM::PWM(PWM::pwmType, unsigned int)+0x78>)
   1a4b0:	4604      	mov	r4, r0
   1a4b2:	682b      	ldr	r3, [r5, #0]
   1a4b4:	7001      	strb	r1, [r0, #0]
   1a4b6:	2a00      	cmp	r2, #0
   1a4b8:	bf14      	ite	ne
   1a4ba:	4616      	movne	r6, r2
   1a4bc:	2664      	moveq	r6, #100	; 0x64
   1a4be:	b9cb      	cbnz	r3, 1a4f4 <PWM::PWM(PWM::pwmType, unsigned int)+0x48>
   1a4c0:	f002 fbce 	bl	1cc60 <sys_get_cpu_clock>
   1a4c4:	fbb0 f0f6 	udiv	r0, r0, r6
   1a4c8:	6028      	str	r0, [r5, #0]
   1a4ca:	2101      	movs	r1, #1
   1a4cc:	2006      	movs	r0, #6
   1a4ce:	f002 f9fb 	bl	1c8c8 <lpc_pconp>
   1a4d2:	2006      	movs	r0, #6
   1a4d4:	2101      	movs	r1, #1
   1a4d6:	f002 fa0f 	bl	1c8f8 <lpc_pclk>
   1a4da:	4b13      	ldr	r3, [pc, #76]	; (1a528 <PWM::PWM(PWM::pwmType, unsigned int)+0x7c>)
   1a4dc:	695a      	ldr	r2, [r3, #20]
   1a4de:	f042 0202 	orr.w	r2, r2, #2
   1a4e2:	615a      	str	r2, [r3, #20]
   1a4e4:	682a      	ldr	r2, [r5, #0]
   1a4e6:	619a      	str	r2, [r3, #24]
   1a4e8:	2209      	movs	r2, #9
   1a4ea:	605a      	str	r2, [r3, #4]
   1a4ec:	6f1a      	ldr	r2, [r3, #112]	; 0x70
   1a4ee:	f022 020f 	bic.w	r2, r2, #15
   1a4f2:	671a      	str	r2, [r3, #112]	; 0x70
   1a4f4:	7821      	ldrb	r1, [r4, #0]
   1a4f6:	2203      	movs	r2, #3
   1a4f8:	0048      	lsls	r0, r1, #1
   1a4fa:	4082      	lsls	r2, r0
   1a4fc:	4b0b      	ldr	r3, [pc, #44]	; (1a52c <PWM::PWM(PWM::pwmType, unsigned int)+0x80>)
   1a4fe:	3109      	adds	r1, #9
   1a500:	691d      	ldr	r5, [r3, #16]
   1a502:	ea25 0202 	bic.w	r2, r5, r2
   1a506:	611a      	str	r2, [r3, #16]
   1a508:	2201      	movs	r2, #1
   1a50a:	fa02 f000 	lsl.w	r0, r2, r0
   1a50e:	408a      	lsls	r2, r1
   1a510:	691d      	ldr	r5, [r3, #16]
   1a512:	4328      	orrs	r0, r5
   1a514:	6118      	str	r0, [r3, #16]
   1a516:	f5a3 33a0 	sub.w	r3, r3, #81920	; 0x14000
   1a51a:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
   1a51c:	4302      	orrs	r2, r0
   1a51e:	64da      	str	r2, [r3, #76]	; 0x4c
   1a520:	4620      	mov	r0, r4
   1a522:	bd70      	pop	{r4, r5, r6, pc}
   1a524:	2007c990 	.word	0x2007c990
   1a528:	40018000 	.word	0x40018000
   1a52c:	4002c000 	.word	0x4002c000

0001a530 <PWM::set(float)>:
_ZN3PWM3setEf():
   1a530:	b538      	push	{r3, r4, r5, lr}
   1a532:	4605      	mov	r5, r0
   1a534:	460c      	mov	r4, r1
   1a536:	4608      	mov	r0, r1
   1a538:	491a      	ldr	r1, [pc, #104]	; (1a5a4 <PWM::set(float)+0x74>)
   1a53a:	f003 fec9 	bl	1e2d0 <__aeabi_fcmpgt>
   1a53e:	2800      	cmp	r0, #0
   1a540:	d12e      	bne.n	1a5a0 <PWM::set(float)+0x70>
   1a542:	4b19      	ldr	r3, [pc, #100]	; (1a5a8 <PWM::set(float)+0x78>)
   1a544:	6818      	ldr	r0, [r3, #0]
   1a546:	f003 fcaf 	bl	1dea8 <__aeabi_ui2f>
   1a54a:	4601      	mov	r1, r0
   1a54c:	4620      	mov	r0, r4
   1a54e:	f003 fd03 	bl	1df58 <__aeabi_fmul>
   1a552:	4914      	ldr	r1, [pc, #80]	; (1a5a4 <PWM::set(float)+0x74>)
   1a554:	f003 fdb4 	bl	1e0c0 <__aeabi_fdiv>
   1a558:	f003 feea 	bl	1e330 <__aeabi_f2uiz>
   1a55c:	782a      	ldrb	r2, [r5, #0]
   1a55e:	2a05      	cmp	r2, #5
   1a560:	d81e      	bhi.n	1a5a0 <PWM::set(float)+0x70>
   1a562:	e8df f002 	tbb	[pc, r2]
   1a566:	0603      	.short	0x0603
   1a568:	120f0c09 	.word	0x120f0c09
   1a56c:	490f      	ldr	r1, [pc, #60]	; (1a5ac <PWM::set(float)+0x7c>)
   1a56e:	61c8      	str	r0, [r1, #28]
   1a570:	e00d      	b.n	1a58e <PWM::set(float)+0x5e>
   1a572:	490e      	ldr	r1, [pc, #56]	; (1a5ac <PWM::set(float)+0x7c>)
   1a574:	6208      	str	r0, [r1, #32]
   1a576:	e00a      	b.n	1a58e <PWM::set(float)+0x5e>
   1a578:	490c      	ldr	r1, [pc, #48]	; (1a5ac <PWM::set(float)+0x7c>)
   1a57a:	6248      	str	r0, [r1, #36]	; 0x24
   1a57c:	e007      	b.n	1a58e <PWM::set(float)+0x5e>
   1a57e:	490b      	ldr	r1, [pc, #44]	; (1a5ac <PWM::set(float)+0x7c>)
   1a580:	6408      	str	r0, [r1, #64]	; 0x40
   1a582:	e004      	b.n	1a58e <PWM::set(float)+0x5e>
   1a584:	4909      	ldr	r1, [pc, #36]	; (1a5ac <PWM::set(float)+0x7c>)
   1a586:	6448      	str	r0, [r1, #68]	; 0x44
   1a588:	e001      	b.n	1a58e <PWM::set(float)+0x5e>
   1a58a:	4908      	ldr	r1, [pc, #32]	; (1a5ac <PWM::set(float)+0x7c>)
   1a58c:	6488      	str	r0, [r1, #72]	; 0x48
   1a58e:	2001      	movs	r0, #1
   1a590:	3201      	adds	r2, #1
   1a592:	fa00 f202 	lsl.w	r2, r0, r2
   1a596:	4b05      	ldr	r3, [pc, #20]	; (1a5ac <PWM::set(float)+0x7c>)
   1a598:	6d19      	ldr	r1, [r3, #80]	; 0x50
   1a59a:	430a      	orrs	r2, r1
   1a59c:	651a      	str	r2, [r3, #80]	; 0x50
   1a59e:	bd38      	pop	{r3, r4, r5, pc}
   1a5a0:	2000      	movs	r0, #0
   1a5a2:	bd38      	pop	{r3, r4, r5, pc}
   1a5a4:	42c80000 	.word	0x42c80000
   1a5a8:	2007c990 	.word	0x2007c990
   1a5ac:	40018000 	.word	0x40018000

0001a5b0 <RIT_IRQHandler>:
RIT_IRQHandler():
   1a5b0:	b508      	push	{r3, lr}
   1a5b2:	4b04      	ldr	r3, [pc, #16]	; (1a5c4 <RIT_IRQHandler+0x14>)
   1a5b4:	681b      	ldr	r3, [r3, #0]
   1a5b6:	4798      	blx	r3
   1a5b8:	4b03      	ldr	r3, [pc, #12]	; (1a5c8 <RIT_IRQHandler+0x18>)
   1a5ba:	7a1a      	ldrb	r2, [r3, #8]
   1a5bc:	f042 0201 	orr.w	r2, r2, #1
   1a5c0:	721a      	strb	r2, [r3, #8]
   1a5c2:	bd08      	pop	{r3, pc}
   1a5c4:	2007c994 	.word	0x2007c994
   1a5c8:	400b0000 	.word	0x400b0000

0001a5cc <rit_enable>:
rit_enable():
   1a5cc:	b570      	push	{r4, r5, r6, lr}
   1a5ce:	460d      	mov	r5, r1
   1a5d0:	4606      	mov	r6, r0
   1a5d2:	b310      	cbz	r0, 1a61a <rit_enable+0x4e>
   1a5d4:	2900      	cmp	r1, #0
   1a5d6:	f04f 0010 	mov.w	r0, #16
   1a5da:	f04f 0101 	mov.w	r1, #1
   1a5de:	4c0f      	ldr	r4, [pc, #60]	; (1a61c <rit_enable+0x50>)
   1a5e0:	bf08      	it	eq
   1a5e2:	2501      	moveq	r5, #1
   1a5e4:	f002 f970 	bl	1c8c8 <lpc_pconp>
   1a5e8:	201d      	movs	r0, #29
   1a5ea:	2101      	movs	r1, #1
   1a5ec:	f002 f984 	bl	1c8f8 <lpc_pclk>
   1a5f0:	2300      	movs	r3, #0
   1a5f2:	7223      	strb	r3, [r4, #8]
   1a5f4:	60e3      	str	r3, [r4, #12]
   1a5f6:	6063      	str	r3, [r4, #4]
   1a5f8:	f002 fb32 	bl	1cc60 <sys_get_cpu_clock>
   1a5fc:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
   1a600:	fbb3 f5f5 	udiv	r5, r3, r5
   1a604:	fbb0 f0f5 	udiv	r0, r0, r5
   1a608:	230b      	movs	r3, #11
   1a60a:	6020      	str	r0, [r4, #0]
   1a60c:	7223      	strb	r3, [r4, #8]
   1a60e:	4b04      	ldr	r3, [pc, #16]	; (1a620 <rit_enable+0x54>)
   1a610:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
   1a614:	601e      	str	r6, [r3, #0]
   1a616:	4b03      	ldr	r3, [pc, #12]	; (1a624 <rit_enable+0x58>)
   1a618:	601a      	str	r2, [r3, #0]
   1a61a:	bd70      	pop	{r4, r5, r6, pc}
   1a61c:	400b0000 	.word	0x400b0000
   1a620:	2007c994 	.word	0x2007c994
   1a624:	e000e100 	.word	0xe000e100

0001a628 <lpc_timer_get_struct>:
lpc_timer_get_struct():
   1a628:	b530      	push	{r4, r5, lr}
   1a62a:	4b06      	ldr	r3, [pc, #24]	; (1a644 <lpc_timer_get_struct+0x1c>)
   1a62c:	b085      	sub	sp, #20
   1a62e:	ad04      	add	r5, sp, #16
   1a630:	4604      	mov	r4, r0
   1a632:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
   1a634:	e905 000f 	stmdb	r5, {r0, r1, r2, r3}
   1a638:	eb05 0484 	add.w	r4, r5, r4, lsl #2
   1a63c:	f854 0c10 	ldr.w	r0, [r4, #-16]
   1a640:	b005      	add	sp, #20
   1a642:	bd30      	pop	{r4, r5, pc}
   1a644:	00027280 	.word	0x00027280

0001a648 <lpc_timer_enable>:
lpc_timer_enable():
   1a648:	b573      	push	{r0, r1, r4, r5, r6, lr}
   1a64a:	460e      	mov	r6, r1
   1a64c:	4605      	mov	r5, r0
   1a64e:	f7ff ffeb 	bl	1a628 <lpc_timer_get_struct>
   1a652:	4b0f      	ldr	r3, [pc, #60]	; (1a690 <lpc_timer_enable+0x48>)
   1a654:	4604      	mov	r4, r0
   1a656:	6818      	ldr	r0, [r3, #0]
   1a658:	ab02      	add	r3, sp, #8
   1a65a:	441d      	add	r5, r3
   1a65c:	9000      	str	r0, [sp, #0]
   1a65e:	9001      	str	r0, [sp, #4]
   1a660:	2101      	movs	r1, #1
   1a662:	f815 0c08 	ldrb.w	r0, [r5, #-8]
   1a666:	f002 f92f 	bl	1c8c8 <lpc_pconp>
   1a66a:	f815 0c04 	ldrb.w	r0, [r5, #-4]
   1a66e:	2101      	movs	r1, #1
   1a670:	f002 f942 	bl	1c8f8 <lpc_pclk>
   1a674:	2300      	movs	r3, #0
   1a676:	2201      	movs	r2, #1
   1a678:	60a3      	str	r3, [r4, #8]
   1a67a:	6062      	str	r2, [r4, #4]
   1a67c:	6723      	str	r3, [r4, #112]	; 0x70
   1a67e:	f002 faef 	bl	1cc60 <sys_get_cpu_clock>
   1a682:	4b04      	ldr	r3, [pc, #16]	; (1a694 <lpc_timer_enable+0x4c>)
   1a684:	fbb0 f0f3 	udiv	r0, r0, r3
   1a688:	4346      	muls	r6, r0
   1a68a:	60e6      	str	r6, [r4, #12]
   1a68c:	b002      	add	sp, #8
   1a68e:	bd70      	pop	{r4, r5, r6, pc}
   1a690:	00027290 	.word	0x00027290
   1a694:	000f4240 	.word	0x000f4240

0001a698 <NordicStream::flush()>:
_ZN12NordicStream5flushEv():
   1a698:	b5f0      	push	{r4, r5, r6, r7, lr}
   1a69a:	f890 5053 	ldrb.w	r5, [r0, #83]	; 0x53
   1a69e:	b08b      	sub	sp, #44	; 0x2c
   1a6a0:	4604      	mov	r4, r0
   1a6a2:	b905      	cbnz	r5, 1a6a6 <NordicStream::flush()+0xe>
   1a6a4:	7c45      	ldrb	r5, [r0, #17]
   1a6a6:	4628      	mov	r0, r5
   1a6a8:	f7fa fc70 	bl	14f8c <mesh_get_max_timeout_before_packet_fails>
   1a6ac:	f894 2054 	ldrb.w	r2, [r4, #84]	; 0x54
   1a6b0:	2600      	movs	r6, #0
   1a6b2:	4607      	mov	r7, r0
   1a6b4:	f894 3052 	ldrb.w	r3, [r4, #82]	; 0x52
   1a6b8:	9200      	str	r2, [sp, #0]
   1a6ba:	f884 6052 	strb.w	r6, [r4, #82]	; 0x52
   1a6be:	4628      	mov	r0, r5
   1a6c0:	2101      	movs	r1, #1
   1a6c2:	f104 023a 	add.w	r2, r4, #58	; 0x3a
   1a6c6:	f7fa fa9d 	bl	14c04 <mesh_send>
   1a6ca:	b908      	cbnz	r0, 1a6d0 <NordicStream::flush()+0x38>
   1a6cc:	2000      	movs	r0, #0
   1a6ce:	e011      	b.n	1a6f4 <NordicStream::flush()+0x5c>
   1a6d0:	a802      	add	r0, sp, #8
   1a6d2:	4639      	mov	r1, r7
   1a6d4:	f7fb f810 	bl	156f8 <wireless_get_ack_pkt>
   1a6d8:	2800      	cmp	r0, #0
   1a6da:	d0f7      	beq.n	1a6cc <NordicStream::flush()+0x34>
   1a6dc:	f89d 300c 	ldrb.w	r3, [sp, #12]
   1a6e0:	099b      	lsrs	r3, r3, #6
   1a6e2:	2b03      	cmp	r3, #3
   1a6e4:	d105      	bne.n	1a6f2 <NordicStream::flush()+0x5a>
   1a6e6:	f89d 0008 	ldrb.w	r0, [sp, #8]
   1a6ea:	1b43      	subs	r3, r0, r5
   1a6ec:	4258      	negs	r0, r3
   1a6ee:	4158      	adcs	r0, r3
   1a6f0:	e000      	b.n	1a6f4 <NordicStream::flush()+0x5c>
   1a6f2:	4630      	mov	r0, r6
   1a6f4:	b00b      	add	sp, #44	; 0x2c
   1a6f6:	bdf0      	pop	{r4, r5, r6, r7, pc}

0001a6f8 <NordicStream::~NordicStream()>:
_ZN12NordicStreamD2Ev():
   1a6f8:	b510      	push	{r4, lr}
   1a6fa:	4b03      	ldr	r3, [pc, #12]	; (1a708 <NordicStream::~NordicStream()+0x10>)
   1a6fc:	4604      	mov	r4, r0
   1a6fe:	6003      	str	r3, [r0, #0]
   1a700:	f000 fa62 	bl	1abc8 <CharDev::~CharDev()>
   1a704:	4620      	mov	r0, r4
   1a706:	bd10      	pop	{r4, pc}
   1a708:	000272d8 	.word	0x000272d8

0001a70c <NordicStream::~NordicStream()>:
_ZN12NordicStreamD0Ev():
   1a70c:	b510      	push	{r4, lr}
   1a70e:	4604      	mov	r4, r0
   1a710:	f7ff fff2 	bl	1a6f8 <NordicStream::~NordicStream()>
   1a714:	4620      	mov	r0, r4
   1a716:	f7f5 fdad 	bl	10274 <operator delete(void*)>
   1a71a:	4620      	mov	r0, r4
   1a71c:	bd10      	pop	{r4, pc}

0001a71e <NordicStream::putChar(char, unsigned int)>:
_ZN12NordicStream7putCharEcj():
   1a71e:	b510      	push	{r4, lr}
   1a720:	f890 4052 	ldrb.w	r4, [r0, #82]	; 0x52
   1a724:	1c62      	adds	r2, r4, #1
   1a726:	b2d2      	uxtb	r2, r2
   1a728:	4404      	add	r4, r0
   1a72a:	2a17      	cmp	r2, #23
   1a72c:	f880 2052 	strb.w	r2, [r0, #82]	; 0x52
   1a730:	f884 103a 	strb.w	r1, [r4, #58]	; 0x3a
   1a734:	d902      	bls.n	1a73c <NordicStream::putChar(char, unsigned int)+0x1e>
   1a736:	6803      	ldr	r3, [r0, #0]
   1a738:	689b      	ldr	r3, [r3, #8]
   1a73a:	4798      	blx	r3
   1a73c:	2001      	movs	r0, #1
   1a73e:	bd10      	pop	{r4, pc}

0001a740 <NordicStream::getChar(char*, unsigned int)>:
_ZN12NordicStream7getCharEPcj():
   1a740:	b538      	push	{r3, r4, r5, lr}
   1a742:	460d      	mov	r5, r1
   1a744:	7e03      	ldrb	r3, [r0, #24]
   1a746:	f890 1031 	ldrb.w	r1, [r0, #49]	; 0x31
   1a74a:	4604      	mov	r4, r0
   1a74c:	4299      	cmp	r1, r3
   1a74e:	d309      	bcc.n	1a764 <NordicStream::getChar(char*, unsigned int)+0x24>
   1a750:	3011      	adds	r0, #17
   1a752:	4611      	mov	r1, r2
   1a754:	f7fa ffc6 	bl	156e4 <wireless_get_rx_pkt>
   1a758:	b168      	cbz	r0, 1a776 <NordicStream::getChar(char*, unsigned int)+0x36>
   1a75a:	7e20      	ldrb	r0, [r4, #24]
   1a75c:	2300      	movs	r3, #0
   1a75e:	f884 3031 	strb.w	r3, [r4, #49]	; 0x31
   1a762:	b140      	cbz	r0, 1a776 <NordicStream::getChar(char*, unsigned int)+0x36>
   1a764:	f894 3031 	ldrb.w	r3, [r4, #49]	; 0x31
   1a768:	2001      	movs	r0, #1
   1a76a:	1c5a      	adds	r2, r3, #1
   1a76c:	f884 2031 	strb.w	r2, [r4, #49]	; 0x31
   1a770:	441c      	add	r4, r3
   1a772:	7e63      	ldrb	r3, [r4, #25]
   1a774:	702b      	strb	r3, [r5, #0]
   1a776:	bd38      	pop	{r3, r4, r5, pc}

0001a778 <NordicStream::NordicStream()>:
_ZN12NordicStreamC1Ev():
   1a778:	b570      	push	{r4, r5, r6, lr}
   1a77a:	4604      	mov	r4, r0
   1a77c:	f000 fac2 	bl	1ad04 <CharDev::CharDev()>
   1a780:	4b0c      	ldr	r3, [pc, #48]	; (1a7b4 <NordicStream::NordicStream()+0x3c>)
   1a782:	2500      	movs	r5, #0
   1a784:	6023      	str	r3, [r4, #0]
   1a786:	2621      	movs	r6, #33	; 0x21
   1a788:	2303      	movs	r3, #3
   1a78a:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
   1a78e:	4629      	mov	r1, r5
   1a790:	4632      	mov	r2, r6
   1a792:	f884 5053 	strb.w	r5, [r4, #83]	; 0x53
   1a796:	f104 0011 	add.w	r0, r4, #17
   1a79a:	f004 fa60 	bl	1ec5e <memset>
   1a79e:	4629      	mov	r1, r5
   1a7a0:	4632      	mov	r2, r6
   1a7a2:	f104 0032 	add.w	r0, r4, #50	; 0x32
   1a7a6:	f004 fa5a 	bl	1ec5e <memset>
   1a7aa:	2007      	movs	r0, #7
   1a7ac:	f7fa f8fc 	bl	149a8 <mesh_set_retry_count>
   1a7b0:	4620      	mov	r0, r4
   1a7b2:	bd70      	pop	{r4, r5, r6, pc}
   1a7b4:	000272d8 	.word	0x000272d8

0001a7b8 <rtc_gettime>:
rtc_gettime():
   1a7b8:	b5f0      	push	{r4, r5, r6, r7, lr}
   1a7ba:	4b13      	ldr	r3, [pc, #76]	; (1a808 <rtc_gettime+0x50>)
   1a7bc:	b087      	sub	sp, #28
   1a7be:	4607      	mov	r7, r0
   1a7c0:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
   1a7c4:	e88d 0007 	stmia.w	sp, {r0, r1, r2}
   1a7c8:	ad03      	add	r5, sp, #12
   1a7ca:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
   1a7ce:	e885 0007 	stmia.w	r5, {r0, r1, r2}
   1a7d2:	466c      	mov	r4, sp
   1a7d4:	461e      	mov	r6, r3
   1a7d6:	4668      	mov	r0, sp
   1a7d8:	4629      	mov	r1, r5
   1a7da:	220c      	movs	r2, #12
   1a7dc:	f004 fa0c 	bl	1ebf8 <memcmp>
   1a7e0:	b140      	cbz	r0, 1a7f4 <rtc_gettime+0x3c>
   1a7e2:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
   1a7e6:	e884 0007 	stmia.w	r4, {r0, r1, r2}
   1a7ea:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
   1a7ee:	e885 0007 	stmia.w	r5, {r0, r1, r2}
   1a7f2:	e7f0      	b.n	1a7d6 <rtc_gettime+0x1e>
   1a7f4:	466c      	mov	r4, sp
   1a7f6:	cc03      	ldmia	r4!, {r0, r1}
   1a7f8:	6038      	str	r0, [r7, #0]
   1a7fa:	6820      	ldr	r0, [r4, #0]
   1a7fc:	6079      	str	r1, [r7, #4]
   1a7fe:	60b8      	str	r0, [r7, #8]
   1a800:	4638      	mov	r0, r7
   1a802:	b007      	add	sp, #28
   1a804:	bdf0      	pop	{r4, r5, r6, r7, pc}
   1a806:	bf00      	nop
   1a808:	40024014 	.word	0x40024014

0001a80c <rtc_settime>:
rtc_settime():
   1a80c:	4b18      	ldr	r3, [pc, #96]	; (1a870 <rtc_settime+0x64>)
   1a80e:	2200      	movs	r2, #0
   1a810:	721a      	strb	r2, [r3, #8]
   1a812:	7802      	ldrb	r2, [r0, #0]
   1a814:	f3c2 0205 	ubfx	r2, r2, #0, #6
   1a818:	f883 2020 	strb.w	r2, [r3, #32]
   1a81c:	7842      	ldrb	r2, [r0, #1]
   1a81e:	f3c2 0205 	ubfx	r2, r2, #0, #6
   1a822:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
   1a826:	7882      	ldrb	r2, [r0, #2]
   1a828:	f3c2 0204 	ubfx	r2, r2, #0, #5
   1a82c:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
   1a830:	78c2      	ldrb	r2, [r0, #3]
   1a832:	f3c2 0202 	ubfx	r2, r2, #0, #3
   1a836:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
   1a83a:	7902      	ldrb	r2, [r0, #4]
   1a83c:	f3c2 0204 	ubfx	r2, r2, #0, #5
   1a840:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
   1a844:	7942      	ldrb	r2, [r0, #5]
   1a846:	f3c2 0203 	ubfx	r2, r2, #0, #4
   1a84a:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
   1a84e:	79c2      	ldrb	r2, [r0, #7]
   1a850:	7981      	ldrb	r1, [r0, #6]
   1a852:	f002 020f 	and.w	r2, r2, #15
   1a856:	ea41 2202 	orr.w	r2, r1, r2, lsl #8
   1a85a:	879a      	strh	r2, [r3, #60]	; 0x3c
   1a85c:	7a42      	ldrb	r2, [r0, #9]
   1a85e:	7a01      	ldrb	r1, [r0, #8]
   1a860:	f002 020f 	and.w	r2, r2, #15
   1a864:	ea41 2202 	orr.w	r2, r1, r2, lsl #8
   1a868:	869a      	strh	r2, [r3, #52]	; 0x34
   1a86a:	2201      	movs	r2, #1
   1a86c:	721a      	strb	r2, [r3, #8]
   1a86e:	4770      	bx	lr
   1a870:	40024000 	.word	0x40024000

0001a874 <rtc_init>:
rtc_init():
   1a874:	b51f      	push	{r0, r1, r2, r3, r4, lr}
   1a876:	2009      	movs	r0, #9
   1a878:	2101      	movs	r1, #1
   1a87a:	f002 f825 	bl	1c8c8 <lpc_pconp>
   1a87e:	4b30      	ldr	r3, [pc, #192]	; (1a940 <rtc_init+0xcc>)
   1a880:	2201      	movs	r2, #1
   1a882:	721a      	strb	r2, [r3, #8]
   1a884:	a801      	add	r0, sp, #4
   1a886:	f7ff ff97 	bl	1a7b8 <rtc_gettime>
   1a88a:	f8bd 300a 	ldrh.w	r3, [sp, #10]
   1a88e:	f603 0326 	addw	r3, r3, #2086	; 0x826
   1a892:	f3c3 030b 	ubfx	r3, r3, #0, #12
   1a896:	2b0f      	cmp	r3, #15
   1a898:	d81e      	bhi.n	1a8d8 <rtc_init+0x64>
   1a89a:	f89d 3005 	ldrb.w	r3, [sp, #5]
   1a89e:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   1a8a2:	2b3b      	cmp	r3, #59	; 0x3b
   1a8a4:	dc18      	bgt.n	1a8d8 <rtc_init+0x64>
   1a8a6:	f89d 3004 	ldrb.w	r3, [sp, #4]
   1a8aa:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   1a8ae:	2b3b      	cmp	r3, #59	; 0x3b
   1a8b0:	dc12      	bgt.n	1a8d8 <rtc_init+0x64>
   1a8b2:	f89d 3006 	ldrb.w	r3, [sp, #6]
   1a8b6:	f003 031f 	and.w	r3, r3, #31
   1a8ba:	2b17      	cmp	r3, #23
   1a8bc:	dc0c      	bgt.n	1a8d8 <rtc_init+0x64>
   1a8be:	f8bd 300c 	ldrh.w	r3, [sp, #12]
   1a8c2:	f3c3 030b 	ubfx	r3, r3, #0, #12
   1a8c6:	f5b3 7fb7 	cmp.w	r3, #366	; 0x16e
   1a8ca:	da05      	bge.n	1a8d8 <rtc_init+0x64>
   1a8cc:	f89d 3009 	ldrb.w	r3, [sp, #9]
   1a8d0:	f003 030f 	and.w	r3, r3, #15
   1a8d4:	2b0c      	cmp	r3, #12
   1a8d6:	dd2f      	ble.n	1a938 <rtc_init+0xc4>
   1a8d8:	f89d 3008 	ldrb.w	r3, [sp, #8]
   1a8dc:	2201      	movs	r2, #1
   1a8de:	f362 0304 	bfi	r3, r2, #0, #5
   1a8e2:	f88d 3008 	strb.w	r3, [sp, #8]
   1a8e6:	f89d 3009 	ldrb.w	r3, [sp, #9]
   1a8ea:	a801      	add	r0, sp, #4
   1a8ec:	f362 0303 	bfi	r3, r2, #0, #4
   1a8f0:	f88d 3009 	strb.w	r3, [sp, #9]
   1a8f4:	f8bd 300a 	ldrh.w	r3, [sp, #10]
   1a8f8:	f240 72da 	movw	r2, #2010	; 0x7da
   1a8fc:	f362 030b 	bfi	r3, r2, #0, #12
   1a900:	f8ad 300a 	strh.w	r3, [sp, #10]
   1a904:	f89d 3007 	ldrb.w	r3, [sp, #7]
   1a908:	f36f 0302 	bfc	r3, #0, #3
   1a90c:	f88d 3007 	strb.w	r3, [sp, #7]
   1a910:	f89d 3006 	ldrb.w	r3, [sp, #6]
   1a914:	f36f 0304 	bfc	r3, #0, #5
   1a918:	f88d 3006 	strb.w	r3, [sp, #6]
   1a91c:	f89d 3005 	ldrb.w	r3, [sp, #5]
   1a920:	f36f 0305 	bfc	r3, #0, #6
   1a924:	f88d 3005 	strb.w	r3, [sp, #5]
   1a928:	f89d 3004 	ldrb.w	r3, [sp, #4]
   1a92c:	f36f 0305 	bfc	r3, #0, #6
   1a930:	f88d 3004 	strb.w	r3, [sp, #4]
   1a934:	f7ff ff6a 	bl	1a80c <rtc_settime>
   1a938:	b005      	add	sp, #20
   1a93a:	f85d fb04 	ldr.w	pc, [sp], #4
   1a93e:	bf00      	nop
   1a940:	40024000 	.word	0x40024000

0001a944 <rtc_get_date_time_str>:
rtc_get_date_time_str():
   1a944:	b507      	push	{r0, r1, r2, lr}
   1a946:	a801      	add	r0, sp, #4
   1a948:	f006 fc42 	bl	211d0 <time>
   1a94c:	a801      	add	r0, sp, #4
   1a94e:	f003 fffa 	bl	1e946 <ctime>
   1a952:	b003      	add	sp, #12
   1a954:	f85d fb04 	ldr.w	pc, [sp], #4

0001a958 <ssp1_dma_init>:
ssp1_dma_init():
   1a958:	b508      	push	{r3, lr}
   1a95a:	201d      	movs	r0, #29
   1a95c:	2101      	movs	r1, #1
   1a95e:	f001 ffb3 	bl	1c8c8 <lpc_pconp>
   1a962:	4b03      	ldr	r3, [pc, #12]	; (1a970 <ssp1_dma_init+0x18>)
   1a964:	2201      	movs	r2, #1
   1a966:	631a      	str	r2, [r3, #48]	; 0x30
   1a968:	6b1a      	ldr	r2, [r3, #48]	; 0x30
   1a96a:	07d2      	lsls	r2, r2, #31
   1a96c:	d5fc      	bpl.n	1a968 <ssp1_dma_init+0x10>
   1a96e:	bd08      	pop	{r3, pc}
   1a970:	50004000 	.word	0x50004000

0001a974 <ssp1_dma_transfer_block>:
ssp1_dma_transfer_block():
   1a974:	b573      	push	{r0, r1, r4, r5, r6, lr}
   1a976:	f04f 33ff 	mov.w	r3, #4294967295
   1a97a:	f5b1 5f80 	cmp.w	r1, #4096	; 0x1000
   1a97e:	9301      	str	r3, [sp, #4]
   1a980:	d24a      	bcs.n	1aa18 <ssp1_dma_transfer_block+0xa4>
   1a982:	4c28      	ldr	r4, [pc, #160]	; (1aa24 <ssp1_dma_transfer_block+0xb0>)
   1a984:	6923      	ldr	r3, [r4, #16]
   1a986:	07db      	lsls	r3, r3, #31
   1a988:	d448      	bmi.n	1aa1c <ssp1_dma_transfer_block+0xa8>
   1a98a:	4b27      	ldr	r3, [pc, #156]	; (1aa28 <ssp1_dma_transfer_block+0xb4>)
   1a98c:	691b      	ldr	r3, [r3, #16]
   1a98e:	07de      	lsls	r6, r3, #31
   1a990:	d444      	bmi.n	1aa1c <ssp1_dma_transfer_block+0xa8>
   1a992:	4b26      	ldr	r3, [pc, #152]	; (1aa2c <ssp1_dma_transfer_block+0xb8>)
   1a994:	68dd      	ldr	r5, [r3, #12]
   1a996:	076d      	lsls	r5, r5, #29
   1a998:	d501      	bpl.n	1a99e <ssp1_dma_transfer_block+0x2a>
   1a99a:	689b      	ldr	r3, [r3, #8]
   1a99c:	e7f9      	b.n	1a992 <ssp1_dma_transfer_block+0x1e>
   1a99e:	4b24      	ldr	r3, [pc, #144]	; (1aa30 <ssp1_dma_transfer_block+0xbc>)
   1a9a0:	2503      	movs	r5, #3
   1a9a2:	609d      	str	r5, [r3, #8]
   1a9a4:	611d      	str	r5, [r3, #16]
   1a9a6:	4d23      	ldr	r5, [pc, #140]	; (1aa34 <ssp1_dma_transfer_block+0xc0>)
   1a9a8:	f503 7390 	add.w	r3, r3, #288	; 0x120
   1a9ac:	6025      	str	r5, [r4, #0]
   1a9ae:	b122      	cbz	r2, 1a9ba <ssp1_dma_transfer_block+0x46>
   1a9b0:	ae01      	add	r6, sp, #4
   1a9b2:	605e      	str	r6, [r3, #4]
   1a9b4:	f041 4600 	orr.w	r6, r1, #2147483648	; 0x80000000
   1a9b8:	e002      	b.n	1a9c0 <ssp1_dma_transfer_block+0x4c>
   1a9ba:	6058      	str	r0, [r3, #4]
   1a9bc:	f041 4608 	orr.w	r6, r1, #2281701376	; 0x88000000
   1a9c0:	60de      	str	r6, [r3, #12]
   1a9c2:	2300      	movs	r3, #0
   1a9c4:	60a3      	str	r3, [r4, #8]
   1a9c6:	f241 0306 	movw	r3, #4102	; 0x1006
   1a9ca:	6123      	str	r3, [r4, #16]
   1a9cc:	4b16      	ldr	r3, [pc, #88]	; (1aa28 <ssp1_dma_transfer_block+0xb4>)
   1a9ce:	b11a      	cbz	r2, 1a9d8 <ssp1_dma_transfer_block+0x64>
   1a9d0:	6018      	str	r0, [r3, #0]
   1a9d2:	f041 6180 	orr.w	r1, r1, #67108864	; 0x4000000
   1a9d6:	e001      	b.n	1a9dc <ssp1_dma_transfer_block+0x68>
   1a9d8:	aa01      	add	r2, sp, #4
   1a9da:	601a      	str	r2, [r3, #0]
   1a9dc:	2200      	movs	r2, #0
   1a9de:	60d9      	str	r1, [r3, #12]
   1a9e0:	605d      	str	r5, [r3, #4]
   1a9e2:	609a      	str	r2, [r3, #8]
   1a9e4:	f44f 6208 	mov.w	r2, #2176	; 0x880
   1a9e8:	611a      	str	r2, [r3, #16]
   1a9ea:	6922      	ldr	r2, [r4, #16]
   1a9ec:	f042 0201 	orr.w	r2, r2, #1
   1a9f0:	6122      	str	r2, [r4, #16]
   1a9f2:	691a      	ldr	r2, [r3, #16]
   1a9f4:	f042 0201 	orr.w	r2, r2, #1
   1a9f8:	611a      	str	r2, [r3, #16]
   1a9fa:	4b0c      	ldr	r3, [pc, #48]	; (1aa2c <ssp1_dma_transfer_block+0xb8>)
   1a9fc:	6a5a      	ldr	r2, [r3, #36]	; 0x24
   1a9fe:	f042 0203 	orr.w	r2, r2, #3
   1aa02:	625a      	str	r2, [r3, #36]	; 0x24
   1aa04:	68e0      	ldr	r0, [r4, #12]
   1aa06:	f3c0 000b 	ubfx	r0, r0, #0, #12
   1aa0a:	2800      	cmp	r0, #0
   1aa0c:	d1fa      	bne.n	1aa04 <ssp1_dma_transfer_block+0x90>
   1aa0e:	6a5a      	ldr	r2, [r3, #36]	; 0x24
   1aa10:	f022 0203 	bic.w	r2, r2, #3
   1aa14:	625a      	str	r2, [r3, #36]	; 0x24
   1aa16:	e002      	b.n	1aa1e <ssp1_dma_transfer_block+0xaa>
   1aa18:	2001      	movs	r0, #1
   1aa1a:	e000      	b.n	1aa1e <ssp1_dma_transfer_block+0xaa>
   1aa1c:	2002      	movs	r0, #2
   1aa1e:	b002      	add	sp, #8
   1aa20:	bd70      	pop	{r4, r5, r6, pc}
   1aa22:	bf00      	nop
   1aa24:	50004120 	.word	0x50004120
   1aa28:	50004100 	.word	0x50004100
   1aa2c:	40030000 	.word	0x40030000
   1aa30:	50004000 	.word	0x50004000
   1aa34:	40030008 	.word	0x40030008

0001aa38 <spi1_lock>:
spi1_lock():
   1aa38:	b510      	push	{r4, lr}
   1aa3a:	4c0a      	ldr	r4, [pc, #40]	; (1aa64 <spi1_lock+0x2c>)
   1aa3c:	6823      	ldr	r3, [r4, #0]
   1aa3e:	b91b      	cbnz	r3, 1aa48 <spi1_lock+0x10>
   1aa40:	2001      	movs	r0, #1
   1aa42:	f000 fe36 	bl	1b6b2 <xQueueCreateMutex>
   1aa46:	6020      	str	r0, [r4, #0]
   1aa48:	f001 fc12 	bl	1c270 <xTaskGetSchedulerState>
   1aa4c:	2802      	cmp	r0, #2
   1aa4e:	d108      	bne.n	1aa62 <spi1_lock+0x2a>
   1aa50:	2100      	movs	r1, #0
   1aa52:	6820      	ldr	r0, [r4, #0]
   1aa54:	f04f 32ff 	mov.w	r2, #4294967295
   1aa58:	460b      	mov	r3, r1
   1aa5a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   1aa5e:	f000 be87 	b.w	1b770 <xQueueGenericReceive>
   1aa62:	bd10      	pop	{r4, pc}
   1aa64:	2007c998 	.word	0x2007c998

0001aa68 <spi1_unlock>:
spi1_unlock():
   1aa68:	b510      	push	{r4, lr}
   1aa6a:	f001 fc01 	bl	1c270 <xTaskGetSchedulerState>
   1aa6e:	2802      	cmp	r0, #2
   1aa70:	d108      	bne.n	1aa84 <spi1_unlock+0x1c>
   1aa72:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   1aa76:	4b04      	ldr	r3, [pc, #16]	; (1aa88 <spi1_unlock+0x20>)
   1aa78:	2100      	movs	r1, #0
   1aa7a:	6818      	ldr	r0, [r3, #0]
   1aa7c:	460a      	mov	r2, r1
   1aa7e:	460b      	mov	r3, r1
   1aa80:	f000 bda6 	b.w	1b5d0 <xQueueGenericSend>
   1aa84:	bd10      	pop	{r4, pc}
   1aa86:	bf00      	nop
   1aa88:	2007c998 	.word	0x2007c998

0001aa8c <UartDev::~UartDev()>:
_ZN7UartDevD2Ev():
   1aa8c:	b510      	push	{r4, lr}
   1aa8e:	4b03      	ldr	r3, [pc, #12]	; (1aa9c <UartDev::~UartDev()+0x10>)
   1aa90:	4604      	mov	r4, r0
   1aa92:	6003      	str	r3, [r0, #0]
   1aa94:	f000 f898 	bl	1abc8 <CharDev::~CharDev()>
   1aa98:	4620      	mov	r0, r4
   1aa9a:	bd10      	pop	{r4, pc}
   1aa9c:	00027438 	.word	0x00027438

0001aaa0 <Uart0::~Uart0()>:
_ZN5Uart0D1Ev():
   1aaa0:	b510      	push	{r4, lr}
   1aaa2:	4b03      	ldr	r3, [pc, #12]	; (1aab0 <Uart0::~Uart0()+0x10>)
   1aaa4:	4604      	mov	r4, r0
   1aaa6:	6003      	str	r3, [r0, #0]
   1aaa8:	f7ff fff0 	bl	1aa8c <UartDev::~UartDev()>
   1aaac:	4620      	mov	r0, r4
   1aaae:	bd10      	pop	{r4, pc}
   1aab0:	00027368 	.word	0x00027368

0001aab4 <UartDev::~UartDev()>:
_ZN7UartDevD0Ev():
   1aab4:	b510      	push	{r4, lr}
   1aab6:	4604      	mov	r4, r0
   1aab8:	f7ff ffe8 	bl	1aa8c <UartDev::~UartDev()>
   1aabc:	4620      	mov	r0, r4
   1aabe:	f7f5 fbd9 	bl	10274 <operator delete(void*)>
   1aac2:	4620      	mov	r0, r4
   1aac4:	bd10      	pop	{r4, pc}

0001aac6 <Uart0::~Uart0()>:
_ZN5Uart0D0Ev():
   1aac6:	b510      	push	{r4, lr}
   1aac8:	4604      	mov	r4, r0
   1aaca:	f7ff ffe9 	bl	1aaa0 <Uart0::~Uart0()>
   1aace:	4620      	mov	r0, r4
   1aad0:	f7f5 fbd0 	bl	10274 <operator delete(void*)>
   1aad4:	4620      	mov	r0, r4
   1aad6:	bd10      	pop	{r4, pc}

0001aad8 <Uart0::init(unsigned int, int, int)>:
_ZN5Uart04initEjii():
   1aad8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
   1aadc:	4c0e      	ldr	r4, [pc, #56]	; (1ab18 <Uart0::init(unsigned int, int, int)+0x40>)
   1aade:	4698      	mov	r8, r3
   1aae0:	6823      	ldr	r3, [r4, #0]
   1aae2:	4607      	mov	r7, r0
   1aae4:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
   1aae8:	6023      	str	r3, [r4, #0]
   1aaea:	6823      	ldr	r3, [r4, #0]
   1aaec:	460e      	mov	r6, r1
   1aaee:	f043 0350 	orr.w	r3, r3, #80	; 0x50
   1aaf2:	6023      	str	r3, [r4, #0]
   1aaf4:	2101      	movs	r1, #1
   1aaf6:	2003      	movs	r0, #3
   1aaf8:	4615      	mov	r5, r2
   1aafa:	f001 fefd 	bl	1c8f8 <lpc_pclk>
   1aafe:	f002 f8af 	bl	1cc60 <sys_get_cpu_clock>
   1ab02:	f8cd 8000 	str.w	r8, [sp]
   1ab06:	4601      	mov	r1, r0
   1ab08:	4632      	mov	r2, r6
   1ab0a:	4638      	mov	r0, r7
   1ab0c:	462b      	mov	r3, r5
   1ab0e:	f000 fbcb 	bl	1b2a8 <UartDev::init(unsigned int, unsigned int, int, int)>
   1ab12:	b002      	add	sp, #8
   1ab14:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1ab18:	4002c000 	.word	0x4002c000

0001ab1c <Uart0::Uart0()>:
_ZN5Uart0C1Ev():
   1ab1c:	b510      	push	{r4, lr}
   1ab1e:	4904      	ldr	r1, [pc, #16]	; (1ab30 <Uart0::Uart0()+0x14>)
   1ab20:	4604      	mov	r4, r0
   1ab22:	f000 fbad 	bl	1b280 <UartDev::UartDev(unsigned int*)>
   1ab26:	4b03      	ldr	r3, [pc, #12]	; (1ab34 <Uart0::Uart0()+0x18>)
   1ab28:	4620      	mov	r0, r4
   1ab2a:	6023      	str	r3, [r4, #0]
   1ab2c:	bd10      	pop	{r4, pc}
   1ab2e:	bf00      	nop
   1ab30:	4000c000 	.word	0x4000c000
   1ab34:	00027368 	.word	0x00027368

0001ab38 <UART0_IRQHandler>:
UART0_IRQHandler():
   1ab38:	b538      	push	{r3, r4, r5, lr}
   1ab3a:	4c07      	ldr	r4, [pc, #28]	; (1ab58 <UART0_IRQHandler+0x20>)
   1ab3c:	6823      	ldr	r3, [r4, #0]
   1ab3e:	b933      	cbnz	r3, 1ab4e <UART0_IRQHandler+0x16>
   1ab40:	202c      	movs	r0, #44	; 0x2c
   1ab42:	f7f5 fb95 	bl	10270 <operator new(unsigned int)>
   1ab46:	4605      	mov	r5, r0
   1ab48:	f7ff ffe8 	bl	1ab1c <Uart0::Uart0()>
   1ab4c:	6025      	str	r5, [r4, #0]
   1ab4e:	6820      	ldr	r0, [r4, #0]
   1ab50:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   1ab54:	f000 bb3a 	b.w	1b1cc <UartDev::handleInterrupt()>
   1ab58:	2007c214 	.word	0x2007c214

0001ab5c <Uart3::~Uart3()>:
_ZN5Uart3D1Ev():
   1ab5c:	b510      	push	{r4, lr}
   1ab5e:	4b03      	ldr	r3, [pc, #12]	; (1ab6c <Uart3::~Uart3()+0x10>)
   1ab60:	4604      	mov	r4, r0
   1ab62:	6003      	str	r3, [r0, #0]
   1ab64:	f7ff ff92 	bl	1aa8c <UartDev::~UartDev()>
   1ab68:	4620      	mov	r0, r4
   1ab6a:	bd10      	pop	{r4, pc}
   1ab6c:	000273d8 	.word	0x000273d8

0001ab70 <Uart3::~Uart3()>:
_ZN5Uart3D0Ev():
   1ab70:	b510      	push	{r4, lr}
   1ab72:	4604      	mov	r4, r0
   1ab74:	f7ff fff2 	bl	1ab5c <Uart3::~Uart3()>
   1ab78:	4620      	mov	r0, r4
   1ab7a:	f7f5 fb7b 	bl	10274 <operator delete(void*)>
   1ab7e:	4620      	mov	r0, r4
   1ab80:	bd10      	pop	{r4, pc}
	...

0001ab84 <Uart3::Uart3()>:
_ZN5Uart3C2Ev():
   1ab84:	b510      	push	{r4, lr}
   1ab86:	4904      	ldr	r1, [pc, #16]	; (1ab98 <Uart3::Uart3()+0x14>)
   1ab88:	4604      	mov	r4, r0
   1ab8a:	f000 fb79 	bl	1b280 <UartDev::UartDev(unsigned int*)>
   1ab8e:	4b03      	ldr	r3, [pc, #12]	; (1ab9c <Uart3::Uart3()+0x18>)
   1ab90:	4620      	mov	r0, r4
   1ab92:	6023      	str	r3, [r4, #0]
   1ab94:	bd10      	pop	{r4, pc}
   1ab96:	bf00      	nop
   1ab98:	4009c000 	.word	0x4009c000
   1ab9c:	000273d8 	.word	0x000273d8

0001aba0 <UART3_IRQHandler>:
UART3_IRQHandler():
   1aba0:	b538      	push	{r3, r4, r5, lr}
   1aba2:	4c07      	ldr	r4, [pc, #28]	; (1abc0 <UART3_IRQHandler+0x20>)
   1aba4:	6823      	ldr	r3, [r4, #0]
   1aba6:	b933      	cbnz	r3, 1abb6 <UART3_IRQHandler+0x16>
   1aba8:	202c      	movs	r0, #44	; 0x2c
   1abaa:	f7f5 fb61 	bl	10270 <operator new(unsigned int)>
   1abae:	4605      	mov	r5, r0
   1abb0:	f7ff ffe8 	bl	1ab84 <Uart3::Uart3()>
   1abb4:	6025      	str	r5, [r4, #0]
   1abb6:	6820      	ldr	r0, [r4, #0]
   1abb8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   1abbc:	f000 bb06 	b.w	1b1cc <UartDev::handleInterrupt()>
   1abc0:	2007c99c 	.word	0x2007c99c

0001abc4 <CharDev::flush()>:
_ZN7CharDev5flushEv():
   1abc4:	2001      	movs	r0, #1
   1abc6:	4770      	bx	lr

0001abc8 <CharDev::~CharDev()>:
_ZN7CharDevD2Ev():
   1abc8:	4b04      	ldr	r3, [pc, #16]	; (1abdc <CharDev::~CharDev()+0x14>)
   1abca:	b510      	push	{r4, lr}
   1abcc:	4604      	mov	r4, r0
   1abce:	6003      	str	r3, [r0, #0]
   1abd0:	6840      	ldr	r0, [r0, #4]
   1abd2:	b108      	cbz	r0, 1abd8 <CharDev::~CharDev()+0x10>
   1abd4:	f003 fffa 	bl	1ebcc <free>
   1abd8:	4620      	mov	r0, r4
   1abda:	bd10      	pop	{r4, pc}
   1abdc:	000273f8 	.word	0x000273f8

0001abe0 <CharDev::~CharDev()>:
_ZN7CharDevD0Ev():
   1abe0:	b510      	push	{r4, lr}
   1abe2:	4604      	mov	r4, r0
   1abe4:	f7ff fff0 	bl	1abc8 <CharDev::~CharDev()>
   1abe8:	4620      	mov	r0, r4
   1abea:	f7f5 fb43 	bl	10274 <operator delete(void*)>
   1abee:	4620      	mov	r0, r4
   1abf0:	bd10      	pop	{r4, pc}

0001abf2 <CharDev::put(char const*, unsigned int)>:
_ZN7CharDev3putEPKcj():
   1abf2:	b570      	push	{r4, r5, r6, lr}
   1abf4:	4605      	mov	r5, r0
   1abf6:	4616      	mov	r6, r2
   1abf8:	b159      	cbz	r1, 1ac12 <CharDev::put(char const*, unsigned int)+0x20>
   1abfa:	1e4c      	subs	r4, r1, #1
   1abfc:	f814 1f01 	ldrb.w	r1, [r4, #1]!
   1ac00:	b149      	cbz	r1, 1ac16 <CharDev::put(char const*, unsigned int)+0x24>
   1ac02:	682b      	ldr	r3, [r5, #0]
   1ac04:	4628      	mov	r0, r5
   1ac06:	685b      	ldr	r3, [r3, #4]
   1ac08:	b249      	sxtb	r1, r1
   1ac0a:	4632      	mov	r2, r6
   1ac0c:	4798      	blx	r3
   1ac0e:	2800      	cmp	r0, #0
   1ac10:	d1f4      	bne.n	1abfc <CharDev::put(char const*, unsigned int)+0xa>
   1ac12:	2000      	movs	r0, #0
   1ac14:	bd70      	pop	{r4, r5, r6, pc}
   1ac16:	2001      	movs	r0, #1
   1ac18:	bd70      	pop	{r4, r5, r6, pc}
	...

0001ac1c <CharDev::putline(char const*, unsigned int)>:
_ZN7CharDev7putlineEPKcj():
   1ac1c:	b538      	push	{r3, r4, r5, lr}
   1ac1e:	4605      	mov	r5, r0
   1ac20:	4614      	mov	r4, r2
   1ac22:	f7ff ffe6 	bl	1abf2 <CharDev::put(char const*, unsigned int)>
   1ac26:	4628      	mov	r0, r5
   1ac28:	4622      	mov	r2, r4
   1ac2a:	4902      	ldr	r1, [pc, #8]	; (1ac34 <CharDev::putline(char const*, unsigned int)+0x18>)
   1ac2c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   1ac30:	f7ff bfdf 	b.w	1abf2 <CharDev::put(char const*, unsigned int)>
   1ac34:	00026f92 	.word	0x00026f92

0001ac38 <CharDev::gets(char*, int, unsigned int)>:
_ZN7CharDev4getsEPcij():
   1ac38:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
   1ac3c:	2500      	movs	r5, #0
   1ac3e:	4606      	mov	r6, r0
   1ac40:	460c      	mov	r4, r1
   1ac42:	4617      	mov	r7, r2
   1ac44:	4698      	mov	r8, r3
   1ac46:	f88d 5007 	strb.w	r5, [sp, #7]
   1ac4a:	6831      	ldr	r1, [r6, #0]
   1ac4c:	4630      	mov	r0, r6
   1ac4e:	680b      	ldr	r3, [r1, #0]
   1ac50:	4642      	mov	r2, r8
   1ac52:	f10d 0107 	add.w	r1, sp, #7
   1ac56:	4798      	blx	r3
   1ac58:	b180      	cbz	r0, 1ac7c <CharDev::gets(char*, int, unsigned int)+0x44>
   1ac5a:	f89d 0007 	ldrb.w	r0, [sp, #7]
   1ac5e:	b241      	sxtb	r1, r0
   1ac60:	290d      	cmp	r1, #13
   1ac62:	d003      	beq.n	1ac6c <CharDev::gets(char*, int, unsigned int)+0x34>
   1ac64:	290a      	cmp	r1, #10
   1ac66:	bf1c      	itt	ne
   1ac68:	7020      	strbne	r0, [r4, #0]
   1ac6a:	3401      	addne	r4, #1
   1ac6c:	3501      	adds	r5, #1
   1ac6e:	42bd      	cmp	r5, r7
   1ac70:	da03      	bge.n	1ac7a <CharDev::gets(char*, int, unsigned int)+0x42>
   1ac72:	290a      	cmp	r1, #10
   1ac74:	d1e9      	bne.n	1ac4a <CharDev::gets(char*, int, unsigned int)+0x12>
   1ac76:	2001      	movs	r0, #1
   1ac78:	e000      	b.n	1ac7c <CharDev::gets(char*, int, unsigned int)+0x44>
   1ac7a:	2000      	movs	r0, #0
   1ac7c:	2d00      	cmp	r5, #0
   1ac7e:	bfc4      	itt	gt
   1ac80:	2300      	movgt	r3, #0
   1ac82:	7023      	strbgt	r3, [r4, #0]
   1ac84:	b002      	add	sp, #8
   1ac86:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0001ac8a <CharDev::printf(char const*, ...)>:
_ZN7CharDev6printfEPKcz():
   1ac8a:	b40e      	push	{r1, r2, r3}
   1ac8c:	b577      	push	{r0, r1, r2, r4, r5, r6, lr}
   1ac8e:	9e07      	ldr	r6, [sp, #28]
   1ac90:	4604      	mov	r4, r0
   1ac92:	f001 faed 	bl	1c270 <xTaskGetSchedulerState>
   1ac96:	2802      	cmp	r0, #2
   1ac98:	d106      	bne.n	1aca8 <CharDev::printf(char const*, ...)+0x1e>
   1ac9a:	2100      	movs	r1, #0
   1ac9c:	68e0      	ldr	r0, [r4, #12]
   1ac9e:	f04f 32ff 	mov.w	r2, #4294967295
   1aca2:	460b      	mov	r3, r1
   1aca4:	f000 fd64 	bl	1b770 <xQueueGenericReceive>
   1aca8:	ab08      	add	r3, sp, #32
   1acaa:	9300      	str	r3, [sp, #0]
   1acac:	9b00      	ldr	r3, [sp, #0]
   1acae:	6860      	ldr	r0, [r4, #4]
   1acb0:	8921      	ldrh	r1, [r4, #8]
   1acb2:	4632      	mov	r2, r6
   1acb4:	9301      	str	r3, [sp, #4]
   1acb6:	f007 fd9b 	bl	227f0 <vsniprintf>
   1acba:	8923      	ldrh	r3, [r4, #8]
   1acbc:	4605      	mov	r5, r0
   1acbe:	4298      	cmp	r0, r3
   1acc0:	db0a      	blt.n	1acd8 <CharDev::printf(char const*, ...)+0x4e>
   1acc2:	f020 010f 	bic.w	r1, r0, #15
   1acc6:	3110      	adds	r1, #16
   1acc8:	b289      	uxth	r1, r1
   1acca:	8121      	strh	r1, [r4, #8]
   1accc:	6860      	ldr	r0, [r4, #4]
   1acce:	f004 fdb1 	bl	1f834 <realloc>
   1acd2:	6060      	str	r0, [r4, #4]
   1acd4:	2800      	cmp	r0, #0
   1acd6:	d1e9      	bne.n	1acac <CharDev::printf(char const*, ...)+0x22>
   1acd8:	6861      	ldr	r1, [r4, #4]
   1acda:	f04f 32ff 	mov.w	r2, #4294967295
   1acde:	4620      	mov	r0, r4
   1ace0:	f7ff ff87 	bl	1abf2 <CharDev::put(char const*, unsigned int)>
   1ace4:	f001 fac4 	bl	1c270 <xTaskGetSchedulerState>
   1ace8:	2802      	cmp	r0, #2
   1acea:	d105      	bne.n	1acf8 <CharDev::printf(char const*, ...)+0x6e>
   1acec:	2100      	movs	r1, #0
   1acee:	68e0      	ldr	r0, [r4, #12]
   1acf0:	460a      	mov	r2, r1
   1acf2:	460b      	mov	r3, r1
   1acf4:	f000 fc6c 	bl	1b5d0 <xQueueGenericSend>
   1acf8:	4628      	mov	r0, r5
   1acfa:	b003      	add	sp, #12
   1acfc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
   1ad00:	b003      	add	sp, #12
   1ad02:	4770      	bx	lr

0001ad04 <CharDev::CharDev()>:
_ZN7CharDevC2Ev():
   1ad04:	4b06      	ldr	r3, [pc, #24]	; (1ad20 <CharDev::CharDev()+0x1c>)
   1ad06:	b510      	push	{r4, lr}
   1ad08:	6003      	str	r3, [r0, #0]
   1ad0a:	2300      	movs	r3, #0
   1ad0c:	4604      	mov	r4, r0
   1ad0e:	6043      	str	r3, [r0, #4]
   1ad10:	8103      	strh	r3, [r0, #8]
   1ad12:	7403      	strb	r3, [r0, #16]
   1ad14:	2001      	movs	r0, #1
   1ad16:	f000 fccc 	bl	1b6b2 <xQueueCreateMutex>
   1ad1a:	60e0      	str	r0, [r4, #12]
   1ad1c:	4620      	mov	r0, r4
   1ad1e:	bd10      	pop	{r4, pc}
   1ad20:	000273f8 	.word	0x000273f8

0001ad24 <I2C_Base::transfer(char, char, char*, unsigned int)>:
_ZN8I2C_Base8transferEccPcj():
   1ad24:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   1ad28:	7944      	ldrb	r4, [r0, #5]
   1ad2a:	4606      	mov	r6, r0
   1ad2c:	4689      	mov	r9, r1
   1ad2e:	4690      	mov	r8, r2
   1ad30:	461d      	mov	r5, r3
   1ad32:	9f08      	ldr	r7, [sp, #32]
   1ad34:	2c00      	cmp	r4, #0
   1ad36:	d162      	bne.n	1adfe <I2C_Base::transfer(char, char, char*, unsigned int)+0xda>
   1ad38:	2b00      	cmp	r3, #0
   1ad3a:	d062      	beq.n	1ae02 <I2C_Base::transfer(char, char, char*, unsigned int)+0xde>
   1ad3c:	f001 fa98 	bl	1c270 <xTaskGetSchedulerState>
   1ad40:	2802      	cmp	r0, #2
   1ad42:	d02c      	beq.n	1ad9e <I2C_Base::transfer(char, char, char*, unsigned int)+0x7a>
   1ad44:	6833      	ldr	r3, [r6, #0]
   1ad46:	2220      	movs	r2, #32
   1ad48:	75b4      	strb	r4, [r6, #22]
   1ad4a:	61b5      	str	r5, [r6, #24]
   1ad4c:	f886 9014 	strb.w	r9, [r6, #20]
   1ad50:	f886 8015 	strb.w	r8, [r6, #21]
   1ad54:	6137      	str	r7, [r6, #16]
   1ad56:	601a      	str	r2, [r3, #0]
   1ad58:	f001 fe14 	bl	1c984 <sys_get_uptime_us>
   1ad5c:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   1ad60:	2300      	movs	r3, #0
   1ad62:	f003 fb05 	bl	1e370 <__aeabi_uldivmod>
   1ad66:	f510 747a 	adds.w	r4, r0, #1000	; 0x3e8
   1ad6a:	f141 0500 	adc.w	r5, r1, #0
   1ad6e:	2100      	movs	r1, #0
   1ad70:	68f0      	ldr	r0, [r6, #12]
   1ad72:	460a      	mov	r2, r1
   1ad74:	460b      	mov	r3, r1
   1ad76:	f000 fcfb 	bl	1b770 <xQueueGenericReceive>
   1ad7a:	b950      	cbnz	r0, 1ad92 <I2C_Base::transfer(char, char, char*, unsigned int)+0x6e>
   1ad7c:	f001 fe02 	bl	1c984 <sys_get_uptime_us>
   1ad80:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   1ad84:	2300      	movs	r3, #0
   1ad86:	f003 faf3 	bl	1e370 <__aeabi_uldivmod>
   1ad8a:	428d      	cmp	r5, r1
   1ad8c:	bf08      	it	eq
   1ad8e:	4284      	cmpeq	r4, r0
   1ad90:	d2ed      	bcs.n	1ad6e <I2C_Base::transfer(char, char, char*, unsigned int)+0x4a>
   1ad92:	7db4      	ldrb	r4, [r6, #22]
   1ad94:	f1d4 0401 	rsbs	r4, r4, #1
   1ad98:	bf38      	it	cc
   1ad9a:	2400      	movcc	r4, #0
   1ad9c:	e032      	b.n	1ae04 <I2C_Base::transfer(char, char, char*, unsigned int)+0xe0>
   1ad9e:	68b0      	ldr	r0, [r6, #8]
   1ada0:	4621      	mov	r1, r4
   1ada2:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   1ada6:	4623      	mov	r3, r4
   1ada8:	f000 fce2 	bl	1b770 <xQueueGenericReceive>
   1adac:	b328      	cbz	r0, 1adfa <I2C_Base::transfer(char, char, char*, unsigned int)+0xd6>
   1adae:	4621      	mov	r1, r4
   1adb0:	4622      	mov	r2, r4
   1adb2:	4623      	mov	r3, r4
   1adb4:	68f0      	ldr	r0, [r6, #12]
   1adb6:	f000 fcdb 	bl	1b770 <xQueueGenericReceive>
   1adba:	6833      	ldr	r3, [r6, #0]
   1adbc:	2220      	movs	r2, #32
   1adbe:	75b4      	strb	r4, [r6, #22]
   1adc0:	f886 9014 	strb.w	r9, [r6, #20]
   1adc4:	f886 8015 	strb.w	r8, [r6, #21]
   1adc8:	6137      	str	r7, [r6, #16]
   1adca:	61b5      	str	r5, [r6, #24]
   1adcc:	68f0      	ldr	r0, [r6, #12]
   1adce:	601a      	str	r2, [r3, #0]
   1add0:	4621      	mov	r1, r4
   1add2:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   1add6:	4623      	mov	r3, r4
   1add8:	f000 fcca 	bl	1b770 <xQueueGenericReceive>
   1addc:	b128      	cbz	r0, 1adea <I2C_Base::transfer(char, char, char*, unsigned int)+0xc6>
   1adde:	7db4      	ldrb	r4, [r6, #22]
   1ade0:	f1d4 0401 	rsbs	r4, r4, #1
   1ade4:	bf38      	it	cc
   1ade6:	2400      	movcc	r4, #0
   1ade8:	e000      	b.n	1adec <I2C_Base::transfer(char, char, char*, unsigned int)+0xc8>
   1adea:	4604      	mov	r4, r0
   1adec:	2100      	movs	r1, #0
   1adee:	68b0      	ldr	r0, [r6, #8]
   1adf0:	460a      	mov	r2, r1
   1adf2:	460b      	mov	r3, r1
   1adf4:	f000 fbec 	bl	1b5d0 <xQueueGenericSend>
   1adf8:	e004      	b.n	1ae04 <I2C_Base::transfer(char, char, char*, unsigned int)+0xe0>
   1adfa:	4604      	mov	r4, r0
   1adfc:	e002      	b.n	1ae04 <I2C_Base::transfer(char, char, char*, unsigned int)+0xe0>
   1adfe:	2400      	movs	r4, #0
   1ae00:	e000      	b.n	1ae04 <I2C_Base::transfer(char, char, char*, unsigned int)+0xe0>
   1ae02:	461c      	mov	r4, r3
   1ae04:	4620      	mov	r0, r4
   1ae06:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

0001ae0a <I2C_Base::readRegisters(char, char, char*, unsigned int)>:
_ZN8I2C_Base13readRegistersEccPcj():
   1ae0a:	f041 0101 	orr.w	r1, r1, #1
   1ae0e:	f7ff bf89 	b.w	1ad24 <I2C_Base::transfer(char, char, char*, unsigned int)>

0001ae12 <I2C_Base::readReg(char, char)>:
_ZN8I2C_Base7readRegEcc():
   1ae12:	b51f      	push	{r0, r1, r2, r3, r4, lr}
   1ae14:	2400      	movs	r4, #0
   1ae16:	ab04      	add	r3, sp, #16
   1ae18:	f803 4d01 	strb.w	r4, [r3, #-1]!
   1ae1c:	2401      	movs	r4, #1
   1ae1e:	9400      	str	r4, [sp, #0]
   1ae20:	f7ff fff3 	bl	1ae0a <I2C_Base::readRegisters(char, char, char*, unsigned int)>
   1ae24:	f99d 000f 	ldrsb.w	r0, [sp, #15]
   1ae28:	b004      	add	sp, #16
   1ae2a:	bd10      	pop	{r4, pc}

0001ae2c <I2C_Base::writeRegisters(char, char, char*, unsigned int)>:
_ZN8I2C_Base14writeRegistersEccPcj():
   1ae2c:	f021 0101 	bic.w	r1, r1, #1
   1ae30:	f7ff bf78 	b.w	1ad24 <I2C_Base::transfer(char, char, char*, unsigned int)>

0001ae34 <I2C_Base::writeReg(char, char, char)>:
_ZN8I2C_Base8writeRegEccc():
   1ae34:	b51f      	push	{r0, r1, r2, r3, r4, lr}
   1ae36:	ac04      	add	r4, sp, #16
   1ae38:	f804 3d01 	strb.w	r3, [r4, #-1]!
   1ae3c:	2301      	movs	r3, #1
   1ae3e:	9300      	str	r3, [sp, #0]
   1ae40:	4623      	mov	r3, r4
   1ae42:	f7ff fff3 	bl	1ae2c <I2C_Base::writeRegisters(char, char, char*, unsigned int)>
   1ae46:	b004      	add	sp, #16
   1ae48:	bd10      	pop	{r4, pc}

0001ae4a <I2C_Base::checkDeviceResponse(char)>:
_ZN8I2C_Base19checkDeviceResponseEc():
   1ae4a:	b51f      	push	{r0, r1, r2, r3, r4, lr}
   1ae4c:	2200      	movs	r2, #0
   1ae4e:	ab04      	add	r3, sp, #16
   1ae50:	f803 2d01 	strb.w	r2, [r3, #-1]!
   1ae54:	9200      	str	r2, [sp, #0]
   1ae56:	f7ff ffd8 	bl	1ae0a <I2C_Base::readRegisters(char, char, char*, unsigned int)>
   1ae5a:	b005      	add	sp, #20
   1ae5c:	f85d fb04 	ldr.w	pc, [sp], #4

0001ae60 <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)>:
_ZN8I2C_BaseC1EP15LPC_I2C_TypeDef():
   1ae60:	b538      	push	{r3, r4, r5, lr}
   1ae62:	2500      	movs	r5, #0
   1ae64:	4604      	mov	r4, r0
   1ae66:	6001      	str	r1, [r0, #0]
   1ae68:	7145      	strb	r5, [r0, #5]
   1ae6a:	2001      	movs	r0, #1
   1ae6c:	f000 fc21 	bl	1b6b2 <xQueueCreateMutex>
   1ae70:	4629      	mov	r1, r5
   1ae72:	60a0      	str	r0, [r4, #8]
   1ae74:	2203      	movs	r2, #3
   1ae76:	2001      	movs	r0, #1
   1ae78:	f000 fb79 	bl	1b56e <xQueueGenericCreate>
   1ae7c:	462a      	mov	r2, r5
   1ae7e:	462b      	mov	r3, r5
   1ae80:	60e0      	str	r0, [r4, #12]
   1ae82:	4629      	mov	r1, r5
   1ae84:	f000 fc74 	bl	1b770 <xQueueGenericReceive>
   1ae88:	6823      	ldr	r3, [r4, #0]
   1ae8a:	4a09      	ldr	r2, [pc, #36]	; (1aeb0 <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)+0x50>)
   1ae8c:	4293      	cmp	r3, r2
   1ae8e:	d101      	bne.n	1ae94 <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)+0x34>
   1ae90:	230a      	movs	r3, #10
   1ae92:	e009      	b.n	1aea8 <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)+0x48>
   1ae94:	4a07      	ldr	r2, [pc, #28]	; (1aeb4 <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)+0x54>)
   1ae96:	4293      	cmp	r3, r2
   1ae98:	d101      	bne.n	1ae9e <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)+0x3e>
   1ae9a:	230b      	movs	r3, #11
   1ae9c:	e004      	b.n	1aea8 <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)+0x48>
   1ae9e:	4a06      	ldr	r2, [pc, #24]	; (1aeb8 <I2C_Base::I2C_Base(LPC_I2C_TypeDef*)+0x58>)
   1aea0:	4293      	cmp	r3, r2
   1aea2:	bf0c      	ite	eq
   1aea4:	230c      	moveq	r3, #12
   1aea6:	2363      	movne	r3, #99	; 0x63
   1aea8:	7123      	strb	r3, [r4, #4]
   1aeaa:	4620      	mov	r0, r4
   1aeac:	bd38      	pop	{r3, r4, r5, pc}
   1aeae:	bf00      	nop
   1aeb0:	4001c000 	.word	0x4001c000
   1aeb4:	4005c000 	.word	0x4005c000
   1aeb8:	400a0000 	.word	0x400a0000

0001aebc <I2C_Base::init(unsigned int, unsigned int)>:
_ZN8I2C_Base4initEjj():
   1aebc:	f990 3004 	ldrsb.w	r3, [r0, #4]
   1aec0:	b570      	push	{r4, r5, r6, lr}
   1aec2:	2b0b      	cmp	r3, #11
   1aec4:	4604      	mov	r4, r0
   1aec6:	460e      	mov	r6, r1
   1aec8:	4615      	mov	r5, r2
   1aeca:	d005      	beq.n	1aed8 <I2C_Base::init(unsigned int, unsigned int)+0x1c>
   1aecc:	2b0c      	cmp	r3, #12
   1aece:	d005      	beq.n	1aedc <I2C_Base::init(unsigned int, unsigned int)+0x20>
   1aed0:	2b0a      	cmp	r3, #10
   1aed2:	d133      	bne.n	1af3c <I2C_Base::init(unsigned int, unsigned int)+0x80>
   1aed4:	2007      	movs	r0, #7
   1aed6:	e002      	b.n	1aede <I2C_Base::init(unsigned int, unsigned int)+0x22>
   1aed8:	2013      	movs	r0, #19
   1aeda:	e000      	b.n	1aede <I2C_Base::init(unsigned int, unsigned int)+0x22>
   1aedc:	201a      	movs	r0, #26
   1aede:	2101      	movs	r1, #1
   1aee0:	f001 fcf2 	bl	1c8c8 <lpc_pconp>
   1aee4:	6823      	ldr	r3, [r4, #0]
   1aee6:	f5b5 7f7a 	cmp.w	r5, #1000	; 0x3e8
   1aeea:	f04f 026c 	mov.w	r2, #108	; 0x6c
   1aeee:	619a      	str	r2, [r3, #24]
   1aef0:	bf9a      	itte	ls
   1aef2:	f44f 727a 	movls.w	r2, #1000	; 0x3e8
   1aef6:	4355      	mulls	r5, r2
   1aef8:	4d11      	ldrhi	r5, [pc, #68]	; (1af40 <I2C_Base::init(unsigned int, unsigned int)+0x84>)
   1aefa:	2128      	movs	r1, #40	; 0x28
   1aefc:	fbb6 f5f5 	udiv	r5, r6, r5
   1af00:	086d      	lsrs	r5, r5, #1
   1af02:	4369      	muls	r1, r5
   1af04:	2264      	movs	r2, #100	; 0x64
   1af06:	fbb1 f1f2 	udiv	r1, r1, r2
   1af0a:	6119      	str	r1, [r3, #16]
   1af0c:	213c      	movs	r1, #60	; 0x3c
   1af0e:	434d      	muls	r5, r1
   1af10:	fbb5 f2f2 	udiv	r2, r5, r2
   1af14:	615a      	str	r2, [r3, #20]
   1af16:	2200      	movs	r2, #0
   1af18:	60da      	str	r2, [r3, #12]
   1af1a:	621a      	str	r2, [r3, #32]
   1af1c:	625a      	str	r2, [r3, #36]	; 0x24
   1af1e:	629a      	str	r2, [r3, #40]	; 0x28
   1af20:	2240      	movs	r2, #64	; 0x40
   1af22:	601a      	str	r2, [r3, #0]
   1af24:	7923      	ldrb	r3, [r4, #4]
   1af26:	2001      	movs	r0, #1
   1af28:	b259      	sxtb	r1, r3
   1af2a:	f003 031f 	and.w	r3, r3, #31
   1af2e:	fa00 f303 	lsl.w	r3, r0, r3
   1af32:	4a04      	ldr	r2, [pc, #16]	; (1af44 <I2C_Base::init(unsigned int, unsigned int)+0x88>)
   1af34:	0949      	lsrs	r1, r1, #5
   1af36:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
   1af3a:	bd70      	pop	{r4, r5, r6, pc}
   1af3c:	2000      	movs	r0, #0
   1af3e:	bd70      	pop	{r4, r5, r6, pc}
   1af40:	000186a0 	.word	0x000186a0
   1af44:	e000e100 	.word	0xe000e100

0001af48 <I2C_Base::i2cStateMachine()>:
_ZN8I2C_Base15i2cStateMachineEv():
   1af48:	6803      	ldr	r3, [r0, #0]
   1af4a:	b530      	push	{r4, r5, lr}
   1af4c:	6859      	ldr	r1, [r3, #4]
   1af4e:	4602      	mov	r2, r0
   1af50:	2928      	cmp	r1, #40	; 0x28
   1af52:	d045      	beq.n	1afe0 <I2C_Base::i2cStateMachine()+0x98>
   1af54:	d809      	bhi.n	1af6a <I2C_Base::i2cStateMachine()+0x22>
   1af56:	2910      	cmp	r1, #16
   1af58:	d024      	beq.n	1afa4 <I2C_Base::i2cStateMachine()+0x5c>
   1af5a:	2918      	cmp	r1, #24
   1af5c:	d02a      	beq.n	1afb4 <I2C_Base::i2cStateMachine()+0x6c>
   1af5e:	2908      	cmp	r1, #8
   1af60:	d177      	bne.n	1b052 <I2C_Base::i2cStateMachine()+0x10a>
   1af62:	7d02      	ldrb	r2, [r0, #20]
   1af64:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
   1af68:	e037      	b.n	1afda <I2C_Base::i2cStateMachine()+0x92>
   1af6a:	2940      	cmp	r1, #64	; 0x40
   1af6c:	d054      	beq.n	1b018 <I2C_Base::i2cStateMachine()+0xd0>
   1af6e:	d80a      	bhi.n	1af86 <I2C_Base::i2cStateMachine()+0x3e>
   1af70:	2938      	cmp	r1, #56	; 0x38
   1af72:	d16e      	bne.n	1b052 <I2C_Base::i2cStateMachine()+0x10a>
   1af74:	7d01      	ldrb	r1, [r0, #20]
   1af76:	685b      	ldr	r3, [r3, #4]
   1af78:	f011 0f01 	tst.w	r1, #1
   1af7c:	7593      	strb	r3, [r2, #22]
   1af7e:	bf0c      	ite	eq
   1af80:	2002      	moveq	r0, #2
   1af82:	2001      	movne	r0, #1
   1af84:	bd30      	pop	{r4, r5, pc}
   1af86:	2950      	cmp	r1, #80	; 0x50
   1af88:	d04e      	beq.n	1b028 <I2C_Base::i2cStateMachine()+0xe0>
   1af8a:	2958      	cmp	r1, #88	; 0x58
   1af8c:	d161      	bne.n	1b052 <I2C_Base::i2cStateMachine()+0x10a>
   1af8e:	6981      	ldr	r1, [r0, #24]
   1af90:	689b      	ldr	r3, [r3, #8]
   1af92:	700b      	strb	r3, [r1, #0]
   1af94:	6803      	ldr	r3, [r0, #0]
   1af96:	2120      	movs	r1, #32
   1af98:	6199      	str	r1, [r3, #24]
   1af9a:	2110      	movs	r1, #16
   1af9c:	6019      	str	r1, [r3, #0]
   1af9e:	2108      	movs	r1, #8
   1afa0:	6199      	str	r1, [r3, #24]
   1afa2:	e052      	b.n	1b04a <I2C_Base::i2cStateMachine()+0x102>
   1afa4:	7d02      	ldrb	r2, [r0, #20]
   1afa6:	f042 0201 	orr.w	r2, r2, #1
   1afaa:	609a      	str	r2, [r3, #8]
   1afac:	2208      	movs	r2, #8
   1afae:	619a      	str	r2, [r3, #24]
   1afb0:	2000      	movs	r0, #0
   1afb2:	bd30      	pop	{r4, r5, pc}
   1afb4:	6914      	ldr	r4, [r2, #16]
   1afb6:	2020      	movs	r0, #32
   1afb8:	6198      	str	r0, [r3, #24]
   1afba:	2108      	movs	r1, #8
   1afbc:	b964      	cbnz	r4, 1afd8 <I2C_Base::i2cStateMachine()+0x90>
   1afbe:	6198      	str	r0, [r3, #24]
   1afc0:	2010      	movs	r0, #16
   1afc2:	6018      	str	r0, [r3, #0]
   1afc4:	6199      	str	r1, [r3, #24]
   1afc6:	6819      	ldr	r1, [r3, #0]
   1afc8:	06c9      	lsls	r1, r1, #27
   1afca:	d4fc      	bmi.n	1afc6 <I2C_Base::i2cStateMachine()+0x7e>
   1afcc:	7d13      	ldrb	r3, [r2, #20]
   1afce:	07dd      	lsls	r5, r3, #31
   1afd0:	bf4c      	ite	mi
   1afd2:	2001      	movmi	r0, #1
   1afd4:	2002      	movpl	r0, #2
   1afd6:	bd30      	pop	{r4, r5, pc}
   1afd8:	7d52      	ldrb	r2, [r2, #21]
   1afda:	609a      	str	r2, [r3, #8]
   1afdc:	6199      	str	r1, [r3, #24]
   1afde:	e7e7      	b.n	1afb0 <I2C_Base::i2cStateMachine()+0x68>
   1afe0:	7d00      	ldrb	r0, [r0, #20]
   1afe2:	f010 0001 	ands.w	r0, r0, #1
   1afe6:	d001      	beq.n	1afec <I2C_Base::i2cStateMachine()+0xa4>
   1afe8:	2220      	movs	r2, #32
   1afea:	e02c      	b.n	1b046 <I2C_Base::i2cStateMachine()+0xfe>
   1afec:	6914      	ldr	r4, [r2, #16]
   1afee:	b94c      	cbnz	r4, 1b004 <I2C_Base::i2cStateMachine()+0xbc>
   1aff0:	2120      	movs	r1, #32
   1aff2:	6199      	str	r1, [r3, #24]
   1aff4:	2110      	movs	r1, #16
   1aff6:	6019      	str	r1, [r3, #0]
   1aff8:	2108      	movs	r1, #8
   1affa:	6199      	str	r1, [r3, #24]
   1affc:	6819      	ldr	r1, [r3, #0]
   1affe:	06cc      	lsls	r4, r1, #27
   1b000:	d4fc      	bmi.n	1affc <I2C_Base::i2cStateMachine()+0xb4>
   1b002:	e7e3      	b.n	1afcc <I2C_Base::i2cStateMachine()+0x84>
   1b004:	6991      	ldr	r1, [r2, #24]
   1b006:	3c01      	subs	r4, #1
   1b008:	f911 5b01 	ldrsb.w	r5, [r1], #1
   1b00c:	609d      	str	r5, [r3, #8]
   1b00e:	6191      	str	r1, [r2, #24]
   1b010:	6114      	str	r4, [r2, #16]
   1b012:	2208      	movs	r2, #8
   1b014:	619a      	str	r2, [r3, #24]
   1b016:	bd30      	pop	{r4, r5, pc}
   1b018:	6902      	ldr	r2, [r0, #16]
   1b01a:	2120      	movs	r1, #32
   1b01c:	2a01      	cmp	r2, #1
   1b01e:	6199      	str	r1, [r3, #24]
   1b020:	f04f 0204 	mov.w	r2, #4
   1b024:	d80f      	bhi.n	1b046 <I2C_Base::i2cStateMachine()+0xfe>
   1b026:	e00c      	b.n	1b042 <I2C_Base::i2cStateMachine()+0xfa>
   1b028:	689b      	ldr	r3, [r3, #8]
   1b02a:	6981      	ldr	r1, [r0, #24]
   1b02c:	2204      	movs	r2, #4
   1b02e:	700b      	strb	r3, [r1, #0]
   1b030:	6983      	ldr	r3, [r0, #24]
   1b032:	3301      	adds	r3, #1
   1b034:	6183      	str	r3, [r0, #24]
   1b036:	6903      	ldr	r3, [r0, #16]
   1b038:	3b01      	subs	r3, #1
   1b03a:	2b01      	cmp	r3, #1
   1b03c:	6103      	str	r3, [r0, #16]
   1b03e:	6803      	ldr	r3, [r0, #0]
   1b040:	d101      	bne.n	1b046 <I2C_Base::i2cStateMachine()+0xfe>
   1b042:	619a      	str	r2, [r3, #24]
   1b044:	e7b2      	b.n	1afac <I2C_Base::i2cStateMachine()+0x64>
   1b046:	601a      	str	r2, [r3, #0]
   1b048:	e7b0      	b.n	1afac <I2C_Base::i2cStateMachine()+0x64>
   1b04a:	6819      	ldr	r1, [r3, #0]
   1b04c:	06c8      	lsls	r0, r1, #27
   1b04e:	d4fc      	bmi.n	1b04a <I2C_Base::i2cStateMachine()+0x102>
   1b050:	e7bc      	b.n	1afcc <I2C_Base::i2cStateMachine()+0x84>
   1b052:	6859      	ldr	r1, [r3, #4]
   1b054:	7591      	strb	r1, [r2, #22]
   1b056:	2120      	movs	r1, #32
   1b058:	6199      	str	r1, [r3, #24]
   1b05a:	2110      	movs	r1, #16
   1b05c:	6019      	str	r1, [r3, #0]
   1b05e:	2108      	movs	r1, #8
   1b060:	6199      	str	r1, [r3, #24]
   1b062:	6819      	ldr	r1, [r3, #0]
   1b064:	06c9      	lsls	r1, r1, #27
   1b066:	d4fc      	bmi.n	1b062 <I2C_Base::i2cStateMachine()+0x11a>
   1b068:	e7b0      	b.n	1afcc <I2C_Base::i2cStateMachine()+0x84>
	...

0001b06c <I2C_Base::handleInterrupt()>:
_ZN8I2C_Base15handleInterruptEv():
   1b06c:	b513      	push	{r0, r1, r4, lr}
   1b06e:	4604      	mov	r4, r0
   1b070:	f7ff ff6a 	bl	1af48 <I2C_Base::i2cStateMachine()>
   1b074:	b168      	cbz	r0, 1b092 <I2C_Base::handleInterrupt()+0x26>
   1b076:	2100      	movs	r1, #0
   1b078:	aa02      	add	r2, sp, #8
   1b07a:	460b      	mov	r3, r1
   1b07c:	f842 1d04 	str.w	r1, [r2, #-4]!
   1b080:	68e0      	ldr	r0, [r4, #12]
   1b082:	f000 fb3c 	bl	1b6fe <xQueueGenericSendFromISR>
   1b086:	9b01      	ldr	r3, [sp, #4]
   1b088:	b11b      	cbz	r3, 1b092 <I2C_Base::handleInterrupt()+0x26>
   1b08a:	4b03      	ldr	r3, [pc, #12]	; (1b098 <I2C_Base::handleInterrupt()+0x2c>)
   1b08c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   1b090:	601a      	str	r2, [r3, #0]
   1b092:	b002      	add	sp, #8
   1b094:	bd10      	pop	{r4, pc}
   1b096:	bf00      	nop
   1b098:	e000ed04 	.word	0xe000ed04

0001b09c <UartDev::putChar(char, unsigned int)>:
_ZN7UartDev7putCharEcj():
   1b09c:	b537      	push	{r0, r1, r2, r4, r5, lr}
   1b09e:	4604      	mov	r4, r0
   1b0a0:	4615      	mov	r5, r2
   1b0a2:	f88d 1007 	strb.w	r1, [sp, #7]
   1b0a6:	f001 f8e3 	bl	1c270 <xTaskGetSchedulerState>
   1b0aa:	2802      	cmp	r0, #2
   1b0ac:	d008      	beq.n	1b0c0 <UartDev::putChar(char, unsigned int)+0x24>
   1b0ae:	f89d 2007 	ldrb.w	r2, [sp, #7]
   1b0b2:	6963      	ldr	r3, [r4, #20]
   1b0b4:	701a      	strb	r2, [r3, #0]
   1b0b6:	6962      	ldr	r2, [r4, #20]
   1b0b8:	7d13      	ldrb	r3, [r2, #20]
   1b0ba:	0659      	lsls	r1, r3, #25
   1b0bc:	d5fc      	bpl.n	1b0b8 <UartDev::putChar(char, unsigned int)+0x1c>
   1b0be:	e017      	b.n	1b0f0 <UartDev::putChar(char, unsigned int)+0x54>
   1b0c0:	69e0      	ldr	r0, [r4, #28]
   1b0c2:	f10d 0107 	add.w	r1, sp, #7
   1b0c6:	462a      	mov	r2, r5
   1b0c8:	2300      	movs	r3, #0
   1b0ca:	f000 fa81 	bl	1b5d0 <xQueueGenericSend>
   1b0ce:	b180      	cbz	r0, 1b0f2 <UartDev::putChar(char, unsigned int)+0x56>
   1b0d0:	6963      	ldr	r3, [r4, #20]
   1b0d2:	7d1b      	ldrb	r3, [r3, #20]
   1b0d4:	065b      	lsls	r3, r3, #25
   1b0d6:	d50b      	bpl.n	1b0f0 <UartDev::putChar(char, unsigned int)+0x54>
   1b0d8:	2200      	movs	r2, #0
   1b0da:	69e0      	ldr	r0, [r4, #28]
   1b0dc:	f10d 0107 	add.w	r1, sp, #7
   1b0e0:	4613      	mov	r3, r2
   1b0e2:	f000 fb45 	bl	1b770 <xQueueGenericReceive>
   1b0e6:	b118      	cbz	r0, 1b0f0 <UartDev::putChar(char, unsigned int)+0x54>
   1b0e8:	6963      	ldr	r3, [r4, #20]
   1b0ea:	f89d 2007 	ldrb.w	r2, [sp, #7]
   1b0ee:	701a      	strb	r2, [r3, #0]
   1b0f0:	2001      	movs	r0, #1
   1b0f2:	b003      	add	sp, #12
   1b0f4:	bd30      	pop	{r4, r5, pc}

0001b0f6 <UartDev::flush()>:
_ZN7UartDev5flushEv():
   1b0f6:	b510      	push	{r4, lr}
   1b0f8:	4604      	mov	r4, r0
   1b0fa:	f001 f8b9 	bl	1c270 <xTaskGetSchedulerState>
   1b0fe:	2802      	cmp	r0, #2
   1b100:	d107      	bne.n	1b112 <UartDev::flush()+0x1c>
   1b102:	69e0      	ldr	r0, [r4, #28]
   1b104:	f000 fbde 	bl	1b8c4 <uxQueueMessagesWaiting>
   1b108:	b118      	cbz	r0, 1b112 <UartDev::flush()+0x1c>
   1b10a:	2001      	movs	r0, #1
   1b10c:	f000 fede 	bl	1becc <vTaskDelay>
   1b110:	e7f7      	b.n	1b102 <UartDev::flush()+0xc>
   1b112:	2001      	movs	r0, #1
   1b114:	bd10      	pop	{r4, pc}

0001b116 <UartDev::getChar(char*, unsigned int)>:
_ZN7UartDev7getCharEPcj():
   1b116:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1b11a:	4607      	mov	r7, r0
   1b11c:	4614      	mov	r4, r2
   1b11e:	460e      	mov	r6, r1
   1b120:	b911      	cbnz	r1, 1b128 <UartDev::getChar(char*, unsigned int)+0x12>
   1b122:	2000      	movs	r0, #0
   1b124:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1b128:	6983      	ldr	r3, [r0, #24]
   1b12a:	2b00      	cmp	r3, #0
   1b12c:	d0f9      	beq.n	1b122 <UartDev::getChar(char*, unsigned int)+0xc>
   1b12e:	f001 f89f 	bl	1c270 <xTaskGetSchedulerState>
   1b132:	2802      	cmp	r0, #2
   1b134:	d10a      	bne.n	1b14c <UartDev::getChar(char*, unsigned int)+0x36>
   1b136:	69b8      	ldr	r0, [r7, #24]
   1b138:	4631      	mov	r1, r6
   1b13a:	4622      	mov	r2, r4
   1b13c:	2300      	movs	r3, #0
   1b13e:	f000 fb17 	bl	1b770 <xQueueGenericReceive>
   1b142:	3000      	adds	r0, #0
   1b144:	bf18      	it	ne
   1b146:	2001      	movne	r0, #1
   1b148:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1b14c:	f001 fc1a 	bl	1c984 <sys_get_uptime_us>
   1b150:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   1b154:	2300      	movs	r3, #0
   1b156:	f003 f90b 	bl	1e370 <__aeabi_uldivmod>
   1b15a:	eb04 0800 	add.w	r8, r4, r0
   1b15e:	2200      	movs	r2, #0
   1b160:	69b8      	ldr	r0, [r7, #24]
   1b162:	4631      	mov	r1, r6
   1b164:	4613      	mov	r3, r2
   1b166:	f000 fb03 	bl	1b770 <xQueueGenericReceive>
   1b16a:	b968      	cbnz	r0, 1b188 <UartDev::getChar(char*, unsigned int)+0x72>
   1b16c:	f001 fc0a 	bl	1c984 <sys_get_uptime_us>
   1b170:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   1b174:	2300      	movs	r3, #0
   1b176:	f003 f8fb 	bl	1e370 <__aeabi_uldivmod>
   1b17a:	4644      	mov	r4, r8
   1b17c:	2500      	movs	r5, #0
   1b17e:	428d      	cmp	r5, r1
   1b180:	bf08      	it	eq
   1b182:	4284      	cmpeq	r4, r0
   1b184:	d2eb      	bcs.n	1b15e <UartDev::getChar(char*, unsigned int)+0x48>
   1b186:	e7cc      	b.n	1b122 <UartDev::getChar(char*, unsigned int)+0xc>
   1b188:	2001      	movs	r0, #1
   1b18a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

0001b190 <UartDev::setBaudRate(unsigned int)>:
_ZN7UartDev11setBaudRateEj():
   1b190:	6943      	ldr	r3, [r0, #20]
   1b192:	2280      	movs	r2, #128	; 0x80
   1b194:	b510      	push	{r4, lr}
   1b196:	731a      	strb	r2, [r3, #12]
   1b198:	4604      	mov	r4, r0
   1b19a:	6a00      	ldr	r0, [r0, #32]
   1b19c:	0109      	lsls	r1, r1, #4
   1b19e:	fbb0 f0f1 	udiv	r0, r0, r1
   1b1a2:	f002 fad3 	bl	1d74c <__aeabi_ui2d>
   1b1a6:	2200      	movs	r2, #0
   1b1a8:	4b07      	ldr	r3, [pc, #28]	; (1b1c8 <UartDev::setBaudRate(unsigned int)+0x38>)
   1b1aa:	f002 f993 	bl	1d4d4 <__adddf3>
   1b1ae:	f002 fd55 	bl	1dc5c <__aeabi_d2uiz>
   1b1b2:	6963      	ldr	r3, [r4, #20]
   1b1b4:	b280      	uxth	r0, r0
   1b1b6:	0a02      	lsrs	r2, r0, #8
   1b1b8:	711a      	strb	r2, [r3, #4]
   1b1ba:	6963      	ldr	r3, [r4, #20]
   1b1bc:	b2c0      	uxtb	r0, r0
   1b1be:	7018      	strb	r0, [r3, #0]
   1b1c0:	6963      	ldr	r3, [r4, #20]
   1b1c2:	2203      	movs	r2, #3
   1b1c4:	731a      	strb	r2, [r3, #12]
   1b1c6:	bd10      	pop	{r4, pc}
   1b1c8:	3fe00000 	.word	0x3fe00000

0001b1cc <UartDev::handleInterrupt()>:
_ZN7UartDev15handleInterruptEv():
   1b1cc:	b573      	push	{r0, r1, r4, r5, r6, lr}
   1b1ce:	6942      	ldr	r2, [r0, #20]
   1b1d0:	2300      	movs	r3, #0
   1b1d2:	9301      	str	r3, [sp, #4]
   1b1d4:	f88d 3003 	strb.w	r3, [sp, #3]
   1b1d8:	6893      	ldr	r3, [r2, #8]
   1b1da:	4604      	mov	r4, r0
   1b1dc:	f003 030e 	and.w	r3, r3, #14
   1b1e0:	2b04      	cmp	r3, #4
   1b1e2:	d017      	beq.n	1b214 <UartDev::handleInterrupt()+0x48>
   1b1e4:	2b0c      	cmp	r3, #12
   1b1e6:	d015      	beq.n	1b214 <UartDev::handleInterrupt()+0x48>
   1b1e8:	2b02      	cmp	r3, #2
   1b1ea:	d134      	bne.n	1b256 <UartDev::handleInterrupt()+0x8a>
   1b1ec:	69c0      	ldr	r0, [r0, #28]
   1b1ee:	f000 fb72 	bl	1b8d6 <uxQueueMessagesWaitingFromISR>
   1b1f2:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
   1b1f4:	4298      	cmp	r0, r3
   1b1f6:	d903      	bls.n	1b200 <UartDev::handleInterrupt()+0x34>
   1b1f8:	69e0      	ldr	r0, [r4, #28]
   1b1fa:	f000 fb6c 	bl	1b8d6 <uxQueueMessagesWaitingFromISR>
   1b1fe:	84e0      	strh	r0, [r4, #38]	; 0x26
   1b200:	2610      	movs	r6, #16
   1b202:	2500      	movs	r5, #0
   1b204:	69e0      	ldr	r0, [r4, #28]
   1b206:	f10d 0103 	add.w	r1, sp, #3
   1b20a:	aa01      	add	r2, sp, #4
   1b20c:	f000 fb31 	bl	1b872 <xQueueReceiveFromISR>
   1b210:	bb18      	cbnz	r0, 1b25a <UartDev::handleInterrupt()+0x8e>
   1b212:	e02c      	b.n	1b26e <UartDev::handleInterrupt()+0xa2>
   1b214:	f000 fd2e 	bl	1bc74 <xTaskGetTickCountFromISR>
   1b218:	2500      	movs	r5, #0
   1b21a:	62a0      	str	r0, [r4, #40]	; 0x28
   1b21c:	6963      	ldr	r3, [r4, #20]
   1b21e:	7d1a      	ldrb	r2, [r3, #20]
   1b220:	07d2      	lsls	r2, r2, #31
   1b222:	d50d      	bpl.n	1b240 <UartDev::handleInterrupt()+0x74>
   1b224:	781b      	ldrb	r3, [r3, #0]
   1b226:	a902      	add	r1, sp, #8
   1b228:	f801 3d05 	strb.w	r3, [r1, #-5]!
   1b22c:	69a0      	ldr	r0, [r4, #24]
   1b22e:	2300      	movs	r3, #0
   1b230:	aa01      	add	r2, sp, #4
   1b232:	f000 fa64 	bl	1b6fe <xQueueGenericSendFromISR>
   1b236:	9b01      	ldr	r3, [sp, #4]
   1b238:	2b00      	cmp	r3, #0
   1b23a:	bf18      	it	ne
   1b23c:	2501      	movne	r5, #1
   1b23e:	e7ed      	b.n	1b21c <UartDev::handleInterrupt()+0x50>
   1b240:	69a0      	ldr	r0, [r4, #24]
   1b242:	f000 fb48 	bl	1b8d6 <uxQueueMessagesWaitingFromISR>
   1b246:	8ca3      	ldrh	r3, [r4, #36]	; 0x24
   1b248:	4298      	cmp	r0, r3
   1b24a:	d910      	bls.n	1b26e <UartDev::handleInterrupt()+0xa2>
   1b24c:	69a0      	ldr	r0, [r4, #24]
   1b24e:	f000 fb42 	bl	1b8d6 <uxQueueMessagesWaitingFromISR>
   1b252:	84a0      	strh	r0, [r4, #36]	; 0x24
   1b254:	e00b      	b.n	1b26e <UartDev::handleInterrupt()+0xa2>
   1b256:	7d13      	ldrb	r3, [r2, #20]
   1b258:	e00e      	b.n	1b278 <UartDev::handleInterrupt()+0xac>
   1b25a:	6963      	ldr	r3, [r4, #20]
   1b25c:	f89d 2003 	ldrb.w	r2, [sp, #3]
   1b260:	701a      	strb	r2, [r3, #0]
   1b262:	9b01      	ldr	r3, [sp, #4]
   1b264:	2b00      	cmp	r3, #0
   1b266:	bf18      	it	ne
   1b268:	2501      	movne	r5, #1
   1b26a:	3e01      	subs	r6, #1
   1b26c:	d1ca      	bne.n	1b204 <UartDev::handleInterrupt()+0x38>
   1b26e:	b11d      	cbz	r5, 1b278 <UartDev::handleInterrupt()+0xac>
   1b270:	4b02      	ldr	r3, [pc, #8]	; (1b27c <UartDev::handleInterrupt()+0xb0>)
   1b272:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   1b276:	601a      	str	r2, [r3, #0]
   1b278:	b002      	add	sp, #8
   1b27a:	bd70      	pop	{r4, r5, r6, pc}
   1b27c:	e000ed04 	.word	0xe000ed04

0001b280 <UartDev::UartDev(unsigned int*)>:
_ZN7UartDevC2EPj():
   1b280:	b538      	push	{r3, r4, r5, lr}
   1b282:	4604      	mov	r4, r0
   1b284:	460d      	mov	r5, r1
   1b286:	f7ff fd3d 	bl	1ad04 <CharDev::CharDev()>
   1b28a:	4b06      	ldr	r3, [pc, #24]	; (1b2a4 <UartDev::UartDev(unsigned int*)+0x24>)
   1b28c:	6165      	str	r5, [r4, #20]
   1b28e:	6023      	str	r3, [r4, #0]
   1b290:	2300      	movs	r3, #0
   1b292:	61a3      	str	r3, [r4, #24]
   1b294:	61e3      	str	r3, [r4, #28]
   1b296:	6223      	str	r3, [r4, #32]
   1b298:	84a3      	strh	r3, [r4, #36]	; 0x24
   1b29a:	84e3      	strh	r3, [r4, #38]	; 0x26
   1b29c:	62a3      	str	r3, [r4, #40]	; 0x28
   1b29e:	4620      	mov	r0, r4
   1b2a0:	bd38      	pop	{r3, r4, r5, pc}
   1b2a2:	bf00      	nop
   1b2a4:	00027438 	.word	0x00027438

0001b2a8 <UartDev::init(unsigned int, unsigned int, int, int)>:
_ZN7UartDev4initEjjii():
   1b2a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1b2aa:	461e      	mov	r6, r3
   1b2ac:	6945      	ldr	r5, [r0, #20]
   1b2ae:	4b26      	ldr	r3, [pc, #152]	; (1b348 <UartDev::init(unsigned int, unsigned int, int, int)+0xa0>)
   1b2b0:	4604      	mov	r4, r0
   1b2b2:	429d      	cmp	r5, r3
   1b2b4:	4617      	mov	r7, r2
   1b2b6:	6201      	str	r1, [r0, #32]
   1b2b8:	d105      	bne.n	1b2c6 <UartDev::init(unsigned int, unsigned int, int, int)+0x1e>
   1b2ba:	2003      	movs	r0, #3
   1b2bc:	2101      	movs	r1, #1
   1b2be:	f001 fb03 	bl	1c8c8 <lpc_pconp>
   1b2c2:	2220      	movs	r2, #32
   1b2c4:	e011      	b.n	1b2ea <UartDev::init(unsigned int, unsigned int, int, int)+0x42>
   1b2c6:	4b21      	ldr	r3, [pc, #132]	; (1b34c <UartDev::init(unsigned int, unsigned int, int, int)+0xa4>)
   1b2c8:	429d      	cmp	r5, r3
   1b2ca:	d105      	bne.n	1b2d8 <UartDev::init(unsigned int, unsigned int, int, int)+0x30>
   1b2cc:	2018      	movs	r0, #24
   1b2ce:	2101      	movs	r1, #1
   1b2d0:	f001 fafa 	bl	1c8c8 <lpc_pconp>
   1b2d4:	2280      	movs	r2, #128	; 0x80
   1b2d6:	e008      	b.n	1b2ea <UartDev::init(unsigned int, unsigned int, int, int)+0x42>
   1b2d8:	4b1d      	ldr	r3, [pc, #116]	; (1b350 <UartDev::init(unsigned int, unsigned int, int, int)+0xa8>)
   1b2da:	429d      	cmp	r5, r3
   1b2dc:	d131      	bne.n	1b342 <UartDev::init(unsigned int, unsigned int, int, int)+0x9a>
   1b2de:	2019      	movs	r0, #25
   1b2e0:	2101      	movs	r1, #1
   1b2e2:	f001 faf1 	bl	1c8c8 <lpc_pconp>
   1b2e6:	f44f 7280 	mov.w	r2, #256	; 0x100
   1b2ea:	4b1a      	ldr	r3, [pc, #104]	; (1b354 <UartDev::init(unsigned int, unsigned int, int, int)+0xac>)
   1b2ec:	4620      	mov	r0, r4
   1b2ee:	601a      	str	r2, [r3, #0]
   1b2f0:	6963      	ldr	r3, [r4, #20]
   1b2f2:	2241      	movs	r2, #65	; 0x41
   1b2f4:	721a      	strb	r2, [r3, #8]
   1b2f6:	6965      	ldr	r5, [r4, #20]
   1b2f8:	4639      	mov	r1, r7
   1b2fa:	7a2b      	ldrb	r3, [r5, #8]
   1b2fc:	f043 0306 	orr.w	r3, r3, #6
   1b300:	722b      	strb	r3, [r5, #8]
   1b302:	f7ff ff45 	bl	1b190 <UartDev::setBaudRate(unsigned int)>
   1b306:	69a2      	ldr	r2, [r4, #24]
   1b308:	b93a      	cbnz	r2, 1b31a <UartDev::init(unsigned int, unsigned int, int, int)+0x72>
   1b30a:	2e08      	cmp	r6, #8
   1b30c:	bfac      	ite	ge
   1b30e:	4630      	movge	r0, r6
   1b310:	2008      	movlt	r0, #8
   1b312:	2101      	movs	r1, #1
   1b314:	f000 f92b 	bl	1b56e <xQueueGenericCreate>
   1b318:	61a0      	str	r0, [r4, #24]
   1b31a:	69e2      	ldr	r2, [r4, #28]
   1b31c:	b93a      	cbnz	r2, 1b32e <UartDev::init(unsigned int, unsigned int, int, int)+0x86>
   1b31e:	9806      	ldr	r0, [sp, #24]
   1b320:	2101      	movs	r1, #1
   1b322:	2808      	cmp	r0, #8
   1b324:	bfb8      	it	lt
   1b326:	2008      	movlt	r0, #8
   1b328:	f000 f921 	bl	1b56e <xQueueGenericCreate>
   1b32c:	61e0      	str	r0, [r4, #28]
   1b32e:	6963      	ldr	r3, [r4, #20]
   1b330:	2207      	movs	r2, #7
   1b332:	605a      	str	r2, [r3, #4]
   1b334:	69a0      	ldr	r0, [r4, #24]
   1b336:	b128      	cbz	r0, 1b344 <UartDev::init(unsigned int, unsigned int, int, int)+0x9c>
   1b338:	69e0      	ldr	r0, [r4, #28]
   1b33a:	3000      	adds	r0, #0
   1b33c:	bf18      	it	ne
   1b33e:	2001      	movne	r0, #1
   1b340:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1b342:	2000      	movs	r0, #0
   1b344:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1b346:	bf00      	nop
   1b348:	4000c000 	.word	0x4000c000
   1b34c:	40098000 	.word	0x40098000
   1b350:	4009c000 	.word	0x4009c000
   1b354:	e000e100 	.word	0xe000e100

0001b358 <vListInitialise>:
vListInitialise():
   1b358:	f100 0308 	add.w	r3, r0, #8
   1b35c:	6043      	str	r3, [r0, #4]
   1b35e:	f04f 32ff 	mov.w	r2, #4294967295
   1b362:	60c3      	str	r3, [r0, #12]
   1b364:	6103      	str	r3, [r0, #16]
   1b366:	2300      	movs	r3, #0
   1b368:	6082      	str	r2, [r0, #8]
   1b36a:	6003      	str	r3, [r0, #0]
   1b36c:	4770      	bx	lr

0001b36e <vListInitialiseItem>:
vListInitialiseItem():
   1b36e:	2300      	movs	r3, #0
   1b370:	6103      	str	r3, [r0, #16]
   1b372:	4770      	bx	lr

0001b374 <vListInsertEnd>:
vListInsertEnd():
   1b374:	6843      	ldr	r3, [r0, #4]
   1b376:	689a      	ldr	r2, [r3, #8]
   1b378:	604b      	str	r3, [r1, #4]
   1b37a:	608a      	str	r2, [r1, #8]
   1b37c:	689a      	ldr	r2, [r3, #8]
   1b37e:	6051      	str	r1, [r2, #4]
   1b380:	6099      	str	r1, [r3, #8]
   1b382:	6803      	ldr	r3, [r0, #0]
   1b384:	6108      	str	r0, [r1, #16]
   1b386:	3301      	adds	r3, #1
   1b388:	6003      	str	r3, [r0, #0]
   1b38a:	4770      	bx	lr

0001b38c <vListInsert>:
vListInsert():
   1b38c:	b530      	push	{r4, r5, lr}
   1b38e:	680c      	ldr	r4, [r1, #0]
   1b390:	1c63      	adds	r3, r4, #1
   1b392:	d101      	bne.n	1b398 <vListInsert+0xc>
   1b394:	6903      	ldr	r3, [r0, #16]
   1b396:	e007      	b.n	1b3a8 <vListInsert+0x1c>
   1b398:	f100 0308 	add.w	r3, r0, #8
   1b39c:	685a      	ldr	r2, [r3, #4]
   1b39e:	6815      	ldr	r5, [r2, #0]
   1b3a0:	42a5      	cmp	r5, r4
   1b3a2:	d801      	bhi.n	1b3a8 <vListInsert+0x1c>
   1b3a4:	4613      	mov	r3, r2
   1b3a6:	e7f9      	b.n	1b39c <vListInsert+0x10>
   1b3a8:	685a      	ldr	r2, [r3, #4]
   1b3aa:	604a      	str	r2, [r1, #4]
   1b3ac:	6091      	str	r1, [r2, #8]
   1b3ae:	608b      	str	r3, [r1, #8]
   1b3b0:	6059      	str	r1, [r3, #4]
   1b3b2:	6803      	ldr	r3, [r0, #0]
   1b3b4:	6108      	str	r0, [r1, #16]
   1b3b6:	3301      	adds	r3, #1
   1b3b8:	6003      	str	r3, [r0, #0]
   1b3ba:	bd30      	pop	{r4, r5, pc}

0001b3bc <uxListRemove>:
uxListRemove():
   1b3bc:	6841      	ldr	r1, [r0, #4]
   1b3be:	6882      	ldr	r2, [r0, #8]
   1b3c0:	6903      	ldr	r3, [r0, #16]
   1b3c2:	608a      	str	r2, [r1, #8]
   1b3c4:	6882      	ldr	r2, [r0, #8]
   1b3c6:	6051      	str	r1, [r2, #4]
   1b3c8:	6859      	ldr	r1, [r3, #4]
   1b3ca:	4281      	cmp	r1, r0
   1b3cc:	bf08      	it	eq
   1b3ce:	605a      	streq	r2, [r3, #4]
   1b3d0:	2200      	movs	r2, #0
   1b3d2:	6102      	str	r2, [r0, #16]
   1b3d4:	6818      	ldr	r0, [r3, #0]
   1b3d6:	3801      	subs	r0, #1
   1b3d8:	6018      	str	r0, [r3, #0]
   1b3da:	4770      	bx	lr

0001b3dc <prvCopyDataToQueue>:
prvCopyDataToQueue():
   1b3dc:	b538      	push	{r3, r4, r5, lr}
   1b3de:	4615      	mov	r5, r2
   1b3e0:	6c02      	ldr	r2, [r0, #64]	; 0x40
   1b3e2:	4604      	mov	r4, r0
   1b3e4:	b932      	cbnz	r2, 1b3f4 <prvCopyDataToQueue+0x18>
   1b3e6:	6805      	ldr	r5, [r0, #0]
   1b3e8:	bb3d      	cbnz	r5, 1b43a <prvCopyDataToQueue+0x5e>
   1b3ea:	6840      	ldr	r0, [r0, #4]
   1b3ec:	f000 ff9a 	bl	1c324 <vTaskPriorityDisinherit>
   1b3f0:	6065      	str	r5, [r4, #4]
   1b3f2:	e022      	b.n	1b43a <prvCopyDataToQueue+0x5e>
   1b3f4:	b965      	cbnz	r5, 1b410 <prvCopyDataToQueue+0x34>
   1b3f6:	6880      	ldr	r0, [r0, #8]
   1b3f8:	f003 fc0d 	bl	1ec16 <memcpy>
   1b3fc:	68a2      	ldr	r2, [r4, #8]
   1b3fe:	6c23      	ldr	r3, [r4, #64]	; 0x40
   1b400:	4413      	add	r3, r2
   1b402:	6862      	ldr	r2, [r4, #4]
   1b404:	60a3      	str	r3, [r4, #8]
   1b406:	4293      	cmp	r3, r2
   1b408:	d317      	bcc.n	1b43a <prvCopyDataToQueue+0x5e>
   1b40a:	6823      	ldr	r3, [r4, #0]
   1b40c:	60a3      	str	r3, [r4, #8]
   1b40e:	e014      	b.n	1b43a <prvCopyDataToQueue+0x5e>
   1b410:	68c0      	ldr	r0, [r0, #12]
   1b412:	f003 fc00 	bl	1ec16 <memcpy>
   1b416:	6c23      	ldr	r3, [r4, #64]	; 0x40
   1b418:	68e2      	ldr	r2, [r4, #12]
   1b41a:	425b      	negs	r3, r3
   1b41c:	6821      	ldr	r1, [r4, #0]
   1b41e:	441a      	add	r2, r3
   1b420:	428a      	cmp	r2, r1
   1b422:	60e2      	str	r2, [r4, #12]
   1b424:	d202      	bcs.n	1b42c <prvCopyDataToQueue+0x50>
   1b426:	6862      	ldr	r2, [r4, #4]
   1b428:	4413      	add	r3, r2
   1b42a:	60e3      	str	r3, [r4, #12]
   1b42c:	2d02      	cmp	r5, #2
   1b42e:	d104      	bne.n	1b43a <prvCopyDataToQueue+0x5e>
   1b430:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   1b432:	b113      	cbz	r3, 1b43a <prvCopyDataToQueue+0x5e>
   1b434:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   1b436:	3b01      	subs	r3, #1
   1b438:	63a3      	str	r3, [r4, #56]	; 0x38
   1b43a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   1b43c:	3301      	adds	r3, #1
   1b43e:	63a3      	str	r3, [r4, #56]	; 0x38
   1b440:	bd38      	pop	{r3, r4, r5, pc}

0001b442 <prvNotifyQueueSetContainer>:
prvNotifyQueueSetContainer():
   1b442:	b513      	push	{r0, r1, r4, lr}
   1b444:	6d44      	ldr	r4, [r0, #84]	; 0x54
   1b446:	460a      	mov	r2, r1
   1b448:	6be3      	ldr	r3, [r4, #60]	; 0x3c
   1b44a:	6ba1      	ldr	r1, [r4, #56]	; 0x38
   1b44c:	9001      	str	r0, [sp, #4]
   1b44e:	4299      	cmp	r1, r3
   1b450:	d301      	bcc.n	1b456 <prvNotifyQueueSetContainer+0x14>
   1b452:	2000      	movs	r0, #0
   1b454:	e00d      	b.n	1b472 <prvNotifyQueueSetContainer+0x30>
   1b456:	4620      	mov	r0, r4
   1b458:	a901      	add	r1, sp, #4
   1b45a:	f7ff ffbf 	bl	1b3dc <prvCopyDataToQueue>
   1b45e:	6a63      	ldr	r3, [r4, #36]	; 0x24
   1b460:	2b00      	cmp	r3, #0
   1b462:	d0f6      	beq.n	1b452 <prvNotifyQueueSetContainer+0x10>
   1b464:	f104 0024 	add.w	r0, r4, #36	; 0x24
   1b468:	f000 fe7e 	bl	1c168 <xTaskRemoveFromEventList>
   1b46c:	3000      	adds	r0, #0
   1b46e:	bf18      	it	ne
   1b470:	2001      	movne	r0, #1
   1b472:	b002      	add	sp, #8
   1b474:	bd10      	pop	{r4, pc}

0001b476 <prvCopyDataFromQueue>:
prvCopyDataFromQueue():
   1b476:	b570      	push	{r4, r5, r6, lr}
   1b478:	6804      	ldr	r4, [r0, #0]
   1b47a:	4603      	mov	r3, r0
   1b47c:	b16c      	cbz	r4, 1b49a <prvCopyDataFromQueue+0x24>
   1b47e:	68c5      	ldr	r5, [r0, #12]
   1b480:	6c02      	ldr	r2, [r0, #64]	; 0x40
   1b482:	6846      	ldr	r6, [r0, #4]
   1b484:	4415      	add	r5, r2
   1b486:	42b5      	cmp	r5, r6
   1b488:	60c5      	str	r5, [r0, #12]
   1b48a:	bf28      	it	cs
   1b48c:	60c4      	strcs	r4, [r0, #12]
   1b48e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
   1b492:	4608      	mov	r0, r1
   1b494:	68d9      	ldr	r1, [r3, #12]
   1b496:	f003 bbbe 	b.w	1ec16 <memcpy>
   1b49a:	bd70      	pop	{r4, r5, r6, pc}

0001b49c <prvUnlockQueue>:
prvUnlockQueue():
   1b49c:	b510      	push	{r4, lr}
   1b49e:	4604      	mov	r4, r0
   1b4a0:	f001 f800 	bl	1c4a4 <vPortEnterCritical>
   1b4a4:	6ca3      	ldr	r3, [r4, #72]	; 0x48
   1b4a6:	2b00      	cmp	r3, #0
   1b4a8:	dd16      	ble.n	1b4d8 <prvUnlockQueue+0x3c>
   1b4aa:	6d63      	ldr	r3, [r4, #84]	; 0x54
   1b4ac:	b143      	cbz	r3, 1b4c0 <prvUnlockQueue+0x24>
   1b4ae:	4620      	mov	r0, r4
   1b4b0:	2100      	movs	r1, #0
   1b4b2:	f7ff ffc6 	bl	1b442 <prvNotifyQueueSetContainer>
   1b4b6:	2801      	cmp	r0, #1
   1b4b8:	d10a      	bne.n	1b4d0 <prvUnlockQueue+0x34>
   1b4ba:	f000 febd 	bl	1c238 <vTaskMissedYield>
   1b4be:	e007      	b.n	1b4d0 <prvUnlockQueue+0x34>
   1b4c0:	6a63      	ldr	r3, [r4, #36]	; 0x24
   1b4c2:	b14b      	cbz	r3, 1b4d8 <prvUnlockQueue+0x3c>
   1b4c4:	f104 0024 	add.w	r0, r4, #36	; 0x24
   1b4c8:	f000 fe4e 	bl	1c168 <xTaskRemoveFromEventList>
   1b4cc:	2800      	cmp	r0, #0
   1b4ce:	d1f4      	bne.n	1b4ba <prvUnlockQueue+0x1e>
   1b4d0:	6ca3      	ldr	r3, [r4, #72]	; 0x48
   1b4d2:	3b01      	subs	r3, #1
   1b4d4:	64a3      	str	r3, [r4, #72]	; 0x48
   1b4d6:	e7e5      	b.n	1b4a4 <prvUnlockQueue+0x8>
   1b4d8:	f04f 33ff 	mov.w	r3, #4294967295
   1b4dc:	64a3      	str	r3, [r4, #72]	; 0x48
   1b4de:	f000 fff3 	bl	1c4c8 <vPortExitCritical>
   1b4e2:	f000 ffdf 	bl	1c4a4 <vPortEnterCritical>
   1b4e6:	6c63      	ldr	r3, [r4, #68]	; 0x44
   1b4e8:	2b00      	cmp	r3, #0
   1b4ea:	dd0c      	ble.n	1b506 <prvUnlockQueue+0x6a>
   1b4ec:	6923      	ldr	r3, [r4, #16]
   1b4ee:	b153      	cbz	r3, 1b506 <prvUnlockQueue+0x6a>
   1b4f0:	f104 0010 	add.w	r0, r4, #16
   1b4f4:	f000 fe38 	bl	1c168 <xTaskRemoveFromEventList>
   1b4f8:	b108      	cbz	r0, 1b4fe <prvUnlockQueue+0x62>
   1b4fa:	f000 fe9d 	bl	1c238 <vTaskMissedYield>
   1b4fe:	6c63      	ldr	r3, [r4, #68]	; 0x44
   1b500:	3b01      	subs	r3, #1
   1b502:	6463      	str	r3, [r4, #68]	; 0x44
   1b504:	e7ef      	b.n	1b4e6 <prvUnlockQueue+0x4a>
   1b506:	f04f 33ff 	mov.w	r3, #4294967295
   1b50a:	6463      	str	r3, [r4, #68]	; 0x44
   1b50c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   1b510:	f000 bfda 	b.w	1c4c8 <vPortExitCritical>

0001b514 <xQueueGenericReset>:
xQueueGenericReset():
   1b514:	b538      	push	{r3, r4, r5, lr}
   1b516:	4604      	mov	r4, r0
   1b518:	460d      	mov	r5, r1
   1b51a:	f000 ffc3 	bl	1c4a4 <vPortEnterCritical>
   1b51e:	6c22      	ldr	r2, [r4, #64]	; 0x40
   1b520:	6be0      	ldr	r0, [r4, #60]	; 0x3c
   1b522:	6823      	ldr	r3, [r4, #0]
   1b524:	4350      	muls	r0, r2
   1b526:	1a82      	subs	r2, r0, r2
   1b528:	1819      	adds	r1, r3, r0
   1b52a:	60a3      	str	r3, [r4, #8]
   1b52c:	4413      	add	r3, r2
   1b52e:	6061      	str	r1, [r4, #4]
   1b530:	60e3      	str	r3, [r4, #12]
   1b532:	2100      	movs	r1, #0
   1b534:	f04f 33ff 	mov.w	r3, #4294967295
   1b538:	63a1      	str	r1, [r4, #56]	; 0x38
   1b53a:	6463      	str	r3, [r4, #68]	; 0x44
   1b53c:	64a3      	str	r3, [r4, #72]	; 0x48
   1b53e:	b955      	cbnz	r5, 1b556 <xQueueGenericReset+0x42>
   1b540:	6923      	ldr	r3, [r4, #16]
   1b542:	b183      	cbz	r3, 1b566 <xQueueGenericReset+0x52>
   1b544:	f104 0010 	add.w	r0, r4, #16
   1b548:	f000 fe0e 	bl	1c168 <xTaskRemoveFromEventList>
   1b54c:	2801      	cmp	r0, #1
   1b54e:	d10a      	bne.n	1b566 <xQueueGenericReset+0x52>
   1b550:	f000 ff94 	bl	1c47c <vPortYield>
   1b554:	e007      	b.n	1b566 <xQueueGenericReset+0x52>
   1b556:	f104 0010 	add.w	r0, r4, #16
   1b55a:	f7ff fefd 	bl	1b358 <vListInitialise>
   1b55e:	f104 0024 	add.w	r0, r4, #36	; 0x24
   1b562:	f7ff fef9 	bl	1b358 <vListInitialise>
   1b566:	f000 ffaf 	bl	1c4c8 <vPortExitCritical>
   1b56a:	2001      	movs	r0, #1
   1b56c:	bd38      	pop	{r3, r4, r5, pc}

0001b56e <xQueueGenericCreate>:
xQueueGenericCreate():
   1b56e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1b572:	460f      	mov	r7, r1
   1b574:	4690      	mov	r8, r2
   1b576:	4605      	mov	r5, r0
   1b578:	b908      	cbnz	r0, 1b57e <xQueueGenericCreate+0x10>
   1b57a:	2400      	movs	r4, #0
   1b57c:	e01c      	b.n	1b5b8 <xQueueGenericCreate+0x4a>
   1b57e:	2058      	movs	r0, #88	; 0x58
   1b580:	f001 f84c 	bl	1c61c <pvPortMalloc>
   1b584:	4604      	mov	r4, r0
   1b586:	2800      	cmp	r0, #0
   1b588:	d0f7      	beq.n	1b57a <xQueueGenericCreate+0xc>
   1b58a:	fb07 f005 	mul.w	r0, r7, r5
   1b58e:	3001      	adds	r0, #1
   1b590:	f001 f844 	bl	1c61c <pvPortMalloc>
   1b594:	4606      	mov	r6, r0
   1b596:	6020      	str	r0, [r4, #0]
   1b598:	b150      	cbz	r0, 1b5b0 <xQueueGenericCreate+0x42>
   1b59a:	63e5      	str	r5, [r4, #60]	; 0x3c
   1b59c:	6427      	str	r7, [r4, #64]	; 0x40
   1b59e:	4620      	mov	r0, r4
   1b5a0:	2101      	movs	r1, #1
   1b5a2:	f7ff ffb7 	bl	1b514 <xQueueGenericReset>
   1b5a6:	2300      	movs	r3, #0
   1b5a8:	f884 8050 	strb.w	r8, [r4, #80]	; 0x50
   1b5ac:	6563      	str	r3, [r4, #84]	; 0x54
   1b5ae:	e003      	b.n	1b5b8 <xQueueGenericCreate+0x4a>
   1b5b0:	4620      	mov	r0, r4
   1b5b2:	f001 f842 	bl	1c63a <vPortFree>
   1b5b6:	4634      	mov	r4, r6
   1b5b8:	4620      	mov	r0, r4
   1b5ba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0001b5be <xQueueCreateCountingSemaphore>:
xQueueCreateCountingSemaphore():
   1b5be:	b510      	push	{r4, lr}
   1b5c0:	2202      	movs	r2, #2
   1b5c2:	460c      	mov	r4, r1
   1b5c4:	2100      	movs	r1, #0
   1b5c6:	f7ff ffd2 	bl	1b56e <xQueueGenericCreate>
   1b5ca:	b100      	cbz	r0, 1b5ce <xQueueCreateCountingSemaphore+0x10>
   1b5cc:	6384      	str	r4, [r0, #56]	; 0x38
   1b5ce:	bd10      	pop	{r4, pc}

0001b5d0 <xQueueGenericSend>:
xQueueGenericSend():
   1b5d0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
   1b5d4:	4604      	mov	r4, r0
   1b5d6:	4688      	mov	r8, r1
   1b5d8:	9201      	str	r2, [sp, #4]
   1b5da:	461d      	mov	r5, r3
   1b5dc:	2600      	movs	r6, #0
   1b5de:	f000 ff61 	bl	1c4a4 <vPortEnterCritical>
   1b5e2:	6ba2      	ldr	r2, [r4, #56]	; 0x38
   1b5e4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
   1b5e6:	429a      	cmp	r2, r3
   1b5e8:	d301      	bcc.n	1b5ee <xQueueGenericSend+0x1e>
   1b5ea:	2d02      	cmp	r5, #2
   1b5ec:	d11a      	bne.n	1b624 <xQueueGenericSend+0x54>
   1b5ee:	4620      	mov	r0, r4
   1b5f0:	4641      	mov	r1, r8
   1b5f2:	462a      	mov	r2, r5
   1b5f4:	f7ff fef2 	bl	1b3dc <prvCopyDataToQueue>
   1b5f8:	6d63      	ldr	r3, [r4, #84]	; 0x54
   1b5fa:	b143      	cbz	r3, 1b60e <xQueueGenericSend+0x3e>
   1b5fc:	4620      	mov	r0, r4
   1b5fe:	4629      	mov	r1, r5
   1b600:	f7ff ff1f 	bl	1b442 <prvNotifyQueueSetContainer>
   1b604:	2801      	cmp	r0, #1
   1b606:	d109      	bne.n	1b61c <xQueueGenericSend+0x4c>
   1b608:	f000 ff38 	bl	1c47c <vPortYield>
   1b60c:	e006      	b.n	1b61c <xQueueGenericSend+0x4c>
   1b60e:	6a63      	ldr	r3, [r4, #36]	; 0x24
   1b610:	b123      	cbz	r3, 1b61c <xQueueGenericSend+0x4c>
   1b612:	f104 0024 	add.w	r0, r4, #36	; 0x24
   1b616:	f000 fda7 	bl	1c168 <xTaskRemoveFromEventList>
   1b61a:	e7f3      	b.n	1b604 <xQueueGenericSend+0x34>
   1b61c:	f000 ff54 	bl	1c4c8 <vPortExitCritical>
   1b620:	2001      	movs	r0, #1
   1b622:	e043      	b.n	1b6ac <xQueueGenericSend+0xdc>
   1b624:	9f01      	ldr	r7, [sp, #4]
   1b626:	b917      	cbnz	r7, 1b62e <xQueueGenericSend+0x5e>
   1b628:	f000 ff4e 	bl	1c4c8 <vPortExitCritical>
   1b62c:	e03d      	b.n	1b6aa <xQueueGenericSend+0xda>
   1b62e:	b916      	cbnz	r6, 1b636 <xQueueGenericSend+0x66>
   1b630:	a802      	add	r0, sp, #8
   1b632:	f000 fdcf 	bl	1c1d4 <vTaskSetTimeOutState>
   1b636:	f000 ff47 	bl	1c4c8 <vPortExitCritical>
   1b63a:	f000 fb07 	bl	1bc4c <vTaskSuspendAll>
   1b63e:	f000 ff31 	bl	1c4a4 <vPortEnterCritical>
   1b642:	6c63      	ldr	r3, [r4, #68]	; 0x44
   1b644:	3301      	adds	r3, #1
   1b646:	bf04      	itt	eq
   1b648:	2300      	moveq	r3, #0
   1b64a:	6463      	streq	r3, [r4, #68]	; 0x44
   1b64c:	6ca3      	ldr	r3, [r4, #72]	; 0x48
   1b64e:	3301      	adds	r3, #1
   1b650:	bf04      	itt	eq
   1b652:	2300      	moveq	r3, #0
   1b654:	64a3      	streq	r3, [r4, #72]	; 0x48
   1b656:	f000 ff37 	bl	1c4c8 <vPortExitCritical>
   1b65a:	a802      	add	r0, sp, #8
   1b65c:	a901      	add	r1, sp, #4
   1b65e:	f000 fdc5 	bl	1c1ec <xTaskCheckForTimeOut>
   1b662:	b9e8      	cbnz	r0, 1b6a0 <xQueueGenericSend+0xd0>
   1b664:	f000 ff1e 	bl	1c4a4 <vPortEnterCritical>
   1b668:	6ba7      	ldr	r7, [r4, #56]	; 0x38
   1b66a:	6be6      	ldr	r6, [r4, #60]	; 0x3c
   1b66c:	f000 ff2c 	bl	1c4c8 <vPortExitCritical>
   1b670:	42b7      	cmp	r7, r6
   1b672:	d10f      	bne.n	1b694 <xQueueGenericSend+0xc4>
   1b674:	f104 0010 	add.w	r0, r4, #16
   1b678:	9901      	ldr	r1, [sp, #4]
   1b67a:	f000 fd47 	bl	1c10c <vTaskPlaceOnEventList>
   1b67e:	4620      	mov	r0, r4
   1b680:	f7ff ff0c 	bl	1b49c <prvUnlockQueue>
   1b684:	f000 fb86 	bl	1bd94 <xTaskResumeAll>
   1b688:	b108      	cbz	r0, 1b68e <xQueueGenericSend+0xbe>
   1b68a:	2601      	movs	r6, #1
   1b68c:	e7a7      	b.n	1b5de <xQueueGenericSend+0xe>
   1b68e:	f000 fef5 	bl	1c47c <vPortYield>
   1b692:	e7fa      	b.n	1b68a <xQueueGenericSend+0xba>
   1b694:	4620      	mov	r0, r4
   1b696:	f7ff ff01 	bl	1b49c <prvUnlockQueue>
   1b69a:	f000 fb7b 	bl	1bd94 <xTaskResumeAll>
   1b69e:	e7f4      	b.n	1b68a <xQueueGenericSend+0xba>
   1b6a0:	4620      	mov	r0, r4
   1b6a2:	f7ff fefb 	bl	1b49c <prvUnlockQueue>
   1b6a6:	f000 fb75 	bl	1bd94 <xTaskResumeAll>
   1b6aa:	2000      	movs	r0, #0
   1b6ac:	b004      	add	sp, #16
   1b6ae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0001b6b2 <xQueueCreateMutex>:
xQueueCreateMutex():
   1b6b2:	b570      	push	{r4, r5, r6, lr}
   1b6b4:	4606      	mov	r6, r0
   1b6b6:	2058      	movs	r0, #88	; 0x58
   1b6b8:	f000 ffb0 	bl	1c61c <pvPortMalloc>
   1b6bc:	4604      	mov	r4, r0
   1b6be:	b1e0      	cbz	r0, 1b6fa <xQueueCreateMutex+0x48>
   1b6c0:	2301      	movs	r3, #1
   1b6c2:	2500      	movs	r5, #0
   1b6c4:	63c3      	str	r3, [r0, #60]	; 0x3c
   1b6c6:	f04f 33ff 	mov.w	r3, #4294967295
   1b6ca:	6385      	str	r5, [r0, #56]	; 0x38
   1b6cc:	6045      	str	r5, [r0, #4]
   1b6ce:	6443      	str	r3, [r0, #68]	; 0x44
   1b6d0:	6005      	str	r5, [r0, #0]
   1b6d2:	6483      	str	r3, [r0, #72]	; 0x48
   1b6d4:	6085      	str	r5, [r0, #8]
   1b6d6:	60c5      	str	r5, [r0, #12]
   1b6d8:	6405      	str	r5, [r0, #64]	; 0x40
   1b6da:	f880 6050 	strb.w	r6, [r0, #80]	; 0x50
   1b6de:	6545      	str	r5, [r0, #84]	; 0x54
   1b6e0:	3010      	adds	r0, #16
   1b6e2:	f7ff fe39 	bl	1b358 <vListInitialise>
   1b6e6:	f104 0024 	add.w	r0, r4, #36	; 0x24
   1b6ea:	f7ff fe35 	bl	1b358 <vListInitialise>
   1b6ee:	4620      	mov	r0, r4
   1b6f0:	4629      	mov	r1, r5
   1b6f2:	462a      	mov	r2, r5
   1b6f4:	462b      	mov	r3, r5
   1b6f6:	f7ff ff6b 	bl	1b5d0 <xQueueGenericSend>
   1b6fa:	4620      	mov	r0, r4
   1b6fc:	bd70      	pop	{r4, r5, r6, pc}

0001b6fe <xQueueGenericSendFromISR>:
xQueueGenericSendFromISR():
   1b6fe:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1b702:	4604      	mov	r4, r0
   1b704:	4615      	mov	r5, r2
   1b706:	461e      	mov	r6, r3
   1b708:	4688      	mov	r8, r1
   1b70a:	f000 fec3 	bl	1c494 <ulPortSetInterruptMask>
   1b70e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
   1b710:	6be3      	ldr	r3, [r4, #60]	; 0x3c
   1b712:	4607      	mov	r7, r0
   1b714:	429a      	cmp	r2, r3
   1b716:	d301      	bcc.n	1b71c <xQueueGenericSendFromISR+0x1e>
   1b718:	2e02      	cmp	r6, #2
   1b71a:	d122      	bne.n	1b762 <xQueueGenericSendFromISR+0x64>
   1b71c:	4620      	mov	r0, r4
   1b71e:	4641      	mov	r1, r8
   1b720:	4632      	mov	r2, r6
   1b722:	f7ff fe5b 	bl	1b3dc <prvCopyDataToQueue>
   1b726:	6ca3      	ldr	r3, [r4, #72]	; 0x48
   1b728:	3301      	adds	r3, #1
   1b72a:	d115      	bne.n	1b758 <xQueueGenericSendFromISR+0x5a>
   1b72c:	6d63      	ldr	r3, [r4, #84]	; 0x54
   1b72e:	b143      	cbz	r3, 1b742 <xQueueGenericSendFromISR+0x44>
   1b730:	4620      	mov	r0, r4
   1b732:	4631      	mov	r1, r6
   1b734:	f7ff fe85 	bl	1b442 <prvNotifyQueueSetContainer>
   1b738:	2801      	cmp	r0, #1
   1b73a:	d110      	bne.n	1b75e <xQueueGenericSendFromISR+0x60>
   1b73c:	b17d      	cbz	r5, 1b75e <xQueueGenericSendFromISR+0x60>
   1b73e:	6028      	str	r0, [r5, #0]
   1b740:	e00d      	b.n	1b75e <xQueueGenericSendFromISR+0x60>
   1b742:	6a63      	ldr	r3, [r4, #36]	; 0x24
   1b744:	b15b      	cbz	r3, 1b75e <xQueueGenericSendFromISR+0x60>
   1b746:	f104 0024 	add.w	r0, r4, #36	; 0x24
   1b74a:	f000 fd0d 	bl	1c168 <xTaskRemoveFromEventList>
   1b74e:	b130      	cbz	r0, 1b75e <xQueueGenericSendFromISR+0x60>
   1b750:	b12d      	cbz	r5, 1b75e <xQueueGenericSendFromISR+0x60>
   1b752:	2401      	movs	r4, #1
   1b754:	602c      	str	r4, [r5, #0]
   1b756:	e005      	b.n	1b764 <xQueueGenericSendFromISR+0x66>
   1b758:	6ca3      	ldr	r3, [r4, #72]	; 0x48
   1b75a:	3301      	adds	r3, #1
   1b75c:	64a3      	str	r3, [r4, #72]	; 0x48
   1b75e:	2401      	movs	r4, #1
   1b760:	e000      	b.n	1b764 <xQueueGenericSendFromISR+0x66>
   1b762:	2400      	movs	r4, #0
   1b764:	4638      	mov	r0, r7
   1b766:	f000 feab 	bl	1c4c0 <vPortClearInterruptMask>
   1b76a:	4620      	mov	r0, r4
   1b76c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0001b770 <xQueueGenericReceive>:
xQueueGenericReceive():
   1b770:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
   1b774:	4604      	mov	r4, r0
   1b776:	460f      	mov	r7, r1
   1b778:	9201      	str	r2, [sp, #4]
   1b77a:	4698      	mov	r8, r3
   1b77c:	2500      	movs	r5, #0
   1b77e:	f000 fe91 	bl	1c4a4 <vPortEnterCritical>
   1b782:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   1b784:	b33b      	cbz	r3, 1b7d6 <xQueueGenericReceive+0x66>
   1b786:	4620      	mov	r0, r4
   1b788:	4639      	mov	r1, r7
   1b78a:	68e5      	ldr	r5, [r4, #12]
   1b78c:	f7ff fe73 	bl	1b476 <prvCopyDataFromQueue>
   1b790:	f1b8 0f00 	cmp.w	r8, #0
   1b794:	d112      	bne.n	1b7bc <xQueueGenericReceive+0x4c>
   1b796:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   1b798:	3b01      	subs	r3, #1
   1b79a:	63a3      	str	r3, [r4, #56]	; 0x38
   1b79c:	6823      	ldr	r3, [r4, #0]
   1b79e:	b913      	cbnz	r3, 1b7a6 <xQueueGenericReceive+0x36>
   1b7a0:	f000 fd60 	bl	1c264 <xTaskGetCurrentTaskHandle>
   1b7a4:	6060      	str	r0, [r4, #4]
   1b7a6:	6923      	ldr	r3, [r4, #16]
   1b7a8:	b18b      	cbz	r3, 1b7ce <xQueueGenericReceive+0x5e>
   1b7aa:	f104 0010 	add.w	r0, r4, #16
   1b7ae:	f000 fcdb 	bl	1c168 <xTaskRemoveFromEventList>
   1b7b2:	2801      	cmp	r0, #1
   1b7b4:	d10b      	bne.n	1b7ce <xQueueGenericReceive+0x5e>
   1b7b6:	f000 fe61 	bl	1c47c <vPortYield>
   1b7ba:	e008      	b.n	1b7ce <xQueueGenericReceive+0x5e>
   1b7bc:	6a63      	ldr	r3, [r4, #36]	; 0x24
   1b7be:	60e5      	str	r5, [r4, #12]
   1b7c0:	b12b      	cbz	r3, 1b7ce <xQueueGenericReceive+0x5e>
   1b7c2:	f104 0024 	add.w	r0, r4, #36	; 0x24
   1b7c6:	f000 fccf 	bl	1c168 <xTaskRemoveFromEventList>
   1b7ca:	2800      	cmp	r0, #0
   1b7cc:	d1f3      	bne.n	1b7b6 <xQueueGenericReceive+0x46>
   1b7ce:	f000 fe7b 	bl	1c4c8 <vPortExitCritical>
   1b7d2:	2001      	movs	r0, #1
   1b7d4:	e04a      	b.n	1b86c <xQueueGenericReceive+0xfc>
   1b7d6:	9e01      	ldr	r6, [sp, #4]
   1b7d8:	b916      	cbnz	r6, 1b7e0 <xQueueGenericReceive+0x70>
   1b7da:	f000 fe75 	bl	1c4c8 <vPortExitCritical>
   1b7de:	e044      	b.n	1b86a <xQueueGenericReceive+0xfa>
   1b7e0:	b915      	cbnz	r5, 1b7e8 <xQueueGenericReceive+0x78>
   1b7e2:	a802      	add	r0, sp, #8
   1b7e4:	f000 fcf6 	bl	1c1d4 <vTaskSetTimeOutState>
   1b7e8:	f000 fe6e 	bl	1c4c8 <vPortExitCritical>
   1b7ec:	f000 fa2e 	bl	1bc4c <vTaskSuspendAll>
   1b7f0:	f000 fe58 	bl	1c4a4 <vPortEnterCritical>
   1b7f4:	6c63      	ldr	r3, [r4, #68]	; 0x44
   1b7f6:	3301      	adds	r3, #1
   1b7f8:	bf04      	itt	eq
   1b7fa:	2300      	moveq	r3, #0
   1b7fc:	6463      	streq	r3, [r4, #68]	; 0x44
   1b7fe:	6ca3      	ldr	r3, [r4, #72]	; 0x48
   1b800:	3301      	adds	r3, #1
   1b802:	bf04      	itt	eq
   1b804:	2300      	moveq	r3, #0
   1b806:	64a3      	streq	r3, [r4, #72]	; 0x48
   1b808:	f000 fe5e 	bl	1c4c8 <vPortExitCritical>
   1b80c:	a802      	add	r0, sp, #8
   1b80e:	a901      	add	r1, sp, #4
   1b810:	f000 fcec 	bl	1c1ec <xTaskCheckForTimeOut>
   1b814:	bb20      	cbnz	r0, 1b860 <xQueueGenericReceive+0xf0>
   1b816:	f000 fe45 	bl	1c4a4 <vPortEnterCritical>
   1b81a:	6ba5      	ldr	r5, [r4, #56]	; 0x38
   1b81c:	f000 fe54 	bl	1c4c8 <vPortExitCritical>
   1b820:	b9c5      	cbnz	r5, 1b854 <xQueueGenericReceive+0xe4>
   1b822:	6823      	ldr	r3, [r4, #0]
   1b824:	b933      	cbnz	r3, 1b834 <xQueueGenericReceive+0xc4>
   1b826:	f000 fe3d 	bl	1c4a4 <vPortEnterCritical>
   1b82a:	6860      	ldr	r0, [r4, #4]
   1b82c:	f000 fd30 	bl	1c290 <vTaskPriorityInherit>
   1b830:	f000 fe4a 	bl	1c4c8 <vPortExitCritical>
   1b834:	f104 0024 	add.w	r0, r4, #36	; 0x24
   1b838:	9901      	ldr	r1, [sp, #4]
   1b83a:	f000 fc67 	bl	1c10c <vTaskPlaceOnEventList>
   1b83e:	4620      	mov	r0, r4
   1b840:	f7ff fe2c 	bl	1b49c <prvUnlockQueue>
   1b844:	f000 faa6 	bl	1bd94 <xTaskResumeAll>
   1b848:	b108      	cbz	r0, 1b84e <xQueueGenericReceive+0xde>
   1b84a:	2501      	movs	r5, #1
   1b84c:	e797      	b.n	1b77e <xQueueGenericReceive+0xe>
   1b84e:	f000 fe15 	bl	1c47c <vPortYield>
   1b852:	e7fa      	b.n	1b84a <xQueueGenericReceive+0xda>
   1b854:	4620      	mov	r0, r4
   1b856:	f7ff fe21 	bl	1b49c <prvUnlockQueue>
   1b85a:	f000 fa9b 	bl	1bd94 <xTaskResumeAll>
   1b85e:	e7f4      	b.n	1b84a <xQueueGenericReceive+0xda>
   1b860:	4620      	mov	r0, r4
   1b862:	f7ff fe1b 	bl	1b49c <prvUnlockQueue>
   1b866:	f000 fa95 	bl	1bd94 <xTaskResumeAll>
   1b86a:	2000      	movs	r0, #0
   1b86c:	b004      	add	sp, #16
   1b86e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0001b872 <xQueueReceiveFromISR>:
xQueueReceiveFromISR():
   1b872:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1b874:	4604      	mov	r4, r0
   1b876:	460f      	mov	r7, r1
   1b878:	4615      	mov	r5, r2
   1b87a:	f000 fe0b 	bl	1c494 <ulPortSetInterruptMask>
   1b87e:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   1b880:	4606      	mov	r6, r0
   1b882:	b1cb      	cbz	r3, 1b8b8 <xQueueReceiveFromISR+0x46>
   1b884:	4620      	mov	r0, r4
   1b886:	4639      	mov	r1, r7
   1b888:	f7ff fdf5 	bl	1b476 <prvCopyDataFromQueue>
   1b88c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   1b88e:	3b01      	subs	r3, #1
   1b890:	63a3      	str	r3, [r4, #56]	; 0x38
   1b892:	6c63      	ldr	r3, [r4, #68]	; 0x44
   1b894:	3301      	adds	r3, #1
   1b896:	d10a      	bne.n	1b8ae <xQueueReceiveFromISR+0x3c>
   1b898:	6923      	ldr	r3, [r4, #16]
   1b89a:	b15b      	cbz	r3, 1b8b4 <xQueueReceiveFromISR+0x42>
   1b89c:	f104 0010 	add.w	r0, r4, #16
   1b8a0:	f000 fc62 	bl	1c168 <xTaskRemoveFromEventList>
   1b8a4:	b130      	cbz	r0, 1b8b4 <xQueueReceiveFromISR+0x42>
   1b8a6:	b12d      	cbz	r5, 1b8b4 <xQueueReceiveFromISR+0x42>
   1b8a8:	2401      	movs	r4, #1
   1b8aa:	602c      	str	r4, [r5, #0]
   1b8ac:	e005      	b.n	1b8ba <xQueueReceiveFromISR+0x48>
   1b8ae:	6c63      	ldr	r3, [r4, #68]	; 0x44
   1b8b0:	3301      	adds	r3, #1
   1b8b2:	6463      	str	r3, [r4, #68]	; 0x44
   1b8b4:	2401      	movs	r4, #1
   1b8b6:	e000      	b.n	1b8ba <xQueueReceiveFromISR+0x48>
   1b8b8:	461c      	mov	r4, r3
   1b8ba:	4630      	mov	r0, r6
   1b8bc:	f000 fe00 	bl	1c4c0 <vPortClearInterruptMask>
   1b8c0:	4620      	mov	r0, r4
   1b8c2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0001b8c4 <uxQueueMessagesWaiting>:
uxQueueMessagesWaiting():
   1b8c4:	b510      	push	{r4, lr}
   1b8c6:	4604      	mov	r4, r0
   1b8c8:	f000 fdec 	bl	1c4a4 <vPortEnterCritical>
   1b8cc:	6ba4      	ldr	r4, [r4, #56]	; 0x38
   1b8ce:	f000 fdfb 	bl	1c4c8 <vPortExitCritical>
   1b8d2:	4620      	mov	r0, r4
   1b8d4:	bd10      	pop	{r4, pc}

0001b8d6 <uxQueueMessagesWaitingFromISR>:
uxQueueMessagesWaitingFromISR():
   1b8d6:	6b80      	ldr	r0, [r0, #56]	; 0x38
   1b8d8:	4770      	bx	lr

0001b8da <xQueueSelectFromSet>:
xQueueSelectFromSet():
   1b8da:	b507      	push	{r0, r1, r2, lr}
   1b8dc:	2300      	movs	r3, #0
   1b8de:	460a      	mov	r2, r1
   1b8e0:	a902      	add	r1, sp, #8
   1b8e2:	f841 3d04 	str.w	r3, [r1, #-4]!
   1b8e6:	f7ff ff43 	bl	1b770 <xQueueGenericReceive>
   1b8ea:	9801      	ldr	r0, [sp, #4]
   1b8ec:	b003      	add	sp, #12
   1b8ee:	f85d fb04 	ldr.w	pc, [sp], #4

0001b8f2 <prvResetRunTimeStatsInList>:
prvResetRunTimeStatsInList():
   1b8f2:	6843      	ldr	r3, [r0, #4]
   1b8f4:	f100 0208 	add.w	r2, r0, #8
   1b8f8:	685b      	ldr	r3, [r3, #4]
   1b8fa:	b530      	push	{r4, r5, lr}
   1b8fc:	4293      	cmp	r3, r2
   1b8fe:	6043      	str	r3, [r0, #4]
   1b900:	bf04      	itt	eq
   1b902:	6853      	ldreq	r3, [r2, #4]
   1b904:	6043      	streq	r3, [r0, #4]
   1b906:	6843      	ldr	r3, [r0, #4]
   1b908:	68dc      	ldr	r4, [r3, #12]
   1b90a:	685b      	ldr	r3, [r3, #4]
   1b90c:	2500      	movs	r5, #0
   1b90e:	4293      	cmp	r3, r2
   1b910:	bf08      	it	eq
   1b912:	68c3      	ldreq	r3, [r0, #12]
   1b914:	68d9      	ldr	r1, [r3, #12]
   1b916:	42a1      	cmp	r1, r4
   1b918:	648d      	str	r5, [r1, #72]	; 0x48
   1b91a:	d1f6      	bne.n	1b90a <prvResetRunTimeStatsInList+0x18>
   1b91c:	6043      	str	r3, [r0, #4]
   1b91e:	bd30      	pop	{r4, r5, pc}

0001b920 <prvIdleTask>:
prvIdleTask():
   1b920:	b508      	push	{r3, lr}
   1b922:	4b04      	ldr	r3, [pc, #16]	; (1b934 <prvIdleTask+0x14>)
   1b924:	681b      	ldr	r3, [r3, #0]
   1b926:	2b01      	cmp	r3, #1
   1b928:	d901      	bls.n	1b92e <prvIdleTask+0xe>
   1b92a:	f000 fda7 	bl	1c47c <vPortYield>
   1b92e:	f000 fe45 	bl	1c5bc <vApplicationIdleHook>
   1b932:	e7f6      	b.n	1b922 <prvIdleTask+0x2>
   1b934:	2007c9dc 	.word	0x2007c9dc

0001b938 <prvListTaskWithinSingleList>:
prvListTaskWithinSingleList():
   1b938:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1b93c:	680c      	ldr	r4, [r1, #0]
   1b93e:	2c00      	cmp	r4, #0
   1b940:	d03e      	beq.n	1b9c0 <prvListTaskWithinSingleList+0x88>
   1b942:	684c      	ldr	r4, [r1, #4]
   1b944:	f101 0608 	add.w	r6, r1, #8
   1b948:	6864      	ldr	r4, [r4, #4]
   1b94a:	4603      	mov	r3, r0
   1b94c:	42b4      	cmp	r4, r6
   1b94e:	604c      	str	r4, [r1, #4]
   1b950:	bf08      	it	eq
   1b952:	6874      	ldreq	r4, [r6, #4]
   1b954:	f04f 0000 	mov.w	r0, #0
   1b958:	bf08      	it	eq
   1b95a:	604c      	streq	r4, [r1, #4]
   1b95c:	684c      	ldr	r4, [r1, #4]
   1b95e:	68e7      	ldr	r7, [r4, #12]
   1b960:	684c      	ldr	r4, [r1, #4]
   1b962:	6864      	ldr	r4, [r4, #4]
   1b964:	42b4      	cmp	r4, r6
   1b966:	604c      	str	r4, [r1, #4]
   1b968:	bf04      	itt	eq
   1b96a:	68cc      	ldreq	r4, [r1, #12]
   1b96c:	604c      	streq	r4, [r1, #4]
   1b96e:	684c      	ldr	r4, [r1, #4]
   1b970:	2a03      	cmp	r2, #3
   1b972:	68e4      	ldr	r4, [r4, #12]
   1b974:	f104 0534 	add.w	r5, r4, #52	; 0x34
   1b978:	601c      	str	r4, [r3, #0]
   1b97a:	605d      	str	r5, [r3, #4]
   1b97c:	6be5      	ldr	r5, [r4, #60]	; 0x3c
   1b97e:	731a      	strb	r2, [r3, #12]
   1b980:	609d      	str	r5, [r3, #8]
   1b982:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
   1b984:	611d      	str	r5, [r3, #16]
   1b986:	d103      	bne.n	1b990 <prvListTaskWithinSingleList+0x58>
   1b988:	6aa5      	ldr	r5, [r4, #40]	; 0x28
   1b98a:	b10d      	cbz	r5, 1b990 <prvListTaskWithinSingleList+0x58>
   1b98c:	2502      	movs	r5, #2
   1b98e:	731d      	strb	r5, [r3, #12]
   1b990:	6c65      	ldr	r5, [r4, #68]	; 0x44
   1b992:	615d      	str	r5, [r3, #20]
   1b994:	6ca5      	ldr	r5, [r4, #72]	; 0x48
   1b996:	619d      	str	r5, [r3, #24]
   1b998:	f8d4 8030 	ldr.w	r8, [r4, #48]	; 0x30
   1b99c:	2500      	movs	r5, #0
   1b99e:	f818 c005 	ldrb.w	ip, [r8, r5]
   1b9a2:	f1bc 0fa5 	cmp.w	ip, #165	; 0xa5
   1b9a6:	d101      	bne.n	1b9ac <prvListTaskWithinSingleList+0x74>
   1b9a8:	3501      	adds	r5, #1
   1b9aa:	e7f8      	b.n	1b99e <prvListTaskWithinSingleList+0x66>
   1b9ac:	08ad      	lsrs	r5, r5, #2
   1b9ae:	42bc      	cmp	r4, r7
   1b9b0:	839d      	strh	r5, [r3, #28]
   1b9b2:	f100 0001 	add.w	r0, r0, #1
   1b9b6:	f103 0320 	add.w	r3, r3, #32
   1b9ba:	d1d1      	bne.n	1b960 <prvListTaskWithinSingleList+0x28>
   1b9bc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1b9c0:	4620      	mov	r0, r4
   1b9c2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

0001b9c8 <prvResetNextTaskUnblockTime>:
prvResetNextTaskUnblockTime():
   1b9c8:	4a06      	ldr	r2, [pc, #24]	; (1b9e4 <prvResetNextTaskUnblockTime+0x1c>)
   1b9ca:	6813      	ldr	r3, [r2, #0]
   1b9cc:	6819      	ldr	r1, [r3, #0]
   1b9ce:	4b06      	ldr	r3, [pc, #24]	; (1b9e8 <prvResetNextTaskUnblockTime+0x20>)
   1b9d0:	b911      	cbnz	r1, 1b9d8 <prvResetNextTaskUnblockTime+0x10>
   1b9d2:	f04f 32ff 	mov.w	r2, #4294967295
   1b9d6:	e003      	b.n	1b9e0 <prvResetNextTaskUnblockTime+0x18>
   1b9d8:	6812      	ldr	r2, [r2, #0]
   1b9da:	68d2      	ldr	r2, [r2, #12]
   1b9dc:	68d2      	ldr	r2, [r2, #12]
   1b9de:	6852      	ldr	r2, [r2, #4]
   1b9e0:	601a      	str	r2, [r3, #0]
   1b9e2:	4770      	bx	lr
   1b9e4:	2007c9a8 	.word	0x2007c9a8
   1b9e8:	2007c070 	.word	0x2007c070

0001b9ec <prvAddCurrentTaskToDelayedList>:
prvAddCurrentTaskToDelayedList():
   1b9ec:	4b0e      	ldr	r3, [pc, #56]	; (1ba28 <prvAddCurrentTaskToDelayedList+0x3c>)
   1b9ee:	b510      	push	{r4, lr}
   1b9f0:	681a      	ldr	r2, [r3, #0]
   1b9f2:	4604      	mov	r4, r0
   1b9f4:	6050      	str	r0, [r2, #4]
   1b9f6:	4a0d      	ldr	r2, [pc, #52]	; (1ba2c <prvAddCurrentTaskToDelayedList+0x40>)
   1b9f8:	6812      	ldr	r2, [r2, #0]
   1b9fa:	4290      	cmp	r0, r2
   1b9fc:	d207      	bcs.n	1ba0e <prvAddCurrentTaskToDelayedList+0x22>
   1b9fe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   1ba02:	4a0b      	ldr	r2, [pc, #44]	; (1ba30 <prvAddCurrentTaskToDelayedList+0x44>)
   1ba04:	6810      	ldr	r0, [r2, #0]
   1ba06:	6819      	ldr	r1, [r3, #0]
   1ba08:	3104      	adds	r1, #4
   1ba0a:	f7ff bcbf 	b.w	1b38c <vListInsert>
   1ba0e:	4a09      	ldr	r2, [pc, #36]	; (1ba34 <prvAddCurrentTaskToDelayedList+0x48>)
   1ba10:	6810      	ldr	r0, [r2, #0]
   1ba12:	6819      	ldr	r1, [r3, #0]
   1ba14:	3104      	adds	r1, #4
   1ba16:	f7ff fcb9 	bl	1b38c <vListInsert>
   1ba1a:	4b07      	ldr	r3, [pc, #28]	; (1ba38 <prvAddCurrentTaskToDelayedList+0x4c>)
   1ba1c:	681a      	ldr	r2, [r3, #0]
   1ba1e:	4294      	cmp	r4, r2
   1ba20:	bf38      	it	cc
   1ba22:	601c      	strcc	r4, [r3, #0]
   1ba24:	bd10      	pop	{r4, pc}
   1ba26:	bf00      	nop
   1ba28:	2007ca34 	.word	0x2007ca34
   1ba2c:	2007ca4c 	.word	0x2007ca4c
   1ba30:	2007ca50 	.word	0x2007ca50
   1ba34:	2007c9a8 	.word	0x2007c9a8
   1ba38:	2007c070 	.word	0x2007c070

0001ba3c <xTaskGenericCreate>:
xTaskGenericCreate():
   1ba3c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ba40:	4682      	mov	sl, r0
   1ba42:	204c      	movs	r0, #76	; 0x4c
   1ba44:	460f      	mov	r7, r1
   1ba46:	4615      	mov	r5, r2
   1ba48:	4699      	mov	r9, r3
   1ba4a:	9e0a      	ldr	r6, [sp, #40]	; 0x28
   1ba4c:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
   1ba50:	f000 fde4 	bl	1c61c <pvPortMalloc>
   1ba54:	4604      	mov	r4, r0
   1ba56:	2800      	cmp	r0, #0
   1ba58:	f000 809f 	beq.w	1bb9a <xTaskGenericCreate+0x15e>
   1ba5c:	4658      	mov	r0, fp
   1ba5e:	f1bb 0f00 	cmp.w	fp, #0
   1ba62:	d102      	bne.n	1ba6a <xTaskGenericCreate+0x2e>
   1ba64:	00a8      	lsls	r0, r5, #2
   1ba66:	f000 fdd9 	bl	1c61c <pvPortMalloc>
   1ba6a:	6320      	str	r0, [r4, #48]	; 0x30
   1ba6c:	b918      	cbnz	r0, 1ba76 <xTaskGenericCreate+0x3a>
   1ba6e:	4620      	mov	r0, r4
   1ba70:	f000 fde3 	bl	1c63a <vPortFree>
   1ba74:	e091      	b.n	1bb9a <xTaskGenericCreate+0x15e>
   1ba76:	00ad      	lsls	r5, r5, #2
   1ba78:	462a      	mov	r2, r5
   1ba7a:	21a5      	movs	r1, #165	; 0xa5
   1ba7c:	f003 f8ef 	bl	1ec5e <memset>
   1ba80:	6b23      	ldr	r3, [r4, #48]	; 0x30
   1ba82:	3d04      	subs	r5, #4
   1ba84:	442b      	add	r3, r5
   1ba86:	f023 0807 	bic.w	r8, r3, #7
   1ba8a:	2500      	movs	r5, #0
   1ba8c:	5d79      	ldrb	r1, [r7, r5]
   1ba8e:	1962      	adds	r2, r4, r5
   1ba90:	f882 1034 	strb.w	r1, [r2, #52]	; 0x34
   1ba94:	577a      	ldrsb	r2, [r7, r5]
   1ba96:	b112      	cbz	r2, 1ba9e <xTaskGenericCreate+0x62>
   1ba98:	3501      	adds	r5, #1
   1ba9a:	2d08      	cmp	r5, #8
   1ba9c:	d1f6      	bne.n	1ba8c <xTaskGenericCreate+0x50>
   1ba9e:	2e03      	cmp	r6, #3
   1baa0:	bf34      	ite	cc
   1baa2:	4635      	movcc	r5, r6
   1baa4:	2503      	movcs	r5, #3
   1baa6:	f04f 0b00 	mov.w	fp, #0
   1baaa:	1d27      	adds	r7, r4, #4
   1baac:	62e5      	str	r5, [r4, #44]	; 0x2c
   1baae:	6465      	str	r5, [r4, #68]	; 0x44
   1bab0:	4638      	mov	r0, r7
   1bab2:	f884 b03b 	strb.w	fp, [r4, #59]	; 0x3b
   1bab6:	f7ff fc5a 	bl	1b36e <vListInitialiseItem>
   1baba:	f1c5 0504 	rsb	r5, r5, #4
   1babe:	f104 0018 	add.w	r0, r4, #24
   1bac2:	f7ff fc54 	bl	1b36e <vListInitialiseItem>
   1bac6:	6124      	str	r4, [r4, #16]
   1bac8:	61a5      	str	r5, [r4, #24]
   1baca:	6264      	str	r4, [r4, #36]	; 0x24
   1bacc:	f8c4 b048 	str.w	fp, [r4, #72]	; 0x48
   1bad0:	4640      	mov	r0, r8
   1bad2:	4651      	mov	r1, sl
   1bad4:	464a      	mov	r2, r9
   1bad6:	f000 fcb3 	bl	1c440 <pxPortInitialiseStack>
   1bada:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   1badc:	6020      	str	r0, [r4, #0]
   1bade:	b103      	cbz	r3, 1bae2 <xTaskGenericCreate+0xa6>
   1bae0:	601c      	str	r4, [r3, #0]
   1bae2:	f000 fcdf 	bl	1c4a4 <vPortEnterCritical>
   1bae6:	4b2f      	ldr	r3, [pc, #188]	; (1bba4 <xTaskGenericCreate+0x168>)
   1bae8:	4d2f      	ldr	r5, [pc, #188]	; (1bba8 <xTaskGenericCreate+0x16c>)
   1baea:	681a      	ldr	r2, [r3, #0]
   1baec:	f8df 80e4 	ldr.w	r8, [pc, #228]	; 1bbd4 <xTaskGenericCreate+0x198>
   1baf0:	3201      	adds	r2, #1
   1baf2:	601a      	str	r2, [r3, #0]
   1baf4:	682a      	ldr	r2, [r5, #0]
   1baf6:	bb32      	cbnz	r2, 1bb46 <xTaskGenericCreate+0x10a>
   1baf8:	602c      	str	r4, [r5, #0]
   1bafa:	681b      	ldr	r3, [r3, #0]
   1bafc:	2b01      	cmp	r3, #1
   1bafe:	d12a      	bne.n	1bb56 <xTaskGenericCreate+0x11a>
   1bb00:	482a      	ldr	r0, [pc, #168]	; (1bbac <xTaskGenericCreate+0x170>)
   1bb02:	f7ff fc29 	bl	1b358 <vListInitialise>
   1bb06:	482a      	ldr	r0, [pc, #168]	; (1bbb0 <xTaskGenericCreate+0x174>)
   1bb08:	f7ff fc26 	bl	1b358 <vListInitialise>
   1bb0c:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 1bbd8 <xTaskGenericCreate+0x19c>
   1bb10:	4828      	ldr	r0, [pc, #160]	; (1bbb4 <xTaskGenericCreate+0x178>)
   1bb12:	f7ff fc21 	bl	1b358 <vListInitialise>
   1bb16:	f8df 90c4 	ldr.w	r9, [pc, #196]	; 1bbdc <xTaskGenericCreate+0x1a0>
   1bb1a:	4827      	ldr	r0, [pc, #156]	; (1bbb8 <xTaskGenericCreate+0x17c>)
   1bb1c:	f7ff fc1c 	bl	1b358 <vListInitialise>
   1bb20:	4650      	mov	r0, sl
   1bb22:	f7ff fc19 	bl	1b358 <vListInitialise>
   1bb26:	4648      	mov	r0, r9
   1bb28:	f7ff fc16 	bl	1b358 <vListInitialise>
   1bb2c:	4823      	ldr	r0, [pc, #140]	; (1bbbc <xTaskGenericCreate+0x180>)
   1bb2e:	f7ff fc13 	bl	1b358 <vListInitialise>
   1bb32:	4823      	ldr	r0, [pc, #140]	; (1bbc0 <xTaskGenericCreate+0x184>)
   1bb34:	f7ff fc10 	bl	1b358 <vListInitialise>
   1bb38:	4b22      	ldr	r3, [pc, #136]	; (1bbc4 <xTaskGenericCreate+0x188>)
   1bb3a:	f8c3 a000 	str.w	sl, [r3]
   1bb3e:	4b22      	ldr	r3, [pc, #136]	; (1bbc8 <xTaskGenericCreate+0x18c>)
   1bb40:	f8c3 9000 	str.w	r9, [r3]
   1bb44:	e007      	b.n	1bb56 <xTaskGenericCreate+0x11a>
   1bb46:	f8d8 3000 	ldr.w	r3, [r8]
   1bb4a:	b923      	cbnz	r3, 1bb56 <xTaskGenericCreate+0x11a>
   1bb4c:	682b      	ldr	r3, [r5, #0]
   1bb4e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   1bb50:	42b3      	cmp	r3, r6
   1bb52:	bf98      	it	ls
   1bb54:	602c      	strls	r4, [r5, #0]
   1bb56:	4a1d      	ldr	r2, [pc, #116]	; (1bbcc <xTaskGenericCreate+0x190>)
   1bb58:	6813      	ldr	r3, [r2, #0]
   1bb5a:	3301      	adds	r3, #1
   1bb5c:	6013      	str	r3, [r2, #0]
   1bb5e:	63e3      	str	r3, [r4, #60]	; 0x3c
   1bb60:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
   1bb62:	2401      	movs	r4, #1
   1bb64:	fa04 f003 	lsl.w	r0, r4, r3
   1bb68:	4a19      	ldr	r2, [pc, #100]	; (1bbd0 <xTaskGenericCreate+0x194>)
   1bb6a:	6811      	ldr	r1, [r2, #0]
   1bb6c:	4301      	orrs	r1, r0
   1bb6e:	6011      	str	r1, [r2, #0]
   1bb70:	4a0e      	ldr	r2, [pc, #56]	; (1bbac <xTaskGenericCreate+0x170>)
   1bb72:	2014      	movs	r0, #20
   1bb74:	fb00 2003 	mla	r0, r0, r3, r2
   1bb78:	4639      	mov	r1, r7
   1bb7a:	f7ff fbfb 	bl	1b374 <vListInsertEnd>
   1bb7e:	f000 fca3 	bl	1c4c8 <vPortExitCritical>
   1bb82:	f8d8 3000 	ldr.w	r3, [r8]
   1bb86:	b12b      	cbz	r3, 1bb94 <xTaskGenericCreate+0x158>
   1bb88:	682b      	ldr	r3, [r5, #0]
   1bb8a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   1bb8c:	42b3      	cmp	r3, r6
   1bb8e:	d201      	bcs.n	1bb94 <xTaskGenericCreate+0x158>
   1bb90:	f000 fc74 	bl	1c47c <vPortYield>
   1bb94:	4620      	mov	r0, r4
   1bb96:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bb9a:	f04f 30ff 	mov.w	r0, #4294967295
   1bb9e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bba2:	bf00      	nop
   1bba4:	2007ca58 	.word	0x2007ca58
   1bba8:	2007ca34 	.word	0x2007ca34
   1bbac:	2007c9dc 	.word	0x2007c9dc
   1bbb0:	2007c9f0 	.word	0x2007c9f0
   1bbb4:	2007ca04 	.word	0x2007ca04
   1bbb8:	2007ca18 	.word	0x2007ca18
   1bbbc:	2007ca38 	.word	0x2007ca38
   1bbc0:	2007ca60 	.word	0x2007ca60
   1bbc4:	2007c9a8 	.word	0x2007c9a8
   1bbc8:	2007ca50 	.word	0x2007ca50
   1bbcc:	2007ca54 	.word	0x2007ca54
   1bbd0:	2007ca74 	.word	0x2007ca74
   1bbd4:	2007c9ac 	.word	0x2007c9ac
   1bbd8:	2007c9b0 	.word	0x2007c9b0
   1bbdc:	2007c9c4 	.word	0x2007c9c4

0001bbe0 <vTaskStartScheduler>:
vTaskStartScheduler():
   1bbe0:	b530      	push	{r4, r5, lr}
   1bbe2:	4b0f      	ldr	r3, [pc, #60]	; (1bc20 <vTaskStartScheduler+0x40>)
   1bbe4:	b085      	sub	sp, #20
   1bbe6:	2400      	movs	r4, #0
   1bbe8:	9301      	str	r3, [sp, #4]
   1bbea:	9400      	str	r4, [sp, #0]
   1bbec:	9402      	str	r4, [sp, #8]
   1bbee:	9403      	str	r4, [sp, #12]
   1bbf0:	480c      	ldr	r0, [pc, #48]	; (1bc24 <vTaskStartScheduler+0x44>)
   1bbf2:	490d      	ldr	r1, [pc, #52]	; (1bc28 <vTaskStartScheduler+0x48>)
   1bbf4:	2280      	movs	r2, #128	; 0x80
   1bbf6:	4623      	mov	r3, r4
   1bbf8:	f7ff ff20 	bl	1ba3c <xTaskGenericCreate>
   1bbfc:	2801      	cmp	r0, #1
   1bbfe:	4605      	mov	r5, r0
   1bc00:	d10c      	bne.n	1bc1c <vTaskStartScheduler+0x3c>
   1bc02:	f000 fc47 	bl	1c494 <ulPortSetInterruptMask>
   1bc06:	4b09      	ldr	r3, [pc, #36]	; (1bc2c <vTaskStartScheduler+0x4c>)
   1bc08:	601d      	str	r5, [r3, #0]
   1bc0a:	4b09      	ldr	r3, [pc, #36]	; (1bc30 <vTaskStartScheduler+0x50>)
   1bc0c:	601c      	str	r4, [r3, #0]
   1bc0e:	f000 fcb7 	bl	1c580 <vConfigureTimerForRunTimeStats>
   1bc12:	b005      	add	sp, #20
   1bc14:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
   1bc18:	f000 bc9a 	b.w	1c550 <xPortStartScheduler>
   1bc1c:	b005      	add	sp, #20
   1bc1e:	bd30      	pop	{r4, r5, pc}
   1bc20:	2007ca5c 	.word	0x2007ca5c
   1bc24:	0001b921 	.word	0x0001b921
   1bc28:	00027470 	.word	0x00027470
   1bc2c:	2007c9ac 	.word	0x2007c9ac
   1bc30:	2007ca4c 	.word	0x2007ca4c

0001bc34 <vTaskEndScheduler>:
vTaskEndScheduler():
   1bc34:	b508      	push	{r3, lr}
   1bc36:	f000 fc2d 	bl	1c494 <ulPortSetInterruptMask>
   1bc3a:	4b03      	ldr	r3, [pc, #12]	; (1bc48 <vTaskEndScheduler+0x14>)
   1bc3c:	2200      	movs	r2, #0
   1bc3e:	601a      	str	r2, [r3, #0]
   1bc40:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
   1bc44:	f000 bc18 	b.w	1c478 <vPortEndScheduler>
   1bc48:	2007c9ac 	.word	0x2007c9ac

0001bc4c <vTaskSuspendAll>:
vTaskSuspendAll():
   1bc4c:	4b02      	ldr	r3, [pc, #8]	; (1bc58 <vTaskSuspendAll+0xc>)
   1bc4e:	681a      	ldr	r2, [r3, #0]
   1bc50:	3201      	adds	r2, #1
   1bc52:	601a      	str	r2, [r3, #0]
   1bc54:	4770      	bx	lr
   1bc56:	bf00      	nop
   1bc58:	2007ca2c 	.word	0x2007ca2c

0001bc5c <xTaskGetTickCount>:
xTaskGetTickCount():
   1bc5c:	b510      	push	{r4, lr}
   1bc5e:	f000 fc21 	bl	1c4a4 <vPortEnterCritical>
   1bc62:	4b03      	ldr	r3, [pc, #12]	; (1bc70 <xTaskGetTickCount+0x14>)
   1bc64:	681c      	ldr	r4, [r3, #0]
   1bc66:	f000 fc2f 	bl	1c4c8 <vPortExitCritical>
   1bc6a:	4620      	mov	r0, r4
   1bc6c:	bd10      	pop	{r4, pc}
   1bc6e:	bf00      	nop
   1bc70:	2007ca4c 	.word	0x2007ca4c

0001bc74 <xTaskGetTickCountFromISR>:
xTaskGetTickCountFromISR():
   1bc74:	b510      	push	{r4, lr}
   1bc76:	f000 fc0d 	bl	1c494 <ulPortSetInterruptMask>
   1bc7a:	4b03      	ldr	r3, [pc, #12]	; (1bc88 <xTaskGetTickCountFromISR+0x14>)
   1bc7c:	681c      	ldr	r4, [r3, #0]
   1bc7e:	f000 fc1f 	bl	1c4c0 <vPortClearInterruptMask>
   1bc82:	4620      	mov	r0, r4
   1bc84:	bd10      	pop	{r4, pc}
   1bc86:	bf00      	nop
   1bc88:	2007ca4c 	.word	0x2007ca4c

0001bc8c <uxTaskGetNumberOfTasks>:
uxTaskGetNumberOfTasks():
   1bc8c:	4b01      	ldr	r3, [pc, #4]	; (1bc94 <uxTaskGetNumberOfTasks+0x8>)
   1bc8e:	6818      	ldr	r0, [r3, #0]
   1bc90:	4770      	bx	lr
   1bc92:	bf00      	nop
   1bc94:	2007ca58 	.word	0x2007ca58

0001bc98 <xTaskIncrementTick>:
xTaskIncrementTick():
   1bc98:	4b33      	ldr	r3, [pc, #204]	; (1bd68 <xTaskIncrementTick+0xd0>)
   1bc9a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   1bc9e:	681b      	ldr	r3, [r3, #0]
   1bca0:	2b00      	cmp	r3, #0
   1bca2:	d133      	bne.n	1bd0c <xTaskIncrementTick+0x74>
   1bca4:	4b31      	ldr	r3, [pc, #196]	; (1bd6c <xTaskIncrementTick+0xd4>)
   1bca6:	681a      	ldr	r2, [r3, #0]
   1bca8:	3201      	adds	r2, #1
   1bcaa:	601a      	str	r2, [r3, #0]
   1bcac:	681e      	ldr	r6, [r3, #0]
   1bcae:	b95e      	cbnz	r6, 1bcc8 <xTaskIncrementTick+0x30>
   1bcb0:	4a2f      	ldr	r2, [pc, #188]	; (1bd70 <xTaskIncrementTick+0xd8>)
   1bcb2:	4b30      	ldr	r3, [pc, #192]	; (1bd74 <xTaskIncrementTick+0xdc>)
   1bcb4:	6811      	ldr	r1, [r2, #0]
   1bcb6:	6818      	ldr	r0, [r3, #0]
   1bcb8:	6010      	str	r0, [r2, #0]
   1bcba:	6019      	str	r1, [r3, #0]
   1bcbc:	4b2e      	ldr	r3, [pc, #184]	; (1bd78 <xTaskIncrementTick+0xe0>)
   1bcbe:	681a      	ldr	r2, [r3, #0]
   1bcc0:	3201      	adds	r2, #1
   1bcc2:	601a      	str	r2, [r3, #0]
   1bcc4:	f7ff fe80 	bl	1b9c8 <prvResetNextTaskUnblockTime>
   1bcc8:	4f2c      	ldr	r7, [pc, #176]	; (1bd7c <xTaskIncrementTick+0xe4>)
   1bcca:	2400      	movs	r4, #0
   1bccc:	683b      	ldr	r3, [r7, #0]
   1bcce:	f8df 80bc 	ldr.w	r8, [pc, #188]	; 1bd8c <xTaskIncrementTick+0xf4>
   1bcd2:	429e      	cmp	r6, r3
   1bcd4:	f8df 90b8 	ldr.w	r9, [pc, #184]	; 1bd90 <xTaskIncrementTick+0xf8>
   1bcd8:	d30d      	bcc.n	1bcf6 <xTaskIncrementTick+0x5e>
   1bcda:	4b25      	ldr	r3, [pc, #148]	; (1bd70 <xTaskIncrementTick+0xd8>)
   1bcdc:	681a      	ldr	r2, [r3, #0]
   1bcde:	6812      	ldr	r2, [r2, #0]
   1bce0:	b912      	cbnz	r2, 1bce8 <xTaskIncrementTick+0x50>
   1bce2:	f04f 33ff 	mov.w	r3, #4294967295
   1bce6:	e005      	b.n	1bcf4 <xTaskIncrementTick+0x5c>
   1bce8:	681b      	ldr	r3, [r3, #0]
   1bcea:	68db      	ldr	r3, [r3, #12]
   1bcec:	68dd      	ldr	r5, [r3, #12]
   1bcee:	686b      	ldr	r3, [r5, #4]
   1bcf0:	429e      	cmp	r6, r3
   1bcf2:	d211      	bcs.n	1bd18 <xTaskIncrementTick+0x80>
   1bcf4:	603b      	str	r3, [r7, #0]
   1bcf6:	f8d9 3000 	ldr.w	r3, [r9]
   1bcfa:	2214      	movs	r2, #20
   1bcfc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   1bcfe:	4353      	muls	r3, r2
   1bd00:	f858 3003 	ldr.w	r3, [r8, r3]
   1bd04:	2b02      	cmp	r3, #2
   1bd06:	bf28      	it	cs
   1bd08:	2401      	movcs	r4, #1
   1bd0a:	e025      	b.n	1bd58 <xTaskIncrementTick+0xc0>
   1bd0c:	4b1c      	ldr	r3, [pc, #112]	; (1bd80 <xTaskIncrementTick+0xe8>)
   1bd0e:	2400      	movs	r4, #0
   1bd10:	681a      	ldr	r2, [r3, #0]
   1bd12:	3201      	adds	r2, #1
   1bd14:	601a      	str	r2, [r3, #0]
   1bd16:	e01f      	b.n	1bd58 <xTaskIncrementTick+0xc0>
   1bd18:	f105 0a04 	add.w	sl, r5, #4
   1bd1c:	4650      	mov	r0, sl
   1bd1e:	f7ff fb4d 	bl	1b3bc <uxListRemove>
   1bd22:	6aab      	ldr	r3, [r5, #40]	; 0x28
   1bd24:	b11b      	cbz	r3, 1bd2e <xTaskIncrementTick+0x96>
   1bd26:	f105 0018 	add.w	r0, r5, #24
   1bd2a:	f7ff fb47 	bl	1b3bc <uxListRemove>
   1bd2e:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
   1bd30:	2101      	movs	r1, #1
   1bd32:	4099      	lsls	r1, r3
   1bd34:	4a13      	ldr	r2, [pc, #76]	; (1bd84 <xTaskIncrementTick+0xec>)
   1bd36:	6810      	ldr	r0, [r2, #0]
   1bd38:	4301      	orrs	r1, r0
   1bd3a:	2014      	movs	r0, #20
   1bd3c:	6011      	str	r1, [r2, #0]
   1bd3e:	fb00 8003 	mla	r0, r0, r3, r8
   1bd42:	4651      	mov	r1, sl
   1bd44:	f7ff fb16 	bl	1b374 <vListInsertEnd>
   1bd48:	f8d9 3000 	ldr.w	r3, [r9]
   1bd4c:	6aea      	ldr	r2, [r5, #44]	; 0x2c
   1bd4e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   1bd50:	429a      	cmp	r2, r3
   1bd52:	bf28      	it	cs
   1bd54:	2401      	movcs	r4, #1
   1bd56:	e7c0      	b.n	1bcda <xTaskIncrementTick+0x42>
   1bd58:	4b0b      	ldr	r3, [pc, #44]	; (1bd88 <xTaskIncrementTick+0xf0>)
   1bd5a:	681b      	ldr	r3, [r3, #0]
   1bd5c:	2b00      	cmp	r3, #0
   1bd5e:	bf18      	it	ne
   1bd60:	2401      	movne	r4, #1
   1bd62:	4620      	mov	r0, r4
   1bd64:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1bd68:	2007ca2c 	.word	0x2007ca2c
   1bd6c:	2007ca4c 	.word	0x2007ca4c
   1bd70:	2007c9a8 	.word	0x2007c9a8
   1bd74:	2007ca50 	.word	0x2007ca50
   1bd78:	2007c9a4 	.word	0x2007c9a4
   1bd7c:	2007c070 	.word	0x2007c070
   1bd80:	2007c9d8 	.word	0x2007c9d8
   1bd84:	2007ca74 	.word	0x2007ca74
   1bd88:	2007ca78 	.word	0x2007ca78
   1bd8c:	2007c9dc 	.word	0x2007c9dc
   1bd90:	2007ca34 	.word	0x2007ca34

0001bd94 <xTaskResumeAll>:
xTaskResumeAll():
   1bd94:	b570      	push	{r4, r5, r6, lr}
   1bd96:	f000 fb85 	bl	1c4a4 <vPortEnterCritical>
   1bd9a:	4b26      	ldr	r3, [pc, #152]	; (1be34 <xTaskResumeAll+0xa0>)
   1bd9c:	681a      	ldr	r2, [r3, #0]
   1bd9e:	3a01      	subs	r2, #1
   1bda0:	601a      	str	r2, [r3, #0]
   1bda2:	681b      	ldr	r3, [r3, #0]
   1bda4:	b10b      	cbz	r3, 1bdaa <xTaskResumeAll+0x16>
   1bda6:	2400      	movs	r4, #0
   1bda8:	e03f      	b.n	1be2a <xTaskResumeAll+0x96>
   1bdaa:	4b23      	ldr	r3, [pc, #140]	; (1be38 <xTaskResumeAll+0xa4>)
   1bdac:	681b      	ldr	r3, [r3, #0]
   1bdae:	2b00      	cmp	r3, #0
   1bdb0:	d0f9      	beq.n	1bda6 <xTaskResumeAll+0x12>
   1bdb2:	4b22      	ldr	r3, [pc, #136]	; (1be3c <xTaskResumeAll+0xa8>)
   1bdb4:	681a      	ldr	r2, [r3, #0]
   1bdb6:	b30a      	cbz	r2, 1bdfc <xTaskResumeAll+0x68>
   1bdb8:	68db      	ldr	r3, [r3, #12]
   1bdba:	2501      	movs	r5, #1
   1bdbc:	68dc      	ldr	r4, [r3, #12]
   1bdbe:	1d26      	adds	r6, r4, #4
   1bdc0:	f104 0018 	add.w	r0, r4, #24
   1bdc4:	f7ff fafa 	bl	1b3bc <uxListRemove>
   1bdc8:	4630      	mov	r0, r6
   1bdca:	f7ff faf7 	bl	1b3bc <uxListRemove>
   1bdce:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
   1bdd0:	4a1b      	ldr	r2, [pc, #108]	; (1be40 <xTaskResumeAll+0xac>)
   1bdd2:	fa05 f003 	lsl.w	r0, r5, r3
   1bdd6:	6811      	ldr	r1, [r2, #0]
   1bdd8:	4301      	orrs	r1, r0
   1bdda:	6011      	str	r1, [r2, #0]
   1bddc:	4a19      	ldr	r2, [pc, #100]	; (1be44 <xTaskResumeAll+0xb0>)
   1bdde:	2014      	movs	r0, #20
   1bde0:	fb00 2003 	mla	r0, r0, r3, r2
   1bde4:	4631      	mov	r1, r6
   1bde6:	f7ff fac5 	bl	1b374 <vListInsertEnd>
   1bdea:	4b17      	ldr	r3, [pc, #92]	; (1be48 <xTaskResumeAll+0xb4>)
   1bdec:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
   1bdee:	681b      	ldr	r3, [r3, #0]
   1bdf0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   1bdf2:	429a      	cmp	r2, r3
   1bdf4:	bf24      	itt	cs
   1bdf6:	4b15      	ldrcs	r3, [pc, #84]	; (1be4c <xTaskResumeAll+0xb8>)
   1bdf8:	601d      	strcs	r5, [r3, #0]
   1bdfa:	e7da      	b.n	1bdb2 <xTaskResumeAll+0x1e>
   1bdfc:	4c14      	ldr	r4, [pc, #80]	; (1be50 <xTaskResumeAll+0xbc>)
   1bdfe:	6823      	ldr	r3, [r4, #0]
   1be00:	b97b      	cbnz	r3, 1be22 <xTaskResumeAll+0x8e>
   1be02:	4b12      	ldr	r3, [pc, #72]	; (1be4c <xTaskResumeAll+0xb8>)
   1be04:	681c      	ldr	r4, [r3, #0]
   1be06:	2c01      	cmp	r4, #1
   1be08:	d1cd      	bne.n	1bda6 <xTaskResumeAll+0x12>
   1be0a:	f000 fb37 	bl	1c47c <vPortYield>
   1be0e:	e00c      	b.n	1be2a <xTaskResumeAll+0x96>
   1be10:	f7ff ff42 	bl	1bc98 <xTaskIncrementTick>
   1be14:	b110      	cbz	r0, 1be1c <xTaskResumeAll+0x88>
   1be16:	4b0d      	ldr	r3, [pc, #52]	; (1be4c <xTaskResumeAll+0xb8>)
   1be18:	2201      	movs	r2, #1
   1be1a:	601a      	str	r2, [r3, #0]
   1be1c:	6823      	ldr	r3, [r4, #0]
   1be1e:	3b01      	subs	r3, #1
   1be20:	6023      	str	r3, [r4, #0]
   1be22:	6823      	ldr	r3, [r4, #0]
   1be24:	2b00      	cmp	r3, #0
   1be26:	d1f3      	bne.n	1be10 <xTaskResumeAll+0x7c>
   1be28:	e7eb      	b.n	1be02 <xTaskResumeAll+0x6e>
   1be2a:	f000 fb4d 	bl	1c4c8 <vPortExitCritical>
   1be2e:	4620      	mov	r0, r4
   1be30:	bd70      	pop	{r4, r5, r6, pc}
   1be32:	bf00      	nop
   1be34:	2007ca2c 	.word	0x2007ca2c
   1be38:	2007ca58 	.word	0x2007ca58
   1be3c:	2007ca38 	.word	0x2007ca38
   1be40:	2007ca74 	.word	0x2007ca74
   1be44:	2007c9dc 	.word	0x2007c9dc
   1be48:	2007ca34 	.word	0x2007ca34
   1be4c:	2007ca78 	.word	0x2007ca78
   1be50:	2007c9d8 	.word	0x2007c9d8

0001be54 <vTaskDelayUntil>:
vTaskDelayUntil():
   1be54:	b538      	push	{r3, r4, r5, lr}
   1be56:	4605      	mov	r5, r0
   1be58:	460c      	mov	r4, r1
   1be5a:	f7ff fef7 	bl	1bc4c <vTaskSuspendAll>
   1be5e:	4b18      	ldr	r3, [pc, #96]	; (1bec0 <vTaskDelayUntil+0x6c>)
   1be60:	682a      	ldr	r2, [r5, #0]
   1be62:	681b      	ldr	r3, [r3, #0]
   1be64:	4414      	add	r4, r2
   1be66:	4293      	cmp	r3, r2
   1be68:	d202      	bcs.n	1be70 <vTaskDelayUntil+0x1c>
   1be6a:	4294      	cmp	r4, r2
   1be6c:	d207      	bcs.n	1be7e <vTaskDelayUntil+0x2a>
   1be6e:	e001      	b.n	1be74 <vTaskDelayUntil+0x20>
   1be70:	4294      	cmp	r4, r2
   1be72:	d306      	bcc.n	1be82 <vTaskDelayUntil+0x2e>
   1be74:	429c      	cmp	r4, r3
   1be76:	bf94      	ite	ls
   1be78:	2300      	movls	r3, #0
   1be7a:	2301      	movhi	r3, #1
   1be7c:	e002      	b.n	1be84 <vTaskDelayUntil+0x30>
   1be7e:	2300      	movs	r3, #0
   1be80:	e000      	b.n	1be84 <vTaskDelayUntil+0x30>
   1be82:	2301      	movs	r3, #1
   1be84:	602c      	str	r4, [r5, #0]
   1be86:	b193      	cbz	r3, 1beae <vTaskDelayUntil+0x5a>
   1be88:	4d0e      	ldr	r5, [pc, #56]	; (1bec4 <vTaskDelayUntil+0x70>)
   1be8a:	6828      	ldr	r0, [r5, #0]
   1be8c:	3004      	adds	r0, #4
   1be8e:	f7ff fa95 	bl	1b3bc <uxListRemove>
   1be92:	b948      	cbnz	r0, 1bea8 <vTaskDelayUntil+0x54>
   1be94:	4b0c      	ldr	r3, [pc, #48]	; (1bec8 <vTaskDelayUntil+0x74>)
   1be96:	2001      	movs	r0, #1
   1be98:	6819      	ldr	r1, [r3, #0]
   1be9a:	682a      	ldr	r2, [r5, #0]
   1be9c:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
   1be9e:	fa00 f202 	lsl.w	r2, r0, r2
   1bea2:	ea21 0202 	bic.w	r2, r1, r2
   1bea6:	601a      	str	r2, [r3, #0]
   1bea8:	4620      	mov	r0, r4
   1beaa:	f7ff fd9f 	bl	1b9ec <prvAddCurrentTaskToDelayedList>
   1beae:	f7ff ff71 	bl	1bd94 <xTaskResumeAll>
   1beb2:	b918      	cbnz	r0, 1bebc <vTaskDelayUntil+0x68>
   1beb4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   1beb8:	f000 bae0 	b.w	1c47c <vPortYield>
   1bebc:	bd38      	pop	{r3, r4, r5, pc}
   1bebe:	bf00      	nop
   1bec0:	2007ca4c 	.word	0x2007ca4c
   1bec4:	2007ca34 	.word	0x2007ca34
   1bec8:	2007ca74 	.word	0x2007ca74

0001becc <vTaskDelay>:
vTaskDelay():
   1becc:	b538      	push	{r3, r4, r5, lr}
   1bece:	4604      	mov	r4, r0
   1bed0:	b918      	cbnz	r0, 1beda <vTaskDelay+0xe>
   1bed2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   1bed6:	f000 bad1 	b.w	1c47c <vPortYield>
   1beda:	f7ff feb7 	bl	1bc4c <vTaskSuspendAll>
   1bede:	4b0d      	ldr	r3, [pc, #52]	; (1bf14 <vTaskDelay+0x48>)
   1bee0:	681d      	ldr	r5, [r3, #0]
   1bee2:	4425      	add	r5, r4
   1bee4:	4c0c      	ldr	r4, [pc, #48]	; (1bf18 <vTaskDelay+0x4c>)
   1bee6:	6820      	ldr	r0, [r4, #0]
   1bee8:	3004      	adds	r0, #4
   1beea:	f7ff fa67 	bl	1b3bc <uxListRemove>
   1beee:	b948      	cbnz	r0, 1bf04 <vTaskDelay+0x38>
   1bef0:	4b0a      	ldr	r3, [pc, #40]	; (1bf1c <vTaskDelay+0x50>)
   1bef2:	2001      	movs	r0, #1
   1bef4:	6819      	ldr	r1, [r3, #0]
   1bef6:	6822      	ldr	r2, [r4, #0]
   1bef8:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
   1befa:	fa00 f202 	lsl.w	r2, r0, r2
   1befe:	ea21 0202 	bic.w	r2, r1, r2
   1bf02:	601a      	str	r2, [r3, #0]
   1bf04:	4628      	mov	r0, r5
   1bf06:	f7ff fd71 	bl	1b9ec <prvAddCurrentTaskToDelayedList>
   1bf0a:	f7ff ff43 	bl	1bd94 <xTaskResumeAll>
   1bf0e:	2800      	cmp	r0, #0
   1bf10:	d0df      	beq.n	1bed2 <vTaskDelay+0x6>
   1bf12:	bd38      	pop	{r3, r4, r5, pc}
   1bf14:	2007ca4c 	.word	0x2007ca4c
   1bf18:	2007ca34 	.word	0x2007ca34
   1bf1c:	2007ca74 	.word	0x2007ca74

0001bf20 <uxTaskGetSystemState>:
uxTaskGetSystemState():
   1bf20:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1bf24:	460c      	mov	r4, r1
   1bf26:	4606      	mov	r6, r0
   1bf28:	4617      	mov	r7, r2
   1bf2a:	f7ff fe8f 	bl	1bc4c <vTaskSuspendAll>
   1bf2e:	4b1a      	ldr	r3, [pc, #104]	; (1bf98 <uxTaskGetSystemState+0x78>)
   1bf30:	681b      	ldr	r3, [r3, #0]
   1bf32:	429c      	cmp	r4, r3
   1bf34:	d329      	bcc.n	1bf8a <uxTaskGetSystemState+0x6a>
   1bf36:	4d19      	ldr	r5, [pc, #100]	; (1bf9c <uxTaskGetSystemState+0x7c>)
   1bf38:	2400      	movs	r4, #0
   1bf3a:	f1a5 0850 	sub.w	r8, r5, #80	; 0x50
   1bf3e:	eb06 1044 	add.w	r0, r6, r4, lsl #5
   1bf42:	4629      	mov	r1, r5
   1bf44:	2201      	movs	r2, #1
   1bf46:	f7ff fcf7 	bl	1b938 <prvListTaskWithinSingleList>
   1bf4a:	3d14      	subs	r5, #20
   1bf4c:	4545      	cmp	r5, r8
   1bf4e:	4404      	add	r4, r0
   1bf50:	d1f5      	bne.n	1bf3e <uxTaskGetSystemState+0x1e>
   1bf52:	4b13      	ldr	r3, [pc, #76]	; (1bfa0 <uxTaskGetSystemState+0x80>)
   1bf54:	eb06 1044 	add.w	r0, r6, r4, lsl #5
   1bf58:	6819      	ldr	r1, [r3, #0]
   1bf5a:	2202      	movs	r2, #2
   1bf5c:	f7ff fcec 	bl	1b938 <prvListTaskWithinSingleList>
   1bf60:	4b10      	ldr	r3, [pc, #64]	; (1bfa4 <uxTaskGetSystemState+0x84>)
   1bf62:	4404      	add	r4, r0
   1bf64:	6819      	ldr	r1, [r3, #0]
   1bf66:	eb06 1044 	add.w	r0, r6, r4, lsl #5
   1bf6a:	2202      	movs	r2, #2
   1bf6c:	f7ff fce4 	bl	1b938 <prvListTaskWithinSingleList>
   1bf70:	4404      	add	r4, r0
   1bf72:	eb06 1044 	add.w	r0, r6, r4, lsl #5
   1bf76:	490c      	ldr	r1, [pc, #48]	; (1bfa8 <uxTaskGetSystemState+0x88>)
   1bf78:	2203      	movs	r2, #3
   1bf7a:	f7ff fcdd 	bl	1b938 <prvListTaskWithinSingleList>
   1bf7e:	4404      	add	r4, r0
   1bf80:	b127      	cbz	r7, 1bf8c <uxTaskGetSystemState+0x6c>
   1bf82:	f000 fb07 	bl	1c594 <uxGetTimerForRunTimeStats>
   1bf86:	6038      	str	r0, [r7, #0]
   1bf88:	e000      	b.n	1bf8c <uxTaskGetSystemState+0x6c>
   1bf8a:	2400      	movs	r4, #0
   1bf8c:	f7ff ff02 	bl	1bd94 <xTaskResumeAll>
   1bf90:	4620      	mov	r0, r4
   1bf92:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1bf96:	bf00      	nop
   1bf98:	2007ca58 	.word	0x2007ca58
   1bf9c:	2007ca18 	.word	0x2007ca18
   1bfa0:	2007c9a8 	.word	0x2007c9a8
   1bfa4:	2007ca50 	.word	0x2007ca50
   1bfa8:	2007ca60 	.word	0x2007ca60

0001bfac <vTaskSwitchContext>:
vTaskSwitchContext():
   1bfac:	b538      	push	{r3, r4, r5, lr}
   1bfae:	4b26      	ldr	r3, [pc, #152]	; (1c048 <vTaskSwitchContext+0x9c>)
   1bfb0:	681a      	ldr	r2, [r3, #0]
   1bfb2:	4b26      	ldr	r3, [pc, #152]	; (1c04c <vTaskSwitchContext+0xa0>)
   1bfb4:	b112      	cbz	r2, 1bfbc <vTaskSwitchContext+0x10>
   1bfb6:	2201      	movs	r2, #1
   1bfb8:	601a      	str	r2, [r3, #0]
   1bfba:	bd38      	pop	{r3, r4, r5, pc}
   1bfbc:	601a      	str	r2, [r3, #0]
   1bfbe:	f000 fae9 	bl	1c594 <uxGetTimerForRunTimeStats>
   1bfc2:	4b23      	ldr	r3, [pc, #140]	; (1c050 <vTaskSwitchContext+0xa4>)
   1bfc4:	4c23      	ldr	r4, [pc, #140]	; (1c054 <vTaskSwitchContext+0xa8>)
   1bfc6:	6018      	str	r0, [r3, #0]
   1bfc8:	4b23      	ldr	r3, [pc, #140]	; (1c058 <vTaskSwitchContext+0xac>)
   1bfca:	681a      	ldr	r2, [r3, #0]
   1bfcc:	461d      	mov	r5, r3
   1bfce:	4290      	cmp	r0, r2
   1bfd0:	d904      	bls.n	1bfdc <vTaskSwitchContext+0x30>
   1bfd2:	6823      	ldr	r3, [r4, #0]
   1bfd4:	6c99      	ldr	r1, [r3, #72]	; 0x48
   1bfd6:	1a8a      	subs	r2, r1, r2
   1bfd8:	4402      	add	r2, r0
   1bfda:	649a      	str	r2, [r3, #72]	; 0x48
   1bfdc:	6821      	ldr	r1, [r4, #0]
   1bfde:	6822      	ldr	r2, [r4, #0]
   1bfe0:	6809      	ldr	r1, [r1, #0]
   1bfe2:	6b12      	ldr	r2, [r2, #48]	; 0x30
   1bfe4:	6028      	str	r0, [r5, #0]
   1bfe6:	4291      	cmp	r1, r2
   1bfe8:	4b1a      	ldr	r3, [pc, #104]	; (1c054 <vTaskSwitchContext+0xa8>)
   1bfea:	d804      	bhi.n	1bff6 <vTaskSwitchContext+0x4a>
   1bfec:	6818      	ldr	r0, [r3, #0]
   1bfee:	6819      	ldr	r1, [r3, #0]
   1bff0:	3134      	adds	r1, #52	; 0x34
   1bff2:	f000 fae5 	bl	1c5c0 <vApplicationStackOverflowHook>
   1bff6:	6823      	ldr	r3, [r4, #0]
   1bff8:	4918      	ldr	r1, [pc, #96]	; (1c05c <vTaskSwitchContext+0xb0>)
   1bffa:	6b18      	ldr	r0, [r3, #48]	; 0x30
   1bffc:	2214      	movs	r2, #20
   1bffe:	4d15      	ldr	r5, [pc, #84]	; (1c054 <vTaskSwitchContext+0xa8>)
   1c000:	f002 fdfa 	bl	1ebf8 <memcmp>
   1c004:	b120      	cbz	r0, 1c010 <vTaskSwitchContext+0x64>
   1c006:	6828      	ldr	r0, [r5, #0]
   1c008:	6829      	ldr	r1, [r5, #0]
   1c00a:	3134      	adds	r1, #52	; 0x34
   1c00c:	f000 fad8 	bl	1c5c0 <vApplicationStackOverflowHook>
   1c010:	4b13      	ldr	r3, [pc, #76]	; (1c060 <vTaskSwitchContext+0xb4>)
   1c012:	681b      	ldr	r3, [r3, #0]
   1c014:	fab3 f383 	clz	r3, r3
   1c018:	4a12      	ldr	r2, [pc, #72]	; (1c064 <vTaskSwitchContext+0xb8>)
   1c01a:	b2db      	uxtb	r3, r3
   1c01c:	2114      	movs	r1, #20
   1c01e:	f1c3 031f 	rsb	r3, r3, #31
   1c022:	fb01 2303 	mla	r3, r1, r3, r2
   1c026:	685a      	ldr	r2, [r3, #4]
   1c028:	f103 0108 	add.w	r1, r3, #8
   1c02c:	6852      	ldr	r2, [r2, #4]
   1c02e:	428a      	cmp	r2, r1
   1c030:	605a      	str	r2, [r3, #4]
   1c032:	bf04      	itt	eq
   1c034:	6852      	ldreq	r2, [r2, #4]
   1c036:	605a      	streq	r2, [r3, #4]
   1c038:	685b      	ldr	r3, [r3, #4]
   1c03a:	68db      	ldr	r3, [r3, #12]
   1c03c:	6023      	str	r3, [r4, #0]
   1c03e:	6823      	ldr	r3, [r4, #0]
   1c040:	6b5a      	ldr	r2, [r3, #52]	; 0x34
   1c042:	4b09      	ldr	r3, [pc, #36]	; (1c068 <vTaskSwitchContext+0xbc>)
   1c044:	645a      	str	r2, [r3, #68]	; 0x44
   1c046:	bd38      	pop	{r3, r4, r5, pc}
   1c048:	2007ca2c 	.word	0x2007ca2c
   1c04c:	2007ca78 	.word	0x2007ca78
   1c050:	2007ca30 	.word	0x2007ca30
   1c054:	2007ca34 	.word	0x2007ca34
   1c058:	2007c9a0 	.word	0x2007c9a0
   1c05c:	0002745c 	.word	0x0002745c
   1c060:	2007ca74 	.word	0x2007ca74
   1c064:	2007c9dc 	.word	0x2007c9dc
   1c068:	40024000 	.word	0x40024000

0001c06c <vTaskSuspend>:
vTaskSuspend():
   1c06c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1c06e:	4604      	mov	r4, r0
   1c070:	4d20      	ldr	r5, [pc, #128]	; (1c0f4 <vTaskSuspend+0x88>)
   1c072:	f000 fa17 	bl	1c4a4 <vPortEnterCritical>
   1c076:	b904      	cbnz	r4, 1c07a <vTaskSuspend+0xe>
   1c078:	682c      	ldr	r4, [r5, #0]
   1c07a:	1d26      	adds	r6, r4, #4
   1c07c:	4630      	mov	r0, r6
   1c07e:	f7ff f99d 	bl	1b3bc <uxListRemove>
   1c082:	b968      	cbnz	r0, 1c0a0 <vTaskSuspend+0x34>
   1c084:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
   1c086:	2314      	movs	r3, #20
   1c088:	4353      	muls	r3, r2
   1c08a:	491b      	ldr	r1, [pc, #108]	; (1c0f8 <vTaskSuspend+0x8c>)
   1c08c:	58cb      	ldr	r3, [r1, r3]
   1c08e:	b93b      	cbnz	r3, 1c0a0 <vTaskSuspend+0x34>
   1c090:	2001      	movs	r0, #1
   1c092:	fa00 f202 	lsl.w	r2, r0, r2
   1c096:	4b19      	ldr	r3, [pc, #100]	; (1c0fc <vTaskSuspend+0x90>)
   1c098:	6819      	ldr	r1, [r3, #0]
   1c09a:	ea21 0202 	bic.w	r2, r1, r2
   1c09e:	601a      	str	r2, [r3, #0]
   1c0a0:	6aa3      	ldr	r3, [r4, #40]	; 0x28
   1c0a2:	b11b      	cbz	r3, 1c0ac <vTaskSuspend+0x40>
   1c0a4:	f104 0018 	add.w	r0, r4, #24
   1c0a8:	f7ff f988 	bl	1b3bc <uxListRemove>
   1c0ac:	4f14      	ldr	r7, [pc, #80]	; (1c100 <vTaskSuspend+0x94>)
   1c0ae:	4631      	mov	r1, r6
   1c0b0:	4638      	mov	r0, r7
   1c0b2:	f7ff f95f 	bl	1b374 <vListInsertEnd>
   1c0b6:	f000 fa07 	bl	1c4c8 <vPortExitCritical>
   1c0ba:	682b      	ldr	r3, [r5, #0]
   1c0bc:	429c      	cmp	r4, r3
   1c0be:	4b11      	ldr	r3, [pc, #68]	; (1c104 <vTaskSuspend+0x98>)
   1c0c0:	681b      	ldr	r3, [r3, #0]
   1c0c2:	d110      	bne.n	1c0e6 <vTaskSuspend+0x7a>
   1c0c4:	b11b      	cbz	r3, 1c0ce <vTaskSuspend+0x62>
   1c0c6:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
   1c0ca:	f000 b9d7 	b.w	1c47c <vPortYield>
   1c0ce:	4a0e      	ldr	r2, [pc, #56]	; (1c108 <vTaskSuspend+0x9c>)
   1c0d0:	6839      	ldr	r1, [r7, #0]
   1c0d2:	6812      	ldr	r2, [r2, #0]
   1c0d4:	4291      	cmp	r1, r2
   1c0d6:	d102      	bne.n	1c0de <vTaskSuspend+0x72>
   1c0d8:	4a06      	ldr	r2, [pc, #24]	; (1c0f4 <vTaskSuspend+0x88>)
   1c0da:	6013      	str	r3, [r2, #0]
   1c0dc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1c0de:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
   1c0e2:	f7ff bf63 	b.w	1bfac <vTaskSwitchContext>
   1c0e6:	b11b      	cbz	r3, 1c0f0 <vTaskSuspend+0x84>
   1c0e8:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
   1c0ec:	f7ff bc6c 	b.w	1b9c8 <prvResetNextTaskUnblockTime>
   1c0f0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1c0f2:	bf00      	nop
   1c0f4:	2007ca34 	.word	0x2007ca34
   1c0f8:	2007c9dc 	.word	0x2007c9dc
   1c0fc:	2007ca74 	.word	0x2007ca74
   1c100:	2007ca60 	.word	0x2007ca60
   1c104:	2007c9ac 	.word	0x2007c9ac
   1c108:	2007ca58 	.word	0x2007ca58

0001c10c <vTaskPlaceOnEventList>:
vTaskPlaceOnEventList():
   1c10c:	b538      	push	{r3, r4, r5, lr}
   1c10e:	4c12      	ldr	r4, [pc, #72]	; (1c158 <vTaskPlaceOnEventList+0x4c>)
   1c110:	460d      	mov	r5, r1
   1c112:	6821      	ldr	r1, [r4, #0]
   1c114:	3118      	adds	r1, #24
   1c116:	f7ff f939 	bl	1b38c <vListInsert>
   1c11a:	6820      	ldr	r0, [r4, #0]
   1c11c:	3004      	adds	r0, #4
   1c11e:	f7ff f94d 	bl	1b3bc <uxListRemove>
   1c122:	b948      	cbnz	r0, 1c138 <vTaskPlaceOnEventList+0x2c>
   1c124:	4b0d      	ldr	r3, [pc, #52]	; (1c15c <vTaskPlaceOnEventList+0x50>)
   1c126:	2001      	movs	r0, #1
   1c128:	6819      	ldr	r1, [r3, #0]
   1c12a:	6822      	ldr	r2, [r4, #0]
   1c12c:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
   1c12e:	fa00 f202 	lsl.w	r2, r0, r2
   1c132:	ea21 0202 	bic.w	r2, r1, r2
   1c136:	601a      	str	r2, [r3, #0]
   1c138:	1c6b      	adds	r3, r5, #1
   1c13a:	d106      	bne.n	1c14a <vTaskPlaceOnEventList+0x3e>
   1c13c:	6821      	ldr	r1, [r4, #0]
   1c13e:	4808      	ldr	r0, [pc, #32]	; (1c160 <vTaskPlaceOnEventList+0x54>)
   1c140:	3104      	adds	r1, #4
   1c142:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   1c146:	f7ff b915 	b.w	1b374 <vListInsertEnd>
   1c14a:	4b06      	ldr	r3, [pc, #24]	; (1c164 <vTaskPlaceOnEventList+0x58>)
   1c14c:	6818      	ldr	r0, [r3, #0]
   1c14e:	4428      	add	r0, r5
   1c150:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   1c154:	f7ff bc4a 	b.w	1b9ec <prvAddCurrentTaskToDelayedList>
   1c158:	2007ca34 	.word	0x2007ca34
   1c15c:	2007ca74 	.word	0x2007ca74
   1c160:	2007ca60 	.word	0x2007ca60
   1c164:	2007ca4c 	.word	0x2007ca4c

0001c168 <xTaskRemoveFromEventList>:
xTaskRemoveFromEventList():
   1c168:	b538      	push	{r3, r4, r5, lr}
   1c16a:	68c3      	ldr	r3, [r0, #12]
   1c16c:	68dc      	ldr	r4, [r3, #12]
   1c16e:	f104 0518 	add.w	r5, r4, #24
   1c172:	4628      	mov	r0, r5
   1c174:	f7ff f922 	bl	1b3bc <uxListRemove>
   1c178:	4b10      	ldr	r3, [pc, #64]	; (1c1bc <xTaskRemoveFromEventList+0x54>)
   1c17a:	681b      	ldr	r3, [r3, #0]
   1c17c:	b97b      	cbnz	r3, 1c19e <xTaskRemoveFromEventList+0x36>
   1c17e:	1d25      	adds	r5, r4, #4
   1c180:	4628      	mov	r0, r5
   1c182:	f7ff f91b 	bl	1b3bc <uxListRemove>
   1c186:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
   1c188:	2101      	movs	r1, #1
   1c18a:	4099      	lsls	r1, r3
   1c18c:	4a0c      	ldr	r2, [pc, #48]	; (1c1c0 <xTaskRemoveFromEventList+0x58>)
   1c18e:	6810      	ldr	r0, [r2, #0]
   1c190:	4301      	orrs	r1, r0
   1c192:	6011      	str	r1, [r2, #0]
   1c194:	4a0b      	ldr	r2, [pc, #44]	; (1c1c4 <xTaskRemoveFromEventList+0x5c>)
   1c196:	2014      	movs	r0, #20
   1c198:	fb00 2003 	mla	r0, r0, r3, r2
   1c19c:	e000      	b.n	1c1a0 <xTaskRemoveFromEventList+0x38>
   1c19e:	480a      	ldr	r0, [pc, #40]	; (1c1c8 <xTaskRemoveFromEventList+0x60>)
   1c1a0:	4629      	mov	r1, r5
   1c1a2:	f7ff f8e7 	bl	1b374 <vListInsertEnd>
   1c1a6:	4b09      	ldr	r3, [pc, #36]	; (1c1cc <xTaskRemoveFromEventList+0x64>)
   1c1a8:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
   1c1aa:	681b      	ldr	r3, [r3, #0]
   1c1ac:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   1c1ae:	429a      	cmp	r2, r3
   1c1b0:	bf83      	ittte	hi
   1c1b2:	4b07      	ldrhi	r3, [pc, #28]	; (1c1d0 <xTaskRemoveFromEventList+0x68>)
   1c1b4:	2001      	movhi	r0, #1
   1c1b6:	6018      	strhi	r0, [r3, #0]
   1c1b8:	2000      	movls	r0, #0
   1c1ba:	bd38      	pop	{r3, r4, r5, pc}
   1c1bc:	2007ca2c 	.word	0x2007ca2c
   1c1c0:	2007ca74 	.word	0x2007ca74
   1c1c4:	2007c9dc 	.word	0x2007c9dc
   1c1c8:	2007ca38 	.word	0x2007ca38
   1c1cc:	2007ca34 	.word	0x2007ca34
   1c1d0:	2007ca78 	.word	0x2007ca78

0001c1d4 <vTaskSetTimeOutState>:
vTaskSetTimeOutState():
   1c1d4:	4b03      	ldr	r3, [pc, #12]	; (1c1e4 <vTaskSetTimeOutState+0x10>)
   1c1d6:	681b      	ldr	r3, [r3, #0]
   1c1d8:	6003      	str	r3, [r0, #0]
   1c1da:	4b03      	ldr	r3, [pc, #12]	; (1c1e8 <vTaskSetTimeOutState+0x14>)
   1c1dc:	681b      	ldr	r3, [r3, #0]
   1c1de:	6043      	str	r3, [r0, #4]
   1c1e0:	4770      	bx	lr
   1c1e2:	bf00      	nop
   1c1e4:	2007c9a4 	.word	0x2007c9a4
   1c1e8:	2007ca4c 	.word	0x2007ca4c

0001c1ec <xTaskCheckForTimeOut>:
xTaskCheckForTimeOut():
   1c1ec:	b538      	push	{r3, r4, r5, lr}
   1c1ee:	460d      	mov	r5, r1
   1c1f0:	4604      	mov	r4, r0
   1c1f2:	f000 f957 	bl	1c4a4 <vPortEnterCritical>
   1c1f6:	4b0e      	ldr	r3, [pc, #56]	; (1c230 <xTaskCheckForTimeOut+0x44>)
   1c1f8:	681a      	ldr	r2, [r3, #0]
   1c1fa:	682b      	ldr	r3, [r5, #0]
   1c1fc:	1c59      	adds	r1, r3, #1
   1c1fe:	d010      	beq.n	1c222 <xTaskCheckForTimeOut+0x36>
   1c200:	490c      	ldr	r1, [pc, #48]	; (1c234 <xTaskCheckForTimeOut+0x48>)
   1c202:	6808      	ldr	r0, [r1, #0]
   1c204:	6821      	ldr	r1, [r4, #0]
   1c206:	4288      	cmp	r0, r1
   1c208:	6860      	ldr	r0, [r4, #4]
   1c20a:	d001      	beq.n	1c210 <xTaskCheckForTimeOut+0x24>
   1c20c:	4282      	cmp	r2, r0
   1c20e:	d20a      	bcs.n	1c226 <xTaskCheckForTimeOut+0x3a>
   1c210:	1a11      	subs	r1, r2, r0
   1c212:	4299      	cmp	r1, r3
   1c214:	d207      	bcs.n	1c226 <xTaskCheckForTimeOut+0x3a>
   1c216:	1a82      	subs	r2, r0, r2
   1c218:	4413      	add	r3, r2
   1c21a:	602b      	str	r3, [r5, #0]
   1c21c:	4620      	mov	r0, r4
   1c21e:	f7ff ffd9 	bl	1c1d4 <vTaskSetTimeOutState>
   1c222:	2400      	movs	r4, #0
   1c224:	e000      	b.n	1c228 <xTaskCheckForTimeOut+0x3c>
   1c226:	2401      	movs	r4, #1
   1c228:	f000 f94e 	bl	1c4c8 <vPortExitCritical>
   1c22c:	4620      	mov	r0, r4
   1c22e:	bd38      	pop	{r3, r4, r5, pc}
   1c230:	2007ca4c 	.word	0x2007ca4c
   1c234:	2007c9a4 	.word	0x2007c9a4

0001c238 <vTaskMissedYield>:
vTaskMissedYield():
   1c238:	4b01      	ldr	r3, [pc, #4]	; (1c240 <vTaskMissedYield+0x8>)
   1c23a:	2201      	movs	r2, #1
   1c23c:	601a      	str	r2, [r3, #0]
   1c23e:	4770      	bx	lr
   1c240:	2007ca78 	.word	0x2007ca78

0001c244 <uxTaskGetStackHighWaterMark>:
uxTaskGetStackHighWaterMark():
   1c244:	b908      	cbnz	r0, 1c24a <uxTaskGetStackHighWaterMark+0x6>
   1c246:	4b06      	ldr	r3, [pc, #24]	; (1c260 <uxTaskGetStackHighWaterMark+0x1c>)
   1c248:	6818      	ldr	r0, [r3, #0]
   1c24a:	6b02      	ldr	r2, [r0, #48]	; 0x30
   1c24c:	2000      	movs	r0, #0
   1c24e:	5c13      	ldrb	r3, [r2, r0]
   1c250:	2ba5      	cmp	r3, #165	; 0xa5
   1c252:	d101      	bne.n	1c258 <uxTaskGetStackHighWaterMark+0x14>
   1c254:	3001      	adds	r0, #1
   1c256:	e7fa      	b.n	1c24e <uxTaskGetStackHighWaterMark+0xa>
   1c258:	f3c0 008f 	ubfx	r0, r0, #2, #16
   1c25c:	4770      	bx	lr
   1c25e:	bf00      	nop
   1c260:	2007ca34 	.word	0x2007ca34

0001c264 <xTaskGetCurrentTaskHandle>:
xTaskGetCurrentTaskHandle():
   1c264:	4b01      	ldr	r3, [pc, #4]	; (1c26c <xTaskGetCurrentTaskHandle+0x8>)
   1c266:	6818      	ldr	r0, [r3, #0]
   1c268:	4770      	bx	lr
   1c26a:	bf00      	nop
   1c26c:	2007ca34 	.word	0x2007ca34

0001c270 <xTaskGetSchedulerState>:
xTaskGetSchedulerState():
   1c270:	4b05      	ldr	r3, [pc, #20]	; (1c288 <xTaskGetSchedulerState+0x18>)
   1c272:	681b      	ldr	r3, [r3, #0]
   1c274:	b133      	cbz	r3, 1c284 <xTaskGetSchedulerState+0x14>
   1c276:	4b05      	ldr	r3, [pc, #20]	; (1c28c <xTaskGetSchedulerState+0x1c>)
   1c278:	681b      	ldr	r3, [r3, #0]
   1c27a:	2b00      	cmp	r3, #0
   1c27c:	bf14      	ite	ne
   1c27e:	2000      	movne	r0, #0
   1c280:	2002      	moveq	r0, #2
   1c282:	4770      	bx	lr
   1c284:	2001      	movs	r0, #1
   1c286:	4770      	bx	lr
   1c288:	2007c9ac 	.word	0x2007c9ac
   1c28c:	2007ca2c 	.word	0x2007ca2c

0001c290 <vTaskPriorityInherit>:
vTaskPriorityInherit():
   1c290:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1c294:	4604      	mov	r4, r0
   1c296:	2800      	cmp	r0, #0
   1c298:	d03b      	beq.n	1c312 <vTaskPriorityInherit+0x82>
   1c29a:	4d1f      	ldr	r5, [pc, #124]	; (1c318 <vTaskPriorityInherit+0x88>)
   1c29c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
   1c29e:	682a      	ldr	r2, [r5, #0]
   1c2a0:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
   1c2a2:	4293      	cmp	r3, r2
   1c2a4:	d235      	bcs.n	1c312 <vTaskPriorityInherit+0x82>
   1c2a6:	6982      	ldr	r2, [r0, #24]
   1c2a8:	2a00      	cmp	r2, #0
   1c2aa:	db04      	blt.n	1c2b6 <vTaskPriorityInherit+0x26>
   1c2ac:	682a      	ldr	r2, [r5, #0]
   1c2ae:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
   1c2b0:	f1c2 0204 	rsb	r2, r2, #4
   1c2b4:	6182      	str	r2, [r0, #24]
   1c2b6:	4f19      	ldr	r7, [pc, #100]	; (1c31c <vTaskPriorityInherit+0x8c>)
   1c2b8:	f04f 0814 	mov.w	r8, #20
   1c2bc:	fb08 7303 	mla	r3, r8, r3, r7
   1c2c0:	6962      	ldr	r2, [r4, #20]
   1c2c2:	429a      	cmp	r2, r3
   1c2c4:	d122      	bne.n	1c30c <vTaskPriorityInherit+0x7c>
   1c2c6:	1d26      	adds	r6, r4, #4
   1c2c8:	4630      	mov	r0, r6
   1c2ca:	f7ff f877 	bl	1b3bc <uxListRemove>
   1c2ce:	4b14      	ldr	r3, [pc, #80]	; (1c320 <vTaskPriorityInherit+0x90>)
   1c2d0:	b960      	cbnz	r0, 1c2ec <vTaskPriorityInherit+0x5c>
   1c2d2:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
   1c2d4:	fb08 f802 	mul.w	r8, r8, r2
   1c2d8:	f857 1008 	ldr.w	r1, [r7, r8]
   1c2dc:	b931      	cbnz	r1, 1c2ec <vTaskPriorityInherit+0x5c>
   1c2de:	2001      	movs	r0, #1
   1c2e0:	fa00 f202 	lsl.w	r2, r0, r2
   1c2e4:	6819      	ldr	r1, [r3, #0]
   1c2e6:	ea21 0202 	bic.w	r2, r1, r2
   1c2ea:	601a      	str	r2, [r3, #0]
   1c2ec:	682a      	ldr	r2, [r5, #0]
   1c2ee:	2101      	movs	r1, #1
   1c2f0:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
   1c2f2:	6818      	ldr	r0, [r3, #0]
   1c2f4:	4091      	lsls	r1, r2
   1c2f6:	4301      	orrs	r1, r0
   1c2f8:	2014      	movs	r0, #20
   1c2fa:	62e2      	str	r2, [r4, #44]	; 0x2c
   1c2fc:	6019      	str	r1, [r3, #0]
   1c2fe:	fb00 7002 	mla	r0, r0, r2, r7
   1c302:	4631      	mov	r1, r6
   1c304:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   1c308:	f7ff b834 	b.w	1b374 <vListInsertEnd>
   1c30c:	682b      	ldr	r3, [r5, #0]
   1c30e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   1c310:	62e3      	str	r3, [r4, #44]	; 0x2c
   1c312:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1c316:	bf00      	nop
   1c318:	2007ca34 	.word	0x2007ca34
   1c31c:	2007c9dc 	.word	0x2007c9dc
   1c320:	2007ca74 	.word	0x2007ca74

0001c324 <vTaskPriorityDisinherit>:
vTaskPriorityDisinherit():
   1c324:	b570      	push	{r4, r5, r6, lr}
   1c326:	4604      	mov	r4, r0
   1c328:	b358      	cbz	r0, 1c382 <vTaskPriorityDisinherit+0x5e>
   1c32a:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
   1c32c:	6c43      	ldr	r3, [r0, #68]	; 0x44
   1c32e:	429a      	cmp	r2, r3
   1c330:	d027      	beq.n	1c382 <vTaskPriorityDisinherit+0x5e>
   1c332:	1d05      	adds	r5, r0, #4
   1c334:	4628      	mov	r0, r5
   1c336:	f7ff f841 	bl	1b3bc <uxListRemove>
   1c33a:	4912      	ldr	r1, [pc, #72]	; (1c384 <vTaskPriorityDisinherit+0x60>)
   1c33c:	4b12      	ldr	r3, [pc, #72]	; (1c388 <vTaskPriorityDisinherit+0x64>)
   1c33e:	b958      	cbnz	r0, 1c358 <vTaskPriorityDisinherit+0x34>
   1c340:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
   1c342:	2014      	movs	r0, #20
   1c344:	4350      	muls	r0, r2
   1c346:	5808      	ldr	r0, [r1, r0]
   1c348:	b930      	cbnz	r0, 1c358 <vTaskPriorityDisinherit+0x34>
   1c34a:	2601      	movs	r6, #1
   1c34c:	fa06 f202 	lsl.w	r2, r6, r2
   1c350:	6818      	ldr	r0, [r3, #0]
   1c352:	ea20 0202 	bic.w	r2, r0, r2
   1c356:	601a      	str	r2, [r3, #0]
   1c358:	69a0      	ldr	r0, [r4, #24]
   1c35a:	6c62      	ldr	r2, [r4, #68]	; 0x44
   1c35c:	2800      	cmp	r0, #0
   1c35e:	bfa4      	itt	ge
   1c360:	f1c2 0004 	rsbge	r0, r2, #4
   1c364:	61a0      	strge	r0, [r4, #24]
   1c366:	2001      	movs	r0, #1
   1c368:	4090      	lsls	r0, r2
   1c36a:	62e2      	str	r2, [r4, #44]	; 0x2c
   1c36c:	681c      	ldr	r4, [r3, #0]
   1c36e:	4320      	orrs	r0, r4
   1c370:	6018      	str	r0, [r3, #0]
   1c372:	2014      	movs	r0, #20
   1c374:	fb00 1002 	mla	r0, r0, r2, r1
   1c378:	4629      	mov	r1, r5
   1c37a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
   1c37e:	f7fe bff9 	b.w	1b374 <vListInsertEnd>
   1c382:	bd70      	pop	{r4, r5, r6, pc}
   1c384:	2007c9dc 	.word	0x2007c9dc
   1c388:	2007ca74 	.word	0x2007ca74

0001c38c <vTaskResetRunTimeStats>:
vTaskResetRunTimeStats():
   1c38c:	b538      	push	{r3, r4, r5, lr}
   1c38e:	f7ff fc5d 	bl	1bc4c <vTaskSuspendAll>
   1c392:	4c13      	ldr	r4, [pc, #76]	; (1c3e0 <vTaskResetRunTimeStats+0x54>)
   1c394:	f1a4 0550 	sub.w	r5, r4, #80	; 0x50
   1c398:	6823      	ldr	r3, [r4, #0]
   1c39a:	b113      	cbz	r3, 1c3a2 <vTaskResetRunTimeStats+0x16>
   1c39c:	4620      	mov	r0, r4
   1c39e:	f7ff faa8 	bl	1b8f2 <prvResetRunTimeStatsInList>
   1c3a2:	3c14      	subs	r4, #20
   1c3a4:	42ac      	cmp	r4, r5
   1c3a6:	d1f7      	bne.n	1c398 <vTaskResetRunTimeStats+0xc>
   1c3a8:	4b0e      	ldr	r3, [pc, #56]	; (1c3e4 <vTaskResetRunTimeStats+0x58>)
   1c3aa:	681a      	ldr	r2, [r3, #0]
   1c3ac:	6812      	ldr	r2, [r2, #0]
   1c3ae:	b112      	cbz	r2, 1c3b6 <vTaskResetRunTimeStats+0x2a>
   1c3b0:	6818      	ldr	r0, [r3, #0]
   1c3b2:	f7ff fa9e 	bl	1b8f2 <prvResetRunTimeStatsInList>
   1c3b6:	4b0c      	ldr	r3, [pc, #48]	; (1c3e8 <vTaskResetRunTimeStats+0x5c>)
   1c3b8:	681a      	ldr	r2, [r3, #0]
   1c3ba:	6812      	ldr	r2, [r2, #0]
   1c3bc:	b112      	cbz	r2, 1c3c4 <vTaskResetRunTimeStats+0x38>
   1c3be:	6818      	ldr	r0, [r3, #0]
   1c3c0:	f7ff fa97 	bl	1b8f2 <prvResetRunTimeStatsInList>
   1c3c4:	4809      	ldr	r0, [pc, #36]	; (1c3ec <vTaskResetRunTimeStats+0x60>)
   1c3c6:	6803      	ldr	r3, [r0, #0]
   1c3c8:	b10b      	cbz	r3, 1c3ce <vTaskResetRunTimeStats+0x42>
   1c3ca:	f7ff fa92 	bl	1b8f2 <prvResetRunTimeStatsInList>
   1c3ce:	4b08      	ldr	r3, [pc, #32]	; (1c3f0 <vTaskResetRunTimeStats+0x64>)
   1c3d0:	2200      	movs	r2, #0
   1c3d2:	601a      	str	r2, [r3, #0]
   1c3d4:	f000 f8e8 	bl	1c5a8 <resetRunTimeCounter>
   1c3d8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   1c3dc:	f7ff bcda 	b.w	1bd94 <xTaskResumeAll>
   1c3e0:	2007ca18 	.word	0x2007ca18
   1c3e4:	2007c9a8 	.word	0x2007c9a8
   1c3e8:	2007ca50 	.word	0x2007ca50
   1c3ec:	2007ca60 	.word	0x2007ca60
   1c3f0:	2007c9a0 	.word	0x2007c9a0

0001c3f4 <vRunTimeStatIsrEntry>:
vRunTimeStatIsrEntry():
   1c3f4:	b510      	push	{r4, lr}
   1c3f6:	f000 f8cd 	bl	1c594 <uxGetTimerForRunTimeStats>
   1c3fa:	4a06      	ldr	r2, [pc, #24]	; (1c414 <vRunTimeStatIsrEntry+0x20>)
   1c3fc:	4b06      	ldr	r3, [pc, #24]	; (1c418 <vRunTimeStatIsrEntry+0x24>)
   1c3fe:	6811      	ldr	r1, [r2, #0]
   1c400:	b129      	cbz	r1, 1c40e <vRunTimeStatIsrEntry+0x1a>
   1c402:	6812      	ldr	r2, [r2, #0]
   1c404:	6819      	ldr	r1, [r3, #0]
   1c406:	6c94      	ldr	r4, [r2, #72]	; 0x48
   1c408:	1a61      	subs	r1, r4, r1
   1c40a:	4401      	add	r1, r0
   1c40c:	6491      	str	r1, [r2, #72]	; 0x48
   1c40e:	6018      	str	r0, [r3, #0]
   1c410:	bd10      	pop	{r4, pc}
   1c412:	bf00      	nop
   1c414:	2007ca34 	.word	0x2007ca34
   1c418:	2007c9a0 	.word	0x2007c9a0

0001c41c <vRunTimeStatIsrExit>:
vRunTimeStatIsrExit():
   1c41c:	b508      	push	{r3, lr}
   1c41e:	f000 f8b9 	bl	1c594 <uxGetTimerForRunTimeStats>
   1c422:	4b01      	ldr	r3, [pc, #4]	; (1c428 <vRunTimeStatIsrExit+0xc>)
   1c424:	6018      	str	r0, [r3, #0]
   1c426:	bd08      	pop	{r3, pc}
   1c428:	2007c9a0 	.word	0x2007c9a0

0001c42c <prvPortStartFirstTask>:
prvPortStartFirstTask():
   1c42c:	4803      	ldr	r0, [pc, #12]	; (1c43c <prvPortStartFirstTask+0x10>)
   1c42e:	6800      	ldr	r0, [r0, #0]
   1c430:	6800      	ldr	r0, [r0, #0]
   1c432:	f380 8808 	msr	MSP, r0
   1c436:	b662      	cpsie	i
   1c438:	df00      	svc	0
   1c43a:	bf00      	nop
$d():
   1c43c:	e000ed08 	.word	0xe000ed08

0001c440 <pxPortInitialiseStack>:
pxPortInitialiseStack():
   1c440:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
   1c444:	e900 000a 	stmdb	r0, {r1, r3}
   1c448:	2300      	movs	r3, #0
   1c44a:	f840 3c0c 	str.w	r3, [r0, #-12]
   1c44e:	f840 2c20 	str.w	r2, [r0, #-32]
   1c452:	3840      	subs	r0, #64	; 0x40
   1c454:	4770      	bx	lr
	...

0001c458 <vPortSVCHandler>:
vPortSVCHandler():
   1c458:	4b06      	ldr	r3, [pc, #24]	; (1c474 <pxCurrentTCBConst2>)
   1c45a:	6819      	ldr	r1, [r3, #0]
   1c45c:	6808      	ldr	r0, [r1, #0]
   1c45e:	e8b0 0ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
   1c462:	f380 8809 	msr	PSP, r0
   1c466:	f04f 0000 	mov.w	r0, #0
   1c46a:	f380 8811 	msr	BASEPRI, r0
   1c46e:	f04e 0e0d 	orr.w	lr, lr, #13
   1c472:	4770      	bx	lr

0001c474 <pxCurrentTCBConst2>:
   1c474:	2007ca34 	.word	0x2007ca34

0001c478 <vPortEndScheduler>:
vPortEndScheduler():
   1c478:	4770      	bx	lr
	...

0001c47c <vPortYield>:
vPortYield():
   1c47c:	4b04      	ldr	r3, [pc, #16]	; (1c490 <vPortYield+0x14>)
   1c47e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   1c482:	601a      	str	r2, [r3, #0]
   1c484:	f3bf 8f4f 	dsb	sy
   1c488:	f3bf 8f6f 	isb	sy
   1c48c:	4770      	bx	lr
   1c48e:	bf00      	nop
   1c490:	e000ed04 	.word	0xe000ed04

0001c494 <ulPortSetInterruptMask>:
ulPortSetInterruptMask():
   1c494:	f3ef 8011 	mrs	r0, BASEPRI
   1c498:	f04f 0110 	mov.w	r1, #16
   1c49c:	f381 8811 	msr	BASEPRI, r1
   1c4a0:	4770      	bx	lr
   1c4a2:	2000      	movs	r0, #0

0001c4a4 <vPortEnterCritical>:
vPortEnterCritical():
   1c4a4:	b508      	push	{r3, lr}
   1c4a6:	f7ff fff5 	bl	1c494 <ulPortSetInterruptMask>
   1c4aa:	4b04      	ldr	r3, [pc, #16]	; (1c4bc <vPortEnterCritical+0x18>)
   1c4ac:	681a      	ldr	r2, [r3, #0]
   1c4ae:	3201      	adds	r2, #1
   1c4b0:	601a      	str	r2, [r3, #0]
   1c4b2:	f3bf 8f4f 	dsb	sy
   1c4b6:	f3bf 8f6f 	isb	sy
   1c4ba:	bd08      	pop	{r3, pc}
   1c4bc:	2007ca7c 	.word	0x2007ca7c

0001c4c0 <vPortClearInterruptMask>:
vPortClearInterruptMask():
   1c4c0:	f380 8811 	msr	BASEPRI, r0
   1c4c4:	4770      	bx	lr
	...

0001c4c8 <vPortExitCritical>:
vPortExitCritical():
   1c4c8:	4b03      	ldr	r3, [pc, #12]	; (1c4d8 <vPortExitCritical+0x10>)
   1c4ca:	6818      	ldr	r0, [r3, #0]
   1c4cc:	3801      	subs	r0, #1
   1c4ce:	6018      	str	r0, [r3, #0]
   1c4d0:	b908      	cbnz	r0, 1c4d6 <vPortExitCritical+0xe>
   1c4d2:	f7ff bff5 	b.w	1c4c0 <vPortClearInterruptMask>
   1c4d6:	4770      	bx	lr
   1c4d8:	2007ca7c 	.word	0x2007ca7c

0001c4dc <xPortPendSVHandler>:
xPortPendSVHandler():
   1c4dc:	f3ef 8009 	mrs	r0, PSP
   1c4e0:	4b0c      	ldr	r3, [pc, #48]	; (1c514 <pxCurrentTCBConst>)
   1c4e2:	681a      	ldr	r2, [r3, #0]
   1c4e4:	e920 0ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
   1c4e8:	6010      	str	r0, [r2, #0]
   1c4ea:	e92d 4008 	stmdb	sp!, {r3, lr}
   1c4ee:	f04f 0010 	mov.w	r0, #16
   1c4f2:	f380 8811 	msr	BASEPRI, r0
   1c4f6:	f7ff fd59 	bl	1bfac <vTaskSwitchContext>
   1c4fa:	f04f 0000 	mov.w	r0, #0
   1c4fe:	f380 8811 	msr	BASEPRI, r0
   1c502:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
   1c506:	6819      	ldr	r1, [r3, #0]
   1c508:	6808      	ldr	r0, [r1, #0]
   1c50a:	e8b0 0ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
   1c50e:	f380 8809 	msr	PSP, r0
   1c512:	4770      	bx	lr

0001c514 <pxCurrentTCBConst>:
   1c514:	2007ca34 	.word	0x2007ca34

0001c518 <xPortSysTickHandler>:
xPortSysTickHandler():
   1c518:	b508      	push	{r3, lr}
   1c51a:	f7ff ffbb 	bl	1c494 <ulPortSetInterruptMask>
   1c51e:	f7ff fbbb 	bl	1bc98 <xTaskIncrementTick>
   1c522:	b118      	cbz	r0, 1c52c <xPortSysTickHandler+0x14>
   1c524:	4b04      	ldr	r3, [pc, #16]	; (1c538 <xPortSysTickHandler+0x20>)
   1c526:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   1c52a:	601a      	str	r2, [r3, #0]
   1c52c:	2000      	movs	r0, #0
   1c52e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
   1c532:	f7ff bfc5 	b.w	1c4c0 <vPortClearInterruptMask>
   1c536:	bf00      	nop
   1c538:	e000ed04 	.word	0xe000ed04

0001c53c <vPortSetupTimerInterrupt>:
vPortSetupTimerInterrupt():
   1c53c:	4b03      	ldr	r3, [pc, #12]	; (1c54c <vPortSetupTimerInterrupt+0x10>)
   1c53e:	f64b 327f 	movw	r2, #47999	; 0xbb7f
   1c542:	601a      	str	r2, [r3, #0]
   1c544:	2207      	movs	r2, #7
   1c546:	f843 2c04 	str.w	r2, [r3, #-4]
   1c54a:	4770      	bx	lr
   1c54c:	e000e014 	.word	0xe000e014

0001c550 <xPortStartScheduler>:
xPortStartScheduler():
   1c550:	4b09      	ldr	r3, [pc, #36]	; (1c578 <xPortStartScheduler+0x28>)
   1c552:	b510      	push	{r4, lr}
   1c554:	681a      	ldr	r2, [r3, #0]
   1c556:	2400      	movs	r4, #0
   1c558:	f442 0278 	orr.w	r2, r2, #16252928	; 0xf80000
   1c55c:	601a      	str	r2, [r3, #0]
   1c55e:	681a      	ldr	r2, [r3, #0]
   1c560:	f042 4278 	orr.w	r2, r2, #4160749568	; 0xf8000000
   1c564:	601a      	str	r2, [r3, #0]
   1c566:	f7ff ffe9 	bl	1c53c <vPortSetupTimerInterrupt>
   1c56a:	4b04      	ldr	r3, [pc, #16]	; (1c57c <xPortStartScheduler+0x2c>)
   1c56c:	601c      	str	r4, [r3, #0]
   1c56e:	f7ff ff5d 	bl	1c42c <prvPortStartFirstTask>
   1c572:	4620      	mov	r0, r4
   1c574:	bd10      	pop	{r4, pc}
   1c576:	bf00      	nop
   1c578:	e000ed20 	.word	0xe000ed20
   1c57c:	2007ca7c 	.word	0x2007ca7c

0001c580 <vConfigureTimerForRunTimeStats>:
vConfigureTimerForRunTimeStats():
   1c580:	b508      	push	{r3, lr}
   1c582:	f000 f9ff 	bl	1c984 <sys_get_uptime_us>
   1c586:	4b02      	ldr	r3, [pc, #8]	; (1c590 <vConfigureTimerForRunTimeStats+0x10>)
   1c588:	e9c3 0100 	strd	r0, r1, [r3]
   1c58c:	bd08      	pop	{r3, pc}
   1c58e:	bf00      	nop
   1c590:	2007ca80 	.word	0x2007ca80

0001c594 <uxGetTimerForRunTimeStats>:
uxGetTimerForRunTimeStats():
   1c594:	b508      	push	{r3, lr}
   1c596:	f000 f9f5 	bl	1c984 <sys_get_uptime_us>
   1c59a:	4b02      	ldr	r3, [pc, #8]	; (1c5a4 <uxGetTimerForRunTimeStats+0x10>)
   1c59c:	681b      	ldr	r3, [r3, #0]
   1c59e:	1ac0      	subs	r0, r0, r3
   1c5a0:	bd08      	pop	{r3, pc}
   1c5a2:	bf00      	nop
   1c5a4:	2007ca80 	.word	0x2007ca80

0001c5a8 <resetRunTimeCounter>:
resetRunTimeCounter():
   1c5a8:	b508      	push	{r3, lr}
   1c5aa:	f000 f9eb 	bl	1c984 <sys_get_uptime_us>
   1c5ae:	4b02      	ldr	r3, [pc, #8]	; (1c5b8 <resetRunTimeCounter+0x10>)
   1c5b0:	e9c3 0100 	strd	r0, r1, [r3]
   1c5b4:	bd08      	pop	{r3, pc}
   1c5b6:	bf00      	nop
   1c5b8:	2007ca80 	.word	0x2007ca80

0001c5bc <vApplicationIdleHook>:
vApplicationIdleHook():
   1c5bc:	bf30      	wfi
   1c5be:	4770      	bx	lr

0001c5c0 <vApplicationStackOverflowHook>:
vApplicationStackOverflowHook():
   1c5c0:	b510      	push	{r4, lr}
   1c5c2:	480a      	ldr	r0, [pc, #40]	; (1c5ec <vApplicationStackOverflowHook+0x2c>)
   1c5c4:	460c      	mov	r4, r1
   1c5c6:	f7f3 ff55 	bl	10474 <u0_dbg_put>
   1c5ca:	4620      	mov	r0, r4
   1c5cc:	f7f3 ff52 	bl	10474 <u0_dbg_put>
   1c5d0:	4807      	ldr	r0, [pc, #28]	; (1c5f0 <vApplicationStackOverflowHook+0x30>)
   1c5d2:	f7f3 ff4f 	bl	10474 <u0_dbg_put>
   1c5d6:	4807      	ldr	r0, [pc, #28]	; (1c5f4 <vApplicationStackOverflowHook+0x34>)
   1c5d8:	f7fd fb13 	bl	19c02 <delay_us>
   1c5dc:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
   1c5e0:	22aa      	movs	r2, #170	; 0xaa
   1c5e2:	721a      	strb	r2, [r3, #8]
   1c5e4:	2200      	movs	r2, #0
   1c5e6:	701a      	strb	r2, [r3, #0]
   1c5e8:	bd10      	pop	{r4, pc}
   1c5ea:	bf00      	nop
   1c5ec:	00027475 	.word	0x00027475
   1c5f0:	0002749e 	.word	0x0002749e
   1c5f4:	002dc6c0 	.word	0x002dc6c0

0001c5f8 <vApplicationMallocFailedHook>:
vApplicationMallocFailedHook():
   1c5f8:	b508      	push	{r3, lr}
   1c5fa:	4806      	ldr	r0, [pc, #24]	; (1c614 <vApplicationMallocFailedHook+0x1c>)
   1c5fc:	f7f3 ff3a 	bl	10474 <u0_dbg_put>
   1c600:	4805      	ldr	r0, [pc, #20]	; (1c618 <vApplicationMallocFailedHook+0x20>)
   1c602:	f7fd fafe 	bl	19c02 <delay_us>
   1c606:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
   1c60a:	22aa      	movs	r2, #170	; 0xaa
   1c60c:	721a      	strb	r2, [r3, #8]
   1c60e:	2200      	movs	r2, #0
   1c610:	701a      	strb	r2, [r3, #0]
   1c612:	bd08      	pop	{r3, pc}
   1c614:	000274ca 	.word	0x000274ca
   1c618:	002dc6c0 	.word	0x002dc6c0

0001c61c <pvPortMalloc>:
pvPortMalloc():
   1c61c:	b510      	push	{r4, lr}
   1c61e:	4604      	mov	r4, r0
   1c620:	f7ff fb14 	bl	1bc4c <vTaskSuspendAll>
   1c624:	4620      	mov	r0, r4
   1c626:	f002 fac9 	bl	1ebbc <malloc>
   1c62a:	4604      	mov	r4, r0
   1c62c:	f7ff fbb2 	bl	1bd94 <xTaskResumeAll>
   1c630:	b90c      	cbnz	r4, 1c636 <pvPortMalloc+0x1a>
   1c632:	f7ff ffe1 	bl	1c5f8 <vApplicationMallocFailedHook>
   1c636:	4620      	mov	r0, r4
   1c638:	bd10      	pop	{r4, pc}

0001c63a <vPortFree>:
vPortFree():
   1c63a:	b510      	push	{r4, lr}
   1c63c:	4604      	mov	r4, r0
   1c63e:	b140      	cbz	r0, 1c652 <vPortFree+0x18>
   1c640:	f7ff fb04 	bl	1bc4c <vTaskSuspendAll>
   1c644:	4620      	mov	r0, r4
   1c646:	f002 fac1 	bl	1ebcc <free>
   1c64a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   1c64e:	f7ff bba1 	b.w	1bd94 <xTaskResumeAll>
   1c652:	bd10      	pop	{r4, pc}

0001c654 <__set_PSP>:
__set_PSP():
   1c654:	f380 8809 	msr	PSP, r0
   1c658:	4770      	bx	lr

0001c65a <__set_MSP>:
__set_MSP():
   1c65a:	f380 8808 	msr	MSP, r0
   1c65e:	4770      	bx	lr

0001c660 <__set_BASEPRI>:
__set_BASEPRI():
   1c660:	f380 8811 	msr	BASEPRI, r0
   1c664:	4770      	bx	lr
	...

0001c668 <sys_get_boot_type>:
sys_get_boot_type():
   1c668:	4b01      	ldr	r3, [pc, #4]	; (1c670 <sys_get_boot_type+0x8>)
   1c66a:	7818      	ldrb	r0, [r3, #0]
   1c66c:	4770      	bx	lr
   1c66e:	bf00      	nop
   1c670:	2007ca88 	.word	0x2007ca88

0001c674 <sys_get_boot_time>:
sys_get_boot_time():
   1c674:	4903      	ldr	r1, [pc, #12]	; (1c684 <sys_get_boot_time+0x10>)
   1c676:	680b      	ldr	r3, [r1, #0]
   1c678:	6003      	str	r3, [r0, #0]
   1c67a:	684b      	ldr	r3, [r1, #4]
   1c67c:	6043      	str	r3, [r0, #4]
   1c67e:	688b      	ldr	r3, [r1, #8]
   1c680:	6083      	str	r3, [r0, #8]
   1c682:	4770      	bx	lr
   1c684:	2007ca89 	.word	0x2007ca89

0001c688 <low_level_init()>:
_Z14low_level_initv():
   1c688:	b530      	push	{r4, r5, lr}
   1c68a:	b085      	sub	sp, #20
   1c68c:	f7fe f8f2 	bl	1a874 <rtc_init>
   1c690:	4668      	mov	r0, sp
   1c692:	f7fe f891 	bl	1a7b8 <rtc_gettime>
   1c696:	4c7c      	ldr	r4, [pc, #496]	; (1c888 <low_level_init()+0x200>)
   1c698:	9b00      	ldr	r3, [sp, #0]
   1c69a:	6023      	str	r3, [r4, #0]
   1c69c:	9b01      	ldr	r3, [sp, #4]
   1c69e:	6063      	str	r3, [r4, #4]
   1c6a0:	9b02      	ldr	r3, [sp, #8]
   1c6a2:	60a3      	str	r3, [r4, #8]
   1c6a4:	f000 fa84 	bl	1cbb0 <sys_clock_configure()>
   1c6a8:	f000 fada 	bl	1cc60 <sys_get_cpu_clock>
   1c6ac:	4b77      	ldr	r3, [pc, #476]	; (1c88c <low_level_init()+0x204>)
   1c6ae:	fbb0 f0f3 	udiv	r0, r0, r3
   1c6b2:	283c      	cmp	r0, #60	; 0x3c
   1c6b4:	4b76      	ldr	r3, [pc, #472]	; (1c890 <low_level_init()+0x208>)
   1c6b6:	d805      	bhi.n	1c6c4 <low_level_init()+0x3c>
   1c6b8:	2829      	cmp	r0, #41	; 0x29
   1c6ba:	d20d      	bcs.n	1c6d8 <low_level_init()+0x50>
   1c6bc:	2814      	cmp	r0, #20
   1c6be:	d808      	bhi.n	1c6d2 <low_level_init()+0x4a>
   1c6c0:	223a      	movs	r2, #58	; 0x3a
   1c6c2:	e011      	b.n	1c6e8 <low_level_init()+0x60>
   1c6c4:	2850      	cmp	r0, #80	; 0x50
   1c6c6:	d90a      	bls.n	1c6de <low_level_init()+0x56>
   1c6c8:	2864      	cmp	r0, #100	; 0x64
   1c6ca:	d80b      	bhi.n	1c6e4 <low_level_init()+0x5c>
   1c6cc:	f244 023a 	movw	r2, #16442	; 0x403a
   1c6d0:	e00a      	b.n	1c6e8 <low_level_init()+0x60>
   1c6d2:	f241 023a 	movw	r2, #4154	; 0x103a
   1c6d6:	e007      	b.n	1c6e8 <low_level_init()+0x60>
   1c6d8:	f242 023a 	movw	r2, #8250	; 0x203a
   1c6dc:	e004      	b.n	1c6e8 <low_level_init()+0x60>
   1c6de:	f243 023a 	movw	r2, #12346	; 0x303a
   1c6e2:	e001      	b.n	1c6e8 <low_level_init()+0x60>
   1c6e4:	f245 023a 	movw	r2, #20538	; 0x503a
   1c6e8:	496a      	ldr	r1, [pc, #424]	; (1c894 <low_level_init()+0x20c>)
   1c6ea:	601a      	str	r2, [r3, #0]
   1c6ec:	2308      	movs	r3, #8
   1c6ee:	760b      	strb	r3, [r1, #24]
   1c6f0:	764b      	strb	r3, [r1, #25]
   1c6f2:	768b      	strb	r3, [r1, #26]
   1c6f4:	77cb      	strb	r3, [r1, #31]
   1c6f6:	f881 3020 	strb.w	r3, [r1, #32]
   1c6fa:	f881 3022 	strb.w	r3, [r1, #34]	; 0x22
   1c6fe:	f881 3023 	strb.w	r3, [r1, #35]	; 0x23
   1c702:	4b65      	ldr	r3, [pc, #404]	; (1c898 <low_level_init()+0x210>)
   1c704:	2298      	movs	r2, #152	; 0x98
   1c706:	f883 2305 	strb.w	r2, [r3, #773]	; 0x305
   1c70a:	f883 2306 	strb.w	r2, [r3, #774]	; 0x306
   1c70e:	f883 2307 	strb.w	r2, [r3, #775]	; 0x307
   1c712:	f883 2308 	strb.w	r2, [r3, #776]	; 0x308
   1c716:	2290      	movs	r2, #144	; 0x90
   1c718:	f883 230a 	strb.w	r2, [r3, #778]	; 0x30a
   1c71c:	f883 230b 	strb.w	r2, [r3, #779]	; 0x30b
   1c720:	f883 230c 	strb.w	r2, [r3, #780]	; 0x30c
   1c724:	2270      	movs	r2, #112	; 0x70
   1c726:	f883 230e 	strb.w	r2, [r3, #782]	; 0x30e
   1c72a:	f883 230f 	strb.w	r2, [r3, #783]	; 0x30f
   1c72e:	2258      	movs	r2, #88	; 0x58
   1c730:	f883 2312 	strb.w	r2, [r3, #786]	; 0x312
   1c734:	f883 2313 	strb.w	r2, [r3, #787]	; 0x313
   1c738:	f883 2314 	strb.w	r2, [r3, #788]	; 0x314
   1c73c:	f883 2315 	strb.w	r2, [r3, #789]	; 0x315
   1c740:	2278      	movs	r2, #120	; 0x78
   1c742:	f883 2319 	strb.w	r2, [r3, #793]	; 0x319
   1c746:	22a0      	movs	r2, #160	; 0xa0
   1c748:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
   1c74c:	f883 2301 	strb.w	r2, [r3, #769]	; 0x301
   1c750:	f883 2302 	strb.w	r2, [r3, #770]	; 0x302
   1c754:	f883 2303 	strb.w	r2, [r3, #771]	; 0x303
   1c758:	f883 2304 	strb.w	r2, [r3, #772]	; 0x304
   1c75c:	f883 2309 	strb.w	r2, [r3, #777]	; 0x309
   1c760:	f883 230d 	strb.w	r2, [r3, #781]	; 0x30d
   1c764:	f883 2310 	strb.w	r2, [r3, #784]	; 0x310
   1c768:	f883 2311 	strb.w	r2, [r3, #785]	; 0x311
   1c76c:	f883 2316 	strb.w	r2, [r3, #790]	; 0x316
   1c770:	f883 2317 	strb.w	r2, [r3, #791]	; 0x317
   1c774:	f883 2318 	strb.w	r2, [r3, #792]	; 0x318
   1c778:	f883 231a 	strb.w	r2, [r3, #794]	; 0x31a
   1c77c:	f883 231b 	strb.w	r2, [r3, #795]	; 0x31b
   1c780:	f883 231c 	strb.w	r2, [r3, #796]	; 0x31c
   1c784:	f883 231e 	strb.w	r2, [r3, #798]	; 0x31e
   1c788:	f883 231f 	strb.w	r2, [r3, #799]	; 0x31f
   1c78c:	f883 2320 	strb.w	r2, [r3, #800]	; 0x320
   1c790:	f883 231d 	strb.w	r2, [r3, #797]	; 0x31d
   1c794:	f883 2321 	strb.w	r2, [r3, #801]	; 0x321
   1c798:	f883 2322 	strb.w	r2, [r3, #802]	; 0x322
   1c79c:	68ca      	ldr	r2, [r1, #12]
   1c79e:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
   1c7a2:	4013      	ands	r3, r2
   1c7a4:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
   1c7a8:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
   1c7ac:	60cb      	str	r3, [r1, #12]
   1c7ae:	2000      	movs	r0, #0
   1c7b0:	f7ff ff56 	bl	1c660 <__set_BASEPRI>
   1c7b4:	b661      	cpsie	f
   1c7b6:	b662      	cpsie	i
   1c7b8:	f44f 4016 	mov.w	r0, #38400	; 0x9600
   1c7bc:	f000 faaa 	bl	1cd14 <uart0_init>
   1c7c0:	4c36      	ldr	r4, [pc, #216]	; (1c89c <low_level_init()+0x214>)
   1c7c2:	4837      	ldr	r0, [pc, #220]	; (1c8a0 <low_level_init()+0x218>)
   1c7c4:	f7f3 fdb4 	bl	10330 <sys_set_outchar_func>
   1c7c8:	4836      	ldr	r0, [pc, #216]	; (1c8a4 <low_level_init()+0x21c>)
   1c7ca:	f7f3 fdb7 	bl	1033c <sys_set_inchar_func>
   1c7ce:	6823      	ldr	r3, [r4, #0]
   1c7d0:	2100      	movs	r1, #0
   1c7d2:	6898      	ldr	r0, [r3, #8]
   1c7d4:	2202      	movs	r2, #2
   1c7d6:	460b      	mov	r3, r1
   1c7d8:	f003 f8ee 	bl	1f9b8 <setvbuf>
   1c7dc:	6823      	ldr	r3, [r4, #0]
   1c7de:	2100      	movs	r1, #0
   1c7e0:	2202      	movs	r2, #2
   1c7e2:	6858      	ldr	r0, [r3, #4]
   1c7e4:	460b      	mov	r3, r1
   1c7e6:	f003 f8e7 	bl	1f9b8 <setvbuf>
   1c7ea:	f7f3 fdeb 	bl	103c4 <syscalls_init>
   1c7ee:	4a2e      	ldr	r2, [pc, #184]	; (1c8a8 <low_level_init()+0x220>)
   1c7f0:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
   1c7f4:	605a      	str	r2, [r3, #4]
   1c7f6:	2203      	movs	r2, #3
   1c7f8:	701a      	strb	r2, [r3, #0]
   1c7fa:	22aa      	movs	r2, #170	; 0xaa
   1c7fc:	721a      	strb	r2, [r3, #8]
   1c7fe:	4c24      	ldr	r4, [pc, #144]	; (1c890 <low_level_init()+0x208>)
   1c800:	2255      	movs	r2, #85	; 0x55
   1c802:	721a      	strb	r2, [r3, #8]
   1c804:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   1c808:	4d28      	ldr	r5, [pc, #160]	; (1c8ac <low_level_init()+0x224>)
   1c80a:	f013 0f01 	tst.w	r3, #1
   1c80e:	d009      	beq.n	1c824 <low_level_init()+0x19c>
   1c810:	4827      	ldr	r0, [pc, #156]	; (1c8b0 <low_level_init()+0x228>)
   1c812:	f000 fac9 	bl	1cda8 <uart0_puts>
   1c816:	2301      	movs	r3, #1
   1c818:	702b      	strb	r3, [r5, #0]
   1c81a:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   1c81e:	f043 0301 	orr.w	r3, r3, #1
   1c822:	e00c      	b.n	1c83e <low_level_init()+0x1b6>
   1c824:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   1c828:	079b      	lsls	r3, r3, #30
   1c82a:	d50b      	bpl.n	1c844 <low_level_init()+0x1bc>
   1c82c:	4821      	ldr	r0, [pc, #132]	; (1c8b4 <low_level_init()+0x22c>)
   1c82e:	f000 fabb 	bl	1cda8 <uart0_puts>
   1c832:	2302      	movs	r3, #2
   1c834:	702b      	strb	r3, [r5, #0]
   1c836:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   1c83a:	f043 0302 	orr.w	r3, r3, #2
   1c83e:	f8c4 3180 	str.w	r3, [r4, #384]	; 0x180
   1c842:	e01f      	b.n	1c884 <low_level_init()+0x1fc>
   1c844:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   1c848:	f013 0304 	ands.w	r3, r3, #4
   1c84c:	d019      	beq.n	1c882 <low_level_init()+0x1fa>
   1c84e:	4b1a      	ldr	r3, [pc, #104]	; (1c8b8 <low_level_init()+0x230>)
   1c850:	6c9a      	ldr	r2, [r3, #72]	; 0x48
   1c852:	4b1a      	ldr	r3, [pc, #104]	; (1c8bc <low_level_init()+0x234>)
   1c854:	429a      	cmp	r2, r3
   1c856:	d105      	bne.n	1c864 <low_level_init()+0x1dc>
   1c858:	2305      	movs	r3, #5
   1c85a:	4819      	ldr	r0, [pc, #100]	; (1c8c0 <low_level_init()+0x238>)
   1c85c:	702b      	strb	r3, [r5, #0]
   1c85e:	f000 faa3 	bl	1cda8 <uart0_puts>
   1c862:	e00a      	b.n	1c87a <low_level_init()+0x1f2>
   1c864:	2304      	movs	r3, #4
   1c866:	4817      	ldr	r0, [pc, #92]	; (1c8c4 <low_level_init()+0x23c>)
   1c868:	702b      	strb	r3, [r5, #0]
   1c86a:	f000 fa9d 	bl	1cda8 <uart0_puts>
   1c86e:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   1c872:	f043 0304 	orr.w	r3, r3, #4
   1c876:	f8c4 3180 	str.w	r3, [r4, #384]	; 0x180
   1c87a:	4b0f      	ldr	r3, [pc, #60]	; (1c8b8 <low_level_init()+0x230>)
   1c87c:	2200      	movs	r2, #0
   1c87e:	649a      	str	r2, [r3, #72]	; 0x48
   1c880:	e000      	b.n	1c884 <low_level_init()+0x1fc>
   1c882:	702b      	strb	r3, [r5, #0]
   1c884:	b005      	add	sp, #20
   1c886:	bd30      	pop	{r4, r5, pc}
   1c888:	2007ca89 	.word	0x2007ca89
   1c88c:	000f4240 	.word	0x000f4240
   1c890:	400fc000 	.word	0x400fc000
   1c894:	e000ed00 	.word	0xe000ed00
   1c898:	e000e100 	.word	0xe000e100
   1c89c:	2007c16c 	.word	0x2007c16c
   1c8a0:	0001cd8d 	.word	0x0001cd8d
   1c8a4:	0001cd75 	.word	0x0001cd75
   1c8a8:	002dc6c0 	.word	0x002dc6c0
   1c8ac:	2007ca88 	.word	0x2007ca88
   1c8b0:	00027500 	.word	0x00027500
   1c8b4:	00027543 	.word	0x00027543
   1c8b8:	40024000 	.word	0x40024000
   1c8bc:	deadbeef 	.word	0xdeadbeef
   1c8c0:	0002751d 	.word	0x0002751d
   1c8c4:	0002753a 	.word	0x0002753a

0001c8c8 <lpc_pconp>:
lpc_pconp():
   1c8c8:	b538      	push	{r3, r4, r5, lr}
   1c8ca:	4604      	mov	r4, r0
   1c8cc:	460d      	mov	r5, r1
   1c8ce:	f7ff fde9 	bl	1c4a4 <vPortEnterCritical>
   1c8d2:	4b08      	ldr	r3, [pc, #32]	; (1c8f4 <lpc_pconp+0x2c>)
   1c8d4:	2201      	movs	r2, #1
   1c8d6:	f8d3 10c4 	ldr.w	r1, [r3, #196]	; 0xc4
   1c8da:	40a2      	lsls	r2, r4
   1c8dc:	b10d      	cbz	r5, 1c8e2 <lpc_pconp+0x1a>
   1c8de:	430a      	orrs	r2, r1
   1c8e0:	e001      	b.n	1c8e6 <lpc_pconp+0x1e>
   1c8e2:	ea21 0202 	bic.w	r2, r1, r2
   1c8e6:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
   1c8ea:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   1c8ee:	f7ff bdeb 	b.w	1c4c8 <vPortExitCritical>
   1c8f2:	bf00      	nop
   1c8f4:	400fc000 	.word	0x400fc000

0001c8f8 <lpc_pclk>:
lpc_pclk():
   1c8f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1c8fc:	4607      	mov	r7, r0
   1c8fe:	007f      	lsls	r7, r7, #1
   1c900:	4688      	mov	r8, r1
   1c902:	f7ff fdcf 	bl	1c4a4 <vPortEnterCritical>
   1c906:	463a      	mov	r2, r7
   1c908:	2003      	movs	r0, #3
   1c90a:	2100      	movs	r1, #0
   1c90c:	f000 fdd0 	bl	1d4b0 <__aeabi_llsl>
   1c910:	4e0a      	ldr	r6, [pc, #40]	; (1c93c <lpc_pclk+0x44>)
   1c912:	463a      	mov	r2, r7
   1c914:	e9d6 4500 	ldrd	r4, r5, [r6]
   1c918:	ea24 0400 	bic.w	r4, r4, r0
   1c91c:	f008 0003 	and.w	r0, r8, #3
   1c920:	ea25 0501 	bic.w	r5, r5, r1
   1c924:	b2c0      	uxtb	r0, r0
   1c926:	2100      	movs	r1, #0
   1c928:	f000 fdc2 	bl	1d4b0 <__aeabi_llsl>
   1c92c:	4320      	orrs	r0, r4
   1c92e:	4329      	orrs	r1, r5
   1c930:	e9c6 0100 	strd	r0, r1, [r6]
   1c934:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   1c938:	f7ff bdc6 	b.w	1c4c8 <vPortExitCritical>
   1c93c:	400fc1a8 	.word	0x400fc1a8

0001c940 <lpc_sys_setup_system_timer>:
lpc_sys_setup_system_timer():
   1c940:	b510      	push	{r4, lr}
   1c942:	4b0c      	ldr	r3, [pc, #48]	; (1c974 <lpc_sys_setup_system_timer+0x34>)
   1c944:	4c0c      	ldr	r4, [pc, #48]	; (1c978 <lpc_sys_setup_system_timer+0x38>)
   1c946:	2001      	movs	r0, #1
   1c948:	4601      	mov	r1, r0
   1c94a:	6023      	str	r3, [r4, #0]
   1c94c:	f7fd fe7c 	bl	1a648 <lpc_timer_enable>
   1c950:	6823      	ldr	r3, [r4, #0]
   1c952:	f04f 32ff 	mov.w	r2, #4294967295
   1c956:	619a      	str	r2, [r3, #24]
   1c958:	4a08      	ldr	r2, [pc, #32]	; (1c97c <lpc_sys_setup_system_timer+0x3c>)
   1c95a:	6812      	ldr	r2, [r2, #0]
   1c95c:	61da      	str	r2, [r3, #28]
   1c95e:	2200      	movs	r2, #0
   1c960:	621a      	str	r2, [r3, #32]
   1c962:	2249      	movs	r2, #73	; 0x49
   1c964:	615a      	str	r2, [r3, #20]
   1c966:	4b06      	ldr	r3, [pc, #24]	; (1c980 <lpc_sys_setup_system_timer+0x40>)
   1c968:	2204      	movs	r2, #4
   1c96a:	601a      	str	r2, [r3, #0]
   1c96c:	2218      	movs	r2, #24
   1c96e:	f883 2302 	strb.w	r2, [r3, #770]	; 0x302
   1c972:	bd10      	pop	{r4, pc}
   1c974:	40008000 	.word	0x40008000
   1c978:	2007ca98 	.word	0x2007ca98
   1c97c:	2007c074 	.word	0x2007c074
   1c980:	e000e100 	.word	0xe000e100

0001c984 <sys_get_uptime_us>:
sys_get_uptime_us():
   1c984:	b530      	push	{r4, r5, lr}
   1c986:	4b08      	ldr	r3, [pc, #32]	; (1c9a8 <sys_get_uptime_us+0x24>)
   1c988:	681b      	ldr	r3, [r3, #0]
   1c98a:	4908      	ldr	r1, [pc, #32]	; (1c9ac <sys_get_uptime_us+0x28>)
   1c98c:	689a      	ldr	r2, [r3, #8]
   1c98e:	8809      	ldrh	r1, [r1, #0]
   1c990:	6898      	ldr	r0, [r3, #8]
   1c992:	b289      	uxth	r1, r1
   1c994:	4290      	cmp	r0, r2
   1c996:	d3f8      	bcc.n	1c98a <sys_get_uptime_us+0x6>
   1c998:	2200      	movs	r2, #0
   1c99a:	1814      	adds	r4, r2, r0
   1c99c:	f141 0500 	adc.w	r5, r1, #0
   1c9a0:	4620      	mov	r0, r4
   1c9a2:	4629      	mov	r1, r5
   1c9a4:	bd30      	pop	{r4, r5, pc}
   1c9a6:	bf00      	nop
   1c9a8:	2007ca98 	.word	0x2007ca98
   1c9ac:	2007ca9c 	.word	0x2007ca9c

0001c9b0 <TIMER1_IRQHandler>:
TIMER1_IRQHandler():
   1c9b0:	4b24      	ldr	r3, [pc, #144]	; (1ca44 <TIMER1_IRQHandler+0x94>)
   1c9b2:	b510      	push	{r4, lr}
   1c9b4:	681b      	ldr	r3, [r3, #0]
   1c9b6:	681a      	ldr	r2, [r3, #0]
   1c9b8:	06d4      	lsls	r4, r2, #27
   1c9ba:	d507      	bpl.n	1c9cc <TIMER1_IRQHandler+0x1c>
   1c9bc:	2210      	movs	r2, #16
   1c9be:	601a      	str	r2, [r3, #0]
   1c9c0:	689a      	ldr	r2, [r3, #8]
   1c9c2:	f502 521c 	add.w	r2, r2, #9984	; 0x2700
   1c9c6:	3210      	adds	r2, #16
   1c9c8:	621a      	str	r2, [r3, #32]
   1c9ca:	bd10      	pop	{r4, pc}
   1c9cc:	0750      	lsls	r0, r2, #29
   1c9ce:	d501      	bpl.n	1c9d4 <TIMER1_IRQHandler+0x24>
   1c9d0:	2204      	movs	r2, #4
   1c9d2:	e030      	b.n	1ca36 <TIMER1_IRQHandler+0x86>
   1c9d4:	07d1      	lsls	r1, r2, #31
   1c9d6:	d507      	bpl.n	1c9e8 <TIMER1_IRQHandler+0x38>
   1c9d8:	2201      	movs	r2, #1
   1c9da:	601a      	str	r2, [r3, #0]
   1c9dc:	4b1a      	ldr	r3, [pc, #104]	; (1ca48 <TIMER1_IRQHandler+0x98>)
   1c9de:	881a      	ldrh	r2, [r3, #0]
   1c9e0:	3201      	adds	r2, #1
   1c9e2:	b292      	uxth	r2, r2
   1c9e4:	801a      	strh	r2, [r3, #0]
   1c9e6:	bd10      	pop	{r4, pc}
   1c9e8:	0792      	lsls	r2, r2, #30
   1c9ea:	d526      	bpl.n	1ca3a <TIMER1_IRQHandler+0x8a>
   1c9ec:	2202      	movs	r2, #2
   1c9ee:	4917      	ldr	r1, [pc, #92]	; (1ca4c <TIMER1_IRQHandler+0x9c>)
   1c9f0:	601a      	str	r2, [r3, #0]
   1c9f2:	69d8      	ldr	r0, [r3, #28]
   1c9f4:	680a      	ldr	r2, [r1, #0]
   1c9f6:	4410      	add	r0, r2
   1c9f8:	61d8      	str	r0, [r3, #28]
   1c9fa:	69dc      	ldr	r4, [r3, #28]
   1c9fc:	6898      	ldr	r0, [r3, #8]
   1c9fe:	4284      	cmp	r4, r0
   1ca00:	460c      	mov	r4, r1
   1ca02:	d204      	bcs.n	1ca0e <TIMER1_IRQHandler+0x5e>
   1ca04:	69d8      	ldr	r0, [r3, #28]
   1ca06:	6899      	ldr	r1, [r3, #8]
   1ca08:	4402      	add	r2, r0
   1ca0a:	440a      	add	r2, r1
   1ca0c:	61da      	str	r2, [r3, #28]
   1ca0e:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
   1ca12:	22aa      	movs	r2, #170	; 0xaa
   1ca14:	721a      	strb	r2, [r3, #8]
   1ca16:	2255      	movs	r2, #85	; 0x55
   1ca18:	721a      	strb	r2, [r3, #8]
   1ca1a:	f7ff fc29 	bl	1c270 <xTaskGetSchedulerState>
   1ca1e:	2802      	cmp	r0, #2
   1ca20:	d003      	beq.n	1ca2a <TIMER1_IRQHandler+0x7a>
   1ca22:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   1ca26:	f7f8 be71 	b.w	1570c <wireless_service>
   1ca2a:	6823      	ldr	r3, [r4, #0]
   1ca2c:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
   1ca30:	d007      	beq.n	1ca42 <TIMER1_IRQHandler+0x92>
   1ca32:	4a07      	ldr	r2, [pc, #28]	; (1ca50 <TIMER1_IRQHandler+0xa0>)
   1ca34:	4b05      	ldr	r3, [pc, #20]	; (1ca4c <TIMER1_IRQHandler+0x9c>)
   1ca36:	601a      	str	r2, [r3, #0]
   1ca38:	bd10      	pop	{r4, pc}
   1ca3a:	4806      	ldr	r0, [pc, #24]	; (1ca54 <TIMER1_IRQHandler+0xa4>)
   1ca3c:	f002 fe8e 	bl	1f75c <puts>
   1ca40:	e7fe      	b.n	1ca40 <TIMER1_IRQHandler+0x90>
   1ca42:	bd10      	pop	{r4, pc}
   1ca44:	2007ca98 	.word	0x2007ca98
   1ca48:	2007ca9c 	.word	0x2007ca9c
   1ca4c:	2007c074 	.word	0x2007c074
   1ca50:	000f4240 	.word	0x000f4240
   1ca54:	0002755d 	.word	0x0002755d

0001ca58 <sys_get_mem_info_str>:
sys_get_mem_info_str():
   1ca58:	b510      	push	{r4, lr}
   1ca5a:	b08e      	sub	sp, #56	; 0x38
   1ca5c:	4604      	mov	r4, r0
   1ca5e:	a806      	add	r0, sp, #24
   1ca60:	f7f3 fc0c 	bl	1027c <sys_get_mem_info>
   1ca64:	9b08      	ldr	r3, [sp, #32]
   1ca66:	4620      	mov	r0, r4
   1ca68:	9300      	str	r3, [sp, #0]
   1ca6a:	9b09      	ldr	r3, [sp, #36]	; 0x24
   1ca6c:	4907      	ldr	r1, [pc, #28]	; (1ca8c <sys_get_mem_info_str+0x34>)
   1ca6e:	9301      	str	r3, [sp, #4]
   1ca70:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   1ca72:	9a06      	ldr	r2, [sp, #24]
   1ca74:	9302      	str	r3, [sp, #8]
   1ca76:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   1ca78:	9303      	str	r3, [sp, #12]
   1ca7a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   1ca7c:	9304      	str	r3, [sp, #16]
   1ca7e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   1ca80:	9305      	str	r3, [sp, #20]
   1ca82:	9b07      	ldr	r3, [sp, #28]
   1ca84:	f003 f864 	bl	1fb50 <siprintf>
   1ca88:	b00e      	add	sp, #56	; 0x38
   1ca8a:	bd10      	pop	{r4, pc}
   1ca8c:	0002757e 	.word	0x0002757e

0001ca90 <isr_forwarder_routine>:
isr_forwarder_routine():
   1ca90:	b508      	push	{r3, lr}
   1ca92:	f7ff fcaf 	bl	1c3f4 <vRunTimeStatIsrEntry>
   1ca96:	4b09      	ldr	r3, [pc, #36]	; (1cabc <isr_forwarder_routine+0x2c>)
   1ca98:	4a09      	ldr	r2, [pc, #36]	; (1cac0 <isr_forwarder_routine+0x30>)
   1ca9a:	7819      	ldrb	r1, [r3, #0]
   1ca9c:	4b09      	ldr	r3, [pc, #36]	; (1cac4 <isr_forwarder_routine+0x34>)
   1ca9e:	3910      	subs	r1, #16
   1caa0:	b2c9      	uxtb	r1, r1
   1caa2:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
   1caa6:	4293      	cmp	r3, r2
   1caa8:	d103      	bne.n	1cab2 <isr_forwarder_routine+0x22>
   1caaa:	4807      	ldr	r0, [pc, #28]	; (1cac8 <isr_forwarder_routine+0x38>)
   1caac:	f7f3 fcf2 	bl	10494 <u0_dbg_printf>
   1cab0:	e7fe      	b.n	1cab0 <isr_forwarder_routine+0x20>
   1cab2:	4798      	blx	r3
   1cab4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
   1cab8:	f7ff bcb0 	b.w	1c41c <vRunTimeStatIsrExit>
   1cabc:	e000ed04 	.word	0xe000ed04
   1cac0:	0001014d 	.word	0x0001014d
   1cac4:	2007c078 	.word	0x2007c078
   1cac8:	00027643 	.word	0x00027643

0001cacc <isr_hard_fault_handler>:
isr_hard_fault_handler():
   1cacc:	6803      	ldr	r3, [r0, #0]
   1cace:	b088      	sub	sp, #32
   1cad0:	9300      	str	r3, [sp, #0]
   1cad2:	6843      	ldr	r3, [r0, #4]
   1cad4:	4a11      	ldr	r2, [pc, #68]	; (1cb1c <isr_hard_fault_handler+0x50>)
   1cad6:	9301      	str	r3, [sp, #4]
   1cad8:	6883      	ldr	r3, [r0, #8]
   1cada:	9302      	str	r3, [sp, #8]
   1cadc:	68c3      	ldr	r3, [r0, #12]
   1cade:	9303      	str	r3, [sp, #12]
   1cae0:	6903      	ldr	r3, [r0, #16]
   1cae2:	9304      	str	r3, [sp, #16]
   1cae4:	6943      	ldr	r3, [r0, #20]
   1cae6:	9305      	str	r3, [sp, #20]
   1cae8:	6983      	ldr	r3, [r0, #24]
   1caea:	9306      	str	r3, [sp, #24]
   1caec:	69c3      	ldr	r3, [r0, #28]
   1caee:	9307      	str	r3, [sp, #28]
   1caf0:	4b0b      	ldr	r3, [pc, #44]	; (1cb20 <isr_hard_fault_handler+0x54>)
   1caf2:	649a      	str	r2, [r3, #72]	; 0x48
   1caf4:	9a06      	ldr	r2, [sp, #24]
   1caf6:	64da      	str	r2, [r3, #76]	; 0x4c
   1caf8:	9a05      	ldr	r2, [sp, #20]
   1cafa:	3a01      	subs	r2, #1
   1cafc:	651a      	str	r2, [r3, #80]	; 0x50
   1cafe:	9a07      	ldr	r2, [sp, #28]
   1cb00:	655a      	str	r2, [r3, #84]	; 0x54
   1cb02:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
   1cb06:	22aa      	movs	r2, #170	; 0xaa
   1cb08:	721a      	strb	r2, [r3, #8]
   1cb0a:	2200      	movs	r2, #0
   1cb0c:	701a      	strb	r2, [r3, #0]
   1cb0e:	9b00      	ldr	r3, [sp, #0]
   1cb10:	9b01      	ldr	r3, [sp, #4]
   1cb12:	9b02      	ldr	r3, [sp, #8]
   1cb14:	9b03      	ldr	r3, [sp, #12]
   1cb16:	9b04      	ldr	r3, [sp, #16]
   1cb18:	b008      	add	sp, #32
   1cb1a:	4770      	bx	lr
   1cb1c:	deadbeef 	.word	0xdeadbeef
   1cb20:	40024000 	.word	0x40024000

0001cb24 <sys_clock_pll0_feed()>:
_ZL19sys_clock_pll0_feedv():
   1cb24:	4b03      	ldr	r3, [pc, #12]	; (1cb34 <sys_clock_pll0_feed()+0x10>)
   1cb26:	22aa      	movs	r2, #170	; 0xaa
   1cb28:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
   1cb2c:	2255      	movs	r2, #85	; 0x55
   1cb2e:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
   1cb32:	4770      	bx	lr
   1cb34:	400fc000 	.word	0x400fc000

0001cb38 <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]>:
_ZL23sys_clock_configure_plljjPiS_S_.constprop.0():
   1cb38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cb3c:	2400      	movs	r4, #0
   1cb3e:	600c      	str	r4, [r1, #0]
   1cb40:	6014      	str	r4, [r2, #0]
   1cb42:	601c      	str	r4, [r3, #0]
   1cb44:	f240 14ff 	movw	r4, #511	; 0x1ff
   1cb48:	f44f 55fa 	mov.w	r5, #8000	; 0x1f40
   1cb4c:	fb04 5a05 	mla	sl, r4, r5, r5
   1cb50:	2500      	movs	r5, #0
   1cb52:	f105 0c01 	add.w	ip, r5, #1
   1cb56:	fbba f8fc 	udiv	r8, sl, ip
   1cb5a:	f5a8 2686 	sub.w	r6, r8, #274432	; 0x43000
   1cb5e:	4f12      	ldr	r7, [pc, #72]	; (1cba8 <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x70>)
   1cb60:	f5a6 760e 	sub.w	r6, r6, #568	; 0x238
   1cb64:	42be      	cmp	r6, r7
   1cb66:	d904      	bls.n	1cb72 <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x3a>
   1cb68:	f1bc 0f20 	cmp.w	ip, #32
   1cb6c:	d016      	beq.n	1cb9c <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x64>
   1cb6e:	4665      	mov	r5, ip
   1cb70:	e7ef      	b.n	1cb52 <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x1a>
   1cb72:	2603      	movs	r6, #3
   1cb74:	1c77      	adds	r7, r6, #1
   1cb76:	f8df b034 	ldr.w	fp, [pc, #52]	; 1cbac <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x74>
   1cb7a:	fbb8 f9f7 	udiv	r9, r8, r7
   1cb7e:	45d9      	cmp	r9, fp
   1cb80:	d904      	bls.n	1cb8c <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x54>
   1cb82:	f5b7 7f80 	cmp.w	r7, #256	; 0x100
   1cb86:	d0ef      	beq.n	1cb68 <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x30>
   1cb88:	463e      	mov	r6, r7
   1cb8a:	e7f3      	b.n	1cb74 <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x3c>
   1cb8c:	4581      	cmp	r9, r0
   1cb8e:	600c      	str	r4, [r1, #0]
   1cb90:	6015      	str	r5, [r2, #0]
   1cb92:	601e      	str	r6, [r3, #0]
   1cb94:	d1f5      	bne.n	1cb82 <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x4a>
   1cb96:	2001      	movs	r0, #1
   1cb98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cb9c:	3c01      	subs	r4, #1
   1cb9e:	2c05      	cmp	r4, #5
   1cba0:	d1d2      	bne.n	1cb48 <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]+0x10>
   1cba2:	2000      	movs	r0, #0
   1cba4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cba8:	00043238 	.word	0x00043238
   1cbac:	000186a0 	.word	0x000186a0

0001cbb0 <sys_clock_configure()>:
_Z19sys_clock_configurev():
   1cbb0:	b530      	push	{r4, r5, lr}
   1cbb2:	4d2a      	ldr	r5, [pc, #168]	; (1cc5c <sys_clock_configure()+0xac>)
   1cbb4:	b085      	sub	sp, #20
   1cbb6:	f8d5 3080 	ldr.w	r3, [r5, #128]	; 0x80
   1cbba:	2400      	movs	r4, #0
   1cbbc:	f023 0302 	bic.w	r3, r3, #2
   1cbc0:	9401      	str	r4, [sp, #4]
   1cbc2:	9402      	str	r4, [sp, #8]
   1cbc4:	9403      	str	r4, [sp, #12]
   1cbc6:	f8c5 3080 	str.w	r3, [r5, #128]	; 0x80
   1cbca:	f7ff ffab 	bl	1cb24 <sys_clock_pll0_feed()>
   1cbce:	f8d5 3080 	ldr.w	r3, [r5, #128]	; 0x80
   1cbd2:	f023 0301 	bic.w	r3, r3, #1
   1cbd6:	f8c5 3080 	str.w	r3, [r5, #128]	; 0x80
   1cbda:	f7ff ffa3 	bl	1cb24 <sys_clock_pll0_feed()>
   1cbde:	f8c5 410c 	str.w	r4, [r5, #268]	; 0x10c
   1cbe2:	f8c5 4084 	str.w	r4, [r5, #132]	; 0x84
   1cbe6:	f7ff ff9d 	bl	1cb24 <sys_clock_pll0_feed()>
   1cbea:	f8c5 4104 	str.w	r4, [r5, #260]	; 0x104
   1cbee:	f64b 3080 	movw	r0, #48000	; 0xbb80
   1cbf2:	a901      	add	r1, sp, #4
   1cbf4:	aa02      	add	r2, sp, #8
   1cbf6:	ab03      	add	r3, sp, #12
   1cbf8:	f7ff ff9e 	bl	1cb38 <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]>
   1cbfc:	b930      	cbnz	r0, 1cc0c <sys_clock_configure()+0x5c>
   1cbfe:	f645 50c0 	movw	r0, #24000	; 0x5dc0
   1cc02:	a901      	add	r1, sp, #4
   1cc04:	aa02      	add	r2, sp, #8
   1cc06:	ab03      	add	r3, sp, #12
   1cc08:	f7ff ff96 	bl	1cb38 <sys_clock_configure_pll(unsigned int, unsigned int, int*, int*, int*) [clone .constprop.0]>
   1cc0c:	9b01      	ldr	r3, [sp, #4]
   1cc0e:	4d13      	ldr	r5, [pc, #76]	; (1cc5c <sys_clock_configure()+0xac>)
   1cc10:	f363 040f 	bfi	r4, r3, #0, #16
   1cc14:	9b02      	ldr	r3, [sp, #8]
   1cc16:	f363 4417 	bfi	r4, r3, #16, #8
   1cc1a:	2300      	movs	r3, #0
   1cc1c:	f8c5 310c 	str.w	r3, [r5, #268]	; 0x10c
   1cc20:	f8c5 4084 	str.w	r4, [r5, #132]	; 0x84
   1cc24:	f7ff ff7e 	bl	1cb24 <sys_clock_pll0_feed()>
   1cc28:	2301      	movs	r3, #1
   1cc2a:	f8c5 3080 	str.w	r3, [r5, #128]	; 0x80
   1cc2e:	f7ff ff79 	bl	1cb24 <sys_clock_pll0_feed()>
   1cc32:	f8d5 2088 	ldr.w	r2, [r5, #136]	; 0x88
   1cc36:	4b09      	ldr	r3, [pc, #36]	; (1cc5c <sys_clock_configure()+0xac>)
   1cc38:	0152      	lsls	r2, r2, #5
   1cc3a:	d5fa      	bpl.n	1cc32 <sys_clock_configure()+0x82>
   1cc3c:	9a03      	ldr	r2, [sp, #12]
   1cc3e:	f8c3 2104 	str.w	r2, [r3, #260]	; 0x104
   1cc42:	2203      	movs	r2, #3
   1cc44:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
   1cc48:	f7ff ff6c 	bl	1cb24 <sys_clock_pll0_feed()>
   1cc4c:	4b03      	ldr	r3, [pc, #12]	; (1cc5c <sys_clock_configure()+0xac>)
   1cc4e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
   1cc52:	f013 7f40 	tst.w	r3, #50331648	; 0x3000000
   1cc56:	d0f9      	beq.n	1cc4c <sys_clock_configure()+0x9c>
   1cc58:	b005      	add	sp, #20
   1cc5a:	bd30      	pop	{r4, r5, pc}
   1cc5c:	400fc000 	.word	0x400fc000

0001cc60 <sys_get_cpu_clock>:
sys_get_cpu_clock():
   1cc60:	4b27      	ldr	r3, [pc, #156]	; (1cd00 <sys_get_cpu_clock+0xa0>)
   1cc62:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
   1cc66:	f3c2 6201 	ubfx	r2, r2, #24, #2
   1cc6a:	2a03      	cmp	r2, #3
   1cc6c:	f8d3 210c 	ldr.w	r2, [r3, #268]	; 0x10c
   1cc70:	f002 0203 	and.w	r2, r2, #3
   1cc74:	d132      	bne.n	1ccdc <sys_get_cpu_clock+0x7c>
   1cc76:	2a01      	cmp	r2, #1
   1cc78:	f8d3 0088 	ldr.w	r0, [r3, #136]	; 0x88
   1cc7c:	d009      	beq.n	1cc92 <sys_get_cpu_clock+0x32>
   1cc7e:	2a02      	cmp	r2, #2
   1cc80:	d01a      	beq.n	1ccb8 <sys_get_cpu_clock+0x58>
   1cc82:	f8d3 1088 	ldr.w	r1, [r3, #136]	; 0x88
   1cc86:	f3c0 000e 	ubfx	r0, r0, #0, #15
   1cc8a:	f8d3 2104 	ldr.w	r2, [r3, #260]	; 0x104
   1cc8e:	4b1d      	ldr	r3, [pc, #116]	; (1cd04 <sys_get_cpu_clock+0xa4>)
   1cc90:	e006      	b.n	1cca0 <sys_get_cpu_clock+0x40>
   1cc92:	f8d3 1088 	ldr.w	r1, [r3, #136]	; 0x88
   1cc96:	f8d3 2104 	ldr.w	r2, [r3, #260]	; 0x104
   1cc9a:	4b1b      	ldr	r3, [pc, #108]	; (1cd08 <sys_get_cpu_clock+0xa8>)
   1cc9c:	f3c0 000e 	ubfx	r0, r0, #0, #15
   1cca0:	fb00 3303 	mla	r3, r0, r3, r3
   1cca4:	f3c1 4107 	ubfx	r1, r1, #16, #8
   1cca8:	3101      	adds	r1, #1
   1ccaa:	b2d2      	uxtb	r2, r2
   1ccac:	fbb3 f0f1 	udiv	r0, r3, r1
   1ccb0:	3201      	adds	r2, #1
   1ccb2:	fbb0 f0f2 	udiv	r0, r0, r2
   1ccb6:	4770      	bx	lr
   1ccb8:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
   1ccbc:	f3c0 000e 	ubfx	r0, r0, #0, #15
   1ccc0:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
   1ccc4:	3001      	adds	r0, #1
   1ccc6:	f3c2 4207 	ubfx	r2, r2, #16, #8
   1ccca:	3201      	adds	r2, #1
   1cccc:	0400      	lsls	r0, r0, #16
   1ccce:	b2db      	uxtb	r3, r3
   1ccd0:	fbb0 f0f2 	udiv	r0, r0, r2
   1ccd4:	3301      	adds	r3, #1
   1ccd6:	fbb0 f0f3 	udiv	r0, r0, r3
   1ccda:	4770      	bx	lr
   1ccdc:	f8d3 0104 	ldr.w	r0, [r3, #260]	; 0x104
   1cce0:	2a01      	cmp	r2, #1
   1cce2:	b2c0      	uxtb	r0, r0
   1cce4:	f100 0001 	add.w	r0, r0, #1
   1cce8:	d003      	beq.n	1ccf2 <sys_get_cpu_clock+0x92>
   1ccea:	2a02      	cmp	r2, #2
   1ccec:	d003      	beq.n	1ccf6 <sys_get_cpu_clock+0x96>
   1ccee:	4b07      	ldr	r3, [pc, #28]	; (1cd0c <sys_get_cpu_clock+0xac>)
   1ccf0:	e003      	b.n	1ccfa <sys_get_cpu_clock+0x9a>
   1ccf2:	4b07      	ldr	r3, [pc, #28]	; (1cd10 <sys_get_cpu_clock+0xb0>)
   1ccf4:	e001      	b.n	1ccfa <sys_get_cpu_clock+0x9a>
   1ccf6:	f44f 4300 	mov.w	r3, #32768	; 0x8000
   1ccfa:	fbb3 f0f0 	udiv	r0, r3, r0
   1ccfe:	4770      	bx	lr
   1cd00:	400fc000 	.word	0x400fc000
   1cd04:	007a1200 	.word	0x007a1200
   1cd08:	016e3600 	.word	0x016e3600
   1cd0c:	003d0900 	.word	0x003d0900
   1cd10:	00b71b00 	.word	0x00b71b00

0001cd14 <uart0_init>:
uart0_init():
   1cd14:	b510      	push	{r4, lr}
   1cd16:	4604      	mov	r4, r0
   1cd18:	f7ff ffa2 	bl	1cc60 <sys_get_cpu_clock>
   1cd1c:	0124      	lsls	r4, r4, #4
   1cd1e:	fbb0 f0f4 	udiv	r0, r0, r4
   1cd22:	f000 fd13 	bl	1d74c <__aeabi_ui2d>
   1cd26:	2200      	movs	r2, #0
   1cd28:	4b10      	ldr	r3, [pc, #64]	; (1cd6c <uart0_init+0x58>)
   1cd2a:	f000 fbd3 	bl	1d4d4 <__adddf3>
   1cd2e:	f000 ff95 	bl	1dc5c <__aeabi_d2uiz>
   1cd32:	2101      	movs	r1, #1
   1cd34:	b284      	uxth	r4, r0
   1cd36:	2003      	movs	r0, #3
   1cd38:	f7ff fdc6 	bl	1c8c8 <lpc_pconp>
   1cd3c:	2003      	movs	r0, #3
   1cd3e:	2101      	movs	r1, #1
   1cd40:	f7ff fdda 	bl	1c8f8 <lpc_pclk>
   1cd44:	4b0a      	ldr	r3, [pc, #40]	; (1cd70 <uart0_init+0x5c>)
   1cd46:	681a      	ldr	r2, [r3, #0]
   1cd48:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
   1cd4c:	601a      	str	r2, [r3, #0]
   1cd4e:	681a      	ldr	r2, [r3, #0]
   1cd50:	f042 0250 	orr.w	r2, r2, #80	; 0x50
   1cd54:	601a      	str	r2, [r3, #0]
   1cd56:	f5a3 3300 	sub.w	r3, r3, #131072	; 0x20000
   1cd5a:	2280      	movs	r2, #128	; 0x80
   1cd5c:	731a      	strb	r2, [r3, #12]
   1cd5e:	0a22      	lsrs	r2, r4, #8
   1cd60:	711a      	strb	r2, [r3, #4]
   1cd62:	b2e4      	uxtb	r4, r4
   1cd64:	2203      	movs	r2, #3
   1cd66:	701c      	strb	r4, [r3, #0]
   1cd68:	731a      	strb	r2, [r3, #12]
   1cd6a:	bd10      	pop	{r4, pc}
   1cd6c:	3fe00000 	.word	0x3fe00000
   1cd70:	4002c000 	.word	0x4002c000

0001cd74 <uart0_getchar>:
uart0_getchar():
   1cd74:	4b03      	ldr	r3, [pc, #12]	; (1cd84 <uart0_getchar+0x10>)
   1cd76:	681b      	ldr	r3, [r3, #0]
   1cd78:	07db      	lsls	r3, r3, #31
   1cd7a:	d5fb      	bpl.n	1cd74 <uart0_getchar>
   1cd7c:	4b02      	ldr	r3, [pc, #8]	; (1cd88 <uart0_getchar+0x14>)
   1cd7e:	7818      	ldrb	r0, [r3, #0]
   1cd80:	b240      	sxtb	r0, r0
   1cd82:	4770      	bx	lr
   1cd84:	4000c014 	.word	0x4000c014
   1cd88:	4000c000 	.word	0x4000c000

0001cd8c <uart0_putchar>:
uart0_putchar():
   1cd8c:	4b04      	ldr	r3, [pc, #16]	; (1cda0 <uart0_putchar+0x14>)
   1cd8e:	b2c0      	uxtb	r0, r0
   1cd90:	7018      	strb	r0, [r3, #0]
   1cd92:	4b04      	ldr	r3, [pc, #16]	; (1cda4 <uart0_putchar+0x18>)
   1cd94:	681b      	ldr	r3, [r3, #0]
   1cd96:	065b      	lsls	r3, r3, #25
   1cd98:	d5fb      	bpl.n	1cd92 <uart0_putchar+0x6>
   1cd9a:	2001      	movs	r0, #1
   1cd9c:	4770      	bx	lr
   1cd9e:	bf00      	nop
   1cda0:	4000c000 	.word	0x4000c000
   1cda4:	4000c014 	.word	0x4000c014

0001cda8 <uart0_puts>:
uart0_puts():
   1cda8:	b510      	push	{r4, lr}
   1cdaa:	1e44      	subs	r4, r0, #1
   1cdac:	f814 0f01 	ldrb.w	r0, [r4, #1]!
   1cdb0:	b118      	cbz	r0, 1cdba <uart0_puts+0x12>
   1cdb2:	b240      	sxtb	r0, r0
   1cdb4:	f7ff ffea 	bl	1cd8c <uart0_putchar>
   1cdb8:	e7f8      	b.n	1cdac <uart0_puts+0x4>
   1cdba:	200a      	movs	r0, #10
   1cdbc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   1cdc0:	f7ff bfe4 	b.w	1cd8c <uart0_putchar>

0001cdc4 <__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()>:
_ZN10__cxxabiv121__vmi_class_type_infoD1Ev():
   1cdc4:	b510      	push	{r4, lr}
   1cdc6:	4b03      	ldr	r3, [pc, #12]	; (1cdd4 <__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()+0x10>)
   1cdc8:	4604      	mov	r4, r0
   1cdca:	6003      	str	r3, [r0, #0]
   1cdcc:	f000 fa96 	bl	1d2fc <__cxxabiv1::__class_type_info::~__class_type_info()>
   1cdd0:	4620      	mov	r0, r4
   1cdd2:	bd10      	pop	{r4, pc}
   1cdd4:	00027730 	.word	0x00027730

0001cdd8 <__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()>:
_ZN10__cxxabiv121__vmi_class_type_infoD0Ev():
   1cdd8:	b510      	push	{r4, lr}
   1cdda:	4604      	mov	r4, r0
   1cddc:	f7ff fff2 	bl	1cdc4 <__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()>
   1cde0:	4620      	mov	r0, r4
   1cde2:	f7f3 fa47 	bl	10274 <operator delete(void*)>
   1cde6:	4620      	mov	r0, r4
   1cde8:	bd10      	pop	{r4, pc}

0001cdea <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>:
_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_():
   1cdea:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
   1cdee:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
   1cdf2:	4604      	mov	r4, r0
   1cdf4:	454a      	cmp	r2, r9
   1cdf6:	460f      	mov	r7, r1
   1cdf8:	4616      	mov	r6, r2
   1cdfa:	4698      	mov	r8, r3
   1cdfc:	d105      	bne.n	1ce0a <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x20>
   1cdfe:	4619      	mov	r1, r3
   1ce00:	f000 fa42 	bl	1d288 <std::type_info::operator==(std::type_info const&) const>
   1ce04:	b108      	cbz	r0, 1ce0a <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x20>
   1ce06:	2006      	movs	r0, #6
   1ce08:	e029      	b.n	1ce5e <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x74>
   1ce0a:	68e3      	ldr	r3, [r4, #12]
   1ce0c:	eb04 04c3 	add.w	r4, r4, r3, lsl #3
   1ce10:	1e5d      	subs	r5, r3, #1
   1ce12:	3404      	adds	r4, #4
   1ce14:	1c6b      	adds	r3, r5, #1
   1ce16:	d021      	beq.n	1ce5c <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x72>
   1ce18:	68a0      	ldr	r0, [r4, #8]
   1ce1a:	0783      	lsls	r3, r0, #30
   1ce1c:	d51b      	bpl.n	1ce56 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x6c>
   1ce1e:	f010 0a01 	ands.w	sl, r0, #1
   1ce22:	ea4f 2220 	mov.w	r2, r0, asr #8
   1ce26:	d003      	beq.n	1ce30 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x46>
   1ce28:	1cf9      	adds	r1, r7, #3
   1ce2a:	d014      	beq.n	1ce56 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x6c>
   1ce2c:	6833      	ldr	r3, [r6, #0]
   1ce2e:	589a      	ldr	r2, [r3, r2]
   1ce30:	6860      	ldr	r0, [r4, #4]
   1ce32:	4639      	mov	r1, r7
   1ce34:	6803      	ldr	r3, [r0, #0]
   1ce36:	f8cd 9000 	str.w	r9, [sp]
   1ce3a:	f8d3 c020 	ldr.w	ip, [r3, #32]
   1ce3e:	4432      	add	r2, r6
   1ce40:	4643      	mov	r3, r8
   1ce42:	47e0      	blx	ip
   1ce44:	2803      	cmp	r0, #3
   1ce46:	d906      	bls.n	1ce56 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x6c>
   1ce48:	f1ba 0f00 	cmp.w	sl, #0
   1ce4c:	d007      	beq.n	1ce5e <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x74>
   1ce4e:	f040 0001 	orr.w	r0, r0, #1
   1ce52:	b2c0      	uxtb	r0, r0
   1ce54:	e003      	b.n	1ce5e <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x74>
   1ce56:	3d01      	subs	r5, #1
   1ce58:	3c08      	subs	r4, #8
   1ce5a:	e7db      	b.n	1ce14 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x2a>
   1ce5c:	2001      	movs	r0, #1
   1ce5e:	b002      	add	sp, #8
   1ce60:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0001ce64 <__cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>:
_ZNK10__cxxabiv117__class_type_info17__find_public_srcEiPKvPKS0_S2_():
   1ce64:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   1ce66:	1e0d      	subs	r5, r1, #0
   1ce68:	9c08      	ldr	r4, [sp, #32]
   1ce6a:	db05      	blt.n	1ce78 <__cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x14>
   1ce6c:	1950      	adds	r0, r2, r5
   1ce6e:	4284      	cmp	r4, r0
   1ce70:	bf14      	ite	ne
   1ce72:	2001      	movne	r0, #1
   1ce74:	2006      	moveq	r0, #6
   1ce76:	e007      	b.n	1ce88 <__cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x24>
   1ce78:	3502      	adds	r5, #2
   1ce7a:	d004      	beq.n	1ce86 <__cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x22>
   1ce7c:	6805      	ldr	r5, [r0, #0]
   1ce7e:	9400      	str	r4, [sp, #0]
   1ce80:	6a2c      	ldr	r4, [r5, #32]
   1ce82:	47a0      	blx	r4
   1ce84:	e000      	b.n	1ce88 <__cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x24>
   1ce86:	2001      	movs	r0, #1
   1ce88:	b003      	add	sp, #12
   1ce8a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0001ce8c <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const>:
_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE():
   1ce8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ce90:	b08f      	sub	sp, #60	; 0x3c
   1ce92:	9c1b      	ldr	r4, [sp, #108]	; 0x6c
   1ce94:	9305      	str	r3, [sp, #20]
   1ce96:	68a3      	ldr	r3, [r4, #8]
   1ce98:	4688      	mov	r8, r1
   1ce9a:	06d9      	lsls	r1, r3, #27
   1ce9c:	bf48      	it	mi
   1ce9e:	6883      	ldrmi	r3, [r0, #8]
   1cea0:	4681      	mov	r9, r0
   1cea2:	9e18      	ldr	r6, [sp, #96]	; 0x60
   1cea4:	981a      	ldr	r0, [sp, #104]	; 0x68
   1cea6:	bf48      	it	mi
   1cea8:	60a3      	strmi	r3, [r4, #8]
   1ceaa:	4286      	cmp	r6, r0
   1ceac:	4693      	mov	fp, r2
   1ceae:	d108      	bne.n	1cec2 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x36>
   1ceb0:	4648      	mov	r0, r9
   1ceb2:	9919      	ldr	r1, [sp, #100]	; 0x64
   1ceb4:	f000 f9e8 	bl	1d288 <std::type_info::operator==(std::type_info const&) const>
   1ceb8:	b118      	cbz	r0, 1cec2 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x36>
   1ceba:	f884 b005 	strb.w	fp, [r4, #5]
   1cebe:	2000      	movs	r0, #0
   1cec0:	e119      	b.n	1d0f6 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x26a>
   1cec2:	4648      	mov	r0, r9
   1cec4:	9905      	ldr	r1, [sp, #20]
   1cec6:	f000 f9df 	bl	1d288 <std::type_info::operator==(std::type_info const&) const>
   1ceca:	b1b8      	cbz	r0, 1cefc <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x70>
   1cecc:	9e18      	ldr	r6, [sp, #96]	; 0x60
   1cece:	f1b8 0f00 	cmp.w	r8, #0
   1ced2:	6026      	str	r6, [r4, #0]
   1ced4:	f884 b004 	strb.w	fp, [r4, #4]
   1ced8:	db0a      	blt.n	1cef0 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x64>
   1ceda:	44b0      	add	r8, r6
   1cedc:	9e1a      	ldr	r6, [sp, #104]	; 0x68
   1cede:	4546      	cmp	r6, r8
   1cee0:	bf14      	ite	ne
   1cee2:	f04f 0801 	movne.w	r8, #1
   1cee6:	f04f 0806 	moveq.w	r8, #6
   1ceea:	f884 8006 	strb.w	r8, [r4, #6]
   1ceee:	e7e6      	b.n	1cebe <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x32>
   1cef0:	f118 0f02 	cmn.w	r8, #2
   1cef4:	d1e3      	bne.n	1cebe <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x32>
   1cef6:	2301      	movs	r3, #1
   1cef8:	71a3      	strb	r3, [r4, #6]
   1cefa:	e7e0      	b.n	1cebe <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x32>
   1cefc:	f1b8 0f00 	cmp.w	r8, #0
   1cf00:	bfa8      	it	ge
   1cf02:	9e1a      	ldrge	r6, [sp, #104]	; 0x68
   1cf04:	f04f 0700 	mov.w	r7, #0
   1cf08:	bfa6      	itte	ge
   1cf0a:	ebc8 0606 	rsbge	r6, r8, r6
   1cf0e:	9606      	strge	r6, [sp, #24]
   1cf10:	9006      	strlt	r0, [sp, #24]
   1cf12:	9709      	str	r7, [sp, #36]	; 0x24
   1cf14:	2601      	movs	r6, #1
   1cf16:	f8d9 300c 	ldr.w	r3, [r9, #12]
   1cf1a:	9607      	str	r6, [sp, #28]
   1cf1c:	eb09 0ac3 	add.w	sl, r9, r3, lsl #3
   1cf20:	1e5e      	subs	r6, r3, #1
   1cf22:	9608      	str	r6, [sp, #32]
   1cf24:	f10a 0a04 	add.w	sl, sl, #4
   1cf28:	9e08      	ldr	r6, [sp, #32]
   1cf2a:	3601      	adds	r6, #1
   1cf2c:	f000 809e 	beq.w	1d06c <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1e0>
   1cf30:	2300      	movs	r3, #0
   1cf32:	930b      	str	r3, [sp, #44]	; 0x2c
   1cf34:	f88d 3030 	strb.w	r3, [sp, #48]	; 0x30
   1cf38:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
   1cf3c:	f88d 3032 	strb.w	r3, [sp, #50]	; 0x32
   1cf40:	f8da 3008 	ldr.w	r3, [sl, #8]
   1cf44:	68a5      	ldr	r5, [r4, #8]
   1cf46:	07da      	lsls	r2, r3, #31
   1cf48:	950d      	str	r5, [sp, #52]	; 0x34
   1cf4a:	ea4f 2123 	mov.w	r1, r3, asr #8
   1cf4e:	d505      	bpl.n	1cf5c <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0xd0>
   1cf50:	9e18      	ldr	r6, [sp, #96]	; 0x60
   1cf52:	f04b 0201 	orr.w	r2, fp, #1
   1cf56:	6830      	ldr	r0, [r6, #0]
   1cf58:	5841      	ldr	r1, [r0, r1]
   1cf5a:	e000      	b.n	1cf5e <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0xd2>
   1cf5c:	465a      	mov	r2, fp
   1cf5e:	9e18      	ldr	r6, [sp, #96]	; 0x60
   1cf60:	4431      	add	r1, r6
   1cf62:	9e06      	ldr	r6, [sp, #24]
   1cf64:	b136      	cbz	r6, 1cf74 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0xe8>
   1cf66:	42b1      	cmp	r1, r6
   1cf68:	9e07      	ldr	r6, [sp, #28]
   1cf6a:	bf94      	ite	ls
   1cf6c:	2000      	movls	r0, #0
   1cf6e:	2001      	movhi	r0, #1
   1cf70:	42b0      	cmp	r0, r6
   1cf72:	d070      	beq.n	1d056 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1ca>
   1cf74:	079e      	lsls	r6, r3, #30
   1cf76:	d406      	bmi.n	1cf86 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0xfa>
   1cf78:	f118 0f02 	cmn.w	r8, #2
   1cf7c:	d101      	bne.n	1cf82 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0xf6>
   1cf7e:	07ad      	lsls	r5, r5, #30
   1cf80:	d06e      	beq.n	1d060 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1d4>
   1cf82:	f002 02fd 	and.w	r2, r2, #253	; 0xfd
   1cf86:	f8da 0004 	ldr.w	r0, [sl, #4]
   1cf8a:	9e19      	ldr	r6, [sp, #100]	; 0x64
   1cf8c:	6803      	ldr	r3, [r0, #0]
   1cf8e:	9601      	str	r6, [sp, #4]
   1cf90:	9e1a      	ldr	r6, [sp, #104]	; 0x68
   1cf92:	9100      	str	r1, [sp, #0]
   1cf94:	a90b      	add	r1, sp, #44	; 0x2c
   1cf96:	9103      	str	r1, [sp, #12]
   1cf98:	9602      	str	r6, [sp, #8]
   1cf9a:	69dd      	ldr	r5, [r3, #28]
   1cf9c:	4641      	mov	r1, r8
   1cf9e:	9b05      	ldr	r3, [sp, #20]
   1cfa0:	47a8      	blx	r5
   1cfa2:	7962      	ldrb	r2, [r4, #5]
   1cfa4:	f89d 1031 	ldrb.w	r1, [sp, #49]	; 0x31
   1cfa8:	f89d 5032 	ldrb.w	r5, [sp, #50]	; 0x32
   1cfac:	4311      	orrs	r1, r2
   1cfae:	2d06      	cmp	r5, #6
   1cfb0:	4603      	mov	r3, r0
   1cfb2:	7161      	strb	r1, [r4, #5]
   1cfb4:	d001      	beq.n	1cfba <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x12e>
   1cfb6:	2d02      	cmp	r5, #2
   1cfb8:	d106      	bne.n	1cfc8 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x13c>
   1cfba:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   1cfbc:	71a5      	strb	r5, [r4, #6]
   1cfbe:	6023      	str	r3, [r4, #0]
   1cfc0:	f89d 3030 	ldrb.w	r3, [sp, #48]	; 0x30
   1cfc4:	7123      	strb	r3, [r4, #4]
   1cfc6:	e096      	b.n	1d0f6 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x26a>
   1cfc8:	6822      	ldr	r2, [r4, #0]
   1cfca:	b977      	cbnz	r7, 1cfea <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x15e>
   1cfcc:	b96a      	cbnz	r2, 1cfea <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x15e>
   1cfce:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   1cfd0:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
   1cfd4:	6022      	str	r2, [r4, #0]
   1cfd6:	7125      	strb	r5, [r4, #4]
   1cfd8:	2a00      	cmp	r2, #0
   1cfda:	d037      	beq.n	1d04c <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1c0>
   1cfdc:	2900      	cmp	r1, #0
   1cfde:	d035      	beq.n	1d04c <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1c0>
   1cfe0:	f8d9 2008 	ldr.w	r2, [r9, #8]
   1cfe4:	07d2      	lsls	r2, r2, #31
   1cfe6:	d431      	bmi.n	1d04c <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1c0>
   1cfe8:	e085      	b.n	1d0f6 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x26a>
   1cfea:	b152      	cbz	r2, 1d002 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x176>
   1cfec:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   1cfee:	429a      	cmp	r2, r3
   1cff0:	d105      	bne.n	1cffe <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x172>
   1cff2:	7923      	ldrb	r3, [r4, #4]
   1cff4:	f89d 2030 	ldrb.w	r2, [sp, #48]	; 0x30
   1cff8:	4313      	orrs	r3, r2
   1cffa:	7123      	strb	r3, [r4, #4]
   1cffc:	e025      	b.n	1d04a <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1be>
   1cffe:	b91b      	cbnz	r3, 1d008 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x17c>
   1d000:	b910      	cbnz	r0, 1d008 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x17c>
   1d002:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   1d004:	b30b      	cbz	r3, 1d04a <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1be>
   1d006:	b307      	cbz	r7, 1d04a <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1be>
   1d008:	2903      	cmp	r1, #3
   1d00a:	79a6      	ldrb	r6, [r4, #6]
   1d00c:	d904      	bls.n	1d018 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x18c>
   1d00e:	07cb      	lsls	r3, r1, #31
   1d010:	d534      	bpl.n	1d07c <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1f0>
   1d012:	68a3      	ldr	r3, [r4, #8]
   1d014:	0799      	lsls	r1, r3, #30
   1d016:	d531      	bpl.n	1d07c <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1f0>
   1d018:	2e00      	cmp	r6, #0
   1d01a:	d043      	beq.n	1d0a4 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x218>
   1d01c:	2d00      	cmp	r5, #0
   1d01e:	d04a      	beq.n	1d0b6 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x22a>
   1d020:	ea86 0305 	eor.w	r3, r6, r5
   1d024:	b2db      	uxtb	r3, r3
   1d026:	2b03      	cmp	r3, #3
   1d028:	d92f      	bls.n	1d08a <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1fe>
   1d02a:	2d03      	cmp	r5, #3
   1d02c:	d906      	bls.n	1d03c <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1b0>
   1d02e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   1d030:	462e      	mov	r6, r5
   1d032:	6023      	str	r3, [r4, #0]
   1d034:	f89d 3030 	ldrb.w	r3, [sp, #48]	; 0x30
   1d038:	2700      	movs	r7, #0
   1d03a:	7123      	strb	r3, [r4, #4]
   1d03c:	07b3      	lsls	r3, r6, #30
   1d03e:	71a6      	strb	r6, [r4, #6]
   1d040:	f53f af3d 	bmi.w	1cebe <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x32>
   1d044:	f016 0001 	ands.w	r0, r6, #1
   1d048:	d055      	beq.n	1d0f6 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x26a>
   1d04a:	463b      	mov	r3, r7
   1d04c:	7962      	ldrb	r2, [r4, #5]
   1d04e:	2a04      	cmp	r2, #4
   1d050:	d004      	beq.n	1d05c <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1d0>
   1d052:	461f      	mov	r7, r3
   1d054:	e004      	b.n	1d060 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1d4>
   1d056:	2601      	movs	r6, #1
   1d058:	9609      	str	r6, [sp, #36]	; 0x24
   1d05a:	e001      	b.n	1d060 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1d4>
   1d05c:	4618      	mov	r0, r3
   1d05e:	e04a      	b.n	1d0f6 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x26a>
   1d060:	9e08      	ldr	r6, [sp, #32]
   1d062:	f1aa 0a08 	sub.w	sl, sl, #8
   1d066:	3e01      	subs	r6, #1
   1d068:	9608      	str	r6, [sp, #32]
   1d06a:	e75d      	b.n	1cf28 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x9c>
   1d06c:	9e09      	ldr	r6, [sp, #36]	; 0x24
   1d06e:	b11e      	cbz	r6, 1d078 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1ec>
   1d070:	9e07      	ldr	r6, [sp, #28]
   1d072:	b10e      	cbz	r6, 1d078 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1ec>
   1d074:	2600      	movs	r6, #0
   1d076:	e74e      	b.n	1cf16 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x8a>
   1d078:	4638      	mov	r0, r7
   1d07a:	e03c      	b.n	1d0f6 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x26a>
   1d07c:	2e00      	cmp	r6, #0
   1d07e:	bf08      	it	eq
   1d080:	2601      	moveq	r6, #1
   1d082:	2d00      	cmp	r5, #0
   1d084:	bf08      	it	eq
   1d086:	2501      	moveq	r5, #1
   1d088:	e7ca      	b.n	1d020 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x194>
   1d08a:	4035      	ands	r5, r6
   1d08c:	b2ed      	uxtb	r5, r5
   1d08e:	2300      	movs	r3, #0
   1d090:	2d03      	cmp	r5, #3
   1d092:	6023      	str	r3, [r4, #0]
   1d094:	d903      	bls.n	1d09e <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x212>
   1d096:	2302      	movs	r3, #2
   1d098:	71a3      	strb	r3, [r4, #6]
   1d09a:	2001      	movs	r0, #1
   1d09c:	e02b      	b.n	1d0f6 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x26a>
   1d09e:	2301      	movs	r3, #1
   1d0a0:	71a3      	strb	r3, [r4, #6]
   1d0a2:	e7d3      	b.n	1d04c <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1c0>
   1d0a4:	2d03      	cmp	r5, #3
   1d0a6:	d913      	bls.n	1d0d0 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x244>
   1d0a8:	07eb      	lsls	r3, r5, #31
   1d0aa:	d50d      	bpl.n	1d0c8 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x23c>
   1d0ac:	f8d9 3008 	ldr.w	r3, [r9, #8]
   1d0b0:	079e      	lsls	r6, r3, #30
   1d0b2:	d509      	bpl.n	1d0c8 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x23c>
   1d0b4:	e00c      	b.n	1d0d0 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x244>
   1d0b6:	2e03      	cmp	r6, #3
   1d0b8:	d913      	bls.n	1d0e2 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x256>
   1d0ba:	07f1      	lsls	r1, r6, #31
   1d0bc:	d506      	bpl.n	1d0cc <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x240>
   1d0be:	f8d9 3008 	ldr.w	r3, [r9, #8]
   1d0c2:	079a      	lsls	r2, r3, #30
   1d0c4:	d40d      	bmi.n	1d0e2 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x256>
   1d0c6:	e001      	b.n	1d0cc <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x240>
   1d0c8:	2601      	movs	r6, #1
   1d0ca:	e7a9      	b.n	1d020 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x194>
   1d0cc:	2501      	movs	r5, #1
   1d0ce:	e7a7      	b.n	1d020 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x194>
   1d0d0:	9e1a      	ldr	r6, [sp, #104]	; 0x68
   1d0d2:	9805      	ldr	r0, [sp, #20]
   1d0d4:	9600      	str	r6, [sp, #0]
   1d0d6:	4641      	mov	r1, r8
   1d0d8:	9b19      	ldr	r3, [sp, #100]	; 0x64
   1d0da:	f7ff fec3 	bl	1ce64 <__cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>
   1d0de:	4606      	mov	r6, r0
   1d0e0:	e79c      	b.n	1d01c <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x190>
   1d0e2:	981a      	ldr	r0, [sp, #104]	; 0x68
   1d0e4:	4641      	mov	r1, r8
   1d0e6:	9000      	str	r0, [sp, #0]
   1d0e8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   1d0ea:	9805      	ldr	r0, [sp, #20]
   1d0ec:	9b19      	ldr	r3, [sp, #100]	; 0x64
   1d0ee:	f7ff feb9 	bl	1ce64 <__cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>
   1d0f2:	4605      	mov	r5, r0
   1d0f4:	e794      	b.n	1d020 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x194>
   1d0f6:	b00f      	add	sp, #60	; 0x3c
   1d0f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001d0fc <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const>:
_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE():
   1d0fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d100:	b087      	sub	sp, #28
   1d102:	4606      	mov	r6, r0
   1d104:	9101      	str	r1, [sp, #4]
   1d106:	4617      	mov	r7, r2
   1d108:	461c      	mov	r4, r3
   1d10a:	f000 f90a 	bl	1d322 <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const>
   1d10e:	2800      	cmp	r0, #0
   1d110:	d17d      	bne.n	1d20e <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x112>
   1d112:	f8d4 8008 	ldr.w	r8, [r4, #8]
   1d116:	68f5      	ldr	r5, [r6, #12]
   1d118:	f018 0f10 	tst.w	r8, #16
   1d11c:	f105 39ff 	add.w	r9, r5, #4294967295
   1d120:	bf18      	it	ne
   1d122:	f8d6 8008 	ldrne.w	r8, [r6, #8]
   1d126:	3502      	adds	r5, #2
   1d128:	eb06 05c5 	add.w	r5, r6, r5, lsl #3
   1d12c:	f1b9 3fff 	cmp.w	r9, #4294967295
   1d130:	d066      	beq.n	1d200 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x104>
   1d132:	f855 2c04 	ldr.w	r2, [r5, #-4]
   1d136:	2300      	movs	r3, #0
   1d138:	9302      	str	r3, [sp, #8]
   1d13a:	f88d 300c 	strb.w	r3, [sp, #12]
   1d13e:	9305      	str	r3, [sp, #20]
   1d140:	f3c2 0340 	ubfx	r3, r2, #1, #1
   1d144:	f8cd 8010 	str.w	r8, [sp, #16]
   1d148:	f002 0b01 	and.w	fp, r2, #1
   1d14c:	9300      	str	r3, [sp, #0]
   1d14e:	b913      	cbnz	r3, 1d156 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x5a>
   1d150:	f018 0f01 	tst.w	r8, #1
   1d154:	d050      	beq.n	1d1f8 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xfc>
   1d156:	b13f      	cbz	r7, 1d168 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x6c>
   1d158:	1212      	asrs	r2, r2, #8
   1d15a:	f1bb 0f00 	cmp.w	fp, #0
   1d15e:	d001      	beq.n	1d164 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x68>
   1d160:	683b      	ldr	r3, [r7, #0]
   1d162:	589a      	ldr	r2, [r3, r2]
   1d164:	443a      	add	r2, r7
   1d166:	e000      	b.n	1d16a <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x6e>
   1d168:	463a      	mov	r2, r7
   1d16a:	f855 0c08 	ldr.w	r0, [r5, #-8]
   1d16e:	f10d 0a08 	add.w	sl, sp, #8
   1d172:	6803      	ldr	r3, [r0, #0]
   1d174:	9901      	ldr	r1, [sp, #4]
   1d176:	f8d3 c018 	ldr.w	ip, [r3, #24]
   1d17a:	4653      	mov	r3, sl
   1d17c:	47e0      	blx	ip
   1d17e:	2800      	cmp	r0, #0
   1d180:	d03a      	beq.n	1d1f8 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xfc>
   1d182:	9b05      	ldr	r3, [sp, #20]
   1d184:	2b08      	cmp	r3, #8
   1d186:	d105      	bne.n	1d194 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x98>
   1d188:	f1bb 0f00 	cmp.w	fp, #0
   1d18c:	d002      	beq.n	1d194 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x98>
   1d18e:	f855 3c08 	ldr.w	r3, [r5, #-8]
   1d192:	9305      	str	r3, [sp, #20]
   1d194:	f89d 300c 	ldrb.w	r3, [sp, #12]
   1d198:	2b03      	cmp	r3, #3
   1d19a:	d902      	bls.n	1d1a2 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xa6>
   1d19c:	9a00      	ldr	r2, [sp, #0]
   1d19e:	2a00      	cmp	r2, #0
   1d1a0:	d037      	beq.n	1d212 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x116>
   1d1a2:	68e1      	ldr	r1, [r4, #12]
   1d1a4:	b999      	cbnz	r1, 1d1ce <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xd2>
   1d1a6:	e89a 000f 	ldmia.w	sl, {r0, r1, r2, r3}
   1d1aa:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
   1d1ae:	7923      	ldrb	r3, [r4, #4]
   1d1b0:	2b03      	cmp	r3, #3
   1d1b2:	d92c      	bls.n	1d20e <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x112>
   1d1b4:	079a      	lsls	r2, r3, #30
   1d1b6:	d503      	bpl.n	1d1c0 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xc4>
   1d1b8:	68b3      	ldr	r3, [r6, #8]
   1d1ba:	f013 0f01 	tst.w	r3, #1
   1d1be:	e004      	b.n	1d1ca <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xce>
   1d1c0:	07db      	lsls	r3, r3, #31
   1d1c2:	d524      	bpl.n	1d20e <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x112>
   1d1c4:	68b3      	ldr	r3, [r6, #8]
   1d1c6:	f013 0f02 	tst.w	r3, #2
   1d1ca:	d115      	bne.n	1d1f8 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xfc>
   1d1cc:	e01f      	b.n	1d20e <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x112>
   1d1ce:	6823      	ldr	r3, [r4, #0]
   1d1d0:	9a02      	ldr	r2, [sp, #8]
   1d1d2:	4293      	cmp	r3, r2
   1d1d4:	d002      	beq.n	1d1dc <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xe0>
   1d1d6:	2300      	movs	r3, #0
   1d1d8:	6023      	str	r3, [r4, #0]
   1d1da:	e016      	b.n	1d20a <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x10e>
   1d1dc:	b93b      	cbnz	r3, 1d1ee <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xf2>
   1d1de:	9805      	ldr	r0, [sp, #20]
   1d1e0:	2808      	cmp	r0, #8
   1d1e2:	d012      	beq.n	1d20a <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x10e>
   1d1e4:	2908      	cmp	r1, #8
   1d1e6:	d010      	beq.n	1d20a <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x10e>
   1d1e8:	f000 f84e 	bl	1d288 <std::type_info::operator==(std::type_info const&) const>
   1d1ec:	b168      	cbz	r0, 1d20a <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x10e>
   1d1ee:	7923      	ldrb	r3, [r4, #4]
   1d1f0:	f89d 200c 	ldrb.w	r2, [sp, #12]
   1d1f4:	4313      	orrs	r3, r2
   1d1f6:	7123      	strb	r3, [r4, #4]
   1d1f8:	f109 39ff 	add.w	r9, r9, #4294967295
   1d1fc:	3d08      	subs	r5, #8
   1d1fe:	e795      	b.n	1d12c <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x30>
   1d200:	7920      	ldrb	r0, [r4, #4]
   1d202:	3000      	adds	r0, #0
   1d204:	bf18      	it	ne
   1d206:	2001      	movne	r0, #1
   1d208:	e008      	b.n	1d21c <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x120>
   1d20a:	2302      	movs	r3, #2
   1d20c:	7123      	strb	r3, [r4, #4]
   1d20e:	2001      	movs	r0, #1
   1d210:	e004      	b.n	1d21c <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x120>
   1d212:	f023 0302 	bic.w	r3, r3, #2
   1d216:	f88d 300c 	strb.w	r3, [sp, #12]
   1d21a:	e7c2      	b.n	1d1a2 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xa6>
   1d21c:	b007      	add	sp, #28
   1d21e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0001d224 <__cxa_pure_virtual>:
__cxa_pure_virtual():
   1d224:	b508      	push	{r3, lr}
   1d226:	4903      	ldr	r1, [pc, #12]	; (1d234 <__cxa_pure_virtual+0x10>)
   1d228:	221b      	movs	r2, #27
   1d22a:	2002      	movs	r0, #2
   1d22c:	f003 ffc2 	bl	211b4 <write>
   1d230:	f000 f936 	bl	1d4a0 <std::terminate()>
   1d234:	00027758 	.word	0x00027758

0001d238 <__cxa_guard_acquire>:
__cxa_guard_acquire():
   1d238:	b508      	push	{r3, lr}
   1d23a:	6803      	ldr	r3, [r0, #0]
   1d23c:	07db      	lsls	r3, r3, #31
   1d23e:	d407      	bmi.n	1d250 <__cxa_guard_acquire+0x18>
   1d240:	7843      	ldrb	r3, [r0, #1]
   1d242:	b10b      	cbz	r3, 1d248 <__cxa_guard_acquire+0x10>
   1d244:	f001 fb74 	bl	1e930 <abort>
   1d248:	2301      	movs	r3, #1
   1d24a:	7043      	strb	r3, [r0, #1]
   1d24c:	4618      	mov	r0, r3
   1d24e:	bd08      	pop	{r3, pc}
   1d250:	2000      	movs	r0, #0
   1d252:	bd08      	pop	{r3, pc}

0001d254 <__cxa_guard_release>:
__cxa_guard_release():
   1d254:	2301      	movs	r3, #1
   1d256:	6003      	str	r3, [r0, #0]
   1d258:	4770      	bx	lr
	...

0001d25c <std::type_info::~type_info()>:
_ZNSt9type_infoD1Ev():
   1d25c:	4b01      	ldr	r3, [pc, #4]	; (1d264 <std::type_info::~type_info()+0x8>)
   1d25e:	6003      	str	r3, [r0, #0]
   1d260:	4770      	bx	lr
   1d262:	bf00      	nop
   1d264:	000277b8 	.word	0x000277b8

0001d268 <std::type_info::__is_pointer_p() const>:
_ZNKSt9type_info14__is_pointer_pEv():
   1d268:	2000      	movs	r0, #0
   1d26a:	4770      	bx	lr

0001d26c <std::type_info::__is_function_p() const>:
_ZNKSt9type_info15__is_function_pEv():
   1d26c:	2000      	movs	r0, #0
   1d26e:	4770      	bx	lr

0001d270 <std::type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const>:
_ZNKSt9type_info11__do_upcastEPKN10__cxxabiv117__class_type_infoEPPv():
   1d270:	2000      	movs	r0, #0
   1d272:	4770      	bx	lr

0001d274 <std::type_info::~type_info()>:
_ZNSt9type_infoD0Ev():
   1d274:	b510      	push	{r4, lr}
   1d276:	4b03      	ldr	r3, [pc, #12]	; (1d284 <std::type_info::~type_info()+0x10>)
   1d278:	4604      	mov	r4, r0
   1d27a:	6003      	str	r3, [r0, #0]
   1d27c:	f7f2 fffa 	bl	10274 <operator delete(void*)>
   1d280:	4620      	mov	r0, r4
   1d282:	bd10      	pop	{r4, pc}
   1d284:	000277b8 	.word	0x000277b8

0001d288 <std::type_info::operator==(std::type_info const&) const>:
_ZNKSt9type_infoeqERKS_():
   1d288:	4281      	cmp	r1, r0
   1d28a:	b508      	push	{r3, lr}
   1d28c:	d00f      	beq.n	1d2ae <std::type_info::operator==(std::type_info const&) const+0x26>
   1d28e:	6840      	ldr	r0, [r0, #4]
   1d290:	7803      	ldrb	r3, [r0, #0]
   1d292:	2b2a      	cmp	r3, #42	; 0x2a
   1d294:	d00d      	beq.n	1d2b2 <std::type_info::operator==(std::type_info const&) const+0x2a>
   1d296:	6849      	ldr	r1, [r1, #4]
   1d298:	780b      	ldrb	r3, [r1, #0]
   1d29a:	2b2a      	cmp	r3, #42	; 0x2a
   1d29c:	bf08      	it	eq
   1d29e:	3101      	addeq	r1, #1
   1d2a0:	f002 fcf8 	bl	1fc94 <strcmp>
   1d2a4:	f1d0 0001 	rsbs	r0, r0, #1
   1d2a8:	bf38      	it	cc
   1d2aa:	2000      	movcc	r0, #0
   1d2ac:	bd08      	pop	{r3, pc}
   1d2ae:	2001      	movs	r0, #1
   1d2b0:	bd08      	pop	{r3, pc}
   1d2b2:	2000      	movs	r0, #0
   1d2b4:	bd08      	pop	{r3, pc}

0001d2b6 <std::type_info::__do_catch(std::type_info const*, void**, unsigned int) const>:
_ZNKSt9type_info10__do_catchEPKS_PPvj():
   1d2b6:	f7ff bfe7 	b.w	1d288 <std::type_info::operator==(std::type_info const&) const>

0001d2ba <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const>:
_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv():
   1d2ba:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   1d2bc:	2310      	movs	r3, #16
   1d2be:	9302      	str	r3, [sp, #8]
   1d2c0:	6803      	ldr	r3, [r0, #0]
   1d2c2:	2400      	movs	r4, #0
   1d2c4:	4615      	mov	r5, r2
   1d2c6:	699e      	ldr	r6, [r3, #24]
   1d2c8:	9400      	str	r4, [sp, #0]
   1d2ca:	466b      	mov	r3, sp
   1d2cc:	f88d 4004 	strb.w	r4, [sp, #4]
   1d2d0:	9403      	str	r4, [sp, #12]
   1d2d2:	6812      	ldr	r2, [r2, #0]
   1d2d4:	47b0      	blx	r6
   1d2d6:	f89d 3004 	ldrb.w	r3, [sp, #4]
   1d2da:	f003 0306 	and.w	r3, r3, #6
   1d2de:	2b06      	cmp	r3, #6
   1d2e0:	bf05      	ittet	eq
   1d2e2:	9b00      	ldreq	r3, [sp, #0]
   1d2e4:	2001      	moveq	r0, #1
   1d2e6:	4620      	movne	r0, r4
   1d2e8:	602b      	streq	r3, [r5, #0]
   1d2ea:	b004      	add	sp, #16
   1d2ec:	bd70      	pop	{r4, r5, r6, pc}

0001d2ee <__cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>:
_ZNK10__cxxabiv117__class_type_info20__do_find_public_srcEiPKvPKS0_S2_():
   1d2ee:	9800      	ldr	r0, [sp, #0]
   1d2f0:	4290      	cmp	r0, r2
   1d2f2:	bf14      	ite	ne
   1d2f4:	2001      	movne	r0, #1
   1d2f6:	2006      	moveq	r0, #6
   1d2f8:	4770      	bx	lr
	...

0001d2fc <__cxxabiv1::__class_type_info::~__class_type_info()>:
_ZN10__cxxabiv117__class_type_infoD1Ev():
   1d2fc:	b510      	push	{r4, lr}
   1d2fe:	4b03      	ldr	r3, [pc, #12]	; (1d30c <__cxxabiv1::__class_type_info::~__class_type_info()+0x10>)
   1d300:	4604      	mov	r4, r0
   1d302:	6003      	str	r3, [r0, #0]
   1d304:	f7ff ffaa 	bl	1d25c <std::type_info::~type_info()>
   1d308:	4620      	mov	r0, r4
   1d30a:	bd10      	pop	{r4, pc}
   1d30c:	000277d8 	.word	0x000277d8

0001d310 <__cxxabiv1::__class_type_info::~__class_type_info()>:
_ZN10__cxxabiv117__class_type_infoD0Ev():
   1d310:	b510      	push	{r4, lr}
   1d312:	4604      	mov	r4, r0
   1d314:	f7ff fff2 	bl	1d2fc <__cxxabiv1::__class_type_info::~__class_type_info()>
   1d318:	4620      	mov	r0, r4
   1d31a:	f7f2 ffab 	bl	10274 <operator delete(void*)>
   1d31e:	4620      	mov	r0, r4
   1d320:	bd10      	pop	{r4, pc}

0001d322 <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const>:
_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE():
   1d322:	b538      	push	{r3, r4, r5, lr}
   1d324:	4615      	mov	r5, r2
   1d326:	461c      	mov	r4, r3
   1d328:	f7ff ffae 	bl	1d288 <std::type_info::operator==(std::type_info const&) const>
   1d32c:	b128      	cbz	r0, 1d33a <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x18>
   1d32e:	2308      	movs	r3, #8
   1d330:	60e3      	str	r3, [r4, #12]
   1d332:	2306      	movs	r3, #6
   1d334:	6025      	str	r5, [r4, #0]
   1d336:	7123      	strb	r3, [r4, #4]
   1d338:	2001      	movs	r0, #1
   1d33a:	bd38      	pop	{r3, r4, r5, pc}

0001d33c <__cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const>:
_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj():
   1d33c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1d33e:	4605      	mov	r5, r0
   1d340:	460c      	mov	r4, r1
   1d342:	4616      	mov	r6, r2
   1d344:	461f      	mov	r7, r3
   1d346:	f7ff ff9f 	bl	1d288 <std::type_info::operator==(std::type_info const&) const>
   1d34a:	b940      	cbnz	r0, 1d35e <__cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const+0x22>
   1d34c:	2f03      	cmp	r7, #3
   1d34e:	d807      	bhi.n	1d360 <__cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const+0x24>
   1d350:	6823      	ldr	r3, [r4, #0]
   1d352:	4620      	mov	r0, r4
   1d354:	695b      	ldr	r3, [r3, #20]
   1d356:	4629      	mov	r1, r5
   1d358:	4632      	mov	r2, r6
   1d35a:	4798      	blx	r3
   1d35c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1d35e:	2001      	movs	r0, #1
   1d360:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0001d362 <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const>:
_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE():
   1d362:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1d366:	9e06      	ldr	r6, [sp, #24]
   1d368:	4615      	mov	r5, r2
   1d36a:	9a08      	ldr	r2, [sp, #32]
   1d36c:	4607      	mov	r7, r0
   1d36e:	4296      	cmp	r6, r2
   1d370:	4698      	mov	r8, r3
   1d372:	9c09      	ldr	r4, [sp, #36]	; 0x24
   1d374:	d103      	bne.n	1d37e <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1c>
   1d376:	9907      	ldr	r1, [sp, #28]
   1d378:	f7ff ff86 	bl	1d288 <std::type_info::operator==(std::type_info const&) const>
   1d37c:	b948      	cbnz	r0, 1d392 <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x30>
   1d37e:	4638      	mov	r0, r7
   1d380:	4641      	mov	r1, r8
   1d382:	f7ff ff81 	bl	1d288 <std::type_info::operator==(std::type_info const&) const>
   1d386:	b128      	cbz	r0, 1d394 <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x32>
   1d388:	2301      	movs	r3, #1
   1d38a:	6026      	str	r6, [r4, #0]
   1d38c:	7125      	strb	r5, [r4, #4]
   1d38e:	71a3      	strb	r3, [r4, #6]
   1d390:	e000      	b.n	1d394 <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x32>
   1d392:	7165      	strb	r5, [r4, #5]
   1d394:	2000      	movs	r0, #0
   1d396:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

0001d39c <__cxxabiv1::__si_class_type_info::~__si_class_type_info()>:
_ZN10__cxxabiv120__si_class_type_infoD2Ev():
   1d39c:	b510      	push	{r4, lr}
   1d39e:	4b03      	ldr	r3, [pc, #12]	; (1d3ac <__cxxabiv1::__si_class_type_info::~__si_class_type_info()+0x10>)
   1d3a0:	4604      	mov	r4, r0
   1d3a2:	6003      	str	r3, [r0, #0]
   1d3a4:	f7ff ffaa 	bl	1d2fc <__cxxabiv1::__class_type_info::~__class_type_info()>
   1d3a8:	4620      	mov	r0, r4
   1d3aa:	bd10      	pop	{r4, pc}
   1d3ac:	00027838 	.word	0x00027838

0001d3b0 <__cxxabiv1::__si_class_type_info::~__si_class_type_info()>:
_ZN10__cxxabiv120__si_class_type_infoD0Ev():
   1d3b0:	b510      	push	{r4, lr}
   1d3b2:	4604      	mov	r4, r0
   1d3b4:	f7ff fff2 	bl	1d39c <__cxxabiv1::__si_class_type_info::~__si_class_type_info()>
   1d3b8:	4620      	mov	r0, r4
   1d3ba:	f7f2 ff5b 	bl	10274 <operator delete(void*)>
   1d3be:	4620      	mov	r0, r4
   1d3c0:	bd10      	pop	{r4, pc}

0001d3c2 <__cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>:
_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_():
   1d3c2:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
   1d3c6:	9c08      	ldr	r4, [sp, #32]
   1d3c8:	4607      	mov	r7, r0
   1d3ca:	4294      	cmp	r4, r2
   1d3cc:	4688      	mov	r8, r1
   1d3ce:	4616      	mov	r6, r2
   1d3d0:	461d      	mov	r5, r3
   1d3d2:	d105      	bne.n	1d3e0 <__cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x1e>
   1d3d4:	4619      	mov	r1, r3
   1d3d6:	f7ff ff57 	bl	1d288 <std::type_info::operator==(std::type_info const&) const>
   1d3da:	b108      	cbz	r0, 1d3e0 <__cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x1e>
   1d3dc:	2006      	movs	r0, #6
   1d3de:	e007      	b.n	1d3f0 <__cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x2e>
   1d3e0:	68b8      	ldr	r0, [r7, #8]
   1d3e2:	4641      	mov	r1, r8
   1d3e4:	6803      	ldr	r3, [r0, #0]
   1d3e6:	9400      	str	r4, [sp, #0]
   1d3e8:	6a1c      	ldr	r4, [r3, #32]
   1d3ea:	4632      	mov	r2, r6
   1d3ec:	462b      	mov	r3, r5
   1d3ee:	47a0      	blx	r4
   1d3f0:	b002      	add	sp, #8
   1d3f2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0001d3f6 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const>:
_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE():
   1d3f6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d3fa:	460e      	mov	r6, r1
   1d3fc:	b085      	sub	sp, #20
   1d3fe:	4619      	mov	r1, r3
   1d400:	4683      	mov	fp, r0
   1d402:	4690      	mov	r8, r2
   1d404:	4699      	mov	r9, r3
   1d406:	9d0e      	ldr	r5, [sp, #56]	; 0x38
   1d408:	9f10      	ldr	r7, [sp, #64]	; 0x40
   1d40a:	9c11      	ldr	r4, [sp, #68]	; 0x44
   1d40c:	f7ff ff3c 	bl	1d288 <std::type_info::operator==(std::type_info const&) const>
   1d410:	4682      	mov	sl, r0
   1d412:	b180      	cbz	r0, 1d436 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x40>
   1d414:	2e00      	cmp	r6, #0
   1d416:	6025      	str	r5, [r4, #0]
   1d418:	f884 8004 	strb.w	r8, [r4, #4]
   1d41c:	db06      	blt.n	1d42c <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x36>
   1d41e:	4435      	add	r5, r6
   1d420:	42af      	cmp	r7, r5
   1d422:	bf14      	ite	ne
   1d424:	2701      	movne	r7, #1
   1d426:	2706      	moveq	r7, #6
   1d428:	71a7      	strb	r7, [r4, #6]
   1d42a:	e00c      	b.n	1d446 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x50>
   1d42c:	3602      	adds	r6, #2
   1d42e:	d10a      	bne.n	1d446 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x50>
   1d430:	2301      	movs	r3, #1
   1d432:	71a3      	strb	r3, [r4, #6]
   1d434:	e007      	b.n	1d446 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x50>
   1d436:	42bd      	cmp	r5, r7
   1d438:	d107      	bne.n	1d44a <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x54>
   1d43a:	4658      	mov	r0, fp
   1d43c:	990f      	ldr	r1, [sp, #60]	; 0x3c
   1d43e:	f7ff ff23 	bl	1d288 <std::type_info::operator==(std::type_info const&) const>
   1d442:	b980      	cbnz	r0, 1d466 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x70>
   1d444:	e001      	b.n	1d44a <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x54>
   1d446:	2000      	movs	r0, #0
   1d448:	e010      	b.n	1d46c <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x76>
   1d44a:	f8db 0008 	ldr.w	r0, [fp, #8]
   1d44e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   1d450:	6803      	ldr	r3, [r0, #0]
   1d452:	9201      	str	r2, [sp, #4]
   1d454:	9500      	str	r5, [sp, #0]
   1d456:	9702      	str	r7, [sp, #8]
   1d458:	9403      	str	r4, [sp, #12]
   1d45a:	69dc      	ldr	r4, [r3, #28]
   1d45c:	4631      	mov	r1, r6
   1d45e:	4642      	mov	r2, r8
   1d460:	464b      	mov	r3, r9
   1d462:	47a0      	blx	r4
   1d464:	e002      	b.n	1d46c <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x76>
   1d466:	f884 8005 	strb.w	r8, [r4, #5]
   1d46a:	4650      	mov	r0, sl
   1d46c:	b005      	add	sp, #20
   1d46e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001d472 <__cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const>:
_ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE():
   1d472:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1d474:	4604      	mov	r4, r0
   1d476:	460f      	mov	r7, r1
   1d478:	4616      	mov	r6, r2
   1d47a:	461d      	mov	r5, r3
   1d47c:	f7ff ff51 	bl	1d322 <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const>
   1d480:	b938      	cbnz	r0, 1d492 <__cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x20>
   1d482:	68a0      	ldr	r0, [r4, #8]
   1d484:	4639      	mov	r1, r7
   1d486:	6804      	ldr	r4, [r0, #0]
   1d488:	4632      	mov	r2, r6
   1d48a:	69a4      	ldr	r4, [r4, #24]
   1d48c:	462b      	mov	r3, r5
   1d48e:	47a0      	blx	r4
   1d490:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1d492:	2001      	movs	r0, #1
   1d494:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0001d496 <__cxxabiv1::__terminate(void (*)())>:
_ZN10__cxxabiv111__terminateEPFvvE():
   1d496:	b508      	push	{r3, lr}
   1d498:	4780      	blx	r0
   1d49a:	f001 fa49 	bl	1e930 <abort>
	...

0001d4a0 <std::terminate()>:
_ZSt9terminatev():
   1d4a0:	b508      	push	{r3, lr}
   1d4a2:	4b02      	ldr	r3, [pc, #8]	; (1d4ac <std::terminate()+0xc>)
   1d4a4:	6818      	ldr	r0, [r3, #0]
   1d4a6:	f7ff fff6 	bl	1d496 <__cxxabiv1::__terminate(void (*)())>
   1d4aa:	bf00      	nop
   1d4ac:	2007c104 	.word	0x2007c104

0001d4b0 <__aeabi_llsl>:
__ashldi3():
   1d4b0:	4091      	lsls	r1, r2
   1d4b2:	1c03      	adds	r3, r0, #0
   1d4b4:	4090      	lsls	r0, r2
   1d4b6:	469c      	mov	ip, r3
   1d4b8:	3a20      	subs	r2, #32
   1d4ba:	4093      	lsls	r3, r2
   1d4bc:	4319      	orrs	r1, r3
   1d4be:	4252      	negs	r2, r2
   1d4c0:	4663      	mov	r3, ip
   1d4c2:	40d3      	lsrs	r3, r2
   1d4c4:	4319      	orrs	r1, r3
   1d4c6:	4770      	bx	lr

0001d4c8 <__aeabi_drsub>:
$t():
   1d4c8:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
   1d4cc:	e002      	b.n	1d4d4 <__adddf3>
   1d4ce:	bf00      	nop

0001d4d0 <__aeabi_dsub>:
__aeabi_dsub():
   1d4d0:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0001d4d4 <__adddf3>:
   1d4d4:	b530      	push	{r4, r5, lr}
   1d4d6:	ea4f 0441 	mov.w	r4, r1, lsl #1
   1d4da:	ea4f 0543 	mov.w	r5, r3, lsl #1
   1d4de:	ea94 0f05 	teq	r4, r5
   1d4e2:	bf08      	it	eq
   1d4e4:	ea90 0f02 	teqeq	r0, r2
   1d4e8:	bf1f      	itttt	ne
   1d4ea:	ea54 0c00 	orrsne.w	ip, r4, r0
   1d4ee:	ea55 0c02 	orrsne.w	ip, r5, r2
   1d4f2:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
   1d4f6:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   1d4fa:	f000 80e2 	beq.w	1d6c2 <__adddf3+0x1ee>
   1d4fe:	ea4f 5454 	mov.w	r4, r4, lsr #21
   1d502:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
   1d506:	bfb8      	it	lt
   1d508:	426d      	neglt	r5, r5
   1d50a:	dd0c      	ble.n	1d526 <__adddf3+0x52>
   1d50c:	442c      	add	r4, r5
   1d50e:	ea80 0202 	eor.w	r2, r0, r2
   1d512:	ea81 0303 	eor.w	r3, r1, r3
   1d516:	ea82 0000 	eor.w	r0, r2, r0
   1d51a:	ea83 0101 	eor.w	r1, r3, r1
   1d51e:	ea80 0202 	eor.w	r2, r0, r2
   1d522:	ea81 0303 	eor.w	r3, r1, r3
   1d526:	2d36      	cmp	r5, #54	; 0x36
   1d528:	bf88      	it	hi
   1d52a:	bd30      	pophi	{r4, r5, pc}
   1d52c:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   1d530:	ea4f 3101 	mov.w	r1, r1, lsl #12
   1d534:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
   1d538:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
   1d53c:	d002      	beq.n	1d544 <__adddf3+0x70>
   1d53e:	4240      	negs	r0, r0
   1d540:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   1d544:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
   1d548:	ea4f 3303 	mov.w	r3, r3, lsl #12
   1d54c:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
   1d550:	d002      	beq.n	1d558 <__adddf3+0x84>
   1d552:	4252      	negs	r2, r2
   1d554:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
   1d558:	ea94 0f05 	teq	r4, r5
   1d55c:	f000 80a7 	beq.w	1d6ae <__adddf3+0x1da>
   1d560:	f1a4 0401 	sub.w	r4, r4, #1
   1d564:	f1d5 0e20 	rsbs	lr, r5, #32
   1d568:	db0d      	blt.n	1d586 <__adddf3+0xb2>
   1d56a:	fa02 fc0e 	lsl.w	ip, r2, lr
   1d56e:	fa22 f205 	lsr.w	r2, r2, r5
   1d572:	1880      	adds	r0, r0, r2
   1d574:	f141 0100 	adc.w	r1, r1, #0
   1d578:	fa03 f20e 	lsl.w	r2, r3, lr
   1d57c:	1880      	adds	r0, r0, r2
   1d57e:	fa43 f305 	asr.w	r3, r3, r5
   1d582:	4159      	adcs	r1, r3
   1d584:	e00e      	b.n	1d5a4 <__adddf3+0xd0>
   1d586:	f1a5 0520 	sub.w	r5, r5, #32
   1d58a:	f10e 0e20 	add.w	lr, lr, #32
   1d58e:	2a01      	cmp	r2, #1
   1d590:	fa03 fc0e 	lsl.w	ip, r3, lr
   1d594:	bf28      	it	cs
   1d596:	f04c 0c02 	orrcs.w	ip, ip, #2
   1d59a:	fa43 f305 	asr.w	r3, r3, r5
   1d59e:	18c0      	adds	r0, r0, r3
   1d5a0:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
   1d5a4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   1d5a8:	d507      	bpl.n	1d5ba <__adddf3+0xe6>
   1d5aa:	f04f 0e00 	mov.w	lr, #0
   1d5ae:	f1dc 0c00 	rsbs	ip, ip, #0
   1d5b2:	eb7e 0000 	sbcs.w	r0, lr, r0
   1d5b6:	eb6e 0101 	sbc.w	r1, lr, r1
   1d5ba:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
   1d5be:	d31b      	bcc.n	1d5f8 <__adddf3+0x124>
   1d5c0:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
   1d5c4:	d30c      	bcc.n	1d5e0 <__adddf3+0x10c>
   1d5c6:	0849      	lsrs	r1, r1, #1
   1d5c8:	ea5f 0030 	movs.w	r0, r0, rrx
   1d5cc:	ea4f 0c3c 	mov.w	ip, ip, rrx
   1d5d0:	f104 0401 	add.w	r4, r4, #1
   1d5d4:	ea4f 5244 	mov.w	r2, r4, lsl #21
   1d5d8:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
   1d5dc:	f080 809a 	bcs.w	1d714 <__adddf3+0x240>
   1d5e0:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
   1d5e4:	bf08      	it	eq
   1d5e6:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   1d5ea:	f150 0000 	adcs.w	r0, r0, #0
   1d5ee:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   1d5f2:	ea41 0105 	orr.w	r1, r1, r5
   1d5f6:	bd30      	pop	{r4, r5, pc}
   1d5f8:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
   1d5fc:	4140      	adcs	r0, r0
   1d5fe:	eb41 0101 	adc.w	r1, r1, r1
   1d602:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   1d606:	f1a4 0401 	sub.w	r4, r4, #1
   1d60a:	d1e9      	bne.n	1d5e0 <__adddf3+0x10c>
   1d60c:	f091 0f00 	teq	r1, #0
   1d610:	bf04      	itt	eq
   1d612:	4601      	moveq	r1, r0
   1d614:	2000      	moveq	r0, #0
   1d616:	fab1 f381 	clz	r3, r1
   1d61a:	bf08      	it	eq
   1d61c:	3320      	addeq	r3, #32
   1d61e:	f1a3 030b 	sub.w	r3, r3, #11
   1d622:	f1b3 0220 	subs.w	r2, r3, #32
   1d626:	da0c      	bge.n	1d642 <__adddf3+0x16e>
   1d628:	320c      	adds	r2, #12
   1d62a:	dd08      	ble.n	1d63e <__adddf3+0x16a>
   1d62c:	f102 0c14 	add.w	ip, r2, #20
   1d630:	f1c2 020c 	rsb	r2, r2, #12
   1d634:	fa01 f00c 	lsl.w	r0, r1, ip
   1d638:	fa21 f102 	lsr.w	r1, r1, r2
   1d63c:	e00c      	b.n	1d658 <__adddf3+0x184>
   1d63e:	f102 0214 	add.w	r2, r2, #20
   1d642:	bfd8      	it	le
   1d644:	f1c2 0c20 	rsble	ip, r2, #32
   1d648:	fa01 f102 	lsl.w	r1, r1, r2
   1d64c:	fa20 fc0c 	lsr.w	ip, r0, ip
   1d650:	bfdc      	itt	le
   1d652:	ea41 010c 	orrle.w	r1, r1, ip
   1d656:	4090      	lslle	r0, r2
   1d658:	1ae4      	subs	r4, r4, r3
   1d65a:	bfa2      	ittt	ge
   1d65c:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
   1d660:	4329      	orrge	r1, r5
   1d662:	bd30      	popge	{r4, r5, pc}
   1d664:	ea6f 0404 	mvn.w	r4, r4
   1d668:	3c1f      	subs	r4, #31
   1d66a:	da1c      	bge.n	1d6a6 <__adddf3+0x1d2>
   1d66c:	340c      	adds	r4, #12
   1d66e:	dc0e      	bgt.n	1d68e <__adddf3+0x1ba>
   1d670:	f104 0414 	add.w	r4, r4, #20
   1d674:	f1c4 0220 	rsb	r2, r4, #32
   1d678:	fa20 f004 	lsr.w	r0, r0, r4
   1d67c:	fa01 f302 	lsl.w	r3, r1, r2
   1d680:	ea40 0003 	orr.w	r0, r0, r3
   1d684:	fa21 f304 	lsr.w	r3, r1, r4
   1d688:	ea45 0103 	orr.w	r1, r5, r3
   1d68c:	bd30      	pop	{r4, r5, pc}
   1d68e:	f1c4 040c 	rsb	r4, r4, #12
   1d692:	f1c4 0220 	rsb	r2, r4, #32
   1d696:	fa20 f002 	lsr.w	r0, r0, r2
   1d69a:	fa01 f304 	lsl.w	r3, r1, r4
   1d69e:	ea40 0003 	orr.w	r0, r0, r3
   1d6a2:	4629      	mov	r1, r5
   1d6a4:	bd30      	pop	{r4, r5, pc}
   1d6a6:	fa21 f004 	lsr.w	r0, r1, r4
   1d6aa:	4629      	mov	r1, r5
   1d6ac:	bd30      	pop	{r4, r5, pc}
   1d6ae:	f094 0f00 	teq	r4, #0
   1d6b2:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
   1d6b6:	bf06      	itte	eq
   1d6b8:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
   1d6bc:	3401      	addeq	r4, #1
   1d6be:	3d01      	subne	r5, #1
   1d6c0:	e74e      	b.n	1d560 <__adddf3+0x8c>
   1d6c2:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   1d6c6:	bf18      	it	ne
   1d6c8:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   1d6cc:	d029      	beq.n	1d722 <__adddf3+0x24e>
   1d6ce:	ea94 0f05 	teq	r4, r5
   1d6d2:	bf08      	it	eq
   1d6d4:	ea90 0f02 	teqeq	r0, r2
   1d6d8:	d005      	beq.n	1d6e6 <__adddf3+0x212>
   1d6da:	ea54 0c00 	orrs.w	ip, r4, r0
   1d6de:	bf04      	itt	eq
   1d6e0:	4619      	moveq	r1, r3
   1d6e2:	4610      	moveq	r0, r2
   1d6e4:	bd30      	pop	{r4, r5, pc}
   1d6e6:	ea91 0f03 	teq	r1, r3
   1d6ea:	bf1e      	ittt	ne
   1d6ec:	2100      	movne	r1, #0
   1d6ee:	2000      	movne	r0, #0
   1d6f0:	bd30      	popne	{r4, r5, pc}
   1d6f2:	ea5f 5c54 	movs.w	ip, r4, lsr #21
   1d6f6:	d105      	bne.n	1d704 <__adddf3+0x230>
   1d6f8:	0040      	lsls	r0, r0, #1
   1d6fa:	4149      	adcs	r1, r1
   1d6fc:	bf28      	it	cs
   1d6fe:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
   1d702:	bd30      	pop	{r4, r5, pc}
   1d704:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
   1d708:	bf3c      	itt	cc
   1d70a:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
   1d70e:	bd30      	popcc	{r4, r5, pc}
   1d710:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   1d714:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
   1d718:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   1d71c:	f04f 0000 	mov.w	r0, #0
   1d720:	bd30      	pop	{r4, r5, pc}
   1d722:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   1d726:	bf1a      	itte	ne
   1d728:	4619      	movne	r1, r3
   1d72a:	4610      	movne	r0, r2
   1d72c:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
   1d730:	bf1c      	itt	ne
   1d732:	460b      	movne	r3, r1
   1d734:	4602      	movne	r2, r0
   1d736:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   1d73a:	bf06      	itte	eq
   1d73c:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
   1d740:	ea91 0f03 	teqeq	r1, r3
   1d744:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
   1d748:	bd30      	pop	{r4, r5, pc}
__adddf3():
   1d74a:	bf00      	nop

0001d74c <__aeabi_ui2d>:
__aeabi_ui2d():
   1d74c:	f090 0f00 	teq	r0, #0
   1d750:	bf04      	itt	eq
   1d752:	2100      	moveq	r1, #0
   1d754:	4770      	bxeq	lr
   1d756:	b530      	push	{r4, r5, lr}
   1d758:	f44f 6480 	mov.w	r4, #1024	; 0x400
   1d75c:	f104 0432 	add.w	r4, r4, #50	; 0x32
   1d760:	f04f 0500 	mov.w	r5, #0
   1d764:	f04f 0100 	mov.w	r1, #0
   1d768:	e750      	b.n	1d60c <__adddf3+0x138>
   1d76a:	bf00      	nop

0001d76c <__aeabi_i2d>:
__floatsidf():
   1d76c:	f090 0f00 	teq	r0, #0
   1d770:	bf04      	itt	eq
   1d772:	2100      	moveq	r1, #0
   1d774:	4770      	bxeq	lr
   1d776:	b530      	push	{r4, r5, lr}
   1d778:	f44f 6480 	mov.w	r4, #1024	; 0x400
   1d77c:	f104 0432 	add.w	r4, r4, #50	; 0x32
   1d780:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
   1d784:	bf48      	it	mi
   1d786:	4240      	negmi	r0, r0
   1d788:	f04f 0100 	mov.w	r1, #0
   1d78c:	e73e      	b.n	1d60c <__adddf3+0x138>
   1d78e:	bf00      	nop

0001d790 <__aeabi_f2d>:
__extendsfdf2():
   1d790:	0042      	lsls	r2, r0, #1
   1d792:	ea4f 01e2 	mov.w	r1, r2, asr #3
   1d796:	ea4f 0131 	mov.w	r1, r1, rrx
   1d79a:	ea4f 7002 	mov.w	r0, r2, lsl #28
   1d79e:	bf1f      	itttt	ne
   1d7a0:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
   1d7a4:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   1d7a8:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
   1d7ac:	4770      	bxne	lr
   1d7ae:	f092 0f00 	teq	r2, #0
   1d7b2:	bf14      	ite	ne
   1d7b4:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   1d7b8:	4770      	bxeq	lr
   1d7ba:	b530      	push	{r4, r5, lr}
   1d7bc:	f44f 7460 	mov.w	r4, #896	; 0x380
   1d7c0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   1d7c4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   1d7c8:	e720      	b.n	1d60c <__adddf3+0x138>
   1d7ca:	bf00      	nop

0001d7cc <__aeabi_ul2d>:
__aeabi_ul2d():
   1d7cc:	ea50 0201 	orrs.w	r2, r0, r1
   1d7d0:	bf08      	it	eq
   1d7d2:	4770      	bxeq	lr
   1d7d4:	b530      	push	{r4, r5, lr}
   1d7d6:	f04f 0500 	mov.w	r5, #0
   1d7da:	e00a      	b.n	1d7f2 <__aeabi_l2d+0x16>

0001d7dc <__aeabi_l2d>:
   1d7dc:	ea50 0201 	orrs.w	r2, r0, r1
   1d7e0:	bf08      	it	eq
   1d7e2:	4770      	bxeq	lr
   1d7e4:	b530      	push	{r4, r5, lr}
   1d7e6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
   1d7ea:	d502      	bpl.n	1d7f2 <__aeabi_l2d+0x16>
   1d7ec:	4240      	negs	r0, r0
   1d7ee:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   1d7f2:	f44f 6480 	mov.w	r4, #1024	; 0x400
   1d7f6:	f104 0432 	add.w	r4, r4, #50	; 0x32
   1d7fa:	ea5f 5c91 	movs.w	ip, r1, lsr #22
   1d7fe:	f43f aedc 	beq.w	1d5ba <__adddf3+0xe6>
   1d802:	f04f 0203 	mov.w	r2, #3
   1d806:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   1d80a:	bf18      	it	ne
   1d80c:	3203      	addne	r2, #3
   1d80e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   1d812:	bf18      	it	ne
   1d814:	3203      	addne	r2, #3
   1d816:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
   1d81a:	f1c2 0320 	rsb	r3, r2, #32
   1d81e:	fa00 fc03 	lsl.w	ip, r0, r3
   1d822:	fa20 f002 	lsr.w	r0, r0, r2
   1d826:	fa01 fe03 	lsl.w	lr, r1, r3
   1d82a:	ea40 000e 	orr.w	r0, r0, lr
   1d82e:	fa21 f102 	lsr.w	r1, r1, r2
   1d832:	4414      	add	r4, r2
   1d834:	e6c1      	b.n	1d5ba <__adddf3+0xe6>
__floatdidf():
   1d836:	bf00      	nop

0001d838 <__aeabi_dmul>:
__aeabi_dmul():
   1d838:	b570      	push	{r4, r5, r6, lr}
   1d83a:	f04f 0cff 	mov.w	ip, #255	; 0xff
   1d83e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   1d842:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   1d846:	bf1d      	ittte	ne
   1d848:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   1d84c:	ea94 0f0c 	teqne	r4, ip
   1d850:	ea95 0f0c 	teqne	r5, ip
   1d854:	f000 f8de 	bleq	1da14 <__aeabi_dmul+0x1dc>
   1d858:	442c      	add	r4, r5
   1d85a:	ea81 0603 	eor.w	r6, r1, r3
   1d85e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
   1d862:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
   1d866:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
   1d86a:	bf18      	it	ne
   1d86c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
   1d870:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   1d874:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   1d878:	d038      	beq.n	1d8ec <__aeabi_dmul+0xb4>
   1d87a:	fba0 ce02 	umull	ip, lr, r0, r2
   1d87e:	f04f 0500 	mov.w	r5, #0
   1d882:	fbe1 e502 	umlal	lr, r5, r1, r2
   1d886:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
   1d88a:	fbe0 e503 	umlal	lr, r5, r0, r3
   1d88e:	f04f 0600 	mov.w	r6, #0
   1d892:	fbe1 5603 	umlal	r5, r6, r1, r3
   1d896:	f09c 0f00 	teq	ip, #0
   1d89a:	bf18      	it	ne
   1d89c:	f04e 0e01 	orrne.w	lr, lr, #1
   1d8a0:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
   1d8a4:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
   1d8a8:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
   1d8ac:	d204      	bcs.n	1d8b8 <__aeabi_dmul+0x80>
   1d8ae:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
   1d8b2:	416d      	adcs	r5, r5
   1d8b4:	eb46 0606 	adc.w	r6, r6, r6
   1d8b8:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
   1d8bc:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
   1d8c0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
   1d8c4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
   1d8c8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
   1d8cc:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   1d8d0:	bf88      	it	hi
   1d8d2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   1d8d6:	d81e      	bhi.n	1d916 <__aeabi_dmul+0xde>
   1d8d8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
   1d8dc:	bf08      	it	eq
   1d8de:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
   1d8e2:	f150 0000 	adcs.w	r0, r0, #0
   1d8e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   1d8ea:	bd70      	pop	{r4, r5, r6, pc}
   1d8ec:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
   1d8f0:	ea46 0101 	orr.w	r1, r6, r1
   1d8f4:	ea40 0002 	orr.w	r0, r0, r2
   1d8f8:	ea81 0103 	eor.w	r1, r1, r3
   1d8fc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
   1d900:	bfc2      	ittt	gt
   1d902:	ebd4 050c 	rsbsgt	r5, r4, ip
   1d906:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   1d90a:	bd70      	popgt	{r4, r5, r6, pc}
   1d90c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   1d910:	f04f 0e00 	mov.w	lr, #0
   1d914:	3c01      	subs	r4, #1
   1d916:	f300 80ab 	bgt.w	1da70 <__aeabi_dmul+0x238>
   1d91a:	f114 0f36 	cmn.w	r4, #54	; 0x36
   1d91e:	bfde      	ittt	le
   1d920:	2000      	movle	r0, #0
   1d922:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
   1d926:	bd70      	pople	{r4, r5, r6, pc}
   1d928:	f1c4 0400 	rsb	r4, r4, #0
   1d92c:	3c20      	subs	r4, #32
   1d92e:	da35      	bge.n	1d99c <__aeabi_dmul+0x164>
   1d930:	340c      	adds	r4, #12
   1d932:	dc1b      	bgt.n	1d96c <__aeabi_dmul+0x134>
   1d934:	f104 0414 	add.w	r4, r4, #20
   1d938:	f1c4 0520 	rsb	r5, r4, #32
   1d93c:	fa00 f305 	lsl.w	r3, r0, r5
   1d940:	fa20 f004 	lsr.w	r0, r0, r4
   1d944:	fa01 f205 	lsl.w	r2, r1, r5
   1d948:	ea40 0002 	orr.w	r0, r0, r2
   1d94c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
   1d950:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   1d954:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   1d958:	fa21 f604 	lsr.w	r6, r1, r4
   1d95c:	eb42 0106 	adc.w	r1, r2, r6
   1d960:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   1d964:	bf08      	it	eq
   1d966:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   1d96a:	bd70      	pop	{r4, r5, r6, pc}
   1d96c:	f1c4 040c 	rsb	r4, r4, #12
   1d970:	f1c4 0520 	rsb	r5, r4, #32
   1d974:	fa00 f304 	lsl.w	r3, r0, r4
   1d978:	fa20 f005 	lsr.w	r0, r0, r5
   1d97c:	fa01 f204 	lsl.w	r2, r1, r4
   1d980:	ea40 0002 	orr.w	r0, r0, r2
   1d984:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   1d988:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   1d98c:	f141 0100 	adc.w	r1, r1, #0
   1d990:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   1d994:	bf08      	it	eq
   1d996:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   1d99a:	bd70      	pop	{r4, r5, r6, pc}
   1d99c:	f1c4 0520 	rsb	r5, r4, #32
   1d9a0:	fa00 f205 	lsl.w	r2, r0, r5
   1d9a4:	ea4e 0e02 	orr.w	lr, lr, r2
   1d9a8:	fa20 f304 	lsr.w	r3, r0, r4
   1d9ac:	fa01 f205 	lsl.w	r2, r1, r5
   1d9b0:	ea43 0302 	orr.w	r3, r3, r2
   1d9b4:	fa21 f004 	lsr.w	r0, r1, r4
   1d9b8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   1d9bc:	fa21 f204 	lsr.w	r2, r1, r4
   1d9c0:	ea20 0002 	bic.w	r0, r0, r2
   1d9c4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
   1d9c8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   1d9cc:	bf08      	it	eq
   1d9ce:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   1d9d2:	bd70      	pop	{r4, r5, r6, pc}
   1d9d4:	f094 0f00 	teq	r4, #0
   1d9d8:	d10f      	bne.n	1d9fa <__aeabi_dmul+0x1c2>
   1d9da:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
   1d9de:	0040      	lsls	r0, r0, #1
   1d9e0:	eb41 0101 	adc.w	r1, r1, r1
   1d9e4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   1d9e8:	bf08      	it	eq
   1d9ea:	3c01      	subeq	r4, #1
   1d9ec:	d0f7      	beq.n	1d9de <__aeabi_dmul+0x1a6>
   1d9ee:	ea41 0106 	orr.w	r1, r1, r6
   1d9f2:	f095 0f00 	teq	r5, #0
   1d9f6:	bf18      	it	ne
   1d9f8:	4770      	bxne	lr
   1d9fa:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
   1d9fe:	0052      	lsls	r2, r2, #1
   1da00:	eb43 0303 	adc.w	r3, r3, r3
   1da04:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
   1da08:	bf08      	it	eq
   1da0a:	3d01      	subeq	r5, #1
   1da0c:	d0f7      	beq.n	1d9fe <__aeabi_dmul+0x1c6>
   1da0e:	ea43 0306 	orr.w	r3, r3, r6
   1da12:	4770      	bx	lr
   1da14:	ea94 0f0c 	teq	r4, ip
   1da18:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   1da1c:	bf18      	it	ne
   1da1e:	ea95 0f0c 	teqne	r5, ip
   1da22:	d00c      	beq.n	1da3e <__aeabi_dmul+0x206>
   1da24:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   1da28:	bf18      	it	ne
   1da2a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   1da2e:	d1d1      	bne.n	1d9d4 <__aeabi_dmul+0x19c>
   1da30:	ea81 0103 	eor.w	r1, r1, r3
   1da34:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   1da38:	f04f 0000 	mov.w	r0, #0
   1da3c:	bd70      	pop	{r4, r5, r6, pc}
   1da3e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   1da42:	bf06      	itte	eq
   1da44:	4610      	moveq	r0, r2
   1da46:	4619      	moveq	r1, r3
   1da48:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   1da4c:	d019      	beq.n	1da82 <__aeabi_dmul+0x24a>
   1da4e:	ea94 0f0c 	teq	r4, ip
   1da52:	d102      	bne.n	1da5a <__aeabi_dmul+0x222>
   1da54:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
   1da58:	d113      	bne.n	1da82 <__aeabi_dmul+0x24a>
   1da5a:	ea95 0f0c 	teq	r5, ip
   1da5e:	d105      	bne.n	1da6c <__aeabi_dmul+0x234>
   1da60:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
   1da64:	bf1c      	itt	ne
   1da66:	4610      	movne	r0, r2
   1da68:	4619      	movne	r1, r3
   1da6a:	d10a      	bne.n	1da82 <__aeabi_dmul+0x24a>
   1da6c:	ea81 0103 	eor.w	r1, r1, r3
   1da70:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   1da74:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   1da78:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   1da7c:	f04f 0000 	mov.w	r0, #0
   1da80:	bd70      	pop	{r4, r5, r6, pc}
   1da82:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   1da86:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
   1da8a:	bd70      	pop	{r4, r5, r6, pc}

0001da8c <__aeabi_ddiv>:
__aeabi_ddiv():
   1da8c:	b570      	push	{r4, r5, r6, lr}
   1da8e:	f04f 0cff 	mov.w	ip, #255	; 0xff
   1da92:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   1da96:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   1da9a:	bf1d      	ittte	ne
   1da9c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   1daa0:	ea94 0f0c 	teqne	r4, ip
   1daa4:	ea95 0f0c 	teqne	r5, ip
   1daa8:	f000 f8a7 	bleq	1dbfa <__aeabi_ddiv+0x16e>
   1daac:	eba4 0405 	sub.w	r4, r4, r5
   1dab0:	ea81 0e03 	eor.w	lr, r1, r3
   1dab4:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   1dab8:	ea4f 3101 	mov.w	r1, r1, lsl #12
   1dabc:	f000 8088 	beq.w	1dbd0 <__aeabi_ddiv+0x144>
   1dac0:	ea4f 3303 	mov.w	r3, r3, lsl #12
   1dac4:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
   1dac8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
   1dacc:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
   1dad0:	ea4f 2202 	mov.w	r2, r2, lsl #8
   1dad4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
   1dad8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
   1dadc:	ea4f 2600 	mov.w	r6, r0, lsl #8
   1dae0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
   1dae4:	429d      	cmp	r5, r3
   1dae6:	bf08      	it	eq
   1dae8:	4296      	cmpeq	r6, r2
   1daea:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
   1daee:	f504 7440 	add.w	r4, r4, #768	; 0x300
   1daf2:	d202      	bcs.n	1dafa <__aeabi_ddiv+0x6e>
   1daf4:	085b      	lsrs	r3, r3, #1
   1daf6:	ea4f 0232 	mov.w	r2, r2, rrx
   1dafa:	1ab6      	subs	r6, r6, r2
   1dafc:	eb65 0503 	sbc.w	r5, r5, r3
   1db00:	085b      	lsrs	r3, r3, #1
   1db02:	ea4f 0232 	mov.w	r2, r2, rrx
   1db06:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
   1db0a:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
   1db0e:	ebb6 0e02 	subs.w	lr, r6, r2
   1db12:	eb75 0e03 	sbcs.w	lr, r5, r3
   1db16:	bf22      	ittt	cs
   1db18:	1ab6      	subcs	r6, r6, r2
   1db1a:	4675      	movcs	r5, lr
   1db1c:	ea40 000c 	orrcs.w	r0, r0, ip
   1db20:	085b      	lsrs	r3, r3, #1
   1db22:	ea4f 0232 	mov.w	r2, r2, rrx
   1db26:	ebb6 0e02 	subs.w	lr, r6, r2
   1db2a:	eb75 0e03 	sbcs.w	lr, r5, r3
   1db2e:	bf22      	ittt	cs
   1db30:	1ab6      	subcs	r6, r6, r2
   1db32:	4675      	movcs	r5, lr
   1db34:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
   1db38:	085b      	lsrs	r3, r3, #1
   1db3a:	ea4f 0232 	mov.w	r2, r2, rrx
   1db3e:	ebb6 0e02 	subs.w	lr, r6, r2
   1db42:	eb75 0e03 	sbcs.w	lr, r5, r3
   1db46:	bf22      	ittt	cs
   1db48:	1ab6      	subcs	r6, r6, r2
   1db4a:	4675      	movcs	r5, lr
   1db4c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
   1db50:	085b      	lsrs	r3, r3, #1
   1db52:	ea4f 0232 	mov.w	r2, r2, rrx
   1db56:	ebb6 0e02 	subs.w	lr, r6, r2
   1db5a:	eb75 0e03 	sbcs.w	lr, r5, r3
   1db5e:	bf22      	ittt	cs
   1db60:	1ab6      	subcs	r6, r6, r2
   1db62:	4675      	movcs	r5, lr
   1db64:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
   1db68:	ea55 0e06 	orrs.w	lr, r5, r6
   1db6c:	d018      	beq.n	1dba0 <__aeabi_ddiv+0x114>
   1db6e:	ea4f 1505 	mov.w	r5, r5, lsl #4
   1db72:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
   1db76:	ea4f 1606 	mov.w	r6, r6, lsl #4
   1db7a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
   1db7e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
   1db82:	ea4f 02c2 	mov.w	r2, r2, lsl #3
   1db86:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
   1db8a:	d1c0      	bne.n	1db0e <__aeabi_ddiv+0x82>
   1db8c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   1db90:	d10b      	bne.n	1dbaa <__aeabi_ddiv+0x11e>
   1db92:	ea41 0100 	orr.w	r1, r1, r0
   1db96:	f04f 0000 	mov.w	r0, #0
   1db9a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
   1db9e:	e7b6      	b.n	1db0e <__aeabi_ddiv+0x82>
   1dba0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   1dba4:	bf04      	itt	eq
   1dba6:	4301      	orreq	r1, r0
   1dba8:	2000      	moveq	r0, #0
   1dbaa:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   1dbae:	bf88      	it	hi
   1dbb0:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   1dbb4:	f63f aeaf 	bhi.w	1d916 <__aeabi_dmul+0xde>
   1dbb8:	ebb5 0c03 	subs.w	ip, r5, r3
   1dbbc:	bf04      	itt	eq
   1dbbe:	ebb6 0c02 	subseq.w	ip, r6, r2
   1dbc2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   1dbc6:	f150 0000 	adcs.w	r0, r0, #0
   1dbca:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   1dbce:	bd70      	pop	{r4, r5, r6, pc}
   1dbd0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
   1dbd4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
   1dbd8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
   1dbdc:	bfc2      	ittt	gt
   1dbde:	ebd4 050c 	rsbsgt	r5, r4, ip
   1dbe2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   1dbe6:	bd70      	popgt	{r4, r5, r6, pc}
   1dbe8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   1dbec:	f04f 0e00 	mov.w	lr, #0
   1dbf0:	3c01      	subs	r4, #1
   1dbf2:	e690      	b.n	1d916 <__aeabi_dmul+0xde>
   1dbf4:	ea45 0e06 	orr.w	lr, r5, r6
   1dbf8:	e68d      	b.n	1d916 <__aeabi_dmul+0xde>
   1dbfa:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   1dbfe:	ea94 0f0c 	teq	r4, ip
   1dc02:	bf08      	it	eq
   1dc04:	ea95 0f0c 	teqeq	r5, ip
   1dc08:	f43f af3b 	beq.w	1da82 <__aeabi_dmul+0x24a>
   1dc0c:	ea94 0f0c 	teq	r4, ip
   1dc10:	d10a      	bne.n	1dc28 <__aeabi_ddiv+0x19c>
   1dc12:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   1dc16:	f47f af34 	bne.w	1da82 <__aeabi_dmul+0x24a>
   1dc1a:	ea95 0f0c 	teq	r5, ip
   1dc1e:	f47f af25 	bne.w	1da6c <__aeabi_dmul+0x234>
   1dc22:	4610      	mov	r0, r2
   1dc24:	4619      	mov	r1, r3
   1dc26:	e72c      	b.n	1da82 <__aeabi_dmul+0x24a>
   1dc28:	ea95 0f0c 	teq	r5, ip
   1dc2c:	d106      	bne.n	1dc3c <__aeabi_ddiv+0x1b0>
   1dc2e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   1dc32:	f43f aefd 	beq.w	1da30 <__aeabi_dmul+0x1f8>
   1dc36:	4610      	mov	r0, r2
   1dc38:	4619      	mov	r1, r3
   1dc3a:	e722      	b.n	1da82 <__aeabi_dmul+0x24a>
   1dc3c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   1dc40:	bf18      	it	ne
   1dc42:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   1dc46:	f47f aec5 	bne.w	1d9d4 <__aeabi_dmul+0x19c>
   1dc4a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
   1dc4e:	f47f af0d 	bne.w	1da6c <__aeabi_dmul+0x234>
   1dc52:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
   1dc56:	f47f aeeb 	bne.w	1da30 <__aeabi_dmul+0x1f8>
   1dc5a:	e712      	b.n	1da82 <__aeabi_dmul+0x24a>

0001dc5c <__aeabi_d2uiz>:
__fixunsdfsi():
   1dc5c:	004a      	lsls	r2, r1, #1
   1dc5e:	d211      	bcs.n	1dc84 <__aeabi_d2uiz+0x28>
   1dc60:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
   1dc64:	d211      	bcs.n	1dc8a <__aeabi_d2uiz+0x2e>
   1dc66:	d50d      	bpl.n	1dc84 <__aeabi_d2uiz+0x28>
   1dc68:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
   1dc6c:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
   1dc70:	d40e      	bmi.n	1dc90 <__aeabi_d2uiz+0x34>
   1dc72:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   1dc76:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   1dc7a:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
   1dc7e:	fa23 f002 	lsr.w	r0, r3, r2
   1dc82:	4770      	bx	lr
   1dc84:	f04f 0000 	mov.w	r0, #0
   1dc88:	4770      	bx	lr
   1dc8a:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
   1dc8e:	d102      	bne.n	1dc96 <__aeabi_d2uiz+0x3a>
   1dc90:	f04f 30ff 	mov.w	r0, #4294967295
   1dc94:	4770      	bx	lr
   1dc96:	f04f 0000 	mov.w	r0, #0
   1dc9a:	4770      	bx	lr

0001dc9c <__aeabi_d2f>:
__aeabi_d2f():
   1dc9c:	ea4f 0241 	mov.w	r2, r1, lsl #1
   1dca0:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
   1dca4:	bf24      	itt	cs
   1dca6:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
   1dcaa:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
   1dcae:	d90d      	bls.n	1dccc <__aeabi_d2f+0x30>
   1dcb0:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
   1dcb4:	ea4f 02c0 	mov.w	r2, r0, lsl #3
   1dcb8:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
   1dcbc:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
   1dcc0:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
   1dcc4:	bf08      	it	eq
   1dcc6:	f020 0001 	biceq.w	r0, r0, #1
   1dcca:	4770      	bx	lr
   1dccc:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
   1dcd0:	d121      	bne.n	1dd16 <__aeabi_d2f+0x7a>
   1dcd2:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
   1dcd6:	bfbc      	itt	lt
   1dcd8:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
   1dcdc:	4770      	bxlt	lr
   1dcde:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   1dce2:	ea4f 5252 	mov.w	r2, r2, lsr #21
   1dce6:	f1c2 0218 	rsb	r2, r2, #24
   1dcea:	f1c2 0c20 	rsb	ip, r2, #32
   1dcee:	fa10 f30c 	lsls.w	r3, r0, ip
   1dcf2:	fa20 f002 	lsr.w	r0, r0, r2
   1dcf6:	bf18      	it	ne
   1dcf8:	f040 0001 	orrne.w	r0, r0, #1
   1dcfc:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   1dd00:	ea4f 23d3 	mov.w	r3, r3, lsr #11
   1dd04:	fa03 fc0c 	lsl.w	ip, r3, ip
   1dd08:	ea40 000c 	orr.w	r0, r0, ip
   1dd0c:	fa23 f302 	lsr.w	r3, r3, r2
   1dd10:	ea4f 0343 	mov.w	r3, r3, lsl #1
   1dd14:	e7cc      	b.n	1dcb0 <__aeabi_d2f+0x14>
   1dd16:	ea7f 5362 	mvns.w	r3, r2, asr #21
   1dd1a:	d107      	bne.n	1dd2c <__aeabi_d2f+0x90>
   1dd1c:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
   1dd20:	bf1e      	ittt	ne
   1dd22:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
   1dd26:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
   1dd2a:	4770      	bxne	lr
   1dd2c:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
   1dd30:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
   1dd34:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   1dd38:	4770      	bx	lr
   1dd3a:	bf00      	nop

0001dd3c <__aeabi_frsub>:
__aeabi_frsub():
   1dd3c:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
   1dd40:	e002      	b.n	1dd48 <__addsf3>
   1dd42:	bf00      	nop

0001dd44 <__aeabi_fsub>:
   1dd44:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

0001dd48 <__addsf3>:
   1dd48:	0042      	lsls	r2, r0, #1
   1dd4a:	bf1f      	itttt	ne
   1dd4c:	ea5f 0341 	movsne.w	r3, r1, lsl #1
   1dd50:	ea92 0f03 	teqne	r2, r3
   1dd54:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
   1dd58:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
   1dd5c:	d06a      	beq.n	1de34 <__addsf3+0xec>
   1dd5e:	ea4f 6212 	mov.w	r2, r2, lsr #24
   1dd62:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
   1dd66:	bfc1      	itttt	gt
   1dd68:	18d2      	addgt	r2, r2, r3
   1dd6a:	4041      	eorgt	r1, r0
   1dd6c:	4048      	eorgt	r0, r1
   1dd6e:	4041      	eorgt	r1, r0
   1dd70:	bfb8      	it	lt
   1dd72:	425b      	neglt	r3, r3
   1dd74:	2b19      	cmp	r3, #25
   1dd76:	bf88      	it	hi
   1dd78:	4770      	bxhi	lr
   1dd7a:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
   1dd7e:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   1dd82:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
   1dd86:	bf18      	it	ne
   1dd88:	4240      	negne	r0, r0
   1dd8a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   1dd8e:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
   1dd92:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
   1dd96:	bf18      	it	ne
   1dd98:	4249      	negne	r1, r1
   1dd9a:	ea92 0f03 	teq	r2, r3
   1dd9e:	d03f      	beq.n	1de20 <__addsf3+0xd8>
   1dda0:	f1a2 0201 	sub.w	r2, r2, #1
   1dda4:	fa41 fc03 	asr.w	ip, r1, r3
   1dda8:	eb10 000c 	adds.w	r0, r0, ip
   1ddac:	f1c3 0320 	rsb	r3, r3, #32
   1ddb0:	fa01 f103 	lsl.w	r1, r1, r3
   1ddb4:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
   1ddb8:	d502      	bpl.n	1ddc0 <__addsf3+0x78>
   1ddba:	4249      	negs	r1, r1
   1ddbc:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
   1ddc0:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
   1ddc4:	d313      	bcc.n	1ddee <__addsf3+0xa6>
   1ddc6:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
   1ddca:	d306      	bcc.n	1ddda <__addsf3+0x92>
   1ddcc:	0840      	lsrs	r0, r0, #1
   1ddce:	ea4f 0131 	mov.w	r1, r1, rrx
   1ddd2:	f102 0201 	add.w	r2, r2, #1
   1ddd6:	2afe      	cmp	r2, #254	; 0xfe
   1ddd8:	d251      	bcs.n	1de7e <__addsf3+0x136>
   1ddda:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
   1ddde:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
   1dde2:	bf08      	it	eq
   1dde4:	f020 0001 	biceq.w	r0, r0, #1
   1dde8:	ea40 0003 	orr.w	r0, r0, r3
   1ddec:	4770      	bx	lr
   1ddee:	0049      	lsls	r1, r1, #1
   1ddf0:	eb40 0000 	adc.w	r0, r0, r0
   1ddf4:	f410 0f00 	tst.w	r0, #8388608	; 0x800000
   1ddf8:	f1a2 0201 	sub.w	r2, r2, #1
   1ddfc:	d1ed      	bne.n	1ddda <__addsf3+0x92>
   1ddfe:	fab0 fc80 	clz	ip, r0
   1de02:	f1ac 0c08 	sub.w	ip, ip, #8
   1de06:	ebb2 020c 	subs.w	r2, r2, ip
   1de0a:	fa00 f00c 	lsl.w	r0, r0, ip
   1de0e:	bfaa      	itet	ge
   1de10:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
   1de14:	4252      	neglt	r2, r2
   1de16:	4318      	orrge	r0, r3
   1de18:	bfbc      	itt	lt
   1de1a:	40d0      	lsrlt	r0, r2
   1de1c:	4318      	orrlt	r0, r3
   1de1e:	4770      	bx	lr
   1de20:	f092 0f00 	teq	r2, #0
   1de24:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
   1de28:	bf06      	itte	eq
   1de2a:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
   1de2e:	3201      	addeq	r2, #1
   1de30:	3b01      	subne	r3, #1
   1de32:	e7b5      	b.n	1dda0 <__addsf3+0x58>
   1de34:	ea4f 0341 	mov.w	r3, r1, lsl #1
   1de38:	ea7f 6c22 	mvns.w	ip, r2, asr #24
   1de3c:	bf18      	it	ne
   1de3e:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
   1de42:	d021      	beq.n	1de88 <__addsf3+0x140>
   1de44:	ea92 0f03 	teq	r2, r3
   1de48:	d004      	beq.n	1de54 <__addsf3+0x10c>
   1de4a:	f092 0f00 	teq	r2, #0
   1de4e:	bf08      	it	eq
   1de50:	4608      	moveq	r0, r1
   1de52:	4770      	bx	lr
   1de54:	ea90 0f01 	teq	r0, r1
   1de58:	bf1c      	itt	ne
   1de5a:	2000      	movne	r0, #0
   1de5c:	4770      	bxne	lr
   1de5e:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
   1de62:	d104      	bne.n	1de6e <__addsf3+0x126>
   1de64:	0040      	lsls	r0, r0, #1
   1de66:	bf28      	it	cs
   1de68:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
   1de6c:	4770      	bx	lr
   1de6e:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
   1de72:	bf3c      	itt	cc
   1de74:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
   1de78:	4770      	bxcc	lr
   1de7a:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
   1de7e:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
   1de82:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   1de86:	4770      	bx	lr
   1de88:	ea7f 6222 	mvns.w	r2, r2, asr #24
   1de8c:	bf16      	itet	ne
   1de8e:	4608      	movne	r0, r1
   1de90:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
   1de94:	4601      	movne	r1, r0
   1de96:	0242      	lsls	r2, r0, #9
   1de98:	bf06      	itte	eq
   1de9a:	ea5f 2341 	movseq.w	r3, r1, lsl #9
   1de9e:	ea90 0f01 	teqeq	r0, r1
   1dea2:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
   1dea6:	4770      	bx	lr

0001dea8 <__aeabi_ui2f>:
__aeabi_ui2f():
   1dea8:	f04f 0300 	mov.w	r3, #0
   1deac:	e004      	b.n	1deb8 <__aeabi_i2f+0x8>
   1deae:	bf00      	nop

0001deb0 <__aeabi_i2f>:
   1deb0:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
   1deb4:	bf48      	it	mi
   1deb6:	4240      	negmi	r0, r0
   1deb8:	ea5f 0c00 	movs.w	ip, r0
   1debc:	bf08      	it	eq
   1debe:	4770      	bxeq	lr
   1dec0:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
   1dec4:	4601      	mov	r1, r0
   1dec6:	f04f 0000 	mov.w	r0, #0
   1deca:	e01c      	b.n	1df06 <__aeabi_l2f+0x2a>

0001decc <__aeabi_ul2f>:
__floatundisf():
   1decc:	ea50 0201 	orrs.w	r2, r0, r1
   1ded0:	bf08      	it	eq
   1ded2:	4770      	bxeq	lr
   1ded4:	f04f 0300 	mov.w	r3, #0
   1ded8:	e00a      	b.n	1def0 <__aeabi_l2f+0x14>
   1deda:	bf00      	nop

0001dedc <__aeabi_l2f>:
   1dedc:	ea50 0201 	orrs.w	r2, r0, r1
   1dee0:	bf08      	it	eq
   1dee2:	4770      	bxeq	lr
   1dee4:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
   1dee8:	d502      	bpl.n	1def0 <__aeabi_l2f+0x14>
   1deea:	4240      	negs	r0, r0
   1deec:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   1def0:	ea5f 0c01 	movs.w	ip, r1
   1def4:	bf02      	ittt	eq
   1def6:	4684      	moveq	ip, r0
   1def8:	4601      	moveq	r1, r0
   1defa:	2000      	moveq	r0, #0
   1defc:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
   1df00:	bf08      	it	eq
   1df02:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
   1df06:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
   1df0a:	fabc f28c 	clz	r2, ip
   1df0e:	3a08      	subs	r2, #8
   1df10:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
   1df14:	db10      	blt.n	1df38 <__aeabi_l2f+0x5c>
   1df16:	fa01 fc02 	lsl.w	ip, r1, r2
   1df1a:	4463      	add	r3, ip
   1df1c:	fa00 fc02 	lsl.w	ip, r0, r2
   1df20:	f1c2 0220 	rsb	r2, r2, #32
   1df24:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
   1df28:	fa20 f202 	lsr.w	r2, r0, r2
   1df2c:	eb43 0002 	adc.w	r0, r3, r2
   1df30:	bf08      	it	eq
   1df32:	f020 0001 	biceq.w	r0, r0, #1
   1df36:	4770      	bx	lr
   1df38:	f102 0220 	add.w	r2, r2, #32
   1df3c:	fa01 fc02 	lsl.w	ip, r1, r2
   1df40:	f1c2 0220 	rsb	r2, r2, #32
   1df44:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
   1df48:	fa21 f202 	lsr.w	r2, r1, r2
   1df4c:	eb43 0002 	adc.w	r0, r3, r2
   1df50:	bf08      	it	eq
   1df52:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
   1df56:	4770      	bx	lr

0001df58 <__aeabi_fmul>:
__mulsf3():
   1df58:	f04f 0cff 	mov.w	ip, #255	; 0xff
   1df5c:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
   1df60:	bf1e      	ittt	ne
   1df62:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
   1df66:	ea92 0f0c 	teqne	r2, ip
   1df6a:	ea93 0f0c 	teqne	r3, ip
   1df6e:	d06f      	beq.n	1e050 <__aeabi_fmul+0xf8>
   1df70:	441a      	add	r2, r3
   1df72:	ea80 0c01 	eor.w	ip, r0, r1
   1df76:	0240      	lsls	r0, r0, #9
   1df78:	bf18      	it	ne
   1df7a:	ea5f 2141 	movsne.w	r1, r1, lsl #9
   1df7e:	d01e      	beq.n	1dfbe <__aeabi_fmul+0x66>
   1df80:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
   1df84:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
   1df88:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
   1df8c:	fba0 3101 	umull	r3, r1, r0, r1
   1df90:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
   1df94:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
   1df98:	bf3e      	ittt	cc
   1df9a:	0049      	lslcc	r1, r1, #1
   1df9c:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
   1dfa0:	005b      	lslcc	r3, r3, #1
   1dfa2:	ea40 0001 	orr.w	r0, r0, r1
   1dfa6:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
   1dfaa:	2afd      	cmp	r2, #253	; 0xfd
   1dfac:	d81d      	bhi.n	1dfea <__aeabi_fmul+0x92>
   1dfae:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
   1dfb2:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
   1dfb6:	bf08      	it	eq
   1dfb8:	f020 0001 	biceq.w	r0, r0, #1
   1dfbc:	4770      	bx	lr
   1dfbe:	f090 0f00 	teq	r0, #0
   1dfc2:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
   1dfc6:	bf08      	it	eq
   1dfc8:	0249      	lsleq	r1, r1, #9
   1dfca:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
   1dfce:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
   1dfd2:	3a7f      	subs	r2, #127	; 0x7f
   1dfd4:	bfc2      	ittt	gt
   1dfd6:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
   1dfda:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
   1dfde:	4770      	bxgt	lr
   1dfe0:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   1dfe4:	f04f 0300 	mov.w	r3, #0
   1dfe8:	3a01      	subs	r2, #1
   1dfea:	dc5d      	bgt.n	1e0a8 <__aeabi_fmul+0x150>
   1dfec:	f112 0f19 	cmn.w	r2, #25
   1dff0:	bfdc      	itt	le
   1dff2:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
   1dff6:	4770      	bxle	lr
   1dff8:	f1c2 0200 	rsb	r2, r2, #0
   1dffc:	0041      	lsls	r1, r0, #1
   1dffe:	fa21 f102 	lsr.w	r1, r1, r2
   1e002:	f1c2 0220 	rsb	r2, r2, #32
   1e006:	fa00 fc02 	lsl.w	ip, r0, r2
   1e00a:	ea5f 0031 	movs.w	r0, r1, rrx
   1e00e:	f140 0000 	adc.w	r0, r0, #0
   1e012:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
   1e016:	bf08      	it	eq
   1e018:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
   1e01c:	4770      	bx	lr
   1e01e:	f092 0f00 	teq	r2, #0
   1e022:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
   1e026:	bf02      	ittt	eq
   1e028:	0040      	lsleq	r0, r0, #1
   1e02a:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
   1e02e:	3a01      	subeq	r2, #1
   1e030:	d0f9      	beq.n	1e026 <__aeabi_fmul+0xce>
   1e032:	ea40 000c 	orr.w	r0, r0, ip
   1e036:	f093 0f00 	teq	r3, #0
   1e03a:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
   1e03e:	bf02      	ittt	eq
   1e040:	0049      	lsleq	r1, r1, #1
   1e042:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
   1e046:	3b01      	subeq	r3, #1
   1e048:	d0f9      	beq.n	1e03e <__aeabi_fmul+0xe6>
   1e04a:	ea41 010c 	orr.w	r1, r1, ip
   1e04e:	e78f      	b.n	1df70 <__aeabi_fmul+0x18>
   1e050:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
   1e054:	ea92 0f0c 	teq	r2, ip
   1e058:	bf18      	it	ne
   1e05a:	ea93 0f0c 	teqne	r3, ip
   1e05e:	d00a      	beq.n	1e076 <__aeabi_fmul+0x11e>
   1e060:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
   1e064:	bf18      	it	ne
   1e066:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
   1e06a:	d1d8      	bne.n	1e01e <__aeabi_fmul+0xc6>
   1e06c:	ea80 0001 	eor.w	r0, r0, r1
   1e070:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
   1e074:	4770      	bx	lr
   1e076:	f090 0f00 	teq	r0, #0
   1e07a:	bf17      	itett	ne
   1e07c:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
   1e080:	4608      	moveq	r0, r1
   1e082:	f091 0f00 	teqne	r1, #0
   1e086:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
   1e08a:	d014      	beq.n	1e0b6 <__aeabi_fmul+0x15e>
   1e08c:	ea92 0f0c 	teq	r2, ip
   1e090:	d101      	bne.n	1e096 <__aeabi_fmul+0x13e>
   1e092:	0242      	lsls	r2, r0, #9
   1e094:	d10f      	bne.n	1e0b6 <__aeabi_fmul+0x15e>
   1e096:	ea93 0f0c 	teq	r3, ip
   1e09a:	d103      	bne.n	1e0a4 <__aeabi_fmul+0x14c>
   1e09c:	024b      	lsls	r3, r1, #9
   1e09e:	bf18      	it	ne
   1e0a0:	4608      	movne	r0, r1
   1e0a2:	d108      	bne.n	1e0b6 <__aeabi_fmul+0x15e>
   1e0a4:	ea80 0001 	eor.w	r0, r0, r1
   1e0a8:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
   1e0ac:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
   1e0b0:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   1e0b4:	4770      	bx	lr
   1e0b6:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
   1e0ba:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
   1e0be:	4770      	bx	lr

0001e0c0 <__aeabi_fdiv>:
__divsf3():
   1e0c0:	f04f 0cff 	mov.w	ip, #255	; 0xff
   1e0c4:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
   1e0c8:	bf1e      	ittt	ne
   1e0ca:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
   1e0ce:	ea92 0f0c 	teqne	r2, ip
   1e0d2:	ea93 0f0c 	teqne	r3, ip
   1e0d6:	d069      	beq.n	1e1ac <__aeabi_fdiv+0xec>
   1e0d8:	eba2 0203 	sub.w	r2, r2, r3
   1e0dc:	ea80 0c01 	eor.w	ip, r0, r1
   1e0e0:	0249      	lsls	r1, r1, #9
   1e0e2:	ea4f 2040 	mov.w	r0, r0, lsl #9
   1e0e6:	d037      	beq.n	1e158 <__aeabi_fdiv+0x98>
   1e0e8:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
   1e0ec:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
   1e0f0:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
   1e0f4:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
   1e0f8:	428b      	cmp	r3, r1
   1e0fa:	bf38      	it	cc
   1e0fc:	005b      	lslcc	r3, r3, #1
   1e0fe:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
   1e102:	f44f 0c00 	mov.w	ip, #8388608	; 0x800000
   1e106:	428b      	cmp	r3, r1
   1e108:	bf24      	itt	cs
   1e10a:	1a5b      	subcs	r3, r3, r1
   1e10c:	ea40 000c 	orrcs.w	r0, r0, ip
   1e110:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
   1e114:	bf24      	itt	cs
   1e116:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
   1e11a:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
   1e11e:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
   1e122:	bf24      	itt	cs
   1e124:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
   1e128:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
   1e12c:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
   1e130:	bf24      	itt	cs
   1e132:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
   1e136:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
   1e13a:	011b      	lsls	r3, r3, #4
   1e13c:	bf18      	it	ne
   1e13e:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
   1e142:	d1e0      	bne.n	1e106 <__aeabi_fdiv+0x46>
   1e144:	2afd      	cmp	r2, #253	; 0xfd
   1e146:	f63f af50 	bhi.w	1dfea <__aeabi_fmul+0x92>
   1e14a:	428b      	cmp	r3, r1
   1e14c:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
   1e150:	bf08      	it	eq
   1e152:	f020 0001 	biceq.w	r0, r0, #1
   1e156:	4770      	bx	lr
   1e158:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
   1e15c:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
   1e160:	327f      	adds	r2, #127	; 0x7f
   1e162:	bfc2      	ittt	gt
   1e164:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
   1e168:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
   1e16c:	4770      	bxgt	lr
   1e16e:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   1e172:	f04f 0300 	mov.w	r3, #0
   1e176:	3a01      	subs	r2, #1
   1e178:	e737      	b.n	1dfea <__aeabi_fmul+0x92>
   1e17a:	f092 0f00 	teq	r2, #0
   1e17e:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
   1e182:	bf02      	ittt	eq
   1e184:	0040      	lsleq	r0, r0, #1
   1e186:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
   1e18a:	3a01      	subeq	r2, #1
   1e18c:	d0f9      	beq.n	1e182 <__aeabi_fdiv+0xc2>
   1e18e:	ea40 000c 	orr.w	r0, r0, ip
   1e192:	f093 0f00 	teq	r3, #0
   1e196:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
   1e19a:	bf02      	ittt	eq
   1e19c:	0049      	lsleq	r1, r1, #1
   1e19e:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
   1e1a2:	3b01      	subeq	r3, #1
   1e1a4:	d0f9      	beq.n	1e19a <__aeabi_fdiv+0xda>
   1e1a6:	ea41 010c 	orr.w	r1, r1, ip
   1e1aa:	e795      	b.n	1e0d8 <__aeabi_fdiv+0x18>
   1e1ac:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
   1e1b0:	ea92 0f0c 	teq	r2, ip
   1e1b4:	d108      	bne.n	1e1c8 <__aeabi_fdiv+0x108>
   1e1b6:	0242      	lsls	r2, r0, #9
   1e1b8:	f47f af7d 	bne.w	1e0b6 <__aeabi_fmul+0x15e>
   1e1bc:	ea93 0f0c 	teq	r3, ip
   1e1c0:	f47f af70 	bne.w	1e0a4 <__aeabi_fmul+0x14c>
   1e1c4:	4608      	mov	r0, r1
   1e1c6:	e776      	b.n	1e0b6 <__aeabi_fmul+0x15e>
   1e1c8:	ea93 0f0c 	teq	r3, ip
   1e1cc:	d104      	bne.n	1e1d8 <__aeabi_fdiv+0x118>
   1e1ce:	024b      	lsls	r3, r1, #9
   1e1d0:	f43f af4c 	beq.w	1e06c <__aeabi_fmul+0x114>
   1e1d4:	4608      	mov	r0, r1
   1e1d6:	e76e      	b.n	1e0b6 <__aeabi_fmul+0x15e>
   1e1d8:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
   1e1dc:	bf18      	it	ne
   1e1de:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
   1e1e2:	d1ca      	bne.n	1e17a <__aeabi_fdiv+0xba>
   1e1e4:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
   1e1e8:	f47f af5c 	bne.w	1e0a4 <__aeabi_fmul+0x14c>
   1e1ec:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
   1e1f0:	f47f af3c 	bne.w	1e06c <__aeabi_fmul+0x114>
   1e1f4:	e75f      	b.n	1e0b6 <__aeabi_fmul+0x15e>
   1e1f6:	bf00      	nop

0001e1f8 <__gesf2>:
__gtsf2():
   1e1f8:	f04f 3cff 	mov.w	ip, #4294967295
   1e1fc:	e006      	b.n	1e20c <__cmpsf2+0x4>
   1e1fe:	bf00      	nop

0001e200 <__lesf2>:
   1e200:	f04f 0c01 	mov.w	ip, #1
   1e204:	e002      	b.n	1e20c <__cmpsf2+0x4>
   1e206:	bf00      	nop

0001e208 <__cmpsf2>:
   1e208:	f04f 0c01 	mov.w	ip, #1
   1e20c:	f84d cd04 	str.w	ip, [sp, #-4]!
   1e210:	ea4f 0240 	mov.w	r2, r0, lsl #1
   1e214:	ea4f 0341 	mov.w	r3, r1, lsl #1
   1e218:	ea7f 6c22 	mvns.w	ip, r2, asr #24
   1e21c:	bf18      	it	ne
   1e21e:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
   1e222:	d011      	beq.n	1e248 <__cmpsf2+0x40>
   1e224:	b001      	add	sp, #4
   1e226:	ea52 0c53 	orrs.w	ip, r2, r3, lsr #1
   1e22a:	bf18      	it	ne
   1e22c:	ea90 0f01 	teqne	r0, r1
   1e230:	bf58      	it	pl
   1e232:	ebb2 0003 	subspl.w	r0, r2, r3
   1e236:	bf88      	it	hi
   1e238:	17c8      	asrhi	r0, r1, #31
   1e23a:	bf38      	it	cc
   1e23c:	ea6f 70e1 	mvncc.w	r0, r1, asr #31
   1e240:	bf18      	it	ne
   1e242:	f040 0001 	orrne.w	r0, r0, #1
   1e246:	4770      	bx	lr
   1e248:	ea7f 6c22 	mvns.w	ip, r2, asr #24
   1e24c:	d102      	bne.n	1e254 <__cmpsf2+0x4c>
   1e24e:	ea5f 2c40 	movs.w	ip, r0, lsl #9
   1e252:	d105      	bne.n	1e260 <__cmpsf2+0x58>
   1e254:	ea7f 6c23 	mvns.w	ip, r3, asr #24
   1e258:	d1e4      	bne.n	1e224 <__cmpsf2+0x1c>
   1e25a:	ea5f 2c41 	movs.w	ip, r1, lsl #9
   1e25e:	d0e1      	beq.n	1e224 <__cmpsf2+0x1c>
   1e260:	f85d 0b04 	ldr.w	r0, [sp], #4
   1e264:	4770      	bx	lr
__nesf2():
   1e266:	bf00      	nop

0001e268 <__aeabi_cfrcmple>:
__aeabi_cfrcmple():
   1e268:	4684      	mov	ip, r0
   1e26a:	4608      	mov	r0, r1
   1e26c:	4661      	mov	r1, ip
   1e26e:	e7ff      	b.n	1e270 <__aeabi_cfcmpeq>

0001e270 <__aeabi_cfcmpeq>:
   1e270:	b50f      	push	{r0, r1, r2, r3, lr}
   1e272:	f7ff ffc9 	bl	1e208 <__cmpsf2>
   1e276:	2800      	cmp	r0, #0
   1e278:	bf48      	it	mi
   1e27a:	f110 0f00 	cmnmi.w	r0, #0
   1e27e:	bd0f      	pop	{r0, r1, r2, r3, pc}

0001e280 <__aeabi_fcmpeq>:
__aeabi_fcmpeq():
   1e280:	f84d ed08 	str.w	lr, [sp, #-8]!
   1e284:	f7ff fff4 	bl	1e270 <__aeabi_cfcmpeq>
   1e288:	bf0c      	ite	eq
   1e28a:	2001      	moveq	r0, #1
   1e28c:	2000      	movne	r0, #0
   1e28e:	f85d fb08 	ldr.w	pc, [sp], #8
   1e292:	bf00      	nop

0001e294 <__aeabi_fcmplt>:
__aeabi_fcmplt():
   1e294:	f84d ed08 	str.w	lr, [sp, #-8]!
   1e298:	f7ff ffea 	bl	1e270 <__aeabi_cfcmpeq>
   1e29c:	bf34      	ite	cc
   1e29e:	2001      	movcc	r0, #1
   1e2a0:	2000      	movcs	r0, #0
   1e2a2:	f85d fb08 	ldr.w	pc, [sp], #8
   1e2a6:	bf00      	nop

0001e2a8 <__aeabi_fcmple>:
__aeabi_fcmple():
   1e2a8:	f84d ed08 	str.w	lr, [sp, #-8]!
   1e2ac:	f7ff ffe0 	bl	1e270 <__aeabi_cfcmpeq>
   1e2b0:	bf94      	ite	ls
   1e2b2:	2001      	movls	r0, #1
   1e2b4:	2000      	movhi	r0, #0
   1e2b6:	f85d fb08 	ldr.w	pc, [sp], #8
   1e2ba:	bf00      	nop

0001e2bc <__aeabi_fcmpge>:
__aeabi_fcmpge():
   1e2bc:	f84d ed08 	str.w	lr, [sp, #-8]!
   1e2c0:	f7ff ffd2 	bl	1e268 <__aeabi_cfrcmple>
   1e2c4:	bf94      	ite	ls
   1e2c6:	2001      	movls	r0, #1
   1e2c8:	2000      	movhi	r0, #0
   1e2ca:	f85d fb08 	ldr.w	pc, [sp], #8
   1e2ce:	bf00      	nop

0001e2d0 <__aeabi_fcmpgt>:
__aeabi_fcmpgt():
   1e2d0:	f84d ed08 	str.w	lr, [sp, #-8]!
   1e2d4:	f7ff ffc8 	bl	1e268 <__aeabi_cfrcmple>
   1e2d8:	bf34      	ite	cc
   1e2da:	2001      	movcc	r0, #1
   1e2dc:	2000      	movcs	r0, #0
   1e2de:	f85d fb08 	ldr.w	pc, [sp], #8
   1e2e2:	bf00      	nop

0001e2e4 <__aeabi_f2iz>:
__fixsfsi():
   1e2e4:	ea4f 0240 	mov.w	r2, r0, lsl #1
   1e2e8:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
   1e2ec:	d30f      	bcc.n	1e30e <__aeabi_f2iz+0x2a>
   1e2ee:	f04f 039e 	mov.w	r3, #158	; 0x9e
   1e2f2:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
   1e2f6:	d90d      	bls.n	1e314 <__aeabi_f2iz+0x30>
   1e2f8:	ea4f 2300 	mov.w	r3, r0, lsl #8
   1e2fc:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   1e300:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
   1e304:	fa23 f002 	lsr.w	r0, r3, r2
   1e308:	bf18      	it	ne
   1e30a:	4240      	negne	r0, r0
   1e30c:	4770      	bx	lr
   1e30e:	f04f 0000 	mov.w	r0, #0
   1e312:	4770      	bx	lr
   1e314:	f112 0f61 	cmn.w	r2, #97	; 0x61
   1e318:	d101      	bne.n	1e31e <__aeabi_f2iz+0x3a>
   1e31a:	0242      	lsls	r2, r0, #9
   1e31c:	d105      	bne.n	1e32a <__aeabi_f2iz+0x46>
   1e31e:	f010 4000 	ands.w	r0, r0, #2147483648	; 0x80000000
   1e322:	bf08      	it	eq
   1e324:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
   1e328:	4770      	bx	lr
   1e32a:	f04f 0000 	mov.w	r0, #0
   1e32e:	4770      	bx	lr

0001e330 <__aeabi_f2uiz>:
__aeabi_f2uiz():
   1e330:	0042      	lsls	r2, r0, #1
   1e332:	d20e      	bcs.n	1e352 <__aeabi_f2uiz+0x22>
   1e334:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
   1e338:	d30b      	bcc.n	1e352 <__aeabi_f2uiz+0x22>
   1e33a:	f04f 039e 	mov.w	r3, #158	; 0x9e
   1e33e:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
   1e342:	d409      	bmi.n	1e358 <__aeabi_f2uiz+0x28>
   1e344:	ea4f 2300 	mov.w	r3, r0, lsl #8
   1e348:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   1e34c:	fa23 f002 	lsr.w	r0, r3, r2
   1e350:	4770      	bx	lr
   1e352:	f04f 0000 	mov.w	r0, #0
   1e356:	4770      	bx	lr
   1e358:	f112 0f61 	cmn.w	r2, #97	; 0x61
   1e35c:	d101      	bne.n	1e362 <__aeabi_f2uiz+0x32>
   1e35e:	0242      	lsls	r2, r0, #9
   1e360:	d102      	bne.n	1e368 <__aeabi_f2uiz+0x38>
   1e362:	f04f 30ff 	mov.w	r0, #4294967295
   1e366:	4770      	bx	lr
   1e368:	f04f 0000 	mov.w	r0, #0
   1e36c:	4770      	bx	lr
   1e36e:	bf00      	nop

0001e370 <__aeabi_uldivmod>:
$t():
   1e370:	b94b      	cbnz	r3, 1e386 <__aeabi_uldivmod+0x16>
   1e372:	b942      	cbnz	r2, 1e386 <__aeabi_uldivmod+0x16>
   1e374:	2900      	cmp	r1, #0
   1e376:	bf08      	it	eq
   1e378:	2800      	cmpeq	r0, #0
   1e37a:	d002      	beq.n	1e382 <__aeabi_uldivmod+0x12>
   1e37c:	f04f 31ff 	mov.w	r1, #4294967295
   1e380:	4608      	mov	r0, r1
   1e382:	f000 b83b 	b.w	1e3fc <__aeabi_idiv0>
   1e386:	b082      	sub	sp, #8
   1e388:	46ec      	mov	ip, sp
   1e38a:	e92d 5000 	stmdb	sp!, {ip, lr}
   1e38e:	f000 f81d 	bl	1e3cc <__gnu_uldivmod_helper>
   1e392:	f8dd e004 	ldr.w	lr, [sp, #4]
   1e396:	b002      	add	sp, #8
   1e398:	bc0c      	pop	{r2, r3}
   1e39a:	4770      	bx	lr

0001e39c <__gnu_ldivmod_helper>:
__gnu_ldivmod_helper():
   1e39c:	e92d 4f70 	stmdb	sp!, {r4, r5, r6, r8, r9, sl, fp, lr}
   1e3a0:	9e08      	ldr	r6, [sp, #32]
   1e3a2:	4614      	mov	r4, r2
   1e3a4:	461d      	mov	r5, r3
   1e3a6:	4680      	mov	r8, r0
   1e3a8:	4689      	mov	r9, r1
   1e3aa:	f000 f829 	bl	1e400 <__divdi3>
   1e3ae:	fb04 f301 	mul.w	r3, r4, r1
   1e3b2:	fba4 ab00 	umull	sl, fp, r4, r0
   1e3b6:	fb00 3205 	mla	r2, r0, r5, r3
   1e3ba:	4493      	add	fp, r2
   1e3bc:	ebb8 080a 	subs.w	r8, r8, sl
   1e3c0:	eb69 090b 	sbc.w	r9, r9, fp
   1e3c4:	e9c6 8900 	strd	r8, r9, [r6]
   1e3c8:	e8bd 8f70 	ldmia.w	sp!, {r4, r5, r6, r8, r9, sl, fp, pc}

0001e3cc <__gnu_uldivmod_helper>:
__gnu_uldivmod_helper():
   1e3cc:	e92d 4f70 	stmdb	sp!, {r4, r5, r6, r8, r9, sl, fp, lr}
   1e3d0:	9e08      	ldr	r6, [sp, #32]
   1e3d2:	4614      	mov	r4, r2
   1e3d4:	461d      	mov	r5, r3
   1e3d6:	4680      	mov	r8, r0
   1e3d8:	4689      	mov	r9, r1
   1e3da:	f000 f961 	bl	1e6a0 <__udivdi3>
   1e3de:	fb00 f505 	mul.w	r5, r0, r5
   1e3e2:	fba0 ab04 	umull	sl, fp, r0, r4
   1e3e6:	fb04 5401 	mla	r4, r4, r1, r5
   1e3ea:	44a3      	add	fp, r4
   1e3ec:	ebb8 080a 	subs.w	r8, r8, sl
   1e3f0:	eb69 090b 	sbc.w	r9, r9, fp
   1e3f4:	e9c6 8900 	strd	r8, r9, [r6]
   1e3f8:	e8bd 8f70 	ldmia.w	sp!, {r4, r5, r6, r8, r9, sl, fp, pc}

0001e3fc <__aeabi_idiv0>:
__aeabi_ldiv0():
   1e3fc:	4770      	bx	lr
   1e3fe:	bf00      	nop

0001e400 <__divdi3>:
__divdi3():
   1e400:	2900      	cmp	r1, #0
   1e402:	e92d 0ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   1e406:	f2c0 80a1 	blt.w	1e54c <__divdi3+0x14c>
   1e40a:	2400      	movs	r4, #0
   1e40c:	2b00      	cmp	r3, #0
   1e40e:	f2c0 8098 	blt.w	1e542 <__divdi3+0x142>
   1e412:	4615      	mov	r5, r2
   1e414:	4606      	mov	r6, r0
   1e416:	460f      	mov	r7, r1
   1e418:	2b00      	cmp	r3, #0
   1e41a:	d13f      	bne.n	1e49c <__divdi3+0x9c>
   1e41c:	428a      	cmp	r2, r1
   1e41e:	d958      	bls.n	1e4d2 <__divdi3+0xd2>
   1e420:	fab2 f382 	clz	r3, r2
   1e424:	b14b      	cbz	r3, 1e43a <__divdi3+0x3a>
   1e426:	f1c3 0220 	rsb	r2, r3, #32
   1e42a:	fa01 f703 	lsl.w	r7, r1, r3
   1e42e:	fa20 f202 	lsr.w	r2, r0, r2
   1e432:	409d      	lsls	r5, r3
   1e434:	fa00 f603 	lsl.w	r6, r0, r3
   1e438:	4317      	orrs	r7, r2
   1e43a:	0c29      	lsrs	r1, r5, #16
   1e43c:	fbb7 f2f1 	udiv	r2, r7, r1
   1e440:	fb01 7712 	mls	r7, r1, r2, r7
   1e444:	b2a8      	uxth	r0, r5
   1e446:	fb00 f302 	mul.w	r3, r0, r2
   1e44a:	ea4f 4c16 	mov.w	ip, r6, lsr #16
   1e44e:	ea4c 4707 	orr.w	r7, ip, r7, lsl #16
   1e452:	42bb      	cmp	r3, r7
   1e454:	d909      	bls.n	1e46a <__divdi3+0x6a>
   1e456:	197f      	adds	r7, r7, r5
   1e458:	f102 3cff 	add.w	ip, r2, #4294967295
   1e45c:	f080 8105 	bcs.w	1e66a <__divdi3+0x26a>
   1e460:	42bb      	cmp	r3, r7
   1e462:	f240 8102 	bls.w	1e66a <__divdi3+0x26a>
   1e466:	3a02      	subs	r2, #2
   1e468:	442f      	add	r7, r5
   1e46a:	1aff      	subs	r7, r7, r3
   1e46c:	fbb7 f3f1 	udiv	r3, r7, r1
   1e470:	fb01 7113 	mls	r1, r1, r3, r7
   1e474:	fb00 f003 	mul.w	r0, r0, r3
   1e478:	b2b6      	uxth	r6, r6
   1e47a:	ea46 4101 	orr.w	r1, r6, r1, lsl #16
   1e47e:	4288      	cmp	r0, r1
   1e480:	d908      	bls.n	1e494 <__divdi3+0x94>
   1e482:	1949      	adds	r1, r1, r5
   1e484:	f103 37ff 	add.w	r7, r3, #4294967295
   1e488:	f080 80f1 	bcs.w	1e66e <__divdi3+0x26e>
   1e48c:	4288      	cmp	r0, r1
   1e48e:	f240 80ee 	bls.w	1e66e <__divdi3+0x26e>
   1e492:	3b02      	subs	r3, #2
   1e494:	ea43 4202 	orr.w	r2, r3, r2, lsl #16
   1e498:	2300      	movs	r3, #0
   1e49a:	e003      	b.n	1e4a4 <__divdi3+0xa4>
   1e49c:	428b      	cmp	r3, r1
   1e49e:	d90a      	bls.n	1e4b6 <__divdi3+0xb6>
   1e4a0:	2300      	movs	r3, #0
   1e4a2:	461a      	mov	r2, r3
   1e4a4:	4610      	mov	r0, r2
   1e4a6:	4619      	mov	r1, r3
   1e4a8:	b114      	cbz	r4, 1e4b0 <__divdi3+0xb0>
   1e4aa:	4240      	negs	r0, r0
   1e4ac:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   1e4b0:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   1e4b4:	4770      	bx	lr
   1e4b6:	fab3 f883 	clz	r8, r3
   1e4ba:	f1b8 0f00 	cmp.w	r8, #0
   1e4be:	f040 8088 	bne.w	1e5d2 <__divdi3+0x1d2>
   1e4c2:	428b      	cmp	r3, r1
   1e4c4:	d302      	bcc.n	1e4cc <__divdi3+0xcc>
   1e4c6:	4282      	cmp	r2, r0
   1e4c8:	f200 80e2 	bhi.w	1e690 <__divdi3+0x290>
   1e4cc:	2300      	movs	r3, #0
   1e4ce:	2201      	movs	r2, #1
   1e4d0:	e7e8      	b.n	1e4a4 <__divdi3+0xa4>
   1e4d2:	b912      	cbnz	r2, 1e4da <__divdi3+0xda>
   1e4d4:	2301      	movs	r3, #1
   1e4d6:	fbb3 f5f2 	udiv	r5, r3, r2
   1e4da:	fab5 f285 	clz	r2, r5
   1e4de:	2a00      	cmp	r2, #0
   1e4e0:	d13a      	bne.n	1e558 <__divdi3+0x158>
   1e4e2:	1b7f      	subs	r7, r7, r5
   1e4e4:	0c28      	lsrs	r0, r5, #16
   1e4e6:	fa1f fc85 	uxth.w	ip, r5
   1e4ea:	2301      	movs	r3, #1
   1e4ec:	fbb7 f1f0 	udiv	r1, r7, r0
   1e4f0:	fb00 7711 	mls	r7, r0, r1, r7
   1e4f4:	fb0c f201 	mul.w	r2, ip, r1
   1e4f8:	ea4f 4816 	mov.w	r8, r6, lsr #16
   1e4fc:	ea48 4707 	orr.w	r7, r8, r7, lsl #16
   1e500:	42ba      	cmp	r2, r7
   1e502:	d907      	bls.n	1e514 <__divdi3+0x114>
   1e504:	197f      	adds	r7, r7, r5
   1e506:	f101 38ff 	add.w	r8, r1, #4294967295
   1e50a:	d202      	bcs.n	1e512 <__divdi3+0x112>
   1e50c:	42ba      	cmp	r2, r7
   1e50e:	f200 80c4 	bhi.w	1e69a <__divdi3+0x29a>
   1e512:	4641      	mov	r1, r8
   1e514:	1abf      	subs	r7, r7, r2
   1e516:	fbb7 f2f0 	udiv	r2, r7, r0
   1e51a:	fb00 7012 	mls	r0, r0, r2, r7
   1e51e:	fb0c fc02 	mul.w	ip, ip, r2
   1e522:	b2b6      	uxth	r6, r6
   1e524:	ea46 4000 	orr.w	r0, r6, r0, lsl #16
   1e528:	4584      	cmp	ip, r0
   1e52a:	d907      	bls.n	1e53c <__divdi3+0x13c>
   1e52c:	1940      	adds	r0, r0, r5
   1e52e:	f102 37ff 	add.w	r7, r2, #4294967295
   1e532:	d202      	bcs.n	1e53a <__divdi3+0x13a>
   1e534:	4584      	cmp	ip, r0
   1e536:	f200 80ae 	bhi.w	1e696 <__divdi3+0x296>
   1e53a:	463a      	mov	r2, r7
   1e53c:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
   1e540:	e7b0      	b.n	1e4a4 <__divdi3+0xa4>
   1e542:	43e4      	mvns	r4, r4
   1e544:	4252      	negs	r2, r2
   1e546:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
   1e54a:	e762      	b.n	1e412 <__divdi3+0x12>
   1e54c:	4240      	negs	r0, r0
   1e54e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   1e552:	f04f 34ff 	mov.w	r4, #4294967295
   1e556:	e759      	b.n	1e40c <__divdi3+0xc>
   1e558:	4095      	lsls	r5, r2
   1e55a:	f1c2 0920 	rsb	r9, r2, #32
   1e55e:	fa27 f109 	lsr.w	r1, r7, r9
   1e562:	fa26 f909 	lsr.w	r9, r6, r9
   1e566:	4097      	lsls	r7, r2
   1e568:	0c28      	lsrs	r0, r5, #16
   1e56a:	fbb1 f8f0 	udiv	r8, r1, r0
   1e56e:	fb00 1118 	mls	r1, r0, r8, r1
   1e572:	fa1f fc85 	uxth.w	ip, r5
   1e576:	fb0c f308 	mul.w	r3, ip, r8
   1e57a:	ea49 0907 	orr.w	r9, r9, r7
   1e57e:	ea4f 4719 	mov.w	r7, r9, lsr #16
   1e582:	ea47 4101 	orr.w	r1, r7, r1, lsl #16
   1e586:	428b      	cmp	r3, r1
   1e588:	fa06 f602 	lsl.w	r6, r6, r2
   1e58c:	d908      	bls.n	1e5a0 <__divdi3+0x1a0>
   1e58e:	1949      	adds	r1, r1, r5
   1e590:	f108 32ff 	add.w	r2, r8, #4294967295
   1e594:	d27a      	bcs.n	1e68c <__divdi3+0x28c>
   1e596:	428b      	cmp	r3, r1
   1e598:	d978      	bls.n	1e68c <__divdi3+0x28c>
   1e59a:	f1a8 0802 	sub.w	r8, r8, #2
   1e59e:	4429      	add	r1, r5
   1e5a0:	1ac9      	subs	r1, r1, r3
   1e5a2:	fbb1 f3f0 	udiv	r3, r1, r0
   1e5a6:	fb00 1713 	mls	r7, r0, r3, r1
   1e5aa:	fb0c f203 	mul.w	r2, ip, r3
   1e5ae:	fa1f f989 	uxth.w	r9, r9
   1e5b2:	ea49 4707 	orr.w	r7, r9, r7, lsl #16
   1e5b6:	42ba      	cmp	r2, r7
   1e5b8:	d907      	bls.n	1e5ca <__divdi3+0x1ca>
   1e5ba:	197f      	adds	r7, r7, r5
   1e5bc:	f103 31ff 	add.w	r1, r3, #4294967295
   1e5c0:	d260      	bcs.n	1e684 <__divdi3+0x284>
   1e5c2:	42ba      	cmp	r2, r7
   1e5c4:	d95e      	bls.n	1e684 <__divdi3+0x284>
   1e5c6:	3b02      	subs	r3, #2
   1e5c8:	442f      	add	r7, r5
   1e5ca:	1abf      	subs	r7, r7, r2
   1e5cc:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
   1e5d0:	e78c      	b.n	1e4ec <__divdi3+0xec>
   1e5d2:	f1c8 0220 	rsb	r2, r8, #32
   1e5d6:	fa25 f102 	lsr.w	r1, r5, r2
   1e5da:	fa03 fc08 	lsl.w	ip, r3, r8
   1e5de:	fa27 f302 	lsr.w	r3, r7, r2
   1e5e2:	fa20 f202 	lsr.w	r2, r0, r2
   1e5e6:	fa07 f708 	lsl.w	r7, r7, r8
   1e5ea:	ea41 0c0c 	orr.w	ip, r1, ip
   1e5ee:	ea4f 491c 	mov.w	r9, ip, lsr #16
   1e5f2:	fbb3 f1f9 	udiv	r1, r3, r9
   1e5f6:	fb09 3311 	mls	r3, r9, r1, r3
   1e5fa:	fa1f fa8c 	uxth.w	sl, ip
   1e5fe:	fb0a fb01 	mul.w	fp, sl, r1
   1e602:	4317      	orrs	r7, r2
   1e604:	0c3a      	lsrs	r2, r7, #16
   1e606:	ea42 4303 	orr.w	r3, r2, r3, lsl #16
   1e60a:	459b      	cmp	fp, r3
   1e60c:	fa05 f008 	lsl.w	r0, r5, r8
   1e610:	d908      	bls.n	1e624 <__divdi3+0x224>
   1e612:	eb13 030c 	adds.w	r3, r3, ip
   1e616:	f101 32ff 	add.w	r2, r1, #4294967295
   1e61a:	d235      	bcs.n	1e688 <__divdi3+0x288>
   1e61c:	459b      	cmp	fp, r3
   1e61e:	d933      	bls.n	1e688 <__divdi3+0x288>
   1e620:	3902      	subs	r1, #2
   1e622:	4463      	add	r3, ip
   1e624:	ebcb 0303 	rsb	r3, fp, r3
   1e628:	fbb3 f2f9 	udiv	r2, r3, r9
   1e62c:	fb09 3312 	mls	r3, r9, r2, r3
   1e630:	fb0a fa02 	mul.w	sl, sl, r2
   1e634:	b2bf      	uxth	r7, r7
   1e636:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
   1e63a:	45ba      	cmp	sl, r7
   1e63c:	d908      	bls.n	1e650 <__divdi3+0x250>
   1e63e:	eb17 070c 	adds.w	r7, r7, ip
   1e642:	f102 33ff 	add.w	r3, r2, #4294967295
   1e646:	d21b      	bcs.n	1e680 <__divdi3+0x280>
   1e648:	45ba      	cmp	sl, r7
   1e64a:	d919      	bls.n	1e680 <__divdi3+0x280>
   1e64c:	3a02      	subs	r2, #2
   1e64e:	4467      	add	r7, ip
   1e650:	ea42 4501 	orr.w	r5, r2, r1, lsl #16
   1e654:	fba5 0100 	umull	r0, r1, r5, r0
   1e658:	ebca 0707 	rsb	r7, sl, r7
   1e65c:	428f      	cmp	r7, r1
   1e65e:	f04f 0300 	mov.w	r3, #0
   1e662:	d30a      	bcc.n	1e67a <__divdi3+0x27a>
   1e664:	d005      	beq.n	1e672 <__divdi3+0x272>
   1e666:	462a      	mov	r2, r5
   1e668:	e71c      	b.n	1e4a4 <__divdi3+0xa4>
   1e66a:	4662      	mov	r2, ip
   1e66c:	e6fd      	b.n	1e46a <__divdi3+0x6a>
   1e66e:	463b      	mov	r3, r7
   1e670:	e710      	b.n	1e494 <__divdi3+0x94>
   1e672:	fa06 f608 	lsl.w	r6, r6, r8
   1e676:	4286      	cmp	r6, r0
   1e678:	d2f5      	bcs.n	1e666 <__divdi3+0x266>
   1e67a:	1e6a      	subs	r2, r5, #1
   1e67c:	2300      	movs	r3, #0
   1e67e:	e711      	b.n	1e4a4 <__divdi3+0xa4>
   1e680:	461a      	mov	r2, r3
   1e682:	e7e5      	b.n	1e650 <__divdi3+0x250>
   1e684:	460b      	mov	r3, r1
   1e686:	e7a0      	b.n	1e5ca <__divdi3+0x1ca>
   1e688:	4611      	mov	r1, r2
   1e68a:	e7cb      	b.n	1e624 <__divdi3+0x224>
   1e68c:	4690      	mov	r8, r2
   1e68e:	e787      	b.n	1e5a0 <__divdi3+0x1a0>
   1e690:	4643      	mov	r3, r8
   1e692:	4642      	mov	r2, r8
   1e694:	e706      	b.n	1e4a4 <__divdi3+0xa4>
   1e696:	3a02      	subs	r2, #2
   1e698:	e750      	b.n	1e53c <__divdi3+0x13c>
   1e69a:	3902      	subs	r1, #2
   1e69c:	442f      	add	r7, r5
   1e69e:	e739      	b.n	1e514 <__divdi3+0x114>

0001e6a0 <__udivdi3>:
__udivdi3():
   1e6a0:	e92d 0ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   1e6a4:	4614      	mov	r4, r2
   1e6a6:	4605      	mov	r5, r0
   1e6a8:	460e      	mov	r6, r1
   1e6aa:	2b00      	cmp	r3, #0
   1e6ac:	d143      	bne.n	1e736 <__udivdi3+0x96>
   1e6ae:	428a      	cmp	r2, r1
   1e6b0:	d953      	bls.n	1e75a <__udivdi3+0xba>
   1e6b2:	fab2 f782 	clz	r7, r2
   1e6b6:	b157      	cbz	r7, 1e6ce <__udivdi3+0x2e>
   1e6b8:	f1c7 0620 	rsb	r6, r7, #32
   1e6bc:	fa20 f606 	lsr.w	r6, r0, r6
   1e6c0:	fa01 f307 	lsl.w	r3, r1, r7
   1e6c4:	fa02 f407 	lsl.w	r4, r2, r7
   1e6c8:	fa00 f507 	lsl.w	r5, r0, r7
   1e6cc:	431e      	orrs	r6, r3
   1e6ce:	0c21      	lsrs	r1, r4, #16
   1e6d0:	fbb6 f2f1 	udiv	r2, r6, r1
   1e6d4:	fb01 6612 	mls	r6, r1, r2, r6
   1e6d8:	b2a0      	uxth	r0, r4
   1e6da:	fb00 f302 	mul.w	r3, r0, r2
   1e6de:	0c2f      	lsrs	r7, r5, #16
   1e6e0:	ea47 4606 	orr.w	r6, r7, r6, lsl #16
   1e6e4:	42b3      	cmp	r3, r6
   1e6e6:	d909      	bls.n	1e6fc <__udivdi3+0x5c>
   1e6e8:	1936      	adds	r6, r6, r4
   1e6ea:	f102 37ff 	add.w	r7, r2, #4294967295
   1e6ee:	f080 80fd 	bcs.w	1e8ec <__udivdi3+0x24c>
   1e6f2:	42b3      	cmp	r3, r6
   1e6f4:	f240 80fa 	bls.w	1e8ec <__udivdi3+0x24c>
   1e6f8:	3a02      	subs	r2, #2
   1e6fa:	4426      	add	r6, r4
   1e6fc:	1af6      	subs	r6, r6, r3
   1e6fe:	fbb6 f3f1 	udiv	r3, r6, r1
   1e702:	fb01 6113 	mls	r1, r1, r3, r6
   1e706:	fb00 f003 	mul.w	r0, r0, r3
   1e70a:	b2ad      	uxth	r5, r5
   1e70c:	ea45 4101 	orr.w	r1, r5, r1, lsl #16
   1e710:	4288      	cmp	r0, r1
   1e712:	d908      	bls.n	1e726 <__udivdi3+0x86>
   1e714:	1909      	adds	r1, r1, r4
   1e716:	f103 36ff 	add.w	r6, r3, #4294967295
   1e71a:	f080 80e9 	bcs.w	1e8f0 <__udivdi3+0x250>
   1e71e:	4288      	cmp	r0, r1
   1e720:	f240 80e6 	bls.w	1e8f0 <__udivdi3+0x250>
   1e724:	3b02      	subs	r3, #2
   1e726:	ea43 4202 	orr.w	r2, r3, r2, lsl #16
   1e72a:	2300      	movs	r3, #0
   1e72c:	4610      	mov	r0, r2
   1e72e:	4619      	mov	r1, r3
   1e730:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   1e734:	4770      	bx	lr
   1e736:	428b      	cmp	r3, r1
   1e738:	d84c      	bhi.n	1e7d4 <__udivdi3+0x134>
   1e73a:	fab3 f683 	clz	r6, r3
   1e73e:	2e00      	cmp	r6, #0
   1e740:	d14f      	bne.n	1e7e2 <__udivdi3+0x142>
   1e742:	428b      	cmp	r3, r1
   1e744:	d302      	bcc.n	1e74c <__udivdi3+0xac>
   1e746:	4282      	cmp	r2, r0
   1e748:	f200 80dd 	bhi.w	1e906 <__udivdi3+0x266>
   1e74c:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   1e750:	2300      	movs	r3, #0
   1e752:	2201      	movs	r2, #1
   1e754:	4610      	mov	r0, r2
   1e756:	4619      	mov	r1, r3
   1e758:	4770      	bx	lr
   1e75a:	b912      	cbnz	r2, 1e762 <__udivdi3+0xc2>
   1e75c:	2401      	movs	r4, #1
   1e75e:	fbb4 f4f2 	udiv	r4, r4, r2
   1e762:	fab4 f284 	clz	r2, r4
   1e766:	2a00      	cmp	r2, #0
   1e768:	f040 8082 	bne.w	1e870 <__udivdi3+0x1d0>
   1e76c:	1b09      	subs	r1, r1, r4
   1e76e:	0c26      	lsrs	r6, r4, #16
   1e770:	b2a7      	uxth	r7, r4
   1e772:	2301      	movs	r3, #1
   1e774:	fbb1 f0f6 	udiv	r0, r1, r6
   1e778:	fb06 1110 	mls	r1, r6, r0, r1
   1e77c:	fb07 f200 	mul.w	r2, r7, r0
   1e780:	ea4f 4c15 	mov.w	ip, r5, lsr #16
   1e784:	ea4c 4101 	orr.w	r1, ip, r1, lsl #16
   1e788:	428a      	cmp	r2, r1
   1e78a:	d907      	bls.n	1e79c <__udivdi3+0xfc>
   1e78c:	1909      	adds	r1, r1, r4
   1e78e:	f100 3cff 	add.w	ip, r0, #4294967295
   1e792:	d202      	bcs.n	1e79a <__udivdi3+0xfa>
   1e794:	428a      	cmp	r2, r1
   1e796:	f200 80c8 	bhi.w	1e92a <__udivdi3+0x28a>
   1e79a:	4660      	mov	r0, ip
   1e79c:	1a89      	subs	r1, r1, r2
   1e79e:	fbb1 f2f6 	udiv	r2, r1, r6
   1e7a2:	fb06 1112 	mls	r1, r6, r2, r1
   1e7a6:	fb07 f702 	mul.w	r7, r7, r2
   1e7aa:	b2ad      	uxth	r5, r5
   1e7ac:	ea45 4501 	orr.w	r5, r5, r1, lsl #16
   1e7b0:	42af      	cmp	r7, r5
   1e7b2:	d908      	bls.n	1e7c6 <__udivdi3+0x126>
   1e7b4:	192c      	adds	r4, r5, r4
   1e7b6:	f102 31ff 	add.w	r1, r2, #4294967295
   1e7ba:	f080 809b 	bcs.w	1e8f4 <__udivdi3+0x254>
   1e7be:	42a7      	cmp	r7, r4
   1e7c0:	f240 8098 	bls.w	1e8f4 <__udivdi3+0x254>
   1e7c4:	3a02      	subs	r2, #2
   1e7c6:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
   1e7ca:	4610      	mov	r0, r2
   1e7cc:	4619      	mov	r1, r3
   1e7ce:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   1e7d2:	4770      	bx	lr
   1e7d4:	2300      	movs	r3, #0
   1e7d6:	461a      	mov	r2, r3
   1e7d8:	4610      	mov	r0, r2
   1e7da:	4619      	mov	r1, r3
   1e7dc:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   1e7e0:	4770      	bx	lr
   1e7e2:	f1c6 0520 	rsb	r5, r6, #32
   1e7e6:	fa22 f705 	lsr.w	r7, r2, r5
   1e7ea:	fa03 f406 	lsl.w	r4, r3, r6
   1e7ee:	fa21 f305 	lsr.w	r3, r1, r5
   1e7f2:	fa01 fb06 	lsl.w	fp, r1, r6
   1e7f6:	fa20 f505 	lsr.w	r5, r0, r5
   1e7fa:	433c      	orrs	r4, r7
   1e7fc:	ea4f 4814 	mov.w	r8, r4, lsr #16
   1e800:	fbb3 fcf8 	udiv	ip, r3, r8
   1e804:	fb08 331c 	mls	r3, r8, ip, r3
   1e808:	fa1f f984 	uxth.w	r9, r4
   1e80c:	fb09 fa0c 	mul.w	sl, r9, ip
   1e810:	ea45 0b0b 	orr.w	fp, r5, fp
   1e814:	ea4f 451b 	mov.w	r5, fp, lsr #16
   1e818:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
   1e81c:	459a      	cmp	sl, r3
   1e81e:	fa02 f206 	lsl.w	r2, r2, r6
   1e822:	d904      	bls.n	1e82e <__udivdi3+0x18e>
   1e824:	191b      	adds	r3, r3, r4
   1e826:	f10c 35ff 	add.w	r5, ip, #4294967295
   1e82a:	d36f      	bcc.n	1e90c <__udivdi3+0x26c>
   1e82c:	46ac      	mov	ip, r5
   1e82e:	ebca 0303 	rsb	r3, sl, r3
   1e832:	fbb3 f5f8 	udiv	r5, r3, r8
   1e836:	fb08 3315 	mls	r3, r8, r5, r3
   1e83a:	fb09 f905 	mul.w	r9, r9, r5
   1e83e:	fa1f fb8b 	uxth.w	fp, fp
   1e842:	ea4b 4703 	orr.w	r7, fp, r3, lsl #16
   1e846:	45b9      	cmp	r9, r7
   1e848:	d904      	bls.n	1e854 <__udivdi3+0x1b4>
   1e84a:	193f      	adds	r7, r7, r4
   1e84c:	f105 33ff 	add.w	r3, r5, #4294967295
   1e850:	d362      	bcc.n	1e918 <__udivdi3+0x278>
   1e852:	461d      	mov	r5, r3
   1e854:	ea45 4c0c 	orr.w	ip, r5, ip, lsl #16
   1e858:	fbac 2302 	umull	r2, r3, ip, r2
   1e85c:	ebc9 0707 	rsb	r7, r9, r7
   1e860:	429f      	cmp	r7, r3
   1e862:	f04f 0500 	mov.w	r5, #0
   1e866:	d34a      	bcc.n	1e8fe <__udivdi3+0x25e>
   1e868:	d046      	beq.n	1e8f8 <__udivdi3+0x258>
   1e86a:	4662      	mov	r2, ip
   1e86c:	462b      	mov	r3, r5
   1e86e:	e75d      	b.n	1e72c <__udivdi3+0x8c>
   1e870:	4094      	lsls	r4, r2
   1e872:	f1c2 0920 	rsb	r9, r2, #32
   1e876:	fa21 fc09 	lsr.w	ip, r1, r9
   1e87a:	4091      	lsls	r1, r2
   1e87c:	fa20 f909 	lsr.w	r9, r0, r9
   1e880:	0c26      	lsrs	r6, r4, #16
   1e882:	fbbc f8f6 	udiv	r8, ip, r6
   1e886:	fb06 cc18 	mls	ip, r6, r8, ip
   1e88a:	b2a7      	uxth	r7, r4
   1e88c:	fb07 f308 	mul.w	r3, r7, r8
   1e890:	ea49 0901 	orr.w	r9, r9, r1
   1e894:	ea4f 4119 	mov.w	r1, r9, lsr #16
   1e898:	ea41 4c0c 	orr.w	ip, r1, ip, lsl #16
   1e89c:	4563      	cmp	r3, ip
   1e89e:	fa00 f502 	lsl.w	r5, r0, r2
   1e8a2:	d909      	bls.n	1e8b8 <__udivdi3+0x218>
   1e8a4:	eb1c 0c04 	adds.w	ip, ip, r4
   1e8a8:	f108 32ff 	add.w	r2, r8, #4294967295
   1e8ac:	d23b      	bcs.n	1e926 <__udivdi3+0x286>
   1e8ae:	4563      	cmp	r3, ip
   1e8b0:	d939      	bls.n	1e926 <__udivdi3+0x286>
   1e8b2:	f1a8 0802 	sub.w	r8, r8, #2
   1e8b6:	44a4      	add	ip, r4
   1e8b8:	ebc3 0c0c 	rsb	ip, r3, ip
   1e8bc:	fbbc f3f6 	udiv	r3, ip, r6
   1e8c0:	fb06 c113 	mls	r1, r6, r3, ip
   1e8c4:	fb07 f203 	mul.w	r2, r7, r3
   1e8c8:	fa1f f989 	uxth.w	r9, r9
   1e8cc:	ea49 4101 	orr.w	r1, r9, r1, lsl #16
   1e8d0:	428a      	cmp	r2, r1
   1e8d2:	d907      	bls.n	1e8e4 <__udivdi3+0x244>
   1e8d4:	1909      	adds	r1, r1, r4
   1e8d6:	f103 30ff 	add.w	r0, r3, #4294967295
   1e8da:	d222      	bcs.n	1e922 <__udivdi3+0x282>
   1e8dc:	428a      	cmp	r2, r1
   1e8de:	d920      	bls.n	1e922 <__udivdi3+0x282>
   1e8e0:	3b02      	subs	r3, #2
   1e8e2:	4421      	add	r1, r4
   1e8e4:	1a89      	subs	r1, r1, r2
   1e8e6:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
   1e8ea:	e743      	b.n	1e774 <__udivdi3+0xd4>
   1e8ec:	463a      	mov	r2, r7
   1e8ee:	e705      	b.n	1e6fc <__udivdi3+0x5c>
   1e8f0:	4633      	mov	r3, r6
   1e8f2:	e718      	b.n	1e726 <__udivdi3+0x86>
   1e8f4:	460a      	mov	r2, r1
   1e8f6:	e766      	b.n	1e7c6 <__udivdi3+0x126>
   1e8f8:	40b0      	lsls	r0, r6
   1e8fa:	4290      	cmp	r0, r2
   1e8fc:	d2b5      	bcs.n	1e86a <__udivdi3+0x1ca>
   1e8fe:	f10c 32ff 	add.w	r2, ip, #4294967295
   1e902:	2300      	movs	r3, #0
   1e904:	e712      	b.n	1e72c <__udivdi3+0x8c>
   1e906:	4633      	mov	r3, r6
   1e908:	4632      	mov	r2, r6
   1e90a:	e70f      	b.n	1e72c <__udivdi3+0x8c>
   1e90c:	459a      	cmp	sl, r3
   1e90e:	d98d      	bls.n	1e82c <__udivdi3+0x18c>
   1e910:	f1ac 0c02 	sub.w	ip, ip, #2
   1e914:	4423      	add	r3, r4
   1e916:	e78a      	b.n	1e82e <__udivdi3+0x18e>
   1e918:	45b9      	cmp	r9, r7
   1e91a:	d99a      	bls.n	1e852 <__udivdi3+0x1b2>
   1e91c:	3d02      	subs	r5, #2
   1e91e:	4427      	add	r7, r4
   1e920:	e798      	b.n	1e854 <__udivdi3+0x1b4>
   1e922:	4603      	mov	r3, r0
   1e924:	e7de      	b.n	1e8e4 <__udivdi3+0x244>
   1e926:	4690      	mov	r8, r2
   1e928:	e7c6      	b.n	1e8b8 <__udivdi3+0x218>
   1e92a:	3802      	subs	r0, #2
   1e92c:	4421      	add	r1, r4
   1e92e:	e735      	b.n	1e79c <__udivdi3+0xfc>

0001e930 <abort>:
abort():
   1e930:	b508      	push	{r3, lr}
   1e932:	2006      	movs	r0, #6
   1e934:	f001 f8f0 	bl	1fb18 <raise>
   1e938:	2001      	movs	r0, #1
   1e93a:	f7f1 fd0d 	bl	10358 <_exit>

0001e93e <atoi>:
atoi():
   1e93e:	2100      	movs	r1, #0
   1e940:	220a      	movs	r2, #10
   1e942:	f002 b939 	b.w	20bb8 <strtol>

0001e946 <ctime>:
ctime():
   1e946:	b508      	push	{r3, lr}
   1e948:	f000 f922 	bl	1eb90 <localtime>
   1e94c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
   1e950:	f004 b864 	b.w	22a1c <asctime>

0001e954 <_cleanup_r>:
_cleanup_r():
   1e954:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1e956:	4607      	mov	r7, r0
   1e958:	f100 0448 	add.w	r4, r0, #72	; 0x48
   1e95c:	b194      	cbz	r4, 1e984 <_cleanup_r+0x30>
   1e95e:	68a5      	ldr	r5, [r4, #8]
   1e960:	6866      	ldr	r6, [r4, #4]
   1e962:	3e01      	subs	r6, #1
   1e964:	d40c      	bmi.n	1e980 <_cleanup_r+0x2c>
   1e966:	89ab      	ldrh	r3, [r5, #12]
   1e968:	2b01      	cmp	r3, #1
   1e96a:	d907      	bls.n	1e97c <_cleanup_r+0x28>
   1e96c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
   1e970:	3301      	adds	r3, #1
   1e972:	d003      	beq.n	1e97c <_cleanup_r+0x28>
   1e974:	4638      	mov	r0, r7
   1e976:	4629      	mov	r1, r5
   1e978:	f004 ff86 	bl	23888 <_fflush_r>
   1e97c:	3568      	adds	r5, #104	; 0x68
   1e97e:	e7f0      	b.n	1e962 <_cleanup_r+0xe>
   1e980:	6824      	ldr	r4, [r4, #0]
   1e982:	e7eb      	b.n	1e95c <_cleanup_r+0x8>
   1e984:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0001e988 <std.isra.0>:
std.isra.0():
   1e988:	2300      	movs	r3, #0
   1e98a:	b510      	push	{r4, lr}
   1e98c:	4604      	mov	r4, r0
   1e98e:	6003      	str	r3, [r0, #0]
   1e990:	6043      	str	r3, [r0, #4]
   1e992:	6083      	str	r3, [r0, #8]
   1e994:	8181      	strh	r1, [r0, #12]
   1e996:	6643      	str	r3, [r0, #100]	; 0x64
   1e998:	81c2      	strh	r2, [r0, #14]
   1e99a:	6103      	str	r3, [r0, #16]
   1e99c:	6143      	str	r3, [r0, #20]
   1e99e:	6183      	str	r3, [r0, #24]
   1e9a0:	4619      	mov	r1, r3
   1e9a2:	305c      	adds	r0, #92	; 0x5c
   1e9a4:	2208      	movs	r2, #8
   1e9a6:	f000 f95a 	bl	1ec5e <memset>
   1e9aa:	4b05      	ldr	r3, [pc, #20]	; (1e9c0 <std.isra.0+0x38>)
   1e9ac:	6224      	str	r4, [r4, #32]
   1e9ae:	6263      	str	r3, [r4, #36]	; 0x24
   1e9b0:	4b04      	ldr	r3, [pc, #16]	; (1e9c4 <std.isra.0+0x3c>)
   1e9b2:	62a3      	str	r3, [r4, #40]	; 0x28
   1e9b4:	4b04      	ldr	r3, [pc, #16]	; (1e9c8 <std.isra.0+0x40>)
   1e9b6:	62e3      	str	r3, [r4, #44]	; 0x2c
   1e9b8:	4b04      	ldr	r3, [pc, #16]	; (1e9cc <std.isra.0+0x44>)
   1e9ba:	6323      	str	r3, [r4, #48]	; 0x30
   1e9bc:	bd10      	pop	{r4, pc}
   1e9be:	bf00      	nop
   1e9c0:	0001fb99 	.word	0x0001fb99
   1e9c4:	0001fbbf 	.word	0x0001fbbf
   1e9c8:	0001fbf7 	.word	0x0001fbf7
   1e9cc:	0001fc1b 	.word	0x0001fc1b

0001e9d0 <__sfmoreglue>:
__sfmoreglue():
   1e9d0:	b570      	push	{r4, r5, r6, lr}
   1e9d2:	1e4b      	subs	r3, r1, #1
   1e9d4:	2568      	movs	r5, #104	; 0x68
   1e9d6:	435d      	muls	r5, r3
   1e9d8:	460e      	mov	r6, r1
   1e9da:	f105 0174 	add.w	r1, r5, #116	; 0x74
   1e9de:	f000 fdf1 	bl	1f5c4 <_malloc_r>
   1e9e2:	4604      	mov	r4, r0
   1e9e4:	b140      	cbz	r0, 1e9f8 <__sfmoreglue+0x28>
   1e9e6:	2100      	movs	r1, #0
   1e9e8:	e880 0042 	stmia.w	r0, {r1, r6}
   1e9ec:	300c      	adds	r0, #12
   1e9ee:	60a0      	str	r0, [r4, #8]
   1e9f0:	f105 0268 	add.w	r2, r5, #104	; 0x68
   1e9f4:	f000 f933 	bl	1ec5e <memset>
   1e9f8:	4620      	mov	r0, r4
   1e9fa:	bd70      	pop	{r4, r5, r6, pc}

0001e9fc <__sinit>:
__sinit():
   1e9fc:	6983      	ldr	r3, [r0, #24]
   1e9fe:	b510      	push	{r4, lr}
   1ea00:	4604      	mov	r4, r0
   1ea02:	bb33      	cbnz	r3, 1ea52 <__sinit+0x56>
   1ea04:	6483      	str	r3, [r0, #72]	; 0x48
   1ea06:	64c3      	str	r3, [r0, #76]	; 0x4c
   1ea08:	6503      	str	r3, [r0, #80]	; 0x50
   1ea0a:	4b12      	ldr	r3, [pc, #72]	; (1ea54 <__sinit+0x58>)
   1ea0c:	4a12      	ldr	r2, [pc, #72]	; (1ea58 <__sinit+0x5c>)
   1ea0e:	681b      	ldr	r3, [r3, #0]
   1ea10:	6282      	str	r2, [r0, #40]	; 0x28
   1ea12:	4298      	cmp	r0, r3
   1ea14:	bf04      	itt	eq
   1ea16:	2301      	moveq	r3, #1
   1ea18:	6183      	streq	r3, [r0, #24]
   1ea1a:	f000 f81f 	bl	1ea5c <__sfp>
   1ea1e:	6060      	str	r0, [r4, #4]
   1ea20:	4620      	mov	r0, r4
   1ea22:	f000 f81b 	bl	1ea5c <__sfp>
   1ea26:	60a0      	str	r0, [r4, #8]
   1ea28:	4620      	mov	r0, r4
   1ea2a:	f000 f817 	bl	1ea5c <__sfp>
   1ea2e:	2104      	movs	r1, #4
   1ea30:	60e0      	str	r0, [r4, #12]
   1ea32:	2200      	movs	r2, #0
   1ea34:	6860      	ldr	r0, [r4, #4]
   1ea36:	f7ff ffa7 	bl	1e988 <std.isra.0>
   1ea3a:	68a0      	ldr	r0, [r4, #8]
   1ea3c:	2109      	movs	r1, #9
   1ea3e:	2201      	movs	r2, #1
   1ea40:	f7ff ffa2 	bl	1e988 <std.isra.0>
   1ea44:	68e0      	ldr	r0, [r4, #12]
   1ea46:	2112      	movs	r1, #18
   1ea48:	2202      	movs	r2, #2
   1ea4a:	f7ff ff9d 	bl	1e988 <std.isra.0>
   1ea4e:	2301      	movs	r3, #1
   1ea50:	61a3      	str	r3, [r4, #24]
   1ea52:	bd10      	pop	{r4, pc}
   1ea54:	000279f8 	.word	0x000279f8
   1ea58:	0001e955 	.word	0x0001e955

0001ea5c <__sfp>:
__sfp():
   1ea5c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1ea5e:	4b1b      	ldr	r3, [pc, #108]	; (1eacc <__sfp+0x70>)
   1ea60:	4607      	mov	r7, r0
   1ea62:	681e      	ldr	r6, [r3, #0]
   1ea64:	69b3      	ldr	r3, [r6, #24]
   1ea66:	b913      	cbnz	r3, 1ea6e <__sfp+0x12>
   1ea68:	4630      	mov	r0, r6
   1ea6a:	f7ff ffc7 	bl	1e9fc <__sinit>
   1ea6e:	3648      	adds	r6, #72	; 0x48
   1ea70:	68b4      	ldr	r4, [r6, #8]
   1ea72:	6873      	ldr	r3, [r6, #4]
   1ea74:	3b01      	subs	r3, #1
   1ea76:	d404      	bmi.n	1ea82 <__sfp+0x26>
   1ea78:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
   1ea7c:	b175      	cbz	r5, 1ea9c <__sfp+0x40>
   1ea7e:	3468      	adds	r4, #104	; 0x68
   1ea80:	e7f8      	b.n	1ea74 <__sfp+0x18>
   1ea82:	6833      	ldr	r3, [r6, #0]
   1ea84:	b92b      	cbnz	r3, 1ea92 <__sfp+0x36>
   1ea86:	4638      	mov	r0, r7
   1ea88:	2104      	movs	r1, #4
   1ea8a:	f7ff ffa1 	bl	1e9d0 <__sfmoreglue>
   1ea8e:	6030      	str	r0, [r6, #0]
   1ea90:	b108      	cbz	r0, 1ea96 <__sfp+0x3a>
   1ea92:	6836      	ldr	r6, [r6, #0]
   1ea94:	e7ec      	b.n	1ea70 <__sfp+0x14>
   1ea96:	230c      	movs	r3, #12
   1ea98:	603b      	str	r3, [r7, #0]
   1ea9a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1ea9c:	f64f 73ff 	movw	r3, #65535	; 0xffff
   1eaa0:	81e3      	strh	r3, [r4, #14]
   1eaa2:	2301      	movs	r3, #1
   1eaa4:	81a3      	strh	r3, [r4, #12]
   1eaa6:	6665      	str	r5, [r4, #100]	; 0x64
   1eaa8:	6025      	str	r5, [r4, #0]
   1eaaa:	60a5      	str	r5, [r4, #8]
   1eaac:	6065      	str	r5, [r4, #4]
   1eaae:	6125      	str	r5, [r4, #16]
   1eab0:	6165      	str	r5, [r4, #20]
   1eab2:	61a5      	str	r5, [r4, #24]
   1eab4:	f104 005c 	add.w	r0, r4, #92	; 0x5c
   1eab8:	4629      	mov	r1, r5
   1eaba:	2208      	movs	r2, #8
   1eabc:	f000 f8cf 	bl	1ec5e <memset>
   1eac0:	6365      	str	r5, [r4, #52]	; 0x34
   1eac2:	63a5      	str	r5, [r4, #56]	; 0x38
   1eac4:	64a5      	str	r5, [r4, #72]	; 0x48
   1eac6:	64e5      	str	r5, [r4, #76]	; 0x4c
   1eac8:	4620      	mov	r0, r4
   1eaca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1eacc:	000279f8 	.word	0x000279f8

0001ead0 <_fwalk>:
_fwalk():
   1ead0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1ead4:	4688      	mov	r8, r1
   1ead6:	f100 0448 	add.w	r4, r0, #72	; 0x48
   1eada:	2600      	movs	r6, #0
   1eadc:	b18c      	cbz	r4, 1eb02 <_fwalk+0x32>
   1eade:	68a5      	ldr	r5, [r4, #8]
   1eae0:	6867      	ldr	r7, [r4, #4]
   1eae2:	3f01      	subs	r7, #1
   1eae4:	d40b      	bmi.n	1eafe <_fwalk+0x2e>
   1eae6:	89ab      	ldrh	r3, [r5, #12]
   1eae8:	2b01      	cmp	r3, #1
   1eaea:	d906      	bls.n	1eafa <_fwalk+0x2a>
   1eaec:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
   1eaf0:	3301      	adds	r3, #1
   1eaf2:	d002      	beq.n	1eafa <_fwalk+0x2a>
   1eaf4:	4628      	mov	r0, r5
   1eaf6:	47c0      	blx	r8
   1eaf8:	4306      	orrs	r6, r0
   1eafa:	3568      	adds	r5, #104	; 0x68
   1eafc:	e7f1      	b.n	1eae2 <_fwalk+0x12>
   1eafe:	6824      	ldr	r4, [r4, #0]
   1eb00:	e7ec      	b.n	1eadc <_fwalk+0xc>
   1eb02:	4630      	mov	r0, r6
   1eb04:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0001eb08 <_fwalk_reent>:
_fwalk_reent():
   1eb08:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   1eb0c:	4680      	mov	r8, r0
   1eb0e:	4689      	mov	r9, r1
   1eb10:	f100 0448 	add.w	r4, r0, #72	; 0x48
   1eb14:	2600      	movs	r6, #0
   1eb16:	b194      	cbz	r4, 1eb3e <_fwalk_reent+0x36>
   1eb18:	68a5      	ldr	r5, [r4, #8]
   1eb1a:	6867      	ldr	r7, [r4, #4]
   1eb1c:	3f01      	subs	r7, #1
   1eb1e:	d40c      	bmi.n	1eb3a <_fwalk_reent+0x32>
   1eb20:	89ab      	ldrh	r3, [r5, #12]
   1eb22:	2b01      	cmp	r3, #1
   1eb24:	d907      	bls.n	1eb36 <_fwalk_reent+0x2e>
   1eb26:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
   1eb2a:	3301      	adds	r3, #1
   1eb2c:	d003      	beq.n	1eb36 <_fwalk_reent+0x2e>
   1eb2e:	4640      	mov	r0, r8
   1eb30:	4629      	mov	r1, r5
   1eb32:	47c8      	blx	r9
   1eb34:	4306      	orrs	r6, r0
   1eb36:	3568      	adds	r5, #104	; 0x68
   1eb38:	e7f0      	b.n	1eb1c <_fwalk_reent+0x14>
   1eb3a:	6824      	ldr	r4, [r4, #0]
   1eb3c:	e7eb      	b.n	1eb16 <_fwalk_reent+0xe>
   1eb3e:	4630      	mov	r0, r6
   1eb40:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

0001eb44 <__libc_init_array>:
__libc_init_array():
   1eb44:	b570      	push	{r4, r5, r6, lr}
   1eb46:	4b0e      	ldr	r3, [pc, #56]	; (1eb80 <__libc_init_array+0x3c>)
   1eb48:	4d0e      	ldr	r5, [pc, #56]	; (1eb84 <__libc_init_array+0x40>)
   1eb4a:	2400      	movs	r4, #0
   1eb4c:	1aed      	subs	r5, r5, r3
   1eb4e:	10ad      	asrs	r5, r5, #2
   1eb50:	461e      	mov	r6, r3
   1eb52:	42ac      	cmp	r4, r5
   1eb54:	d004      	beq.n	1eb60 <__libc_init_array+0x1c>
   1eb56:	f856 2024 	ldr.w	r2, [r6, r4, lsl #2]
   1eb5a:	4790      	blx	r2
   1eb5c:	3401      	adds	r4, #1
   1eb5e:	e7f8      	b.n	1eb52 <__libc_init_array+0xe>
   1eb60:	f7f1 fc04 	bl	1036c <_init>
   1eb64:	4d08      	ldr	r5, [pc, #32]	; (1eb88 <__libc_init_array+0x44>)
   1eb66:	4b09      	ldr	r3, [pc, #36]	; (1eb8c <__libc_init_array+0x48>)
   1eb68:	2400      	movs	r4, #0
   1eb6a:	1aed      	subs	r5, r5, r3
   1eb6c:	10ad      	asrs	r5, r5, #2
   1eb6e:	461e      	mov	r6, r3
   1eb70:	42ac      	cmp	r4, r5
   1eb72:	d004      	beq.n	1eb7e <__libc_init_array+0x3a>
   1eb74:	f856 2024 	ldr.w	r2, [r6, r4, lsl #2]
   1eb78:	4790      	blx	r2
   1eb7a:	3401      	adds	r4, #1
   1eb7c:	e7f8      	b.n	1eb70 <__libc_init_array+0x2c>
   1eb7e:	bd70      	pop	{r4, r5, r6, pc}
   1eb80:	00027cf4 	.word	0x00027cf4
   1eb84:	00027cf4 	.word	0x00027cf4
   1eb88:	00027cfc 	.word	0x00027cfc
   1eb8c:	00027cf4 	.word	0x00027cf4

0001eb90 <localtime>:
localtime():
   1eb90:	b538      	push	{r3, r4, r5, lr}
   1eb92:	4b07      	ldr	r3, [pc, #28]	; (1ebb0 <localtime+0x20>)
   1eb94:	4605      	mov	r5, r0
   1eb96:	681c      	ldr	r4, [r3, #0]
   1eb98:	6be3      	ldr	r3, [r4, #60]	; 0x3c
   1eb9a:	b91b      	cbnz	r3, 1eba4 <localtime+0x14>
   1eb9c:	2024      	movs	r0, #36	; 0x24
   1eb9e:	f000 f80d 	bl	1ebbc <malloc>
   1eba2:	63e0      	str	r0, [r4, #60]	; 0x3c
   1eba4:	4628      	mov	r0, r5
   1eba6:	6be1      	ldr	r1, [r4, #60]	; 0x3c
   1eba8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   1ebac:	f000 b802 	b.w	1ebb4 <localtime_r>
   1ebb0:	2007c16c 	.word	0x2007c16c

0001ebb4 <localtime_r>:
localtime_r():
   1ebb4:	2200      	movs	r2, #0
   1ebb6:	f000 bb41 	b.w	1f23c <_mktm_r>
	...

0001ebbc <malloc>:
malloc():
   1ebbc:	4b02      	ldr	r3, [pc, #8]	; (1ebc8 <malloc+0xc>)
   1ebbe:	4601      	mov	r1, r0
   1ebc0:	6818      	ldr	r0, [r3, #0]
   1ebc2:	f000 bcff 	b.w	1f5c4 <_malloc_r>
   1ebc6:	bf00      	nop
   1ebc8:	2007c16c 	.word	0x2007c16c

0001ebcc <free>:
free():
   1ebcc:	4b02      	ldr	r3, [pc, #8]	; (1ebd8 <free+0xc>)
   1ebce:	4601      	mov	r1, r0
   1ebd0:	6818      	ldr	r0, [r3, #0]
   1ebd2:	f000 bc85 	b.w	1f4e0 <_free_r>
   1ebd6:	bf00      	nop
   1ebd8:	2007c16c 	.word	0x2007c16c

0001ebdc <memchr>:
memchr():
   1ebdc:	b510      	push	{r4, lr}
   1ebde:	b2c9      	uxtb	r1, r1
   1ebe0:	4402      	add	r2, r0
   1ebe2:	4290      	cmp	r0, r2
   1ebe4:	4603      	mov	r3, r0
   1ebe6:	d005      	beq.n	1ebf4 <memchr+0x18>
   1ebe8:	781c      	ldrb	r4, [r3, #0]
   1ebea:	3001      	adds	r0, #1
   1ebec:	428c      	cmp	r4, r1
   1ebee:	d1f8      	bne.n	1ebe2 <memchr+0x6>
   1ebf0:	4618      	mov	r0, r3
   1ebf2:	bd10      	pop	{r4, pc}
   1ebf4:	2000      	movs	r0, #0
   1ebf6:	bd10      	pop	{r4, pc}

0001ebf8 <memcmp>:
memcmp():
   1ebf8:	b530      	push	{r4, r5, lr}
   1ebfa:	2300      	movs	r3, #0
   1ebfc:	4293      	cmp	r3, r2
   1ebfe:	d008      	beq.n	1ec12 <memcmp+0x1a>
   1ec00:	5cc5      	ldrb	r5, [r0, r3]
   1ec02:	3301      	adds	r3, #1
   1ec04:	18cc      	adds	r4, r1, r3
   1ec06:	f814 4c01 	ldrb.w	r4, [r4, #-1]
   1ec0a:	42a5      	cmp	r5, r4
   1ec0c:	d0f6      	beq.n	1ebfc <memcmp+0x4>
   1ec0e:	1b28      	subs	r0, r5, r4
   1ec10:	bd30      	pop	{r4, r5, pc}
   1ec12:	2000      	movs	r0, #0
   1ec14:	bd30      	pop	{r4, r5, pc}

0001ec16 <memcpy>:
memcpy():
   1ec16:	b510      	push	{r4, lr}
   1ec18:	2300      	movs	r3, #0
   1ec1a:	4293      	cmp	r3, r2
   1ec1c:	d003      	beq.n	1ec26 <memcpy+0x10>
   1ec1e:	5ccc      	ldrb	r4, [r1, r3]
   1ec20:	54c4      	strb	r4, [r0, r3]
   1ec22:	3301      	adds	r3, #1
   1ec24:	e7f9      	b.n	1ec1a <memcpy+0x4>
   1ec26:	bd10      	pop	{r4, pc}

0001ec28 <memmove>:
memmove():
   1ec28:	4281      	cmp	r1, r0
   1ec2a:	b570      	push	{r4, r5, r6, lr}
   1ec2c:	d301      	bcc.n	1ec32 <memmove+0xa>
   1ec2e:	2300      	movs	r3, #0
   1ec30:	e00e      	b.n	1ec50 <memmove+0x28>
   1ec32:	188c      	adds	r4, r1, r2
   1ec34:	42a0      	cmp	r0, r4
   1ec36:	d2fa      	bcs.n	1ec2e <memmove+0x6>
   1ec38:	1885      	adds	r5, r0, r2
   1ec3a:	4613      	mov	r3, r2
   1ec3c:	f113 33ff 	adds.w	r3, r3, #4294967295
   1ec40:	d305      	bcc.n	1ec4e <memmove+0x26>
   1ec42:	4251      	negs	r1, r2
   1ec44:	1866      	adds	r6, r4, r1
   1ec46:	5cf6      	ldrb	r6, [r6, r3]
   1ec48:	4429      	add	r1, r5
   1ec4a:	54ce      	strb	r6, [r1, r3]
   1ec4c:	e7f6      	b.n	1ec3c <memmove+0x14>
   1ec4e:	bd70      	pop	{r4, r5, r6, pc}
   1ec50:	4293      	cmp	r3, r2
   1ec52:	d003      	beq.n	1ec5c <memmove+0x34>
   1ec54:	5ccc      	ldrb	r4, [r1, r3]
   1ec56:	54c4      	strb	r4, [r0, r3]
   1ec58:	3301      	adds	r3, #1
   1ec5a:	e7f9      	b.n	1ec50 <memmove+0x28>
   1ec5c:	bd70      	pop	{r4, r5, r6, pc}

0001ec5e <memset>:
memset():
   1ec5e:	4402      	add	r2, r0
   1ec60:	4603      	mov	r3, r0
   1ec62:	4293      	cmp	r3, r2
   1ec64:	d002      	beq.n	1ec6c <memset+0xe>
   1ec66:	f803 1b01 	strb.w	r1, [r3], #1
   1ec6a:	e7fa      	b.n	1ec62 <memset+0x4>
   1ec6c:	4770      	bx	lr
	...

0001ec70 <validate_structure>:
validate_structure():
   1ec70:	b537      	push	{r0, r1, r2, r4, r5, lr}
   1ec72:	6801      	ldr	r1, [r0, #0]
   1ec74:	4604      	mov	r4, r0
   1ec76:	293b      	cmp	r1, #59	; 0x3b
   1ec78:	d910      	bls.n	1ec9c <validate_structure+0x2c>
   1ec7a:	223c      	movs	r2, #60	; 0x3c
   1ec7c:	4668      	mov	r0, sp
   1ec7e:	f003 ff19 	bl	22ab4 <div>
   1ec82:	6861      	ldr	r1, [r4, #4]
   1ec84:	9b01      	ldr	r3, [sp, #4]
   1ec86:	9a00      	ldr	r2, [sp, #0]
   1ec88:	2b00      	cmp	r3, #0
   1ec8a:	440a      	add	r2, r1
   1ec8c:	6062      	str	r2, [r4, #4]
   1ec8e:	db01      	blt.n	1ec94 <validate_structure+0x24>
   1ec90:	6023      	str	r3, [r4, #0]
   1ec92:	e003      	b.n	1ec9c <validate_structure+0x2c>
   1ec94:	333c      	adds	r3, #60	; 0x3c
   1ec96:	3a01      	subs	r2, #1
   1ec98:	6023      	str	r3, [r4, #0]
   1ec9a:	6062      	str	r2, [r4, #4]
   1ec9c:	6861      	ldr	r1, [r4, #4]
   1ec9e:	293b      	cmp	r1, #59	; 0x3b
   1eca0:	d910      	bls.n	1ecc4 <validate_structure+0x54>
   1eca2:	223c      	movs	r2, #60	; 0x3c
   1eca4:	4668      	mov	r0, sp
   1eca6:	f003 ff05 	bl	22ab4 <div>
   1ecaa:	68a1      	ldr	r1, [r4, #8]
   1ecac:	9b01      	ldr	r3, [sp, #4]
   1ecae:	9a00      	ldr	r2, [sp, #0]
   1ecb0:	2b00      	cmp	r3, #0
   1ecb2:	440a      	add	r2, r1
   1ecb4:	60a2      	str	r2, [r4, #8]
   1ecb6:	db01      	blt.n	1ecbc <validate_structure+0x4c>
   1ecb8:	6063      	str	r3, [r4, #4]
   1ecba:	e003      	b.n	1ecc4 <validate_structure+0x54>
   1ecbc:	333c      	adds	r3, #60	; 0x3c
   1ecbe:	3a01      	subs	r2, #1
   1ecc0:	6063      	str	r3, [r4, #4]
   1ecc2:	60a2      	str	r2, [r4, #8]
   1ecc4:	68a1      	ldr	r1, [r4, #8]
   1ecc6:	2917      	cmp	r1, #23
   1ecc8:	d910      	bls.n	1ecec <validate_structure+0x7c>
   1ecca:	2218      	movs	r2, #24
   1eccc:	4668      	mov	r0, sp
   1ecce:	f003 fef1 	bl	22ab4 <div>
   1ecd2:	68e1      	ldr	r1, [r4, #12]
   1ecd4:	9b01      	ldr	r3, [sp, #4]
   1ecd6:	9a00      	ldr	r2, [sp, #0]
   1ecd8:	2b00      	cmp	r3, #0
   1ecda:	440a      	add	r2, r1
   1ecdc:	60e2      	str	r2, [r4, #12]
   1ecde:	db01      	blt.n	1ece4 <validate_structure+0x74>
   1ece0:	60a3      	str	r3, [r4, #8]
   1ece2:	e003      	b.n	1ecec <validate_structure+0x7c>
   1ece4:	3318      	adds	r3, #24
   1ece6:	3a01      	subs	r2, #1
   1ece8:	60a3      	str	r3, [r4, #8]
   1ecea:	60e2      	str	r2, [r4, #12]
   1ecec:	6921      	ldr	r1, [r4, #16]
   1ecee:	290b      	cmp	r1, #11
   1ecf0:	d910      	bls.n	1ed14 <validate_structure+0xa4>
   1ecf2:	220c      	movs	r2, #12
   1ecf4:	4668      	mov	r0, sp
   1ecf6:	f003 fedd 	bl	22ab4 <div>
   1ecfa:	6961      	ldr	r1, [r4, #20]
   1ecfc:	9b01      	ldr	r3, [sp, #4]
   1ecfe:	9a00      	ldr	r2, [sp, #0]
   1ed00:	2b00      	cmp	r3, #0
   1ed02:	440a      	add	r2, r1
   1ed04:	6162      	str	r2, [r4, #20]
   1ed06:	db01      	blt.n	1ed0c <validate_structure+0x9c>
   1ed08:	6123      	str	r3, [r4, #16]
   1ed0a:	e003      	b.n	1ed14 <validate_structure+0xa4>
   1ed0c:	330c      	adds	r3, #12
   1ed0e:	3a01      	subs	r2, #1
   1ed10:	6123      	str	r3, [r4, #16]
   1ed12:	6162      	str	r2, [r4, #20]
   1ed14:	6963      	ldr	r3, [r4, #20]
   1ed16:	079d      	lsls	r5, r3, #30
   1ed18:	d112      	bne.n	1ed40 <validate_structure+0xd0>
   1ed1a:	2264      	movs	r2, #100	; 0x64
   1ed1c:	fb93 f1f2 	sdiv	r1, r3, r2
   1ed20:	fb02 3211 	mls	r2, r2, r1, r3
   1ed24:	b972      	cbnz	r2, 1ed44 <validate_structure+0xd4>
   1ed26:	f203 736c 	addw	r3, r3, #1900	; 0x76c
   1ed2a:	f44f 72c8 	mov.w	r2, #400	; 0x190
   1ed2e:	fb93 f1f2 	sdiv	r1, r3, r2
   1ed32:	fb02 3311 	mls	r3, r2, r1, r3
   1ed36:	2b00      	cmp	r3, #0
   1ed38:	bf0c      	ite	eq
   1ed3a:	231d      	moveq	r3, #29
   1ed3c:	231c      	movne	r3, #28
   1ed3e:	e002      	b.n	1ed46 <validate_structure+0xd6>
   1ed40:	231c      	movs	r3, #28
   1ed42:	e000      	b.n	1ed46 <validate_structure+0xd6>
   1ed44:	231d      	movs	r3, #29
   1ed46:	68e2      	ldr	r2, [r4, #12]
   1ed48:	2a00      	cmp	r2, #0
   1ed4a:	dc37      	bgt.n	1edbc <validate_structure+0x14c>
   1ed4c:	68e2      	ldr	r2, [r4, #12]
   1ed4e:	2a00      	cmp	r2, #0
   1ed50:	dc5c      	bgt.n	1ee0c <validate_structure+0x19c>
   1ed52:	6921      	ldr	r1, [r4, #16]
   1ed54:	3901      	subs	r1, #1
   1ed56:	6121      	str	r1, [r4, #16]
   1ed58:	3101      	adds	r1, #1
   1ed5a:	d11c      	bne.n	1ed96 <validate_structure+0x126>
   1ed5c:	6961      	ldr	r1, [r4, #20]
   1ed5e:	200b      	movs	r0, #11
   1ed60:	1e4b      	subs	r3, r1, #1
   1ed62:	6120      	str	r0, [r4, #16]
   1ed64:	0798      	lsls	r0, r3, #30
   1ed66:	6163      	str	r3, [r4, #20]
   1ed68:	d112      	bne.n	1ed90 <validate_structure+0x120>
   1ed6a:	2064      	movs	r0, #100	; 0x64
   1ed6c:	fb93 f5f0 	sdiv	r5, r3, r0
   1ed70:	fb00 3315 	mls	r3, r0, r5, r3
   1ed74:	b973      	cbnz	r3, 1ed94 <validate_structure+0x124>
   1ed76:	f201 716b 	addw	r1, r1, #1899	; 0x76b
   1ed7a:	f44f 73c8 	mov.w	r3, #400	; 0x190
   1ed7e:	fb91 f0f3 	sdiv	r0, r1, r3
   1ed82:	fb03 1310 	mls	r3, r3, r0, r1
   1ed86:	2b00      	cmp	r3, #0
   1ed88:	bf0c      	ite	eq
   1ed8a:	231d      	moveq	r3, #29
   1ed8c:	231c      	movne	r3, #28
   1ed8e:	e002      	b.n	1ed96 <validate_structure+0x126>
   1ed90:	231c      	movs	r3, #28
   1ed92:	e000      	b.n	1ed96 <validate_structure+0x126>
   1ed94:	231d      	movs	r3, #29
   1ed96:	6921      	ldr	r1, [r4, #16]
   1ed98:	2901      	cmp	r1, #1
   1ed9a:	bf16      	itet	ne
   1ed9c:	481c      	ldrne	r0, [pc, #112]	; (1ee10 <validate_structure+0x1a0>)
   1ed9e:	4619      	moveq	r1, r3
   1eda0:	f850 1021 	ldrne.w	r1, [r0, r1, lsl #2]
   1eda4:	440a      	add	r2, r1
   1eda6:	60e2      	str	r2, [r4, #12]
   1eda8:	e7d0      	b.n	1ed4c <validate_structure+0xdc>
   1edaa:	429a      	cmp	r2, r3
   1edac:	dd2e      	ble.n	1ee0c <validate_structure+0x19c>
   1edae:	4618      	mov	r0, r3
   1edb0:	3101      	adds	r1, #1
   1edb2:	1a10      	subs	r0, r2, r0
   1edb4:	290c      	cmp	r1, #12
   1edb6:	60e0      	str	r0, [r4, #12]
   1edb8:	6121      	str	r1, [r4, #16]
   1edba:	d009      	beq.n	1edd0 <validate_structure+0x160>
   1edbc:	6921      	ldr	r1, [r4, #16]
   1edbe:	68e2      	ldr	r2, [r4, #12]
   1edc0:	2901      	cmp	r1, #1
   1edc2:	d0f2      	beq.n	1edaa <validate_structure+0x13a>
   1edc4:	4812      	ldr	r0, [pc, #72]	; (1ee10 <validate_structure+0x1a0>)
   1edc6:	f850 0021 	ldr.w	r0, [r0, r1, lsl #2]
   1edca:	4282      	cmp	r2, r0
   1edcc:	dcf0      	bgt.n	1edb0 <validate_structure+0x140>
   1edce:	e01d      	b.n	1ee0c <validate_structure+0x19c>
   1edd0:	6962      	ldr	r2, [r4, #20]
   1edd2:	2100      	movs	r1, #0
   1edd4:	1c53      	adds	r3, r2, #1
   1edd6:	6121      	str	r1, [r4, #16]
   1edd8:	0799      	lsls	r1, r3, #30
   1edda:	6163      	str	r3, [r4, #20]
   1eddc:	d112      	bne.n	1ee04 <validate_structure+0x194>
   1edde:	2164      	movs	r1, #100	; 0x64
   1ede0:	fb93 f0f1 	sdiv	r0, r3, r1
   1ede4:	fb01 3310 	mls	r3, r1, r0, r3
   1ede8:	b973      	cbnz	r3, 1ee08 <validate_structure+0x198>
   1edea:	f202 726d 	addw	r2, r2, #1901	; 0x76d
   1edee:	f44f 73c8 	mov.w	r3, #400	; 0x190
   1edf2:	fb92 f1f3 	sdiv	r1, r2, r3
   1edf6:	fb03 2311 	mls	r3, r3, r1, r2
   1edfa:	2b00      	cmp	r3, #0
   1edfc:	bf0c      	ite	eq
   1edfe:	231d      	moveq	r3, #29
   1ee00:	231c      	movne	r3, #28
   1ee02:	e7db      	b.n	1edbc <validate_structure+0x14c>
   1ee04:	231c      	movs	r3, #28
   1ee06:	e7d9      	b.n	1edbc <validate_structure+0x14c>
   1ee08:	231d      	movs	r3, #29
   1ee0a:	e7d7      	b.n	1edbc <validate_structure+0x14c>
   1ee0c:	b003      	add	sp, #12
   1ee0e:	bd30      	pop	{r4, r5, pc}
   1ee10:	00027a2c 	.word	0x00027a2c

0001ee14 <mktime>:
mktime():
   1ee14:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   1ee18:	4604      	mov	r4, r0
   1ee1a:	f005 f89f 	bl	23f5c <__gettzinfo>
   1ee1e:	4681      	mov	r9, r0
   1ee20:	4620      	mov	r0, r4
   1ee22:	f7ff ff25 	bl	1ec70 <validate_structure>
   1ee26:	6823      	ldr	r3, [r4, #0]
   1ee28:	6862      	ldr	r2, [r4, #4]
   1ee2a:	f04f 083c 	mov.w	r8, #60	; 0x3c
   1ee2e:	fb08 3202 	mla	r2, r8, r2, r3
   1ee32:	68a3      	ldr	r3, [r4, #8]
   1ee34:	f44f 6861 	mov.w	r8, #3600	; 0xe10
   1ee38:	fb08 2803 	mla	r8, r8, r3, r2
   1ee3c:	6923      	ldr	r3, [r4, #16]
   1ee3e:	4aa5      	ldr	r2, [pc, #660]	; (1f0d4 <mktime+0x2c0>)
   1ee40:	68e5      	ldr	r5, [r4, #12]
   1ee42:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
   1ee46:	3d01      	subs	r5, #1
   1ee48:	2b01      	cmp	r3, #1
   1ee4a:	4415      	add	r5, r2
   1ee4c:	6963      	ldr	r3, [r4, #20]
   1ee4e:	dd11      	ble.n	1ee74 <mktime+0x60>
   1ee50:	079e      	lsls	r6, r3, #30
   1ee52:	d10f      	bne.n	1ee74 <mktime+0x60>
   1ee54:	2264      	movs	r2, #100	; 0x64
   1ee56:	fb93 f1f2 	sdiv	r1, r3, r2
   1ee5a:	fb02 3211 	mls	r2, r2, r1, r3
   1ee5e:	b942      	cbnz	r2, 1ee72 <mktime+0x5e>
   1ee60:	f203 716c 	addw	r1, r3, #1900	; 0x76c
   1ee64:	f44f 72c8 	mov.w	r2, #400	; 0x190
   1ee68:	fb91 f0f2 	sdiv	r0, r1, r2
   1ee6c:	fb02 1210 	mls	r2, r2, r0, r1
   1ee70:	b902      	cbnz	r2, 1ee74 <mktime+0x60>
   1ee72:	3501      	adds	r5, #1
   1ee74:	f503 521c 	add.w	r2, r3, #9984	; 0x2700
   1ee78:	3210      	adds	r2, #16
   1ee7a:	f644 6120 	movw	r1, #20000	; 0x4e20
   1ee7e:	428a      	cmp	r2, r1
   1ee80:	61e5      	str	r5, [r4, #28]
   1ee82:	461e      	mov	r6, r3
   1ee84:	f200 8122 	bhi.w	1f0cc <mktime+0x2b8>
   1ee88:	2b46      	cmp	r3, #70	; 0x46
   1ee8a:	dd21      	ble.n	1eed0 <mktime+0xbc>
   1ee8c:	2246      	movs	r2, #70	; 0x46
   1ee8e:	0790      	lsls	r0, r2, #30
   1ee90:	d114      	bne.n	1eebc <mktime+0xa8>
   1ee92:	2164      	movs	r1, #100	; 0x64
   1ee94:	fb92 f0f1 	sdiv	r0, r2, r1
   1ee98:	fb01 2110 	mls	r1, r1, r0, r2
   1ee9c:	b989      	cbnz	r1, 1eec2 <mktime+0xae>
   1ee9e:	f202 706c 	addw	r0, r2, #1900	; 0x76c
   1eea2:	f44f 71c8 	mov.w	r1, #400	; 0x190
   1eea6:	fb90 f7f1 	sdiv	r7, r0, r1
   1eeaa:	fb01 0117 	mls	r1, r1, r7, r0
   1eeae:	2900      	cmp	r1, #0
   1eeb0:	f240 116d 	movw	r1, #365	; 0x16d
   1eeb4:	bf08      	it	eq
   1eeb6:	f44f 71b7 	moveq.w	r1, #366	; 0x16e
   1eeba:	e004      	b.n	1eec6 <mktime+0xb2>
   1eebc:	f240 116d 	movw	r1, #365	; 0x16d
   1eec0:	e001      	b.n	1eec6 <mktime+0xb2>
   1eec2:	f44f 71b7 	mov.w	r1, #366	; 0x16e
   1eec6:	3201      	adds	r2, #1
   1eec8:	429a      	cmp	r2, r3
   1eeca:	440d      	add	r5, r1
   1eecc:	d1df      	bne.n	1ee8e <mktime+0x7a>
   1eece:	e043      	b.n	1ef58 <mktime+0x144>
   1eed0:	d042      	beq.n	1ef58 <mktime+0x144>
   1eed2:	2245      	movs	r2, #69	; 0x45
   1eed4:	429a      	cmp	r2, r3
   1eed6:	dd1e      	ble.n	1ef16 <mktime+0x102>
   1eed8:	0791      	lsls	r1, r2, #30
   1eeda:	d114      	bne.n	1ef06 <mktime+0xf2>
   1eedc:	2164      	movs	r1, #100	; 0x64
   1eede:	fb92 f0f1 	sdiv	r0, r2, r1
   1eee2:	fb01 2110 	mls	r1, r1, r0, r2
   1eee6:	b989      	cbnz	r1, 1ef0c <mktime+0xf8>
   1eee8:	f202 706c 	addw	r0, r2, #1900	; 0x76c
   1eeec:	f44f 71c8 	mov.w	r1, #400	; 0x190
   1eef0:	fb90 f6f1 	sdiv	r6, r0, r1
   1eef4:	fb01 0116 	mls	r1, r1, r6, r0
   1eef8:	2900      	cmp	r1, #0
   1eefa:	f240 116d 	movw	r1, #365	; 0x16d
   1eefe:	bf08      	it	eq
   1ef00:	f44f 71b7 	moveq.w	r1, #366	; 0x16e
   1ef04:	e004      	b.n	1ef10 <mktime+0xfc>
   1ef06:	f240 116d 	movw	r1, #365	; 0x16d
   1ef0a:	e001      	b.n	1ef10 <mktime+0xfc>
   1ef0c:	f44f 71b7 	mov.w	r1, #366	; 0x16e
   1ef10:	1a6d      	subs	r5, r5, r1
   1ef12:	3a01      	subs	r2, #1
   1ef14:	e7de      	b.n	1eed4 <mktime+0xc0>
   1ef16:	2b45      	cmp	r3, #69	; 0x45
   1ef18:	bfb4      	ite	lt
   1ef1a:	461e      	movlt	r6, r3
   1ef1c:	2645      	movge	r6, #69	; 0x45
   1ef1e:	07b7      	lsls	r7, r6, #30
   1ef20:	d114      	bne.n	1ef4c <mktime+0x138>
   1ef22:	2364      	movs	r3, #100	; 0x64
   1ef24:	fb96 f2f3 	sdiv	r2, r6, r3
   1ef28:	fb03 6312 	mls	r3, r3, r2, r6
   1ef2c:	b98b      	cbnz	r3, 1ef52 <mktime+0x13e>
   1ef2e:	f206 726c 	addw	r2, r6, #1900	; 0x76c
   1ef32:	f44f 73c8 	mov.w	r3, #400	; 0x190
   1ef36:	fb92 f1f3 	sdiv	r1, r2, r3
   1ef3a:	fb03 2311 	mls	r3, r3, r1, r2
   1ef3e:	2b00      	cmp	r3, #0
   1ef40:	f240 136d 	movw	r3, #365	; 0x16d
   1ef44:	bf08      	it	eq
   1ef46:	f44f 73b7 	moveq.w	r3, #366	; 0x16e
   1ef4a:	e004      	b.n	1ef56 <mktime+0x142>
   1ef4c:	f240 136d 	movw	r3, #365	; 0x16d
   1ef50:	e001      	b.n	1ef56 <mktime+0x142>
   1ef52:	f44f 73b7 	mov.w	r3, #366	; 0x16e
   1ef56:	1aed      	subs	r5, r5, r3
   1ef58:	4b5f      	ldr	r3, [pc, #380]	; (1f0d8 <mktime+0x2c4>)
   1ef5a:	fb03 8805 	mla	r8, r3, r5, r8
   1ef5e:	f002 f963 	bl	21228 <__tz_lock>
   1ef62:	4b5e      	ldr	r3, [pc, #376]	; (1f0dc <mktime+0x2c8>)
   1ef64:	681f      	ldr	r7, [r3, #0]
   1ef66:	2f00      	cmp	r7, #0
   1ef68:	f000 809d 	beq.w	1f0a6 <mktime+0x292>
   1ef6c:	6a23      	ldr	r3, [r4, #32]
   1ef6e:	6960      	ldr	r0, [r4, #20]
   1ef70:	2b01      	cmp	r3, #1
   1ef72:	bfb4      	ite	lt
   1ef74:	469a      	movlt	sl, r3
   1ef76:	f04f 0a01 	movge.w	sl, #1
   1ef7a:	f8d9 3004 	ldr.w	r3, [r9, #4]
   1ef7e:	f200 706c 	addw	r0, r0, #1900	; 0x76c
   1ef82:	4298      	cmp	r0, r3
   1ef84:	d10d      	bne.n	1efa2 <mktime+0x18e>
   1ef86:	f8d9 2038 	ldr.w	r2, [r9, #56]	; 0x38
   1ef8a:	f8d9 1020 	ldr.w	r1, [r9, #32]
   1ef8e:	f8d9 303c 	ldr.w	r3, [r9, #60]	; 0x3c
   1ef92:	f8d9 001c 	ldr.w	r0, [r9, #28]
   1ef96:	1a57      	subs	r7, r2, r1
   1ef98:	45b8      	cmp	r8, r7
   1ef9a:	ebc3 0000 	rsb	r0, r3, r0
   1ef9e:	da05      	bge.n	1efac <mktime+0x198>
   1efa0:	e007      	b.n	1efb2 <mktime+0x19e>
   1efa2:	f000 f89d 	bl	1f0e0 <__tzcalc_limits>
   1efa6:	2800      	cmp	r0, #0
   1efa8:	d1ed      	bne.n	1ef86 <mktime+0x172>
   1efaa:	e076      	b.n	1f09a <mktime+0x286>
   1efac:	1ad2      	subs	r2, r2, r3
   1efae:	4590      	cmp	r8, r2
   1efb0:	db73      	blt.n	1f09a <mktime+0x286>
   1efb2:	f8d9 2000 	ldr.w	r2, [r9]
   1efb6:	b112      	cbz	r2, 1efbe <mktime+0x1aa>
   1efb8:	4580      	cmp	r8, r0
   1efba:	db07      	blt.n	1efcc <mktime+0x1b8>
   1efbc:	e001      	b.n	1efc2 <mktime+0x1ae>
   1efbe:	4580      	cmp	r8, r0
   1efc0:	da06      	bge.n	1efd0 <mktime+0x1bc>
   1efc2:	45b8      	cmp	r8, r7
   1efc4:	bfac      	ite	ge
   1efc6:	2700      	movge	r7, #0
   1efc8:	2701      	movlt	r7, #1
   1efca:	e002      	b.n	1efd2 <mktime+0x1be>
   1efcc:	2700      	movs	r7, #0
   1efce:	e000      	b.n	1efd2 <mktime+0x1be>
   1efd0:	2701      	movs	r7, #1
   1efd2:	f1ba 0f00 	cmp.w	sl, #0
   1efd6:	db61      	blt.n	1f09c <mktime+0x288>
   1efd8:	ea87 0a0a 	eor.w	sl, r7, sl
   1efdc:	f1ba 0f01 	cmp.w	sl, #1
   1efe0:	d15c      	bne.n	1f09c <mktime+0x288>
   1efe2:	1acb      	subs	r3, r1, r3
   1efe4:	b907      	cbnz	r7, 1efe8 <mktime+0x1d4>
   1efe6:	425b      	negs	r3, r3
   1efe8:	6822      	ldr	r2, [r4, #0]
   1efea:	4620      	mov	r0, r4
   1efec:	441a      	add	r2, r3
   1efee:	6022      	str	r2, [r4, #0]
   1eff0:	4498      	add	r8, r3
   1eff2:	f8d4 a00c 	ldr.w	sl, [r4, #12]
   1eff6:	f7ff fe3b 	bl	1ec70 <validate_structure>
   1effa:	68e3      	ldr	r3, [r4, #12]
   1effc:	ebb3 030a 	subs.w	r3, r3, sl
   1f000:	d04c      	beq.n	1f09c <mktime+0x288>
   1f002:	2b01      	cmp	r3, #1
   1f004:	dc03      	bgt.n	1f00e <mktime+0x1fa>
   1f006:	1c98      	adds	r0, r3, #2
   1f008:	bfd8      	it	le
   1f00a:	2301      	movle	r3, #1
   1f00c:	e001      	b.n	1f012 <mktime+0x1fe>
   1f00e:	f04f 33ff 	mov.w	r3, #4294967295
   1f012:	69e2      	ldr	r2, [r4, #28]
   1f014:	441d      	add	r5, r3
   1f016:	189b      	adds	r3, r3, r2
   1f018:	d51d      	bpl.n	1f056 <mktime+0x242>
   1f01a:	1e73      	subs	r3, r6, #1
   1f01c:	0799      	lsls	r1, r3, #30
   1f01e:	d114      	bne.n	1f04a <mktime+0x236>
   1f020:	2264      	movs	r2, #100	; 0x64
   1f022:	fb93 f1f2 	sdiv	r1, r3, r2
   1f026:	fb02 3311 	mls	r3, r2, r1, r3
   1f02a:	b98b      	cbnz	r3, 1f050 <mktime+0x23c>
   1f02c:	f44f 73c8 	mov.w	r3, #400	; 0x190
   1f030:	f206 766b 	addw	r6, r6, #1899	; 0x76b
   1f034:	fb96 f2f3 	sdiv	r2, r6, r3
   1f038:	fb03 6612 	mls	r6, r3, r2, r6
   1f03c:	f240 136d 	movw	r3, #365	; 0x16d
   1f040:	2e00      	cmp	r6, #0
   1f042:	bf18      	it	ne
   1f044:	f44f 73b6 	movne.w	r3, #364	; 0x16c
   1f048:	e025      	b.n	1f096 <mktime+0x282>
   1f04a:	f44f 73b6 	mov.w	r3, #364	; 0x16c
   1f04e:	e022      	b.n	1f096 <mktime+0x282>
   1f050:	f240 136d 	movw	r3, #365	; 0x16d
   1f054:	e01f      	b.n	1f096 <mktime+0x282>
   1f056:	07b2      	lsls	r2, r6, #30
   1f058:	d114      	bne.n	1f084 <mktime+0x270>
   1f05a:	2264      	movs	r2, #100	; 0x64
   1f05c:	fb96 f1f2 	sdiv	r1, r6, r2
   1f060:	fb02 6211 	mls	r2, r2, r1, r6
   1f064:	b98a      	cbnz	r2, 1f08a <mktime+0x276>
   1f066:	f44f 72c8 	mov.w	r2, #400	; 0x190
   1f06a:	f206 766c 	addw	r6, r6, #1900	; 0x76c
   1f06e:	fb96 f1f2 	sdiv	r1, r6, r2
   1f072:	fb02 6611 	mls	r6, r2, r1, r6
   1f076:	f240 126d 	movw	r2, #365	; 0x16d
   1f07a:	2e00      	cmp	r6, #0
   1f07c:	bf08      	it	eq
   1f07e:	f44f 72b7 	moveq.w	r2, #366	; 0x16e
   1f082:	e004      	b.n	1f08e <mktime+0x27a>
   1f084:	f240 126d 	movw	r2, #365	; 0x16d
   1f088:	e001      	b.n	1f08e <mktime+0x27a>
   1f08a:	f44f 72b7 	mov.w	r2, #366	; 0x16e
   1f08e:	429a      	cmp	r2, r3
   1f090:	bfd8      	it	le
   1f092:	ebc2 0303 	rsble	r3, r2, r3
   1f096:	61e3      	str	r3, [r4, #28]
   1f098:	e000      	b.n	1f09c <mktime+0x288>
   1f09a:	4657      	mov	r7, sl
   1f09c:	2f01      	cmp	r7, #1
   1f09e:	d102      	bne.n	1f0a6 <mktime+0x292>
   1f0a0:	f8d9 003c 	ldr.w	r0, [r9, #60]	; 0x3c
   1f0a4:	e001      	b.n	1f0aa <mktime+0x296>
   1f0a6:	f8d9 0020 	ldr.w	r0, [r9, #32]
   1f0aa:	4480      	add	r8, r0
   1f0ac:	3504      	adds	r5, #4
   1f0ae:	f002 f8bc 	bl	2122a <__tz_unlock>
   1f0b2:	2307      	movs	r3, #7
   1f0b4:	fb95 f3f3 	sdiv	r3, r5, r3
   1f0b8:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
   1f0bc:	1aed      	subs	r5, r5, r3
   1f0be:	bf48      	it	mi
   1f0c0:	3507      	addmi	r5, #7
   1f0c2:	6227      	str	r7, [r4, #32]
   1f0c4:	61a5      	str	r5, [r4, #24]
   1f0c6:	4640      	mov	r0, r8
   1f0c8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1f0cc:	f04f 30ff 	mov.w	r0, #4294967295
   1f0d0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1f0d4:	000279fc 	.word	0x000279fc
   1f0d8:	00015180 	.word	0x00015180
   1f0dc:	2007cad0 	.word	0x2007cad0

0001f0e0 <__tzcalc_limits>:
__tzcalc_limits():
   1f0e0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f0e4:	4604      	mov	r4, r0
   1f0e6:	f004 ff39 	bl	23f5c <__gettzinfo>
   1f0ea:	f240 73b1 	movw	r3, #1969	; 0x7b1
   1f0ee:	429c      	cmp	r4, r3
   1f0f0:	f340 809d 	ble.w	1f22e <__tzcalc_limits+0x14e>
   1f0f4:	f46f 63f6 	mvn.w	r3, #1968	; 0x7b0
   1f0f8:	18e3      	adds	r3, r4, r3
   1f0fa:	109b      	asrs	r3, r3, #2
   1f0fc:	f240 126d 	movw	r2, #365	; 0x16d
   1f100:	f2a4 77b2 	subw	r7, r4, #1970	; 0x7b2
   1f104:	fb02 3707 	mla	r7, r2, r7, r3
   1f108:	f2a4 726d 	subw	r2, r4, #1901	; 0x76d
   1f10c:	f06f 0363 	mvn.w	r3, #99	; 0x63
   1f110:	fb92 f3f3 	sdiv	r3, r2, r3
   1f114:	f46f 62c8 	mvn.w	r2, #1600	; 0x640
   1f118:	441f      	add	r7, r3
   1f11a:	18a2      	adds	r2, r4, r2
   1f11c:	f44f 73c8 	mov.w	r3, #400	; 0x190
   1f120:	fb92 f2f3 	sdiv	r2, r2, r3
   1f124:	4417      	add	r7, r2
   1f126:	2264      	movs	r2, #100	; 0x64
   1f128:	fb94 fcf2 	sdiv	ip, r4, r2
   1f12c:	fb02 4c1c 	mls	ip, r2, ip, r4
   1f130:	fb94 f2f3 	sdiv	r2, r4, r3
   1f134:	fb03 4212 	mls	r2, r3, r2, r4
   1f138:	f1d2 0201 	rsbs	r2, r2, #1
   1f13c:	6044      	str	r4, [r0, #4]
   1f13e:	bf38      	it	cc
   1f140:	2200      	movcc	r2, #0
   1f142:	4603      	mov	r3, r0
   1f144:	2600      	movs	r6, #0
   1f146:	7a19      	ldrb	r1, [r3, #8]
   1f148:	294a      	cmp	r1, #74	; 0x4a
   1f14a:	d113      	bne.n	1f174 <__tzcalc_limits+0x94>
   1f14c:	6959      	ldr	r1, [r3, #20]
   1f14e:	f014 0f03 	tst.w	r4, #3
   1f152:	eb07 0501 	add.w	r5, r7, r1
   1f156:	d102      	bne.n	1f15e <__tzcalc_limits+0x7e>
   1f158:	f1bc 0f00 	cmp.w	ip, #0
   1f15c:	d100      	bne.n	1f160 <__tzcalc_limits+0x80>
   1f15e:	b122      	cbz	r2, 1f16a <__tzcalc_limits+0x8a>
   1f160:	293b      	cmp	r1, #59	; 0x3b
   1f162:	bfd4      	ite	le
   1f164:	2100      	movle	r1, #0
   1f166:	2101      	movgt	r1, #1
   1f168:	e000      	b.n	1f16c <__tzcalc_limits+0x8c>
   1f16a:	4611      	mov	r1, r2
   1f16c:	4429      	add	r1, r5
   1f16e:	f101 38ff 	add.w	r8, r1, #4294967295
   1f172:	e047      	b.n	1f204 <__tzcalc_limits+0x124>
   1f174:	2944      	cmp	r1, #68	; 0x44
   1f176:	d103      	bne.n	1f180 <__tzcalc_limits+0xa0>
   1f178:	6959      	ldr	r1, [r3, #20]
   1f17a:	eb01 0807 	add.w	r8, r1, r7
   1f17e:	e041      	b.n	1f204 <__tzcalc_limits+0x124>
   1f180:	07a1      	lsls	r1, r4, #30
   1f182:	d105      	bne.n	1f190 <__tzcalc_limits+0xb0>
   1f184:	f1bc 0f00 	cmp.w	ip, #0
   1f188:	bf0c      	ite	eq
   1f18a:	4611      	moveq	r1, r2
   1f18c:	2101      	movne	r1, #1
   1f18e:	e000      	b.n	1f192 <__tzcalc_limits+0xb2>
   1f190:	4611      	mov	r1, r2
   1f192:	4d28      	ldr	r5, [pc, #160]	; (1f234 <__tzcalc_limits+0x154>)
   1f194:	f04f 0830 	mov.w	r8, #48	; 0x30
   1f198:	f8d3 900c 	ldr.w	r9, [r3, #12]
   1f19c:	fb08 5801 	mla	r8, r8, r1, r5
   1f1a0:	463d      	mov	r5, r7
   1f1a2:	2101      	movs	r1, #1
   1f1a4:	4549      	cmp	r1, r9
   1f1a6:	da06      	bge.n	1f1b6 <__tzcalc_limits+0xd6>
   1f1a8:	eb08 0a81 	add.w	sl, r8, r1, lsl #2
   1f1ac:	f85a ac04 	ldr.w	sl, [sl, #-4]
   1f1b0:	3101      	adds	r1, #1
   1f1b2:	4455      	add	r5, sl
   1f1b4:	e7f6      	b.n	1f1a4 <__tzcalc_limits+0xc4>
   1f1b6:	f105 0b04 	add.w	fp, r5, #4
   1f1ba:	f04f 0a07 	mov.w	sl, #7
   1f1be:	fb9b fafa 	sdiv	sl, fp, sl
   1f1c2:	6959      	ldr	r1, [r3, #20]
   1f1c4:	ebca 0aca 	rsb	sl, sl, sl, lsl #3
   1f1c8:	ebca 0a0b 	rsb	sl, sl, fp
   1f1cc:	f1b9 0f01 	cmp.w	r9, #1
   1f1d0:	bfb8      	it	lt
   1f1d2:	f04f 0901 	movlt.w	r9, #1
   1f1d6:	ebb1 0a0a 	subs.w	sl, r1, sl
   1f1da:	6919      	ldr	r1, [r3, #16]
   1f1dc:	f109 4980 	add.w	r9, r9, #1073741824	; 0x40000000
   1f1e0:	f101 3bff 	add.w	fp, r1, #4294967295
   1f1e4:	f109 39ff 	add.w	r9, r9, #4294967295
   1f1e8:	bf48      	it	mi
   1f1ea:	f10a 0a07 	addmi.w	sl, sl, #7
   1f1ee:	ebcb 01cb 	rsb	r1, fp, fp, lsl #3
   1f1f2:	f858 8029 	ldr.w	r8, [r8, r9, lsl #2]
   1f1f6:	4451      	add	r1, sl
   1f1f8:	4541      	cmp	r1, r8
   1f1fa:	db01      	blt.n	1f200 <__tzcalc_limits+0x120>
   1f1fc:	3907      	subs	r1, #7
   1f1fe:	e7fb      	b.n	1f1f8 <__tzcalc_limits+0x118>
   1f200:	eb01 0805 	add.w	r8, r1, r5
   1f204:	6999      	ldr	r1, [r3, #24]
   1f206:	4d0c      	ldr	r5, [pc, #48]	; (1f238 <__tzcalc_limits+0x158>)
   1f208:	3601      	adds	r6, #1
   1f20a:	fb05 1808 	mla	r8, r5, r8, r1
   1f20e:	6a19      	ldr	r1, [r3, #32]
   1f210:	2e02      	cmp	r6, #2
   1f212:	4441      	add	r1, r8
   1f214:	f843 1f1c 	str.w	r1, [r3, #28]!
   1f218:	d195      	bne.n	1f146 <__tzcalc_limits+0x66>
   1f21a:	6b83      	ldr	r3, [r0, #56]	; 0x38
   1f21c:	69c2      	ldr	r2, [r0, #28]
   1f21e:	429a      	cmp	r2, r3
   1f220:	bfac      	ite	ge
   1f222:	2300      	movge	r3, #0
   1f224:	2301      	movlt	r3, #1
   1f226:	6003      	str	r3, [r0, #0]
   1f228:	2001      	movs	r0, #1
   1f22a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f22e:	2000      	movs	r0, #0
   1f230:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f234:	00027a5c 	.word	0x00027a5c
   1f238:	00015180 	.word	0x00015180

0001f23c <_mktm_r>:
_mktm_r():
   1f23c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   1f240:	4680      	mov	r8, r0
   1f242:	460c      	mov	r4, r1
   1f244:	4617      	mov	r7, r2
   1f246:	f004 fe89 	bl	23f5c <__gettzinfo>
   1f24a:	f8d8 1000 	ldr.w	r1, [r8]
   1f24e:	4a9b      	ldr	r2, [pc, #620]	; (1f4bc <_mktm_r+0x280>)
   1f250:	4606      	mov	r6, r0
   1f252:	fb91 f3f2 	sdiv	r3, r1, r2
   1f256:	fb02 1113 	mls	r1, r2, r3, r1
   1f25a:	2900      	cmp	r1, #0
   1f25c:	da05      	bge.n	1f26a <_mktm_r+0x2e>
   1f25e:	f501 31a8 	add.w	r1, r1, #86016	; 0x15000
   1f262:	f501 71c0 	add.w	r1, r1, #384	; 0x180
   1f266:	3b01      	subs	r3, #1
   1f268:	e7f7      	b.n	1f25a <_mktm_r+0x1e>
   1f26a:	f44f 6061 	mov.w	r0, #3600	; 0xe10
   1f26e:	fb91 f2f0 	sdiv	r2, r1, r0
   1f272:	fb00 1112 	mls	r1, r0, r2, r1
   1f276:	203c      	movs	r0, #60	; 0x3c
   1f278:	60a2      	str	r2, [r4, #8]
   1f27a:	fb91 f2f0 	sdiv	r2, r1, r0
   1f27e:	fb00 1112 	mls	r1, r0, r2, r1
   1f282:	6062      	str	r2, [r4, #4]
   1f284:	6021      	str	r1, [r4, #0]
   1f286:	1d1a      	adds	r2, r3, #4
   1f288:	2107      	movs	r1, #7
   1f28a:	fb92 f1f1 	sdiv	r1, r2, r1
   1f28e:	ebc1 01c1 	rsb	r1, r1, r1, lsl #3
   1f292:	1a52      	subs	r2, r2, r1
   1f294:	bf48      	it	mi
   1f296:	3207      	addmi	r2, #7
   1f298:	2b00      	cmp	r3, #0
   1f29a:	61a2      	str	r2, [r4, #24]
   1f29c:	f240 75b2 	movw	r5, #1970	; 0x7b2
   1f2a0:	4887      	ldr	r0, [pc, #540]	; (1f4c0 <_mktm_r+0x284>)
   1f2a2:	db2e      	blt.n	1f302 <_mktm_r+0xc6>
   1f2a4:	07a9      	lsls	r1, r5, #30
   1f2a6:	d105      	bne.n	1f2b4 <_mktm_r+0x78>
   1f2a8:	2264      	movs	r2, #100	; 0x64
   1f2aa:	fb95 f1f2 	sdiv	r1, r5, r2
   1f2ae:	fb02 5211 	mls	r2, r2, r1, r5
   1f2b2:	b952      	cbnz	r2, 1f2ca <_mktm_r+0x8e>
   1f2b4:	f44f 72c8 	mov.w	r2, #400	; 0x190
   1f2b8:	fb95 f1f2 	sdiv	r1, r5, r2
   1f2bc:	fb02 5111 	mls	r1, r2, r1, r5
   1f2c0:	f1d1 0101 	rsbs	r1, r1, #1
   1f2c4:	bf38      	it	cc
   1f2c6:	2100      	movcc	r1, #0
   1f2c8:	e000      	b.n	1f2cc <_mktm_r+0x90>
   1f2ca:	2101      	movs	r1, #1
   1f2cc:	f850 2021 	ldr.w	r2, [r0, r1, lsl #2]
   1f2d0:	4293      	cmp	r3, r2
   1f2d2:	db1c      	blt.n	1f30e <_mktm_r+0xd2>
   1f2d4:	3501      	adds	r5, #1
   1f2d6:	1a9b      	subs	r3, r3, r2
   1f2d8:	e7e4      	b.n	1f2a4 <_mktm_r+0x68>
   1f2da:	2264      	movs	r2, #100	; 0x64
   1f2dc:	fb95 f1f2 	sdiv	r1, r5, r2
   1f2e0:	fb02 5211 	mls	r2, r2, r1, r5
   1f2e4:	b98a      	cbnz	r2, 1f30a <_mktm_r+0xce>
   1f2e6:	f44f 72c8 	mov.w	r2, #400	; 0x190
   1f2ea:	fb95 f1f2 	sdiv	r1, r5, r2
   1f2ee:	fb02 5111 	mls	r1, r2, r1, r5
   1f2f2:	f1d1 0101 	rsbs	r1, r1, #1
   1f2f6:	bf38      	it	cc
   1f2f8:	2100      	movcc	r1, #0
   1f2fa:	f850 2021 	ldr.w	r2, [r0, r1, lsl #2]
   1f2fe:	189b      	adds	r3, r3, r2
   1f300:	d505      	bpl.n	1f30e <_mktm_r+0xd2>
   1f302:	3d01      	subs	r5, #1
   1f304:	07aa      	lsls	r2, r5, #30
   1f306:	d1ee      	bne.n	1f2e6 <_mktm_r+0xaa>
   1f308:	e7e7      	b.n	1f2da <_mktm_r+0x9e>
   1f30a:	2101      	movs	r1, #1
   1f30c:	e7f5      	b.n	1f2fa <_mktm_r+0xbe>
   1f30e:	f2a5 726c 	subw	r2, r5, #1900	; 0x76c
   1f312:	6162      	str	r2, [r4, #20]
   1f314:	4a6b      	ldr	r2, [pc, #428]	; (1f4c4 <_mktm_r+0x288>)
   1f316:	f04f 0930 	mov.w	r9, #48	; 0x30
   1f31a:	fb09 2901 	mla	r9, r9, r1, r2
   1f31e:	2200      	movs	r2, #0
   1f320:	61e3      	str	r3, [r4, #28]
   1f322:	6122      	str	r2, [r4, #16]
   1f324:	6921      	ldr	r1, [r4, #16]
   1f326:	f859 2021 	ldr.w	r2, [r9, r1, lsl #2]
   1f32a:	4293      	cmp	r3, r2
   1f32c:	db03      	blt.n	1f336 <_mktm_r+0xfa>
   1f32e:	3101      	adds	r1, #1
   1f330:	1a9b      	subs	r3, r3, r2
   1f332:	6121      	str	r1, [r4, #16]
   1f334:	e7f6      	b.n	1f324 <_mktm_r+0xe8>
   1f336:	3301      	adds	r3, #1
   1f338:	60e3      	str	r3, [r4, #12]
   1f33a:	2f00      	cmp	r7, #0
   1f33c:	f040 80b9 	bne.w	1f4b2 <_mktm_r+0x276>
   1f340:	f001 ff72 	bl	21228 <__tz_lock>
   1f344:	4b60      	ldr	r3, [pc, #384]	; (1f4c8 <_mktm_r+0x28c>)
   1f346:	681b      	ldr	r3, [r3, #0]
   1f348:	b303      	cbz	r3, 1f38c <_mktm_r+0x150>
   1f34a:	6873      	ldr	r3, [r6, #4]
   1f34c:	429d      	cmp	r5, r3
   1f34e:	d105      	bne.n	1f35c <_mktm_r+0x120>
   1f350:	6831      	ldr	r1, [r6, #0]
   1f352:	f8d8 3000 	ldr.w	r3, [r8]
   1f356:	69f2      	ldr	r2, [r6, #28]
   1f358:	b941      	cbnz	r1, 1f36c <_mktm_r+0x130>
   1f35a:	e00a      	b.n	1f372 <_mktm_r+0x136>
   1f35c:	4628      	mov	r0, r5
   1f35e:	f7ff febf 	bl	1f0e0 <__tzcalc_limits>
   1f362:	2800      	cmp	r0, #0
   1f364:	d1f4      	bne.n	1f350 <_mktm_r+0x114>
   1f366:	f04f 33ff 	mov.w	r3, #4294967295
   1f36a:	e00d      	b.n	1f388 <_mktm_r+0x14c>
   1f36c:	4293      	cmp	r3, r2
   1f36e:	db08      	blt.n	1f382 <_mktm_r+0x146>
   1f370:	e001      	b.n	1f376 <_mktm_r+0x13a>
   1f372:	4293      	cmp	r3, r2
   1f374:	da07      	bge.n	1f386 <_mktm_r+0x14a>
   1f376:	6bb2      	ldr	r2, [r6, #56]	; 0x38
   1f378:	4293      	cmp	r3, r2
   1f37a:	bfac      	ite	ge
   1f37c:	2300      	movge	r3, #0
   1f37e:	2301      	movlt	r3, #1
   1f380:	e002      	b.n	1f388 <_mktm_r+0x14c>
   1f382:	2300      	movs	r3, #0
   1f384:	e000      	b.n	1f388 <_mktm_r+0x14c>
   1f386:	2301      	movs	r3, #1
   1f388:	6223      	str	r3, [r4, #32]
   1f38a:	e000      	b.n	1f38e <_mktm_r+0x152>
   1f38c:	6227      	str	r7, [r4, #32]
   1f38e:	6a23      	ldr	r3, [r4, #32]
   1f390:	f44f 6061 	mov.w	r0, #3600	; 0xe10
   1f394:	2b01      	cmp	r3, #1
   1f396:	bf0c      	ite	eq
   1f398:	6bf3      	ldreq	r3, [r6, #60]	; 0x3c
   1f39a:	6a33      	ldrne	r3, [r6, #32]
   1f39c:	6825      	ldr	r5, [r4, #0]
   1f39e:	fb93 f2f0 	sdiv	r2, r3, r0
   1f3a2:	fb00 3312 	mls	r3, r0, r2, r3
   1f3a6:	203c      	movs	r0, #60	; 0x3c
   1f3a8:	fb93 f1f0 	sdiv	r1, r3, r0
   1f3ac:	fb00 3311 	mls	r3, r0, r1, r3
   1f3b0:	6860      	ldr	r0, [r4, #4]
   1f3b2:	1aeb      	subs	r3, r5, r3
   1f3b4:	1a41      	subs	r1, r0, r1
   1f3b6:	68a0      	ldr	r0, [r4, #8]
   1f3b8:	2b3b      	cmp	r3, #59	; 0x3b
   1f3ba:	ebc2 0200 	rsb	r2, r2, r0
   1f3be:	6023      	str	r3, [r4, #0]
   1f3c0:	6061      	str	r1, [r4, #4]
   1f3c2:	60a2      	str	r2, [r4, #8]
   1f3c4:	dd03      	ble.n	1f3ce <_mktm_r+0x192>
   1f3c6:	3101      	adds	r1, #1
   1f3c8:	6061      	str	r1, [r4, #4]
   1f3ca:	3b3c      	subs	r3, #60	; 0x3c
   1f3cc:	e004      	b.n	1f3d8 <_mktm_r+0x19c>
   1f3ce:	2b00      	cmp	r3, #0
   1f3d0:	da03      	bge.n	1f3da <_mktm_r+0x19e>
   1f3d2:	3901      	subs	r1, #1
   1f3d4:	6061      	str	r1, [r4, #4]
   1f3d6:	333c      	adds	r3, #60	; 0x3c
   1f3d8:	6023      	str	r3, [r4, #0]
   1f3da:	6863      	ldr	r3, [r4, #4]
   1f3dc:	2b3b      	cmp	r3, #59	; 0x3b
   1f3de:	dd03      	ble.n	1f3e8 <_mktm_r+0x1ac>
   1f3e0:	3201      	adds	r2, #1
   1f3e2:	60a2      	str	r2, [r4, #8]
   1f3e4:	3b3c      	subs	r3, #60	; 0x3c
   1f3e6:	e004      	b.n	1f3f2 <_mktm_r+0x1b6>
   1f3e8:	2b00      	cmp	r3, #0
   1f3ea:	da03      	bge.n	1f3f4 <_mktm_r+0x1b8>
   1f3ec:	3a01      	subs	r2, #1
   1f3ee:	60a2      	str	r2, [r4, #8]
   1f3f0:	333c      	adds	r3, #60	; 0x3c
   1f3f2:	6063      	str	r3, [r4, #4]
   1f3f4:	68a3      	ldr	r3, [r4, #8]
   1f3f6:	2b17      	cmp	r3, #23
   1f3f8:	dd20      	ble.n	1f43c <_mktm_r+0x200>
   1f3fa:	69e2      	ldr	r2, [r4, #28]
   1f3fc:	3b18      	subs	r3, #24
   1f3fe:	3201      	adds	r2, #1
   1f400:	61e2      	str	r2, [r4, #28]
   1f402:	69a2      	ldr	r2, [r4, #24]
   1f404:	60a3      	str	r3, [r4, #8]
   1f406:	3201      	adds	r2, #1
   1f408:	2a06      	cmp	r2, #6
   1f40a:	bfc8      	it	gt
   1f40c:	2200      	movgt	r2, #0
   1f40e:	61a2      	str	r2, [r4, #24]
   1f410:	68e2      	ldr	r2, [r4, #12]
   1f412:	6923      	ldr	r3, [r4, #16]
   1f414:	3201      	adds	r2, #1
   1f416:	60e2      	str	r2, [r4, #12]
   1f418:	f859 1023 	ldr.w	r1, [r9, r3, lsl #2]
   1f41c:	428a      	cmp	r2, r1
   1f41e:	dd45      	ble.n	1f4ac <_mktm_r+0x270>
   1f420:	3301      	adds	r3, #1
   1f422:	1a52      	subs	r2, r2, r1
   1f424:	2b0c      	cmp	r3, #12
   1f426:	60e2      	str	r2, [r4, #12]
   1f428:	d001      	beq.n	1f42e <_mktm_r+0x1f2>
   1f42a:	6123      	str	r3, [r4, #16]
   1f42c:	e03e      	b.n	1f4ac <_mktm_r+0x270>
   1f42e:	6962      	ldr	r2, [r4, #20]
   1f430:	2300      	movs	r3, #0
   1f432:	3201      	adds	r2, #1
   1f434:	6123      	str	r3, [r4, #16]
   1f436:	6162      	str	r2, [r4, #20]
   1f438:	61e3      	str	r3, [r4, #28]
   1f43a:	e037      	b.n	1f4ac <_mktm_r+0x270>
   1f43c:	2b00      	cmp	r3, #0
   1f43e:	da35      	bge.n	1f4ac <_mktm_r+0x270>
   1f440:	69e2      	ldr	r2, [r4, #28]
   1f442:	3318      	adds	r3, #24
   1f444:	3a01      	subs	r2, #1
   1f446:	61e2      	str	r2, [r4, #28]
   1f448:	69a2      	ldr	r2, [r4, #24]
   1f44a:	60a3      	str	r3, [r4, #8]
   1f44c:	3a01      	subs	r2, #1
   1f44e:	bf48      	it	mi
   1f450:	2206      	movmi	r2, #6
   1f452:	61a2      	str	r2, [r4, #24]
   1f454:	68e2      	ldr	r2, [r4, #12]
   1f456:	3a01      	subs	r2, #1
   1f458:	60e2      	str	r2, [r4, #12]
   1f45a:	bb3a      	cbnz	r2, 1f4ac <_mktm_r+0x270>
   1f45c:	6923      	ldr	r3, [r4, #16]
   1f45e:	3b01      	subs	r3, #1
   1f460:	d401      	bmi.n	1f466 <_mktm_r+0x22a>
   1f462:	6123      	str	r3, [r4, #16]
   1f464:	e01e      	b.n	1f4a4 <_mktm_r+0x268>
   1f466:	230b      	movs	r3, #11
   1f468:	6123      	str	r3, [r4, #16]
   1f46a:	6963      	ldr	r3, [r4, #20]
   1f46c:	1e5a      	subs	r2, r3, #1
   1f46e:	f012 0f03 	tst.w	r2, #3
   1f472:	6162      	str	r2, [r4, #20]
   1f474:	f203 736b 	addw	r3, r3, #1899	; 0x76b
   1f478:	d105      	bne.n	1f486 <_mktm_r+0x24a>
   1f47a:	2264      	movs	r2, #100	; 0x64
   1f47c:	fb93 f1f2 	sdiv	r1, r3, r2
   1f480:	fb02 3211 	mls	r2, r2, r1, r3
   1f484:	b952      	cbnz	r2, 1f49c <_mktm_r+0x260>
   1f486:	f44f 72c8 	mov.w	r2, #400	; 0x190
   1f48a:	fb93 f1f2 	sdiv	r1, r3, r2
   1f48e:	fb02 3311 	mls	r3, r2, r1, r3
   1f492:	f1d3 0301 	rsbs	r3, r3, #1
   1f496:	bf38      	it	cc
   1f498:	2300      	movcc	r3, #0
   1f49a:	e000      	b.n	1f49e <_mktm_r+0x262>
   1f49c:	2301      	movs	r3, #1
   1f49e:	f503 73b6 	add.w	r3, r3, #364	; 0x16c
   1f4a2:	61e3      	str	r3, [r4, #28]
   1f4a4:	6923      	ldr	r3, [r4, #16]
   1f4a6:	f859 3023 	ldr.w	r3, [r9, r3, lsl #2]
   1f4aa:	60e3      	str	r3, [r4, #12]
   1f4ac:	f001 febd 	bl	2122a <__tz_unlock>
   1f4b0:	e001      	b.n	1f4b6 <_mktm_r+0x27a>
   1f4b2:	2300      	movs	r3, #0
   1f4b4:	6223      	str	r3, [r4, #32]
   1f4b6:	4620      	mov	r0, r4
   1f4b8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   1f4bc:	00015180 	.word	0x00015180
   1f4c0:	00027abc 	.word	0x00027abc
   1f4c4:	00027a5c 	.word	0x00027a5c
   1f4c8:	2007cad0 	.word	0x2007cad0

0001f4cc <mallinfo>:
mallinfo():
   1f4cc:	b510      	push	{r4, lr}
   1f4ce:	4b03      	ldr	r3, [pc, #12]	; (1f4dc <mallinfo+0x10>)
   1f4d0:	4604      	mov	r4, r0
   1f4d2:	6819      	ldr	r1, [r3, #0]
   1f4d4:	f000 f848 	bl	1f568 <_mallinfo_r>
   1f4d8:	4620      	mov	r0, r4
   1f4da:	bd10      	pop	{r4, pc}
   1f4dc:	2007c16c 	.word	0x2007c16c

0001f4e0 <_free_r>:
_free_r():
   1f4e0:	b530      	push	{r4, r5, lr}
   1f4e2:	2900      	cmp	r1, #0
   1f4e4:	d03c      	beq.n	1f560 <_free_r+0x80>
   1f4e6:	f851 2c04 	ldr.w	r2, [r1, #-4]
   1f4ea:	1f0b      	subs	r3, r1, #4
   1f4ec:	491d      	ldr	r1, [pc, #116]	; (1f564 <_free_r+0x84>)
   1f4ee:	2a00      	cmp	r2, #0
   1f4f0:	bfb8      	it	lt
   1f4f2:	189b      	addlt	r3, r3, r2
   1f4f4:	680a      	ldr	r2, [r1, #0]
   1f4f6:	460c      	mov	r4, r1
   1f4f8:	b912      	cbnz	r2, 1f500 <_free_r+0x20>
   1f4fa:	605a      	str	r2, [r3, #4]
   1f4fc:	600b      	str	r3, [r1, #0]
   1f4fe:	bd30      	pop	{r4, r5, pc}
   1f500:	4293      	cmp	r3, r2
   1f502:	d20d      	bcs.n	1f520 <_free_r+0x40>
   1f504:	6819      	ldr	r1, [r3, #0]
   1f506:	1858      	adds	r0, r3, r1
   1f508:	4290      	cmp	r0, r2
   1f50a:	d103      	bne.n	1f514 <_free_r+0x34>
   1f50c:	585a      	ldr	r2, [r3, r1]
   1f50e:	4411      	add	r1, r2
   1f510:	6842      	ldr	r2, [r0, #4]
   1f512:	6019      	str	r1, [r3, #0]
   1f514:	605a      	str	r2, [r3, #4]
   1f516:	6023      	str	r3, [r4, #0]
   1f518:	bd30      	pop	{r4, r5, pc}
   1f51a:	4299      	cmp	r1, r3
   1f51c:	d803      	bhi.n	1f526 <_free_r+0x46>
   1f51e:	460a      	mov	r2, r1
   1f520:	6851      	ldr	r1, [r2, #4]
   1f522:	2900      	cmp	r1, #0
   1f524:	d1f9      	bne.n	1f51a <_free_r+0x3a>
   1f526:	6814      	ldr	r4, [r2, #0]
   1f528:	1915      	adds	r5, r2, r4
   1f52a:	429d      	cmp	r5, r3
   1f52c:	d10a      	bne.n	1f544 <_free_r+0x64>
   1f52e:	681b      	ldr	r3, [r3, #0]
   1f530:	4423      	add	r3, r4
   1f532:	18d0      	adds	r0, r2, r3
   1f534:	4288      	cmp	r0, r1
   1f536:	6013      	str	r3, [r2, #0]
   1f538:	d112      	bne.n	1f560 <_free_r+0x80>
   1f53a:	6808      	ldr	r0, [r1, #0]
   1f53c:	4403      	add	r3, r0
   1f53e:	6013      	str	r3, [r2, #0]
   1f540:	684b      	ldr	r3, [r1, #4]
   1f542:	e00c      	b.n	1f55e <_free_r+0x7e>
   1f544:	d902      	bls.n	1f54c <_free_r+0x6c>
   1f546:	230c      	movs	r3, #12
   1f548:	6003      	str	r3, [r0, #0]
   1f54a:	bd30      	pop	{r4, r5, pc}
   1f54c:	6818      	ldr	r0, [r3, #0]
   1f54e:	181c      	adds	r4, r3, r0
   1f550:	428c      	cmp	r4, r1
   1f552:	d103      	bne.n	1f55c <_free_r+0x7c>
   1f554:	680c      	ldr	r4, [r1, #0]
   1f556:	6849      	ldr	r1, [r1, #4]
   1f558:	4420      	add	r0, r4
   1f55a:	6018      	str	r0, [r3, #0]
   1f55c:	6059      	str	r1, [r3, #4]
   1f55e:	6053      	str	r3, [r2, #4]
   1f560:	bd30      	pop	{r4, r5, pc}
   1f562:	bf00      	nop
   1f564:	2007cacc 	.word	0x2007cacc

0001f568 <_mallinfo_r>:
_mallinfo_r():
   1f568:	b570      	push	{r4, r5, r6, lr}
   1f56a:	4c13      	ldr	r4, [pc, #76]	; (1f5b8 <_mallinfo_r+0x50>)
   1f56c:	4606      	mov	r6, r0
   1f56e:	6822      	ldr	r2, [r4, #0]
   1f570:	b14a      	cbz	r2, 1f586 <_mallinfo_r+0x1e>
   1f572:	4608      	mov	r0, r1
   1f574:	2100      	movs	r1, #0
   1f576:	f000 f9f7 	bl	1f968 <_sbrk_r>
   1f57a:	1c43      	adds	r3, r0, #1
   1f57c:	bf16      	itet	ne
   1f57e:	6823      	ldrne	r3, [r4, #0]
   1f580:	4602      	moveq	r2, r0
   1f582:	ebc3 0200 	rsbne	r2, r3, r0
   1f586:	4b0d      	ldr	r3, [pc, #52]	; (1f5bc <_mallinfo_r+0x54>)
   1f588:	6819      	ldr	r1, [r3, #0]
   1f58a:	2300      	movs	r3, #0
   1f58c:	b119      	cbz	r1, 1f596 <_mallinfo_r+0x2e>
   1f58e:	6808      	ldr	r0, [r1, #0]
   1f590:	6849      	ldr	r1, [r1, #4]
   1f592:	4403      	add	r3, r0
   1f594:	e7fa      	b.n	1f58c <_mallinfo_r+0x24>
   1f596:	4d0a      	ldr	r5, [pc, #40]	; (1f5c0 <_mallinfo_r+0x58>)
   1f598:	4634      	mov	r4, r6
   1f59a:	602a      	str	r2, [r5, #0]
   1f59c:	622b      	str	r3, [r5, #32]
   1f59e:	1ad3      	subs	r3, r2, r3
   1f5a0:	61eb      	str	r3, [r5, #28]
   1f5a2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
   1f5a4:	c40f      	stmia	r4!, {r0, r1, r2, r3}
   1f5a6:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
   1f5a8:	c40f      	stmia	r4!, {r0, r1, r2, r3}
   1f5aa:	e895 0003 	ldmia.w	r5, {r0, r1}
   1f5ae:	e884 0003 	stmia.w	r4, {r0, r1}
   1f5b2:	4630      	mov	r0, r6
   1f5b4:	bd70      	pop	{r4, r5, r6, pc}
   1f5b6:	bf00      	nop
   1f5b8:	2007cac8 	.word	0x2007cac8
   1f5bc:	2007cacc 	.word	0x2007cacc
   1f5c0:	2007caa0 	.word	0x2007caa0

0001f5c4 <_malloc_r>:
_malloc_r():
   1f5c4:	b570      	push	{r4, r5, r6, lr}
   1f5c6:	1ccd      	adds	r5, r1, #3
   1f5c8:	f025 0503 	bic.w	r5, r5, #3
   1f5cc:	3508      	adds	r5, #8
   1f5ce:	2d0c      	cmp	r5, #12
   1f5d0:	bf38      	it	cc
   1f5d2:	250c      	movcc	r5, #12
   1f5d4:	2d00      	cmp	r5, #0
   1f5d6:	4606      	mov	r6, r0
   1f5d8:	db3f      	blt.n	1f65a <_malloc_r+0x96>
   1f5da:	428d      	cmp	r5, r1
   1f5dc:	d33d      	bcc.n	1f65a <_malloc_r+0x96>
   1f5de:	4b21      	ldr	r3, [pc, #132]	; (1f664 <_malloc_r+0xa0>)
   1f5e0:	681c      	ldr	r4, [r3, #0]
   1f5e2:	4618      	mov	r0, r3
   1f5e4:	4621      	mov	r1, r4
   1f5e6:	b1a1      	cbz	r1, 1f612 <_malloc_r+0x4e>
   1f5e8:	680b      	ldr	r3, [r1, #0]
   1f5ea:	1b5b      	subs	r3, r3, r5
   1f5ec:	d40e      	bmi.n	1f60c <_malloc_r+0x48>
   1f5ee:	2b0b      	cmp	r3, #11
   1f5f0:	d903      	bls.n	1f5fa <_malloc_r+0x36>
   1f5f2:	600b      	str	r3, [r1, #0]
   1f5f4:	18cc      	adds	r4, r1, r3
   1f5f6:	50cd      	str	r5, [r1, r3]
   1f5f8:	e01f      	b.n	1f63a <_malloc_r+0x76>
   1f5fa:	428c      	cmp	r4, r1
   1f5fc:	d102      	bne.n	1f604 <_malloc_r+0x40>
   1f5fe:	6862      	ldr	r2, [r4, #4]
   1f600:	6002      	str	r2, [r0, #0]
   1f602:	e01a      	b.n	1f63a <_malloc_r+0x76>
   1f604:	684b      	ldr	r3, [r1, #4]
   1f606:	6063      	str	r3, [r4, #4]
   1f608:	460c      	mov	r4, r1
   1f60a:	e016      	b.n	1f63a <_malloc_r+0x76>
   1f60c:	460c      	mov	r4, r1
   1f60e:	6849      	ldr	r1, [r1, #4]
   1f610:	e7e9      	b.n	1f5e6 <_malloc_r+0x22>
   1f612:	4c15      	ldr	r4, [pc, #84]	; (1f668 <_malloc_r+0xa4>)
   1f614:	6823      	ldr	r3, [r4, #0]
   1f616:	b91b      	cbnz	r3, 1f620 <_malloc_r+0x5c>
   1f618:	4630      	mov	r0, r6
   1f61a:	f000 f9a5 	bl	1f968 <_sbrk_r>
   1f61e:	6020      	str	r0, [r4, #0]
   1f620:	4629      	mov	r1, r5
   1f622:	4630      	mov	r0, r6
   1f624:	f000 f9a0 	bl	1f968 <_sbrk_r>
   1f628:	1c43      	adds	r3, r0, #1
   1f62a:	4601      	mov	r1, r0
   1f62c:	d015      	beq.n	1f65a <_malloc_r+0x96>
   1f62e:	1cc4      	adds	r4, r0, #3
   1f630:	f024 0403 	bic.w	r4, r4, #3
   1f634:	4284      	cmp	r4, r0
   1f636:	d10a      	bne.n	1f64e <_malloc_r+0x8a>
   1f638:	6025      	str	r5, [r4, #0]
   1f63a:	f104 000b 	add.w	r0, r4, #11
   1f63e:	1d23      	adds	r3, r4, #4
   1f640:	f020 0007 	bic.w	r0, r0, #7
   1f644:	1ac3      	subs	r3, r0, r3
   1f646:	d00b      	beq.n	1f660 <_malloc_r+0x9c>
   1f648:	425a      	negs	r2, r3
   1f64a:	50e2      	str	r2, [r4, r3]
   1f64c:	bd70      	pop	{r4, r5, r6, pc}
   1f64e:	4630      	mov	r0, r6
   1f650:	1a61      	subs	r1, r4, r1
   1f652:	f000 f989 	bl	1f968 <_sbrk_r>
   1f656:	3001      	adds	r0, #1
   1f658:	d1ee      	bne.n	1f638 <_malloc_r+0x74>
   1f65a:	230c      	movs	r3, #12
   1f65c:	6033      	str	r3, [r6, #0]
   1f65e:	2000      	movs	r0, #0
   1f660:	bd70      	pop	{r4, r5, r6, pc}
   1f662:	bf00      	nop
   1f664:	2007cacc 	.word	0x2007cacc
   1f668:	2007cac8 	.word	0x2007cac8

0001f66c <iprintf>:
printf():
   1f66c:	b40f      	push	{r0, r1, r2, r3}
   1f66e:	4b0a      	ldr	r3, [pc, #40]	; (1f698 <iprintf+0x2c>)
   1f670:	b513      	push	{r0, r1, r4, lr}
   1f672:	681c      	ldr	r4, [r3, #0]
   1f674:	b124      	cbz	r4, 1f680 <iprintf+0x14>
   1f676:	69a3      	ldr	r3, [r4, #24]
   1f678:	b913      	cbnz	r3, 1f680 <iprintf+0x14>
   1f67a:	4620      	mov	r0, r4
   1f67c:	f7ff f9be 	bl	1e9fc <__sinit>
   1f680:	ab05      	add	r3, sp, #20
   1f682:	4620      	mov	r0, r4
   1f684:	68a1      	ldr	r1, [r4, #8]
   1f686:	9a04      	ldr	r2, [sp, #16]
   1f688:	9301      	str	r3, [sp, #4]
   1f68a:	f001 fea3 	bl	213d4 <_vfiprintf_r>
   1f68e:	b002      	add	sp, #8
   1f690:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   1f694:	b004      	add	sp, #16
   1f696:	4770      	bx	lr
   1f698:	2007c16c 	.word	0x2007c16c

0001f69c <_puts_r>:
_puts_r():
   1f69c:	b570      	push	{r4, r5, r6, lr}
   1f69e:	460e      	mov	r6, r1
   1f6a0:	4605      	mov	r5, r0
   1f6a2:	b118      	cbz	r0, 1f6ac <_puts_r+0x10>
   1f6a4:	6983      	ldr	r3, [r0, #24]
   1f6a6:	b90b      	cbnz	r3, 1f6ac <_puts_r+0x10>
   1f6a8:	f7ff f9a8 	bl	1e9fc <__sinit>
   1f6ac:	68ac      	ldr	r4, [r5, #8]
   1f6ae:	89a3      	ldrh	r3, [r4, #12]
   1f6b0:	0719      	lsls	r1, r3, #28
   1f6b2:	d501      	bpl.n	1f6b8 <_puts_r+0x1c>
   1f6b4:	6923      	ldr	r3, [r4, #16]
   1f6b6:	b983      	cbnz	r3, 1f6da <_puts_r+0x3e>
   1f6b8:	4628      	mov	r0, r5
   1f6ba:	4621      	mov	r1, r4
   1f6bc:	f003 f940 	bl	22940 <__swsetup_r>
   1f6c0:	b158      	cbz	r0, 1f6da <_puts_r+0x3e>
   1f6c2:	f04f 30ff 	mov.w	r0, #4294967295
   1f6c6:	bd70      	pop	{r4, r5, r6, pc}
   1f6c8:	2b00      	cmp	r3, #0
   1f6ca:	db0e      	blt.n	1f6ea <_puts_r+0x4e>
   1f6cc:	6823      	ldr	r3, [r4, #0]
   1f6ce:	f816 2c01 	ldrb.w	r2, [r6, #-1]
   1f6d2:	701a      	strb	r2, [r3, #0]
   1f6d4:	6823      	ldr	r3, [r4, #0]
   1f6d6:	3301      	adds	r3, #1
   1f6d8:	6023      	str	r3, [r4, #0]
   1f6da:	68a3      	ldr	r3, [r4, #8]
   1f6dc:	f816 2b01 	ldrb.w	r2, [r6], #1
   1f6e0:	3b01      	subs	r3, #1
   1f6e2:	60a3      	str	r3, [r4, #8]
   1f6e4:	2a00      	cmp	r2, #0
   1f6e6:	d1ef      	bne.n	1f6c8 <_puts_r+0x2c>
   1f6e8:	e017      	b.n	1f71a <_puts_r+0x7e>
   1f6ea:	69a2      	ldr	r2, [r4, #24]
   1f6ec:	4293      	cmp	r3, r2
   1f6ee:	db09      	blt.n	1f704 <_puts_r+0x68>
   1f6f0:	6823      	ldr	r3, [r4, #0]
   1f6f2:	f816 2c01 	ldrb.w	r2, [r6, #-1]
   1f6f6:	701a      	strb	r2, [r3, #0]
   1f6f8:	6823      	ldr	r3, [r4, #0]
   1f6fa:	7819      	ldrb	r1, [r3, #0]
   1f6fc:	290a      	cmp	r1, #10
   1f6fe:	d1ea      	bne.n	1f6d6 <_puts_r+0x3a>
   1f700:	4628      	mov	r0, r5
   1f702:	e002      	b.n	1f70a <_puts_r+0x6e>
   1f704:	f816 1c01 	ldrb.w	r1, [r6, #-1]
   1f708:	4628      	mov	r0, r5
   1f70a:	4622      	mov	r2, r4
   1f70c:	f003 f8b2 	bl	22874 <__swbuf_r>
   1f710:	f1b0 32ff 	subs.w	r2, r0, #4294967295
   1f714:	4250      	negs	r0, r2
   1f716:	4150      	adcs	r0, r2
   1f718:	e7d2      	b.n	1f6c0 <_puts_r+0x24>
   1f71a:	2b00      	cmp	r3, #0
   1f71c:	da16      	bge.n	1f74c <_puts_r+0xb0>
   1f71e:	69a2      	ldr	r2, [r4, #24]
   1f720:	4293      	cmp	r3, r2
   1f722:	db08      	blt.n	1f736 <_puts_r+0x9a>
   1f724:	6823      	ldr	r3, [r4, #0]
   1f726:	220a      	movs	r2, #10
   1f728:	701a      	strb	r2, [r3, #0]
   1f72a:	6823      	ldr	r3, [r4, #0]
   1f72c:	7819      	ldrb	r1, [r3, #0]
   1f72e:	4291      	cmp	r1, r2
   1f730:	d110      	bne.n	1f754 <_puts_r+0xb8>
   1f732:	4628      	mov	r0, r5
   1f734:	e001      	b.n	1f73a <_puts_r+0x9e>
   1f736:	4628      	mov	r0, r5
   1f738:	210a      	movs	r1, #10
   1f73a:	4622      	mov	r2, r4
   1f73c:	f003 f89a 	bl	22874 <__swbuf_r>
   1f740:	f1b0 33ff 	subs.w	r3, r0, #4294967295
   1f744:	4258      	negs	r0, r3
   1f746:	4158      	adcs	r0, r3
   1f748:	b130      	cbz	r0, 1f758 <_puts_r+0xbc>
   1f74a:	e7ba      	b.n	1f6c2 <_puts_r+0x26>
   1f74c:	6823      	ldr	r3, [r4, #0]
   1f74e:	220a      	movs	r2, #10
   1f750:	701a      	strb	r2, [r3, #0]
   1f752:	6823      	ldr	r3, [r4, #0]
   1f754:	3301      	adds	r3, #1
   1f756:	6023      	str	r3, [r4, #0]
   1f758:	200a      	movs	r0, #10
   1f75a:	bd70      	pop	{r4, r5, r6, pc}

0001f75c <puts>:
puts():
   1f75c:	4b02      	ldr	r3, [pc, #8]	; (1f768 <puts+0xc>)
   1f75e:	4601      	mov	r1, r0
   1f760:	6818      	ldr	r0, [r3, #0]
   1f762:	f7ff bf9b 	b.w	1f69c <_puts_r>
   1f766:	bf00      	nop
   1f768:	2007c16c 	.word	0x2007c16c

0001f76c <srand>:
srand():
   1f76c:	b538      	push	{r3, r4, r5, lr}
   1f76e:	4b13      	ldr	r3, [pc, #76]	; (1f7bc <srand+0x50>)
   1f770:	4605      	mov	r5, r0
   1f772:	681c      	ldr	r4, [r3, #0]
   1f774:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   1f776:	b9d3      	cbnz	r3, 1f7ae <srand+0x42>
   1f778:	2018      	movs	r0, #24
   1f77a:	f7ff fa1f 	bl	1ebbc <malloc>
   1f77e:	f243 330e 	movw	r3, #13070	; 0x330e
   1f782:	63a0      	str	r0, [r4, #56]	; 0x38
   1f784:	8003      	strh	r3, [r0, #0]
   1f786:	f64a 33cd 	movw	r3, #43981	; 0xabcd
   1f78a:	8043      	strh	r3, [r0, #2]
   1f78c:	f241 2334 	movw	r3, #4660	; 0x1234
   1f790:	8083      	strh	r3, [r0, #4]
   1f792:	f24e 636d 	movw	r3, #58989	; 0xe66d
   1f796:	80c3      	strh	r3, [r0, #6]
   1f798:	f64d 63ec 	movw	r3, #57068	; 0xdeec
   1f79c:	8103      	strh	r3, [r0, #8]
   1f79e:	2305      	movs	r3, #5
   1f7a0:	8143      	strh	r3, [r0, #10]
   1f7a2:	230b      	movs	r3, #11
   1f7a4:	8183      	strh	r3, [r0, #12]
   1f7a6:	2201      	movs	r2, #1
   1f7a8:	2300      	movs	r3, #0
   1f7aa:	e9c0 2304 	strd	r2, r3, [r0, #16]
   1f7ae:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   1f7b0:	4628      	mov	r0, r5
   1f7b2:	2100      	movs	r1, #0
   1f7b4:	e9c3 0104 	strd	r0, r1, [r3, #16]
   1f7b8:	bd38      	pop	{r3, r4, r5, pc}
   1f7ba:	bf00      	nop
   1f7bc:	2007c16c 	.word	0x2007c16c

0001f7c0 <rand>:
rand():
   1f7c0:	4b19      	ldr	r3, [pc, #100]	; (1f828 <rand+0x68>)
   1f7c2:	b510      	push	{r4, lr}
   1f7c4:	681c      	ldr	r4, [r3, #0]
   1f7c6:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   1f7c8:	b9d3      	cbnz	r3, 1f800 <rand+0x40>
   1f7ca:	2018      	movs	r0, #24
   1f7cc:	f7ff f9f6 	bl	1ebbc <malloc>
   1f7d0:	f243 330e 	movw	r3, #13070	; 0x330e
   1f7d4:	63a0      	str	r0, [r4, #56]	; 0x38
   1f7d6:	8003      	strh	r3, [r0, #0]
   1f7d8:	f64a 33cd 	movw	r3, #43981	; 0xabcd
   1f7dc:	8043      	strh	r3, [r0, #2]
   1f7de:	f241 2334 	movw	r3, #4660	; 0x1234
   1f7e2:	8083      	strh	r3, [r0, #4]
   1f7e4:	f24e 636d 	movw	r3, #58989	; 0xe66d
   1f7e8:	80c3      	strh	r3, [r0, #6]
   1f7ea:	f64d 63ec 	movw	r3, #57068	; 0xdeec
   1f7ee:	8103      	strh	r3, [r0, #8]
   1f7f0:	2305      	movs	r3, #5
   1f7f2:	8143      	strh	r3, [r0, #10]
   1f7f4:	230b      	movs	r3, #11
   1f7f6:	8183      	strh	r3, [r0, #12]
   1f7f8:	2201      	movs	r2, #1
   1f7fa:	2300      	movs	r3, #0
   1f7fc:	e9c0 2304 	strd	r2, r3, [r0, #16]
   1f800:	6ba1      	ldr	r1, [r4, #56]	; 0x38
   1f802:	4c0a      	ldr	r4, [pc, #40]	; (1f82c <rand+0x6c>)
   1f804:	690a      	ldr	r2, [r1, #16]
   1f806:	6948      	ldr	r0, [r1, #20]
   1f808:	4354      	muls	r4, r2
   1f80a:	4b09      	ldr	r3, [pc, #36]	; (1f830 <rand+0x70>)
   1f80c:	fb03 4000 	mla	r0, r3, r0, r4
   1f810:	fba2 2303 	umull	r2, r3, r2, r3
   1f814:	3201      	adds	r2, #1
   1f816:	4403      	add	r3, r0
   1f818:	f143 0300 	adc.w	r3, r3, #0
   1f81c:	e9c1 2304 	strd	r2, r3, [r1, #16]
   1f820:	f023 4000 	bic.w	r0, r3, #2147483648	; 0x80000000
   1f824:	bd10      	pop	{r4, pc}
   1f826:	bf00      	nop
   1f828:	2007c16c 	.word	0x2007c16c
   1f82c:	5851f42d 	.word	0x5851f42d
   1f830:	4c957f2d 	.word	0x4c957f2d

0001f834 <realloc>:
realloc():
   1f834:	460a      	mov	r2, r1
   1f836:	4903      	ldr	r1, [pc, #12]	; (1f844 <realloc+0x10>)
   1f838:	4603      	mov	r3, r0
   1f83a:	6808      	ldr	r0, [r1, #0]
   1f83c:	4619      	mov	r1, r3
   1f83e:	f004 bffe 	b.w	2483e <_realloc_r>
   1f842:	bf00      	nop
   1f844:	2007c16c 	.word	0x2007c16c

0001f848 <lflush>:
lflush():
   1f848:	8983      	ldrh	r3, [r0, #12]
   1f84a:	f003 0309 	and.w	r3, r3, #9
   1f84e:	2b09      	cmp	r3, #9
   1f850:	d101      	bne.n	1f856 <lflush+0xe>
   1f852:	f004 b843 	b.w	238dc <fflush>
   1f856:	2000      	movs	r0, #0
   1f858:	4770      	bx	lr
	...

0001f85c <__srefill_r>:
__srefill_r():
   1f85c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1f85e:	460c      	mov	r4, r1
   1f860:	4605      	mov	r5, r0
   1f862:	b118      	cbz	r0, 1f86c <__srefill_r+0x10>
   1f864:	6983      	ldr	r3, [r0, #24]
   1f866:	b90b      	cbnz	r3, 1f86c <__srefill_r+0x10>
   1f868:	f7ff f8c8 	bl	1e9fc <__sinit>
   1f86c:	4b39      	ldr	r3, [pc, #228]	; (1f954 <__srefill_r+0xf8>)
   1f86e:	429c      	cmp	r4, r3
   1f870:	d101      	bne.n	1f876 <__srefill_r+0x1a>
   1f872:	686c      	ldr	r4, [r5, #4]
   1f874:	e008      	b.n	1f888 <__srefill_r+0x2c>
   1f876:	4b38      	ldr	r3, [pc, #224]	; (1f958 <__srefill_r+0xfc>)
   1f878:	429c      	cmp	r4, r3
   1f87a:	d101      	bne.n	1f880 <__srefill_r+0x24>
   1f87c:	68ac      	ldr	r4, [r5, #8]
   1f87e:	e003      	b.n	1f888 <__srefill_r+0x2c>
   1f880:	4b36      	ldr	r3, [pc, #216]	; (1f95c <__srefill_r+0x100>)
   1f882:	429c      	cmp	r4, r3
   1f884:	bf08      	it	eq
   1f886:	68ec      	ldreq	r4, [r5, #12]
   1f888:	89a2      	ldrh	r2, [r4, #12]
   1f88a:	2300      	movs	r3, #0
   1f88c:	6063      	str	r3, [r4, #4]
   1f88e:	b293      	uxth	r3, r2
   1f890:	069e      	lsls	r6, r3, #26
   1f892:	d45a      	bmi.n	1f94a <__srefill_r+0xee>
   1f894:	0758      	lsls	r0, r3, #29
   1f896:	d41a      	bmi.n	1f8ce <__srefill_r+0x72>
   1f898:	06d9      	lsls	r1, r3, #27
   1f89a:	d405      	bmi.n	1f8a8 <__srefill_r+0x4c>
   1f89c:	2309      	movs	r3, #9
   1f89e:	f042 0240 	orr.w	r2, r2, #64	; 0x40
   1f8a2:	602b      	str	r3, [r5, #0]
   1f8a4:	81a2      	strh	r2, [r4, #12]
   1f8a6:	e050      	b.n	1f94a <__srefill_r+0xee>
   1f8a8:	071a      	lsls	r2, r3, #28
   1f8aa:	d50b      	bpl.n	1f8c4 <__srefill_r+0x68>
   1f8ac:	4628      	mov	r0, r5
   1f8ae:	4621      	mov	r1, r4
   1f8b0:	f003 ffea 	bl	23888 <_fflush_r>
   1f8b4:	2800      	cmp	r0, #0
   1f8b6:	d148      	bne.n	1f94a <__srefill_r+0xee>
   1f8b8:	89a3      	ldrh	r3, [r4, #12]
   1f8ba:	60a0      	str	r0, [r4, #8]
   1f8bc:	f023 0308 	bic.w	r3, r3, #8
   1f8c0:	81a3      	strh	r3, [r4, #12]
   1f8c2:	61a0      	str	r0, [r4, #24]
   1f8c4:	89a3      	ldrh	r3, [r4, #12]
   1f8c6:	f043 0304 	orr.w	r3, r3, #4
   1f8ca:	81a3      	strh	r3, [r4, #12]
   1f8cc:	e010      	b.n	1f8f0 <__srefill_r+0x94>
   1f8ce:	6b61      	ldr	r1, [r4, #52]	; 0x34
   1f8d0:	b171      	cbz	r1, 1f8f0 <__srefill_r+0x94>
   1f8d2:	f104 0344 	add.w	r3, r4, #68	; 0x44
   1f8d6:	4299      	cmp	r1, r3
   1f8d8:	d002      	beq.n	1f8e0 <__srefill_r+0x84>
   1f8da:	4628      	mov	r0, r5
   1f8dc:	f7ff fe00 	bl	1f4e0 <_free_r>
   1f8e0:	6c23      	ldr	r3, [r4, #64]	; 0x40
   1f8e2:	2000      	movs	r0, #0
   1f8e4:	6360      	str	r0, [r4, #52]	; 0x34
   1f8e6:	6063      	str	r3, [r4, #4]
   1f8e8:	b113      	cbz	r3, 1f8f0 <__srefill_r+0x94>
   1f8ea:	6be3      	ldr	r3, [r4, #60]	; 0x3c
   1f8ec:	6023      	str	r3, [r4, #0]
   1f8ee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1f8f0:	6923      	ldr	r3, [r4, #16]
   1f8f2:	b91b      	cbnz	r3, 1f8fc <__srefill_r+0xa0>
   1f8f4:	4628      	mov	r0, r5
   1f8f6:	4621      	mov	r1, r4
   1f8f8:	f004 fb4a 	bl	23f90 <__smakebuf_r>
   1f8fc:	89a7      	ldrh	r7, [r4, #12]
   1f8fe:	b2be      	uxth	r6, r7
   1f900:	07b3      	lsls	r3, r6, #30
   1f902:	d00f      	beq.n	1f924 <__srefill_r+0xc8>
   1f904:	2301      	movs	r3, #1
   1f906:	81a3      	strh	r3, [r4, #12]
   1f908:	4b15      	ldr	r3, [pc, #84]	; (1f960 <__srefill_r+0x104>)
   1f90a:	4916      	ldr	r1, [pc, #88]	; (1f964 <__srefill_r+0x108>)
   1f90c:	6818      	ldr	r0, [r3, #0]
   1f90e:	f006 0609 	and.w	r6, r6, #9
   1f912:	f7ff f8dd 	bl	1ead0 <_fwalk>
   1f916:	2e09      	cmp	r6, #9
   1f918:	81a7      	strh	r7, [r4, #12]
   1f91a:	d103      	bne.n	1f924 <__srefill_r+0xc8>
   1f91c:	4628      	mov	r0, r5
   1f91e:	4621      	mov	r1, r4
   1f920:	f003 ff2e 	bl	23780 <__sflush_r>
   1f924:	6922      	ldr	r2, [r4, #16]
   1f926:	6a66      	ldr	r6, [r4, #36]	; 0x24
   1f928:	6022      	str	r2, [r4, #0]
   1f92a:	4628      	mov	r0, r5
   1f92c:	6a21      	ldr	r1, [r4, #32]
   1f92e:	6963      	ldr	r3, [r4, #20]
   1f930:	47b0      	blx	r6
   1f932:	2800      	cmp	r0, #0
   1f934:	6060      	str	r0, [r4, #4]
   1f936:	dc0b      	bgt.n	1f950 <__srefill_r+0xf4>
   1f938:	89a3      	ldrh	r3, [r4, #12]
   1f93a:	bf17      	itett	ne
   1f93c:	2200      	movne	r2, #0
   1f93e:	f043 0320 	orreq.w	r3, r3, #32
   1f942:	f043 0340 	orrne.w	r3, r3, #64	; 0x40
   1f946:	6062      	strne	r2, [r4, #4]
   1f948:	81a3      	strh	r3, [r4, #12]
   1f94a:	f04f 30ff 	mov.w	r0, #4294967295
   1f94e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1f950:	2000      	movs	r0, #0
   1f952:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1f954:	00027994 	.word	0x00027994
   1f958:	000279b4 	.word	0x000279b4
   1f95c:	000279d4 	.word	0x000279d4
   1f960:	000279f8 	.word	0x000279f8
   1f964:	0001f849 	.word	0x0001f849

0001f968 <_sbrk_r>:
_sbrk_r():
   1f968:	b538      	push	{r3, r4, r5, lr}
   1f96a:	4c06      	ldr	r4, [pc, #24]	; (1f984 <_sbrk_r+0x1c>)
   1f96c:	2300      	movs	r3, #0
   1f96e:	4605      	mov	r5, r0
   1f970:	4608      	mov	r0, r1
   1f972:	6023      	str	r3, [r4, #0]
   1f974:	f7f0 fc42 	bl	101fc <_sbrk>
   1f978:	1c43      	adds	r3, r0, #1
   1f97a:	d102      	bne.n	1f982 <_sbrk_r+0x1a>
   1f97c:	6823      	ldr	r3, [r4, #0]
   1f97e:	b103      	cbz	r3, 1f982 <_sbrk_r+0x1a>
   1f980:	602b      	str	r3, [r5, #0]
   1f982:	bd38      	pop	{r3, r4, r5, pc}
   1f984:	2007cad4 	.word	0x2007cad4

0001f988 <iscanf>:
iscanf():
   1f988:	b40f      	push	{r0, r1, r2, r3}
   1f98a:	4b0a      	ldr	r3, [pc, #40]	; (1f9b4 <iscanf+0x2c>)
   1f98c:	b513      	push	{r0, r1, r4, lr}
   1f98e:	681c      	ldr	r4, [r3, #0]
   1f990:	b124      	cbz	r4, 1f99c <iscanf+0x14>
   1f992:	69a3      	ldr	r3, [r4, #24]
   1f994:	b913      	cbnz	r3, 1f99c <iscanf+0x14>
   1f996:	4620      	mov	r0, r4
   1f998:	f7ff f830 	bl	1e9fc <__sinit>
   1f99c:	ab05      	add	r3, sp, #20
   1f99e:	4620      	mov	r0, r4
   1f9a0:	6861      	ldr	r1, [r4, #4]
   1f9a2:	9a04      	ldr	r2, [sp, #16]
   1f9a4:	9301      	str	r3, [sp, #4]
   1f9a6:	f002 fb8f 	bl	220c8 <_vfiscanf_r>
   1f9aa:	b002      	add	sp, #8
   1f9ac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   1f9b0:	b004      	add	sp, #16
   1f9b2:	4770      	bx	lr
   1f9b4:	2007c16c 	.word	0x2007c16c

0001f9b8 <setvbuf>:
setvbuf():
   1f9b8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1f9bc:	461e      	mov	r6, r3
   1f9be:	4b3d      	ldr	r3, [pc, #244]	; (1fab4 <setvbuf+0xfc>)
   1f9c0:	4604      	mov	r4, r0
   1f9c2:	681d      	ldr	r5, [r3, #0]
   1f9c4:	460f      	mov	r7, r1
   1f9c6:	4690      	mov	r8, r2
   1f9c8:	b125      	cbz	r5, 1f9d4 <setvbuf+0x1c>
   1f9ca:	69ab      	ldr	r3, [r5, #24]
   1f9cc:	b913      	cbnz	r3, 1f9d4 <setvbuf+0x1c>
   1f9ce:	4628      	mov	r0, r5
   1f9d0:	f7ff f814 	bl	1e9fc <__sinit>
   1f9d4:	4b38      	ldr	r3, [pc, #224]	; (1fab8 <setvbuf+0x100>)
   1f9d6:	429c      	cmp	r4, r3
   1f9d8:	d101      	bne.n	1f9de <setvbuf+0x26>
   1f9da:	686c      	ldr	r4, [r5, #4]
   1f9dc:	e008      	b.n	1f9f0 <setvbuf+0x38>
   1f9de:	4b37      	ldr	r3, [pc, #220]	; (1fabc <setvbuf+0x104>)
   1f9e0:	429c      	cmp	r4, r3
   1f9e2:	d101      	bne.n	1f9e8 <setvbuf+0x30>
   1f9e4:	68ac      	ldr	r4, [r5, #8]
   1f9e6:	e003      	b.n	1f9f0 <setvbuf+0x38>
   1f9e8:	4b35      	ldr	r3, [pc, #212]	; (1fac0 <setvbuf+0x108>)
   1f9ea:	429c      	cmp	r4, r3
   1f9ec:	bf08      	it	eq
   1f9ee:	68ec      	ldreq	r4, [r5, #12]
   1f9f0:	f1b8 0f02 	cmp.w	r8, #2
   1f9f4:	d859      	bhi.n	1faaa <setvbuf+0xf2>
   1f9f6:	2e00      	cmp	r6, #0
   1f9f8:	db57      	blt.n	1faaa <setvbuf+0xf2>
   1f9fa:	4628      	mov	r0, r5
   1f9fc:	4621      	mov	r1, r4
   1f9fe:	f003 ff43 	bl	23888 <_fflush_r>
   1fa02:	2300      	movs	r3, #0
   1fa04:	6063      	str	r3, [r4, #4]
   1fa06:	61a3      	str	r3, [r4, #24]
   1fa08:	89a3      	ldrh	r3, [r4, #12]
   1fa0a:	061b      	lsls	r3, r3, #24
   1fa0c:	d503      	bpl.n	1fa16 <setvbuf+0x5e>
   1fa0e:	4628      	mov	r0, r5
   1fa10:	6921      	ldr	r1, [r4, #16]
   1fa12:	f7ff fd65 	bl	1f4e0 <_free_r>
   1fa16:	89a3      	ldrh	r3, [r4, #12]
   1fa18:	f1b8 0f02 	cmp.w	r8, #2
   1fa1c:	f023 0383 	bic.w	r3, r3, #131	; 0x83
   1fa20:	81a3      	strh	r3, [r4, #12]
   1fa22:	d012      	beq.n	1fa4a <setvbuf+0x92>
   1fa24:	bb37      	cbnz	r7, 1fa74 <setvbuf+0xbc>
   1fa26:	2e00      	cmp	r6, #0
   1fa28:	bf08      	it	eq
   1fa2a:	f44f 6680 	moveq.w	r6, #1024	; 0x400
   1fa2e:	4630      	mov	r0, r6
   1fa30:	f7ff f8c4 	bl	1ebbc <malloc>
   1fa34:	4607      	mov	r7, r0
   1fa36:	b9c8      	cbnz	r0, 1fa6c <setvbuf+0xb4>
   1fa38:	f44f 6080 	mov.w	r0, #1024	; 0x400
   1fa3c:	f7ff f8be 	bl	1ebbc <malloc>
   1fa40:	4607      	mov	r7, r0
   1fa42:	b988      	cbnz	r0, 1fa68 <setvbuf+0xb0>
   1fa44:	f04f 30ff 	mov.w	r0, #4294967295
   1fa48:	e000      	b.n	1fa4c <setvbuf+0x94>
   1fa4a:	2000      	movs	r0, #0
   1fa4c:	89a3      	ldrh	r3, [r4, #12]
   1fa4e:	f043 0302 	orr.w	r3, r3, #2
   1fa52:	81a3      	strh	r3, [r4, #12]
   1fa54:	2300      	movs	r3, #0
   1fa56:	60a3      	str	r3, [r4, #8]
   1fa58:	f104 0347 	add.w	r3, r4, #71	; 0x47
   1fa5c:	6023      	str	r3, [r4, #0]
   1fa5e:	6123      	str	r3, [r4, #16]
   1fa60:	2301      	movs	r3, #1
   1fa62:	6163      	str	r3, [r4, #20]
   1fa64:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1fa68:	f44f 6680 	mov.w	r6, #1024	; 0x400
   1fa6c:	89a3      	ldrh	r3, [r4, #12]
   1fa6e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   1fa72:	81a3      	strh	r3, [r4, #12]
   1fa74:	f1b8 0f01 	cmp.w	r8, #1
   1fa78:	d105      	bne.n	1fa86 <setvbuf+0xce>
   1fa7a:	89a3      	ldrh	r3, [r4, #12]
   1fa7c:	f043 0301 	orr.w	r3, r3, #1
   1fa80:	81a3      	strh	r3, [r4, #12]
   1fa82:	4273      	negs	r3, r6
   1fa84:	61a3      	str	r3, [r4, #24]
   1fa86:	4b0f      	ldr	r3, [pc, #60]	; (1fac4 <setvbuf+0x10c>)
   1fa88:	62ab      	str	r3, [r5, #40]	; 0x28
   1fa8a:	89a3      	ldrh	r3, [r4, #12]
   1fa8c:	6027      	str	r7, [r4, #0]
   1fa8e:	f003 0008 	and.w	r0, r3, #8
   1fa92:	b280      	uxth	r0, r0
   1fa94:	6127      	str	r7, [r4, #16]
   1fa96:	6166      	str	r6, [r4, #20]
   1fa98:	b148      	cbz	r0, 1faae <setvbuf+0xf6>
   1fa9a:	f013 0f03 	tst.w	r3, #3
   1fa9e:	bf18      	it	ne
   1faa0:	2600      	movne	r6, #0
   1faa2:	60a6      	str	r6, [r4, #8]
   1faa4:	2000      	movs	r0, #0
   1faa6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1faaa:	f04f 30ff 	mov.w	r0, #4294967295
   1faae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1fab2:	bf00      	nop
   1fab4:	2007c16c 	.word	0x2007c16c
   1fab8:	00027994 	.word	0x00027994
   1fabc:	000279b4 	.word	0x000279b4
   1fac0:	000279d4 	.word	0x000279d4
   1fac4:	0001e955 	.word	0x0001e955

0001fac8 <_raise_r>:
_raise_r():
   1fac8:	291f      	cmp	r1, #31
   1faca:	b538      	push	{r3, r4, r5, lr}
   1facc:	4605      	mov	r5, r0
   1face:	460c      	mov	r4, r1
   1fad0:	d904      	bls.n	1fadc <_raise_r+0x14>
   1fad2:	2316      	movs	r3, #22
   1fad4:	6003      	str	r3, [r0, #0]
   1fad6:	f04f 30ff 	mov.w	r0, #4294967295
   1fada:	bd38      	pop	{r3, r4, r5, pc}
   1fadc:	6c42      	ldr	r2, [r0, #68]	; 0x44
   1fade:	b112      	cbz	r2, 1fae6 <_raise_r+0x1e>
   1fae0:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
   1fae4:	b94b      	cbnz	r3, 1fafa <_raise_r+0x32>
   1fae6:	4628      	mov	r0, r5
   1fae8:	f000 f830 	bl	1fb4c <_getpid_r>
   1faec:	4622      	mov	r2, r4
   1faee:	4601      	mov	r1, r0
   1faf0:	4628      	mov	r0, r5
   1faf2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   1faf6:	f000 b817 	b.w	1fb28 <_kill_r>
   1fafa:	2b01      	cmp	r3, #1
   1fafc:	d00a      	beq.n	1fb14 <_raise_r+0x4c>
   1fafe:	1c59      	adds	r1, r3, #1
   1fb00:	d103      	bne.n	1fb0a <_raise_r+0x42>
   1fb02:	2316      	movs	r3, #22
   1fb04:	6003      	str	r3, [r0, #0]
   1fb06:	2001      	movs	r0, #1
   1fb08:	bd38      	pop	{r3, r4, r5, pc}
   1fb0a:	2500      	movs	r5, #0
   1fb0c:	f842 5024 	str.w	r5, [r2, r4, lsl #2]
   1fb10:	4620      	mov	r0, r4
   1fb12:	4798      	blx	r3
   1fb14:	2000      	movs	r0, #0
   1fb16:	bd38      	pop	{r3, r4, r5, pc}

0001fb18 <raise>:
raise():
   1fb18:	4b02      	ldr	r3, [pc, #8]	; (1fb24 <raise+0xc>)
   1fb1a:	4601      	mov	r1, r0
   1fb1c:	6818      	ldr	r0, [r3, #0]
   1fb1e:	f7ff bfd3 	b.w	1fac8 <_raise_r>
   1fb22:	bf00      	nop
   1fb24:	2007c16c 	.word	0x2007c16c

0001fb28 <_kill_r>:
_kill_r():
   1fb28:	b538      	push	{r3, r4, r5, lr}
   1fb2a:	4c07      	ldr	r4, [pc, #28]	; (1fb48 <_kill_r+0x20>)
   1fb2c:	2300      	movs	r3, #0
   1fb2e:	4605      	mov	r5, r0
   1fb30:	4608      	mov	r0, r1
   1fb32:	4611      	mov	r1, r2
   1fb34:	6023      	str	r3, [r4, #0]
   1fb36:	f7f0 fc07 	bl	10348 <_kill>
   1fb3a:	1c43      	adds	r3, r0, #1
   1fb3c:	d102      	bne.n	1fb44 <_kill_r+0x1c>
   1fb3e:	6823      	ldr	r3, [r4, #0]
   1fb40:	b103      	cbz	r3, 1fb44 <_kill_r+0x1c>
   1fb42:	602b      	str	r3, [r5, #0]
   1fb44:	bd38      	pop	{r3, r4, r5, pc}
   1fb46:	bf00      	nop
   1fb48:	2007cad4 	.word	0x2007cad4

0001fb4c <_getpid_r>:
_getpid_r():
   1fb4c:	f7f0 bc0c 	b.w	10368 <_getpid>

0001fb50 <siprintf>:
sprintf():
   1fb50:	b40e      	push	{r1, r2, r3}
   1fb52:	b500      	push	{lr}
   1fb54:	f44f 7102 	mov.w	r1, #520	; 0x208
   1fb58:	b09c      	sub	sp, #112	; 0x70
   1fb5a:	f8ad 1014 	strh.w	r1, [sp, #20]
   1fb5e:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
   1fb62:	9104      	str	r1, [sp, #16]
   1fb64:	9107      	str	r1, [sp, #28]
   1fb66:	f64f 71ff 	movw	r1, #65535	; 0xffff
   1fb6a:	ab1d      	add	r3, sp, #116	; 0x74
   1fb6c:	f8ad 1016 	strh.w	r1, [sp, #22]
   1fb70:	4908      	ldr	r1, [pc, #32]	; (1fb94 <siprintf+0x44>)
   1fb72:	f853 2b04 	ldr.w	r2, [r3], #4
   1fb76:	9002      	str	r0, [sp, #8]
   1fb78:	9006      	str	r0, [sp, #24]
   1fb7a:	6808      	ldr	r0, [r1, #0]
   1fb7c:	a902      	add	r1, sp, #8
   1fb7e:	9301      	str	r3, [sp, #4]
   1fb80:	f001 f884 	bl	20c8c <_svfiprintf_r>
   1fb84:	9b02      	ldr	r3, [sp, #8]
   1fb86:	2200      	movs	r2, #0
   1fb88:	701a      	strb	r2, [r3, #0]
   1fb8a:	b01c      	add	sp, #112	; 0x70
   1fb8c:	f85d eb04 	ldr.w	lr, [sp], #4
   1fb90:	b003      	add	sp, #12
   1fb92:	4770      	bx	lr
   1fb94:	2007c16c 	.word	0x2007c16c

0001fb98 <__sread>:
__sread():
   1fb98:	b510      	push	{r4, lr}
   1fb9a:	460c      	mov	r4, r1
   1fb9c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   1fba0:	f004 fe74 	bl	2488c <_read_r>
   1fba4:	2800      	cmp	r0, #0
   1fba6:	db03      	blt.n	1fbb0 <__sread+0x18>
   1fba8:	6d63      	ldr	r3, [r4, #84]	; 0x54
   1fbaa:	4403      	add	r3, r0
   1fbac:	6563      	str	r3, [r4, #84]	; 0x54
   1fbae:	bd10      	pop	{r4, pc}
   1fbb0:	89a3      	ldrh	r3, [r4, #12]
   1fbb2:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
   1fbb6:	81a3      	strh	r3, [r4, #12]
   1fbb8:	bd10      	pop	{r4, pc}

0001fbba <__seofread>:
__seofread():
   1fbba:	2000      	movs	r0, #0
   1fbbc:	4770      	bx	lr

0001fbbe <__swrite>:
__swrite():
   1fbbe:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1fbc2:	461d      	mov	r5, r3
   1fbc4:	898b      	ldrh	r3, [r1, #12]
   1fbc6:	4607      	mov	r7, r0
   1fbc8:	05db      	lsls	r3, r3, #23
   1fbca:	460c      	mov	r4, r1
   1fbcc:	4616      	mov	r6, r2
   1fbce:	d505      	bpl.n	1fbdc <__swrite+0x1e>
   1fbd0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   1fbd4:	2200      	movs	r2, #0
   1fbd6:	2302      	movs	r3, #2
   1fbd8:	f004 f9c8 	bl	23f6c <_lseek_r>
   1fbdc:	89a3      	ldrh	r3, [r4, #12]
   1fbde:	4638      	mov	r0, r7
   1fbe0:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
   1fbe4:	81a3      	strh	r3, [r4, #12]
   1fbe6:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   1fbea:	4632      	mov	r2, r6
   1fbec:	462b      	mov	r3, r5
   1fbee:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   1fbf2:	f002 be93 	b.w	2291c <_write_r>

0001fbf6 <__sseek>:
__sseek():
   1fbf6:	b510      	push	{r4, lr}
   1fbf8:	460c      	mov	r4, r1
   1fbfa:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   1fbfe:	f004 f9b5 	bl	23f6c <_lseek_r>
   1fc02:	1c43      	adds	r3, r0, #1
   1fc04:	89a3      	ldrh	r3, [r4, #12]
   1fc06:	d103      	bne.n	1fc10 <__sseek+0x1a>
   1fc08:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
   1fc0c:	81a3      	strh	r3, [r4, #12]
   1fc0e:	bd10      	pop	{r4, pc}
   1fc10:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
   1fc14:	81a3      	strh	r3, [r4, #12]
   1fc16:	6560      	str	r0, [r4, #84]	; 0x54
   1fc18:	bd10      	pop	{r4, pc}

0001fc1a <__sclose>:
__sclose():
   1fc1a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   1fc1e:	f002 bf39 	b.w	22a94 <_close_r>
	...

0001fc24 <strcasecmp>:
strcasecmp():
   1fc24:	4b0d      	ldr	r3, [pc, #52]	; (1fc5c <strcasecmp+0x38>)
   1fc26:	b570      	push	{r4, r5, r6, lr}
   1fc28:	681d      	ldr	r5, [r3, #0]
   1fc2a:	2200      	movs	r2, #0
   1fc2c:	5c84      	ldrb	r4, [r0, r2]
   1fc2e:	192b      	adds	r3, r5, r4
   1fc30:	785b      	ldrb	r3, [r3, #1]
   1fc32:	f003 0303 	and.w	r3, r3, #3
   1fc36:	2b01      	cmp	r3, #1
   1fc38:	5c8b      	ldrb	r3, [r1, r2]
   1fc3a:	bf08      	it	eq
   1fc3c:	3420      	addeq	r4, #32
   1fc3e:	18ee      	adds	r6, r5, r3
   1fc40:	7876      	ldrb	r6, [r6, #1]
   1fc42:	f006 0603 	and.w	r6, r6, #3
   1fc46:	2e01      	cmp	r6, #1
   1fc48:	bf08      	it	eq
   1fc4a:	3320      	addeq	r3, #32
   1fc4c:	1ae4      	subs	r4, r4, r3
   1fc4e:	d102      	bne.n	1fc56 <strcasecmp+0x32>
   1fc50:	3201      	adds	r2, #1
   1fc52:	2b00      	cmp	r3, #0
   1fc54:	d1ea      	bne.n	1fc2c <strcasecmp+0x8>
   1fc56:	4620      	mov	r0, r4
   1fc58:	bd70      	pop	{r4, r5, r6, pc}
   1fc5a:	bf00      	nop
   1fc5c:	2007c108 	.word	0x2007c108

0001fc60 <strcat>:
strcat():
   1fc60:	b510      	push	{r4, lr}
   1fc62:	4604      	mov	r4, r0
   1fc64:	4622      	mov	r2, r4
   1fc66:	7813      	ldrb	r3, [r2, #0]
   1fc68:	3401      	adds	r4, #1
   1fc6a:	2b00      	cmp	r3, #0
   1fc6c:	d1fa      	bne.n	1fc64 <strcat+0x4>
   1fc6e:	5ccc      	ldrb	r4, [r1, r3]
   1fc70:	54d4      	strb	r4, [r2, r3]
   1fc72:	3301      	adds	r3, #1
   1fc74:	2c00      	cmp	r4, #0
   1fc76:	d1fa      	bne.n	1fc6e <strcat+0xe>
   1fc78:	bd10      	pop	{r4, pc}

0001fc7a <strchr>:
strchr():
   1fc7a:	b2c9      	uxtb	r1, r1
   1fc7c:	4602      	mov	r2, r0
   1fc7e:	f810 3b01 	ldrb.w	r3, [r0], #1
   1fc82:	b11b      	cbz	r3, 1fc8c <strchr+0x12>
   1fc84:	428b      	cmp	r3, r1
   1fc86:	d1f9      	bne.n	1fc7c <strchr+0x2>
   1fc88:	4610      	mov	r0, r2
   1fc8a:	4770      	bx	lr
   1fc8c:	2900      	cmp	r1, #0
   1fc8e:	d0fb      	beq.n	1fc88 <strchr+0xe>
   1fc90:	4618      	mov	r0, r3
   1fc92:	4770      	bx	lr

0001fc94 <strcmp>:
$t():
   1fc94:	f810 2b01 	ldrb.w	r2, [r0], #1
   1fc98:	f811 3b01 	ldrb.w	r3, [r1], #1
   1fc9c:	2a01      	cmp	r2, #1
   1fc9e:	bf28      	it	cs
   1fca0:	429a      	cmpcs	r2, r3
   1fca2:	d0f7      	beq.n	1fc94 <strcmp>
   1fca4:	1ad0      	subs	r0, r2, r3
   1fca6:	4770      	bx	lr

0001fca8 <strcpy>:
strcpy():
   1fca8:	4603      	mov	r3, r0
   1fcaa:	f811 2b01 	ldrb.w	r2, [r1], #1
   1fcae:	f803 2b01 	strb.w	r2, [r3], #1
   1fcb2:	2a00      	cmp	r2, #0
   1fcb4:	d1f9      	bne.n	1fcaa <strcpy+0x2>
   1fcb6:	4770      	bx	lr

0001fcb8 <strlen>:
strlen():
   1fcb8:	4603      	mov	r3, r0
   1fcba:	f813 2b01 	ldrb.w	r2, [r3], #1
   1fcbe:	2a00      	cmp	r2, #0
   1fcc0:	d1fb      	bne.n	1fcba <strlen+0x2>
   1fcc2:	1a18      	subs	r0, r3, r0
   1fcc4:	3801      	subs	r0, #1
   1fcc6:	4770      	bx	lr

0001fcc8 <strncasecmp>:
strncasecmp():
   1fcc8:	4b0f      	ldr	r3, [pc, #60]	; (1fd08 <strncasecmp+0x40>)
   1fcca:	b5f0      	push	{r4, r5, r6, r7, lr}
   1fccc:	681e      	ldr	r6, [r3, #0]
   1fcce:	2300      	movs	r3, #0
   1fcd0:	4293      	cmp	r3, r2
   1fcd2:	d015      	beq.n	1fd00 <strncasecmp+0x38>
   1fcd4:	5cc5      	ldrb	r5, [r0, r3]
   1fcd6:	1974      	adds	r4, r6, r5
   1fcd8:	7864      	ldrb	r4, [r4, #1]
   1fcda:	f004 0403 	and.w	r4, r4, #3
   1fcde:	2c01      	cmp	r4, #1
   1fce0:	5ccc      	ldrb	r4, [r1, r3]
   1fce2:	bf08      	it	eq
   1fce4:	3520      	addeq	r5, #32
   1fce6:	1937      	adds	r7, r6, r4
   1fce8:	787f      	ldrb	r7, [r7, #1]
   1fcea:	f007 0703 	and.w	r7, r7, #3
   1fcee:	2f01      	cmp	r7, #1
   1fcf0:	bf08      	it	eq
   1fcf2:	3420      	addeq	r4, #32
   1fcf4:	1b2d      	subs	r5, r5, r4
   1fcf6:	d104      	bne.n	1fd02 <strncasecmp+0x3a>
   1fcf8:	3301      	adds	r3, #1
   1fcfa:	2c00      	cmp	r4, #0
   1fcfc:	d1e8      	bne.n	1fcd0 <strncasecmp+0x8>
   1fcfe:	e000      	b.n	1fd02 <strncasecmp+0x3a>
   1fd00:	2500      	movs	r5, #0
   1fd02:	4628      	mov	r0, r5
   1fd04:	bdf0      	pop	{r4, r5, r6, r7, pc}
   1fd06:	bf00      	nop
   1fd08:	2007c108 	.word	0x2007c108

0001fd0c <strncmp>:
strncmp():
   1fd0c:	b570      	push	{r4, r5, r6, lr}
   1fd0e:	b18a      	cbz	r2, 1fd34 <strncmp+0x28>
   1fd10:	460b      	mov	r3, r1
   1fd12:	4605      	mov	r5, r0
   1fd14:	781c      	ldrb	r4, [r3, #0]
   1fd16:	f810 6b01 	ldrb.w	r6, [r0], #1
   1fd1a:	3101      	adds	r1, #1
   1fd1c:	42b4      	cmp	r4, r6
   1fd1e:	d101      	bne.n	1fd24 <strncmp+0x18>
   1fd20:	2a01      	cmp	r2, #1
   1fd22:	d103      	bne.n	1fd2c <strncmp+0x20>
   1fd24:	7828      	ldrb	r0, [r5, #0]
   1fd26:	781b      	ldrb	r3, [r3, #0]
   1fd28:	1ac0      	subs	r0, r0, r3
   1fd2a:	bd70      	pop	{r4, r5, r6, pc}
   1fd2c:	3a01      	subs	r2, #1
   1fd2e:	2c00      	cmp	r4, #0
   1fd30:	d1ee      	bne.n	1fd10 <strncmp+0x4>
   1fd32:	e7f7      	b.n	1fd24 <strncmp+0x18>
   1fd34:	4610      	mov	r0, r2
   1fd36:	bd70      	pop	{r4, r5, r6, pc}

0001fd38 <strncpy>:
strncpy():
   1fd38:	b510      	push	{r4, lr}
   1fd3a:	4603      	mov	r3, r0
   1fd3c:	b132      	cbz	r2, 1fd4c <strncpy+0x14>
   1fd3e:	f811 4b01 	ldrb.w	r4, [r1], #1
   1fd42:	3a01      	subs	r2, #1
   1fd44:	f803 4b01 	strb.w	r4, [r3], #1
   1fd48:	2c00      	cmp	r4, #0
   1fd4a:	d1f7      	bne.n	1fd3c <strncpy+0x4>
   1fd4c:	441a      	add	r2, r3
   1fd4e:	4293      	cmp	r3, r2
   1fd50:	d003      	beq.n	1fd5a <strncpy+0x22>
   1fd52:	2100      	movs	r1, #0
   1fd54:	f803 1b01 	strb.w	r1, [r3], #1
   1fd58:	e7f9      	b.n	1fd4e <strncpy+0x16>
   1fd5a:	bd10      	pop	{r4, pc}

0001fd5c <strrchr>:
strrchr():
   1fd5c:	b538      	push	{r3, r4, r5, lr}
   1fd5e:	4602      	mov	r2, r0
   1fd60:	460d      	mov	r5, r1
   1fd62:	b141      	cbz	r1, 1fd76 <strrchr+0x1a>
   1fd64:	2400      	movs	r4, #0
   1fd66:	4610      	mov	r0, r2
   1fd68:	4629      	mov	r1, r5
   1fd6a:	f7ff ff86 	bl	1fc7a <strchr>
   1fd6e:	b130      	cbz	r0, 1fd7e <strrchr+0x22>
   1fd70:	1c42      	adds	r2, r0, #1
   1fd72:	4604      	mov	r4, r0
   1fd74:	e7f7      	b.n	1fd66 <strrchr+0xa>
   1fd76:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   1fd7a:	f7ff bf7e 	b.w	1fc7a <strchr>
   1fd7e:	4620      	mov	r0, r4
   1fd80:	bd38      	pop	{r3, r4, r5, pc}

0001fd82 <strstr>:
strstr():
   1fd82:	b530      	push	{r4, r5, lr}
   1fd84:	7803      	ldrb	r3, [r0, #0]
   1fd86:	b10b      	cbz	r3, 1fd8c <strstr+0xa>
   1fd88:	4604      	mov	r4, r0
   1fd8a:	e004      	b.n	1fd96 <strstr+0x14>
   1fd8c:	780b      	ldrb	r3, [r1, #0]
   1fd8e:	2b00      	cmp	r3, #0
   1fd90:	bf18      	it	ne
   1fd92:	2000      	movne	r0, #0
   1fd94:	bd30      	pop	{r4, r5, pc}
   1fd96:	4622      	mov	r2, r4
   1fd98:	7810      	ldrb	r0, [r2, #0]
   1fd9a:	3401      	adds	r4, #1
   1fd9c:	b138      	cbz	r0, 1fdae <strstr+0x2c>
   1fd9e:	2300      	movs	r3, #0
   1fda0:	5cc8      	ldrb	r0, [r1, r3]
   1fda2:	b128      	cbz	r0, 1fdb0 <strstr+0x2e>
   1fda4:	5cd5      	ldrb	r5, [r2, r3]
   1fda6:	4285      	cmp	r5, r0
   1fda8:	d1f5      	bne.n	1fd96 <strstr+0x14>
   1fdaa:	3301      	adds	r3, #1
   1fdac:	e7f8      	b.n	1fda0 <strstr+0x1e>
   1fdae:	bd30      	pop	{r4, r5, pc}
   1fdb0:	4610      	mov	r0, r2
   1fdb2:	bd30      	pop	{r4, r5, pc}

0001fdb4 <match>:
match():
   1fdb4:	b530      	push	{r4, r5, lr}
   1fdb6:	6802      	ldr	r2, [r0, #0]
   1fdb8:	f811 5b01 	ldrb.w	r5, [r1], #1
   1fdbc:	1c54      	adds	r4, r2, #1
   1fdbe:	b155      	cbz	r5, 1fdd6 <match+0x22>
   1fdc0:	7853      	ldrb	r3, [r2, #1]
   1fdc2:	4622      	mov	r2, r4
   1fdc4:	f1a3 0441 	sub.w	r4, r3, #65	; 0x41
   1fdc8:	2c19      	cmp	r4, #25
   1fdca:	bf98      	it	ls
   1fdcc:	3320      	addls	r3, #32
   1fdce:	42ab      	cmp	r3, r5
   1fdd0:	d0f2      	beq.n	1fdb8 <match+0x4>
   1fdd2:	2000      	movs	r0, #0
   1fdd4:	bd30      	pop	{r4, r5, pc}
   1fdd6:	6004      	str	r4, [r0, #0]
   1fdd8:	2001      	movs	r0, #1
   1fdda:	bd30      	pop	{r4, r5, pc}

0001fddc <sulp>:
sulp():
   1fddc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1fde0:	460d      	mov	r5, r1
   1fde2:	4690      	mov	r8, r2
   1fde4:	f004 fbf4 	bl	245d0 <__ulp>
   1fde8:	4606      	mov	r6, r0
   1fdea:	460f      	mov	r7, r1
   1fdec:	f1b8 0f00 	cmp.w	r8, #0
   1fdf0:	d00f      	beq.n	1fe12 <sulp+0x36>
   1fdf2:	f3c5 530a 	ubfx	r3, r5, #20, #11
   1fdf6:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
   1fdfa:	2b00      	cmp	r3, #0
   1fdfc:	dd09      	ble.n	1fe12 <sulp+0x36>
   1fdfe:	051c      	lsls	r4, r3, #20
   1fe00:	f104 537f 	add.w	r3, r4, #1069547520	; 0x3fc00000
   1fe04:	f503 1340 	add.w	r3, r3, #3145728	; 0x300000
   1fe08:	2200      	movs	r2, #0
   1fe0a:	f7fd fd15 	bl	1d838 <__aeabi_dmul>
   1fe0e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1fe12:	4630      	mov	r0, r6
   1fe14:	4639      	mov	r1, r7
   1fe16:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1fe1a:	0000      	movs	r0, r0
   1fe1c:	0000      	movs	r0, r0
	...

0001fe20 <_strtod_r>:
_strtod_r():
   1fe20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fe24:	2300      	movs	r3, #0
   1fe26:	b09f      	sub	sp, #124	; 0x7c
   1fe28:	4681      	mov	r9, r0
   1fe2a:	9104      	str	r1, [sp, #16]
   1fe2c:	9215      	str	r2, [sp, #84]	; 0x54
   1fe2e:	931a      	str	r3, [sp, #104]	; 0x68
   1fe30:	f04f 0a00 	mov.w	sl, #0
   1fe34:	f04f 0b00 	mov.w	fp, #0
   1fe38:	9119      	str	r1, [sp, #100]	; 0x64
   1fe3a:	9a19      	ldr	r2, [sp, #100]	; 0x64
   1fe3c:	7813      	ldrb	r3, [r2, #0]
   1fe3e:	2b0d      	cmp	r3, #13
   1fe40:	d805      	bhi.n	1fe4e <_strtod_r+0x2e>
   1fe42:	2b09      	cmp	r3, #9
   1fe44:	d214      	bcs.n	1fe70 <_strtod_r+0x50>
   1fe46:	2b00      	cmp	r3, #0
   1fe48:	f000 81b1 	beq.w	201ae <_strtod_r+0x38e>
   1fe4c:	e013      	b.n	1fe76 <_strtod_r+0x56>
   1fe4e:	2b2b      	cmp	r3, #43	; 0x2b
   1fe50:	d007      	beq.n	1fe62 <_strtod_r+0x42>
   1fe52:	2b2d      	cmp	r3, #45	; 0x2d
   1fe54:	d002      	beq.n	1fe5c <_strtod_r+0x3c>
   1fe56:	2b20      	cmp	r3, #32
   1fe58:	d10d      	bne.n	1fe76 <_strtod_r+0x56>
   1fe5a:	e009      	b.n	1fe70 <_strtod_r+0x50>
   1fe5c:	2601      	movs	r6, #1
   1fe5e:	9609      	str	r6, [sp, #36]	; 0x24
   1fe60:	e001      	b.n	1fe66 <_strtod_r+0x46>
   1fe62:	2700      	movs	r7, #0
   1fe64:	9709      	str	r7, [sp, #36]	; 0x24
   1fe66:	1c53      	adds	r3, r2, #1
   1fe68:	9319      	str	r3, [sp, #100]	; 0x64
   1fe6a:	7853      	ldrb	r3, [r2, #1]
   1fe6c:	b92b      	cbnz	r3, 1fe7a <_strtod_r+0x5a>
   1fe6e:	e19e      	b.n	201ae <_strtod_r+0x38e>
   1fe70:	3201      	adds	r2, #1
   1fe72:	9219      	str	r2, [sp, #100]	; 0x64
   1fe74:	e7e1      	b.n	1fe3a <_strtod_r+0x1a>
   1fe76:	2600      	movs	r6, #0
   1fe78:	9609      	str	r6, [sp, #36]	; 0x24
   1fe7a:	9c19      	ldr	r4, [sp, #100]	; 0x64
   1fe7c:	7823      	ldrb	r3, [r4, #0]
   1fe7e:	2b30      	cmp	r3, #48	; 0x30
   1fe80:	d15a      	bne.n	1ff38 <_strtod_r+0x118>
   1fe82:	7863      	ldrb	r3, [r4, #1]
   1fe84:	2b58      	cmp	r3, #88	; 0x58
   1fe86:	d001      	beq.n	1fe8c <_strtod_r+0x6c>
   1fe88:	2b78      	cmp	r3, #120	; 0x78
   1fe8a:	d149      	bne.n	1ff20 <_strtod_r+0x100>
   1fe8c:	9f09      	ldr	r7, [sp, #36]	; 0x24
   1fe8e:	ab1a      	add	r3, sp, #104	; 0x68
   1fe90:	9300      	str	r3, [sp, #0]
   1fe92:	9701      	str	r7, [sp, #4]
   1fe94:	4648      	mov	r0, r9
   1fe96:	a919      	add	r1, sp, #100	; 0x64
   1fe98:	4a9c      	ldr	r2, [pc, #624]	; (2010c <_strtod_r+0x2ec>)
   1fe9a:	ab1b      	add	r3, sp, #108	; 0x6c
   1fe9c:	f003 fd7a 	bl	23994 <__gethex>
   1fea0:	f010 0607 	ands.w	r6, r0, #7
   1fea4:	4605      	mov	r5, r0
   1fea6:	f000 85ad 	beq.w	20a04 <_strtod_r+0xbe4>
   1feaa:	2e06      	cmp	r6, #6
   1feac:	d102      	bne.n	1feb4 <_strtod_r+0x94>
   1feae:	3401      	adds	r4, #1
   1feb0:	9419      	str	r4, [sp, #100]	; 0x64
   1feb2:	e17e      	b.n	201b2 <_strtod_r+0x392>
   1feb4:	9a1a      	ldr	r2, [sp, #104]	; 0x68
   1feb6:	b13a      	cbz	r2, 1fec8 <_strtod_r+0xa8>
   1feb8:	a81c      	add	r0, sp, #112	; 0x70
   1feba:	2135      	movs	r1, #53	; 0x35
   1febc:	f004 fc74 	bl	247a8 <__copybits>
   1fec0:	4648      	mov	r0, r9
   1fec2:	991a      	ldr	r1, [sp, #104]	; 0x68
   1fec4:	f004 f8e5 	bl	24092 <_Bfree>
   1fec8:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
   1feca:	2e06      	cmp	r6, #6
   1fecc:	d821      	bhi.n	1ff12 <_strtod_r+0xf2>
   1fece:	e8df f006 	tbb	[pc, r6]
   1fed2:	0d04      	.short	0x0d04
   1fed4:	0d1c1708 	.word	0x0d1c1708
   1fed8:	04          	.byte	0x04
   1fed9:	00          	.byte	0x00
   1feda:	f04f 0b00 	mov.w	fp, #0
   1fede:	46da      	mov	sl, fp
   1fee0:	e017      	b.n	1ff12 <_strtod_r+0xf2>
   1fee2:	f8dd a070 	ldr.w	sl, [sp, #112]	; 0x70
   1fee6:	f8dd b074 	ldr.w	fp, [sp, #116]	; 0x74
   1feea:	e012      	b.n	1ff12 <_strtod_r+0xf2>
   1feec:	9b1d      	ldr	r3, [sp, #116]	; 0x74
   1feee:	f202 4233 	addw	r2, r2, #1075	; 0x433
   1fef2:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
   1fef6:	f8dd a070 	ldr.w	sl, [sp, #112]	; 0x70
   1fefa:	ea43 5b02 	orr.w	fp, r3, r2, lsl #20
   1fefe:	e008      	b.n	1ff12 <_strtod_r+0xf2>
   1ff00:	f8df b20c 	ldr.w	fp, [pc, #524]	; 20110 <_strtod_r+0x2f0>
   1ff04:	f04f 0a00 	mov.w	sl, #0
   1ff08:	e003      	b.n	1ff12 <_strtod_r+0xf2>
   1ff0a:	f06f 4b00 	mvn.w	fp, #2147483648	; 0x80000000
   1ff0e:	f04f 3aff 	mov.w	sl, #4294967295
   1ff12:	072b      	lsls	r3, r5, #28
   1ff14:	f140 8576 	bpl.w	20a04 <_strtod_r+0xbe4>
   1ff18:	f04b 4b00 	orr.w	fp, fp, #2147483648	; 0x80000000
   1ff1c:	f000 bd72 	b.w	20a04 <_strtod_r+0xbe4>
   1ff20:	9b19      	ldr	r3, [sp, #100]	; 0x64
   1ff22:	1c5a      	adds	r2, r3, #1
   1ff24:	9219      	str	r2, [sp, #100]	; 0x64
   1ff26:	785b      	ldrb	r3, [r3, #1]
   1ff28:	2b30      	cmp	r3, #48	; 0x30
   1ff2a:	d0f9      	beq.n	1ff20 <_strtod_r+0x100>
   1ff2c:	2b00      	cmp	r3, #0
   1ff2e:	f000 8569 	beq.w	20a04 <_strtod_r+0xbe4>
   1ff32:	2301      	movs	r3, #1
   1ff34:	9305      	str	r3, [sp, #20]
   1ff36:	e001      	b.n	1ff3c <_strtod_r+0x11c>
   1ff38:	2600      	movs	r6, #0
   1ff3a:	9605      	str	r6, [sp, #20]
   1ff3c:	9f19      	ldr	r7, [sp, #100]	; 0x64
   1ff3e:	f04f 0800 	mov.w	r8, #0
   1ff42:	9707      	str	r7, [sp, #28]
   1ff44:	f8cd 800c 	str.w	r8, [sp, #12]
   1ff48:	4644      	mov	r4, r8
   1ff4a:	9e19      	ldr	r6, [sp, #100]	; 0x64
   1ff4c:	7835      	ldrb	r5, [r6, #0]
   1ff4e:	f1a5 0330 	sub.w	r3, r5, #48	; 0x30
   1ff52:	b2da      	uxtb	r2, r3
   1ff54:	2a09      	cmp	r2, #9
   1ff56:	d810      	bhi.n	1ff7a <_strtod_r+0x15a>
   1ff58:	2c08      	cmp	r4, #8
   1ff5a:	bfd8      	it	le
   1ff5c:	9f03      	ldrle	r7, [sp, #12]
   1ff5e:	f04f 020a 	mov.w	r2, #10
   1ff62:	bfd8      	it	le
   1ff64:	fb02 3707 	mlale	r7, r2, r7, r3
   1ff68:	f106 0601 	add.w	r6, r6, #1
   1ff6c:	bfd4      	ite	le
   1ff6e:	9703      	strle	r7, [sp, #12]
   1ff70:	fb02 3808 	mlagt	r8, r2, r8, r3
   1ff74:	3401      	adds	r4, #1
   1ff76:	9619      	str	r6, [sp, #100]	; 0x64
   1ff78:	e7e7      	b.n	1ff4a <_strtod_r+0x12a>
   1ff7a:	4648      	mov	r0, r9
   1ff7c:	f003 fff2 	bl	23f64 <_localeconv_r>
   1ff80:	6807      	ldr	r7, [r0, #0]
   1ff82:	4648      	mov	r0, r9
   1ff84:	f003 ffee 	bl	23f64 <_localeconv_r>
   1ff88:	6800      	ldr	r0, [r0, #0]
   1ff8a:	f7ff fe95 	bl	1fcb8 <strlen>
   1ff8e:	4639      	mov	r1, r7
   1ff90:	4602      	mov	r2, r0
   1ff92:	4630      	mov	r0, r6
   1ff94:	f7ff feba 	bl	1fd0c <strncmp>
   1ff98:	4606      	mov	r6, r0
   1ff9a:	b128      	cbz	r0, 1ffa8 <_strtod_r+0x188>
   1ff9c:	2300      	movs	r3, #0
   1ff9e:	462a      	mov	r2, r5
   1ffa0:	4619      	mov	r1, r3
   1ffa2:	4625      	mov	r5, r4
   1ffa4:	930a      	str	r3, [sp, #40]	; 0x28
   1ffa6:	e05f      	b.n	20068 <_strtod_r+0x248>
   1ffa8:	4648      	mov	r0, r9
   1ffaa:	9d19      	ldr	r5, [sp, #100]	; 0x64
   1ffac:	f003 ffda 	bl	23f64 <_localeconv_r>
   1ffb0:	6800      	ldr	r0, [r0, #0]
   1ffb2:	f7ff fe81 	bl	1fcb8 <strlen>
   1ffb6:	182b      	adds	r3, r5, r0
   1ffb8:	9319      	str	r3, [sp, #100]	; 0x64
   1ffba:	5c2a      	ldrb	r2, [r5, r0]
   1ffbc:	2c00      	cmp	r4, #0
   1ffbe:	d145      	bne.n	2004c <_strtod_r+0x22c>
   1ffc0:	4623      	mov	r3, r4
   1ffc2:	2a30      	cmp	r2, #48	; 0x30
   1ffc4:	d105      	bne.n	1ffd2 <_strtod_r+0x1b2>
   1ffc6:	9a19      	ldr	r2, [sp, #100]	; 0x64
   1ffc8:	3301      	adds	r3, #1
   1ffca:	1c51      	adds	r1, r2, #1
   1ffcc:	9119      	str	r1, [sp, #100]	; 0x64
   1ffce:	7852      	ldrb	r2, [r2, #1]
   1ffd0:	e7f7      	b.n	1ffc2 <_strtod_r+0x1a2>
   1ffd2:	f1a2 0131 	sub.w	r1, r2, #49	; 0x31
   1ffd6:	2908      	cmp	r1, #8
   1ffd8:	d842      	bhi.n	20060 <_strtod_r+0x240>
   1ffda:	9e19      	ldr	r6, [sp, #100]	; 0x64
   1ffdc:	4619      	mov	r1, r3
   1ffde:	2300      	movs	r3, #0
   1ffe0:	9607      	str	r6, [sp, #28]
   1ffe2:	461d      	mov	r5, r3
   1ffe4:	3a30      	subs	r2, #48	; 0x30
   1ffe6:	f103 0001 	add.w	r0, r3, #1
   1ffea:	d029      	beq.n	20040 <_strtod_r+0x220>
   1ffec:	4401      	add	r1, r0
   1ffee:	1c6e      	adds	r6, r5, #1
   1fff0:	1b77      	subs	r7, r6, r5
   1fff2:	4287      	cmp	r7, r0
   1fff4:	da10      	bge.n	20018 <_strtod_r+0x1f8>
   1fff6:	1e77      	subs	r7, r6, #1
   1fff8:	2f08      	cmp	r7, #8
   1fffa:	dc06      	bgt.n	2000a <_strtod_r+0x1ea>
   1fffc:	9f03      	ldr	r7, [sp, #12]
   1fffe:	f04f 0c0a 	mov.w	ip, #10
   20002:	fb0c f707 	mul.w	r7, ip, r7
   20006:	9703      	str	r7, [sp, #12]
   20008:	e004      	b.n	20014 <_strtod_r+0x1f4>
   2000a:	2e10      	cmp	r6, #16
   2000c:	bfdc      	itt	le
   2000e:	270a      	movle	r7, #10
   20010:	fb07 f808 	mulle.w	r8, r7, r8
   20014:	3601      	adds	r6, #1
   20016:	e7eb      	b.n	1fff0 <_strtod_r+0x1d0>
   20018:	2b00      	cmp	r3, #0
   2001a:	bfac      	ite	ge
   2001c:	18eb      	addge	r3, r5, r3
   2001e:	1c2b      	addlt	r3, r5, #0
   20020:	2b08      	cmp	r3, #8
   20022:	f103 0501 	add.w	r5, r3, #1
   20026:	dc05      	bgt.n	20034 <_strtod_r+0x214>
   20028:	9e03      	ldr	r6, [sp, #12]
   2002a:	230a      	movs	r3, #10
   2002c:	fb03 2606 	mla	r6, r3, r6, r2
   20030:	9603      	str	r6, [sp, #12]
   20032:	e004      	b.n	2003e <_strtod_r+0x21e>
   20034:	2d10      	cmp	r5, #16
   20036:	bfdc      	itt	le
   20038:	230a      	movle	r3, #10
   2003a:	fb03 2808 	mlale	r8, r3, r8, r2
   2003e:	2000      	movs	r0, #0
   20040:	9b19      	ldr	r3, [sp, #100]	; 0x64
   20042:	1c5a      	adds	r2, r3, #1
   20044:	9219      	str	r2, [sp, #100]	; 0x64
   20046:	785a      	ldrb	r2, [r3, #1]
   20048:	4603      	mov	r3, r0
   2004a:	e002      	b.n	20052 <_strtod_r+0x232>
   2004c:	4625      	mov	r5, r4
   2004e:	4633      	mov	r3, r6
   20050:	4631      	mov	r1, r6
   20052:	f1a2 0030 	sub.w	r0, r2, #48	; 0x30
   20056:	2809      	cmp	r0, #9
   20058:	d9c4      	bls.n	1ffe4 <_strtod_r+0x1c4>
   2005a:	2701      	movs	r7, #1
   2005c:	970a      	str	r7, [sp, #40]	; 0x28
   2005e:	e003      	b.n	20068 <_strtod_r+0x248>
   20060:	2500      	movs	r5, #0
   20062:	2001      	movs	r0, #1
   20064:	4629      	mov	r1, r5
   20066:	900a      	str	r0, [sp, #40]	; 0x28
   20068:	f022 0620 	bic.w	r6, r2, #32
   2006c:	2e45      	cmp	r6, #69	; 0x45
   2006e:	d153      	bne.n	20118 <_strtod_r+0x2f8>
   20070:	b925      	cbnz	r5, 2007c <_strtod_r+0x25c>
   20072:	b91b      	cbnz	r3, 2007c <_strtod_r+0x25c>
   20074:	9e05      	ldr	r6, [sp, #20]
   20076:	2e00      	cmp	r6, #0
   20078:	f000 8099 	beq.w	201ae <_strtod_r+0x38e>
   2007c:	9f19      	ldr	r7, [sp, #100]	; 0x64
   2007e:	1c7a      	adds	r2, r7, #1
   20080:	9219      	str	r2, [sp, #100]	; 0x64
   20082:	787a      	ldrb	r2, [r7, #1]
   20084:	9704      	str	r7, [sp, #16]
   20086:	2a2b      	cmp	r2, #43	; 0x2b
   20088:	d004      	beq.n	20094 <_strtod_r+0x274>
   2008a:	2a2d      	cmp	r2, #45	; 0x2d
   2008c:	d005      	beq.n	2009a <_strtod_r+0x27a>
   2008e:	2600      	movs	r6, #0
   20090:	960f      	str	r6, [sp, #60]	; 0x3c
   20092:	e008      	b.n	200a6 <_strtod_r+0x286>
   20094:	2000      	movs	r0, #0
   20096:	900f      	str	r0, [sp, #60]	; 0x3c
   20098:	e001      	b.n	2009e <_strtod_r+0x27e>
   2009a:	2701      	movs	r7, #1
   2009c:	970f      	str	r7, [sp, #60]	; 0x3c
   2009e:	9e04      	ldr	r6, [sp, #16]
   200a0:	1cb2      	adds	r2, r6, #2
   200a2:	9219      	str	r2, [sp, #100]	; 0x64
   200a4:	78b2      	ldrb	r2, [r6, #2]
   200a6:	f1a2 0730 	sub.w	r7, r2, #48	; 0x30
   200aa:	2f09      	cmp	r7, #9
   200ac:	d832      	bhi.n	20114 <_strtod_r+0x2f4>
   200ae:	2a30      	cmp	r2, #48	; 0x30
   200b0:	d104      	bne.n	200bc <_strtod_r+0x29c>
   200b2:	9a19      	ldr	r2, [sp, #100]	; 0x64
   200b4:	1c57      	adds	r7, r2, #1
   200b6:	9719      	str	r7, [sp, #100]	; 0x64
   200b8:	7852      	ldrb	r2, [r2, #1]
   200ba:	e7f8      	b.n	200ae <_strtod_r+0x28e>
   200bc:	f1a2 0731 	sub.w	r7, r2, #49	; 0x31
   200c0:	2f08      	cmp	r7, #8
   200c2:	d829      	bhi.n	20118 <_strtod_r+0x2f8>
   200c4:	9819      	ldr	r0, [sp, #100]	; 0x64
   200c6:	f1a2 0730 	sub.w	r7, r2, #48	; 0x30
   200ca:	9006      	str	r0, [sp, #24]
   200cc:	9a19      	ldr	r2, [sp, #100]	; 0x64
   200ce:	1c56      	adds	r6, r2, #1
   200d0:	9619      	str	r6, [sp, #100]	; 0x64
   200d2:	7852      	ldrb	r2, [r2, #1]
   200d4:	960e      	str	r6, [sp, #56]	; 0x38
   200d6:	f1a2 0630 	sub.w	r6, r2, #48	; 0x30
   200da:	2e09      	cmp	r6, #9
   200dc:	d805      	bhi.n	200ea <_strtod_r+0x2ca>
   200de:	f04f 0c0a 	mov.w	ip, #10
   200e2:	fb0c 2707 	mla	r7, ip, r7, r2
   200e6:	3f30      	subs	r7, #48	; 0x30
   200e8:	e7f0      	b.n	200cc <_strtod_r+0x2ac>
   200ea:	980e      	ldr	r0, [sp, #56]	; 0x38
   200ec:	9e06      	ldr	r6, [sp, #24]
   200ee:	ebc6 0c00 	rsb	ip, r6, r0
   200f2:	f1bc 0f08 	cmp.w	ip, #8
   200f6:	f644 6c1f 	movw	ip, #19999	; 0x4e1f
   200fa:	dc02      	bgt.n	20102 <_strtod_r+0x2e2>
   200fc:	4567      	cmp	r7, ip
   200fe:	bfb8      	it	lt
   20100:	46bc      	movlt	ip, r7
   20102:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
   20104:	b157      	cbz	r7, 2011c <_strtod_r+0x2fc>
   20106:	f1cc 0c00 	rsb	ip, ip, #0
   2010a:	e007      	b.n	2011c <_strtod_r+0x2fc>
   2010c:	00027af0 	.word	0x00027af0
   20110:	7ff00000 	.word	0x7ff00000
   20114:	9e04      	ldr	r6, [sp, #16]
   20116:	9619      	str	r6, [sp, #100]	; 0x64
   20118:	f04f 0c00 	mov.w	ip, #0
   2011c:	2d00      	cmp	r5, #0
   2011e:	d14c      	bne.n	201ba <_strtod_r+0x39a>
   20120:	2b00      	cmp	r3, #0
   20122:	f040 846f 	bne.w	20a04 <_strtod_r+0xbe4>
   20126:	9f05      	ldr	r7, [sp, #20]
   20128:	2f00      	cmp	r7, #0
   2012a:	f040 846b 	bne.w	20a04 <_strtod_r+0xbe4>
   2012e:	980a      	ldr	r0, [sp, #40]	; 0x28
   20130:	2800      	cmp	r0, #0
   20132:	d13c      	bne.n	201ae <_strtod_r+0x38e>
   20134:	2a4e      	cmp	r2, #78	; 0x4e
   20136:	d01b      	beq.n	20170 <_strtod_r+0x350>
   20138:	dc02      	bgt.n	20140 <_strtod_r+0x320>
   2013a:	2a49      	cmp	r2, #73	; 0x49
   2013c:	d005      	beq.n	2014a <_strtod_r+0x32a>
   2013e:	e036      	b.n	201ae <_strtod_r+0x38e>
   20140:	2a69      	cmp	r2, #105	; 0x69
   20142:	d002      	beq.n	2014a <_strtod_r+0x32a>
   20144:	2a6e      	cmp	r2, #110	; 0x6e
   20146:	d013      	beq.n	20170 <_strtod_r+0x350>
   20148:	e031      	b.n	201ae <_strtod_r+0x38e>
   2014a:	a819      	add	r0, sp, #100	; 0x64
   2014c:	49ac      	ldr	r1, [pc, #688]	; (20400 <_strtod_r+0x5e0>)
   2014e:	f7ff fe31 	bl	1fdb4 <match>
   20152:	b360      	cbz	r0, 201ae <_strtod_r+0x38e>
   20154:	9b19      	ldr	r3, [sp, #100]	; 0x64
   20156:	a819      	add	r0, sp, #100	; 0x64
   20158:	3b01      	subs	r3, #1
   2015a:	49aa      	ldr	r1, [pc, #680]	; (20404 <_strtod_r+0x5e4>)
   2015c:	9319      	str	r3, [sp, #100]	; 0x64
   2015e:	f7ff fe29 	bl	1fdb4 <match>
   20162:	b910      	cbnz	r0, 2016a <_strtod_r+0x34a>
   20164:	9b19      	ldr	r3, [sp, #100]	; 0x64
   20166:	3301      	adds	r3, #1
   20168:	9319      	str	r3, [sp, #100]	; 0x64
   2016a:	f8df b2b4 	ldr.w	fp, [pc, #692]	; 20420 <_strtod_r+0x600>
   2016e:	e01a      	b.n	201a6 <_strtod_r+0x386>
   20170:	a819      	add	r0, sp, #100	; 0x64
   20172:	49a5      	ldr	r1, [pc, #660]	; (20408 <_strtod_r+0x5e8>)
   20174:	f7ff fe1e 	bl	1fdb4 <match>
   20178:	b1c8      	cbz	r0, 201ae <_strtod_r+0x38e>
   2017a:	9b19      	ldr	r3, [sp, #100]	; 0x64
   2017c:	781b      	ldrb	r3, [r3, #0]
   2017e:	2b28      	cmp	r3, #40	; 0x28
   20180:	d10f      	bne.n	201a2 <_strtod_r+0x382>
   20182:	a819      	add	r0, sp, #100	; 0x64
   20184:	49a1      	ldr	r1, [pc, #644]	; (2040c <_strtod_r+0x5ec>)
   20186:	aa1c      	add	r2, sp, #112	; 0x70
   20188:	f003 fe46 	bl	23e18 <__hexnan>
   2018c:	2805      	cmp	r0, #5
   2018e:	d108      	bne.n	201a2 <_strtod_r+0x382>
   20190:	9b1d      	ldr	r3, [sp, #116]	; 0x74
   20192:	f8dd a070 	ldr.w	sl, [sp, #112]	; 0x70
   20196:	f043 4bff 	orr.w	fp, r3, #2139095040	; 0x7f800000
   2019a:	f44b 0be0 	orr.w	fp, fp, #7340032	; 0x700000
   2019e:	f000 bc31 	b.w	20a04 <_strtod_r+0xbe4>
   201a2:	f8df b280 	ldr.w	fp, [pc, #640]	; 20424 <_strtod_r+0x604>
   201a6:	f04f 0a00 	mov.w	sl, #0
   201aa:	f000 bc2b 	b.w	20a04 <_strtod_r+0xbe4>
   201ae:	9b04      	ldr	r3, [sp, #16]
   201b0:	9319      	str	r3, [sp, #100]	; 0x64
   201b2:	2600      	movs	r6, #0
   201b4:	9609      	str	r6, [sp, #36]	; 0x24
   201b6:	f000 bc25 	b.w	20a04 <_strtod_r+0xbe4>
   201ba:	ebc1 010c 	rsb	r1, r1, ip
   201be:	9803      	ldr	r0, [sp, #12]
   201c0:	2d10      	cmp	r5, #16
   201c2:	bfb4      	ite	lt
   201c4:	46ac      	movlt	ip, r5
   201c6:	f04f 0c10 	movge.w	ip, #16
   201ca:	f8cd c008 	str.w	ip, [sp, #8]
   201ce:	9106      	str	r1, [sp, #24]
   201d0:	f7fd fabc 	bl	1d74c <__aeabi_ui2d>
   201d4:	f8dd c008 	ldr.w	ip, [sp, #8]
   201d8:	2c00      	cmp	r4, #0
   201da:	bf08      	it	eq
   201dc:	462c      	moveq	r4, r5
   201de:	f1bc 0f09 	cmp.w	ip, #9
   201e2:	4682      	mov	sl, r0
   201e4:	468b      	mov	fp, r1
   201e6:	dd15      	ble.n	20214 <_strtod_r+0x3f4>
   201e8:	4b89      	ldr	r3, [pc, #548]	; (20410 <_strtod_r+0x5f0>)
   201ea:	eb03 03cc 	add.w	r3, r3, ip, lsl #3
   201ee:	e953 2312 	ldrd	r2, r3, [r3, #-72]	; 0x48
   201f2:	f7fd fb21 	bl	1d838 <__aeabi_dmul>
   201f6:	4606      	mov	r6, r0
   201f8:	4640      	mov	r0, r8
   201fa:	460f      	mov	r7, r1
   201fc:	f7fd faa6 	bl	1d74c <__aeabi_ui2d>
   20200:	4602      	mov	r2, r0
   20202:	460b      	mov	r3, r1
   20204:	4630      	mov	r0, r6
   20206:	4639      	mov	r1, r7
   20208:	f7fd f964 	bl	1d4d4 <__adddf3>
   2020c:	f8dd c008 	ldr.w	ip, [sp, #8]
   20210:	4682      	mov	sl, r0
   20212:	468b      	mov	fp, r1
   20214:	2d0f      	cmp	r5, #15
   20216:	dc37      	bgt.n	20288 <_strtod_r+0x468>
   20218:	9f06      	ldr	r7, [sp, #24]
   2021a:	2f00      	cmp	r7, #0
   2021c:	f000 83f2 	beq.w	20a04 <_strtod_r+0xbe4>
   20220:	dd23      	ble.n	2026a <_strtod_r+0x44a>
   20222:	2f16      	cmp	r7, #22
   20224:	dc07      	bgt.n	20236 <_strtod_r+0x416>
   20226:	497a      	ldr	r1, [pc, #488]	; (20410 <_strtod_r+0x5f0>)
   20228:	4652      	mov	r2, sl
   2022a:	eb01 01c7 	add.w	r1, r1, r7, lsl #3
   2022e:	e9d1 0100 	ldrd	r0, r1, [r1]
   20232:	465b      	mov	r3, fp
   20234:	e014      	b.n	20260 <_strtod_r+0x440>
   20236:	9e06      	ldr	r6, [sp, #24]
   20238:	f1c5 0325 	rsb	r3, r5, #37	; 0x25
   2023c:	429e      	cmp	r6, r3
   2023e:	dc23      	bgt.n	20288 <_strtod_r+0x468>
   20240:	4c73      	ldr	r4, [pc, #460]	; (20410 <_strtod_r+0x5f0>)
   20242:	f1c5 050f 	rsb	r5, r5, #15
   20246:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
   2024a:	1b75      	subs	r5, r6, r5
   2024c:	e9d3 0100 	ldrd	r0, r1, [r3]
   20250:	4652      	mov	r2, sl
   20252:	465b      	mov	r3, fp
   20254:	eb04 04c5 	add.w	r4, r4, r5, lsl #3
   20258:	f7fd faee 	bl	1d838 <__aeabi_dmul>
   2025c:	e9d4 2300 	ldrd	r2, r3, [r4]
   20260:	f7fd faea 	bl	1d838 <__aeabi_dmul>
   20264:	4682      	mov	sl, r0
   20266:	468b      	mov	fp, r1
   20268:	e3cc      	b.n	20a04 <_strtod_r+0xbe4>
   2026a:	9f06      	ldr	r7, [sp, #24]
   2026c:	3716      	adds	r7, #22
   2026e:	db0b      	blt.n	20288 <_strtod_r+0x468>
   20270:	f8dd c018 	ldr.w	ip, [sp, #24]
   20274:	4f66      	ldr	r7, [pc, #408]	; (20410 <_strtod_r+0x5f0>)
   20276:	4650      	mov	r0, sl
   20278:	eba7 07cc 	sub.w	r7, r7, ip, lsl #3
   2027c:	4659      	mov	r1, fp
   2027e:	e9d7 2300 	ldrd	r2, r3, [r7]
   20282:	f7fd fc03 	bl	1da8c <__aeabi_ddiv>
   20286:	e7ed      	b.n	20264 <_strtod_r+0x444>
   20288:	9e06      	ldr	r6, [sp, #24]
   2028a:	ebcc 0805 	rsb	r8, ip, r5
   2028e:	44b0      	add	r8, r6
   20290:	f1b8 0f00 	cmp.w	r8, #0
   20294:	dd61      	ble.n	2035a <_strtod_r+0x53a>
   20296:	f018 030f 	ands.w	r3, r8, #15
   2029a:	d00a      	beq.n	202b2 <_strtod_r+0x492>
   2029c:	4a5c      	ldr	r2, [pc, #368]	; (20410 <_strtod_r+0x5f0>)
   2029e:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
   202a2:	e9d3 0100 	ldrd	r0, r1, [r3]
   202a6:	4652      	mov	r2, sl
   202a8:	465b      	mov	r3, fp
   202aa:	f7fd fac5 	bl	1d838 <__aeabi_dmul>
   202ae:	4682      	mov	sl, r0
   202b0:	468b      	mov	fp, r1
   202b2:	f038 080f 	bics.w	r8, r8, #15
   202b6:	f000 80c8 	beq.w	2044a <_strtod_r+0x62a>
   202ba:	f5b8 7f9a 	cmp.w	r8, #308	; 0x134
   202be:	dd13      	ble.n	202e8 <_strtod_r+0x4c8>
   202c0:	f04f 0800 	mov.w	r8, #0
   202c4:	f8cd 800c 	str.w	r8, [sp, #12]
   202c8:	f8cd 801c 	str.w	r8, [sp, #28]
   202cc:	f8cd 8014 	str.w	r8, [sp, #20]
   202d0:	9f07      	ldr	r7, [sp, #28]
   202d2:	2322      	movs	r3, #34	; 0x22
   202d4:	f8c9 3000 	str.w	r3, [r9]
   202d8:	f8df b144 	ldr.w	fp, [pc, #324]	; 20420 <_strtod_r+0x600>
   202dc:	f04f 0a00 	mov.w	sl, #0
   202e0:	2f00      	cmp	r7, #0
   202e2:	f040 837b 	bne.w	209dc <_strtod_r+0xbbc>
   202e6:	e38d      	b.n	20a04 <_strtod_r+0xbe4>
   202e8:	ea4f 1828 	mov.w	r8, r8, asr #4
   202ec:	4650      	mov	r0, sl
   202ee:	4659      	mov	r1, fp
   202f0:	2600      	movs	r6, #0
   202f2:	f1b8 0f01 	cmp.w	r8, #1
   202f6:	dd0d      	ble.n	20314 <_strtod_r+0x4f4>
   202f8:	f018 0f01 	tst.w	r8, #1
   202fc:	d006      	beq.n	2030c <_strtod_r+0x4ec>
   202fe:	4b45      	ldr	r3, [pc, #276]	; (20414 <_strtod_r+0x5f4>)
   20300:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
   20304:	e9d3 2300 	ldrd	r2, r3, [r3]
   20308:	f7fd fa96 	bl	1d838 <__aeabi_dmul>
   2030c:	3601      	adds	r6, #1
   2030e:	ea4f 0868 	mov.w	r8, r8, asr #1
   20312:	e7ee      	b.n	202f2 <_strtod_r+0x4d2>
   20314:	4b3f      	ldr	r3, [pc, #252]	; (20414 <_strtod_r+0x5f4>)
   20316:	4682      	mov	sl, r0
   20318:	f1a1 7b54 	sub.w	fp, r1, #55574528	; 0x3500000
   2031c:	eb03 06c6 	add.w	r6, r3, r6, lsl #3
   20320:	4652      	mov	r2, sl
   20322:	465b      	mov	r3, fp
   20324:	e9d6 0100 	ldrd	r0, r1, [r6]
   20328:	f7fd fa86 	bl	1d838 <__aeabi_dmul>
   2032c:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
   20330:	468b      	mov	fp, r1
   20332:	0d1b      	lsrs	r3, r3, #20
   20334:	4938      	ldr	r1, [pc, #224]	; (20418 <_strtod_r+0x5f8>)
   20336:	051b      	lsls	r3, r3, #20
   20338:	428b      	cmp	r3, r1
   2033a:	4682      	mov	sl, r0
   2033c:	d8c0      	bhi.n	202c0 <_strtod_r+0x4a0>
   2033e:	f5a1 1180 	sub.w	r1, r1, #1048576	; 0x100000
   20342:	428b      	cmp	r3, r1
   20344:	d906      	bls.n	20354 <_strtod_r+0x534>
   20346:	2600      	movs	r6, #0
   20348:	f8df b0dc 	ldr.w	fp, [pc, #220]	; 20428 <_strtod_r+0x608>
   2034c:	f04f 3aff 	mov.w	sl, #4294967295
   20350:	9604      	str	r6, [sp, #16]
   20352:	e07c      	b.n	2044e <_strtod_r+0x62e>
   20354:	f10b 7b54 	add.w	fp, fp, #55574528	; 0x3500000
   20358:	e077      	b.n	2044a <_strtod_r+0x62a>
   2035a:	d076      	beq.n	2044a <_strtod_r+0x62a>
   2035c:	f1c8 0800 	rsb	r8, r8, #0
   20360:	f018 030f 	ands.w	r3, r8, #15
   20364:	d00a      	beq.n	2037c <_strtod_r+0x55c>
   20366:	4a2a      	ldr	r2, [pc, #168]	; (20410 <_strtod_r+0x5f0>)
   20368:	4650      	mov	r0, sl
   2036a:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
   2036e:	4659      	mov	r1, fp
   20370:	e9d3 2300 	ldrd	r2, r3, [r3]
   20374:	f7fd fb8a 	bl	1da8c <__aeabi_ddiv>
   20378:	4682      	mov	sl, r0
   2037a:	468b      	mov	fp, r1
   2037c:	ea5f 1828 	movs.w	r8, r8, asr #4
   20380:	d063      	beq.n	2044a <_strtod_r+0x62a>
   20382:	f1b8 0f1f 	cmp.w	r8, #31
   20386:	dd08      	ble.n	2039a <_strtod_r+0x57a>
   20388:	f04f 0800 	mov.w	r8, #0
   2038c:	f8cd 800c 	str.w	r8, [sp, #12]
   20390:	f8cd 801c 	str.w	r8, [sp, #28]
   20394:	f8cd 8014 	str.w	r8, [sp, #20]
   20398:	e11e      	b.n	205d8 <_strtod_r+0x7b8>
   2039a:	f018 0f10 	tst.w	r8, #16
   2039e:	bf14      	ite	ne
   203a0:	266a      	movne	r6, #106	; 0x6a
   203a2:	2600      	moveq	r6, #0
   203a4:	9604      	str	r6, [sp, #16]
   203a6:	4e1d      	ldr	r6, [pc, #116]	; (2041c <_strtod_r+0x5fc>)
   203a8:	4650      	mov	r0, sl
   203aa:	4659      	mov	r1, fp
   203ac:	f1b8 0f00 	cmp.w	r8, #0
   203b0:	dd0a      	ble.n	203c8 <_strtod_r+0x5a8>
   203b2:	f018 0f01 	tst.w	r8, #1
   203b6:	d003      	beq.n	203c0 <_strtod_r+0x5a0>
   203b8:	e9d6 2300 	ldrd	r2, r3, [r6]
   203bc:	f7fd fa3c 	bl	1d838 <__aeabi_dmul>
   203c0:	ea4f 0868 	mov.w	r8, r8, asr #1
   203c4:	3608      	adds	r6, #8
   203c6:	e7f1      	b.n	203ac <_strtod_r+0x58c>
   203c8:	9f04      	ldr	r7, [sp, #16]
   203ca:	4682      	mov	sl, r0
   203cc:	468b      	mov	fp, r1
   203ce:	b39f      	cbz	r7, 20438 <_strtod_r+0x618>
   203d0:	f3c1 530a 	ubfx	r3, r1, #20, #11
   203d4:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
   203d8:	2b00      	cmp	r3, #0
   203da:	dd2d      	ble.n	20438 <_strtod_r+0x618>
   203dc:	2b1f      	cmp	r3, #31
   203de:	dd25      	ble.n	2042c <_strtod_r+0x60c>
   203e0:	2b34      	cmp	r3, #52	; 0x34
   203e2:	f04f 0a00 	mov.w	sl, #0
   203e6:	dd02      	ble.n	203ee <_strtod_r+0x5ce>
   203e8:	f04f 7b5c 	mov.w	fp, #57671680	; 0x3700000
   203ec:	e024      	b.n	20438 <_strtod_r+0x618>
   203ee:	3b20      	subs	r3, #32
   203f0:	f04f 31ff 	mov.w	r1, #4294967295
   203f4:	fa01 f303 	lsl.w	r3, r1, r3
   203f8:	ea03 0b0b 	and.w	fp, r3, fp
   203fc:	e01c      	b.n	20438 <_strtod_r+0x618>
   203fe:	bf00      	nop
   20400:	00027b2e 	.word	0x00027b2e
   20404:	00027be3 	.word	0x00027be3
   20408:	00027b36 	.word	0x00027b36
   2040c:	00027b04 	.word	0x00027b04
   20410:	00027bf8 	.word	0x00027bf8
   20414:	00027cc0 	.word	0x00027cc0
   20418:	7ca00000 	.word	0x7ca00000
   2041c:	00027ac8 	.word	0x00027ac8
   20420:	7ff00000 	.word	0x7ff00000
   20424:	fff80000 	.word	0xfff80000
   20428:	7fefffff 	.word	0x7fefffff
   2042c:	f04f 32ff 	mov.w	r2, #4294967295
   20430:	fa02 f303 	lsl.w	r3, r2, r3
   20434:	ea03 0a00 	and.w	sl, r3, r0
   20438:	4650      	mov	r0, sl
   2043a:	4659      	mov	r1, fp
   2043c:	2200      	movs	r2, #0
   2043e:	2300      	movs	r3, #0
   20440:	f004 fb88 	bl	24b54 <__aeabi_dcmpeq>
   20444:	2800      	cmp	r0, #0
   20446:	d19f      	bne.n	20388 <_strtod_r+0x568>
   20448:	e001      	b.n	2044e <_strtod_r+0x62e>
   2044a:	2700      	movs	r7, #0
   2044c:	9704      	str	r7, [sp, #16]
   2044e:	9e03      	ldr	r6, [sp, #12]
   20450:	4648      	mov	r0, r9
   20452:	9600      	str	r6, [sp, #0]
   20454:	9907      	ldr	r1, [sp, #28]
   20456:	4622      	mov	r2, r4
   20458:	462b      	mov	r3, r5
   2045a:	f003 fe6b 	bl	24134 <__s2b>
   2045e:	9007      	str	r0, [sp, #28]
   20460:	2800      	cmp	r0, #0
   20462:	f43f af2d 	beq.w	202c0 <_strtod_r+0x4a0>
   20466:	9f06      	ldr	r7, [sp, #24]
   20468:	f04f 0800 	mov.w	r8, #0
   2046c:	427b      	negs	r3, r7
   2046e:	2f00      	cmp	r7, #0
   20470:	bfa8      	it	ge
   20472:	2300      	movge	r3, #0
   20474:	930e      	str	r3, [sp, #56]	; 0x38
   20476:	f8cd 800c 	str.w	r8, [sp, #12]
   2047a:	9e07      	ldr	r6, [sp, #28]
   2047c:	4648      	mov	r0, r9
   2047e:	6871      	ldr	r1, [r6, #4]
   20480:	f003 fdd2 	bl	24028 <_Balloc>
   20484:	9005      	str	r0, [sp, #20]
   20486:	2800      	cmp	r0, #0
   20488:	f43f af22 	beq.w	202d0 <_strtod_r+0x4b0>
   2048c:	6932      	ldr	r2, [r6, #16]
   2048e:	f106 010c 	add.w	r1, r6, #12
   20492:	3202      	adds	r2, #2
   20494:	0092      	lsls	r2, r2, #2
   20496:	300c      	adds	r0, #12
   20498:	f7fe fbbd 	bl	1ec16 <memcpy>
   2049c:	ab1b      	add	r3, sp, #108	; 0x6c
   2049e:	9300      	str	r3, [sp, #0]
   204a0:	ab1c      	add	r3, sp, #112	; 0x70
   204a2:	9301      	str	r3, [sp, #4]
   204a4:	4648      	mov	r0, r9
   204a6:	4652      	mov	r2, sl
   204a8:	465b      	mov	r3, fp
   204aa:	e9cd ab0a 	strd	sl, fp, [sp, #40]	; 0x28
   204ae:	f004 f904 	bl	246ba <__d2b>
   204b2:	901a      	str	r0, [sp, #104]	; 0x68
   204b4:	2800      	cmp	r0, #0
   204b6:	f43f af0b 	beq.w	202d0 <_strtod_r+0x4b0>
   204ba:	4648      	mov	r0, r9
   204bc:	2101      	movs	r1, #1
   204be:	f003 fec8 	bl	24252 <__i2b>
   204c2:	9003      	str	r0, [sp, #12]
   204c4:	2800      	cmp	r0, #0
   204c6:	f43f af03 	beq.w	202d0 <_strtod_r+0x4b0>
   204ca:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
   204cc:	f8dd c018 	ldr.w	ip, [sp, #24]
   204d0:	2b00      	cmp	r3, #0
   204d2:	ea2c 77ec 	bic.w	r7, ip, ip, asr #31
   204d6:	f2c0 808b 	blt.w	205f0 <_strtod_r+0x7d0>
   204da:	9c0e      	ldr	r4, [sp, #56]	; 0x38
   204dc:	463a      	mov	r2, r7
   204de:	441c      	add	r4, r3
   204e0:	9e04      	ldr	r6, [sp, #16]
   204e2:	9d1c      	ldr	r5, [sp, #112]	; 0x70
   204e4:	1b9b      	subs	r3, r3, r6
   204e6:	1959      	adds	r1, r3, r5
   204e8:	f46f 737f 	mvn.w	r3, #1020	; 0x3fc
   204ec:	4299      	cmp	r1, r3
   204ee:	f1c5 0536 	rsb	r5, r5, #54	; 0x36
   204f2:	f280 8087 	bge.w	20604 <_strtod_r+0x7e4>
   204f6:	1a5b      	subs	r3, r3, r1
   204f8:	2b1f      	cmp	r3, #31
   204fa:	ebc3 0505 	rsb	r5, r3, r5
   204fe:	f04f 0001 	mov.w	r0, #1
   20502:	dc78      	bgt.n	205f6 <_strtod_r+0x7d6>
   20504:	4098      	lsls	r0, r3
   20506:	2300      	movs	r3, #0
   20508:	9014      	str	r0, [sp, #80]	; 0x50
   2050a:	930f      	str	r3, [sp, #60]	; 0x3c
   2050c:	9804      	ldr	r0, [sp, #16]
   2050e:	1966      	adds	r6, r4, r5
   20510:	4415      	add	r5, r2
   20512:	42a6      	cmp	r6, r4
   20514:	bfb4      	ite	lt
   20516:	4633      	movlt	r3, r6
   20518:	4623      	movge	r3, r4
   2051a:	4405      	add	r5, r0
   2051c:	42ab      	cmp	r3, r5
   2051e:	bfa8      	it	ge
   20520:	462b      	movge	r3, r5
   20522:	2b00      	cmp	r3, #0
   20524:	dd02      	ble.n	2052c <_strtod_r+0x70c>
   20526:	1af6      	subs	r6, r6, r3
   20528:	1aed      	subs	r5, r5, r3
   2052a:	1ae4      	subs	r4, r4, r3
   2052c:	990e      	ldr	r1, [sp, #56]	; 0x38
   2052e:	2900      	cmp	r1, #0
   20530:	d16f      	bne.n	20612 <_strtod_r+0x7f2>
   20532:	2e00      	cmp	r6, #0
   20534:	f300 8087 	bgt.w	20646 <_strtod_r+0x826>
   20538:	2f00      	cmp	r7, #0
   2053a:	f040 808e 	bne.w	2065a <_strtod_r+0x83a>
   2053e:	2d00      	cmp	r5, #0
   20540:	f300 8095 	bgt.w	2066e <_strtod_r+0x84e>
   20544:	2c00      	cmp	r4, #0
   20546:	f300 809c 	bgt.w	20682 <_strtod_r+0x862>
   2054a:	4648      	mov	r0, r9
   2054c:	991a      	ldr	r1, [sp, #104]	; 0x68
   2054e:	9a05      	ldr	r2, [sp, #20]
   20550:	f003 ffde 	bl	24510 <__mdiff>
   20554:	4680      	mov	r8, r0
   20556:	2800      	cmp	r0, #0
   20558:	f43f aeba 	beq.w	202d0 <_strtod_r+0x4b0>
   2055c:	68c6      	ldr	r6, [r0, #12]
   2055e:	2300      	movs	r3, #0
   20560:	60c3      	str	r3, [r0, #12]
   20562:	9903      	ldr	r1, [sp, #12]
   20564:	9608      	str	r6, [sp, #32]
   20566:	f003 ffb6 	bl	244d6 <__mcmp>
   2056a:	2800      	cmp	r0, #0
   2056c:	f280 8098 	bge.w	206a0 <_strtod_r+0x880>
   20570:	2e00      	cmp	r6, #0
   20572:	f040 8220 	bne.w	209b6 <_strtod_r+0xb96>
   20576:	f1ba 0f00 	cmp.w	sl, #0
   2057a:	f040 821c 	bne.w	209b6 <_strtod_r+0xb96>
   2057e:	f3cb 0313 	ubfx	r3, fp, #0, #20
   20582:	2b00      	cmp	r3, #0
   20584:	f040 8217 	bne.w	209b6 <_strtod_r+0xb96>
   20588:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
   2058c:	0d1b      	lsrs	r3, r3, #20
   2058e:	051b      	lsls	r3, r3, #20
   20590:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
   20594:	f240 820f 	bls.w	209b6 <_strtod_r+0xb96>
   20598:	f8d8 3014 	ldr.w	r3, [r8, #20]
   2059c:	2b00      	cmp	r3, #0
   2059e:	d07a      	beq.n	20696 <_strtod_r+0x876>
   205a0:	4641      	mov	r1, r8
   205a2:	2201      	movs	r2, #1
   205a4:	4648      	mov	r0, r9
   205a6:	f003 ff43 	bl	24430 <__lshift>
   205aa:	9903      	ldr	r1, [sp, #12]
   205ac:	4680      	mov	r8, r0
   205ae:	f003 ff92 	bl	244d6 <__mcmp>
   205b2:	2800      	cmp	r0, #0
   205b4:	f340 81ff 	ble.w	209b6 <_strtod_r+0xb96>
   205b8:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
   205bc:	9f04      	ldr	r7, [sp, #16]
   205be:	0d1b      	lsrs	r3, r3, #20
   205c0:	051b      	lsls	r3, r3, #20
   205c2:	2f00      	cmp	r7, #0
   205c4:	f000 809c 	beq.w	20700 <_strtod_r+0x8e0>
   205c8:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
   205cc:	f200 8098 	bhi.w	20700 <_strtod_r+0x8e0>
   205d0:	f1b3 7f5c 	cmp.w	r3, #57671680	; 0x3700000
   205d4:	f200 81f1 	bhi.w	209ba <_strtod_r+0xb9a>
   205d8:	9e07      	ldr	r6, [sp, #28]
   205da:	2322      	movs	r3, #34	; 0x22
   205dc:	f04f 0a00 	mov.w	sl, #0
   205e0:	f04f 0b00 	mov.w	fp, #0
   205e4:	f8c9 3000 	str.w	r3, [r9]
   205e8:	2e00      	cmp	r6, #0
   205ea:	f040 81f7 	bne.w	209dc <_strtod_r+0xbbc>
   205ee:	e209      	b.n	20a04 <_strtod_r+0xbe4>
   205f0:	1afa      	subs	r2, r7, r3
   205f2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
   205f4:	e774      	b.n	204e0 <_strtod_r+0x6c0>
   205f6:	4e84      	ldr	r6, [pc, #528]	; (20808 <_strtod_r+0x9e8>)
   205f8:	9014      	str	r0, [sp, #80]	; 0x50
   205fa:	1a76      	subs	r6, r6, r1
   205fc:	fa00 f606 	lsl.w	r6, r0, r6
   20600:	960f      	str	r6, [sp, #60]	; 0x3c
   20602:	e783      	b.n	2050c <_strtod_r+0x6ec>
   20604:	2600      	movs	r6, #0
   20606:	f04f 0c01 	mov.w	ip, #1
   2060a:	960f      	str	r6, [sp, #60]	; 0x3c
   2060c:	f8cd c050 	str.w	ip, [sp, #80]	; 0x50
   20610:	e77c      	b.n	2050c <_strtod_r+0x6ec>
   20612:	4648      	mov	r0, r9
   20614:	9903      	ldr	r1, [sp, #12]
   20616:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   20618:	f003 febc 	bl	24394 <__pow5mult>
   2061c:	9003      	str	r0, [sp, #12]
   2061e:	2800      	cmp	r0, #0
   20620:	f43f ae56 	beq.w	202d0 <_strtod_r+0x4b0>
   20624:	4648      	mov	r0, r9
   20626:	9903      	ldr	r1, [sp, #12]
   20628:	9a1a      	ldr	r2, [sp, #104]	; 0x68
   2062a:	f003 fe1b 	bl	24264 <__multiply>
   2062e:	4603      	mov	r3, r0
   20630:	2800      	cmp	r0, #0
   20632:	f43f ae4d 	beq.w	202d0 <_strtod_r+0x4b0>
   20636:	4648      	mov	r0, r9
   20638:	991a      	ldr	r1, [sp, #104]	; 0x68
   2063a:	9302      	str	r3, [sp, #8]
   2063c:	f003 fd29 	bl	24092 <_Bfree>
   20640:	9b02      	ldr	r3, [sp, #8]
   20642:	931a      	str	r3, [sp, #104]	; 0x68
   20644:	e775      	b.n	20532 <_strtod_r+0x712>
   20646:	4648      	mov	r0, r9
   20648:	991a      	ldr	r1, [sp, #104]	; 0x68
   2064a:	4632      	mov	r2, r6
   2064c:	f003 fef0 	bl	24430 <__lshift>
   20650:	901a      	str	r0, [sp, #104]	; 0x68
   20652:	2800      	cmp	r0, #0
   20654:	f47f af70 	bne.w	20538 <_strtod_r+0x718>
   20658:	e63a      	b.n	202d0 <_strtod_r+0x4b0>
   2065a:	4648      	mov	r0, r9
   2065c:	9905      	ldr	r1, [sp, #20]
   2065e:	463a      	mov	r2, r7
   20660:	f003 fe98 	bl	24394 <__pow5mult>
   20664:	9005      	str	r0, [sp, #20]
   20666:	2800      	cmp	r0, #0
   20668:	f47f af69 	bne.w	2053e <_strtod_r+0x71e>
   2066c:	e630      	b.n	202d0 <_strtod_r+0x4b0>
   2066e:	4648      	mov	r0, r9
   20670:	9905      	ldr	r1, [sp, #20]
   20672:	462a      	mov	r2, r5
   20674:	f003 fedc 	bl	24430 <__lshift>
   20678:	9005      	str	r0, [sp, #20]
   2067a:	2800      	cmp	r0, #0
   2067c:	f47f af62 	bne.w	20544 <_strtod_r+0x724>
   20680:	e626      	b.n	202d0 <_strtod_r+0x4b0>
   20682:	4648      	mov	r0, r9
   20684:	9903      	ldr	r1, [sp, #12]
   20686:	4622      	mov	r2, r4
   20688:	f003 fed2 	bl	24430 <__lshift>
   2068c:	9003      	str	r0, [sp, #12]
   2068e:	2800      	cmp	r0, #0
   20690:	f47f af5b 	bne.w	2054a <_strtod_r+0x72a>
   20694:	e61c      	b.n	202d0 <_strtod_r+0x4b0>
   20696:	f8d8 3010 	ldr.w	r3, [r8, #16]
   2069a:	2b01      	cmp	r3, #1
   2069c:	dc80      	bgt.n	205a0 <_strtod_r+0x780>
   2069e:	e18a      	b.n	209b6 <_strtod_r+0xb96>
   206a0:	d163      	bne.n	2076a <_strtod_r+0x94a>
   206a2:	9f08      	ldr	r7, [sp, #32]
   206a4:	f3cb 0313 	ubfx	r3, fp, #0, #20
   206a8:	b32f      	cbz	r7, 206f6 <_strtod_r+0x8d6>
   206aa:	4958      	ldr	r1, [pc, #352]	; (2080c <_strtod_r+0x9ec>)
   206ac:	465a      	mov	r2, fp
   206ae:	428b      	cmp	r3, r1
   206b0:	d12f      	bne.n	20712 <_strtod_r+0x8f2>
   206b2:	9e04      	ldr	r6, [sp, #16]
   206b4:	4651      	mov	r1, sl
   206b6:	b16e      	cbz	r6, 206d4 <_strtod_r+0x8b4>
   206b8:	4b55      	ldr	r3, [pc, #340]	; (20810 <_strtod_r+0x9f0>)
   206ba:	ea0b 0303 	and.w	r3, fp, r3
   206be:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
   206c2:	d807      	bhi.n	206d4 <_strtod_r+0x8b4>
   206c4:	0d1b      	lsrs	r3, r3, #20
   206c6:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
   206ca:	f04f 30ff 	mov.w	r0, #4294967295
   206ce:	fa00 f303 	lsl.w	r3, r0, r3
   206d2:	e001      	b.n	206d8 <_strtod_r+0x8b8>
   206d4:	f04f 33ff 	mov.w	r3, #4294967295
   206d8:	4299      	cmp	r1, r3
   206da:	d11a      	bne.n	20712 <_strtod_r+0x8f2>
   206dc:	4b4d      	ldr	r3, [pc, #308]	; (20814 <_strtod_r+0x9f4>)
   206de:	429a      	cmp	r2, r3
   206e0:	d102      	bne.n	206e8 <_strtod_r+0x8c8>
   206e2:	3101      	adds	r1, #1
   206e4:	f43f adf4 	beq.w	202d0 <_strtod_r+0x4b0>
   206e8:	4b49      	ldr	r3, [pc, #292]	; (20810 <_strtod_r+0x9f0>)
   206ea:	f04f 0a00 	mov.w	sl, #0
   206ee:	4013      	ands	r3, r2
   206f0:	f503 1b80 	add.w	fp, r3, #1048576	; 0x100000
   206f4:	e15f      	b.n	209b6 <_strtod_r+0xb96>
   206f6:	b963      	cbnz	r3, 20712 <_strtod_r+0x8f2>
   206f8:	f1ba 0f00 	cmp.w	sl, #0
   206fc:	d109      	bne.n	20712 <_strtod_r+0x8f2>
   206fe:	e75b      	b.n	205b8 <_strtod_r+0x798>
   20700:	f5a3 1380 	sub.w	r3, r3, #1048576	; 0x100000
   20704:	ea6f 5b13 	mvn.w	fp, r3, lsr #20
   20708:	ea6f 5b0b 	mvn.w	fp, fp, lsl #20
   2070c:	f04f 3aff 	mov.w	sl, #4294967295
   20710:	e151      	b.n	209b6 <_strtod_r+0xb96>
   20712:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   20714:	b113      	cbz	r3, 2071c <_strtod_r+0x8fc>
   20716:	ea13 0f0b 	tst.w	r3, fp
   2071a:	e002      	b.n	20722 <_strtod_r+0x902>
   2071c:	9e14      	ldr	r6, [sp, #80]	; 0x50
   2071e:	ea16 0f0a 	tst.w	r6, sl
   20722:	f000 8148 	beq.w	209b6 <_strtod_r+0xb96>
   20726:	9f08      	ldr	r7, [sp, #32]
   20728:	4650      	mov	r0, sl
   2072a:	4659      	mov	r1, fp
   2072c:	9a04      	ldr	r2, [sp, #16]
   2072e:	b157      	cbz	r7, 20746 <_strtod_r+0x926>
   20730:	f7ff fb54 	bl	1fddc <sulp>
   20734:	4602      	mov	r2, r0
   20736:	460b      	mov	r3, r1
   20738:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   2073c:	f7fc feca 	bl	1d4d4 <__adddf3>
   20740:	4682      	mov	sl, r0
   20742:	468b      	mov	fp, r1
   20744:	e137      	b.n	209b6 <_strtod_r+0xb96>
   20746:	f7ff fb49 	bl	1fddc <sulp>
   2074a:	4602      	mov	r2, r0
   2074c:	460b      	mov	r3, r1
   2074e:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   20752:	f7fc febd 	bl	1d4d0 <__aeabi_dsub>
   20756:	2200      	movs	r2, #0
   20758:	2300      	movs	r3, #0
   2075a:	4682      	mov	sl, r0
   2075c:	468b      	mov	fp, r1
   2075e:	f004 f9f9 	bl	24b54 <__aeabi_dcmpeq>
   20762:	2800      	cmp	r0, #0
   20764:	f47f af38 	bne.w	205d8 <_strtod_r+0x7b8>
   20768:	e125      	b.n	209b6 <_strtod_r+0xb96>
   2076a:	4640      	mov	r0, r8
   2076c:	9903      	ldr	r1, [sp, #12]
   2076e:	f003 fff6 	bl	2475e <__ratio>
   20772:	2200      	movs	r2, #0
   20774:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
   20778:	4604      	mov	r4, r0
   2077a:	460d      	mov	r5, r1
   2077c:	f004 f9fe 	bl	24b7c <__aeabi_dcmple>
   20780:	2800      	cmp	r0, #0
   20782:	d032      	beq.n	207ea <_strtod_r+0x9ca>
   20784:	9e08      	ldr	r6, [sp, #32]
   20786:	b126      	cbz	r6, 20792 <_strtod_r+0x972>
   20788:	4f23      	ldr	r7, [pc, #140]	; (20818 <_strtod_r+0x9f8>)
   2078a:	2600      	movs	r6, #0
   2078c:	4634      	mov	r4, r6
   2078e:	463d      	mov	r5, r7
   20790:	e04c      	b.n	2082c <_strtod_r+0xa0c>
   20792:	f1ba 0f00 	cmp.w	sl, #0
   20796:	d103      	bne.n	207a0 <_strtod_r+0x980>
   20798:	f3cb 0313 	ubfx	r3, fp, #0, #20
   2079c:	b93b      	cbnz	r3, 207ae <_strtod_r+0x98e>
   2079e:	e00b      	b.n	207b8 <_strtod_r+0x998>
   207a0:	f1ba 0f01 	cmp.w	sl, #1
   207a4:	d103      	bne.n	207ae <_strtod_r+0x98e>
   207a6:	f1bb 0f00 	cmp.w	fp, #0
   207aa:	f43f af15 	beq.w	205d8 <_strtod_r+0x7b8>
   207ae:	2600      	movs	r6, #0
   207b0:	4f1a      	ldr	r7, [pc, #104]	; (2081c <_strtod_r+0x9fc>)
   207b2:	2400      	movs	r4, #0
   207b4:	4d18      	ldr	r5, [pc, #96]	; (20818 <_strtod_r+0x9f8>)
   207b6:	e039      	b.n	2082c <_strtod_r+0xa0c>
   207b8:	4620      	mov	r0, r4
   207ba:	4629      	mov	r1, r5
   207bc:	2200      	movs	r2, #0
   207be:	4b16      	ldr	r3, [pc, #88]	; (20818 <_strtod_r+0x9f8>)
   207c0:	f004 f9d2 	bl	24b68 <__aeabi_dcmplt>
   207c4:	b940      	cbnz	r0, 207d8 <_strtod_r+0x9b8>
   207c6:	4620      	mov	r0, r4
   207c8:	4629      	mov	r1, r5
   207ca:	2200      	movs	r2, #0
   207cc:	4b14      	ldr	r3, [pc, #80]	; (20820 <_strtod_r+0xa00>)
   207ce:	f7fd f833 	bl	1d838 <__aeabi_dmul>
   207d2:	4604      	mov	r4, r0
   207d4:	460d      	mov	r5, r1
   207d6:	e001      	b.n	207dc <_strtod_r+0x9bc>
   207d8:	4d11      	ldr	r5, [pc, #68]	; (20820 <_strtod_r+0xa00>)
   207da:	2400      	movs	r4, #0
   207dc:	f105 4700 	add.w	r7, r5, #2147483648	; 0x80000000
   207e0:	9416      	str	r4, [sp, #88]	; 0x58
   207e2:	9717      	str	r7, [sp, #92]	; 0x5c
   207e4:	e9dd 6716 	ldrd	r6, r7, [sp, #88]	; 0x58
   207e8:	e020      	b.n	2082c <_strtod_r+0xa0c>
   207ea:	4620      	mov	r0, r4
   207ec:	4629      	mov	r1, r5
   207ee:	2200      	movs	r2, #0
   207f0:	4b0b      	ldr	r3, [pc, #44]	; (20820 <_strtod_r+0xa00>)
   207f2:	f7fd f821 	bl	1d838 <__aeabi_dmul>
   207f6:	9e08      	ldr	r6, [sp, #32]
   207f8:	4604      	mov	r4, r0
   207fa:	460d      	mov	r5, r1
   207fc:	b996      	cbnz	r6, 20824 <_strtod_r+0xa04>
   207fe:	f101 4700 	add.w	r7, r1, #2147483648	; 0x80000000
   20802:	9010      	str	r0, [sp, #64]	; 0x40
   20804:	9711      	str	r7, [sp, #68]	; 0x44
   20806:	e00f      	b.n	20828 <_strtod_r+0xa08>
   20808:	fffffbe3 	.word	0xfffffbe3
   2080c:	000fffff 	.word	0x000fffff
   20810:	7ff00000 	.word	0x7ff00000
   20814:	7fefffff 	.word	0x7fefffff
   20818:	3ff00000 	.word	0x3ff00000
   2081c:	bff00000 	.word	0xbff00000
   20820:	3fe00000 	.word	0x3fe00000
   20824:	e9cd 4510 	strd	r4, r5, [sp, #64]	; 0x40
   20828:	e9dd 6710 	ldrd	r6, r7, [sp, #64]	; 0x40
   2082c:	f02b 4c00 	bic.w	ip, fp, #2147483648	; 0x80000000
   20830:	ea4f 5c1c 	mov.w	ip, ip, lsr #20
   20834:	4b84      	ldr	r3, [pc, #528]	; (20a48 <_strtod_r+0xc28>)
   20836:	ea4f 5c0c 	mov.w	ip, ip, lsl #20
   2083a:	459c      	cmp	ip, r3
   2083c:	d131      	bne.n	208a2 <_strtod_r+0xa82>
   2083e:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   20842:	f1ab 7b54 	sub.w	fp, fp, #55574528	; 0x3500000
   20846:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
   2084a:	4650      	mov	r0, sl
   2084c:	4659      	mov	r1, fp
   2084e:	f8cd c008 	str.w	ip, [sp, #8]
   20852:	f003 febd 	bl	245d0 <__ulp>
   20856:	4602      	mov	r2, r0
   20858:	460b      	mov	r3, r1
   2085a:	4630      	mov	r0, r6
   2085c:	4639      	mov	r1, r7
   2085e:	f7fc ffeb 	bl	1d838 <__aeabi_dmul>
   20862:	4602      	mov	r2, r0
   20864:	460b      	mov	r3, r1
   20866:	4650      	mov	r0, sl
   20868:	4659      	mov	r1, fp
   2086a:	f7fc fe33 	bl	1d4d4 <__adddf3>
   2086e:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
   20872:	0d1b      	lsrs	r3, r3, #20
   20874:	4a75      	ldr	r2, [pc, #468]	; (20a4c <_strtod_r+0xc2c>)
   20876:	051b      	lsls	r3, r3, #20
   20878:	4293      	cmp	r3, r2
   2087a:	4682      	mov	sl, r0
   2087c:	f8dd c008 	ldr.w	ip, [sp, #8]
   20880:	d90c      	bls.n	2089c <_strtod_r+0xa7c>
   20882:	4b73      	ldr	r3, [pc, #460]	; (20a50 <_strtod_r+0xc30>)
   20884:	990d      	ldr	r1, [sp, #52]	; 0x34
   20886:	4299      	cmp	r1, r3
   20888:	d103      	bne.n	20892 <_strtod_r+0xa72>
   2088a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   2088c:	3201      	adds	r2, #1
   2088e:	f43f ad1f 	beq.w	202d0 <_strtod_r+0x4b0>
   20892:	f8df b1bc 	ldr.w	fp, [pc, #444]	; 20a50 <_strtod_r+0xc30>
   20896:	f04f 3aff 	mov.w	sl, #4294967295
   2089a:	e07b      	b.n	20994 <_strtod_r+0xb74>
   2089c:	f101 7b54 	add.w	fp, r1, #55574528	; 0x3500000
   208a0:	e042      	b.n	20928 <_strtod_r+0xb08>
   208a2:	9b04      	ldr	r3, [sp, #16]
   208a4:	b353      	cbz	r3, 208fc <_strtod_r+0xadc>
   208a6:	f1bc 6fd4 	cmp.w	ip, #111149056	; 0x6a00000
   208aa:	d827      	bhi.n	208fc <_strtod_r+0xadc>
   208ac:	a35e      	add	r3, pc, #376	; (adr r3, 20a28 <_strtod_r+0xc08>)
   208ae:	e9d3 2300 	ldrd	r2, r3, [r3]
   208b2:	4620      	mov	r0, r4
   208b4:	4629      	mov	r1, r5
   208b6:	f8cd c008 	str.w	ip, [sp, #8]
   208ba:	f004 f95f 	bl	24b7c <__aeabi_dcmple>
   208be:	f8dd c008 	ldr.w	ip, [sp, #8]
   208c2:	b1b8      	cbz	r0, 208f4 <_strtod_r+0xad4>
   208c4:	4629      	mov	r1, r5
   208c6:	4620      	mov	r0, r4
   208c8:	f7fd f9c8 	bl	1dc5c <__aeabi_d2uiz>
   208cc:	2800      	cmp	r0, #0
   208ce:	bf08      	it	eq
   208d0:	2001      	moveq	r0, #1
   208d2:	f7fc ff3b 	bl	1d74c <__aeabi_ui2d>
   208d6:	9e08      	ldr	r6, [sp, #32]
   208d8:	4604      	mov	r4, r0
   208da:	460d      	mov	r5, r1
   208dc:	f8dd c008 	ldr.w	ip, [sp, #8]
   208e0:	b926      	cbnz	r6, 208ec <_strtod_r+0xacc>
   208e2:	f101 4700 	add.w	r7, r1, #2147483648	; 0x80000000
   208e6:	9012      	str	r0, [sp, #72]	; 0x48
   208e8:	9713      	str	r7, [sp, #76]	; 0x4c
   208ea:	e001      	b.n	208f0 <_strtod_r+0xad0>
   208ec:	e9cd 4512 	strd	r4, r5, [sp, #72]	; 0x48
   208f0:	e9dd 6712 	ldrd	r6, r7, [sp, #72]	; 0x48
   208f4:	f107 63d6 	add.w	r3, r7, #112197632	; 0x6b00000
   208f8:	ebcc 0703 	rsb	r7, ip, r3
   208fc:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   20900:	f8cd c008 	str.w	ip, [sp, #8]
   20904:	f003 fe64 	bl	245d0 <__ulp>
   20908:	4602      	mov	r2, r0
   2090a:	460b      	mov	r3, r1
   2090c:	4630      	mov	r0, r6
   2090e:	4639      	mov	r1, r7
   20910:	f7fc ff92 	bl	1d838 <__aeabi_dmul>
   20914:	4602      	mov	r2, r0
   20916:	460b      	mov	r3, r1
   20918:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   2091c:	f7fc fdda 	bl	1d4d4 <__adddf3>
   20920:	f8dd c008 	ldr.w	ip, [sp, #8]
   20924:	4682      	mov	sl, r0
   20926:	468b      	mov	fp, r1
   20928:	9f04      	ldr	r7, [sp, #16]
   2092a:	2f00      	cmp	r7, #0
   2092c:	d132      	bne.n	20994 <_strtod_r+0xb74>
   2092e:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
   20932:	0d1b      	lsrs	r3, r3, #20
   20934:	051b      	lsls	r3, r3, #20
   20936:	459c      	cmp	ip, r3
   20938:	d12c      	bne.n	20994 <_strtod_r+0xb74>
   2093a:	4629      	mov	r1, r5
   2093c:	4620      	mov	r0, r4
   2093e:	f004 f93b 	bl	24bb8 <__aeabi_d2iz>
   20942:	f7fc ff13 	bl	1d76c <__aeabi_i2d>
   20946:	4602      	mov	r2, r0
   20948:	460b      	mov	r3, r1
   2094a:	4620      	mov	r0, r4
   2094c:	4629      	mov	r1, r5
   2094e:	f7fc fdbf 	bl	1d4d0 <__aeabi_dsub>
   20952:	9f08      	ldr	r7, [sp, #32]
   20954:	4604      	mov	r4, r0
   20956:	460d      	mov	r5, r1
   20958:	b92f      	cbnz	r7, 20966 <_strtod_r+0xb46>
   2095a:	f1ba 0f00 	cmp.w	sl, #0
   2095e:	d102      	bne.n	20966 <_strtod_r+0xb46>
   20960:	f3cb 0613 	ubfx	r6, fp, #0, #20
   20964:	b186      	cbz	r6, 20988 <_strtod_r+0xb68>
   20966:	4620      	mov	r0, r4
   20968:	4629      	mov	r1, r5
   2096a:	a331      	add	r3, pc, #196	; (adr r3, 20a30 <_strtod_r+0xc10>)
   2096c:	e9d3 2300 	ldrd	r2, r3, [r3]
   20970:	f004 f8fa 	bl	24b68 <__aeabi_dcmplt>
   20974:	2800      	cmp	r0, #0
   20976:	d131      	bne.n	209dc <_strtod_r+0xbbc>
   20978:	4620      	mov	r0, r4
   2097a:	4629      	mov	r1, r5
   2097c:	a32e      	add	r3, pc, #184	; (adr r3, 20a38 <_strtod_r+0xc18>)
   2097e:	e9d3 2300 	ldrd	r2, r3, [r3]
   20982:	f004 f90f 	bl	24ba4 <__aeabi_dcmpgt>
   20986:	e004      	b.n	20992 <_strtod_r+0xb72>
   20988:	a32d      	add	r3, pc, #180	; (adr r3, 20a40 <_strtod_r+0xc20>)
   2098a:	e9d3 2300 	ldrd	r2, r3, [r3]
   2098e:	f004 f8eb 	bl	24b68 <__aeabi_dcmplt>
   20992:	bb18      	cbnz	r0, 209dc <_strtod_r+0xbbc>
   20994:	4648      	mov	r0, r9
   20996:	991a      	ldr	r1, [sp, #104]	; 0x68
   20998:	f003 fb7b 	bl	24092 <_Bfree>
   2099c:	4648      	mov	r0, r9
   2099e:	9905      	ldr	r1, [sp, #20]
   209a0:	f003 fb77 	bl	24092 <_Bfree>
   209a4:	4648      	mov	r0, r9
   209a6:	9903      	ldr	r1, [sp, #12]
   209a8:	f003 fb73 	bl	24092 <_Bfree>
   209ac:	4648      	mov	r0, r9
   209ae:	4641      	mov	r1, r8
   209b0:	f003 fb6f 	bl	24092 <_Bfree>
   209b4:	e561      	b.n	2047a <_strtod_r+0x65a>
   209b6:	9e04      	ldr	r6, [sp, #16]
   209b8:	b186      	cbz	r6, 209dc <_strtod_r+0xbbc>
   209ba:	4f26      	ldr	r7, [pc, #152]	; (20a54 <_strtod_r+0xc34>)
   209bc:	2000      	movs	r0, #0
   209be:	900c      	str	r0, [sp, #48]	; 0x30
   209c0:	970d      	str	r7, [sp, #52]	; 0x34
   209c2:	4650      	mov	r0, sl
   209c4:	4659      	mov	r1, fp
   209c6:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
   209ca:	f7fc ff35 	bl	1d838 <__aeabi_dmul>
   209ce:	4682      	mov	sl, r0
   209d0:	468b      	mov	fp, r1
   209d2:	b919      	cbnz	r1, 209dc <_strtod_r+0xbbc>
   209d4:	b910      	cbnz	r0, 209dc <_strtod_r+0xbbc>
   209d6:	2322      	movs	r3, #34	; 0x22
   209d8:	f8c9 3000 	str.w	r3, [r9]
   209dc:	4648      	mov	r0, r9
   209de:	991a      	ldr	r1, [sp, #104]	; 0x68
   209e0:	f003 fb57 	bl	24092 <_Bfree>
   209e4:	4648      	mov	r0, r9
   209e6:	9905      	ldr	r1, [sp, #20]
   209e8:	f003 fb53 	bl	24092 <_Bfree>
   209ec:	4648      	mov	r0, r9
   209ee:	9903      	ldr	r1, [sp, #12]
   209f0:	f003 fb4f 	bl	24092 <_Bfree>
   209f4:	4648      	mov	r0, r9
   209f6:	9907      	ldr	r1, [sp, #28]
   209f8:	f003 fb4b 	bl	24092 <_Bfree>
   209fc:	4648      	mov	r0, r9
   209fe:	4641      	mov	r1, r8
   20a00:	f003 fb47 	bl	24092 <_Bfree>
   20a04:	9e15      	ldr	r6, [sp, #84]	; 0x54
   20a06:	b10e      	cbz	r6, 20a0c <_strtod_r+0xbec>
   20a08:	9b19      	ldr	r3, [sp, #100]	; 0x64
   20a0a:	6033      	str	r3, [r6, #0]
   20a0c:	9f09      	ldr	r7, [sp, #36]	; 0x24
   20a0e:	b11f      	cbz	r7, 20a18 <_strtod_r+0xbf8>
   20a10:	4650      	mov	r0, sl
   20a12:	f10b 4100 	add.w	r1, fp, #2147483648	; 0x80000000
   20a16:	e001      	b.n	20a1c <_strtod_r+0xbfc>
   20a18:	4650      	mov	r0, sl
   20a1a:	4659      	mov	r1, fp
   20a1c:	b01f      	add	sp, #124	; 0x7c
   20a1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20a22:	bf00      	nop
   20a24:	f3af 8000 	nop.w
   20a28:	ffc00000 	.word	0xffc00000
   20a2c:	41dfffff 	.word	0x41dfffff
   20a30:	94a03595 	.word	0x94a03595
   20a34:	3fdfffff 	.word	0x3fdfffff
   20a38:	35afe535 	.word	0x35afe535
   20a3c:	3fe00000 	.word	0x3fe00000
   20a40:	94a03595 	.word	0x94a03595
   20a44:	3fcfffff 	.word	0x3fcfffff
   20a48:	7fe00000 	.word	0x7fe00000
   20a4c:	7c9fffff 	.word	0x7c9fffff
   20a50:	7fefffff 	.word	0x7fefffff
   20a54:	39500000 	.word	0x39500000

00020a58 <__strtok_r>:
__strtok_r():
   20a58:	b5f0      	push	{r4, r5, r6, r7, lr}
   20a5a:	b908      	cbnz	r0, 20a60 <__strtok_r+0x8>
   20a5c:	6810      	ldr	r0, [r2, #0]
   20a5e:	b328      	cbz	r0, 20aac <__strtok_r+0x54>
   20a60:	4604      	mov	r4, r0
   20a62:	f814 5b01 	ldrb.w	r5, [r4], #1
   20a66:	460f      	mov	r7, r1
   20a68:	f817 6b01 	ldrb.w	r6, [r7], #1
   20a6c:	b13e      	cbz	r6, 20a7e <__strtok_r+0x26>
   20a6e:	42b5      	cmp	r5, r6
   20a70:	d1fa      	bne.n	20a68 <__strtok_r+0x10>
   20a72:	b10b      	cbz	r3, 20a78 <__strtok_r+0x20>
   20a74:	4620      	mov	r0, r4
   20a76:	e7f3      	b.n	20a60 <__strtok_r+0x8>
   20a78:	6014      	str	r4, [r2, #0]
   20a7a:	7003      	strb	r3, [r0, #0]
   20a7c:	bdf0      	pop	{r4, r5, r6, r7, pc}
   20a7e:	b94d      	cbnz	r5, 20a94 <__strtok_r+0x3c>
   20a80:	6015      	str	r5, [r2, #0]
   20a82:	4628      	mov	r0, r5
   20a84:	bdf0      	pop	{r4, r5, r6, r7, pc}
   20a86:	f817 6b01 	ldrb.w	r6, [r7], #1
   20a8a:	42ae      	cmp	r6, r5
   20a8c:	d007      	beq.n	20a9e <__strtok_r+0x46>
   20a8e:	2e00      	cmp	r6, #0
   20a90:	d1f9      	bne.n	20a86 <__strtok_r+0x2e>
   20a92:	461c      	mov	r4, r3
   20a94:	4623      	mov	r3, r4
   20a96:	f813 5b01 	ldrb.w	r5, [r3], #1
   20a9a:	460f      	mov	r7, r1
   20a9c:	e7f3      	b.n	20a86 <__strtok_r+0x2e>
   20a9e:	b115      	cbz	r5, 20aa6 <__strtok_r+0x4e>
   20aa0:	2100      	movs	r1, #0
   20aa2:	7021      	strb	r1, [r4, #0]
   20aa4:	e000      	b.n	20aa8 <__strtok_r+0x50>
   20aa6:	462b      	mov	r3, r5
   20aa8:	6013      	str	r3, [r2, #0]
   20aaa:	bdf0      	pop	{r4, r5, r6, r7, pc}
   20aac:	bdf0      	pop	{r4, r5, r6, r7, pc}

00020aae <strtok_r>:
strtok_r():
   20aae:	2301      	movs	r3, #1
   20ab0:	f7ff bfd2 	b.w	20a58 <__strtok_r>

00020ab4 <_strtol_r>:
_strtol_r():
   20ab4:	4684      	mov	ip, r0
   20ab6:	483f      	ldr	r0, [pc, #252]	; (20bb4 <_strtol_r+0x100>)
   20ab8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20abc:	f8d0 8000 	ldr.w	r8, [r0]
   20ac0:	460e      	mov	r6, r1
   20ac2:	4634      	mov	r4, r6
   20ac4:	f814 5b01 	ldrb.w	r5, [r4], #1
   20ac8:	eb08 0005 	add.w	r0, r8, r5
   20acc:	7840      	ldrb	r0, [r0, #1]
   20ace:	f000 0008 	and.w	r0, r0, #8
   20ad2:	f000 07ff 	and.w	r7, r0, #255	; 0xff
   20ad6:	b108      	cbz	r0, 20adc <_strtol_r+0x28>
   20ad8:	4626      	mov	r6, r4
   20ada:	e7f2      	b.n	20ac2 <_strtol_r+0xe>
   20adc:	2d2d      	cmp	r5, #45	; 0x2d
   20ade:	d103      	bne.n	20ae8 <_strtol_r+0x34>
   20ae0:	1cb4      	adds	r4, r6, #2
   20ae2:	7875      	ldrb	r5, [r6, #1]
   20ae4:	2701      	movs	r7, #1
   20ae6:	e003      	b.n	20af0 <_strtol_r+0x3c>
   20ae8:	2d2b      	cmp	r5, #43	; 0x2b
   20aea:	bf04      	itt	eq
   20aec:	7875      	ldrbeq	r5, [r6, #1]
   20aee:	1cb4      	addeq	r4, r6, #2
   20af0:	f033 0010 	bics.w	r0, r3, #16
   20af4:	d10d      	bne.n	20b12 <_strtol_r+0x5e>
   20af6:	2d30      	cmp	r5, #48	; 0x30
   20af8:	d108      	bne.n	20b0c <_strtol_r+0x58>
   20afa:	7820      	ldrb	r0, [r4, #0]
   20afc:	f000 00df 	and.w	r0, r0, #223	; 0xdf
   20b00:	2858      	cmp	r0, #88	; 0x58
   20b02:	d151      	bne.n	20ba8 <_strtol_r+0xf4>
   20b04:	7865      	ldrb	r5, [r4, #1]
   20b06:	2310      	movs	r3, #16
   20b08:	3402      	adds	r4, #2
   20b0a:	e002      	b.n	20b12 <_strtol_r+0x5e>
   20b0c:	2b00      	cmp	r3, #0
   20b0e:	bf08      	it	eq
   20b10:	230a      	moveq	r3, #10
   20b12:	2f00      	cmp	r7, #0
   20b14:	bf0c      	ite	eq
   20b16:	f06f 4a00 	mvneq.w	sl, #2147483648	; 0x80000000
   20b1a:	f04f 4a00 	movne.w	sl, #2147483648	; 0x80000000
   20b1e:	fbba f9f3 	udiv	r9, sl, r3
   20b22:	fb03 aa19 	mls	sl, r3, r9, sl
   20b26:	2600      	movs	r6, #0
   20b28:	4630      	mov	r0, r6
   20b2a:	eb08 0b05 	add.w	fp, r8, r5
   20b2e:	f89b b001 	ldrb.w	fp, [fp, #1]
   20b32:	f01b 0f04 	tst.w	fp, #4
   20b36:	d001      	beq.n	20b3c <_strtol_r+0x88>
   20b38:	3d30      	subs	r5, #48	; 0x30
   20b3a:	e00b      	b.n	20b54 <_strtol_r+0xa0>
   20b3c:	f01b 0b03 	ands.w	fp, fp, #3
   20b40:	d01b      	beq.n	20b7a <_strtol_r+0xc6>
   20b42:	f1bb 0f01 	cmp.w	fp, #1
   20b46:	bf14      	ite	ne
   20b48:	f04f 0b57 	movne.w	fp, #87	; 0x57
   20b4c:	f04f 0b37 	moveq.w	fp, #55	; 0x37
   20b50:	ebcb 0505 	rsb	r5, fp, r5
   20b54:	429d      	cmp	r5, r3
   20b56:	da10      	bge.n	20b7a <_strtol_r+0xc6>
   20b58:	f1b6 3fff 	cmp.w	r6, #4294967295
   20b5c:	d00a      	beq.n	20b74 <_strtol_r+0xc0>
   20b5e:	4548      	cmp	r0, r9
   20b60:	d806      	bhi.n	20b70 <_strtol_r+0xbc>
   20b62:	d101      	bne.n	20b68 <_strtol_r+0xb4>
   20b64:	4555      	cmp	r5, sl
   20b66:	dc03      	bgt.n	20b70 <_strtol_r+0xbc>
   20b68:	fb03 5000 	mla	r0, r3, r0, r5
   20b6c:	2601      	movs	r6, #1
   20b6e:	e001      	b.n	20b74 <_strtol_r+0xc0>
   20b70:	f04f 36ff 	mov.w	r6, #4294967295
   20b74:	f814 5b01 	ldrb.w	r5, [r4], #1
   20b78:	e7d7      	b.n	20b2a <_strtol_r+0x76>
   20b7a:	1c73      	adds	r3, r6, #1
   20b7c:	d10c      	bne.n	20b98 <_strtol_r+0xe4>
   20b7e:	2f00      	cmp	r7, #0
   20b80:	f04f 0322 	mov.w	r3, #34	; 0x22
   20b84:	bf0c      	ite	eq
   20b86:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
   20b8a:	f04f 4000 	movne.w	r0, #2147483648	; 0x80000000
   20b8e:	f8cc 3000 	str.w	r3, [ip]
   20b92:	b92a      	cbnz	r2, 20ba0 <_strtol_r+0xec>
   20b94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20b98:	b107      	cbz	r7, 20b9c <_strtol_r+0xe8>
   20b9a:	4240      	negs	r0, r0
   20b9c:	b142      	cbz	r2, 20bb0 <_strtol_r+0xfc>
   20b9e:	b106      	cbz	r6, 20ba2 <_strtol_r+0xee>
   20ba0:	1e61      	subs	r1, r4, #1
   20ba2:	6011      	str	r1, [r2, #0]
   20ba4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20ba8:	2b00      	cmp	r3, #0
   20baa:	bf08      	it	eq
   20bac:	2308      	moveq	r3, #8
   20bae:	e7b0      	b.n	20b12 <_strtol_r+0x5e>
   20bb0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20bb4:	2007c108 	.word	0x2007c108

00020bb8 <strtol>:
strtol():
   20bb8:	b530      	push	{r4, r5, lr}
   20bba:	4613      	mov	r3, r2
   20bbc:	4a04      	ldr	r2, [pc, #16]	; (20bd0 <strtol+0x18>)
   20bbe:	4605      	mov	r5, r0
   20bc0:	460c      	mov	r4, r1
   20bc2:	6810      	ldr	r0, [r2, #0]
   20bc4:	4629      	mov	r1, r5
   20bc6:	4622      	mov	r2, r4
   20bc8:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
   20bcc:	f7ff bf72 	b.w	20ab4 <_strtol_r>
   20bd0:	2007c16c 	.word	0x2007c16c

00020bd4 <__ssputs_r>:
__ssputs_r():
   20bd4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   20bd8:	688d      	ldr	r5, [r1, #8]
   20bda:	4681      	mov	r9, r0
   20bdc:	42ab      	cmp	r3, r5
   20bde:	460c      	mov	r4, r1
   20be0:	4692      	mov	sl, r2
   20be2:	461f      	mov	r7, r3
   20be4:	d343      	bcc.n	20c6e <__ssputs_r+0x9a>
   20be6:	898b      	ldrh	r3, [r1, #12]
   20be8:	f413 6f90 	tst.w	r3, #1152	; 0x480
   20bec:	d03d      	beq.n	20c6a <__ssputs_r+0x96>
   20bee:	6826      	ldr	r6, [r4, #0]
   20bf0:	6909      	ldr	r1, [r1, #16]
   20bf2:	2202      	movs	r2, #2
   20bf4:	ebc1 0806 	rsb	r8, r1, r6
   20bf8:	6966      	ldr	r6, [r4, #20]
   20bfa:	eb06 0646 	add.w	r6, r6, r6, lsl #1
   20bfe:	fb96 f6f2 	sdiv	r6, r6, r2
   20c02:	f108 0201 	add.w	r2, r8, #1
   20c06:	443a      	add	r2, r7
   20c08:	4296      	cmp	r6, r2
   20c0a:	bf38      	it	cc
   20c0c:	4616      	movcc	r6, r2
   20c0e:	055b      	lsls	r3, r3, #21
   20c10:	d50f      	bpl.n	20c32 <__ssputs_r+0x5e>
   20c12:	4631      	mov	r1, r6
   20c14:	f7fe fcd6 	bl	1f5c4 <_malloc_r>
   20c18:	4605      	mov	r5, r0
   20c1a:	b198      	cbz	r0, 20c44 <__ssputs_r+0x70>
   20c1c:	6921      	ldr	r1, [r4, #16]
   20c1e:	4642      	mov	r2, r8
   20c20:	f7fd fff9 	bl	1ec16 <memcpy>
   20c24:	89a3      	ldrh	r3, [r4, #12]
   20c26:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
   20c2a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   20c2e:	81a3      	strh	r3, [r4, #12]
   20c30:	e013      	b.n	20c5a <__ssputs_r+0x86>
   20c32:	4632      	mov	r2, r6
   20c34:	f003 fe03 	bl	2483e <_realloc_r>
   20c38:	4605      	mov	r5, r0
   20c3a:	b970      	cbnz	r0, 20c5a <__ssputs_r+0x86>
   20c3c:	4648      	mov	r0, r9
   20c3e:	6921      	ldr	r1, [r4, #16]
   20c40:	f7fe fc4e 	bl	1f4e0 <_free_r>
   20c44:	230c      	movs	r3, #12
   20c46:	f8c9 3000 	str.w	r3, [r9]
   20c4a:	89a3      	ldrh	r3, [r4, #12]
   20c4c:	f04f 30ff 	mov.w	r0, #4294967295
   20c50:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   20c54:	81a3      	strh	r3, [r4, #12]
   20c56:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   20c5a:	6125      	str	r5, [r4, #16]
   20c5c:	6166      	str	r6, [r4, #20]
   20c5e:	4445      	add	r5, r8
   20c60:	ebc8 0606 	rsb	r6, r8, r6
   20c64:	6025      	str	r5, [r4, #0]
   20c66:	60a6      	str	r6, [r4, #8]
   20c68:	463d      	mov	r5, r7
   20c6a:	42af      	cmp	r7, r5
   20c6c:	d200      	bcs.n	20c70 <__ssputs_r+0x9c>
   20c6e:	463d      	mov	r5, r7
   20c70:	462a      	mov	r2, r5
   20c72:	6820      	ldr	r0, [r4, #0]
   20c74:	4651      	mov	r1, sl
   20c76:	f7fd ffd7 	bl	1ec28 <memmove>
   20c7a:	68a3      	ldr	r3, [r4, #8]
   20c7c:	2000      	movs	r0, #0
   20c7e:	1b5b      	subs	r3, r3, r5
   20c80:	60a3      	str	r3, [r4, #8]
   20c82:	6823      	ldr	r3, [r4, #0]
   20c84:	441d      	add	r5, r3
   20c86:	6025      	str	r5, [r4, #0]
   20c88:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

00020c8c <_svfiprintf_r>:
_svfprintf_r():
   20c8c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   20c90:	b09d      	sub	sp, #116	; 0x74
   20c92:	9303      	str	r3, [sp, #12]
   20c94:	898b      	ldrh	r3, [r1, #12]
   20c96:	4607      	mov	r7, r0
   20c98:	061c      	lsls	r4, r3, #24
   20c9a:	460d      	mov	r5, r1
   20c9c:	4616      	mov	r6, r2
   20c9e:	d50c      	bpl.n	20cba <_svfiprintf_r+0x2e>
   20ca0:	690b      	ldr	r3, [r1, #16]
   20ca2:	b953      	cbnz	r3, 20cba <_svfiprintf_r+0x2e>
   20ca4:	2140      	movs	r1, #64	; 0x40
   20ca6:	f7fe fc8d 	bl	1f5c4 <_malloc_r>
   20caa:	6028      	str	r0, [r5, #0]
   20cac:	6128      	str	r0, [r5, #16]
   20cae:	b910      	cbnz	r0, 20cb6 <_svfiprintf_r+0x2a>
   20cb0:	230c      	movs	r3, #12
   20cb2:	603b      	str	r3, [r7, #0]
   20cb4:	e0c7      	b.n	20e46 <_svfiprintf_r+0x1ba>
   20cb6:	2340      	movs	r3, #64	; 0x40
   20cb8:	616b      	str	r3, [r5, #20]
   20cba:	2300      	movs	r3, #0
   20cbc:	9309      	str	r3, [sp, #36]	; 0x24
   20cbe:	2320      	movs	r3, #32
   20cc0:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
   20cc4:	2330      	movs	r3, #48	; 0x30
   20cc6:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
   20cca:	4633      	mov	r3, r6
   20ccc:	461c      	mov	r4, r3
   20cce:	f813 2b01 	ldrb.w	r2, [r3], #1
   20cd2:	b91a      	cbnz	r2, 20cdc <_svfiprintf_r+0x50>
   20cd4:	ebb4 0906 	subs.w	r9, r4, r6
   20cd8:	d00f      	beq.n	20cfa <_svfiprintf_r+0x6e>
   20cda:	e002      	b.n	20ce2 <_svfiprintf_r+0x56>
   20cdc:	2a25      	cmp	r2, #37	; 0x25
   20cde:	d1f5      	bne.n	20ccc <_svfiprintf_r+0x40>
   20ce0:	e7f8      	b.n	20cd4 <_svfiprintf_r+0x48>
   20ce2:	4638      	mov	r0, r7
   20ce4:	4629      	mov	r1, r5
   20ce6:	4632      	mov	r2, r6
   20ce8:	464b      	mov	r3, r9
   20cea:	f7ff ff73 	bl	20bd4 <__ssputs_r>
   20cee:	3001      	adds	r0, #1
   20cf0:	f000 80a4 	beq.w	20e3c <_svfiprintf_r+0x1b0>
   20cf4:	9b09      	ldr	r3, [sp, #36]	; 0x24
   20cf6:	444b      	add	r3, r9
   20cf8:	9309      	str	r3, [sp, #36]	; 0x24
   20cfa:	7823      	ldrb	r3, [r4, #0]
   20cfc:	2b00      	cmp	r3, #0
   20cfe:	f000 809d 	beq.w	20e3c <_svfiprintf_r+0x1b0>
   20d02:	2300      	movs	r3, #0
   20d04:	f04f 32ff 	mov.w	r2, #4294967295
   20d08:	9304      	str	r3, [sp, #16]
   20d0a:	9307      	str	r3, [sp, #28]
   20d0c:	9205      	str	r2, [sp, #20]
   20d0e:	9306      	str	r3, [sp, #24]
   20d10:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
   20d14:	931a      	str	r3, [sp, #104]	; 0x68
   20d16:	f104 0901 	add.w	r9, r4, #1
   20d1a:	4e4d      	ldr	r6, [pc, #308]	; (20e50 <_svfiprintf_r+0x1c4>)
   20d1c:	464c      	mov	r4, r9
   20d1e:	4630      	mov	r0, r6
   20d20:	7821      	ldrb	r1, [r4, #0]
   20d22:	2205      	movs	r2, #5
   20d24:	f7fd ff5a 	bl	1ebdc <memchr>
   20d28:	f109 0901 	add.w	r9, r9, #1
   20d2c:	9b04      	ldr	r3, [sp, #16]
   20d2e:	b128      	cbz	r0, 20d3c <_svfiprintf_r+0xb0>
   20d30:	1b86      	subs	r6, r0, r6
   20d32:	2001      	movs	r0, #1
   20d34:	40b0      	lsls	r0, r6
   20d36:	4303      	orrs	r3, r0
   20d38:	9304      	str	r3, [sp, #16]
   20d3a:	e7ee      	b.n	20d1a <_svfiprintf_r+0x8e>
   20d3c:	06d9      	lsls	r1, r3, #27
   20d3e:	bf44      	itt	mi
   20d40:	2220      	movmi	r2, #32
   20d42:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
   20d46:	071a      	lsls	r2, r3, #28
   20d48:	bf44      	itt	mi
   20d4a:	222b      	movmi	r2, #43	; 0x2b
   20d4c:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
   20d50:	7822      	ldrb	r2, [r4, #0]
   20d52:	2a2a      	cmp	r2, #42	; 0x2a
   20d54:	d002      	beq.n	20d5c <_svfiprintf_r+0xd0>
   20d56:	9b07      	ldr	r3, [sp, #28]
   20d58:	4621      	mov	r1, r4
   20d5a:	e00e      	b.n	20d7a <_svfiprintf_r+0xee>
   20d5c:	9a03      	ldr	r2, [sp, #12]
   20d5e:	1d11      	adds	r1, r2, #4
   20d60:	6812      	ldr	r2, [r2, #0]
   20d62:	9103      	str	r1, [sp, #12]
   20d64:	2a00      	cmp	r2, #0
   20d66:	db01      	blt.n	20d6c <_svfiprintf_r+0xe0>
   20d68:	9207      	str	r2, [sp, #28]
   20d6a:	e004      	b.n	20d76 <_svfiprintf_r+0xea>
   20d6c:	4252      	negs	r2, r2
   20d6e:	f043 0302 	orr.w	r3, r3, #2
   20d72:	9207      	str	r2, [sp, #28]
   20d74:	9304      	str	r3, [sp, #16]
   20d76:	3401      	adds	r4, #1
   20d78:	e00a      	b.n	20d90 <_svfiprintf_r+0x104>
   20d7a:	460c      	mov	r4, r1
   20d7c:	7822      	ldrb	r2, [r4, #0]
   20d7e:	3101      	adds	r1, #1
   20d80:	3a30      	subs	r2, #48	; 0x30
   20d82:	2a09      	cmp	r2, #9
   20d84:	d803      	bhi.n	20d8e <_svfiprintf_r+0x102>
   20d86:	200a      	movs	r0, #10
   20d88:	fb00 2303 	mla	r3, r0, r3, r2
   20d8c:	e7f5      	b.n	20d7a <_svfiprintf_r+0xee>
   20d8e:	9307      	str	r3, [sp, #28]
   20d90:	7823      	ldrb	r3, [r4, #0]
   20d92:	2b2e      	cmp	r3, #46	; 0x2e
   20d94:	d119      	bne.n	20dca <_svfiprintf_r+0x13e>
   20d96:	7863      	ldrb	r3, [r4, #1]
   20d98:	2b2a      	cmp	r3, #42	; 0x2a
   20d9a:	d109      	bne.n	20db0 <_svfiprintf_r+0x124>
   20d9c:	9b03      	ldr	r3, [sp, #12]
   20d9e:	3402      	adds	r4, #2
   20da0:	1d1a      	adds	r2, r3, #4
   20da2:	681b      	ldr	r3, [r3, #0]
   20da4:	9203      	str	r2, [sp, #12]
   20da6:	2b00      	cmp	r3, #0
   20da8:	bfb8      	it	lt
   20daa:	f04f 33ff 	movlt.w	r3, #4294967295
   20dae:	e00b      	b.n	20dc8 <_svfiprintf_r+0x13c>
   20db0:	1c61      	adds	r1, r4, #1
   20db2:	2300      	movs	r3, #0
   20db4:	460c      	mov	r4, r1
   20db6:	7822      	ldrb	r2, [r4, #0]
   20db8:	3101      	adds	r1, #1
   20dba:	3a30      	subs	r2, #48	; 0x30
   20dbc:	2a09      	cmp	r2, #9
   20dbe:	d803      	bhi.n	20dc8 <_svfiprintf_r+0x13c>
   20dc0:	200a      	movs	r0, #10
   20dc2:	fb00 2303 	mla	r3, r0, r3, r2
   20dc6:	e7f5      	b.n	20db4 <_svfiprintf_r+0x128>
   20dc8:	9305      	str	r3, [sp, #20]
   20dca:	4e22      	ldr	r6, [pc, #136]	; (20e54 <_svfiprintf_r+0x1c8>)
   20dcc:	7821      	ldrb	r1, [r4, #0]
   20dce:	4630      	mov	r0, r6
   20dd0:	2203      	movs	r2, #3
   20dd2:	f7fd ff03 	bl	1ebdc <memchr>
   20dd6:	b130      	cbz	r0, 20de6 <_svfiprintf_r+0x15a>
   20dd8:	1b86      	subs	r6, r0, r6
   20dda:	2040      	movs	r0, #64	; 0x40
   20ddc:	40b0      	lsls	r0, r6
   20dde:	9b04      	ldr	r3, [sp, #16]
   20de0:	3401      	adds	r4, #1
   20de2:	4303      	orrs	r3, r0
   20de4:	9304      	str	r3, [sp, #16]
   20de6:	7821      	ldrb	r1, [r4, #0]
   20de8:	481b      	ldr	r0, [pc, #108]	; (20e58 <_svfiprintf_r+0x1cc>)
   20dea:	2206      	movs	r2, #6
   20dec:	1c66      	adds	r6, r4, #1
   20dee:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
   20df2:	f7fd fef3 	bl	1ebdc <memchr>
   20df6:	b188      	cbz	r0, 20e1c <_svfiprintf_r+0x190>
   20df8:	4b18      	ldr	r3, [pc, #96]	; (20e5c <_svfiprintf_r+0x1d0>)
   20dfa:	b933      	cbnz	r3, 20e0a <_svfiprintf_r+0x17e>
   20dfc:	9b03      	ldr	r3, [sp, #12]
   20dfe:	3307      	adds	r3, #7
   20e00:	f023 0307 	bic.w	r3, r3, #7
   20e04:	3308      	adds	r3, #8
   20e06:	9303      	str	r3, [sp, #12]
   20e08:	e014      	b.n	20e34 <_svfiprintf_r+0x1a8>
   20e0a:	ab03      	add	r3, sp, #12
   20e0c:	9300      	str	r3, [sp, #0]
   20e0e:	4638      	mov	r0, r7
   20e10:	a904      	add	r1, sp, #16
   20e12:	462a      	mov	r2, r5
   20e14:	4b12      	ldr	r3, [pc, #72]	; (20e60 <_svfiprintf_r+0x1d4>)
   20e16:	f000 fc75 	bl	21704 <_printf_float>
   20e1a:	e007      	b.n	20e2c <_svfiprintf_r+0x1a0>
   20e1c:	ab03      	add	r3, sp, #12
   20e1e:	9300      	str	r3, [sp, #0]
   20e20:	4638      	mov	r0, r7
   20e22:	a904      	add	r1, sp, #16
   20e24:	462a      	mov	r2, r5
   20e26:	4b0e      	ldr	r3, [pc, #56]	; (20e60 <_svfiprintf_r+0x1d4>)
   20e28:	f000 feec 	bl	21c04 <_printf_i>
   20e2c:	f1b0 3fff 	cmp.w	r0, #4294967295
   20e30:	4680      	mov	r8, r0
   20e32:	d003      	beq.n	20e3c <_svfiprintf_r+0x1b0>
   20e34:	9b09      	ldr	r3, [sp, #36]	; 0x24
   20e36:	4443      	add	r3, r8
   20e38:	9309      	str	r3, [sp, #36]	; 0x24
   20e3a:	e746      	b.n	20cca <_svfiprintf_r+0x3e>
   20e3c:	89ab      	ldrh	r3, [r5, #12]
   20e3e:	065b      	lsls	r3, r3, #25
   20e40:	d401      	bmi.n	20e46 <_svfiprintf_r+0x1ba>
   20e42:	9809      	ldr	r0, [sp, #36]	; 0x24
   20e44:	e001      	b.n	20e4a <_svfiprintf_r+0x1be>
   20e46:	f04f 30ff 	mov.w	r0, #4294967295
   20e4a:	b01d      	add	sp, #116	; 0x74
   20e4c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   20e50:	00027b18 	.word	0x00027b18
   20e54:	00027b1e 	.word	0x00027b1e
   20e58:	00027b22 	.word	0x00027b22
   20e5c:	00021705 	.word	0x00021705
   20e60:	00020bd5 	.word	0x00020bd5

00020e64 <_sungetc_r>:
_sungetc_r():
   20e64:	b538      	push	{r3, r4, r5, lr}
   20e66:	1c4b      	adds	r3, r1, #1
   20e68:	4614      	mov	r4, r2
   20e6a:	d102      	bne.n	20e72 <_sungetc_r+0xe>
   20e6c:	f04f 30ff 	mov.w	r0, #4294967295
   20e70:	bd38      	pop	{r3, r4, r5, pc}
   20e72:	8993      	ldrh	r3, [r2, #12]
   20e74:	b2cd      	uxtb	r5, r1
   20e76:	f023 0320 	bic.w	r3, r3, #32
   20e7a:	8193      	strh	r3, [r2, #12]
   20e7c:	6b53      	ldr	r3, [r2, #52]	; 0x34
   20e7e:	6852      	ldr	r2, [r2, #4]
   20e80:	b183      	cbz	r3, 20ea4 <_sungetc_r+0x40>
   20e82:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   20e84:	429a      	cmp	r2, r3
   20e86:	da07      	bge.n	20e98 <_sungetc_r+0x34>
   20e88:	6823      	ldr	r3, [r4, #0]
   20e8a:	1e5a      	subs	r2, r3, #1
   20e8c:	6022      	str	r2, [r4, #0]
   20e8e:	f803 5c01 	strb.w	r5, [r3, #-1]
   20e92:	6863      	ldr	r3, [r4, #4]
   20e94:	3301      	adds	r3, #1
   20e96:	e01f      	b.n	20ed8 <_sungetc_r+0x74>
   20e98:	4621      	mov	r1, r4
   20e9a:	f000 f9c7 	bl	2122c <__submore>
   20e9e:	2800      	cmp	r0, #0
   20ea0:	d0f2      	beq.n	20e88 <_sungetc_r+0x24>
   20ea2:	e7e3      	b.n	20e6c <_sungetc_r+0x8>
   20ea4:	6921      	ldr	r1, [r4, #16]
   20ea6:	6823      	ldr	r3, [r4, #0]
   20ea8:	b151      	cbz	r1, 20ec0 <_sungetc_r+0x5c>
   20eaa:	428b      	cmp	r3, r1
   20eac:	d908      	bls.n	20ec0 <_sungetc_r+0x5c>
   20eae:	f813 0c01 	ldrb.w	r0, [r3, #-1]
   20eb2:	42a8      	cmp	r0, r5
   20eb4:	d104      	bne.n	20ec0 <_sungetc_r+0x5c>
   20eb6:	3b01      	subs	r3, #1
   20eb8:	3201      	adds	r2, #1
   20eba:	6023      	str	r3, [r4, #0]
   20ebc:	6062      	str	r2, [r4, #4]
   20ebe:	bd38      	pop	{r3, r4, r5, pc}
   20ec0:	63e3      	str	r3, [r4, #60]	; 0x3c
   20ec2:	f104 0344 	add.w	r3, r4, #68	; 0x44
   20ec6:	6363      	str	r3, [r4, #52]	; 0x34
   20ec8:	2303      	movs	r3, #3
   20eca:	63a3      	str	r3, [r4, #56]	; 0x38
   20ecc:	4623      	mov	r3, r4
   20ece:	6422      	str	r2, [r4, #64]	; 0x40
   20ed0:	f803 5f46 	strb.w	r5, [r3, #70]!
   20ed4:	6023      	str	r3, [r4, #0]
   20ed6:	2301      	movs	r3, #1
   20ed8:	6063      	str	r3, [r4, #4]
   20eda:	4628      	mov	r0, r5
   20edc:	bd38      	pop	{r3, r4, r5, pc}

00020ede <__ssrefill_r>:
__ssrefill_r():
   20ede:	b510      	push	{r4, lr}
   20ee0:	460c      	mov	r4, r1
   20ee2:	6b49      	ldr	r1, [r1, #52]	; 0x34
   20ee4:	b169      	cbz	r1, 20f02 <__ssrefill_r+0x24>
   20ee6:	f104 0344 	add.w	r3, r4, #68	; 0x44
   20eea:	4299      	cmp	r1, r3
   20eec:	d001      	beq.n	20ef2 <__ssrefill_r+0x14>
   20eee:	f7fe faf7 	bl	1f4e0 <_free_r>
   20ef2:	6c23      	ldr	r3, [r4, #64]	; 0x40
   20ef4:	2000      	movs	r0, #0
   20ef6:	6360      	str	r0, [r4, #52]	; 0x34
   20ef8:	6063      	str	r3, [r4, #4]
   20efa:	b113      	cbz	r3, 20f02 <__ssrefill_r+0x24>
   20efc:	6be3      	ldr	r3, [r4, #60]	; 0x3c
   20efe:	6023      	str	r3, [r4, #0]
   20f00:	bd10      	pop	{r4, pc}
   20f02:	6923      	ldr	r3, [r4, #16]
   20f04:	f04f 30ff 	mov.w	r0, #4294967295
   20f08:	6023      	str	r3, [r4, #0]
   20f0a:	2300      	movs	r3, #0
   20f0c:	6063      	str	r3, [r4, #4]
   20f0e:	89a3      	ldrh	r3, [r4, #12]
   20f10:	f043 0320 	orr.w	r3, r3, #32
   20f14:	81a3      	strh	r3, [r4, #12]
   20f16:	bd10      	pop	{r4, pc}

00020f18 <__ssvfiscanf_r>:
__ssvfscanf_r():
   20f18:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   20f1c:	f5ad 7d24 	sub.w	sp, sp, #656	; 0x290
   20f20:	9301      	str	r3, [sp, #4]
   20f22:	2300      	movs	r3, #0
   20f24:	9346      	str	r3, [sp, #280]	; 0x118
   20f26:	9347      	str	r3, [sp, #284]	; 0x11c
   20f28:	4b9d      	ldr	r3, [pc, #628]	; (211a0 <__ssvfiscanf_r+0x288>)
   20f2a:	f10d 090c 	add.w	r9, sp, #12
   20f2e:	93a2      	str	r3, [sp, #648]	; 0x288
   20f30:	4b9c      	ldr	r3, [pc, #624]	; (211a4 <__ssvfiscanf_r+0x28c>)
   20f32:	4607      	mov	r7, r0
   20f34:	460c      	mov	r4, r1
   20f36:	4690      	mov	r8, r2
   20f38:	f8cd 9120 	str.w	r9, [sp, #288]	; 0x120
   20f3c:	93a3      	str	r3, [sp, #652]	; 0x28c
   20f3e:	f898 5000 	ldrb.w	r5, [r8]
   20f42:	2d00      	cmp	r5, #0
   20f44:	f000 8124 	beq.w	21190 <__ssvfiscanf_r+0x278>
   20f48:	4997      	ldr	r1, [pc, #604]	; (211a8 <__ssvfiscanf_r+0x290>)
   20f4a:	680b      	ldr	r3, [r1, #0]
   20f4c:	468a      	mov	sl, r1
   20f4e:	442b      	add	r3, r5
   20f50:	785a      	ldrb	r2, [r3, #1]
   20f52:	f002 0208 	and.w	r2, r2, #8
   20f56:	f002 03ff 	and.w	r3, r2, #255	; 0xff
   20f5a:	b1ea      	cbz	r2, 20f98 <__ssvfiscanf_r+0x80>
   20f5c:	6863      	ldr	r3, [r4, #4]
   20f5e:	2b00      	cmp	r3, #0
   20f60:	dd10      	ble.n	20f84 <__ssvfiscanf_r+0x6c>
   20f62:	6823      	ldr	r3, [r4, #0]
   20f64:	f8da 2000 	ldr.w	r2, [sl]
   20f68:	7819      	ldrb	r1, [r3, #0]
   20f6a:	440a      	add	r2, r1
   20f6c:	7852      	ldrb	r2, [r2, #1]
   20f6e:	0715      	lsls	r5, r2, #28
   20f70:	d50e      	bpl.n	20f90 <__ssvfiscanf_r+0x78>
   20f72:	9a47      	ldr	r2, [sp, #284]	; 0x11c
   20f74:	3301      	adds	r3, #1
   20f76:	3201      	adds	r2, #1
   20f78:	9247      	str	r2, [sp, #284]	; 0x11c
   20f7a:	6862      	ldr	r2, [r4, #4]
   20f7c:	6023      	str	r3, [r4, #0]
   20f7e:	3a01      	subs	r2, #1
   20f80:	6062      	str	r2, [r4, #4]
   20f82:	e7eb      	b.n	20f5c <__ssvfiscanf_r+0x44>
   20f84:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   20f86:	4638      	mov	r0, r7
   20f88:	4621      	mov	r1, r4
   20f8a:	4798      	blx	r3
   20f8c:	2800      	cmp	r0, #0
   20f8e:	d0e8      	beq.n	20f62 <__ssvfiscanf_r+0x4a>
   20f90:	f108 0601 	add.w	r6, r8, #1
   20f94:	46b0      	mov	r8, r6
   20f96:	e7d2      	b.n	20f3e <__ssvfiscanf_r+0x26>
   20f98:	2d25      	cmp	r5, #37	; 0x25
   20f9a:	f108 0601 	add.w	r6, r8, #1
   20f9e:	d14f      	bne.n	21040 <__ssvfiscanf_r+0x128>
   20fa0:	9345      	str	r3, [sp, #276]	; 0x114
   20fa2:	9343      	str	r3, [sp, #268]	; 0x10c
   20fa4:	f898 3001 	ldrb.w	r3, [r8, #1]
   20fa8:	2b2a      	cmp	r3, #42	; 0x2a
   20faa:	d103      	bne.n	20fb4 <__ssvfiscanf_r+0x9c>
   20fac:	2310      	movs	r3, #16
   20fae:	9343      	str	r3, [sp, #268]	; 0x10c
   20fb0:	f108 0602 	add.w	r6, r8, #2
   20fb4:	7831      	ldrb	r1, [r6, #0]
   20fb6:	4635      	mov	r5, r6
   20fb8:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
   20fbc:	2b09      	cmp	r3, #9
   20fbe:	f106 0601 	add.w	r6, r6, #1
   20fc2:	d806      	bhi.n	20fd2 <__ssvfiscanf_r+0xba>
   20fc4:	9b45      	ldr	r3, [sp, #276]	; 0x114
   20fc6:	220a      	movs	r2, #10
   20fc8:	fb02 1303 	mla	r3, r2, r3, r1
   20fcc:	3b30      	subs	r3, #48	; 0x30
   20fce:	9345      	str	r3, [sp, #276]	; 0x114
   20fd0:	e7f0      	b.n	20fb4 <__ssvfiscanf_r+0x9c>
   20fd2:	f8df 81dc 	ldr.w	r8, [pc, #476]	; 211b0 <__ssvfiscanf_r+0x298>
   20fd6:	2203      	movs	r2, #3
   20fd8:	4640      	mov	r0, r8
   20fda:	f7fd fdff 	bl	1ebdc <memchr>
   20fde:	b140      	cbz	r0, 20ff2 <__ssvfiscanf_r+0xda>
   20fe0:	ebc8 0800 	rsb	r8, r8, r0
   20fe4:	2001      	movs	r0, #1
   20fe6:	fa00 f008 	lsl.w	r0, r0, r8
   20fea:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   20fec:	4635      	mov	r5, r6
   20fee:	4303      	orrs	r3, r0
   20ff0:	9343      	str	r3, [sp, #268]	; 0x10c
   20ff2:	1c6e      	adds	r6, r5, #1
   20ff4:	782d      	ldrb	r5, [r5, #0]
   20ff6:	2d67      	cmp	r5, #103	; 0x67
   20ff8:	d80f      	bhi.n	2101a <__ssvfiscanf_r+0x102>
   20ffa:	2d65      	cmp	r5, #101	; 0x65
   20ffc:	d278      	bcs.n	210f0 <__ssvfiscanf_r+0x1d8>
   20ffe:	2d5b      	cmp	r5, #91	; 0x5b
   21000:	d054      	beq.n	210ac <__ssvfiscanf_r+0x194>
   21002:	d805      	bhi.n	21010 <__ssvfiscanf_r+0xf8>
   21004:	2d00      	cmp	r5, #0
   21006:	f000 80c5 	beq.w	21194 <__ssvfiscanf_r+0x27c>
   2100a:	2d25      	cmp	r5, #37	; 0x25
   2100c:	d018      	beq.n	21040 <__ssvfiscanf_r+0x128>
   2100e:	e071      	b.n	210f4 <__ssvfiscanf_r+0x1dc>
   21010:	2d63      	cmp	r5, #99	; 0x63
   21012:	d057      	beq.n	210c4 <__ssvfiscanf_r+0x1ac>
   21014:	2d64      	cmp	r5, #100	; 0x64
   21016:	d03f      	beq.n	21098 <__ssvfiscanf_r+0x180>
   21018:	e06c      	b.n	210f4 <__ssvfiscanf_r+0x1dc>
   2101a:	2d70      	cmp	r5, #112	; 0x70
   2101c:	d032      	beq.n	21084 <__ssvfiscanf_r+0x16c>
   2101e:	d807      	bhi.n	21030 <__ssvfiscanf_r+0x118>
   21020:	2d6e      	cmp	r5, #110	; 0x6e
   21022:	d055      	beq.n	210d0 <__ssvfiscanf_r+0x1b8>
   21024:	d83a      	bhi.n	2109c <__ssvfiscanf_r+0x184>
   21026:	2d69      	cmp	r5, #105	; 0x69
   21028:	d164      	bne.n	210f4 <__ssvfiscanf_r+0x1dc>
   2102a:	2300      	movs	r3, #0
   2102c:	9344      	str	r3, [sp, #272]	; 0x110
   2102e:	e039      	b.n	210a4 <__ssvfiscanf_r+0x18c>
   21030:	2d75      	cmp	r5, #117	; 0x75
   21032:	d031      	beq.n	21098 <__ssvfiscanf_r+0x180>
   21034:	2d78      	cmp	r5, #120	; 0x78
   21036:	d029      	beq.n	2108c <__ssvfiscanf_r+0x174>
   21038:	2d73      	cmp	r5, #115	; 0x73
   2103a:	d15b      	bne.n	210f4 <__ssvfiscanf_r+0x1dc>
   2103c:	2302      	movs	r3, #2
   2103e:	e03f      	b.n	210c0 <__ssvfiscanf_r+0x1a8>
   21040:	6863      	ldr	r3, [r4, #4]
   21042:	2b00      	cmp	r3, #0
   21044:	dd0d      	ble.n	21062 <__ssvfiscanf_r+0x14a>
   21046:	6823      	ldr	r3, [r4, #0]
   21048:	781a      	ldrb	r2, [r3, #0]
   2104a:	42aa      	cmp	r2, r5
   2104c:	f040 80a0 	bne.w	21190 <__ssvfiscanf_r+0x278>
   21050:	3301      	adds	r3, #1
   21052:	6862      	ldr	r2, [r4, #4]
   21054:	6023      	str	r3, [r4, #0]
   21056:	9b47      	ldr	r3, [sp, #284]	; 0x11c
   21058:	3a01      	subs	r2, #1
   2105a:	3301      	adds	r3, #1
   2105c:	6062      	str	r2, [r4, #4]
   2105e:	9347      	str	r3, [sp, #284]	; 0x11c
   21060:	e798      	b.n	20f94 <__ssvfiscanf_r+0x7c>
   21062:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   21064:	4638      	mov	r0, r7
   21066:	4621      	mov	r1, r4
   21068:	4798      	blx	r3
   2106a:	2800      	cmp	r0, #0
   2106c:	d0eb      	beq.n	21046 <__ssvfiscanf_r+0x12e>
   2106e:	9846      	ldr	r0, [sp, #280]	; 0x118
   21070:	2800      	cmp	r0, #0
   21072:	f000 808f 	beq.w	21194 <__ssvfiscanf_r+0x27c>
   21076:	89a3      	ldrh	r3, [r4, #12]
   21078:	f013 0f40 	tst.w	r3, #64	; 0x40
   2107c:	bf18      	it	ne
   2107e:	f04f 30ff 	movne.w	r0, #4294967295
   21082:	e089      	b.n	21198 <__ssvfiscanf_r+0x280>
   21084:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   21086:	f043 0320 	orr.w	r3, r3, #32
   2108a:	9343      	str	r3, [sp, #268]	; 0x10c
   2108c:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   2108e:	f443 7300 	orr.w	r3, r3, #512	; 0x200
   21092:	9343      	str	r3, [sp, #268]	; 0x10c
   21094:	2310      	movs	r3, #16
   21096:	e002      	b.n	2109e <__ssvfiscanf_r+0x186>
   21098:	230a      	movs	r3, #10
   2109a:	e000      	b.n	2109e <__ssvfiscanf_r+0x186>
   2109c:	2308      	movs	r3, #8
   2109e:	2d6e      	cmp	r5, #110	; 0x6e
   210a0:	9344      	str	r3, [sp, #272]	; 0x110
   210a2:	dc01      	bgt.n	210a8 <__ssvfiscanf_r+0x190>
   210a4:	2303      	movs	r3, #3
   210a6:	e00b      	b.n	210c0 <__ssvfiscanf_r+0x1a8>
   210a8:	2304      	movs	r3, #4
   210aa:	e009      	b.n	210c0 <__ssvfiscanf_r+0x1a8>
   210ac:	4631      	mov	r1, r6
   210ae:	4648      	mov	r0, r9
   210b0:	f003 fc20 	bl	248f4 <__sccl>
   210b4:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   210b6:	4606      	mov	r6, r0
   210b8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   210bc:	9343      	str	r3, [sp, #268]	; 0x10c
   210be:	2301      	movs	r3, #1
   210c0:	9349      	str	r3, [sp, #292]	; 0x124
   210c2:	e01b      	b.n	210fc <__ssvfiscanf_r+0x1e4>
   210c4:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   210c6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   210ca:	9343      	str	r3, [sp, #268]	; 0x10c
   210cc:	2300      	movs	r3, #0
   210ce:	e7f7      	b.n	210c0 <__ssvfiscanf_r+0x1a8>
   210d0:	9a43      	ldr	r2, [sp, #268]	; 0x10c
   210d2:	06d0      	lsls	r0, r2, #27
   210d4:	f53f af5e 	bmi.w	20f94 <__ssvfiscanf_r+0x7c>
   210d8:	f012 0f01 	tst.w	r2, #1
   210dc:	9a01      	ldr	r2, [sp, #4]
   210de:	9b47      	ldr	r3, [sp, #284]	; 0x11c
   210e0:	f102 0104 	add.w	r1, r2, #4
   210e4:	9101      	str	r1, [sp, #4]
   210e6:	6812      	ldr	r2, [r2, #0]
   210e8:	bf14      	ite	ne
   210ea:	8013      	strhne	r3, [r2, #0]
   210ec:	6013      	streq	r3, [r2, #0]
   210ee:	e751      	b.n	20f94 <__ssvfiscanf_r+0x7c>
   210f0:	2305      	movs	r3, #5
   210f2:	e7e5      	b.n	210c0 <__ssvfiscanf_r+0x1a8>
   210f4:	2303      	movs	r3, #3
   210f6:	9349      	str	r3, [sp, #292]	; 0x124
   210f8:	230a      	movs	r3, #10
   210fa:	9344      	str	r3, [sp, #272]	; 0x110
   210fc:	6863      	ldr	r3, [r4, #4]
   210fe:	2b00      	cmp	r3, #0
   21100:	dd03      	ble.n	2110a <__ssvfiscanf_r+0x1f2>
   21102:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   21104:	0659      	lsls	r1, r3, #25
   21106:	d511      	bpl.n	2112c <__ssvfiscanf_r+0x214>
   21108:	e018      	b.n	2113c <__ssvfiscanf_r+0x224>
   2110a:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   2110c:	4638      	mov	r0, r7
   2110e:	4621      	mov	r1, r4
   21110:	4798      	blx	r3
   21112:	2800      	cmp	r0, #0
   21114:	d0f5      	beq.n	21102 <__ssvfiscanf_r+0x1ea>
   21116:	e7aa      	b.n	2106e <__ssvfiscanf_r+0x156>
   21118:	9a47      	ldr	r2, [sp, #284]	; 0x11c
   2111a:	3201      	adds	r2, #1
   2111c:	9247      	str	r2, [sp, #284]	; 0x11c
   2111e:	6862      	ldr	r2, [r4, #4]
   21120:	3a01      	subs	r2, #1
   21122:	2a00      	cmp	r2, #0
   21124:	6062      	str	r2, [r4, #4]
   21126:	dd13      	ble.n	21150 <__ssvfiscanf_r+0x238>
   21128:	3301      	adds	r3, #1
   2112a:	6023      	str	r3, [r4, #0]
   2112c:	6823      	ldr	r3, [r4, #0]
   2112e:	f8da 2000 	ldr.w	r2, [sl]
   21132:	7819      	ldrb	r1, [r3, #0]
   21134:	440a      	add	r2, r1
   21136:	7852      	ldrb	r2, [r2, #1]
   21138:	0712      	lsls	r2, r2, #28
   2113a:	d4ed      	bmi.n	21118 <__ssvfiscanf_r+0x200>
   2113c:	9b49      	ldr	r3, [sp, #292]	; 0x124
   2113e:	2b02      	cmp	r3, #2
   21140:	dc0d      	bgt.n	2115e <__ssvfiscanf_r+0x246>
   21142:	4638      	mov	r0, r7
   21144:	a943      	add	r1, sp, #268	; 0x10c
   21146:	4622      	mov	r2, r4
   21148:	ab01      	add	r3, sp, #4
   2114a:	f001 f9d1 	bl	224f0 <_scanf_chars>
   2114e:	e019      	b.n	21184 <__ssvfiscanf_r+0x26c>
   21150:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   21152:	4638      	mov	r0, r7
   21154:	4621      	mov	r1, r4
   21156:	4798      	blx	r3
   21158:	2800      	cmp	r0, #0
   2115a:	d0e7      	beq.n	2112c <__ssvfiscanf_r+0x214>
   2115c:	e787      	b.n	2106e <__ssvfiscanf_r+0x156>
   2115e:	2b04      	cmp	r3, #4
   21160:	dc06      	bgt.n	21170 <__ssvfiscanf_r+0x258>
   21162:	4638      	mov	r0, r7
   21164:	a943      	add	r1, sp, #268	; 0x10c
   21166:	4622      	mov	r2, r4
   21168:	ab01      	add	r3, sp, #4
   2116a:	f001 fa21 	bl	225b0 <_scanf_i>
   2116e:	e009      	b.n	21184 <__ssvfiscanf_r+0x26c>
   21170:	4b0e      	ldr	r3, [pc, #56]	; (211ac <__ssvfiscanf_r+0x294>)
   21172:	2b00      	cmp	r3, #0
   21174:	f43f af0e 	beq.w	20f94 <__ssvfiscanf_r+0x7c>
   21178:	4638      	mov	r0, r7
   2117a:	a943      	add	r1, sp, #268	; 0x10c
   2117c:	4622      	mov	r2, r4
   2117e:	ab01      	add	r3, sp, #4
   21180:	f000 ffca 	bl	22118 <_scanf_float>
   21184:	2801      	cmp	r0, #1
   21186:	d003      	beq.n	21190 <__ssvfiscanf_r+0x278>
   21188:	2802      	cmp	r0, #2
   2118a:	f47f af03 	bne.w	20f94 <__ssvfiscanf_r+0x7c>
   2118e:	e76e      	b.n	2106e <__ssvfiscanf_r+0x156>
   21190:	9846      	ldr	r0, [sp, #280]	; 0x118
   21192:	e001      	b.n	21198 <__ssvfiscanf_r+0x280>
   21194:	f04f 30ff 	mov.w	r0, #4294967295
   21198:	f50d 7d24 	add.w	sp, sp, #656	; 0x290
   2119c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   211a0:	00020e65 	.word	0x00020e65
   211a4:	00020edf 	.word	0x00020edf
   211a8:	2007c108 	.word	0x2007c108
   211ac:	00022119 	.word	0x00022119
   211b0:	00027b1e 	.word	0x00027b1e

000211b4 <write>:
write():
   211b4:	b530      	push	{r4, r5, lr}
   211b6:	4613      	mov	r3, r2
   211b8:	4a04      	ldr	r2, [pc, #16]	; (211cc <write+0x18>)
   211ba:	4605      	mov	r5, r0
   211bc:	460c      	mov	r4, r1
   211be:	6810      	ldr	r0, [r2, #0]
   211c0:	4629      	mov	r1, r5
   211c2:	4622      	mov	r2, r4
   211c4:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
   211c8:	f001 bba8 	b.w	2291c <_write_r>
   211cc:	2007c16c 	.word	0x2007c16c

000211d0 <time>:
time():
   211d0:	b513      	push	{r0, r1, r4, lr}
   211d2:	4b08      	ldr	r3, [pc, #32]	; (211f4 <time+0x24>)
   211d4:	4604      	mov	r4, r0
   211d6:	4669      	mov	r1, sp
   211d8:	6818      	ldr	r0, [r3, #0]
   211da:	2200      	movs	r2, #0
   211dc:	f002 feac 	bl	23f38 <_gettimeofday_r>
   211e0:	2800      	cmp	r0, #0
   211e2:	db03      	blt.n	211ec <time+0x1c>
   211e4:	9800      	ldr	r0, [sp, #0]
   211e6:	b11c      	cbz	r4, 211f0 <time+0x20>
   211e8:	6020      	str	r0, [r4, #0]
   211ea:	e001      	b.n	211f0 <time+0x20>
   211ec:	f04f 30ff 	mov.w	r0, #4294967295
   211f0:	b002      	add	sp, #8
   211f2:	bd10      	pop	{r4, pc}
   211f4:	2007c16c 	.word	0x2007c16c

000211f8 <tolower>:
tolower():
   211f8:	4b04      	ldr	r3, [pc, #16]	; (2120c <tolower+0x14>)
   211fa:	681b      	ldr	r3, [r3, #0]
   211fc:	4403      	add	r3, r0
   211fe:	785b      	ldrb	r3, [r3, #1]
   21200:	f003 0303 	and.w	r3, r3, #3
   21204:	2b01      	cmp	r3, #1
   21206:	bf08      	it	eq
   21208:	3020      	addeq	r0, #32
   2120a:	4770      	bx	lr
   2120c:	2007c108 	.word	0x2007c108

00021210 <toupper>:
toupper():
   21210:	4b04      	ldr	r3, [pc, #16]	; (21224 <toupper+0x14>)
   21212:	681b      	ldr	r3, [r3, #0]
   21214:	4403      	add	r3, r0
   21216:	785b      	ldrb	r3, [r3, #1]
   21218:	f003 0303 	and.w	r3, r3, #3
   2121c:	2b02      	cmp	r3, #2
   2121e:	bf08      	it	eq
   21220:	3820      	subeq	r0, #32
   21222:	4770      	bx	lr
   21224:	2007c108 	.word	0x2007c108

00021228 <__tz_lock>:
__tz_lock():
   21228:	4770      	bx	lr

0002122a <__tz_unlock>:
__tz_unlock():
   2122a:	4770      	bx	lr

0002122c <__submore>:
__submore():
   2122c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   21230:	460c      	mov	r4, r1
   21232:	6b49      	ldr	r1, [r1, #52]	; 0x34
   21234:	f104 0344 	add.w	r3, r4, #68	; 0x44
   21238:	4299      	cmp	r1, r3
   2123a:	d11a      	bne.n	21272 <__submore+0x46>
   2123c:	f44f 6180 	mov.w	r1, #1024	; 0x400
   21240:	f7fe f9c0 	bl	1f5c4 <_malloc_r>
   21244:	b918      	cbnz	r0, 2124e <__submore+0x22>
   21246:	f04f 30ff 	mov.w	r0, #4294967295
   2124a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   2124e:	f44f 6380 	mov.w	r3, #1024	; 0x400
   21252:	63a3      	str	r3, [r4, #56]	; 0x38
   21254:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
   21258:	6360      	str	r0, [r4, #52]	; 0x34
   2125a:	f880 33ff 	strb.w	r3, [r0, #1023]	; 0x3ff
   2125e:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
   21262:	f200 30fd 	addw	r0, r0, #1021	; 0x3fd
   21266:	7043      	strb	r3, [r0, #1]
   21268:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
   2126c:	7003      	strb	r3, [r0, #0]
   2126e:	6020      	str	r0, [r4, #0]
   21270:	e012      	b.n	21298 <__submore+0x6c>
   21272:	6ba6      	ldr	r6, [r4, #56]	; 0x38
   21274:	0077      	lsls	r7, r6, #1
   21276:	463a      	mov	r2, r7
   21278:	f003 fae1 	bl	2483e <_realloc_r>
   2127c:	4605      	mov	r5, r0
   2127e:	2800      	cmp	r0, #0
   21280:	d0e1      	beq.n	21246 <__submore+0x1a>
   21282:	eb00 0806 	add.w	r8, r0, r6
   21286:	4640      	mov	r0, r8
   21288:	4629      	mov	r1, r5
   2128a:	4632      	mov	r2, r6
   2128c:	f7fd fcc3 	bl	1ec16 <memcpy>
   21290:	f8c4 8000 	str.w	r8, [r4]
   21294:	6365      	str	r5, [r4, #52]	; 0x34
   21296:	63a7      	str	r7, [r4, #56]	; 0x38
   21298:	2000      	movs	r0, #0
   2129a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

000212a0 <_ungetc_r>:
_ungetc_r():
   212a0:	1c4b      	adds	r3, r1, #1
   212a2:	b570      	push	{r4, r5, r6, lr}
   212a4:	4605      	mov	r5, r0
   212a6:	460e      	mov	r6, r1
   212a8:	4614      	mov	r4, r2
   212aa:	d102      	bne.n	212b2 <_ungetc_r+0x12>
   212ac:	f04f 30ff 	mov.w	r0, #4294967295
   212b0:	bd70      	pop	{r4, r5, r6, pc}
   212b2:	b118      	cbz	r0, 212bc <_ungetc_r+0x1c>
   212b4:	6983      	ldr	r3, [r0, #24]
   212b6:	b90b      	cbnz	r3, 212bc <_ungetc_r+0x1c>
   212b8:	f7fd fba0 	bl	1e9fc <__sinit>
   212bc:	4b2e      	ldr	r3, [pc, #184]	; (21378 <_ungetc_r+0xd8>)
   212be:	429c      	cmp	r4, r3
   212c0:	d101      	bne.n	212c6 <_ungetc_r+0x26>
   212c2:	686c      	ldr	r4, [r5, #4]
   212c4:	e008      	b.n	212d8 <_ungetc_r+0x38>
   212c6:	4b2d      	ldr	r3, [pc, #180]	; (2137c <_ungetc_r+0xdc>)
   212c8:	429c      	cmp	r4, r3
   212ca:	d101      	bne.n	212d0 <_ungetc_r+0x30>
   212cc:	68ac      	ldr	r4, [r5, #8]
   212ce:	e003      	b.n	212d8 <_ungetc_r+0x38>
   212d0:	4b2b      	ldr	r3, [pc, #172]	; (21380 <_ungetc_r+0xe0>)
   212d2:	429c      	cmp	r4, r3
   212d4:	bf08      	it	eq
   212d6:	68ec      	ldreq	r4, [r5, #12]
   212d8:	89a3      	ldrh	r3, [r4, #12]
   212da:	f023 0320 	bic.w	r3, r3, #32
   212de:	b29b      	uxth	r3, r3
   212e0:	81a3      	strh	r3, [r4, #12]
   212e2:	b29b      	uxth	r3, r3
   212e4:	0759      	lsls	r1, r3, #29
   212e6:	d413      	bmi.n	21310 <_ungetc_r+0x70>
   212e8:	06da      	lsls	r2, r3, #27
   212ea:	d5df      	bpl.n	212ac <_ungetc_r+0xc>
   212ec:	071b      	lsls	r3, r3, #28
   212ee:	d50b      	bpl.n	21308 <_ungetc_r+0x68>
   212f0:	4628      	mov	r0, r5
   212f2:	4621      	mov	r1, r4
   212f4:	f002 fac8 	bl	23888 <_fflush_r>
   212f8:	2800      	cmp	r0, #0
   212fa:	d1d7      	bne.n	212ac <_ungetc_r+0xc>
   212fc:	89a3      	ldrh	r3, [r4, #12]
   212fe:	60a0      	str	r0, [r4, #8]
   21300:	f023 0308 	bic.w	r3, r3, #8
   21304:	81a3      	strh	r3, [r4, #12]
   21306:	61a0      	str	r0, [r4, #24]
   21308:	89a3      	ldrh	r3, [r4, #12]
   2130a:	f043 0304 	orr.w	r3, r3, #4
   2130e:	81a3      	strh	r3, [r4, #12]
   21310:	6b63      	ldr	r3, [r4, #52]	; 0x34
   21312:	b2f6      	uxtb	r6, r6
   21314:	6862      	ldr	r2, [r4, #4]
   21316:	b18b      	cbz	r3, 2133c <_ungetc_r+0x9c>
   21318:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   2131a:	429a      	cmp	r2, r3
   2131c:	da07      	bge.n	2132e <_ungetc_r+0x8e>
   2131e:	6823      	ldr	r3, [r4, #0]
   21320:	1e5a      	subs	r2, r3, #1
   21322:	6022      	str	r2, [r4, #0]
   21324:	f803 6c01 	strb.w	r6, [r3, #-1]
   21328:	6863      	ldr	r3, [r4, #4]
   2132a:	3301      	adds	r3, #1
   2132c:	e020      	b.n	21370 <_ungetc_r+0xd0>
   2132e:	4628      	mov	r0, r5
   21330:	4621      	mov	r1, r4
   21332:	f7ff ff7b 	bl	2122c <__submore>
   21336:	2800      	cmp	r0, #0
   21338:	d0f1      	beq.n	2131e <_ungetc_r+0x7e>
   2133a:	e7b7      	b.n	212ac <_ungetc_r+0xc>
   2133c:	6921      	ldr	r1, [r4, #16]
   2133e:	6823      	ldr	r3, [r4, #0]
   21340:	b151      	cbz	r1, 21358 <_ungetc_r+0xb8>
   21342:	428b      	cmp	r3, r1
   21344:	d908      	bls.n	21358 <_ungetc_r+0xb8>
   21346:	f813 0c01 	ldrb.w	r0, [r3, #-1]
   2134a:	42b0      	cmp	r0, r6
   2134c:	d104      	bne.n	21358 <_ungetc_r+0xb8>
   2134e:	3b01      	subs	r3, #1
   21350:	3201      	adds	r2, #1
   21352:	6023      	str	r3, [r4, #0]
   21354:	6062      	str	r2, [r4, #4]
   21356:	bd70      	pop	{r4, r5, r6, pc}
   21358:	63e3      	str	r3, [r4, #60]	; 0x3c
   2135a:	f104 0344 	add.w	r3, r4, #68	; 0x44
   2135e:	6363      	str	r3, [r4, #52]	; 0x34
   21360:	2303      	movs	r3, #3
   21362:	63a3      	str	r3, [r4, #56]	; 0x38
   21364:	4623      	mov	r3, r4
   21366:	6422      	str	r2, [r4, #64]	; 0x40
   21368:	f803 6f46 	strb.w	r6, [r3, #70]!
   2136c:	6023      	str	r3, [r4, #0]
   2136e:	2301      	movs	r3, #1
   21370:	6063      	str	r3, [r4, #4]
   21372:	4630      	mov	r0, r6
   21374:	bd70      	pop	{r4, r5, r6, pc}
   21376:	bf00      	nop
   21378:	00027994 	.word	0x00027994
   2137c:	000279b4 	.word	0x000279b4
   21380:	000279d4 	.word	0x000279d4

00021384 <__sfputc_r>:
__sfputc_r():
   21384:	6893      	ldr	r3, [r2, #8]
   21386:	b510      	push	{r4, lr}
   21388:	3b01      	subs	r3, #1
   2138a:	2b00      	cmp	r3, #0
   2138c:	6093      	str	r3, [r2, #8]
   2138e:	da05      	bge.n	2139c <__sfputc_r+0x18>
   21390:	6994      	ldr	r4, [r2, #24]
   21392:	42a3      	cmp	r3, r4
   21394:	db08      	blt.n	213a8 <__sfputc_r+0x24>
   21396:	b2cb      	uxtb	r3, r1
   21398:	2b0a      	cmp	r3, #10
   2139a:	d005      	beq.n	213a8 <__sfputc_r+0x24>
   2139c:	6813      	ldr	r3, [r2, #0]
   2139e:	1c58      	adds	r0, r3, #1
   213a0:	6010      	str	r0, [r2, #0]
   213a2:	7019      	strb	r1, [r3, #0]
   213a4:	b2c8      	uxtb	r0, r1
   213a6:	bd10      	pop	{r4, pc}
   213a8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   213ac:	f001 ba62 	b.w	22874 <__swbuf_r>

000213b0 <__sfputs_r>:
__sfputs_r():
   213b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   213b2:	4605      	mov	r5, r0
   213b4:	460e      	mov	r6, r1
   213b6:	4614      	mov	r4, r2
   213b8:	18d7      	adds	r7, r2, r3
   213ba:	42bc      	cmp	r4, r7
   213bc:	d008      	beq.n	213d0 <__sfputs_r+0x20>
   213be:	4628      	mov	r0, r5
   213c0:	f814 1b01 	ldrb.w	r1, [r4], #1
   213c4:	4632      	mov	r2, r6
   213c6:	f7ff ffdd 	bl	21384 <__sfputc_r>
   213ca:	1c43      	adds	r3, r0, #1
   213cc:	d1f5      	bne.n	213ba <__sfputs_r+0xa>
   213ce:	e000      	b.n	213d2 <__sfputs_r+0x22>
   213d0:	2000      	movs	r0, #0
   213d2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

000213d4 <_vfiprintf_r>:
_vfiprintf_r():
   213d4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   213d8:	b09d      	sub	sp, #116	; 0x74
   213da:	460d      	mov	r5, r1
   213dc:	4617      	mov	r7, r2
   213de:	9303      	str	r3, [sp, #12]
   213e0:	4606      	mov	r6, r0
   213e2:	b118      	cbz	r0, 213ec <_vfiprintf_r+0x18>
   213e4:	6983      	ldr	r3, [r0, #24]
   213e6:	b90b      	cbnz	r3, 213ec <_vfiprintf_r+0x18>
   213e8:	f7fd fb08 	bl	1e9fc <__sinit>
   213ec:	4b73      	ldr	r3, [pc, #460]	; (215bc <_vfiprintf_r+0x1e8>)
   213ee:	429d      	cmp	r5, r3
   213f0:	d101      	bne.n	213f6 <_vfiprintf_r+0x22>
   213f2:	6875      	ldr	r5, [r6, #4]
   213f4:	e008      	b.n	21408 <_vfiprintf_r+0x34>
   213f6:	4b72      	ldr	r3, [pc, #456]	; (215c0 <_vfiprintf_r+0x1ec>)
   213f8:	429d      	cmp	r5, r3
   213fa:	d101      	bne.n	21400 <_vfiprintf_r+0x2c>
   213fc:	68b5      	ldr	r5, [r6, #8]
   213fe:	e003      	b.n	21408 <_vfiprintf_r+0x34>
   21400:	4b70      	ldr	r3, [pc, #448]	; (215c4 <_vfiprintf_r+0x1f0>)
   21402:	429d      	cmp	r5, r3
   21404:	bf08      	it	eq
   21406:	68f5      	ldreq	r5, [r6, #12]
   21408:	89ab      	ldrh	r3, [r5, #12]
   2140a:	0718      	lsls	r0, r3, #28
   2140c:	d50a      	bpl.n	21424 <_vfiprintf_r+0x50>
   2140e:	692b      	ldr	r3, [r5, #16]
   21410:	b143      	cbz	r3, 21424 <_vfiprintf_r+0x50>
   21412:	2300      	movs	r3, #0
   21414:	9309      	str	r3, [sp, #36]	; 0x24
   21416:	2320      	movs	r3, #32
   21418:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
   2141c:	2330      	movs	r3, #48	; 0x30
   2141e:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
   21422:	e038      	b.n	21496 <_vfiprintf_r+0xc2>
   21424:	4630      	mov	r0, r6
   21426:	4629      	mov	r1, r5
   21428:	f001 fa8a 	bl	22940 <__swsetup_r>
   2142c:	2800      	cmp	r0, #0
   2142e:	d0f0      	beq.n	21412 <_vfiprintf_r+0x3e>
   21430:	f04f 30ff 	mov.w	r0, #4294967295
   21434:	e0be      	b.n	215b4 <_vfiprintf_r+0x1e0>
   21436:	9a03      	ldr	r2, [sp, #12]
   21438:	1d11      	adds	r1, r2, #4
   2143a:	6812      	ldr	r2, [r2, #0]
   2143c:	9103      	str	r1, [sp, #12]
   2143e:	2a00      	cmp	r2, #0
   21440:	db70      	blt.n	21524 <_vfiprintf_r+0x150>
   21442:	9207      	str	r2, [sp, #28]
   21444:	3401      	adds	r4, #1
   21446:	7823      	ldrb	r3, [r4, #0]
   21448:	2b2e      	cmp	r3, #46	; 0x2e
   2144a:	d07d      	beq.n	21548 <_vfiprintf_r+0x174>
   2144c:	4f5e      	ldr	r7, [pc, #376]	; (215c8 <_vfiprintf_r+0x1f4>)
   2144e:	7821      	ldrb	r1, [r4, #0]
   21450:	4638      	mov	r0, r7
   21452:	2203      	movs	r2, #3
   21454:	f7fd fbc2 	bl	1ebdc <memchr>
   21458:	b130      	cbz	r0, 21468 <_vfiprintf_r+0x94>
   2145a:	1bc7      	subs	r7, r0, r7
   2145c:	2040      	movs	r0, #64	; 0x40
   2145e:	40b8      	lsls	r0, r7
   21460:	9b04      	ldr	r3, [sp, #16]
   21462:	3401      	adds	r4, #1
   21464:	4303      	orrs	r3, r0
   21466:	9304      	str	r3, [sp, #16]
   21468:	7821      	ldrb	r1, [r4, #0]
   2146a:	4858      	ldr	r0, [pc, #352]	; (215cc <_vfiprintf_r+0x1f8>)
   2146c:	2206      	movs	r2, #6
   2146e:	1c67      	adds	r7, r4, #1
   21470:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
   21474:	f7fd fbb2 	bl	1ebdc <memchr>
   21478:	2800      	cmp	r0, #0
   2147a:	f000 8089 	beq.w	21590 <_vfiprintf_r+0x1bc>
   2147e:	4b54      	ldr	r3, [pc, #336]	; (215d0 <_vfiprintf_r+0x1fc>)
   21480:	2b00      	cmp	r3, #0
   21482:	d17c      	bne.n	2157e <_vfiprintf_r+0x1aa>
   21484:	9b03      	ldr	r3, [sp, #12]
   21486:	3307      	adds	r3, #7
   21488:	f023 0307 	bic.w	r3, r3, #7
   2148c:	3308      	adds	r3, #8
   2148e:	9303      	str	r3, [sp, #12]
   21490:	9b09      	ldr	r3, [sp, #36]	; 0x24
   21492:	4443      	add	r3, r8
   21494:	9309      	str	r3, [sp, #36]	; 0x24
   21496:	463b      	mov	r3, r7
   21498:	461c      	mov	r4, r3
   2149a:	f813 2b01 	ldrb.w	r2, [r3], #1
   2149e:	b91a      	cbnz	r2, 214a8 <_vfiprintf_r+0xd4>
   214a0:	ebb4 0907 	subs.w	r9, r4, r7
   214a4:	d00e      	beq.n	214c4 <_vfiprintf_r+0xf0>
   214a6:	e002      	b.n	214ae <_vfiprintf_r+0xda>
   214a8:	2a25      	cmp	r2, #37	; 0x25
   214aa:	d1f5      	bne.n	21498 <_vfiprintf_r+0xc4>
   214ac:	e7f8      	b.n	214a0 <_vfiprintf_r+0xcc>
   214ae:	4630      	mov	r0, r6
   214b0:	4629      	mov	r1, r5
   214b2:	463a      	mov	r2, r7
   214b4:	464b      	mov	r3, r9
   214b6:	f7ff ff7b 	bl	213b0 <__sfputs_r>
   214ba:	3001      	adds	r0, #1
   214bc:	d075      	beq.n	215aa <_vfiprintf_r+0x1d6>
   214be:	9b09      	ldr	r3, [sp, #36]	; 0x24
   214c0:	444b      	add	r3, r9
   214c2:	9309      	str	r3, [sp, #36]	; 0x24
   214c4:	7823      	ldrb	r3, [r4, #0]
   214c6:	2b00      	cmp	r3, #0
   214c8:	d06f      	beq.n	215aa <_vfiprintf_r+0x1d6>
   214ca:	2300      	movs	r3, #0
   214cc:	f04f 32ff 	mov.w	r2, #4294967295
   214d0:	9304      	str	r3, [sp, #16]
   214d2:	9307      	str	r3, [sp, #28]
   214d4:	9205      	str	r2, [sp, #20]
   214d6:	9306      	str	r3, [sp, #24]
   214d8:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
   214dc:	931a      	str	r3, [sp, #104]	; 0x68
   214de:	f104 0901 	add.w	r9, r4, #1
   214e2:	4f3c      	ldr	r7, [pc, #240]	; (215d4 <_vfiprintf_r+0x200>)
   214e4:	464c      	mov	r4, r9
   214e6:	4638      	mov	r0, r7
   214e8:	7821      	ldrb	r1, [r4, #0]
   214ea:	2205      	movs	r2, #5
   214ec:	f7fd fb76 	bl	1ebdc <memchr>
   214f0:	f109 0901 	add.w	r9, r9, #1
   214f4:	9b04      	ldr	r3, [sp, #16]
   214f6:	b128      	cbz	r0, 21504 <_vfiprintf_r+0x130>
   214f8:	1bc7      	subs	r7, r0, r7
   214fa:	2001      	movs	r0, #1
   214fc:	40b8      	lsls	r0, r7
   214fe:	4303      	orrs	r3, r0
   21500:	9304      	str	r3, [sp, #16]
   21502:	e7ee      	b.n	214e2 <_vfiprintf_r+0x10e>
   21504:	06d9      	lsls	r1, r3, #27
   21506:	bf44      	itt	mi
   21508:	2220      	movmi	r2, #32
   2150a:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
   2150e:	071a      	lsls	r2, r3, #28
   21510:	bf44      	itt	mi
   21512:	222b      	movmi	r2, #43	; 0x2b
   21514:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
   21518:	7822      	ldrb	r2, [r4, #0]
   2151a:	2a2a      	cmp	r2, #42	; 0x2a
   2151c:	d08b      	beq.n	21436 <_vfiprintf_r+0x62>
   2151e:	9b07      	ldr	r3, [sp, #28]
   21520:	4621      	mov	r1, r4
   21522:	e005      	b.n	21530 <_vfiprintf_r+0x15c>
   21524:	4252      	negs	r2, r2
   21526:	f043 0302 	orr.w	r3, r3, #2
   2152a:	9207      	str	r2, [sp, #28]
   2152c:	9304      	str	r3, [sp, #16]
   2152e:	e789      	b.n	21444 <_vfiprintf_r+0x70>
   21530:	460c      	mov	r4, r1
   21532:	7822      	ldrb	r2, [r4, #0]
   21534:	3101      	adds	r1, #1
   21536:	3a30      	subs	r2, #48	; 0x30
   21538:	2a09      	cmp	r2, #9
   2153a:	d803      	bhi.n	21544 <_vfiprintf_r+0x170>
   2153c:	200a      	movs	r0, #10
   2153e:	fb00 2303 	mla	r3, r0, r3, r2
   21542:	e7f5      	b.n	21530 <_vfiprintf_r+0x15c>
   21544:	9307      	str	r3, [sp, #28]
   21546:	e77e      	b.n	21446 <_vfiprintf_r+0x72>
   21548:	7863      	ldrb	r3, [r4, #1]
   2154a:	2b2a      	cmp	r3, #42	; 0x2a
   2154c:	d109      	bne.n	21562 <_vfiprintf_r+0x18e>
   2154e:	9b03      	ldr	r3, [sp, #12]
   21550:	3402      	adds	r4, #2
   21552:	1d1a      	adds	r2, r3, #4
   21554:	681b      	ldr	r3, [r3, #0]
   21556:	9203      	str	r2, [sp, #12]
   21558:	2b00      	cmp	r3, #0
   2155a:	bfb8      	it	lt
   2155c:	f04f 33ff 	movlt.w	r3, #4294967295
   21560:	e00b      	b.n	2157a <_vfiprintf_r+0x1a6>
   21562:	1c61      	adds	r1, r4, #1
   21564:	2300      	movs	r3, #0
   21566:	460c      	mov	r4, r1
   21568:	7822      	ldrb	r2, [r4, #0]
   2156a:	3101      	adds	r1, #1
   2156c:	3a30      	subs	r2, #48	; 0x30
   2156e:	2a09      	cmp	r2, #9
   21570:	d803      	bhi.n	2157a <_vfiprintf_r+0x1a6>
   21572:	200a      	movs	r0, #10
   21574:	fb00 2303 	mla	r3, r0, r3, r2
   21578:	e7f5      	b.n	21566 <_vfiprintf_r+0x192>
   2157a:	9305      	str	r3, [sp, #20]
   2157c:	e766      	b.n	2144c <_vfiprintf_r+0x78>
   2157e:	ab03      	add	r3, sp, #12
   21580:	9300      	str	r3, [sp, #0]
   21582:	4630      	mov	r0, r6
   21584:	a904      	add	r1, sp, #16
   21586:	462a      	mov	r2, r5
   21588:	4b13      	ldr	r3, [pc, #76]	; (215d8 <_vfiprintf_r+0x204>)
   2158a:	f000 f8bb 	bl	21704 <_printf_float>
   2158e:	e007      	b.n	215a0 <_vfiprintf_r+0x1cc>
   21590:	ab03      	add	r3, sp, #12
   21592:	9300      	str	r3, [sp, #0]
   21594:	4630      	mov	r0, r6
   21596:	a904      	add	r1, sp, #16
   21598:	462a      	mov	r2, r5
   2159a:	4b0f      	ldr	r3, [pc, #60]	; (215d8 <_vfiprintf_r+0x204>)
   2159c:	f000 fb32 	bl	21c04 <_printf_i>
   215a0:	f1b0 3fff 	cmp.w	r0, #4294967295
   215a4:	4680      	mov	r8, r0
   215a6:	f47f af73 	bne.w	21490 <_vfiprintf_r+0xbc>
   215aa:	89ab      	ldrh	r3, [r5, #12]
   215ac:	065b      	lsls	r3, r3, #25
   215ae:	f53f af3f 	bmi.w	21430 <_vfiprintf_r+0x5c>
   215b2:	9809      	ldr	r0, [sp, #36]	; 0x24
   215b4:	b01d      	add	sp, #116	; 0x74
   215b6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   215ba:	bf00      	nop
   215bc:	00027994 	.word	0x00027994
   215c0:	000279b4 	.word	0x000279b4
   215c4:	000279d4 	.word	0x000279d4
   215c8:	00027b1e 	.word	0x00027b1e
   215cc:	00027b22 	.word	0x00027b22
   215d0:	00021705 	.word	0x00021705
   215d4:	00027b18 	.word	0x00027b18
   215d8:	000213b1 	.word	0x000213b1

000215dc <__cvt>:
__cvt():
   215dc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   215e0:	2b00      	cmp	r3, #0
   215e2:	b088      	sub	sp, #32
   215e4:	4614      	mov	r4, r2
   215e6:	461d      	mov	r5, r3
   215e8:	9e10      	ldr	r6, [sp, #64]	; 0x40
   215ea:	9912      	ldr	r1, [sp, #72]	; 0x48
   215ec:	9f13      	ldr	r7, [sp, #76]	; 0x4c
   215ee:	da05      	bge.n	215fc <__cvt+0x20>
   215f0:	f105 4300 	add.w	r3, r5, #2147483648	; 0x80000000
   215f4:	461d      	mov	r5, r3
   215f6:	4614      	mov	r4, r2
   215f8:	232d      	movs	r3, #45	; 0x2d
   215fa:	e000      	b.n	215fe <__cvt+0x22>
   215fc:	2300      	movs	r3, #0
   215fe:	700b      	strb	r3, [r1, #0]
   21600:	9b14      	ldr	r3, [sp, #80]	; 0x50
   21602:	f023 0a20 	bic.w	sl, r3, #32
   21606:	f1ba 0f46 	cmp.w	sl, #70	; 0x46
   2160a:	d004      	beq.n	21616 <__cvt+0x3a>
   2160c:	f1ba 0f45 	cmp.w	sl, #69	; 0x45
   21610:	d103      	bne.n	2161a <__cvt+0x3e>
   21612:	3601      	adds	r6, #1
   21614:	e001      	b.n	2161a <__cvt+0x3e>
   21616:	2303      	movs	r3, #3
   21618:	e000      	b.n	2161c <__cvt+0x40>
   2161a:	2302      	movs	r3, #2
   2161c:	e88d 00c8 	stmia.w	sp, {r3, r6, r7}
   21620:	ab06      	add	r3, sp, #24
   21622:	9303      	str	r3, [sp, #12]
   21624:	ab07      	add	r3, sp, #28
   21626:	9304      	str	r3, [sp, #16]
   21628:	4622      	mov	r2, r4
   2162a:	462b      	mov	r3, r5
   2162c:	f001 fae8 	bl	22c00 <_dtoa_r>
   21630:	f1ba 0f47 	cmp.w	sl, #71	; 0x47
   21634:	4680      	mov	r8, r0
   21636:	d102      	bne.n	2163e <__cvt+0x62>
   21638:	9b11      	ldr	r3, [sp, #68]	; 0x44
   2163a:	07db      	lsls	r3, r3, #31
   2163c:	d525      	bpl.n	2168a <__cvt+0xae>
   2163e:	f1ba 0f46 	cmp.w	sl, #70	; 0x46
   21642:	eb08 0906 	add.w	r9, r8, r6
   21646:	d10f      	bne.n	21668 <__cvt+0x8c>
   21648:	f898 3000 	ldrb.w	r3, [r8]
   2164c:	2b30      	cmp	r3, #48	; 0x30
   2164e:	d109      	bne.n	21664 <__cvt+0x88>
   21650:	4620      	mov	r0, r4
   21652:	4629      	mov	r1, r5
   21654:	2200      	movs	r2, #0
   21656:	2300      	movs	r3, #0
   21658:	f003 fa7c 	bl	24b54 <__aeabi_dcmpeq>
   2165c:	b910      	cbnz	r0, 21664 <__cvt+0x88>
   2165e:	f1c6 0601 	rsb	r6, r6, #1
   21662:	603e      	str	r6, [r7, #0]
   21664:	683b      	ldr	r3, [r7, #0]
   21666:	4499      	add	r9, r3
   21668:	4620      	mov	r0, r4
   2166a:	4629      	mov	r1, r5
   2166c:	2200      	movs	r2, #0
   2166e:	2300      	movs	r3, #0
   21670:	f003 fa70 	bl	24b54 <__aeabi_dcmpeq>
   21674:	b108      	cbz	r0, 2167a <__cvt+0x9e>
   21676:	f8cd 901c 	str.w	r9, [sp, #28]
   2167a:	9b07      	ldr	r3, [sp, #28]
   2167c:	454b      	cmp	r3, r9
   2167e:	d204      	bcs.n	2168a <__cvt+0xae>
   21680:	1c5a      	adds	r2, r3, #1
   21682:	9207      	str	r2, [sp, #28]
   21684:	2230      	movs	r2, #48	; 0x30
   21686:	701a      	strb	r2, [r3, #0]
   21688:	e7f7      	b.n	2167a <__cvt+0x9e>
   2168a:	9b07      	ldr	r3, [sp, #28]
   2168c:	4640      	mov	r0, r8
   2168e:	ebc8 0203 	rsb	r2, r8, r3
   21692:	9b15      	ldr	r3, [sp, #84]	; 0x54
   21694:	601a      	str	r2, [r3, #0]
   21696:	b008      	add	sp, #32
   21698:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0002169c <__exponent>:
__exponent():
   2169c:	b573      	push	{r0, r1, r4, r5, r6, lr}
   2169e:	4603      	mov	r3, r0
   216a0:	2900      	cmp	r1, #0
   216a2:	f803 2b02 	strb.w	r2, [r3], #2
   216a6:	da03      	bge.n	216b0 <__exponent+0x14>
   216a8:	4249      	negs	r1, r1
   216aa:	461a      	mov	r2, r3
   216ac:	242d      	movs	r4, #45	; 0x2d
   216ae:	e001      	b.n	216b4 <__exponent+0x18>
   216b0:	461a      	mov	r2, r3
   216b2:	242b      	movs	r4, #43	; 0x2b
   216b4:	2909      	cmp	r1, #9
   216b6:	7044      	strb	r4, [r0, #1]
   216b8:	dd1b      	ble.n	216f2 <__exponent+0x56>
   216ba:	f10d 0406 	add.w	r4, sp, #6
   216be:	260a      	movs	r6, #10
   216c0:	fb91 f5f6 	sdiv	r5, r1, r6
   216c4:	fb06 1115 	mls	r1, r6, r5, r1
   216c8:	2d09      	cmp	r5, #9
   216ca:	f101 0130 	add.w	r1, r1, #48	; 0x30
   216ce:	4623      	mov	r3, r4
   216d0:	f804 1901 	strb.w	r1, [r4], #-1
   216d4:	4629      	mov	r1, r5
   216d6:	dcf2      	bgt.n	216be <__exponent+0x22>
   216d8:	f105 0130 	add.w	r1, r5, #48	; 0x30
   216dc:	f803 1d01 	strb.w	r1, [r3, #-1]!
   216e0:	f10d 0107 	add.w	r1, sp, #7
   216e4:	428b      	cmp	r3, r1
   216e6:	d20a      	bcs.n	216fe <__exponent+0x62>
   216e8:	f813 1b01 	ldrb.w	r1, [r3], #1
   216ec:	f802 1b01 	strb.w	r1, [r2], #1
   216f0:	e7f6      	b.n	216e0 <__exponent+0x44>
   216f2:	2430      	movs	r4, #48	; 0x30
   216f4:	461a      	mov	r2, r3
   216f6:	4421      	add	r1, r4
   216f8:	f802 4b02 	strb.w	r4, [r2], #2
   216fc:	7059      	strb	r1, [r3, #1]
   216fe:	1a10      	subs	r0, r2, r0
   21700:	b002      	add	sp, #8
   21702:	bd70      	pop	{r4, r5, r6, pc}

00021704 <_printf_float>:
_printf_float():
   21704:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21708:	b08f      	sub	sp, #60	; 0x3c
   2170a:	460c      	mov	r4, r1
   2170c:	4616      	mov	r6, r2
   2170e:	461f      	mov	r7, r3
   21710:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
   21714:	4605      	mov	r5, r0
   21716:	f002 fc25 	bl	23f64 <_localeconv_r>
   2171a:	f8d0 a000 	ldr.w	sl, [r0]
   2171e:	4650      	mov	r0, sl
   21720:	f7fe faca 	bl	1fcb8 <strlen>
   21724:	2300      	movs	r3, #0
   21726:	930c      	str	r3, [sp, #48]	; 0x30
   21728:	f8d9 3000 	ldr.w	r3, [r9]
   2172c:	9009      	str	r0, [sp, #36]	; 0x24
   2172e:	3307      	adds	r3, #7
   21730:	f023 0307 	bic.w	r3, r3, #7
   21734:	f103 0208 	add.w	r2, r3, #8
   21738:	e9d3 0100 	ldrd	r0, r1, [r3]
   2173c:	f894 8018 	ldrb.w	r8, [r4, #24]
   21740:	f8c9 2000 	str.w	r2, [r9]
   21744:	e9c4 0112 	strd	r0, r1, [r4, #72]	; 0x48
   21748:	f003 f8b2 	bl	248b0 <__fpclassifyd>
   2174c:	2801      	cmp	r0, #1
   2174e:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
   21752:	d117      	bne.n	21784 <_printf_float+0x80>
   21754:	2200      	movs	r2, #0
   21756:	2300      	movs	r3, #0
   21758:	f003 fa06 	bl	24b68 <__aeabi_dcmplt>
   2175c:	b110      	cbz	r0, 21764 <_printf_float+0x60>
   2175e:	232d      	movs	r3, #45	; 0x2d
   21760:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
   21764:	4b90      	ldr	r3, [pc, #576]	; (219a8 <_printf_float+0x2a4>)
   21766:	4a91      	ldr	r2, [pc, #580]	; (219ac <_printf_float+0x2a8>)
   21768:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
   2176c:	bf8c      	ite	hi
   2176e:	4691      	movhi	r9, r2
   21770:	4699      	movls	r9, r3
   21772:	2303      	movs	r3, #3
   21774:	6123      	str	r3, [r4, #16]
   21776:	6823      	ldr	r3, [r4, #0]
   21778:	f023 0304 	bic.w	r3, r3, #4
   2177c:	6023      	str	r3, [r4, #0]
   2177e:	f04f 0b00 	mov.w	fp, #0
   21782:	e086      	b.n	21892 <_printf_float+0x18e>
   21784:	f003 f894 	bl	248b0 <__fpclassifyd>
   21788:	6823      	ldr	r3, [r4, #0]
   2178a:	b948      	cbnz	r0, 217a0 <_printf_float+0x9c>
   2178c:	4a88      	ldr	r2, [pc, #544]	; (219b0 <_printf_float+0x2ac>)
   2178e:	4989      	ldr	r1, [pc, #548]	; (219b4 <_printf_float+0x2b0>)
   21790:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
   21794:	bf8c      	ite	hi
   21796:	4689      	movhi	r9, r1
   21798:	4691      	movls	r9, r2
   2179a:	2203      	movs	r2, #3
   2179c:	6122      	str	r2, [r4, #16]
   2179e:	e7eb      	b.n	21778 <_printf_float+0x74>
   217a0:	6862      	ldr	r2, [r4, #4]
   217a2:	f028 0b20 	bic.w	fp, r8, #32
   217a6:	1c51      	adds	r1, r2, #1
   217a8:	d101      	bne.n	217ae <_printf_float+0xaa>
   217aa:	2206      	movs	r2, #6
   217ac:	e004      	b.n	217b8 <_printf_float+0xb4>
   217ae:	f1bb 0f47 	cmp.w	fp, #71	; 0x47
   217b2:	d102      	bne.n	217ba <_printf_float+0xb6>
   217b4:	b90a      	cbnz	r2, 217ba <_printf_float+0xb6>
   217b6:	2201      	movs	r2, #1
   217b8:	6062      	str	r2, [r4, #4]
   217ba:	6860      	ldr	r0, [r4, #4]
   217bc:	f443 6180 	orr.w	r1, r3, #1024	; 0x400
   217c0:	e88d 0003 	stmia.w	sp, {r0, r1}
   217c4:	e9d4 2312 	ldrd	r2, r3, [r4, #72]	; 0x48
   217c8:	f10d 002b 	add.w	r0, sp, #43	; 0x2b
   217cc:	9002      	str	r0, [sp, #8]
   217ce:	a80b      	add	r0, sp, #44	; 0x2c
   217d0:	9003      	str	r0, [sp, #12]
   217d2:	a80c      	add	r0, sp, #48	; 0x30
   217d4:	9005      	str	r0, [sp, #20]
   217d6:	2000      	movs	r0, #0
   217d8:	6021      	str	r1, [r4, #0]
   217da:	9006      	str	r0, [sp, #24]
   217dc:	f8cd 8010 	str.w	r8, [sp, #16]
   217e0:	4628      	mov	r0, r5
   217e2:	f7ff fefb 	bl	215dc <__cvt>
   217e6:	f1bb 0f47 	cmp.w	fp, #71	; 0x47
   217ea:	4681      	mov	r9, r0
   217ec:	990b      	ldr	r1, [sp, #44]	; 0x2c
   217ee:	d109      	bne.n	21804 <_printf_float+0x100>
   217f0:	1cc8      	adds	r0, r1, #3
   217f2:	db02      	blt.n	217fa <_printf_float+0xf6>
   217f4:	6863      	ldr	r3, [r4, #4]
   217f6:	4299      	cmp	r1, r3
   217f8:	dd30      	ble.n	2185c <_printf_float+0x158>
   217fa:	f1a8 0802 	sub.w	r8, r8, #2
   217fe:	fa5f f888 	uxtb.w	r8, r8
   21802:	e002      	b.n	2180a <_printf_float+0x106>
   21804:	f1b8 0f65 	cmp.w	r8, #101	; 0x65
   21808:	d812      	bhi.n	21830 <_printf_float+0x12c>
   2180a:	3901      	subs	r1, #1
   2180c:	4642      	mov	r2, r8
   2180e:	f104 0050 	add.w	r0, r4, #80	; 0x50
   21812:	910b      	str	r1, [sp, #44]	; 0x2c
   21814:	f7ff ff42 	bl	2169c <__exponent>
   21818:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   2181a:	4683      	mov	fp, r0
   2181c:	1883      	adds	r3, r0, r2
   2181e:	2a01      	cmp	r2, #1
   21820:	6123      	str	r3, [r4, #16]
   21822:	dc02      	bgt.n	2182a <_printf_float+0x126>
   21824:	6822      	ldr	r2, [r4, #0]
   21826:	07d2      	lsls	r2, r2, #31
   21828:	d52d      	bpl.n	21886 <_printf_float+0x182>
   2182a:	3301      	adds	r3, #1
   2182c:	6123      	str	r3, [r4, #16]
   2182e:	e02a      	b.n	21886 <_printf_float+0x182>
   21830:	f1b8 0f66 	cmp.w	r8, #102	; 0x66
   21834:	d114      	bne.n	21860 <_printf_float+0x15c>
   21836:	2900      	cmp	r1, #0
   21838:	6863      	ldr	r3, [r4, #4]
   2183a:	dd07      	ble.n	2184c <_printf_float+0x148>
   2183c:	6121      	str	r1, [r4, #16]
   2183e:	b913      	cbnz	r3, 21846 <_printf_float+0x142>
   21840:	6822      	ldr	r2, [r4, #0]
   21842:	07d0      	lsls	r0, r2, #31
   21844:	d51c      	bpl.n	21880 <_printf_float+0x17c>
   21846:	3301      	adds	r3, #1
   21848:	440b      	add	r3, r1
   2184a:	e018      	b.n	2187e <_printf_float+0x17a>
   2184c:	b913      	cbnz	r3, 21854 <_printf_float+0x150>
   2184e:	6822      	ldr	r2, [r4, #0]
   21850:	07d2      	lsls	r2, r2, #31
   21852:	d501      	bpl.n	21858 <_printf_float+0x154>
   21854:	3302      	adds	r3, #2
   21856:	e012      	b.n	2187e <_printf_float+0x17a>
   21858:	2301      	movs	r3, #1
   2185a:	e010      	b.n	2187e <_printf_float+0x17a>
   2185c:	f04f 0867 	mov.w	r8, #103	; 0x67
   21860:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   21862:	4291      	cmp	r1, r2
   21864:	db05      	blt.n	21872 <_printf_float+0x16e>
   21866:	6823      	ldr	r3, [r4, #0]
   21868:	6121      	str	r1, [r4, #16]
   2186a:	07d8      	lsls	r0, r3, #31
   2186c:	d508      	bpl.n	21880 <_printf_float+0x17c>
   2186e:	1c4b      	adds	r3, r1, #1
   21870:	e005      	b.n	2187e <_printf_float+0x17a>
   21872:	2900      	cmp	r1, #0
   21874:	bfd4      	ite	le
   21876:	f1c1 0302 	rsble	r3, r1, #2
   2187a:	2301      	movgt	r3, #1
   2187c:	4413      	add	r3, r2
   2187e:	6123      	str	r3, [r4, #16]
   21880:	65a1      	str	r1, [r4, #88]	; 0x58
   21882:	f04f 0b00 	mov.w	fp, #0
   21886:	f89d 302b 	ldrb.w	r3, [sp, #43]	; 0x2b
   2188a:	b113      	cbz	r3, 21892 <_printf_float+0x18e>
   2188c:	232d      	movs	r3, #45	; 0x2d
   2188e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
   21892:	9700      	str	r7, [sp, #0]
   21894:	4628      	mov	r0, r5
   21896:	4621      	mov	r1, r4
   21898:	aa0d      	add	r2, sp, #52	; 0x34
   2189a:	4633      	mov	r3, r6
   2189c:	f000 f940 	bl	21b20 <_printf_common>
   218a0:	3001      	adds	r0, #1
   218a2:	d102      	bne.n	218aa <_printf_float+0x1a6>
   218a4:	f04f 30ff 	mov.w	r0, #4294967295
   218a8:	e136      	b.n	21b18 <_printf_float+0x414>
   218aa:	6823      	ldr	r3, [r4, #0]
   218ac:	055a      	lsls	r2, r3, #21
   218ae:	d404      	bmi.n	218ba <_printf_float+0x1b6>
   218b0:	4628      	mov	r0, r5
   218b2:	4631      	mov	r1, r6
   218b4:	464a      	mov	r2, r9
   218b6:	6923      	ldr	r3, [r4, #16]
   218b8:	e108      	b.n	21acc <_printf_float+0x3c8>
   218ba:	f1b8 0f65 	cmp.w	r8, #101	; 0x65
   218be:	f240 80cb 	bls.w	21a58 <_printf_float+0x354>
   218c2:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
   218c6:	2200      	movs	r2, #0
   218c8:	2300      	movs	r3, #0
   218ca:	f003 f943 	bl	24b54 <__aeabi_dcmpeq>
   218ce:	2800      	cmp	r0, #0
   218d0:	d02a      	beq.n	21928 <_printf_float+0x224>
   218d2:	4628      	mov	r0, r5
   218d4:	4631      	mov	r1, r6
   218d6:	4a38      	ldr	r2, [pc, #224]	; (219b8 <_printf_float+0x2b4>)
   218d8:	2301      	movs	r3, #1
   218da:	47b8      	blx	r7
   218dc:	3001      	adds	r0, #1
   218de:	d0e1      	beq.n	218a4 <_printf_float+0x1a0>
   218e0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   218e2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   218e4:	429a      	cmp	r2, r3
   218e6:	db07      	blt.n	218f8 <_printf_float+0x1f4>
   218e8:	6823      	ldr	r3, [r4, #0]
   218ea:	07d8      	lsls	r0, r3, #31
   218ec:	d404      	bmi.n	218f8 <_printf_float+0x1f4>
   218ee:	6823      	ldr	r3, [r4, #0]
   218f0:	079b      	lsls	r3, r3, #30
   218f2:	f100 80f8 	bmi.w	21ae6 <_printf_float+0x3e2>
   218f6:	e0fd      	b.n	21af4 <_printf_float+0x3f0>
   218f8:	4628      	mov	r0, r5
   218fa:	4631      	mov	r1, r6
   218fc:	4652      	mov	r2, sl
   218fe:	9b09      	ldr	r3, [sp, #36]	; 0x24
   21900:	47b8      	blx	r7
   21902:	3001      	adds	r0, #1
   21904:	d0ce      	beq.n	218a4 <_printf_float+0x1a0>
   21906:	f04f 0800 	mov.w	r8, #0
   2190a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   2190c:	3b01      	subs	r3, #1
   2190e:	4598      	cmp	r8, r3
   21910:	daed      	bge.n	218ee <_printf_float+0x1ea>
   21912:	4628      	mov	r0, r5
   21914:	4631      	mov	r1, r6
   21916:	f104 021a 	add.w	r2, r4, #26
   2191a:	2301      	movs	r3, #1
   2191c:	47b8      	blx	r7
   2191e:	3001      	adds	r0, #1
   21920:	d0c0      	beq.n	218a4 <_printf_float+0x1a0>
   21922:	f108 0801 	add.w	r8, r8, #1
   21926:	e7f0      	b.n	2190a <_printf_float+0x206>
   21928:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   2192a:	2b00      	cmp	r3, #0
   2192c:	dc28      	bgt.n	21980 <_printf_float+0x27c>
   2192e:	4628      	mov	r0, r5
   21930:	4631      	mov	r1, r6
   21932:	4a21      	ldr	r2, [pc, #132]	; (219b8 <_printf_float+0x2b4>)
   21934:	2301      	movs	r3, #1
   21936:	47b8      	blx	r7
   21938:	3001      	adds	r0, #1
   2193a:	d0b3      	beq.n	218a4 <_printf_float+0x1a0>
   2193c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   2193e:	b923      	cbnz	r3, 2194a <_printf_float+0x246>
   21940:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   21942:	b913      	cbnz	r3, 2194a <_printf_float+0x246>
   21944:	6823      	ldr	r3, [r4, #0]
   21946:	07d9      	lsls	r1, r3, #31
   21948:	d5d1      	bpl.n	218ee <_printf_float+0x1ea>
   2194a:	4628      	mov	r0, r5
   2194c:	4631      	mov	r1, r6
   2194e:	4652      	mov	r2, sl
   21950:	9b09      	ldr	r3, [sp, #36]	; 0x24
   21952:	47b8      	blx	r7
   21954:	3001      	adds	r0, #1
   21956:	d0a5      	beq.n	218a4 <_printf_float+0x1a0>
   21958:	f04f 0800 	mov.w	r8, #0
   2195c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   2195e:	4628      	mov	r0, r5
   21960:	425b      	negs	r3, r3
   21962:	4598      	cmp	r8, r3
   21964:	4631      	mov	r1, r6
   21966:	da08      	bge.n	2197a <_printf_float+0x276>
   21968:	f104 021a 	add.w	r2, r4, #26
   2196c:	2301      	movs	r3, #1
   2196e:	47b8      	blx	r7
   21970:	3001      	adds	r0, #1
   21972:	d097      	beq.n	218a4 <_printf_float+0x1a0>
   21974:	f108 0801 	add.w	r8, r8, #1
   21978:	e7f0      	b.n	2195c <_printf_float+0x258>
   2197a:	464a      	mov	r2, r9
   2197c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   2197e:	e0a5      	b.n	21acc <_printf_float+0x3c8>
   21980:	6da3      	ldr	r3, [r4, #88]	; 0x58
   21982:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   21984:	429a      	cmp	r2, r3
   21986:	bfb4      	ite	lt
   21988:	4693      	movlt	fp, r2
   2198a:	469b      	movge	fp, r3
   2198c:	f1bb 0f00 	cmp.w	fp, #0
   21990:	dc02      	bgt.n	21998 <_printf_float+0x294>
   21992:	f04f 0800 	mov.w	r8, #0
   21996:	e01c      	b.n	219d2 <_printf_float+0x2ce>
   21998:	4628      	mov	r0, r5
   2199a:	4631      	mov	r1, r6
   2199c:	464a      	mov	r2, r9
   2199e:	465b      	mov	r3, fp
   219a0:	47b8      	blx	r7
   219a2:	3001      	adds	r0, #1
   219a4:	d1f5      	bne.n	21992 <_printf_float+0x28e>
   219a6:	e77d      	b.n	218a4 <_printf_float+0x1a0>
   219a8:	00027b29 	.word	0x00027b29
   219ac:	00027b2d 	.word	0x00027b2d
   219b0:	00027b31 	.word	0x00027b31
   219b4:	00027b35 	.word	0x00027b35
   219b8:	00026e1c 	.word	0x00026e1c
   219bc:	4628      	mov	r0, r5
   219be:	4631      	mov	r1, r6
   219c0:	f104 021a 	add.w	r2, r4, #26
   219c4:	2301      	movs	r3, #1
   219c6:	47b8      	blx	r7
   219c8:	3001      	adds	r0, #1
   219ca:	f43f af6b 	beq.w	218a4 <_printf_float+0x1a0>
   219ce:	f108 0801 	add.w	r8, r8, #1
   219d2:	6da3      	ldr	r3, [r4, #88]	; 0x58
   219d4:	ea2b 72eb 	bic.w	r2, fp, fp, asr #31
   219d8:	1a9a      	subs	r2, r3, r2
   219da:	4590      	cmp	r8, r2
   219dc:	dbee      	blt.n	219bc <_printf_float+0x2b8>
   219de:	eb09 0803 	add.w	r8, r9, r3
   219e2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   219e4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   219e6:	429a      	cmp	r2, r3
   219e8:	db0f      	blt.n	21a0a <_printf_float+0x306>
   219ea:	6823      	ldr	r3, [r4, #0]
   219ec:	07da      	lsls	r2, r3, #31
   219ee:	d40c      	bmi.n	21a0a <_printf_float+0x306>
   219f0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   219f2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   219f4:	4499      	add	r9, r3
   219f6:	ebc8 0909 	rsb	r9, r8, r9
   219fa:	1a9b      	subs	r3, r3, r2
   219fc:	4599      	cmp	r9, r3
   219fe:	bfa8      	it	ge
   21a00:	4699      	movge	r9, r3
   21a02:	f1b9 0f00 	cmp.w	r9, #0
   21a06:	dc08      	bgt.n	21a1a <_printf_float+0x316>
   21a08:	e00f      	b.n	21a2a <_printf_float+0x326>
   21a0a:	4628      	mov	r0, r5
   21a0c:	4631      	mov	r1, r6
   21a0e:	4652      	mov	r2, sl
   21a10:	9b09      	ldr	r3, [sp, #36]	; 0x24
   21a12:	47b8      	blx	r7
   21a14:	3001      	adds	r0, #1
   21a16:	d1eb      	bne.n	219f0 <_printf_float+0x2ec>
   21a18:	e744      	b.n	218a4 <_printf_float+0x1a0>
   21a1a:	4628      	mov	r0, r5
   21a1c:	4631      	mov	r1, r6
   21a1e:	4642      	mov	r2, r8
   21a20:	464b      	mov	r3, r9
   21a22:	47b8      	blx	r7
   21a24:	3001      	adds	r0, #1
   21a26:	f43f af3d 	beq.w	218a4 <_printf_float+0x1a0>
   21a2a:	f04f 0800 	mov.w	r8, #0
   21a2e:	e00a      	b.n	21a46 <_printf_float+0x342>
   21a30:	4628      	mov	r0, r5
   21a32:	4631      	mov	r1, r6
   21a34:	f104 021a 	add.w	r2, r4, #26
   21a38:	2301      	movs	r3, #1
   21a3a:	47b8      	blx	r7
   21a3c:	3001      	adds	r0, #1
   21a3e:	f43f af31 	beq.w	218a4 <_printf_float+0x1a0>
   21a42:	f108 0801 	add.w	r8, r8, #1
   21a46:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   21a48:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   21a4a:	ea29 71e9 	bic.w	r1, r9, r9, asr #31
   21a4e:	1ad3      	subs	r3, r2, r3
   21a50:	1a5b      	subs	r3, r3, r1
   21a52:	4598      	cmp	r8, r3
   21a54:	dbec      	blt.n	21a30 <_printf_float+0x32c>
   21a56:	e74a      	b.n	218ee <_printf_float+0x1ea>
   21a58:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   21a5a:	2a01      	cmp	r2, #1
   21a5c:	dc01      	bgt.n	21a62 <_printf_float+0x35e>
   21a5e:	07db      	lsls	r3, r3, #31
   21a60:	d539      	bpl.n	21ad6 <_printf_float+0x3d2>
   21a62:	4628      	mov	r0, r5
   21a64:	4631      	mov	r1, r6
   21a66:	464a      	mov	r2, r9
   21a68:	2301      	movs	r3, #1
   21a6a:	47b8      	blx	r7
   21a6c:	3001      	adds	r0, #1
   21a6e:	f43f af19 	beq.w	218a4 <_printf_float+0x1a0>
   21a72:	4628      	mov	r0, r5
   21a74:	4631      	mov	r1, r6
   21a76:	4652      	mov	r2, sl
   21a78:	9b09      	ldr	r3, [sp, #36]	; 0x24
   21a7a:	47b8      	blx	r7
   21a7c:	3001      	adds	r0, #1
   21a7e:	f43f af11 	beq.w	218a4 <_printf_float+0x1a0>
   21a82:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
   21a86:	2200      	movs	r2, #0
   21a88:	2300      	movs	r3, #0
   21a8a:	f003 f863 	bl	24b54 <__aeabi_dcmpeq>
   21a8e:	b110      	cbz	r0, 21a96 <_printf_float+0x392>
   21a90:	f04f 0800 	mov.w	r8, #0
   21a94:	e011      	b.n	21aba <_printf_float+0x3b6>
   21a96:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   21a98:	4628      	mov	r0, r5
   21a9a:	4631      	mov	r1, r6
   21a9c:	f109 0201 	add.w	r2, r9, #1
   21aa0:	3b01      	subs	r3, #1
   21aa2:	e01c      	b.n	21ade <_printf_float+0x3da>
   21aa4:	4628      	mov	r0, r5
   21aa6:	4631      	mov	r1, r6
   21aa8:	f104 021a 	add.w	r2, r4, #26
   21aac:	2301      	movs	r3, #1
   21aae:	47b8      	blx	r7
   21ab0:	3001      	adds	r0, #1
   21ab2:	f43f aef7 	beq.w	218a4 <_printf_float+0x1a0>
   21ab6:	f108 0801 	add.w	r8, r8, #1
   21aba:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   21abc:	3b01      	subs	r3, #1
   21abe:	4598      	cmp	r8, r3
   21ac0:	dbf0      	blt.n	21aa4 <_printf_float+0x3a0>
   21ac2:	4628      	mov	r0, r5
   21ac4:	4631      	mov	r1, r6
   21ac6:	f104 0250 	add.w	r2, r4, #80	; 0x50
   21aca:	465b      	mov	r3, fp
   21acc:	47b8      	blx	r7
   21ace:	3001      	adds	r0, #1
   21ad0:	f47f af0d 	bne.w	218ee <_printf_float+0x1ea>
   21ad4:	e6e6      	b.n	218a4 <_printf_float+0x1a0>
   21ad6:	4628      	mov	r0, r5
   21ad8:	4631      	mov	r1, r6
   21ada:	464a      	mov	r2, r9
   21adc:	2301      	movs	r3, #1
   21ade:	47b8      	blx	r7
   21ae0:	3001      	adds	r0, #1
   21ae2:	d1ee      	bne.n	21ac2 <_printf_float+0x3be>
   21ae4:	e6de      	b.n	218a4 <_printf_float+0x1a0>
   21ae6:	f04f 0800 	mov.w	r8, #0
   21aea:	68e2      	ldr	r2, [r4, #12]
   21aec:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   21aee:	1ad3      	subs	r3, r2, r3
   21af0:	4598      	cmp	r8, r3
   21af2:	db05      	blt.n	21b00 <_printf_float+0x3fc>
   21af4:	68e0      	ldr	r0, [r4, #12]
   21af6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   21af8:	4298      	cmp	r0, r3
   21afa:	bfb8      	it	lt
   21afc:	4618      	movlt	r0, r3
   21afe:	e00b      	b.n	21b18 <_printf_float+0x414>
   21b00:	4628      	mov	r0, r5
   21b02:	4631      	mov	r1, r6
   21b04:	f104 0219 	add.w	r2, r4, #25
   21b08:	2301      	movs	r3, #1
   21b0a:	47b8      	blx	r7
   21b0c:	3001      	adds	r0, #1
   21b0e:	f43f aec9 	beq.w	218a4 <_printf_float+0x1a0>
   21b12:	f108 0801 	add.w	r8, r8, #1
   21b16:	e7e8      	b.n	21aea <_printf_float+0x3e6>
   21b18:	b00f      	add	sp, #60	; 0x3c
   21b1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
$t():
   21b1e:	bf00      	nop

00021b20 <_printf_common>:
_printf_common():
   21b20:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   21b24:	4615      	mov	r5, r2
   21b26:	461f      	mov	r7, r3
   21b28:	688a      	ldr	r2, [r1, #8]
   21b2a:	690b      	ldr	r3, [r1, #16]
   21b2c:	4606      	mov	r6, r0
   21b2e:	429a      	cmp	r2, r3
   21b30:	bfa8      	it	ge
   21b32:	4613      	movge	r3, r2
   21b34:	602b      	str	r3, [r5, #0]
   21b36:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
   21b3a:	460c      	mov	r4, r1
   21b3c:	f8dd 8020 	ldr.w	r8, [sp, #32]
   21b40:	b10a      	cbz	r2, 21b46 <_printf_common+0x26>
   21b42:	3301      	adds	r3, #1
   21b44:	602b      	str	r3, [r5, #0]
   21b46:	6823      	ldr	r3, [r4, #0]
   21b48:	0699      	lsls	r1, r3, #26
   21b4a:	d502      	bpl.n	21b52 <_printf_common+0x32>
   21b4c:	682b      	ldr	r3, [r5, #0]
   21b4e:	3302      	adds	r3, #2
   21b50:	602b      	str	r3, [r5, #0]
   21b52:	6823      	ldr	r3, [r4, #0]
   21b54:	f013 0906 	ands.w	r9, r3, #6
   21b58:	d01d      	beq.n	21b96 <_printf_common+0x76>
   21b5a:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
   21b5e:	6822      	ldr	r2, [r4, #0]
   21b60:	3300      	adds	r3, #0
   21b62:	bf18      	it	ne
   21b64:	2301      	movne	r3, #1
   21b66:	0692      	lsls	r2, r2, #26
   21b68:	d51f      	bpl.n	21baa <_printf_common+0x8a>
   21b6a:	18e1      	adds	r1, r4, r3
   21b6c:	2030      	movs	r0, #48	; 0x30
   21b6e:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
   21b72:	1c5a      	adds	r2, r3, #1
   21b74:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
   21b78:	4422      	add	r2, r4
   21b7a:	3302      	adds	r3, #2
   21b7c:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
   21b80:	e013      	b.n	21baa <_printf_common+0x8a>
   21b82:	4630      	mov	r0, r6
   21b84:	4639      	mov	r1, r7
   21b86:	f104 0219 	add.w	r2, r4, #25
   21b8a:	2301      	movs	r3, #1
   21b8c:	47c0      	blx	r8
   21b8e:	3001      	adds	r0, #1
   21b90:	d007      	beq.n	21ba2 <_printf_common+0x82>
   21b92:	f109 0901 	add.w	r9, r9, #1
   21b96:	68e2      	ldr	r2, [r4, #12]
   21b98:	682b      	ldr	r3, [r5, #0]
   21b9a:	1ad3      	subs	r3, r2, r3
   21b9c:	4599      	cmp	r9, r3
   21b9e:	dbf0      	blt.n	21b82 <_printf_common+0x62>
   21ba0:	e7db      	b.n	21b5a <_printf_common+0x3a>
   21ba2:	f04f 30ff 	mov.w	r0, #4294967295
   21ba6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   21baa:	4630      	mov	r0, r6
   21bac:	4639      	mov	r1, r7
   21bae:	f104 0243 	add.w	r2, r4, #67	; 0x43
   21bb2:	47c0      	blx	r8
   21bb4:	3001      	adds	r0, #1
   21bb6:	d0f4      	beq.n	21ba2 <_printf_common+0x82>
   21bb8:	6823      	ldr	r3, [r4, #0]
   21bba:	682a      	ldr	r2, [r5, #0]
   21bbc:	f003 0306 	and.w	r3, r3, #6
   21bc0:	68e1      	ldr	r1, [r4, #12]
   21bc2:	2b04      	cmp	r3, #4
   21bc4:	bf08      	it	eq
   21bc6:	ebc2 0501 	rsbeq	r5, r2, r1
   21bca:	6923      	ldr	r3, [r4, #16]
   21bcc:	68a2      	ldr	r2, [r4, #8]
   21bce:	bf0c      	ite	eq
   21bd0:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
   21bd4:	2500      	movne	r5, #0
   21bd6:	429a      	cmp	r2, r3
   21bd8:	bfc4      	itt	gt
   21bda:	ebc3 0302 	rsbgt	r3, r3, r2
   21bde:	18ed      	addgt	r5, r5, r3
   21be0:	f04f 0900 	mov.w	r9, #0
   21be4:	45a9      	cmp	r9, r5
   21be6:	da0a      	bge.n	21bfe <_printf_common+0xde>
   21be8:	4630      	mov	r0, r6
   21bea:	4639      	mov	r1, r7
   21bec:	f104 021a 	add.w	r2, r4, #26
   21bf0:	2301      	movs	r3, #1
   21bf2:	47c0      	blx	r8
   21bf4:	3001      	adds	r0, #1
   21bf6:	d0d4      	beq.n	21ba2 <_printf_common+0x82>
   21bf8:	f109 0901 	add.w	r9, r9, #1
   21bfc:	e7f2      	b.n	21be4 <_printf_common+0xc4>
   21bfe:	2000      	movs	r0, #0
   21c00:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

00021c04 <_printf_i>:
_printf_i():
   21c04:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
   21c08:	7e0e      	ldrb	r6, [r1, #24]
   21c0a:	4680      	mov	r8, r0
   21c0c:	2e6e      	cmp	r6, #110	; 0x6e
   21c0e:	460c      	mov	r4, r1
   21c10:	4691      	mov	r9, r2
   21c12:	469a      	mov	sl, r3
   21c14:	9d0c      	ldr	r5, [sp, #48]	; 0x30
   21c16:	f101 0043 	add.w	r0, r1, #67	; 0x43
   21c1a:	f000 80a5 	beq.w	21d68 <_printf_i+0x164>
   21c1e:	d811      	bhi.n	21c44 <_printf_i+0x40>
   21c20:	2e63      	cmp	r6, #99	; 0x63
   21c22:	d022      	beq.n	21c6a <_printf_i+0x66>
   21c24:	d809      	bhi.n	21c3a <_printf_i+0x36>
   21c26:	2e00      	cmp	r6, #0
   21c28:	f000 80af 	beq.w	21d8a <_printf_i+0x186>
   21c2c:	2e58      	cmp	r6, #88	; 0x58
   21c2e:	f040 80bf 	bne.w	21db0 <_printf_i+0x1ac>
   21c32:	f881 6045 	strb.w	r6, [r1, #69]	; 0x45
   21c36:	4a7b      	ldr	r2, [pc, #492]	; (21e24 <_printf_i+0x220>)
   21c38:	e04f      	b.n	21cda <_printf_i+0xd6>
   21c3a:	2e64      	cmp	r6, #100	; 0x64
   21c3c:	d01e      	beq.n	21c7c <_printf_i+0x78>
   21c3e:	2e69      	cmp	r6, #105	; 0x69
   21c40:	d01c      	beq.n	21c7c <_printf_i+0x78>
   21c42:	e0b5      	b.n	21db0 <_printf_i+0x1ac>
   21c44:	2e73      	cmp	r6, #115	; 0x73
   21c46:	f000 80a4 	beq.w	21d92 <_printf_i+0x18e>
   21c4a:	d809      	bhi.n	21c60 <_printf_i+0x5c>
   21c4c:	2e6f      	cmp	r6, #111	; 0x6f
   21c4e:	d02b      	beq.n	21ca8 <_printf_i+0xa4>
   21c50:	2e70      	cmp	r6, #112	; 0x70
   21c52:	f040 80ad 	bne.w	21db0 <_printf_i+0x1ac>
   21c56:	680b      	ldr	r3, [r1, #0]
   21c58:	f043 0320 	orr.w	r3, r3, #32
   21c5c:	600b      	str	r3, [r1, #0]
   21c5e:	e038      	b.n	21cd2 <_printf_i+0xce>
   21c60:	2e75      	cmp	r6, #117	; 0x75
   21c62:	d021      	beq.n	21ca8 <_printf_i+0xa4>
   21c64:	2e78      	cmp	r6, #120	; 0x78
   21c66:	d034      	beq.n	21cd2 <_printf_i+0xce>
   21c68:	e0a2      	b.n	21db0 <_printf_i+0x1ac>
   21c6a:	682b      	ldr	r3, [r5, #0]
   21c6c:	f101 0742 	add.w	r7, r1, #66	; 0x42
   21c70:	1d1a      	adds	r2, r3, #4
   21c72:	681b      	ldr	r3, [r3, #0]
   21c74:	602a      	str	r2, [r5, #0]
   21c76:	f881 3042 	strb.w	r3, [r1, #66]	; 0x42
   21c7a:	e09d      	b.n	21db8 <_printf_i+0x1b4>
   21c7c:	6822      	ldr	r2, [r4, #0]
   21c7e:	682b      	ldr	r3, [r5, #0]
   21c80:	f012 0f80 	tst.w	r2, #128	; 0x80
   21c84:	d003      	beq.n	21c8e <_printf_i+0x8a>
   21c86:	1d1a      	adds	r2, r3, #4
   21c88:	602a      	str	r2, [r5, #0]
   21c8a:	681d      	ldr	r5, [r3, #0]
   21c8c:	e005      	b.n	21c9a <_printf_i+0x96>
   21c8e:	0651      	lsls	r1, r2, #25
   21c90:	d5f9      	bpl.n	21c86 <_printf_i+0x82>
   21c92:	1d1a      	adds	r2, r3, #4
   21c94:	602a      	str	r2, [r5, #0]
   21c96:	f9b3 5000 	ldrsh.w	r5, [r3]
   21c9a:	2d00      	cmp	r5, #0
   21c9c:	da39      	bge.n	21d12 <_printf_i+0x10e>
   21c9e:	232d      	movs	r3, #45	; 0x2d
   21ca0:	426d      	negs	r5, r5
   21ca2:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
   21ca6:	e034      	b.n	21d12 <_printf_i+0x10e>
   21ca8:	6822      	ldr	r2, [r4, #0]
   21caa:	682b      	ldr	r3, [r5, #0]
   21cac:	f012 0f80 	tst.w	r2, #128	; 0x80
   21cb0:	d003      	beq.n	21cba <_printf_i+0xb6>
   21cb2:	1d1a      	adds	r2, r3, #4
   21cb4:	602a      	str	r2, [r5, #0]
   21cb6:	681d      	ldr	r5, [r3, #0]
   21cb8:	e004      	b.n	21cc4 <_printf_i+0xc0>
   21cba:	0652      	lsls	r2, r2, #25
   21cbc:	d5f9      	bpl.n	21cb2 <_printf_i+0xae>
   21cbe:	1d1a      	adds	r2, r3, #4
   21cc0:	602a      	str	r2, [r5, #0]
   21cc2:	881d      	ldrh	r5, [r3, #0]
   21cc4:	7e23      	ldrb	r3, [r4, #24]
   21cc6:	4a57      	ldr	r2, [pc, #348]	; (21e24 <_printf_i+0x220>)
   21cc8:	2b6f      	cmp	r3, #111	; 0x6f
   21cca:	bf14      	ite	ne
   21ccc:	230a      	movne	r3, #10
   21cce:	2308      	moveq	r3, #8
   21cd0:	e01b      	b.n	21d0a <_printf_i+0x106>
   21cd2:	2378      	movs	r3, #120	; 0x78
   21cd4:	4a54      	ldr	r2, [pc, #336]	; (21e28 <_printf_i+0x224>)
   21cd6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
   21cda:	6823      	ldr	r3, [r4, #0]
   21cdc:	6829      	ldr	r1, [r5, #0]
   21cde:	f013 0f80 	tst.w	r3, #128	; 0x80
   21ce2:	f101 0604 	add.w	r6, r1, #4
   21ce6:	602e      	str	r6, [r5, #0]
   21ce8:	d001      	beq.n	21cee <_printf_i+0xea>
   21cea:	680d      	ldr	r5, [r1, #0]
   21cec:	e002      	b.n	21cf4 <_printf_i+0xf0>
   21cee:	065f      	lsls	r7, r3, #25
   21cf0:	d5fb      	bpl.n	21cea <_printf_i+0xe6>
   21cf2:	880d      	ldrh	r5, [r1, #0]
   21cf4:	07de      	lsls	r6, r3, #31
   21cf6:	bf44      	itt	mi
   21cf8:	f043 0320 	orrmi.w	r3, r3, #32
   21cfc:	6023      	strmi	r3, [r4, #0]
   21cfe:	b91d      	cbnz	r5, 21d08 <_printf_i+0x104>
   21d00:	6823      	ldr	r3, [r4, #0]
   21d02:	f023 0320 	bic.w	r3, r3, #32
   21d06:	6023      	str	r3, [r4, #0]
   21d08:	2310      	movs	r3, #16
   21d0a:	2100      	movs	r1, #0
   21d0c:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
   21d10:	e001      	b.n	21d16 <_printf_i+0x112>
   21d12:	4a44      	ldr	r2, [pc, #272]	; (21e24 <_printf_i+0x220>)
   21d14:	230a      	movs	r3, #10
   21d16:	6866      	ldr	r6, [r4, #4]
   21d18:	2e00      	cmp	r6, #0
   21d1a:	60a6      	str	r6, [r4, #8]
   21d1c:	db03      	blt.n	21d26 <_printf_i+0x122>
   21d1e:	6821      	ldr	r1, [r4, #0]
   21d20:	f021 0104 	bic.w	r1, r1, #4
   21d24:	6021      	str	r1, [r4, #0]
   21d26:	b905      	cbnz	r5, 21d2a <_printf_i+0x126>
   21d28:	b16e      	cbz	r6, 21d46 <_printf_i+0x142>
   21d2a:	f104 0142 	add.w	r1, r4, #66	; 0x42
   21d2e:	fbb5 f6f3 	udiv	r6, r5, r3
   21d32:	fb03 5516 	mls	r5, r3, r6, r5
   21d36:	5d55      	ldrb	r5, [r2, r5]
   21d38:	460f      	mov	r7, r1
   21d3a:	f801 5901 	strb.w	r5, [r1], #-1
   21d3e:	4635      	mov	r5, r6
   21d40:	2e00      	cmp	r6, #0
   21d42:	d1f4      	bne.n	21d2e <_printf_i+0x12a>
   21d44:	e000      	b.n	21d48 <_printf_i+0x144>
   21d46:	4607      	mov	r7, r0
   21d48:	2b08      	cmp	r3, #8
   21d4a:	d10a      	bne.n	21d62 <_printf_i+0x15e>
   21d4c:	6823      	ldr	r3, [r4, #0]
   21d4e:	07dd      	lsls	r5, r3, #31
   21d50:	d507      	bpl.n	21d62 <_printf_i+0x15e>
   21d52:	6862      	ldr	r2, [r4, #4]
   21d54:	6923      	ldr	r3, [r4, #16]
   21d56:	429a      	cmp	r2, r3
   21d58:	dc03      	bgt.n	21d62 <_printf_i+0x15e>
   21d5a:	2330      	movs	r3, #48	; 0x30
   21d5c:	f807 3c01 	strb.w	r3, [r7, #-1]
   21d60:	3f01      	subs	r7, #1
   21d62:	1bc0      	subs	r0, r0, r7
   21d64:	6120      	str	r0, [r4, #16]
   21d66:	e02c      	b.n	21dc2 <_printf_i+0x1be>
   21d68:	6809      	ldr	r1, [r1, #0]
   21d6a:	682b      	ldr	r3, [r5, #0]
   21d6c:	f011 0f80 	tst.w	r1, #128	; 0x80
   21d70:	6962      	ldr	r2, [r4, #20]
   21d72:	d004      	beq.n	21d7e <_printf_i+0x17a>
   21d74:	1d19      	adds	r1, r3, #4
   21d76:	6029      	str	r1, [r5, #0]
   21d78:	681b      	ldr	r3, [r3, #0]
   21d7a:	601a      	str	r2, [r3, #0]
   21d7c:	e005      	b.n	21d8a <_printf_i+0x186>
   21d7e:	0649      	lsls	r1, r1, #25
   21d80:	d5f8      	bpl.n	21d74 <_printf_i+0x170>
   21d82:	1d19      	adds	r1, r3, #4
   21d84:	6029      	str	r1, [r5, #0]
   21d86:	681b      	ldr	r3, [r3, #0]
   21d88:	801a      	strh	r2, [r3, #0]
   21d8a:	2300      	movs	r3, #0
   21d8c:	6123      	str	r3, [r4, #16]
   21d8e:	4607      	mov	r7, r0
   21d90:	e017      	b.n	21dc2 <_printf_i+0x1be>
   21d92:	682b      	ldr	r3, [r5, #0]
   21d94:	1d1a      	adds	r2, r3, #4
   21d96:	602a      	str	r2, [r5, #0]
   21d98:	681f      	ldr	r7, [r3, #0]
   21d9a:	4638      	mov	r0, r7
   21d9c:	f7fd ff8c 	bl	1fcb8 <strlen>
   21da0:	6863      	ldr	r3, [r4, #4]
   21da2:	6120      	str	r0, [r4, #16]
   21da4:	4298      	cmp	r0, r3
   21da6:	bf88      	it	hi
   21da8:	6123      	strhi	r3, [r4, #16]
   21daa:	6923      	ldr	r3, [r4, #16]
   21dac:	6063      	str	r3, [r4, #4]
   21dae:	e005      	b.n	21dbc <_printf_i+0x1b8>
   21db0:	f104 0742 	add.w	r7, r4, #66	; 0x42
   21db4:	f884 6042 	strb.w	r6, [r4, #66]	; 0x42
   21db8:	2301      	movs	r3, #1
   21dba:	6123      	str	r3, [r4, #16]
   21dbc:	2300      	movs	r3, #0
   21dbe:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
   21dc2:	f8cd a000 	str.w	sl, [sp]
   21dc6:	4640      	mov	r0, r8
   21dc8:	4621      	mov	r1, r4
   21dca:	aa03      	add	r2, sp, #12
   21dcc:	464b      	mov	r3, r9
   21dce:	f7ff fea7 	bl	21b20 <_printf_common>
   21dd2:	3001      	adds	r0, #1
   21dd4:	d102      	bne.n	21ddc <_printf_i+0x1d8>
   21dd6:	f04f 30ff 	mov.w	r0, #4294967295
   21dda:	e01f      	b.n	21e1c <_printf_i+0x218>
   21ddc:	4640      	mov	r0, r8
   21dde:	4649      	mov	r1, r9
   21de0:	463a      	mov	r2, r7
   21de2:	6923      	ldr	r3, [r4, #16]
   21de4:	47d0      	blx	sl
   21de6:	3001      	adds	r0, #1
   21de8:	d0f5      	beq.n	21dd6 <_printf_i+0x1d2>
   21dea:	6823      	ldr	r3, [r4, #0]
   21dec:	079b      	lsls	r3, r3, #30
   21dee:	d405      	bmi.n	21dfc <_printf_i+0x1f8>
   21df0:	68e0      	ldr	r0, [r4, #12]
   21df2:	9b03      	ldr	r3, [sp, #12]
   21df4:	4298      	cmp	r0, r3
   21df6:	bfb8      	it	lt
   21df8:	4618      	movlt	r0, r3
   21dfa:	e00f      	b.n	21e1c <_printf_i+0x218>
   21dfc:	2500      	movs	r5, #0
   21dfe:	68e2      	ldr	r2, [r4, #12]
   21e00:	9b03      	ldr	r3, [sp, #12]
   21e02:	1ad3      	subs	r3, r2, r3
   21e04:	429d      	cmp	r5, r3
   21e06:	daf3      	bge.n	21df0 <_printf_i+0x1ec>
   21e08:	4640      	mov	r0, r8
   21e0a:	4649      	mov	r1, r9
   21e0c:	f104 0219 	add.w	r2, r4, #25
   21e10:	2301      	movs	r3, #1
   21e12:	47d0      	blx	sl
   21e14:	3001      	adds	r0, #1
   21e16:	d0de      	beq.n	21dd6 <_printf_i+0x1d2>
   21e18:	3501      	adds	r5, #1
   21e1a:	e7f0      	b.n	21dfe <_printf_i+0x1fa>
   21e1c:	b004      	add	sp, #16
   21e1e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   21e22:	bf00      	nop
   21e24:	00027b39 	.word	0x00027b39
   21e28:	00027b4a 	.word	0x00027b4a

00021e2c <__svfiscanf_r>:
__svfiscanf_r():
   21e2c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   21e30:	f5ad 7d24 	sub.w	sp, sp, #656	; 0x290
   21e34:	9301      	str	r3, [sp, #4]
   21e36:	2300      	movs	r3, #0
   21e38:	9346      	str	r3, [sp, #280]	; 0x118
   21e3a:	9347      	str	r3, [sp, #284]	; 0x11c
   21e3c:	4b9d      	ldr	r3, [pc, #628]	; (220b4 <__svfiscanf_r+0x288>)
   21e3e:	f10d 090c 	add.w	r9, sp, #12
   21e42:	93a2      	str	r3, [sp, #648]	; 0x288
   21e44:	4b9c      	ldr	r3, [pc, #624]	; (220b8 <__svfiscanf_r+0x28c>)
   21e46:	4607      	mov	r7, r0
   21e48:	460c      	mov	r4, r1
   21e4a:	4690      	mov	r8, r2
   21e4c:	f8cd 9120 	str.w	r9, [sp, #288]	; 0x120
   21e50:	93a3      	str	r3, [sp, #652]	; 0x28c
   21e52:	f898 5000 	ldrb.w	r5, [r8]
   21e56:	2d00      	cmp	r5, #0
   21e58:	f000 8124 	beq.w	220a4 <__svfiscanf_r+0x278>
   21e5c:	4997      	ldr	r1, [pc, #604]	; (220bc <__svfiscanf_r+0x290>)
   21e5e:	680b      	ldr	r3, [r1, #0]
   21e60:	468a      	mov	sl, r1
   21e62:	442b      	add	r3, r5
   21e64:	785a      	ldrb	r2, [r3, #1]
   21e66:	f002 0208 	and.w	r2, r2, #8
   21e6a:	f002 03ff 	and.w	r3, r2, #255	; 0xff
   21e6e:	b1ea      	cbz	r2, 21eac <__svfiscanf_r+0x80>
   21e70:	6863      	ldr	r3, [r4, #4]
   21e72:	2b00      	cmp	r3, #0
   21e74:	dd10      	ble.n	21e98 <__svfiscanf_r+0x6c>
   21e76:	6823      	ldr	r3, [r4, #0]
   21e78:	f8da 2000 	ldr.w	r2, [sl]
   21e7c:	7819      	ldrb	r1, [r3, #0]
   21e7e:	440a      	add	r2, r1
   21e80:	7852      	ldrb	r2, [r2, #1]
   21e82:	0715      	lsls	r5, r2, #28
   21e84:	d50e      	bpl.n	21ea4 <__svfiscanf_r+0x78>
   21e86:	9a47      	ldr	r2, [sp, #284]	; 0x11c
   21e88:	3301      	adds	r3, #1
   21e8a:	3201      	adds	r2, #1
   21e8c:	9247      	str	r2, [sp, #284]	; 0x11c
   21e8e:	6862      	ldr	r2, [r4, #4]
   21e90:	6023      	str	r3, [r4, #0]
   21e92:	3a01      	subs	r2, #1
   21e94:	6062      	str	r2, [r4, #4]
   21e96:	e7eb      	b.n	21e70 <__svfiscanf_r+0x44>
   21e98:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   21e9a:	4638      	mov	r0, r7
   21e9c:	4621      	mov	r1, r4
   21e9e:	4798      	blx	r3
   21ea0:	2800      	cmp	r0, #0
   21ea2:	d0e8      	beq.n	21e76 <__svfiscanf_r+0x4a>
   21ea4:	f108 0601 	add.w	r6, r8, #1
   21ea8:	46b0      	mov	r8, r6
   21eaa:	e7d2      	b.n	21e52 <__svfiscanf_r+0x26>
   21eac:	2d25      	cmp	r5, #37	; 0x25
   21eae:	f108 0601 	add.w	r6, r8, #1
   21eb2:	d14f      	bne.n	21f54 <__svfiscanf_r+0x128>
   21eb4:	9345      	str	r3, [sp, #276]	; 0x114
   21eb6:	9343      	str	r3, [sp, #268]	; 0x10c
   21eb8:	f898 3001 	ldrb.w	r3, [r8, #1]
   21ebc:	2b2a      	cmp	r3, #42	; 0x2a
   21ebe:	d103      	bne.n	21ec8 <__svfiscanf_r+0x9c>
   21ec0:	2310      	movs	r3, #16
   21ec2:	9343      	str	r3, [sp, #268]	; 0x10c
   21ec4:	f108 0602 	add.w	r6, r8, #2
   21ec8:	7831      	ldrb	r1, [r6, #0]
   21eca:	4635      	mov	r5, r6
   21ecc:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
   21ed0:	2b09      	cmp	r3, #9
   21ed2:	f106 0601 	add.w	r6, r6, #1
   21ed6:	d806      	bhi.n	21ee6 <__svfiscanf_r+0xba>
   21ed8:	9b45      	ldr	r3, [sp, #276]	; 0x114
   21eda:	220a      	movs	r2, #10
   21edc:	fb02 1303 	mla	r3, r2, r3, r1
   21ee0:	3b30      	subs	r3, #48	; 0x30
   21ee2:	9345      	str	r3, [sp, #276]	; 0x114
   21ee4:	e7f0      	b.n	21ec8 <__svfiscanf_r+0x9c>
   21ee6:	f8df 81dc 	ldr.w	r8, [pc, #476]	; 220c4 <__svfiscanf_r+0x298>
   21eea:	2203      	movs	r2, #3
   21eec:	4640      	mov	r0, r8
   21eee:	f7fc fe75 	bl	1ebdc <memchr>
   21ef2:	b140      	cbz	r0, 21f06 <__svfiscanf_r+0xda>
   21ef4:	ebc8 0800 	rsb	r8, r8, r0
   21ef8:	2001      	movs	r0, #1
   21efa:	fa00 f008 	lsl.w	r0, r0, r8
   21efe:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   21f00:	4635      	mov	r5, r6
   21f02:	4303      	orrs	r3, r0
   21f04:	9343      	str	r3, [sp, #268]	; 0x10c
   21f06:	1c6e      	adds	r6, r5, #1
   21f08:	782d      	ldrb	r5, [r5, #0]
   21f0a:	2d67      	cmp	r5, #103	; 0x67
   21f0c:	d80f      	bhi.n	21f2e <__svfiscanf_r+0x102>
   21f0e:	2d65      	cmp	r5, #101	; 0x65
   21f10:	d278      	bcs.n	22004 <__svfiscanf_r+0x1d8>
   21f12:	2d5b      	cmp	r5, #91	; 0x5b
   21f14:	d054      	beq.n	21fc0 <__svfiscanf_r+0x194>
   21f16:	d805      	bhi.n	21f24 <__svfiscanf_r+0xf8>
   21f18:	2d00      	cmp	r5, #0
   21f1a:	f000 80c5 	beq.w	220a8 <__svfiscanf_r+0x27c>
   21f1e:	2d25      	cmp	r5, #37	; 0x25
   21f20:	d018      	beq.n	21f54 <__svfiscanf_r+0x128>
   21f22:	e071      	b.n	22008 <__svfiscanf_r+0x1dc>
   21f24:	2d63      	cmp	r5, #99	; 0x63
   21f26:	d057      	beq.n	21fd8 <__svfiscanf_r+0x1ac>
   21f28:	2d64      	cmp	r5, #100	; 0x64
   21f2a:	d03f      	beq.n	21fac <__svfiscanf_r+0x180>
   21f2c:	e06c      	b.n	22008 <__svfiscanf_r+0x1dc>
   21f2e:	2d70      	cmp	r5, #112	; 0x70
   21f30:	d032      	beq.n	21f98 <__svfiscanf_r+0x16c>
   21f32:	d807      	bhi.n	21f44 <__svfiscanf_r+0x118>
   21f34:	2d6e      	cmp	r5, #110	; 0x6e
   21f36:	d055      	beq.n	21fe4 <__svfiscanf_r+0x1b8>
   21f38:	d83a      	bhi.n	21fb0 <__svfiscanf_r+0x184>
   21f3a:	2d69      	cmp	r5, #105	; 0x69
   21f3c:	d164      	bne.n	22008 <__svfiscanf_r+0x1dc>
   21f3e:	2300      	movs	r3, #0
   21f40:	9344      	str	r3, [sp, #272]	; 0x110
   21f42:	e039      	b.n	21fb8 <__svfiscanf_r+0x18c>
   21f44:	2d75      	cmp	r5, #117	; 0x75
   21f46:	d031      	beq.n	21fac <__svfiscanf_r+0x180>
   21f48:	2d78      	cmp	r5, #120	; 0x78
   21f4a:	d029      	beq.n	21fa0 <__svfiscanf_r+0x174>
   21f4c:	2d73      	cmp	r5, #115	; 0x73
   21f4e:	d15b      	bne.n	22008 <__svfiscanf_r+0x1dc>
   21f50:	2302      	movs	r3, #2
   21f52:	e03f      	b.n	21fd4 <__svfiscanf_r+0x1a8>
   21f54:	6863      	ldr	r3, [r4, #4]
   21f56:	2b00      	cmp	r3, #0
   21f58:	dd0d      	ble.n	21f76 <__svfiscanf_r+0x14a>
   21f5a:	6823      	ldr	r3, [r4, #0]
   21f5c:	781a      	ldrb	r2, [r3, #0]
   21f5e:	42aa      	cmp	r2, r5
   21f60:	f040 80a0 	bne.w	220a4 <__svfiscanf_r+0x278>
   21f64:	3301      	adds	r3, #1
   21f66:	6862      	ldr	r2, [r4, #4]
   21f68:	6023      	str	r3, [r4, #0]
   21f6a:	9b47      	ldr	r3, [sp, #284]	; 0x11c
   21f6c:	3a01      	subs	r2, #1
   21f6e:	3301      	adds	r3, #1
   21f70:	6062      	str	r2, [r4, #4]
   21f72:	9347      	str	r3, [sp, #284]	; 0x11c
   21f74:	e798      	b.n	21ea8 <__svfiscanf_r+0x7c>
   21f76:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   21f78:	4638      	mov	r0, r7
   21f7a:	4621      	mov	r1, r4
   21f7c:	4798      	blx	r3
   21f7e:	2800      	cmp	r0, #0
   21f80:	d0eb      	beq.n	21f5a <__svfiscanf_r+0x12e>
   21f82:	9846      	ldr	r0, [sp, #280]	; 0x118
   21f84:	2800      	cmp	r0, #0
   21f86:	f000 808f 	beq.w	220a8 <__svfiscanf_r+0x27c>
   21f8a:	89a3      	ldrh	r3, [r4, #12]
   21f8c:	f013 0f40 	tst.w	r3, #64	; 0x40
   21f90:	bf18      	it	ne
   21f92:	f04f 30ff 	movne.w	r0, #4294967295
   21f96:	e089      	b.n	220ac <__svfiscanf_r+0x280>
   21f98:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   21f9a:	f043 0320 	orr.w	r3, r3, #32
   21f9e:	9343      	str	r3, [sp, #268]	; 0x10c
   21fa0:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   21fa2:	f443 7300 	orr.w	r3, r3, #512	; 0x200
   21fa6:	9343      	str	r3, [sp, #268]	; 0x10c
   21fa8:	2310      	movs	r3, #16
   21faa:	e002      	b.n	21fb2 <__svfiscanf_r+0x186>
   21fac:	230a      	movs	r3, #10
   21fae:	e000      	b.n	21fb2 <__svfiscanf_r+0x186>
   21fb0:	2308      	movs	r3, #8
   21fb2:	2d6e      	cmp	r5, #110	; 0x6e
   21fb4:	9344      	str	r3, [sp, #272]	; 0x110
   21fb6:	dc01      	bgt.n	21fbc <__svfiscanf_r+0x190>
   21fb8:	2303      	movs	r3, #3
   21fba:	e00b      	b.n	21fd4 <__svfiscanf_r+0x1a8>
   21fbc:	2304      	movs	r3, #4
   21fbe:	e009      	b.n	21fd4 <__svfiscanf_r+0x1a8>
   21fc0:	4631      	mov	r1, r6
   21fc2:	4648      	mov	r0, r9
   21fc4:	f002 fc96 	bl	248f4 <__sccl>
   21fc8:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   21fca:	4606      	mov	r6, r0
   21fcc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   21fd0:	9343      	str	r3, [sp, #268]	; 0x10c
   21fd2:	2301      	movs	r3, #1
   21fd4:	9349      	str	r3, [sp, #292]	; 0x124
   21fd6:	e01b      	b.n	22010 <__svfiscanf_r+0x1e4>
   21fd8:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   21fda:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   21fde:	9343      	str	r3, [sp, #268]	; 0x10c
   21fe0:	2300      	movs	r3, #0
   21fe2:	e7f7      	b.n	21fd4 <__svfiscanf_r+0x1a8>
   21fe4:	9a43      	ldr	r2, [sp, #268]	; 0x10c
   21fe6:	06d0      	lsls	r0, r2, #27
   21fe8:	f53f af5e 	bmi.w	21ea8 <__svfiscanf_r+0x7c>
   21fec:	f012 0f01 	tst.w	r2, #1
   21ff0:	9a01      	ldr	r2, [sp, #4]
   21ff2:	9b47      	ldr	r3, [sp, #284]	; 0x11c
   21ff4:	f102 0104 	add.w	r1, r2, #4
   21ff8:	9101      	str	r1, [sp, #4]
   21ffa:	6812      	ldr	r2, [r2, #0]
   21ffc:	bf14      	ite	ne
   21ffe:	8013      	strhne	r3, [r2, #0]
   22000:	6013      	streq	r3, [r2, #0]
   22002:	e751      	b.n	21ea8 <__svfiscanf_r+0x7c>
   22004:	2305      	movs	r3, #5
   22006:	e7e5      	b.n	21fd4 <__svfiscanf_r+0x1a8>
   22008:	2303      	movs	r3, #3
   2200a:	9349      	str	r3, [sp, #292]	; 0x124
   2200c:	230a      	movs	r3, #10
   2200e:	9344      	str	r3, [sp, #272]	; 0x110
   22010:	6863      	ldr	r3, [r4, #4]
   22012:	2b00      	cmp	r3, #0
   22014:	dd03      	ble.n	2201e <__svfiscanf_r+0x1f2>
   22016:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   22018:	0659      	lsls	r1, r3, #25
   2201a:	d511      	bpl.n	22040 <__svfiscanf_r+0x214>
   2201c:	e018      	b.n	22050 <__svfiscanf_r+0x224>
   2201e:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   22020:	4638      	mov	r0, r7
   22022:	4621      	mov	r1, r4
   22024:	4798      	blx	r3
   22026:	2800      	cmp	r0, #0
   22028:	d0f5      	beq.n	22016 <__svfiscanf_r+0x1ea>
   2202a:	e7aa      	b.n	21f82 <__svfiscanf_r+0x156>
   2202c:	9a47      	ldr	r2, [sp, #284]	; 0x11c
   2202e:	3201      	adds	r2, #1
   22030:	9247      	str	r2, [sp, #284]	; 0x11c
   22032:	6862      	ldr	r2, [r4, #4]
   22034:	3a01      	subs	r2, #1
   22036:	2a00      	cmp	r2, #0
   22038:	6062      	str	r2, [r4, #4]
   2203a:	dd13      	ble.n	22064 <__svfiscanf_r+0x238>
   2203c:	3301      	adds	r3, #1
   2203e:	6023      	str	r3, [r4, #0]
   22040:	6823      	ldr	r3, [r4, #0]
   22042:	f8da 2000 	ldr.w	r2, [sl]
   22046:	7819      	ldrb	r1, [r3, #0]
   22048:	440a      	add	r2, r1
   2204a:	7852      	ldrb	r2, [r2, #1]
   2204c:	0712      	lsls	r2, r2, #28
   2204e:	d4ed      	bmi.n	2202c <__svfiscanf_r+0x200>
   22050:	9b49      	ldr	r3, [sp, #292]	; 0x124
   22052:	2b02      	cmp	r3, #2
   22054:	dc0d      	bgt.n	22072 <__svfiscanf_r+0x246>
   22056:	4638      	mov	r0, r7
   22058:	a943      	add	r1, sp, #268	; 0x10c
   2205a:	4622      	mov	r2, r4
   2205c:	ab01      	add	r3, sp, #4
   2205e:	f000 fa47 	bl	224f0 <_scanf_chars>
   22062:	e019      	b.n	22098 <__svfiscanf_r+0x26c>
   22064:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   22066:	4638      	mov	r0, r7
   22068:	4621      	mov	r1, r4
   2206a:	4798      	blx	r3
   2206c:	2800      	cmp	r0, #0
   2206e:	d0e7      	beq.n	22040 <__svfiscanf_r+0x214>
   22070:	e787      	b.n	21f82 <__svfiscanf_r+0x156>
   22072:	2b04      	cmp	r3, #4
   22074:	dc06      	bgt.n	22084 <__svfiscanf_r+0x258>
   22076:	4638      	mov	r0, r7
   22078:	a943      	add	r1, sp, #268	; 0x10c
   2207a:	4622      	mov	r2, r4
   2207c:	ab01      	add	r3, sp, #4
   2207e:	f000 fa97 	bl	225b0 <_scanf_i>
   22082:	e009      	b.n	22098 <__svfiscanf_r+0x26c>
   22084:	4b0e      	ldr	r3, [pc, #56]	; (220c0 <__svfiscanf_r+0x294>)
   22086:	2b00      	cmp	r3, #0
   22088:	f43f af0e 	beq.w	21ea8 <__svfiscanf_r+0x7c>
   2208c:	4638      	mov	r0, r7
   2208e:	a943      	add	r1, sp, #268	; 0x10c
   22090:	4622      	mov	r2, r4
   22092:	ab01      	add	r3, sp, #4
   22094:	f000 f840 	bl	22118 <_scanf_float>
   22098:	2801      	cmp	r0, #1
   2209a:	d003      	beq.n	220a4 <__svfiscanf_r+0x278>
   2209c:	2802      	cmp	r0, #2
   2209e:	f47f af03 	bne.w	21ea8 <__svfiscanf_r+0x7c>
   220a2:	e76e      	b.n	21f82 <__svfiscanf_r+0x156>
   220a4:	9846      	ldr	r0, [sp, #280]	; 0x118
   220a6:	e001      	b.n	220ac <__svfiscanf_r+0x280>
   220a8:	f04f 30ff 	mov.w	r0, #4294967295
   220ac:	f50d 7d24 	add.w	sp, sp, #656	; 0x290
   220b0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   220b4:	000212a1 	.word	0x000212a1
   220b8:	0001f85d 	.word	0x0001f85d
   220bc:	2007c108 	.word	0x2007c108
   220c0:	00022119 	.word	0x00022119
   220c4:	00027b1e 	.word	0x00027b1e

000220c8 <_vfiscanf_r>:
_vfiscanf_r():
   220c8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   220cc:	460c      	mov	r4, r1
   220ce:	4617      	mov	r7, r2
   220d0:	461e      	mov	r6, r3
   220d2:	4605      	mov	r5, r0
   220d4:	b118      	cbz	r0, 220de <_vfiscanf_r+0x16>
   220d6:	6981      	ldr	r1, [r0, #24]
   220d8:	b909      	cbnz	r1, 220de <_vfiscanf_r+0x16>
   220da:	f7fc fc8f 	bl	1e9fc <__sinit>
   220de:	4b0b      	ldr	r3, [pc, #44]	; (2210c <_vfiscanf_r+0x44>)
   220e0:	429c      	cmp	r4, r3
   220e2:	bf08      	it	eq
   220e4:	686c      	ldreq	r4, [r5, #4]
   220e6:	d008      	beq.n	220fa <_vfiscanf_r+0x32>
   220e8:	4b09      	ldr	r3, [pc, #36]	; (22110 <_vfiscanf_r+0x48>)
   220ea:	429c      	cmp	r4, r3
   220ec:	bf08      	it	eq
   220ee:	68ac      	ldreq	r4, [r5, #8]
   220f0:	d003      	beq.n	220fa <_vfiscanf_r+0x32>
   220f2:	4b08      	ldr	r3, [pc, #32]	; (22114 <_vfiscanf_r+0x4c>)
   220f4:	429c      	cmp	r4, r3
   220f6:	bf08      	it	eq
   220f8:	68ec      	ldreq	r4, [r5, #12]
   220fa:	4628      	mov	r0, r5
   220fc:	4621      	mov	r1, r4
   220fe:	463a      	mov	r2, r7
   22100:	4633      	mov	r3, r6
   22102:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   22106:	f7ff be91 	b.w	21e2c <__svfiscanf_r>
   2210a:	bf00      	nop
   2210c:	00027994 	.word	0x00027994
   22110:	000279b4 	.word	0x000279b4
   22114:	000279d4 	.word	0x000279d4

00022118 <_scanf_float>:
_scanf_float():
   22118:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2211c:	4616      	mov	r6, r2
   2211e:	688a      	ldr	r2, [r1, #8]
   22120:	b087      	sub	sp, #28
   22122:	9302      	str	r3, [sp, #8]
   22124:	1e53      	subs	r3, r2, #1
   22126:	f5b3 7fae 	cmp.w	r3, #348	; 0x15c
   2212a:	4607      	mov	r7, r0
   2212c:	460c      	mov	r4, r1
   2212e:	d906      	bls.n	2213e <_scanf_float+0x26>
   22130:	f46f 73ae 	mvn.w	r3, #348	; 0x15c
   22134:	441a      	add	r2, r3
   22136:	f240 135d 	movw	r3, #349	; 0x15d
   2213a:	608b      	str	r3, [r1, #8]
   2213c:	e000      	b.n	22140 <_scanf_float+0x28>
   2213e:	2200      	movs	r2, #0
   22140:	6823      	ldr	r3, [r4, #0]
   22142:	46a0      	mov	r8, r4
   22144:	f443 63f0 	orr.w	r3, r3, #1920	; 0x780
   22148:	f04f 0b00 	mov.w	fp, #0
   2214c:	f848 3b1c 	str.w	r3, [r8], #28
   22150:	4645      	mov	r5, r8
   22152:	46da      	mov	sl, fp
   22154:	f8cd b014 	str.w	fp, [sp, #20]
   22158:	f8cd b010 	str.w	fp, [sp, #16]
   2215c:	46d9      	mov	r9, fp
   2215e:	f8cd b00c 	str.w	fp, [sp, #12]
   22162:	68a1      	ldr	r1, [r4, #8]
   22164:	2900      	cmp	r1, #0
   22166:	f000 80e9 	beq.w	2233c <_scanf_float+0x224>
   2216a:	6833      	ldr	r3, [r6, #0]
   2216c:	781b      	ldrb	r3, [r3, #0]
   2216e:	2b49      	cmp	r3, #73	; 0x49
   22170:	d075      	beq.n	2225e <_scanf_float+0x146>
   22172:	d816      	bhi.n	221a2 <_scanf_float+0x8a>
   22174:	2b39      	cmp	r3, #57	; 0x39
   22176:	d80d      	bhi.n	22194 <_scanf_float+0x7c>
   22178:	2b31      	cmp	r3, #49	; 0x31
   2217a:	d23e      	bcs.n	221fa <_scanf_float+0xe2>
   2217c:	2b2d      	cmp	r3, #45	; 0x2d
   2217e:	d045      	beq.n	2220c <_scanf_float+0xf4>
   22180:	d802      	bhi.n	22188 <_scanf_float+0x70>
   22182:	2b2b      	cmp	r3, #43	; 0x2b
   22184:	d042      	beq.n	2220c <_scanf_float+0xf4>
   22186:	e0d9      	b.n	2233c <_scanf_float+0x224>
   22188:	2b2e      	cmp	r3, #46	; 0x2e
   2218a:	f000 8097 	beq.w	222bc <_scanf_float+0x1a4>
   2218e:	2b30      	cmp	r3, #48	; 0x30
   22190:	d023      	beq.n	221da <_scanf_float+0xc2>
   22192:	e0d3      	b.n	2233c <_scanf_float+0x224>
   22194:	2b45      	cmp	r3, #69	; 0x45
   22196:	f000 809a 	beq.w	222ce <_scanf_float+0x1b6>
   2219a:	2b46      	cmp	r3, #70	; 0x46
   2219c:	d07c      	beq.n	22298 <_scanf_float+0x180>
   2219e:	2b41      	cmp	r3, #65	; 0x41
   221a0:	e00c      	b.n	221bc <_scanf_float+0xa4>
   221a2:	2b65      	cmp	r3, #101	; 0x65
   221a4:	f000 8093 	beq.w	222ce <_scanf_float+0x1b6>
   221a8:	d80a      	bhi.n	221c0 <_scanf_float+0xa8>
   221aa:	2b54      	cmp	r3, #84	; 0x54
   221ac:	d07a      	beq.n	222a4 <_scanf_float+0x18c>
   221ae:	d802      	bhi.n	221b6 <_scanf_float+0x9e>
   221b0:	2b4e      	cmp	r3, #78	; 0x4e
   221b2:	d033      	beq.n	2221c <_scanf_float+0x104>
   221b4:	e0c2      	b.n	2233c <_scanf_float+0x224>
   221b6:	2b59      	cmp	r3, #89	; 0x59
   221b8:	d07a      	beq.n	222b0 <_scanf_float+0x198>
   221ba:	2b61      	cmp	r3, #97	; 0x61
   221bc:	d049      	beq.n	22252 <_scanf_float+0x13a>
   221be:	e0bd      	b.n	2233c <_scanf_float+0x224>
   221c0:	2b6e      	cmp	r3, #110	; 0x6e
   221c2:	d02b      	beq.n	2221c <_scanf_float+0x104>
   221c4:	d804      	bhi.n	221d0 <_scanf_float+0xb8>
   221c6:	2b66      	cmp	r3, #102	; 0x66
   221c8:	d066      	beq.n	22298 <_scanf_float+0x180>
   221ca:	2b69      	cmp	r3, #105	; 0x69
   221cc:	d047      	beq.n	2225e <_scanf_float+0x146>
   221ce:	e0b5      	b.n	2233c <_scanf_float+0x224>
   221d0:	2b74      	cmp	r3, #116	; 0x74
   221d2:	d067      	beq.n	222a4 <_scanf_float+0x18c>
   221d4:	2b79      	cmp	r3, #121	; 0x79
   221d6:	d06b      	beq.n	222b0 <_scanf_float+0x198>
   221d8:	e0b0      	b.n	2233c <_scanf_float+0x224>
   221da:	6820      	ldr	r0, [r4, #0]
   221dc:	f410 7f80 	tst.w	r0, #256	; 0x100
   221e0:	d00b      	beq.n	221fa <_scanf_float+0xe2>
   221e2:	f020 0080 	bic.w	r0, r0, #128	; 0x80
   221e6:	6020      	str	r0, [r4, #0]
   221e8:	f109 0901 	add.w	r9, r9, #1
   221ec:	2a00      	cmp	r2, #0
   221ee:	f000 808c 	beq.w	2230a <_scanf_float+0x1f2>
   221f2:	3101      	adds	r1, #1
   221f4:	3a01      	subs	r2, #1
   221f6:	60a1      	str	r1, [r4, #8]
   221f8:	e087      	b.n	2230a <_scanf_float+0x1f2>
   221fa:	eb0a 010b 	add.w	r1, sl, fp
   221fe:	2900      	cmp	r1, #0
   22200:	f040 809c 	bne.w	2233c <_scanf_float+0x224>
   22204:	6821      	ldr	r1, [r4, #0]
   22206:	f421 71c0 	bic.w	r1, r1, #384	; 0x180
   2220a:	e005      	b.n	22218 <_scanf_float+0x100>
   2220c:	6821      	ldr	r1, [r4, #0]
   2220e:	0608      	lsls	r0, r1, #24
   22210:	f140 8094 	bpl.w	2233c <_scanf_float+0x224>
   22214:	f021 0180 	bic.w	r1, r1, #128	; 0x80
   22218:	6021      	str	r1, [r4, #0]
   2221a:	e074      	b.n	22306 <_scanf_float+0x1ee>
   2221c:	f1ba 0f00 	cmp.w	sl, #0
   22220:	d10e      	bne.n	22240 <_scanf_float+0x128>
   22222:	f1b9 0f00 	cmp.w	r9, #0
   22226:	d10e      	bne.n	22246 <_scanf_float+0x12e>
   22228:	6821      	ldr	r1, [r4, #0]
   2222a:	f401 60e0 	and.w	r0, r1, #1792	; 0x700
   2222e:	f5b0 6fe0 	cmp.w	r0, #1792	; 0x700
   22232:	d108      	bne.n	22246 <_scanf_float+0x12e>
   22234:	f421 61f0 	bic.w	r1, r1, #1920	; 0x780
   22238:	6021      	str	r1, [r4, #0]
   2223a:	f04f 0a01 	mov.w	sl, #1
   2223e:	e062      	b.n	22306 <_scanf_float+0x1ee>
   22240:	f1ba 0f02 	cmp.w	sl, #2
   22244:	d05d      	beq.n	22302 <_scanf_float+0x1ea>
   22246:	f1bb 0f01 	cmp.w	fp, #1
   2224a:	d020      	beq.n	2228e <_scanf_float+0x176>
   2224c:	f1bb 0f04 	cmp.w	fp, #4
   22250:	e01c      	b.n	2228c <_scanf_float+0x174>
   22252:	f1ba 0f01 	cmp.w	sl, #1
   22256:	d171      	bne.n	2233c <_scanf_float+0x224>
   22258:	f04f 0a02 	mov.w	sl, #2
   2225c:	e053      	b.n	22306 <_scanf_float+0x1ee>
   2225e:	f1bb 0f00 	cmp.w	fp, #0
   22262:	d10e      	bne.n	22282 <_scanf_float+0x16a>
   22264:	f1b9 0f00 	cmp.w	r9, #0
   22268:	d16b      	bne.n	22342 <_scanf_float+0x22a>
   2226a:	6821      	ldr	r1, [r4, #0]
   2226c:	f401 60e0 	and.w	r0, r1, #1792	; 0x700
   22270:	f5b0 6fe0 	cmp.w	r0, #1792	; 0x700
   22274:	d169      	bne.n	2234a <_scanf_float+0x232>
   22276:	f421 61f0 	bic.w	r1, r1, #1920	; 0x780
   2227a:	6021      	str	r1, [r4, #0]
   2227c:	f04f 0b01 	mov.w	fp, #1
   22280:	e041      	b.n	22306 <_scanf_float+0x1ee>
   22282:	f1bb 0f03 	cmp.w	fp, #3
   22286:	d002      	beq.n	2228e <_scanf_float+0x176>
   22288:	f1bb 0f05 	cmp.w	fp, #5
   2228c:	d156      	bne.n	2233c <_scanf_float+0x224>
   2228e:	f10b 0b01 	add.w	fp, fp, #1
   22292:	fa5f fb8b 	uxtb.w	fp, fp
   22296:	e036      	b.n	22306 <_scanf_float+0x1ee>
   22298:	f1bb 0f02 	cmp.w	fp, #2
   2229c:	d14e      	bne.n	2233c <_scanf_float+0x224>
   2229e:	f04f 0b03 	mov.w	fp, #3
   222a2:	e030      	b.n	22306 <_scanf_float+0x1ee>
   222a4:	f1bb 0f06 	cmp.w	fp, #6
   222a8:	d148      	bne.n	2233c <_scanf_float+0x224>
   222aa:	f04f 0b07 	mov.w	fp, #7
   222ae:	e02a      	b.n	22306 <_scanf_float+0x1ee>
   222b0:	f1bb 0f07 	cmp.w	fp, #7
   222b4:	d142      	bne.n	2233c <_scanf_float+0x224>
   222b6:	f04f 0b08 	mov.w	fp, #8
   222ba:	e024      	b.n	22306 <_scanf_float+0x1ee>
   222bc:	6821      	ldr	r1, [r4, #0]
   222be:	0588      	lsls	r0, r1, #22
   222c0:	d53c      	bpl.n	2233c <_scanf_float+0x224>
   222c2:	f421 7120 	bic.w	r1, r1, #640	; 0x280
   222c6:	6021      	str	r1, [r4, #0]
   222c8:	f8cd 900c 	str.w	r9, [sp, #12]
   222cc:	e01b      	b.n	22306 <_scanf_float+0x1ee>
   222ce:	6821      	ldr	r1, [r4, #0]
   222d0:	f401 60a0 	and.w	r0, r1, #1280	; 0x500
   222d4:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
   222d8:	d004      	beq.n	222e4 <_scanf_float+0x1cc>
   222da:	0548      	lsls	r0, r1, #21
   222dc:	d52e      	bpl.n	2233c <_scanf_float+0x224>
   222de:	f1b9 0f00 	cmp.w	r9, #0
   222e2:	d032      	beq.n	2234a <_scanf_float+0x232>
   222e4:	0588      	lsls	r0, r1, #22
   222e6:	d404      	bmi.n	222f2 <_scanf_float+0x1da>
   222e8:	9803      	ldr	r0, [sp, #12]
   222ea:	9505      	str	r5, [sp, #20]
   222ec:	ebc0 0009 	rsb	r0, r0, r9
   222f0:	9004      	str	r0, [sp, #16]
   222f2:	f421 61f0 	bic.w	r1, r1, #1920	; 0x780
   222f6:	f441 71c0 	orr.w	r1, r1, #384	; 0x180
   222fa:	6021      	str	r1, [r4, #0]
   222fc:	f04f 0900 	mov.w	r9, #0
   22300:	e001      	b.n	22306 <_scanf_float+0x1ee>
   22302:	f04f 0a03 	mov.w	sl, #3
   22306:	702b      	strb	r3, [r5, #0]
   22308:	3501      	adds	r5, #1
   2230a:	68a3      	ldr	r3, [r4, #8]
   2230c:	3b01      	subs	r3, #1
   2230e:	60a3      	str	r3, [r4, #8]
   22310:	6923      	ldr	r3, [r4, #16]
   22312:	3301      	adds	r3, #1
   22314:	6123      	str	r3, [r4, #16]
   22316:	6873      	ldr	r3, [r6, #4]
   22318:	3b01      	subs	r3, #1
   2231a:	2b00      	cmp	r3, #0
   2231c:	6073      	str	r3, [r6, #4]
   2231e:	dd03      	ble.n	22328 <_scanf_float+0x210>
   22320:	6833      	ldr	r3, [r6, #0]
   22322:	3301      	adds	r3, #1
   22324:	6033      	str	r3, [r6, #0]
   22326:	e71c      	b.n	22162 <_scanf_float+0x4a>
   22328:	9201      	str	r2, [sp, #4]
   2232a:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   2232e:	4638      	mov	r0, r7
   22330:	4631      	mov	r1, r6
   22332:	4798      	blx	r3
   22334:	9a01      	ldr	r2, [sp, #4]
   22336:	2800      	cmp	r0, #0
   22338:	f43f af13 	beq.w	22162 <_scanf_float+0x4a>
   2233c:	f1b9 0f00 	cmp.w	r9, #0
   22340:	d003      	beq.n	2234a <_scanf_float+0x232>
   22342:	6823      	ldr	r3, [r4, #0]
   22344:	f423 7380 	bic.w	r3, r3, #256	; 0x100
   22348:	6023      	str	r3, [r4, #0]
   2234a:	f10a 3aff 	add.w	sl, sl, #4294967295
   2234e:	f1ba 0f01 	cmp.w	sl, #1
   22352:	d810      	bhi.n	22376 <_scanf_float+0x25e>
   22354:	4545      	cmp	r5, r8
   22356:	462a      	mov	r2, r5
   22358:	d90b      	bls.n	22372 <_scanf_float+0x25a>
   2235a:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
   2235e:	f812 1c01 	ldrb.w	r1, [r2, #-1]
   22362:	4638      	mov	r0, r7
   22364:	4632      	mov	r2, r6
   22366:	4798      	blx	r3
   22368:	6923      	ldr	r3, [r4, #16]
   2236a:	3d01      	subs	r5, #1
   2236c:	3b01      	subs	r3, #1
   2236e:	6123      	str	r3, [r4, #16]
   22370:	e7f0      	b.n	22354 <_scanf_float+0x23c>
   22372:	2601      	movs	r6, #1
   22374:	e0b5      	b.n	224e2 <_scanf_float+0x3ca>
   22376:	f10b 33ff 	add.w	r3, fp, #4294967295
   2237a:	2b06      	cmp	r3, #6
   2237c:	d82c      	bhi.n	223d8 <_scanf_float+0x2c0>
   2237e:	f1bb 0f02 	cmp.w	fp, #2
   22382:	d91a      	bls.n	223ba <_scanf_float+0x2a2>
   22384:	f1ab 0b03 	sub.w	fp, fp, #3
   22388:	fa5f fb8b 	uxtb.w	fp, fp
   2238c:	46aa      	mov	sl, r5
   2238e:	ebcb 0c05 	rsb	ip, fp, r5
   22392:	45e2      	cmp	sl, ip
   22394:	d00e      	beq.n	223b4 <_scanf_float+0x29c>
   22396:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
   2239a:	f81a 1d01 	ldrb.w	r1, [sl, #-1]!
   2239e:	4638      	mov	r0, r7
   223a0:	f8cd c004 	str.w	ip, [sp, #4]
   223a4:	4632      	mov	r2, r6
   223a6:	4798      	blx	r3
   223a8:	6923      	ldr	r3, [r4, #16]
   223aa:	f8dd c004 	ldr.w	ip, [sp, #4]
   223ae:	3b01      	subs	r3, #1
   223b0:	6123      	str	r3, [r4, #16]
   223b2:	e7ee      	b.n	22392 <_scanf_float+0x27a>
   223b4:	ebcb 0505 	rsb	r5, fp, r5
   223b8:	e00e      	b.n	223d8 <_scanf_float+0x2c0>
   223ba:	4545      	cmp	r5, r8
   223bc:	462a      	mov	r2, r5
   223be:	d9d8      	bls.n	22372 <_scanf_float+0x25a>
   223c0:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
   223c4:	f812 1c01 	ldrb.w	r1, [r2, #-1]
   223c8:	4638      	mov	r0, r7
   223ca:	4632      	mov	r2, r6
   223cc:	4798      	blx	r3
   223ce:	6923      	ldr	r3, [r4, #16]
   223d0:	3d01      	subs	r5, #1
   223d2:	3b01      	subs	r3, #1
   223d4:	6123      	str	r3, [r4, #16]
   223d6:	e7f0      	b.n	223ba <_scanf_float+0x2a2>
   223d8:	6823      	ldr	r3, [r4, #0]
   223da:	05da      	lsls	r2, r3, #23
   223dc:	d52e      	bpl.n	2243c <_scanf_float+0x324>
   223de:	055b      	lsls	r3, r3, #21
   223e0:	d50e      	bpl.n	22400 <_scanf_float+0x2e8>
   223e2:	4545      	cmp	r5, r8
   223e4:	462a      	mov	r2, r5
   223e6:	d9c4      	bls.n	22372 <_scanf_float+0x25a>
   223e8:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
   223ec:	f812 1c01 	ldrb.w	r1, [r2, #-1]
   223f0:	4638      	mov	r0, r7
   223f2:	4632      	mov	r2, r6
   223f4:	4798      	blx	r3
   223f6:	6923      	ldr	r3, [r4, #16]
   223f8:	3d01      	subs	r5, #1
   223fa:	3b01      	subs	r3, #1
   223fc:	6123      	str	r3, [r4, #16]
   223fe:	e7f0      	b.n	223e2 <_scanf_float+0x2ca>
   22400:	f815 1c01 	ldrb.w	r1, [r5, #-1]
   22404:	6923      	ldr	r3, [r4, #16]
   22406:	2965      	cmp	r1, #101	; 0x65
   22408:	f103 33ff 	add.w	r3, r3, #4294967295
   2240c:	f105 3aff 	add.w	sl, r5, #4294967295
   22410:	6123      	str	r3, [r4, #16]
   22412:	d00d      	beq.n	22430 <_scanf_float+0x318>
   22414:	2945      	cmp	r1, #69	; 0x45
   22416:	d00b      	beq.n	22430 <_scanf_float+0x318>
   22418:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
   2241c:	4638      	mov	r0, r7
   2241e:	4632      	mov	r2, r6
   22420:	4798      	blx	r3
   22422:	6923      	ldr	r3, [r4, #16]
   22424:	f815 1c02 	ldrb.w	r1, [r5, #-2]
   22428:	3b01      	subs	r3, #1
   2242a:	f1a5 0a02 	sub.w	sl, r5, #2
   2242e:	6123      	str	r3, [r4, #16]
   22430:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
   22434:	4638      	mov	r0, r7
   22436:	4632      	mov	r2, r6
   22438:	4798      	blx	r3
   2243a:	4655      	mov	r5, sl
   2243c:	6826      	ldr	r6, [r4, #0]
   2243e:	f016 0610 	ands.w	r6, r6, #16
   22442:	d14d      	bne.n	224e0 <_scanf_float+0x3c8>
   22444:	702e      	strb	r6, [r5, #0]
   22446:	6823      	ldr	r3, [r4, #0]
   22448:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
   2244c:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
   22450:	d105      	bne.n	2245e <_scanf_float+0x346>
   22452:	9903      	ldr	r1, [sp, #12]
   22454:	ebc1 0309 	rsb	r3, r1, r9
   22458:	425a      	negs	r2, r3
   2245a:	b963      	cbnz	r3, 22476 <_scanf_float+0x35e>
   2245c:	e015      	b.n	2248a <_scanf_float+0x372>
   2245e:	9d04      	ldr	r5, [sp, #16]
   22460:	b19d      	cbz	r5, 2248a <_scanf_float+0x372>
   22462:	9d05      	ldr	r5, [sp, #20]
   22464:	4632      	mov	r2, r6
   22466:	1c69      	adds	r1, r5, #1
   22468:	4638      	mov	r0, r7
   2246a:	230a      	movs	r3, #10
   2246c:	f7fe fb22 	bl	20ab4 <_strtol_r>
   22470:	9d04      	ldr	r5, [sp, #16]
   22472:	1b42      	subs	r2, r0, r5
   22474:	9d05      	ldr	r5, [sp, #20]
   22476:	f204 136f 	addw	r3, r4, #367	; 0x16f
   2247a:	429d      	cmp	r5, r3
   2247c:	bf28      	it	cs
   2247e:	f504 75b7 	addcs.w	r5, r4, #366	; 0x16e
   22482:	4628      	mov	r0, r5
   22484:	4919      	ldr	r1, [pc, #100]	; (224ec <_scanf_float+0x3d4>)
   22486:	f7fd fb63 	bl	1fb50 <siprintf>
   2248a:	4641      	mov	r1, r8
   2248c:	2200      	movs	r2, #0
   2248e:	4638      	mov	r0, r7
   22490:	f7fd fcc6 	bl	1fe20 <_strtod_r>
   22494:	6822      	ldr	r2, [r4, #0]
   22496:	9d02      	ldr	r5, [sp, #8]
   22498:	f012 0f02 	tst.w	r2, #2
   2249c:	4680      	mov	r8, r0
   2249e:	4689      	mov	r9, r1
   224a0:	682b      	ldr	r3, [r5, #0]
   224a2:	d002      	beq.n	224aa <_scanf_float+0x392>
   224a4:	1d1a      	adds	r2, r3, #4
   224a6:	602a      	str	r2, [r5, #0]
   224a8:	e006      	b.n	224b8 <_scanf_float+0x3a0>
   224aa:	9d02      	ldr	r5, [sp, #8]
   224ac:	f012 0f04 	tst.w	r2, #4
   224b0:	f103 0204 	add.w	r2, r3, #4
   224b4:	602a      	str	r2, [r5, #0]
   224b6:	d003      	beq.n	224c0 <_scanf_float+0x3a8>
   224b8:	681b      	ldr	r3, [r3, #0]
   224ba:	e9c3 8900 	strd	r8, r9, [r3]
   224be:	e00b      	b.n	224d8 <_scanf_float+0x3c0>
   224c0:	681d      	ldr	r5, [r3, #0]
   224c2:	f002 f9f5 	bl	248b0 <__fpclassifyd>
   224c6:	b910      	cbnz	r0, 224ce <_scanf_float+0x3b6>
   224c8:	f002 fa46 	bl	24958 <nanf>
   224cc:	e003      	b.n	224d6 <_scanf_float+0x3be>
   224ce:	4640      	mov	r0, r8
   224d0:	4649      	mov	r1, r9
   224d2:	f7fb fbe3 	bl	1dc9c <__aeabi_d2f>
   224d6:	6028      	str	r0, [r5, #0]
   224d8:	68e3      	ldr	r3, [r4, #12]
   224da:	3301      	adds	r3, #1
   224dc:	60e3      	str	r3, [r4, #12]
   224de:	e000      	b.n	224e2 <_scanf_float+0x3ca>
   224e0:	2600      	movs	r6, #0
   224e2:	4630      	mov	r0, r6
   224e4:	b007      	add	sp, #28
   224e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   224ea:	bf00      	nop
   224ec:	00027b5b 	.word	0x00027b5b

000224f0 <_scanf_chars>:
_scanf_chars():
   224f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   224f4:	4615      	mov	r5, r2
   224f6:	688a      	ldr	r2, [r1, #8]
   224f8:	4680      	mov	r8, r0
   224fa:	460c      	mov	r4, r1
   224fc:	b932      	cbnz	r2, 2250c <_scanf_chars+0x1c>
   224fe:	698a      	ldr	r2, [r1, #24]
   22500:	2a00      	cmp	r2, #0
   22502:	bf14      	ite	ne
   22504:	f04f 32ff 	movne.w	r2, #4294967295
   22508:	2201      	moveq	r2, #1
   2250a:	608a      	str	r2, [r1, #8]
   2250c:	6822      	ldr	r2, [r4, #0]
   2250e:	06d1      	lsls	r1, r2, #27
   22510:	d403      	bmi.n	2251a <_scanf_chars+0x2a>
   22512:	681a      	ldr	r2, [r3, #0]
   22514:	1d11      	adds	r1, r2, #4
   22516:	6019      	str	r1, [r3, #0]
   22518:	6817      	ldr	r7, [r2, #0]
   2251a:	2600      	movs	r6, #0
   2251c:	69a0      	ldr	r0, [r4, #24]
   2251e:	b9e0      	cbnz	r0, 2255a <_scanf_chars+0x6a>
   22520:	6823      	ldr	r3, [r4, #0]
   22522:	3601      	adds	r6, #1
   22524:	06da      	lsls	r2, r3, #27
   22526:	d404      	bmi.n	22532 <_scanf_chars+0x42>
   22528:	682b      	ldr	r3, [r5, #0]
   2252a:	3701      	adds	r7, #1
   2252c:	781b      	ldrb	r3, [r3, #0]
   2252e:	f807 3c01 	strb.w	r3, [r7, #-1]
   22532:	682a      	ldr	r2, [r5, #0]
   22534:	686b      	ldr	r3, [r5, #4]
   22536:	3201      	adds	r2, #1
   22538:	602a      	str	r2, [r5, #0]
   2253a:	68a2      	ldr	r2, [r4, #8]
   2253c:	3b01      	subs	r3, #1
   2253e:	3a01      	subs	r2, #1
   22540:	606b      	str	r3, [r5, #4]
   22542:	60a2      	str	r2, [r4, #8]
   22544:	b312      	cbz	r2, 2258c <_scanf_chars+0x9c>
   22546:	2b00      	cmp	r3, #0
   22548:	dce8      	bgt.n	2251c <_scanf_chars+0x2c>
   2254a:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   2254e:	4640      	mov	r0, r8
   22550:	4629      	mov	r1, r5
   22552:	4798      	blx	r3
   22554:	2800      	cmp	r0, #0
   22556:	d0e1      	beq.n	2251c <_scanf_chars+0x2c>
   22558:	e018      	b.n	2258c <_scanf_chars+0x9c>
   2255a:	2801      	cmp	r0, #1
   2255c:	d107      	bne.n	2256e <_scanf_chars+0x7e>
   2255e:	682a      	ldr	r2, [r5, #0]
   22560:	7811      	ldrb	r1, [r2, #0]
   22562:	6962      	ldr	r2, [r4, #20]
   22564:	5c52      	ldrb	r2, [r2, r1]
   22566:	2a00      	cmp	r2, #0
   22568:	d1da      	bne.n	22520 <_scanf_chars+0x30>
   2256a:	b1ee      	cbz	r6, 225a8 <_scanf_chars+0xb8>
   2256c:	e00e      	b.n	2258c <_scanf_chars+0x9c>
   2256e:	2802      	cmp	r0, #2
   22570:	d001      	beq.n	22576 <_scanf_chars+0x86>
   22572:	b14e      	cbz	r6, 22588 <_scanf_chars+0x98>
   22574:	e00a      	b.n	2258c <_scanf_chars+0x9c>
   22576:	682a      	ldr	r2, [r5, #0]
   22578:	490c      	ldr	r1, [pc, #48]	; (225ac <_scanf_chars+0xbc>)
   2257a:	7812      	ldrb	r2, [r2, #0]
   2257c:	6809      	ldr	r1, [r1, #0]
   2257e:	440a      	add	r2, r1
   22580:	7852      	ldrb	r2, [r2, #1]
   22582:	0713      	lsls	r3, r2, #28
   22584:	d5cc      	bpl.n	22520 <_scanf_chars+0x30>
   22586:	e7f4      	b.n	22572 <_scanf_chars+0x82>
   22588:	2801      	cmp	r0, #1
   2258a:	d00d      	beq.n	225a8 <_scanf_chars+0xb8>
   2258c:	6823      	ldr	r3, [r4, #0]
   2258e:	f013 0310 	ands.w	r3, r3, #16
   22592:	d105      	bne.n	225a0 <_scanf_chars+0xb0>
   22594:	68e2      	ldr	r2, [r4, #12]
   22596:	3201      	adds	r2, #1
   22598:	60e2      	str	r2, [r4, #12]
   2259a:	69a2      	ldr	r2, [r4, #24]
   2259c:	b102      	cbz	r2, 225a0 <_scanf_chars+0xb0>
   2259e:	703b      	strb	r3, [r7, #0]
   225a0:	6923      	ldr	r3, [r4, #16]
   225a2:	2000      	movs	r0, #0
   225a4:	441e      	add	r6, r3
   225a6:	6126      	str	r6, [r4, #16]
   225a8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   225ac:	2007c108 	.word	0x2007c108

000225b0 <_scanf_i>:
_scanf_i():
   225b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   225b4:	b089      	sub	sp, #36	; 0x24
   225b6:	460c      	mov	r4, r1
   225b8:	4698      	mov	r8, r3
   225ba:	a905      	add	r1, sp, #20
   225bc:	4b73      	ldr	r3, [pc, #460]	; (2278c <_scanf_i+0x1dc>)
   225be:	9102      	str	r1, [sp, #8]
   225c0:	4681      	mov	r9, r0
   225c2:	4616      	mov	r6, r2
   225c4:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
   225c8:	9b02      	ldr	r3, [sp, #8]
   225ca:	e883 0007 	stmia.w	r3, {r0, r1, r2}
   225ce:	69a3      	ldr	r3, [r4, #24]
   225d0:	4a6f      	ldr	r2, [pc, #444]	; (22790 <_scanf_i+0x1e0>)
   225d2:	4970      	ldr	r1, [pc, #448]	; (22794 <_scanf_i+0x1e4>)
   225d4:	2b03      	cmp	r3, #3
   225d6:	bf08      	it	eq
   225d8:	4611      	moveq	r1, r2
   225da:	68a3      	ldr	r3, [r4, #8]
   225dc:	9103      	str	r1, [sp, #12]
   225de:	1e5a      	subs	r2, r3, #1
   225e0:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
   225e4:	d907      	bls.n	225f6 <_scanf_i+0x46>
   225e6:	f46f 75ae 	mvn.w	r5, #348	; 0x15c
   225ea:	eb03 0a05 	add.w	sl, r3, r5
   225ee:	f240 135d 	movw	r3, #349	; 0x15d
   225f2:	60a3      	str	r3, [r4, #8]
   225f4:	e001      	b.n	225fa <_scanf_i+0x4a>
   225f6:	f04f 0a00 	mov.w	sl, #0
   225fa:	6823      	ldr	r3, [r4, #0]
   225fc:	f104 071c 	add.w	r7, r4, #28
   22600:	f443 6350 	orr.w	r3, r3, #3328	; 0xd00
   22604:	6023      	str	r3, [r4, #0]
   22606:	46bb      	mov	fp, r7
   22608:	2300      	movs	r3, #0
   2260a:	6832      	ldr	r2, [r6, #0]
   2260c:	a905      	add	r1, sp, #20
   2260e:	f851 0023 	ldr.w	r0, [r1, r3, lsl #2]
   22612:	7811      	ldrb	r1, [r2, #0]
   22614:	2202      	movs	r2, #2
   22616:	9301      	str	r3, [sp, #4]
   22618:	f7fc fae0 	bl	1ebdc <memchr>
   2261c:	9b01      	ldr	r3, [sp, #4]
   2261e:	2800      	cmp	r0, #0
   22620:	d035      	beq.n	2268e <_scanf_i+0xde>
   22622:	2b01      	cmp	r3, #1
   22624:	d10b      	bne.n	2263e <_scanf_i+0x8e>
   22626:	6862      	ldr	r2, [r4, #4]
   22628:	b92a      	cbnz	r2, 22636 <_scanf_i+0x86>
   2262a:	2208      	movs	r2, #8
   2262c:	6062      	str	r2, [r4, #4]
   2262e:	6822      	ldr	r2, [r4, #0]
   22630:	f442 7200 	orr.w	r2, r2, #512	; 0x200
   22634:	6022      	str	r2, [r4, #0]
   22636:	6822      	ldr	r2, [r4, #0]
   22638:	f422 62a0 	bic.w	r2, r2, #1280	; 0x500
   2263c:	e00b      	b.n	22656 <_scanf_i+0xa6>
   2263e:	2b02      	cmp	r3, #2
   22640:	d10a      	bne.n	22658 <_scanf_i+0xa8>
   22642:	6822      	ldr	r2, [r4, #0]
   22644:	f402 61c0 	and.w	r1, r2, #1536	; 0x600
   22648:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
   2264c:	d11f      	bne.n	2268e <_scanf_i+0xde>
   2264e:	2110      	movs	r1, #16
   22650:	6061      	str	r1, [r4, #4]
   22652:	f442 7280 	orr.w	r2, r2, #256	; 0x100
   22656:	6022      	str	r2, [r4, #0]
   22658:	68a2      	ldr	r2, [r4, #8]
   2265a:	1e51      	subs	r1, r2, #1
   2265c:	60a1      	str	r1, [r4, #8]
   2265e:	b1b2      	cbz	r2, 2268e <_scanf_i+0xde>
   22660:	6832      	ldr	r2, [r6, #0]
   22662:	f10b 0501 	add.w	r5, fp, #1
   22666:	1c51      	adds	r1, r2, #1
   22668:	6031      	str	r1, [r6, #0]
   2266a:	7812      	ldrb	r2, [r2, #0]
   2266c:	f88b 2000 	strb.w	r2, [fp]
   22670:	6872      	ldr	r2, [r6, #4]
   22672:	3a01      	subs	r2, #1
   22674:	2a00      	cmp	r2, #0
   22676:	6072      	str	r2, [r6, #4]
   22678:	dc08      	bgt.n	2268c <_scanf_i+0xdc>
   2267a:	9301      	str	r3, [sp, #4]
   2267c:	f8d4 2180 	ldr.w	r2, [r4, #384]	; 0x180
   22680:	4648      	mov	r0, r9
   22682:	4631      	mov	r1, r6
   22684:	4790      	blx	r2
   22686:	9b01      	ldr	r3, [sp, #4]
   22688:	2800      	cmp	r0, #0
   2268a:	d141      	bne.n	22710 <_scanf_i+0x160>
   2268c:	46ab      	mov	fp, r5
   2268e:	3301      	adds	r3, #1
   22690:	2b03      	cmp	r3, #3
   22692:	d1ba      	bne.n	2260a <_scanf_i+0x5a>
   22694:	6863      	ldr	r3, [r4, #4]
   22696:	b90b      	cbnz	r3, 2269c <_scanf_i+0xec>
   22698:	230a      	movs	r3, #10
   2269a:	6063      	str	r3, [r4, #4]
   2269c:	6863      	ldr	r3, [r4, #4]
   2269e:	493e      	ldr	r1, [pc, #248]	; (22798 <_scanf_i+0x1e8>)
   226a0:	6960      	ldr	r0, [r4, #20]
   226a2:	1ac9      	subs	r1, r1, r3
   226a4:	f002 f926 	bl	248f4 <__sccl>
   226a8:	465d      	mov	r5, fp
   226aa:	f04f 0b00 	mov.w	fp, #0
   226ae:	68a3      	ldr	r3, [r4, #8]
   226b0:	2b00      	cmp	r3, #0
   226b2:	d02f      	beq.n	22714 <_scanf_i+0x164>
   226b4:	6832      	ldr	r2, [r6, #0]
   226b6:	6960      	ldr	r0, [r4, #20]
   226b8:	7811      	ldrb	r1, [r2, #0]
   226ba:	5c40      	ldrb	r0, [r0, r1]
   226bc:	b350      	cbz	r0, 22714 <_scanf_i+0x164>
   226be:	2930      	cmp	r1, #48	; 0x30
   226c0:	6821      	ldr	r1, [r4, #0]
   226c2:	d10b      	bne.n	226dc <_scanf_i+0x12c>
   226c4:	0508      	lsls	r0, r1, #20
   226c6:	d509      	bpl.n	226dc <_scanf_i+0x12c>
   226c8:	f10b 0b01 	add.w	fp, fp, #1
   226cc:	f1ba 0f00 	cmp.w	sl, #0
   226d0:	d00b      	beq.n	226ea <_scanf_i+0x13a>
   226d2:	3301      	adds	r3, #1
   226d4:	f10a 3aff 	add.w	sl, sl, #4294967295
   226d8:	60a3      	str	r3, [r4, #8]
   226da:	e006      	b.n	226ea <_scanf_i+0x13a>
   226dc:	f421 6110 	bic.w	r1, r1, #2304	; 0x900
   226e0:	6021      	str	r1, [r4, #0]
   226e2:	7813      	ldrb	r3, [r2, #0]
   226e4:	3501      	adds	r5, #1
   226e6:	f805 3c01 	strb.w	r3, [r5, #-1]
   226ea:	6873      	ldr	r3, [r6, #4]
   226ec:	3b01      	subs	r3, #1
   226ee:	2b00      	cmp	r3, #0
   226f0:	6073      	str	r3, [r6, #4]
   226f2:	dd03      	ble.n	226fc <_scanf_i+0x14c>
   226f4:	6833      	ldr	r3, [r6, #0]
   226f6:	3301      	adds	r3, #1
   226f8:	6033      	str	r3, [r6, #0]
   226fa:	e005      	b.n	22708 <_scanf_i+0x158>
   226fc:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   22700:	4648      	mov	r0, r9
   22702:	4631      	mov	r1, r6
   22704:	4798      	blx	r3
   22706:	b928      	cbnz	r0, 22714 <_scanf_i+0x164>
   22708:	68a3      	ldr	r3, [r4, #8]
   2270a:	3b01      	subs	r3, #1
   2270c:	60a3      	str	r3, [r4, #8]
   2270e:	e7ce      	b.n	226ae <_scanf_i+0xfe>
   22710:	f04f 0b00 	mov.w	fp, #0
   22714:	6823      	ldr	r3, [r4, #0]
   22716:	05d9      	lsls	r1, r3, #23
   22718:	d50d      	bpl.n	22736 <_scanf_i+0x186>
   2271a:	42bd      	cmp	r5, r7
   2271c:	d909      	bls.n	22732 <_scanf_i+0x182>
   2271e:	f815 1c01 	ldrb.w	r1, [r5, #-1]
   22722:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
   22726:	4648      	mov	r0, r9
   22728:	4632      	mov	r2, r6
   2272a:	4798      	blx	r3
   2272c:	f105 3aff 	add.w	sl, r5, #4294967295
   22730:	4655      	mov	r5, sl
   22732:	42bd      	cmp	r5, r7
   22734:	d026      	beq.n	22784 <_scanf_i+0x1d4>
   22736:	6822      	ldr	r2, [r4, #0]
   22738:	f012 0210 	ands.w	r2, r2, #16
   2273c:	d11b      	bne.n	22776 <_scanf_i+0x1c6>
   2273e:	702a      	strb	r2, [r5, #0]
   22740:	6863      	ldr	r3, [r4, #4]
   22742:	4648      	mov	r0, r9
   22744:	4639      	mov	r1, r7
   22746:	9e03      	ldr	r6, [sp, #12]
   22748:	47b0      	blx	r6
   2274a:	6822      	ldr	r2, [r4, #0]
   2274c:	f8d8 3000 	ldr.w	r3, [r8]
   22750:	f012 0f20 	tst.w	r2, #32
   22754:	d107      	bne.n	22766 <_scanf_i+0x1b6>
   22756:	07d2      	lsls	r2, r2, #31
   22758:	d505      	bpl.n	22766 <_scanf_i+0x1b6>
   2275a:	1d1a      	adds	r2, r3, #4
   2275c:	f8c8 2000 	str.w	r2, [r8]
   22760:	681b      	ldr	r3, [r3, #0]
   22762:	8018      	strh	r0, [r3, #0]
   22764:	e004      	b.n	22770 <_scanf_i+0x1c0>
   22766:	1d1a      	adds	r2, r3, #4
   22768:	f8c8 2000 	str.w	r2, [r8]
   2276c:	681b      	ldr	r3, [r3, #0]
   2276e:	6018      	str	r0, [r3, #0]
   22770:	68e3      	ldr	r3, [r4, #12]
   22772:	3301      	adds	r3, #1
   22774:	60e3      	str	r3, [r4, #12]
   22776:	6923      	ldr	r3, [r4, #16]
   22778:	1bed      	subs	r5, r5, r7
   2277a:	44ab      	add	fp, r5
   2277c:	445b      	add	r3, fp
   2277e:	6123      	str	r3, [r4, #16]
   22780:	2000      	movs	r0, #0
   22782:	e000      	b.n	22786 <_scanf_i+0x1d6>
   22784:	2001      	movs	r0, #1
   22786:	b009      	add	sp, #36	; 0x24
   22788:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2278c:	00027b60 	.word	0x00027b60
   22790:	00020ab5 	.word	0x00020ab5
   22794:	00024961 	.word	0x00024961
   22798:	00027b7c 	.word	0x00027b7c

0002279c <_vsniprintf_r>:
_vsnprintf_r():
   2279c:	b530      	push	{r4, r5, lr}
   2279e:	1e14      	subs	r4, r2, #0
   227a0:	b09b      	sub	sp, #108	; 0x6c
   227a2:	4605      	mov	r5, r0
   227a4:	da04      	bge.n	227b0 <_vsniprintf_r+0x14>
   227a6:	238b      	movs	r3, #139	; 0x8b
   227a8:	6003      	str	r3, [r0, #0]
   227aa:	f04f 30ff 	mov.w	r0, #4294967295
   227ae:	e01c      	b.n	227ea <_vsniprintf_r+0x4e>
   227b0:	f44f 7202 	mov.w	r2, #520	; 0x208
   227b4:	9100      	str	r1, [sp, #0]
   227b6:	9104      	str	r1, [sp, #16]
   227b8:	f8ad 200c 	strh.w	r2, [sp, #12]
   227bc:	bf14      	ite	ne
   227be:	f104 31ff 	addne.w	r1, r4, #4294967295
   227c2:	4621      	moveq	r1, r4
   227c4:	f64f 72ff 	movw	r2, #65535	; 0xffff
   227c8:	9102      	str	r1, [sp, #8]
   227ca:	9105      	str	r1, [sp, #20]
   227cc:	f8ad 200e 	strh.w	r2, [sp, #14]
   227d0:	4669      	mov	r1, sp
   227d2:	461a      	mov	r2, r3
   227d4:	9b1e      	ldr	r3, [sp, #120]	; 0x78
   227d6:	f7fe fa59 	bl	20c8c <_svfiprintf_r>
   227da:	1c43      	adds	r3, r0, #1
   227dc:	bfbc      	itt	lt
   227de:	238b      	movlt	r3, #139	; 0x8b
   227e0:	602b      	strlt	r3, [r5, #0]
   227e2:	b114      	cbz	r4, 227ea <_vsniprintf_r+0x4e>
   227e4:	9b00      	ldr	r3, [sp, #0]
   227e6:	2200      	movs	r2, #0
   227e8:	701a      	strb	r2, [r3, #0]
   227ea:	b01b      	add	sp, #108	; 0x6c
   227ec:	bd30      	pop	{r4, r5, pc}
	...

000227f0 <vsniprintf>:
vsnprintf():
   227f0:	b573      	push	{r0, r1, r4, r5, r6, lr}
   227f2:	9300      	str	r3, [sp, #0]
   227f4:	4b05      	ldr	r3, [pc, #20]	; (2280c <vsniprintf+0x1c>)
   227f6:	4606      	mov	r6, r0
   227f8:	460d      	mov	r5, r1
   227fa:	4614      	mov	r4, r2
   227fc:	6818      	ldr	r0, [r3, #0]
   227fe:	4631      	mov	r1, r6
   22800:	462a      	mov	r2, r5
   22802:	4623      	mov	r3, r4
   22804:	f7ff ffca 	bl	2279c <_vsniprintf_r>
   22808:	b002      	add	sp, #8
   2280a:	bd70      	pop	{r4, r5, r6, pc}
   2280c:	2007c16c 	.word	0x2007c16c

00022810 <_vsiscanf_r>:
_vsiscanf_r():
   22810:	b570      	push	{r4, r5, r6, lr}
   22812:	4604      	mov	r4, r0
   22814:	b09a      	sub	sp, #104	; 0x68
   22816:	461d      	mov	r5, r3
   22818:	4608      	mov	r0, r1
   2281a:	f44f 7301 	mov.w	r3, #516	; 0x204
   2281e:	4616      	mov	r6, r2
   22820:	f8ad 300c 	strh.w	r3, [sp, #12]
   22824:	9100      	str	r1, [sp, #0]
   22826:	9104      	str	r1, [sp, #16]
   22828:	f7fd fa46 	bl	1fcb8 <strlen>
   2282c:	4b09      	ldr	r3, [pc, #36]	; (22854 <_vsiscanf_r+0x44>)
   2282e:	2100      	movs	r1, #0
   22830:	9309      	str	r3, [sp, #36]	; 0x24
   22832:	f64f 73ff 	movw	r3, #65535	; 0xffff
   22836:	9001      	str	r0, [sp, #4]
   22838:	9005      	str	r0, [sp, #20]
   2283a:	910d      	str	r1, [sp, #52]	; 0x34
   2283c:	9112      	str	r1, [sp, #72]	; 0x48
   2283e:	f8ad 300e 	strh.w	r3, [sp, #14]
   22842:	4620      	mov	r0, r4
   22844:	4669      	mov	r1, sp
   22846:	4632      	mov	r2, r6
   22848:	462b      	mov	r3, r5
   2284a:	f7fe fb65 	bl	20f18 <__ssvfiscanf_r>
   2284e:	b01a      	add	sp, #104	; 0x68
   22850:	bd70      	pop	{r4, r5, r6, pc}
   22852:	bf00      	nop
   22854:	0001fbbb 	.word	0x0001fbbb

00022858 <vsiscanf>:
vsscanf():
   22858:	b530      	push	{r4, r5, lr}
   2285a:	4613      	mov	r3, r2
   2285c:	4a04      	ldr	r2, [pc, #16]	; (22870 <vsiscanf+0x18>)
   2285e:	4605      	mov	r5, r0
   22860:	460c      	mov	r4, r1
   22862:	6810      	ldr	r0, [r2, #0]
   22864:	4629      	mov	r1, r5
   22866:	4622      	mov	r2, r4
   22868:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
   2286c:	f7ff bfd0 	b.w	22810 <_vsiscanf_r>
   22870:	2007c16c 	.word	0x2007c16c

00022874 <__swbuf_r>:
__swbuf_r():
   22874:	b570      	push	{r4, r5, r6, lr}
   22876:	460e      	mov	r6, r1
   22878:	4614      	mov	r4, r2
   2287a:	4605      	mov	r5, r0
   2287c:	b118      	cbz	r0, 22886 <__swbuf_r+0x12>
   2287e:	6983      	ldr	r3, [r0, #24]
   22880:	b90b      	cbnz	r3, 22886 <__swbuf_r+0x12>
   22882:	f7fc f8bb 	bl	1e9fc <__sinit>
   22886:	4b22      	ldr	r3, [pc, #136]	; (22910 <__swbuf_r+0x9c>)
   22888:	429c      	cmp	r4, r3
   2288a:	d101      	bne.n	22890 <__swbuf_r+0x1c>
   2288c:	686c      	ldr	r4, [r5, #4]
   2288e:	e008      	b.n	228a2 <__swbuf_r+0x2e>
   22890:	4b20      	ldr	r3, [pc, #128]	; (22914 <__swbuf_r+0xa0>)
   22892:	429c      	cmp	r4, r3
   22894:	d101      	bne.n	2289a <__swbuf_r+0x26>
   22896:	68ac      	ldr	r4, [r5, #8]
   22898:	e003      	b.n	228a2 <__swbuf_r+0x2e>
   2289a:	4b1f      	ldr	r3, [pc, #124]	; (22918 <__swbuf_r+0xa4>)
   2289c:	429c      	cmp	r4, r3
   2289e:	bf08      	it	eq
   228a0:	68ec      	ldreq	r4, [r5, #12]
   228a2:	69a3      	ldr	r3, [r4, #24]
   228a4:	60a3      	str	r3, [r4, #8]
   228a6:	89a3      	ldrh	r3, [r4, #12]
   228a8:	071a      	lsls	r2, r3, #28
   228aa:	d509      	bpl.n	228c0 <__swbuf_r+0x4c>
   228ac:	6923      	ldr	r3, [r4, #16]
   228ae:	b13b      	cbz	r3, 228c0 <__swbuf_r+0x4c>
   228b0:	6923      	ldr	r3, [r4, #16]
   228b2:	6820      	ldr	r0, [r4, #0]
   228b4:	b2f6      	uxtb	r6, r6
   228b6:	1ac0      	subs	r0, r0, r3
   228b8:	6963      	ldr	r3, [r4, #20]
   228ba:	4298      	cmp	r0, r3
   228bc:	db0f      	blt.n	228de <__swbuf_r+0x6a>
   228be:	e008      	b.n	228d2 <__swbuf_r+0x5e>
   228c0:	4628      	mov	r0, r5
   228c2:	4621      	mov	r1, r4
   228c4:	f000 f83c 	bl	22940 <__swsetup_r>
   228c8:	2800      	cmp	r0, #0
   228ca:	d0f1      	beq.n	228b0 <__swbuf_r+0x3c>
   228cc:	f04f 30ff 	mov.w	r0, #4294967295
   228d0:	bd70      	pop	{r4, r5, r6, pc}
   228d2:	4628      	mov	r0, r5
   228d4:	4621      	mov	r1, r4
   228d6:	f000 ffd7 	bl	23888 <_fflush_r>
   228da:	2800      	cmp	r0, #0
   228dc:	d1f6      	bne.n	228cc <__swbuf_r+0x58>
   228de:	68a3      	ldr	r3, [r4, #8]
   228e0:	3001      	adds	r0, #1
   228e2:	3b01      	subs	r3, #1
   228e4:	60a3      	str	r3, [r4, #8]
   228e6:	6823      	ldr	r3, [r4, #0]
   228e8:	1c5a      	adds	r2, r3, #1
   228ea:	6022      	str	r2, [r4, #0]
   228ec:	701e      	strb	r6, [r3, #0]
   228ee:	6963      	ldr	r3, [r4, #20]
   228f0:	4298      	cmp	r0, r3
   228f2:	d004      	beq.n	228fe <__swbuf_r+0x8a>
   228f4:	89a3      	ldrh	r3, [r4, #12]
   228f6:	07db      	lsls	r3, r3, #31
   228f8:	d507      	bpl.n	2290a <__swbuf_r+0x96>
   228fa:	2e0a      	cmp	r6, #10
   228fc:	d105      	bne.n	2290a <__swbuf_r+0x96>
   228fe:	4628      	mov	r0, r5
   22900:	4621      	mov	r1, r4
   22902:	f000 ffc1 	bl	23888 <_fflush_r>
   22906:	2800      	cmp	r0, #0
   22908:	d1e0      	bne.n	228cc <__swbuf_r+0x58>
   2290a:	4630      	mov	r0, r6
   2290c:	bd70      	pop	{r4, r5, r6, pc}
   2290e:	bf00      	nop
   22910:	00027994 	.word	0x00027994
   22914:	000279b4 	.word	0x000279b4
   22918:	000279d4 	.word	0x000279d4

0002291c <_write_r>:
_write_r():
   2291c:	b538      	push	{r3, r4, r5, lr}
   2291e:	4c07      	ldr	r4, [pc, #28]	; (2293c <_write_r+0x20>)
   22920:	4605      	mov	r5, r0
   22922:	2000      	movs	r0, #0
   22924:	6020      	str	r0, [r4, #0]
   22926:	4608      	mov	r0, r1
   22928:	4611      	mov	r1, r2
   2292a:	461a      	mov	r2, r3
   2292c:	f7ed fd20 	bl	10370 <_write>
   22930:	1c43      	adds	r3, r0, #1
   22932:	d102      	bne.n	2293a <_write_r+0x1e>
   22934:	6823      	ldr	r3, [r4, #0]
   22936:	b103      	cbz	r3, 2293a <_write_r+0x1e>
   22938:	602b      	str	r3, [r5, #0]
   2293a:	bd38      	pop	{r3, r4, r5, pc}
   2293c:	2007cad4 	.word	0x2007cad4

00022940 <__swsetup_r>:
__swsetup_r():
   22940:	4b32      	ldr	r3, [pc, #200]	; (22a0c <__swsetup_r+0xcc>)
   22942:	b570      	push	{r4, r5, r6, lr}
   22944:	681d      	ldr	r5, [r3, #0]
   22946:	4606      	mov	r6, r0
   22948:	460c      	mov	r4, r1
   2294a:	b125      	cbz	r5, 22956 <__swsetup_r+0x16>
   2294c:	69ab      	ldr	r3, [r5, #24]
   2294e:	b913      	cbnz	r3, 22956 <__swsetup_r+0x16>
   22950:	4628      	mov	r0, r5
   22952:	f7fc f853 	bl	1e9fc <__sinit>
   22956:	4b2e      	ldr	r3, [pc, #184]	; (22a10 <__swsetup_r+0xd0>)
   22958:	429c      	cmp	r4, r3
   2295a:	d101      	bne.n	22960 <__swsetup_r+0x20>
   2295c:	686c      	ldr	r4, [r5, #4]
   2295e:	e008      	b.n	22972 <__swsetup_r+0x32>
   22960:	4b2c      	ldr	r3, [pc, #176]	; (22a14 <__swsetup_r+0xd4>)
   22962:	429c      	cmp	r4, r3
   22964:	d101      	bne.n	2296a <__swsetup_r+0x2a>
   22966:	68ac      	ldr	r4, [r5, #8]
   22968:	e003      	b.n	22972 <__swsetup_r+0x32>
   2296a:	4b2b      	ldr	r3, [pc, #172]	; (22a18 <__swsetup_r+0xd8>)
   2296c:	429c      	cmp	r4, r3
   2296e:	bf08      	it	eq
   22970:	68ec      	ldreq	r4, [r5, #12]
   22972:	89a2      	ldrh	r2, [r4, #12]
   22974:	b293      	uxth	r3, r2
   22976:	0719      	lsls	r1, r3, #28
   22978:	d420      	bmi.n	229bc <__swsetup_r+0x7c>
   2297a:	06dd      	lsls	r5, r3, #27
   2297c:	d405      	bmi.n	2298a <__swsetup_r+0x4a>
   2297e:	2309      	movs	r3, #9
   22980:	f042 0240 	orr.w	r2, r2, #64	; 0x40
   22984:	6033      	str	r3, [r6, #0]
   22986:	81a2      	strh	r2, [r4, #12]
   22988:	e03b      	b.n	22a02 <__swsetup_r+0xc2>
   2298a:	0758      	lsls	r0, r3, #29
   2298c:	d512      	bpl.n	229b4 <__swsetup_r+0x74>
   2298e:	6b61      	ldr	r1, [r4, #52]	; 0x34
   22990:	b141      	cbz	r1, 229a4 <__swsetup_r+0x64>
   22992:	f104 0344 	add.w	r3, r4, #68	; 0x44
   22996:	4299      	cmp	r1, r3
   22998:	d002      	beq.n	229a0 <__swsetup_r+0x60>
   2299a:	4630      	mov	r0, r6
   2299c:	f7fc fda0 	bl	1f4e0 <_free_r>
   229a0:	2300      	movs	r3, #0
   229a2:	6363      	str	r3, [r4, #52]	; 0x34
   229a4:	89a3      	ldrh	r3, [r4, #12]
   229a6:	f023 0324 	bic.w	r3, r3, #36	; 0x24
   229aa:	81a3      	strh	r3, [r4, #12]
   229ac:	2300      	movs	r3, #0
   229ae:	6063      	str	r3, [r4, #4]
   229b0:	6923      	ldr	r3, [r4, #16]
   229b2:	6023      	str	r3, [r4, #0]
   229b4:	89a3      	ldrh	r3, [r4, #12]
   229b6:	f043 0308 	orr.w	r3, r3, #8
   229ba:	81a3      	strh	r3, [r4, #12]
   229bc:	6923      	ldr	r3, [r4, #16]
   229be:	b94b      	cbnz	r3, 229d4 <__swsetup_r+0x94>
   229c0:	89a3      	ldrh	r3, [r4, #12]
   229c2:	f403 7320 	and.w	r3, r3, #640	; 0x280
   229c6:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   229ca:	d003      	beq.n	229d4 <__swsetup_r+0x94>
   229cc:	4630      	mov	r0, r6
   229ce:	4621      	mov	r1, r4
   229d0:	f001 fade 	bl	23f90 <__smakebuf_r>
   229d4:	89a3      	ldrh	r3, [r4, #12]
   229d6:	f013 0201 	ands.w	r2, r3, #1
   229da:	d005      	beq.n	229e8 <__swsetup_r+0xa8>
   229dc:	2200      	movs	r2, #0
   229de:	60a2      	str	r2, [r4, #8]
   229e0:	6962      	ldr	r2, [r4, #20]
   229e2:	4252      	negs	r2, r2
   229e4:	61a2      	str	r2, [r4, #24]
   229e6:	e003      	b.n	229f0 <__swsetup_r+0xb0>
   229e8:	0799      	lsls	r1, r3, #30
   229ea:	bf58      	it	pl
   229ec:	6962      	ldrpl	r2, [r4, #20]
   229ee:	60a2      	str	r2, [r4, #8]
   229f0:	6922      	ldr	r2, [r4, #16]
   229f2:	b94a      	cbnz	r2, 22a08 <__swsetup_r+0xc8>
   229f4:	f003 0080 	and.w	r0, r3, #128	; 0x80
   229f8:	b280      	uxth	r0, r0
   229fa:	b130      	cbz	r0, 22a0a <__swsetup_r+0xca>
   229fc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   22a00:	81a3      	strh	r3, [r4, #12]
   22a02:	f04f 30ff 	mov.w	r0, #4294967295
   22a06:	bd70      	pop	{r4, r5, r6, pc}
   22a08:	2000      	movs	r0, #0
   22a0a:	bd70      	pop	{r4, r5, r6, pc}
   22a0c:	2007c16c 	.word	0x2007c16c
   22a10:	00027994 	.word	0x00027994
   22a14:	000279b4 	.word	0x000279b4
   22a18:	000279d4 	.word	0x000279d4

00022a1c <asctime>:
asctime():
   22a1c:	4b09      	ldr	r3, [pc, #36]	; (22a44 <asctime+0x28>)
   22a1e:	b570      	push	{r4, r5, r6, lr}
   22a20:	681c      	ldr	r4, [r3, #0]
   22a22:	4606      	mov	r6, r0
   22a24:	6c25      	ldr	r5, [r4, #64]	; 0x40
   22a26:	b93d      	cbnz	r5, 22a38 <asctime+0x1c>
   22a28:	201a      	movs	r0, #26
   22a2a:	f7fc f8c7 	bl	1ebbc <malloc>
   22a2e:	4629      	mov	r1, r5
   22a30:	6420      	str	r0, [r4, #64]	; 0x40
   22a32:	221a      	movs	r2, #26
   22a34:	f7fc f913 	bl	1ec5e <memset>
   22a38:	4630      	mov	r0, r6
   22a3a:	6c21      	ldr	r1, [r4, #64]	; 0x40
   22a3c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
   22a40:	f000 b802 	b.w	22a48 <asctime_r>
   22a44:	2007c16c 	.word	0x2007c16c

00022a48 <asctime_r>:
asctime_r():
   22a48:	b530      	push	{r4, r5, lr}
   22a4a:	460d      	mov	r5, r1
   22a4c:	68c1      	ldr	r1, [r0, #12]
   22a4e:	b087      	sub	sp, #28
   22a50:	6982      	ldr	r2, [r0, #24]
   22a52:	6903      	ldr	r3, [r0, #16]
   22a54:	9100      	str	r1, [sp, #0]
   22a56:	6881      	ldr	r1, [r0, #8]
   22a58:	4c0b      	ldr	r4, [pc, #44]	; (22a88 <asctime_r+0x40>)
   22a5a:	9101      	str	r1, [sp, #4]
   22a5c:	6841      	ldr	r1, [r0, #4]
   22a5e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
   22a62:	9102      	str	r1, [sp, #8]
   22a64:	6801      	ldr	r1, [r0, #0]
   22a66:	4422      	add	r2, r4
   22a68:	9103      	str	r1, [sp, #12]
   22a6a:	6941      	ldr	r1, [r0, #20]
   22a6c:	4c07      	ldr	r4, [pc, #28]	; (22a8c <asctime_r+0x44>)
   22a6e:	f201 716c 	addw	r1, r1, #1900	; 0x76c
   22a72:	eb03 0343 	add.w	r3, r3, r3, lsl #1
   22a76:	9104      	str	r1, [sp, #16]
   22a78:	4628      	mov	r0, r5
   22a7a:	4905      	ldr	r1, [pc, #20]	; (22a90 <asctime_r+0x48>)
   22a7c:	4423      	add	r3, r4
   22a7e:	f7fd f867 	bl	1fb50 <siprintf>
   22a82:	4628      	mov	r0, r5
   22a84:	b007      	add	sp, #28
   22a86:	bd30      	pop	{r4, r5, pc}
   22a88:	00027ba7 	.word	0x00027ba7
   22a8c:	00027bbc 	.word	0x00027bbc
   22a90:	00027b87 	.word	0x00027b87

00022a94 <_close_r>:
_close_r():
   22a94:	b538      	push	{r3, r4, r5, lr}
   22a96:	4c06      	ldr	r4, [pc, #24]	; (22ab0 <_close_r+0x1c>)
   22a98:	2300      	movs	r3, #0
   22a9a:	4605      	mov	r5, r0
   22a9c:	4608      	mov	r0, r1
   22a9e:	6023      	str	r3, [r4, #0]
   22aa0:	f7ed fca8 	bl	103f4 <_close>
   22aa4:	1c43      	adds	r3, r0, #1
   22aa6:	d102      	bne.n	22aae <_close_r+0x1a>
   22aa8:	6823      	ldr	r3, [r4, #0]
   22aaa:	b103      	cbz	r3, 22aae <_close_r+0x1a>
   22aac:	602b      	str	r3, [r5, #0]
   22aae:	bd38      	pop	{r3, r4, r5, pc}
   22ab0:	2007cad4 	.word	0x2007cad4

00022ab4 <div>:
div():
   22ab4:	b510      	push	{r4, lr}
   22ab6:	2900      	cmp	r1, #0
   22ab8:	fb91 f4f2 	sdiv	r4, r1, r2
   22abc:	fb02 1314 	mls	r3, r2, r4, r1
   22ac0:	db04      	blt.n	22acc <div+0x18>
   22ac2:	2b00      	cmp	r3, #0
   22ac4:	da07      	bge.n	22ad6 <div+0x22>
   22ac6:	3401      	adds	r4, #1
   22ac8:	1a9b      	subs	r3, r3, r2
   22aca:	e004      	b.n	22ad6 <div+0x22>
   22acc:	2b00      	cmp	r3, #0
   22ace:	bfc4      	itt	gt
   22ad0:	f104 34ff 	addgt.w	r4, r4, #4294967295
   22ad4:	189b      	addgt	r3, r3, r2
   22ad6:	6004      	str	r4, [r0, #0]
   22ad8:	6043      	str	r3, [r0, #4]
   22ada:	bd10      	pop	{r4, pc}

00022adc <quorem>:
quorem():
   22adc:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22ae0:	6903      	ldr	r3, [r0, #16]
   22ae2:	690c      	ldr	r4, [r1, #16]
   22ae4:	4680      	mov	r8, r0
   22ae6:	42a3      	cmp	r3, r4
   22ae8:	f2c0 8083 	blt.w	22bf2 <quorem+0x116>
   22aec:	3c01      	subs	r4, #1
   22aee:	00a2      	lsls	r2, r4, #2
   22af0:	f101 0714 	add.w	r7, r1, #20
   22af4:	f100 0514 	add.w	r5, r0, #20
   22af8:	4691      	mov	r9, r2
   22afa:	9200      	str	r2, [sp, #0]
   22afc:	f857 6024 	ldr.w	r6, [r7, r4, lsl #2]
   22b00:	442a      	add	r2, r5
   22b02:	9201      	str	r2, [sp, #4]
   22b04:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
   22b08:	3601      	adds	r6, #1
   22b0a:	fbb2 f6f6 	udiv	r6, r2, r6
   22b0e:	44b9      	add	r9, r7
   22b10:	2e00      	cmp	r6, #0
   22b12:	d03b      	beq.n	22b8c <quorem+0xb0>
   22b14:	f04f 0e00 	mov.w	lr, #0
   22b18:	463a      	mov	r2, r7
   22b1a:	4628      	mov	r0, r5
   22b1c:	46f3      	mov	fp, lr
   22b1e:	f852 cb04 	ldr.w	ip, [r2], #4
   22b22:	6803      	ldr	r3, [r0, #0]
   22b24:	fa1f fa8c 	uxth.w	sl, ip
   22b28:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
   22b2c:	fb0a ea06 	mla	sl, sl, r6, lr
   22b30:	fb0c fc06 	mul.w	ip, ip, r6
   22b34:	eb0c 4c1a 	add.w	ip, ip, sl, lsr #16
   22b38:	fa1f fa8a 	uxth.w	sl, sl
   22b3c:	ebca 0b0b 	rsb	fp, sl, fp
   22b40:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
   22b44:	fa1f fa83 	uxth.w	sl, r3
   22b48:	fa1f fc8c 	uxth.w	ip, ip
   22b4c:	44da      	add	sl, fp
   22b4e:	ebcc 4c13 	rsb	ip, ip, r3, lsr #16
   22b52:	eb0c 4c2a 	add.w	ip, ip, sl, asr #16
   22b56:	fa1f fa8a 	uxth.w	sl, sl
   22b5a:	ea4a 4a0c 	orr.w	sl, sl, ip, lsl #16
   22b5e:	454a      	cmp	r2, r9
   22b60:	ea4f 4b2c 	mov.w	fp, ip, asr #16
   22b64:	f840 ab04 	str.w	sl, [r0], #4
   22b68:	d9d9      	bls.n	22b1e <quorem+0x42>
   22b6a:	9a00      	ldr	r2, [sp, #0]
   22b6c:	58ab      	ldr	r3, [r5, r2]
   22b6e:	b96b      	cbnz	r3, 22b8c <quorem+0xb0>
   22b70:	9a01      	ldr	r2, [sp, #4]
   22b72:	1f13      	subs	r3, r2, #4
   22b74:	42ab      	cmp	r3, r5
   22b76:	461a      	mov	r2, r3
   22b78:	d802      	bhi.n	22b80 <quorem+0xa4>
   22b7a:	f8c8 4010 	str.w	r4, [r8, #16]
   22b7e:	e005      	b.n	22b8c <quorem+0xb0>
   22b80:	6812      	ldr	r2, [r2, #0]
   22b82:	3b04      	subs	r3, #4
   22b84:	2a00      	cmp	r2, #0
   22b86:	d1f8      	bne.n	22b7a <quorem+0x9e>
   22b88:	3c01      	subs	r4, #1
   22b8a:	e7f3      	b.n	22b74 <quorem+0x98>
   22b8c:	4640      	mov	r0, r8
   22b8e:	f001 fca2 	bl	244d6 <__mcmp>
   22b92:	2800      	cmp	r0, #0
   22b94:	db2b      	blt.n	22bee <quorem+0x112>
   22b96:	3601      	adds	r6, #1
   22b98:	462b      	mov	r3, r5
   22b9a:	2000      	movs	r0, #0
   22b9c:	f857 cb04 	ldr.w	ip, [r7], #4
   22ba0:	681a      	ldr	r2, [r3, #0]
   22ba2:	fa1f f18c 	uxth.w	r1, ip
   22ba6:	1a41      	subs	r1, r0, r1
   22ba8:	fa1f fa82 	uxth.w	sl, r2
   22bac:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
   22bb0:	4451      	add	r1, sl
   22bb2:	ebcc 4212 	rsb	r2, ip, r2, lsr #16
   22bb6:	eb02 4221 	add.w	r2, r2, r1, asr #16
   22bba:	b289      	uxth	r1, r1
   22bbc:	1410      	asrs	r0, r2, #16
   22bbe:	454f      	cmp	r7, r9
   22bc0:	ea41 4202 	orr.w	r2, r1, r2, lsl #16
   22bc4:	f843 2b04 	str.w	r2, [r3], #4
   22bc8:	d9e8      	bls.n	22b9c <quorem+0xc0>
   22bca:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
   22bce:	eb05 0384 	add.w	r3, r5, r4, lsl #2
   22bd2:	b962      	cbnz	r2, 22bee <quorem+0x112>
   22bd4:	3b04      	subs	r3, #4
   22bd6:	42ab      	cmp	r3, r5
   22bd8:	461a      	mov	r2, r3
   22bda:	d802      	bhi.n	22be2 <quorem+0x106>
   22bdc:	f8c8 4010 	str.w	r4, [r8, #16]
   22be0:	e005      	b.n	22bee <quorem+0x112>
   22be2:	6812      	ldr	r2, [r2, #0]
   22be4:	3b04      	subs	r3, #4
   22be6:	2a00      	cmp	r2, #0
   22be8:	d1f8      	bne.n	22bdc <quorem+0x100>
   22bea:	3c01      	subs	r4, #1
   22bec:	e7f3      	b.n	22bd6 <quorem+0xfa>
   22bee:	4630      	mov	r0, r6
   22bf0:	e000      	b.n	22bf4 <quorem+0x118>
   22bf2:	2000      	movs	r0, #0
   22bf4:	b003      	add	sp, #12
   22bf6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22bfa:	0000      	movs	r0, r0
   22bfc:	0000      	movs	r0, r0
	...

00022c00 <_dtoa_r>:
_dtoa_r():
   22c00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22c04:	6a45      	ldr	r5, [r0, #36]	; 0x24
   22c06:	b09b      	sub	sp, #108	; 0x6c
   22c08:	4682      	mov	sl, r0
   22c0a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   22c0c:	e9cd 2304 	strd	r2, r3, [sp, #16]
   22c10:	b945      	cbnz	r5, 22c24 <_dtoa_r+0x24>
   22c12:	2010      	movs	r0, #16
   22c14:	f7fb ffd2 	bl	1ebbc <malloc>
   22c18:	f8ca 0024 	str.w	r0, [sl, #36]	; 0x24
   22c1c:	6045      	str	r5, [r0, #4]
   22c1e:	6085      	str	r5, [r0, #8]
   22c20:	6005      	str	r5, [r0, #0]
   22c22:	60c5      	str	r5, [r0, #12]
   22c24:	f8da 3024 	ldr.w	r3, [sl, #36]	; 0x24
   22c28:	6819      	ldr	r1, [r3, #0]
   22c2a:	b161      	cbz	r1, 22c46 <_dtoa_r+0x46>
   22c2c:	685b      	ldr	r3, [r3, #4]
   22c2e:	2201      	movs	r2, #1
   22c30:	604b      	str	r3, [r1, #4]
   22c32:	fa02 f303 	lsl.w	r3, r2, r3
   22c36:	4650      	mov	r0, sl
   22c38:	608b      	str	r3, [r1, #8]
   22c3a:	f001 fa2a 	bl	24092 <_Bfree>
   22c3e:	f8da 3024 	ldr.w	r3, [sl, #36]	; 0x24
   22c42:	2200      	movs	r2, #0
   22c44:	601a      	str	r2, [r3, #0]
   22c46:	9805      	ldr	r0, [sp, #20]
   22c48:	2800      	cmp	r0, #0
   22c4a:	da05      	bge.n	22c58 <_dtoa_r+0x58>
   22c4c:	2301      	movs	r3, #1
   22c4e:	f020 4100 	bic.w	r1, r0, #2147483648	; 0x80000000
   22c52:	6023      	str	r3, [r4, #0]
   22c54:	9105      	str	r1, [sp, #20]
   22c56:	e001      	b.n	22c5c <_dtoa_r+0x5c>
   22c58:	2300      	movs	r3, #0
   22c5a:	6023      	str	r3, [r4, #0]
   22c5c:	9f05      	ldr	r7, [sp, #20]
   22c5e:	4a9c      	ldr	r2, [pc, #624]	; (22ed0 <_dtoa_r+0x2d0>)
   22c60:	f027 4300 	bic.w	r3, r7, #2147483648	; 0x80000000
   22c64:	0d1b      	lsrs	r3, r3, #20
   22c66:	051b      	lsls	r3, r3, #20
   22c68:	4293      	cmp	r3, r2
   22c6a:	d11d      	bne.n	22ca8 <_dtoa_r+0xa8>
   22c6c:	9a26      	ldr	r2, [sp, #152]	; 0x98
   22c6e:	f242 730f 	movw	r3, #9999	; 0x270f
   22c72:	6013      	str	r3, [r2, #0]
   22c74:	9b04      	ldr	r3, [sp, #16]
   22c76:	b943      	cbnz	r3, 22c8a <_dtoa_r+0x8a>
   22c78:	4b96      	ldr	r3, [pc, #600]	; (22ed4 <_dtoa_r+0x2d4>)
   22c7a:	4a97      	ldr	r2, [pc, #604]	; (22ed8 <_dtoa_r+0x2d8>)
   22c7c:	f3c7 0013 	ubfx	r0, r7, #0, #20
   22c80:	2800      	cmp	r0, #0
   22c82:	bf0c      	ite	eq
   22c84:	4610      	moveq	r0, r2
   22c86:	4618      	movne	r0, r3
   22c88:	e000      	b.n	22c8c <_dtoa_r+0x8c>
   22c8a:	4892      	ldr	r0, [pc, #584]	; (22ed4 <_dtoa_r+0x2d4>)
   22c8c:	9f28      	ldr	r7, [sp, #160]	; 0xa0
   22c8e:	2f00      	cmp	r7, #0
   22c90:	f000 8571 	beq.w	23776 <_dtoa_r+0xb76>
   22c94:	78c3      	ldrb	r3, [r0, #3]
   22c96:	b113      	cbz	r3, 22c9e <_dtoa_r+0x9e>
   22c98:	f100 0308 	add.w	r3, r0, #8
   22c9c:	e000      	b.n	22ca0 <_dtoa_r+0xa0>
   22c9e:	1cc3      	adds	r3, r0, #3
   22ca0:	9f28      	ldr	r7, [sp, #160]	; 0xa0
   22ca2:	603b      	str	r3, [r7, #0]
   22ca4:	f000 bd67 	b.w	23776 <_dtoa_r+0xb76>
   22ca8:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
   22cac:	2200      	movs	r2, #0
   22cae:	4620      	mov	r0, r4
   22cb0:	4629      	mov	r1, r5
   22cb2:	2300      	movs	r3, #0
   22cb4:	f001 ff4e 	bl	24b54 <__aeabi_dcmpeq>
   22cb8:	4680      	mov	r8, r0
   22cba:	b158      	cbz	r0, 22cd4 <_dtoa_r+0xd4>
   22cbc:	9f26      	ldr	r7, [sp, #152]	; 0x98
   22cbe:	2301      	movs	r3, #1
   22cc0:	603b      	str	r3, [r7, #0]
   22cc2:	9f28      	ldr	r7, [sp, #160]	; 0xa0
   22cc4:	2f00      	cmp	r7, #0
   22cc6:	f000 8553 	beq.w	23770 <_dtoa_r+0xb70>
   22cca:	4884      	ldr	r0, [pc, #528]	; (22edc <_dtoa_r+0x2dc>)
   22ccc:	6038      	str	r0, [r7, #0]
   22cce:	3801      	subs	r0, #1
   22cd0:	f000 bd51 	b.w	23776 <_dtoa_r+0xb76>
   22cd4:	ab19      	add	r3, sp, #100	; 0x64
   22cd6:	9300      	str	r3, [sp, #0]
   22cd8:	ab18      	add	r3, sp, #96	; 0x60
   22cda:	9301      	str	r3, [sp, #4]
   22cdc:	4650      	mov	r0, sl
   22cde:	4622      	mov	r2, r4
   22ce0:	462b      	mov	r3, r5
   22ce2:	f001 fcea 	bl	246ba <__d2b>
   22ce6:	f3c7 560a 	ubfx	r6, r7, #20, #11
   22cea:	4683      	mov	fp, r0
   22cec:	b15e      	cbz	r6, 22d06 <_dtoa_r+0x106>
   22cee:	f3c5 0313 	ubfx	r3, r5, #0, #20
   22cf2:	f043 517f 	orr.w	r1, r3, #1069547520	; 0x3fc00000
   22cf6:	4620      	mov	r0, r4
   22cf8:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
   22cfc:	f2a6 36ff 	subw	r6, r6, #1023	; 0x3ff
   22d00:	f8cd 8054 	str.w	r8, [sp, #84]	; 0x54
   22d04:	e01c      	b.n	22d40 <_dtoa_r+0x140>
   22d06:	9b19      	ldr	r3, [sp, #100]	; 0x64
   22d08:	9e18      	ldr	r6, [sp, #96]	; 0x60
   22d0a:	441e      	add	r6, r3
   22d0c:	f46f 6382 	mvn.w	r3, #1040	; 0x410
   22d10:	429e      	cmp	r6, r3
   22d12:	db09      	blt.n	22d28 <_dtoa_r+0x128>
   22d14:	9904      	ldr	r1, [sp, #16]
   22d16:	331f      	adds	r3, #31
   22d18:	f206 4012 	addw	r0, r6, #1042	; 0x412
   22d1c:	1b9b      	subs	r3, r3, r6
   22d1e:	fa21 f000 	lsr.w	r0, r1, r0
   22d22:	409f      	lsls	r7, r3
   22d24:	4338      	orrs	r0, r7
   22d26:	e004      	b.n	22d32 <_dtoa_r+0x132>
   22d28:	486d      	ldr	r0, [pc, #436]	; (22ee0 <_dtoa_r+0x2e0>)
   22d2a:	9a04      	ldr	r2, [sp, #16]
   22d2c:	1b80      	subs	r0, r0, r6
   22d2e:	fa02 f000 	lsl.w	r0, r2, r0
   22d32:	f7fa fd0b 	bl	1d74c <__aeabi_ui2d>
   22d36:	2701      	movs	r7, #1
   22d38:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
   22d3c:	3e01      	subs	r6, #1
   22d3e:	9715      	str	r7, [sp, #84]	; 0x54
   22d40:	2200      	movs	r2, #0
   22d42:	4b68      	ldr	r3, [pc, #416]	; (22ee4 <_dtoa_r+0x2e4>)
   22d44:	f7fa fbc4 	bl	1d4d0 <__aeabi_dsub>
   22d48:	a35b      	add	r3, pc, #364	; (adr r3, 22eb8 <_dtoa_r+0x2b8>)
   22d4a:	e9d3 2300 	ldrd	r2, r3, [r3]
   22d4e:	f7fa fd73 	bl	1d838 <__aeabi_dmul>
   22d52:	a35b      	add	r3, pc, #364	; (adr r3, 22ec0 <_dtoa_r+0x2c0>)
   22d54:	e9d3 2300 	ldrd	r2, r3, [r3]
   22d58:	f7fa fbbc 	bl	1d4d4 <__adddf3>
   22d5c:	4604      	mov	r4, r0
   22d5e:	4630      	mov	r0, r6
   22d60:	460d      	mov	r5, r1
   22d62:	f7fa fd03 	bl	1d76c <__aeabi_i2d>
   22d66:	a358      	add	r3, pc, #352	; (adr r3, 22ec8 <_dtoa_r+0x2c8>)
   22d68:	e9d3 2300 	ldrd	r2, r3, [r3]
   22d6c:	f7fa fd64 	bl	1d838 <__aeabi_dmul>
   22d70:	4602      	mov	r2, r0
   22d72:	460b      	mov	r3, r1
   22d74:	4620      	mov	r0, r4
   22d76:	4629      	mov	r1, r5
   22d78:	f7fa fbac 	bl	1d4d4 <__adddf3>
   22d7c:	4604      	mov	r4, r0
   22d7e:	460d      	mov	r5, r1
   22d80:	f001 ff1a 	bl	24bb8 <__aeabi_d2iz>
   22d84:	4629      	mov	r1, r5
   22d86:	4681      	mov	r9, r0
   22d88:	2200      	movs	r2, #0
   22d8a:	4620      	mov	r0, r4
   22d8c:	2300      	movs	r3, #0
   22d8e:	f001 feeb 	bl	24b68 <__aeabi_dcmplt>
   22d92:	b158      	cbz	r0, 22dac <_dtoa_r+0x1ac>
   22d94:	4648      	mov	r0, r9
   22d96:	f7fa fce9 	bl	1d76c <__aeabi_i2d>
   22d9a:	4602      	mov	r2, r0
   22d9c:	460b      	mov	r3, r1
   22d9e:	4620      	mov	r0, r4
   22da0:	4629      	mov	r1, r5
   22da2:	f001 fed7 	bl	24b54 <__aeabi_dcmpeq>
   22da6:	b908      	cbnz	r0, 22dac <_dtoa_r+0x1ac>
   22da8:	f109 39ff 	add.w	r9, r9, #4294967295
   22dac:	f1b9 0f16 	cmp.w	r9, #22
   22db0:	d80d      	bhi.n	22dce <_dtoa_r+0x1ce>
   22db2:	4b4d      	ldr	r3, [pc, #308]	; (22ee8 <_dtoa_r+0x2e8>)
   22db4:	eb03 03c9 	add.w	r3, r3, r9, lsl #3
   22db8:	e9d3 0100 	ldrd	r0, r1, [r3]
   22dbc:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
   22dc0:	f001 fef0 	bl	24ba4 <__aeabi_dcmpgt>
   22dc4:	b130      	cbz	r0, 22dd4 <_dtoa_r+0x1d4>
   22dc6:	f109 39ff 	add.w	r9, r9, #4294967295
   22dca:	2700      	movs	r7, #0
   22dcc:	e000      	b.n	22dd0 <_dtoa_r+0x1d0>
   22dce:	2701      	movs	r7, #1
   22dd0:	9714      	str	r7, [sp, #80]	; 0x50
   22dd2:	e000      	b.n	22dd6 <_dtoa_r+0x1d6>
   22dd4:	9014      	str	r0, [sp, #80]	; 0x50
   22dd6:	9b18      	ldr	r3, [sp, #96]	; 0x60
   22dd8:	1b9e      	subs	r6, r3, r6
   22dda:	3e01      	subs	r6, #1
   22ddc:	9609      	str	r6, [sp, #36]	; 0x24
   22dde:	d504      	bpl.n	22dea <_dtoa_r+0x1ea>
   22de0:	4277      	negs	r7, r6
   22de2:	9708      	str	r7, [sp, #32]
   22de4:	2700      	movs	r7, #0
   22de6:	9709      	str	r7, [sp, #36]	; 0x24
   22de8:	e001      	b.n	22dee <_dtoa_r+0x1ee>
   22dea:	2700      	movs	r7, #0
   22dec:	9708      	str	r7, [sp, #32]
   22dee:	f1b9 0f00 	cmp.w	r9, #0
   22df2:	db07      	blt.n	22e04 <_dtoa_r+0x204>
   22df4:	9f09      	ldr	r7, [sp, #36]	; 0x24
   22df6:	f8cd 9044 	str.w	r9, [sp, #68]	; 0x44
   22dfa:	444f      	add	r7, r9
   22dfc:	9709      	str	r7, [sp, #36]	; 0x24
   22dfe:	2700      	movs	r7, #0
   22e00:	970e      	str	r7, [sp, #56]	; 0x38
   22e02:	e008      	b.n	22e16 <_dtoa_r+0x216>
   22e04:	9f08      	ldr	r7, [sp, #32]
   22e06:	ebc9 0707 	rsb	r7, r9, r7
   22e0a:	9708      	str	r7, [sp, #32]
   22e0c:	f1c9 0700 	rsb	r7, r9, #0
   22e10:	970e      	str	r7, [sp, #56]	; 0x38
   22e12:	2700      	movs	r7, #0
   22e14:	9711      	str	r7, [sp, #68]	; 0x44
   22e16:	9f24      	ldr	r7, [sp, #144]	; 0x90
   22e18:	2f09      	cmp	r7, #9
   22e1a:	d829      	bhi.n	22e70 <_dtoa_r+0x270>
   22e1c:	2f05      	cmp	r7, #5
   22e1e:	bfc4      	itt	gt
   22e20:	3f04      	subgt	r7, #4
   22e22:	9724      	strgt	r7, [sp, #144]	; 0x90
   22e24:	9f24      	ldr	r7, [sp, #144]	; 0x90
   22e26:	bfc8      	it	gt
   22e28:	2500      	movgt	r5, #0
   22e2a:	f1a7 0302 	sub.w	r3, r7, #2
   22e2e:	bfd8      	it	le
   22e30:	2501      	movle	r5, #1
   22e32:	2b03      	cmp	r3, #3
   22e34:	d821      	bhi.n	22e7a <_dtoa_r+0x27a>
   22e36:	e8df f003 	tbb	[pc, r3]
   22e3a:	0f06      	.short	0x0f06
   22e3c:	0402      	.short	0x0402
   22e3e:	2701      	movs	r7, #1
   22e40:	e002      	b.n	22e48 <_dtoa_r+0x248>
   22e42:	2701      	movs	r7, #1
   22e44:	e009      	b.n	22e5a <_dtoa_r+0x25a>
   22e46:	2700      	movs	r7, #0
   22e48:	970f      	str	r7, [sp, #60]	; 0x3c
   22e4a:	9f25      	ldr	r7, [sp, #148]	; 0x94
   22e4c:	2f00      	cmp	r7, #0
   22e4e:	dd1e      	ble.n	22e8e <_dtoa_r+0x28e>
   22e50:	970b      	str	r7, [sp, #44]	; 0x2c
   22e52:	9707      	str	r7, [sp, #28]
   22e54:	463b      	mov	r3, r7
   22e56:	e01f      	b.n	22e98 <_dtoa_r+0x298>
   22e58:	2700      	movs	r7, #0
   22e5a:	970f      	str	r7, [sp, #60]	; 0x3c
   22e5c:	9f25      	ldr	r7, [sp, #148]	; 0x94
   22e5e:	444f      	add	r7, r9
   22e60:	970b      	str	r7, [sp, #44]	; 0x2c
   22e62:	3701      	adds	r7, #1
   22e64:	463b      	mov	r3, r7
   22e66:	9707      	str	r7, [sp, #28]
   22e68:	2b01      	cmp	r3, #1
   22e6a:	bfb8      	it	lt
   22e6c:	2301      	movlt	r3, #1
   22e6e:	e013      	b.n	22e98 <_dtoa_r+0x298>
   22e70:	2501      	movs	r5, #1
   22e72:	2700      	movs	r7, #0
   22e74:	9724      	str	r7, [sp, #144]	; 0x90
   22e76:	950f      	str	r5, [sp, #60]	; 0x3c
   22e78:	e001      	b.n	22e7e <_dtoa_r+0x27e>
   22e7a:	2701      	movs	r7, #1
   22e7c:	970f      	str	r7, [sp, #60]	; 0x3c
   22e7e:	f04f 37ff 	mov.w	r7, #4294967295
   22e82:	970b      	str	r7, [sp, #44]	; 0x2c
   22e84:	9707      	str	r7, [sp, #28]
   22e86:	2700      	movs	r7, #0
   22e88:	2312      	movs	r3, #18
   22e8a:	9725      	str	r7, [sp, #148]	; 0x94
   22e8c:	e004      	b.n	22e98 <_dtoa_r+0x298>
   22e8e:	2701      	movs	r7, #1
   22e90:	970b      	str	r7, [sp, #44]	; 0x2c
   22e92:	9707      	str	r7, [sp, #28]
   22e94:	463b      	mov	r3, r7
   22e96:	9725      	str	r7, [sp, #148]	; 0x94
   22e98:	f8da 4024 	ldr.w	r4, [sl, #36]	; 0x24
   22e9c:	2200      	movs	r2, #0
   22e9e:	6062      	str	r2, [r4, #4]
   22ea0:	2104      	movs	r1, #4
   22ea2:	f101 0214 	add.w	r2, r1, #20
   22ea6:	429a      	cmp	r2, r3
   22ea8:	d820      	bhi.n	22eec <_dtoa_r+0x2ec>
   22eaa:	6862      	ldr	r2, [r4, #4]
   22eac:	0049      	lsls	r1, r1, #1
   22eae:	3201      	adds	r2, #1
   22eb0:	6062      	str	r2, [r4, #4]
   22eb2:	e7f6      	b.n	22ea2 <_dtoa_r+0x2a2>
   22eb4:	f3af 8000 	nop.w
   22eb8:	636f4361 	.word	0x636f4361
   22ebc:	3fd287a7 	.word	0x3fd287a7
   22ec0:	8b60c8b3 	.word	0x8b60c8b3
   22ec4:	3fc68a28 	.word	0x3fc68a28
   22ec8:	509f79fb 	.word	0x509f79fb
   22ecc:	3fd34413 	.word	0x3fd34413
   22ed0:	7ff00000 	.word	0x7ff00000
   22ed4:	00027be9 	.word	0x00027be9
   22ed8:	00027be0 	.word	0x00027be0
   22edc:	00026e1d 	.word	0x00026e1d
   22ee0:	fffffbee 	.word	0xfffffbee
   22ee4:	3ff80000 	.word	0x3ff80000
   22ee8:	00027bf8 	.word	0x00027bf8
   22eec:	4650      	mov	r0, sl
   22eee:	6861      	ldr	r1, [r4, #4]
   22ef0:	f001 f89a 	bl	24028 <_Balloc>
   22ef4:	f8da 3024 	ldr.w	r3, [sl, #36]	; 0x24
   22ef8:	6020      	str	r0, [r4, #0]
   22efa:	9f07      	ldr	r7, [sp, #28]
   22efc:	681b      	ldr	r3, [r3, #0]
   22efe:	2f0e      	cmp	r7, #14
   22f00:	930a      	str	r3, [sp, #40]	; 0x28
   22f02:	f200 816b 	bhi.w	231dc <_dtoa_r+0x5dc>
   22f06:	2d00      	cmp	r5, #0
   22f08:	f000 8168 	beq.w	231dc <_dtoa_r+0x5dc>
   22f0c:	f1b9 0f00 	cmp.w	r9, #0
   22f10:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   22f14:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
   22f18:	dd31      	ble.n	22f7e <_dtoa_r+0x37e>
   22f1a:	4a81      	ldr	r2, [pc, #516]	; (23120 <_dtoa_r+0x520>)
   22f1c:	f009 030f 	and.w	r3, r9, #15
   22f20:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
   22f24:	ea4f 1429 	mov.w	r4, r9, asr #4
   22f28:	e9d3 0100 	ldrd	r0, r1, [r3]
   22f2c:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
   22f30:	06e0      	lsls	r0, r4, #27
   22f32:	d50c      	bpl.n	22f4e <_dtoa_r+0x34e>
   22f34:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
   22f38:	4b7a      	ldr	r3, [pc, #488]	; (23124 <_dtoa_r+0x524>)
   22f3a:	f004 040f 	and.w	r4, r4, #15
   22f3e:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
   22f42:	f7fa fda3 	bl	1da8c <__aeabi_ddiv>
   22f46:	2703      	movs	r7, #3
   22f48:	e9cd 0104 	strd	r0, r1, [sp, #16]
   22f4c:	e000      	b.n	22f50 <_dtoa_r+0x350>
   22f4e:	2702      	movs	r7, #2
   22f50:	4d74      	ldr	r5, [pc, #464]	; (23124 <_dtoa_r+0x524>)
   22f52:	b16c      	cbz	r4, 22f70 <_dtoa_r+0x370>
   22f54:	07e1      	lsls	r1, r4, #31
   22f56:	d508      	bpl.n	22f6a <_dtoa_r+0x36a>
   22f58:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
   22f5c:	e9d5 2300 	ldrd	r2, r3, [r5]
   22f60:	f7fa fc6a 	bl	1d838 <__aeabi_dmul>
   22f64:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
   22f68:	3701      	adds	r7, #1
   22f6a:	1064      	asrs	r4, r4, #1
   22f6c:	3508      	adds	r5, #8
   22f6e:	e7f0      	b.n	22f52 <_dtoa_r+0x352>
   22f70:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   22f74:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
   22f78:	f7fa fd88 	bl	1da8c <__aeabi_ddiv>
   22f7c:	e01b      	b.n	22fb6 <_dtoa_r+0x3b6>
   22f7e:	f1c9 0400 	rsb	r4, r9, #0
   22f82:	b1dc      	cbz	r4, 22fbc <_dtoa_r+0x3bc>
   22f84:	4b66      	ldr	r3, [pc, #408]	; (23120 <_dtoa_r+0x520>)
   22f86:	f004 020f 	and.w	r2, r4, #15
   22f8a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   22f8e:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
   22f92:	e9d3 2300 	ldrd	r2, r3, [r3]
   22f96:	f7fa fc4f 	bl	1d838 <__aeabi_dmul>
   22f9a:	4d62      	ldr	r5, [pc, #392]	; (23124 <_dtoa_r+0x524>)
   22f9c:	1124      	asrs	r4, r4, #4
   22f9e:	2702      	movs	r7, #2
   22fa0:	b14c      	cbz	r4, 22fb6 <_dtoa_r+0x3b6>
   22fa2:	07e2      	lsls	r2, r4, #31
   22fa4:	d504      	bpl.n	22fb0 <_dtoa_r+0x3b0>
   22fa6:	e9d5 2300 	ldrd	r2, r3, [r5]
   22faa:	3701      	adds	r7, #1
   22fac:	f7fa fc44 	bl	1d838 <__aeabi_dmul>
   22fb0:	1064      	asrs	r4, r4, #1
   22fb2:	3508      	adds	r5, #8
   22fb4:	e7f4      	b.n	22fa0 <_dtoa_r+0x3a0>
   22fb6:	e9cd 0104 	strd	r0, r1, [sp, #16]
   22fba:	e000      	b.n	22fbe <_dtoa_r+0x3be>
   22fbc:	2702      	movs	r7, #2
   22fbe:	9914      	ldr	r1, [sp, #80]	; 0x50
   22fc0:	b1e9      	cbz	r1, 22ffe <_dtoa_r+0x3fe>
   22fc2:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
   22fc6:	2200      	movs	r2, #0
   22fc8:	4620      	mov	r0, r4
   22fca:	4629      	mov	r1, r5
   22fcc:	4b56      	ldr	r3, [pc, #344]	; (23128 <_dtoa_r+0x528>)
   22fce:	f001 fdcb 	bl	24b68 <__aeabi_dcmplt>
   22fd2:	b1c8      	cbz	r0, 23008 <_dtoa_r+0x408>
   22fd4:	9a07      	ldr	r2, [sp, #28]
   22fd6:	b1e2      	cbz	r2, 23012 <_dtoa_r+0x412>
   22fd8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   22fda:	2b00      	cmp	r3, #0
   22fdc:	f340 80fa 	ble.w	231d4 <_dtoa_r+0x5d4>
   22fe0:	f109 30ff 	add.w	r0, r9, #4294967295
   22fe4:	9010      	str	r0, [sp, #64]	; 0x40
   22fe6:	4629      	mov	r1, r5
   22fe8:	4620      	mov	r0, r4
   22fea:	2200      	movs	r2, #0
   22fec:	4b4f      	ldr	r3, [pc, #316]	; (2312c <_dtoa_r+0x52c>)
   22fee:	f7fa fc23 	bl	1d838 <__aeabi_dmul>
   22ff2:	e9cd 0104 	strd	r0, r1, [sp, #16]
   22ff6:	990b      	ldr	r1, [sp, #44]	; 0x2c
   22ff8:	3701      	adds	r7, #1
   22ffa:	910c      	str	r1, [sp, #48]	; 0x30
   22ffc:	e00d      	b.n	2301a <_dtoa_r+0x41a>
   22ffe:	9a07      	ldr	r2, [sp, #28]
   23000:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
   23004:	920c      	str	r2, [sp, #48]	; 0x30
   23006:	e008      	b.n	2301a <_dtoa_r+0x41a>
   23008:	9b07      	ldr	r3, [sp, #28]
   2300a:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
   2300e:	930c      	str	r3, [sp, #48]	; 0x30
   23010:	e003      	b.n	2301a <_dtoa_r+0x41a>
   23012:	9807      	ldr	r0, [sp, #28]
   23014:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
   23018:	900c      	str	r0, [sp, #48]	; 0x30
   2301a:	4638      	mov	r0, r7
   2301c:	f7fa fba6 	bl	1d76c <__aeabi_i2d>
   23020:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
   23024:	f7fa fc08 	bl	1d838 <__aeabi_dmul>
   23028:	2200      	movs	r2, #0
   2302a:	4b41      	ldr	r3, [pc, #260]	; (23130 <_dtoa_r+0x530>)
   2302c:	f7fa fa52 	bl	1d4d4 <__adddf3>
   23030:	9f0c      	ldr	r7, [sp, #48]	; 0x30
   23032:	4604      	mov	r4, r0
   23034:	f1a1 7550 	sub.w	r5, r1, #54525952	; 0x3400000
   23038:	b9cf      	cbnz	r7, 2306e <_dtoa_r+0x46e>
   2303a:	2200      	movs	r2, #0
   2303c:	4b3d      	ldr	r3, [pc, #244]	; (23134 <_dtoa_r+0x534>)
   2303e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   23042:	f7fa fa45 	bl	1d4d0 <__aeabi_dsub>
   23046:	4622      	mov	r2, r4
   23048:	462b      	mov	r3, r5
   2304a:	4606      	mov	r6, r0
   2304c:	460f      	mov	r7, r1
   2304e:	f001 fda9 	bl	24ba4 <__aeabi_dcmpgt>
   23052:	2800      	cmp	r0, #0
   23054:	f040 8253 	bne.w	234fe <_dtoa_r+0x8fe>
   23058:	4622      	mov	r2, r4
   2305a:	f105 4300 	add.w	r3, r5, #2147483648	; 0x80000000
   2305e:	4630      	mov	r0, r6
   23060:	4639      	mov	r1, r7
   23062:	f001 fd81 	bl	24b68 <__aeabi_dcmplt>
   23066:	2800      	cmp	r0, #0
   23068:	f040 823f 	bne.w	234ea <_dtoa_r+0x8ea>
   2306c:	e0b2      	b.n	231d4 <_dtoa_r+0x5d4>
   2306e:	9f0c      	ldr	r7, [sp, #48]	; 0x30
   23070:	4b2b      	ldr	r3, [pc, #172]	; (23120 <_dtoa_r+0x520>)
   23072:	1e7a      	subs	r2, r7, #1
   23074:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
   23076:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   2307a:	2f00      	cmp	r7, #0
   2307c:	d05e      	beq.n	2313c <_dtoa_r+0x53c>
   2307e:	e9d3 2300 	ldrd	r2, r3, [r3]
   23082:	2000      	movs	r0, #0
   23084:	492c      	ldr	r1, [pc, #176]	; (23138 <_dtoa_r+0x538>)
   23086:	f7fa fd01 	bl	1da8c <__aeabi_ddiv>
   2308a:	4622      	mov	r2, r4
   2308c:	462b      	mov	r3, r5
   2308e:	f7fa fa1f 	bl	1d4d0 <__aeabi_dsub>
   23092:	e9dd 6704 	ldrd	r6, r7, [sp, #16]
   23096:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
   2309a:	4604      	mov	r4, r0
   2309c:	460d      	mov	r5, r1
   2309e:	4639      	mov	r1, r7
   230a0:	4630      	mov	r0, r6
   230a2:	f001 fd89 	bl	24bb8 <__aeabi_d2iz>
   230a6:	9002      	str	r0, [sp, #8]
   230a8:	f7fa fb60 	bl	1d76c <__aeabi_i2d>
   230ac:	4602      	mov	r2, r0
   230ae:	460b      	mov	r3, r1
   230b0:	4630      	mov	r0, r6
   230b2:	4639      	mov	r1, r7
   230b4:	f7fa fa0c 	bl	1d4d0 <__aeabi_dsub>
   230b8:	f8dd c008 	ldr.w	ip, [sp, #8]
   230bc:	4622      	mov	r2, r4
   230be:	f10c 0330 	add.w	r3, ip, #48	; 0x30
   230c2:	f808 3b01 	strb.w	r3, [r8], #1
   230c6:	462b      	mov	r3, r5
   230c8:	4606      	mov	r6, r0
   230ca:	460f      	mov	r7, r1
   230cc:	f001 fd4c 	bl	24b68 <__aeabi_dcmplt>
   230d0:	2800      	cmp	r0, #0
   230d2:	f040 833b 	bne.w	2374c <_dtoa_r+0xb4c>
   230d6:	4632      	mov	r2, r6
   230d8:	463b      	mov	r3, r7
   230da:	2000      	movs	r0, #0
   230dc:	4912      	ldr	r1, [pc, #72]	; (23128 <_dtoa_r+0x528>)
   230de:	f7fa f9f7 	bl	1d4d0 <__aeabi_dsub>
   230e2:	4622      	mov	r2, r4
   230e4:	462b      	mov	r3, r5
   230e6:	f001 fd3f 	bl	24b68 <__aeabi_dcmplt>
   230ea:	2800      	cmp	r0, #0
   230ec:	f040 80d5 	bne.w	2329a <_dtoa_r+0x69a>
   230f0:	980a      	ldr	r0, [sp, #40]	; 0x28
   230f2:	990c      	ldr	r1, [sp, #48]	; 0x30
   230f4:	ebc0 0308 	rsb	r3, r0, r8
   230f8:	428b      	cmp	r3, r1
   230fa:	da6b      	bge.n	231d4 <_dtoa_r+0x5d4>
   230fc:	4620      	mov	r0, r4
   230fe:	4629      	mov	r1, r5
   23100:	2200      	movs	r2, #0
   23102:	4b0a      	ldr	r3, [pc, #40]	; (2312c <_dtoa_r+0x52c>)
   23104:	f7fa fb98 	bl	1d838 <__aeabi_dmul>
   23108:	2200      	movs	r2, #0
   2310a:	4604      	mov	r4, r0
   2310c:	460d      	mov	r5, r1
   2310e:	4630      	mov	r0, r6
   23110:	4639      	mov	r1, r7
   23112:	4b06      	ldr	r3, [pc, #24]	; (2312c <_dtoa_r+0x52c>)
   23114:	f7fa fb90 	bl	1d838 <__aeabi_dmul>
   23118:	4606      	mov	r6, r0
   2311a:	460f      	mov	r7, r1
   2311c:	e7bf      	b.n	2309e <_dtoa_r+0x49e>
   2311e:	bf00      	nop
   23120:	00027bf8 	.word	0x00027bf8
   23124:	00027cc0 	.word	0x00027cc0
   23128:	3ff00000 	.word	0x3ff00000
   2312c:	40240000 	.word	0x40240000
   23130:	401c0000 	.word	0x401c0000
   23134:	40140000 	.word	0x40140000
   23138:	3fe00000 	.word	0x3fe00000
   2313c:	4622      	mov	r2, r4
   2313e:	e9d3 0100 	ldrd	r0, r1, [r3]
   23142:	462b      	mov	r3, r5
   23144:	f7fa fb78 	bl	1d838 <__aeabi_dmul>
   23148:	e9dd 6704 	ldrd	r6, r7, [sp, #16]
   2314c:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
   23150:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   23152:	e9cd 0116 	strd	r0, r1, [sp, #88]	; 0x58
   23156:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   23158:	4490      	add	r8, r2
   2315a:	4639      	mov	r1, r7
   2315c:	4630      	mov	r0, r6
   2315e:	f001 fd2b 	bl	24bb8 <__aeabi_d2iz>
   23162:	4605      	mov	r5, r0
   23164:	f7fa fb02 	bl	1d76c <__aeabi_i2d>
   23168:	4602      	mov	r2, r0
   2316a:	460b      	mov	r3, r1
   2316c:	4630      	mov	r0, r6
   2316e:	4639      	mov	r1, r7
   23170:	f7fa f9ae 	bl	1d4d0 <__aeabi_dsub>
   23174:	3530      	adds	r5, #48	; 0x30
   23176:	f804 5b01 	strb.w	r5, [r4], #1
   2317a:	4544      	cmp	r4, r8
   2317c:	4606      	mov	r6, r0
   2317e:	460f      	mov	r7, r1
   23180:	d121      	bne.n	231c6 <_dtoa_r+0x5c6>
   23182:	2200      	movs	r2, #0
   23184:	4b87      	ldr	r3, [pc, #540]	; (233a4 <_dtoa_r+0x7a4>)
   23186:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
   2318a:	f7fa f9a3 	bl	1d4d4 <__adddf3>
   2318e:	4602      	mov	r2, r0
   23190:	460b      	mov	r3, r1
   23192:	4630      	mov	r0, r6
   23194:	4639      	mov	r1, r7
   23196:	f001 fd05 	bl	24ba4 <__aeabi_dcmpgt>
   2319a:	2800      	cmp	r0, #0
   2319c:	d17d      	bne.n	2329a <_dtoa_r+0x69a>
   2319e:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
   231a2:	2000      	movs	r0, #0
   231a4:	497f      	ldr	r1, [pc, #508]	; (233a4 <_dtoa_r+0x7a4>)
   231a6:	f7fa f993 	bl	1d4d0 <__aeabi_dsub>
   231aa:	4602      	mov	r2, r0
   231ac:	460b      	mov	r3, r1
   231ae:	4630      	mov	r0, r6
   231b0:	4639      	mov	r1, r7
   231b2:	f001 fcd9 	bl	24b68 <__aeabi_dcmplt>
   231b6:	b168      	cbz	r0, 231d4 <_dtoa_r+0x5d4>
   231b8:	46a0      	mov	r8, r4
   231ba:	f818 3c01 	ldrb.w	r3, [r8, #-1]
   231be:	3c01      	subs	r4, #1
   231c0:	2b30      	cmp	r3, #48	; 0x30
   231c2:	d0f9      	beq.n	231b8 <_dtoa_r+0x5b8>
   231c4:	e2c2      	b.n	2374c <_dtoa_r+0xb4c>
   231c6:	2200      	movs	r2, #0
   231c8:	4b77      	ldr	r3, [pc, #476]	; (233a8 <_dtoa_r+0x7a8>)
   231ca:	f7fa fb35 	bl	1d838 <__aeabi_dmul>
   231ce:	4606      	mov	r6, r0
   231d0:	460f      	mov	r7, r1
   231d2:	e7c2      	b.n	2315a <_dtoa_r+0x55a>
   231d4:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
   231d8:	e9cd 0104 	strd	r0, r1, [sp, #16]
   231dc:	9b19      	ldr	r3, [sp, #100]	; 0x64
   231de:	2b00      	cmp	r3, #0
   231e0:	db7c      	blt.n	232dc <_dtoa_r+0x6dc>
   231e2:	f1b9 0f0e 	cmp.w	r9, #14
   231e6:	dc79      	bgt.n	232dc <_dtoa_r+0x6dc>
   231e8:	4b70      	ldr	r3, [pc, #448]	; (233ac <_dtoa_r+0x7ac>)
   231ea:	9f25      	ldr	r7, [sp, #148]	; 0x94
   231ec:	eb03 03c9 	add.w	r3, r3, r9, lsl #3
   231f0:	2f00      	cmp	r7, #0
   231f2:	e9d3 4500 	ldrd	r4, r5, [r3]
   231f6:	da14      	bge.n	23222 <_dtoa_r+0x622>
   231f8:	9f07      	ldr	r7, [sp, #28]
   231fa:	2f00      	cmp	r7, #0
   231fc:	dc11      	bgt.n	23222 <_dtoa_r+0x622>
   231fe:	f040 8176 	bne.w	234ee <_dtoa_r+0x8ee>
   23202:	4620      	mov	r0, r4
   23204:	4629      	mov	r1, r5
   23206:	2200      	movs	r2, #0
   23208:	4b69      	ldr	r3, [pc, #420]	; (233b0 <_dtoa_r+0x7b0>)
   2320a:	f7fa fb15 	bl	1d838 <__aeabi_dmul>
   2320e:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
   23212:	f001 fcbd 	bl	24b90 <__aeabi_dcmpge>
   23216:	9d07      	ldr	r5, [sp, #28]
   23218:	462c      	mov	r4, r5
   2321a:	2800      	cmp	r0, #0
   2321c:	f040 8169 	bne.w	234f2 <_dtoa_r+0x8f2>
   23220:	e171      	b.n	23506 <_dtoa_r+0x906>
   23222:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
   23226:	e9dd 6704 	ldrd	r6, r7, [sp, #16]
   2322a:	4622      	mov	r2, r4
   2322c:	462b      	mov	r3, r5
   2322e:	4630      	mov	r0, r6
   23230:	4639      	mov	r1, r7
   23232:	f7fa fc2b 	bl	1da8c <__aeabi_ddiv>
   23236:	f001 fcbf 	bl	24bb8 <__aeabi_d2iz>
   2323a:	9004      	str	r0, [sp, #16]
   2323c:	f7fa fa96 	bl	1d76c <__aeabi_i2d>
   23240:	4622      	mov	r2, r4
   23242:	462b      	mov	r3, r5
   23244:	f7fa faf8 	bl	1d838 <__aeabi_dmul>
   23248:	4602      	mov	r2, r0
   2324a:	460b      	mov	r3, r1
   2324c:	4630      	mov	r0, r6
   2324e:	4639      	mov	r1, r7
   23250:	f7fa f93e 	bl	1d4d0 <__aeabi_dsub>
   23254:	9f04      	ldr	r7, [sp, #16]
   23256:	4602      	mov	r2, r0
   23258:	f107 0630 	add.w	r6, r7, #48	; 0x30
   2325c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
   2325e:	f808 6b01 	strb.w	r6, [r8], #1
   23262:	ebc7 0608 	rsb	r6, r7, r8
   23266:	9f07      	ldr	r7, [sp, #28]
   23268:	460b      	mov	r3, r1
   2326a:	42be      	cmp	r6, r7
   2326c:	d129      	bne.n	232c2 <_dtoa_r+0x6c2>
   2326e:	f7fa f931 	bl	1d4d4 <__adddf3>
   23272:	4622      	mov	r2, r4
   23274:	462b      	mov	r3, r5
   23276:	4606      	mov	r6, r0
   23278:	460f      	mov	r7, r1
   2327a:	f001 fc93 	bl	24ba4 <__aeabi_dcmpgt>
   2327e:	b970      	cbnz	r0, 2329e <_dtoa_r+0x69e>
   23280:	4630      	mov	r0, r6
   23282:	4639      	mov	r1, r7
   23284:	4622      	mov	r2, r4
   23286:	462b      	mov	r3, r5
   23288:	f001 fc64 	bl	24b54 <__aeabi_dcmpeq>
   2328c:	2800      	cmp	r0, #0
   2328e:	f000 825f 	beq.w	23750 <_dtoa_r+0xb50>
   23292:	9f04      	ldr	r7, [sp, #16]
   23294:	07fb      	lsls	r3, r7, #31
   23296:	d402      	bmi.n	2329e <_dtoa_r+0x69e>
   23298:	e25a      	b.n	23750 <_dtoa_r+0xb50>
   2329a:	f8dd 9040 	ldr.w	r9, [sp, #64]	; 0x40
   2329e:	4643      	mov	r3, r8
   232a0:	4698      	mov	r8, r3
   232a2:	f818 2c01 	ldrb.w	r2, [r8, #-1]
   232a6:	3b01      	subs	r3, #1
   232a8:	2a39      	cmp	r2, #57	; 0x39
   232aa:	d106      	bne.n	232ba <_dtoa_r+0x6ba>
   232ac:	9f0a      	ldr	r7, [sp, #40]	; 0x28
   232ae:	429f      	cmp	r7, r3
   232b0:	d1f6      	bne.n	232a0 <_dtoa_r+0x6a0>
   232b2:	2230      	movs	r2, #48	; 0x30
   232b4:	f109 0901 	add.w	r9, r9, #1
   232b8:	703a      	strb	r2, [r7, #0]
   232ba:	781a      	ldrb	r2, [r3, #0]
   232bc:	3201      	adds	r2, #1
   232be:	701a      	strb	r2, [r3, #0]
   232c0:	e246      	b.n	23750 <_dtoa_r+0xb50>
   232c2:	2200      	movs	r2, #0
   232c4:	4b38      	ldr	r3, [pc, #224]	; (233a8 <_dtoa_r+0x7a8>)
   232c6:	f7fa fab7 	bl	1d838 <__aeabi_dmul>
   232ca:	2200      	movs	r2, #0
   232cc:	2300      	movs	r3, #0
   232ce:	4606      	mov	r6, r0
   232d0:	460f      	mov	r7, r1
   232d2:	f001 fc3f 	bl	24b54 <__aeabi_dcmpeq>
   232d6:	2800      	cmp	r0, #0
   232d8:	d0a7      	beq.n	2322a <_dtoa_r+0x62a>
   232da:	e239      	b.n	23750 <_dtoa_r+0xb50>
   232dc:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
   232de:	2f00      	cmp	r7, #0
   232e0:	d030      	beq.n	23344 <_dtoa_r+0x744>
   232e2:	9f24      	ldr	r7, [sp, #144]	; 0x90
   232e4:	2f01      	cmp	r7, #1
   232e6:	dc0a      	bgt.n	232fe <_dtoa_r+0x6fe>
   232e8:	9f15      	ldr	r7, [sp, #84]	; 0x54
   232ea:	b117      	cbz	r7, 232f2 <_dtoa_r+0x6f2>
   232ec:	f203 4333 	addw	r3, r3, #1075	; 0x433
   232f0:	e002      	b.n	232f8 <_dtoa_r+0x6f8>
   232f2:	9b18      	ldr	r3, [sp, #96]	; 0x60
   232f4:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
   232f8:	9d0e      	ldr	r5, [sp, #56]	; 0x38
   232fa:	9e08      	ldr	r6, [sp, #32]
   232fc:	e016      	b.n	2332c <_dtoa_r+0x72c>
   232fe:	9f07      	ldr	r7, [sp, #28]
   23300:	1e7d      	subs	r5, r7, #1
   23302:	9f0e      	ldr	r7, [sp, #56]	; 0x38
   23304:	42af      	cmp	r7, r5
   23306:	db01      	blt.n	2330c <_dtoa_r+0x70c>
   23308:	1b7d      	subs	r5, r7, r5
   2330a:	e006      	b.n	2331a <_dtoa_r+0x71a>
   2330c:	9f0e      	ldr	r7, [sp, #56]	; 0x38
   2330e:	950e      	str	r5, [sp, #56]	; 0x38
   23310:	1beb      	subs	r3, r5, r7
   23312:	9f11      	ldr	r7, [sp, #68]	; 0x44
   23314:	2500      	movs	r5, #0
   23316:	441f      	add	r7, r3
   23318:	9711      	str	r7, [sp, #68]	; 0x44
   2331a:	9f07      	ldr	r7, [sp, #28]
   2331c:	2f00      	cmp	r7, #0
   2331e:	da03      	bge.n	23328 <_dtoa_r+0x728>
   23320:	9808      	ldr	r0, [sp, #32]
   23322:	2300      	movs	r3, #0
   23324:	1bc6      	subs	r6, r0, r7
   23326:	e001      	b.n	2332c <_dtoa_r+0x72c>
   23328:	9e08      	ldr	r6, [sp, #32]
   2332a:	9b07      	ldr	r3, [sp, #28]
   2332c:	9f08      	ldr	r7, [sp, #32]
   2332e:	4650      	mov	r0, sl
   23330:	441f      	add	r7, r3
   23332:	9708      	str	r7, [sp, #32]
   23334:	9f09      	ldr	r7, [sp, #36]	; 0x24
   23336:	2101      	movs	r1, #1
   23338:	441f      	add	r7, r3
   2333a:	9709      	str	r7, [sp, #36]	; 0x24
   2333c:	f000 ff89 	bl	24252 <__i2b>
   23340:	4604      	mov	r4, r0
   23342:	e002      	b.n	2334a <_dtoa_r+0x74a>
   23344:	9d0e      	ldr	r5, [sp, #56]	; 0x38
   23346:	9e08      	ldr	r6, [sp, #32]
   23348:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   2334a:	b16e      	cbz	r6, 23368 <_dtoa_r+0x768>
   2334c:	9f09      	ldr	r7, [sp, #36]	; 0x24
   2334e:	2f00      	cmp	r7, #0
   23350:	dd0a      	ble.n	23368 <_dtoa_r+0x768>
   23352:	463b      	mov	r3, r7
   23354:	9f08      	ldr	r7, [sp, #32]
   23356:	42b3      	cmp	r3, r6
   23358:	bfa8      	it	ge
   2335a:	4633      	movge	r3, r6
   2335c:	1aff      	subs	r7, r7, r3
   2335e:	9708      	str	r7, [sp, #32]
   23360:	9f09      	ldr	r7, [sp, #36]	; 0x24
   23362:	1af6      	subs	r6, r6, r3
   23364:	1aff      	subs	r7, r7, r3
   23366:	9709      	str	r7, [sp, #36]	; 0x24
   23368:	9f0e      	ldr	r7, [sp, #56]	; 0x38
   2336a:	2f00      	cmp	r7, #0
   2336c:	dd28      	ble.n	233c0 <_dtoa_r+0x7c0>
   2336e:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
   23370:	b307      	cbz	r7, 233b4 <_dtoa_r+0x7b4>
   23372:	2d00      	cmp	r5, #0
   23374:	dd10      	ble.n	23398 <_dtoa_r+0x798>
   23376:	4621      	mov	r1, r4
   23378:	462a      	mov	r2, r5
   2337a:	4650      	mov	r0, sl
   2337c:	f001 f80a 	bl	24394 <__pow5mult>
   23380:	4604      	mov	r4, r0
   23382:	465a      	mov	r2, fp
   23384:	4621      	mov	r1, r4
   23386:	4650      	mov	r0, sl
   23388:	f000 ff6c 	bl	24264 <__multiply>
   2338c:	4659      	mov	r1, fp
   2338e:	4607      	mov	r7, r0
   23390:	4650      	mov	r0, sl
   23392:	f000 fe7e 	bl	24092 <_Bfree>
   23396:	46bb      	mov	fp, r7
   23398:	9f0e      	ldr	r7, [sp, #56]	; 0x38
   2339a:	1b7a      	subs	r2, r7, r5
   2339c:	d010      	beq.n	233c0 <_dtoa_r+0x7c0>
   2339e:	4650      	mov	r0, sl
   233a0:	4659      	mov	r1, fp
   233a2:	e00a      	b.n	233ba <_dtoa_r+0x7ba>
   233a4:	3fe00000 	.word	0x3fe00000
   233a8:	40240000 	.word	0x40240000
   233ac:	00027bf8 	.word	0x00027bf8
   233b0:	40140000 	.word	0x40140000
   233b4:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   233b6:	4650      	mov	r0, sl
   233b8:	4659      	mov	r1, fp
   233ba:	f000 ffeb 	bl	24394 <__pow5mult>
   233be:	4683      	mov	fp, r0
   233c0:	4650      	mov	r0, sl
   233c2:	2101      	movs	r1, #1
   233c4:	f000 ff45 	bl	24252 <__i2b>
   233c8:	9f11      	ldr	r7, [sp, #68]	; 0x44
   233ca:	4605      	mov	r5, r0
   233cc:	2f00      	cmp	r7, #0
   233ce:	dd05      	ble.n	233dc <_dtoa_r+0x7dc>
   233d0:	4629      	mov	r1, r5
   233d2:	4650      	mov	r0, sl
   233d4:	463a      	mov	r2, r7
   233d6:	f000 ffdd 	bl	24394 <__pow5mult>
   233da:	4605      	mov	r5, r0
   233dc:	9f24      	ldr	r7, [sp, #144]	; 0x90
   233de:	2f01      	cmp	r7, #1
   233e0:	dc12      	bgt.n	23408 <_dtoa_r+0x808>
   233e2:	9804      	ldr	r0, [sp, #16]
   233e4:	b980      	cbnz	r0, 23408 <_dtoa_r+0x808>
   233e6:	9905      	ldr	r1, [sp, #20]
   233e8:	f3c1 0313 	ubfx	r3, r1, #0, #20
   233ec:	b973      	cbnz	r3, 2340c <_dtoa_r+0x80c>
   233ee:	f021 4700 	bic.w	r7, r1, #2147483648	; 0x80000000
   233f2:	0d3f      	lsrs	r7, r7, #20
   233f4:	053f      	lsls	r7, r7, #20
   233f6:	b157      	cbz	r7, 2340e <_dtoa_r+0x80e>
   233f8:	9f08      	ldr	r7, [sp, #32]
   233fa:	3701      	adds	r7, #1
   233fc:	9708      	str	r7, [sp, #32]
   233fe:	9f09      	ldr	r7, [sp, #36]	; 0x24
   23400:	3701      	adds	r7, #1
   23402:	9709      	str	r7, [sp, #36]	; 0x24
   23404:	2701      	movs	r7, #1
   23406:	e002      	b.n	2340e <_dtoa_r+0x80e>
   23408:	2700      	movs	r7, #0
   2340a:	e000      	b.n	2340e <_dtoa_r+0x80e>
   2340c:	9f04      	ldr	r7, [sp, #16]
   2340e:	9811      	ldr	r0, [sp, #68]	; 0x44
   23410:	b140      	cbz	r0, 23424 <_dtoa_r+0x824>
   23412:	692b      	ldr	r3, [r5, #16]
   23414:	eb05 0383 	add.w	r3, r5, r3, lsl #2
   23418:	6918      	ldr	r0, [r3, #16]
   2341a:	f000 fecd 	bl	241b8 <__hi0bits>
   2341e:	f1c0 0020 	rsb	r0, r0, #32
   23422:	e000      	b.n	23426 <_dtoa_r+0x826>
   23424:	2001      	movs	r0, #1
   23426:	9b09      	ldr	r3, [sp, #36]	; 0x24
   23428:	4403      	add	r3, r0
   2342a:	f013 031f 	ands.w	r3, r3, #31
   2342e:	d00f      	beq.n	23450 <_dtoa_r+0x850>
   23430:	f1c3 0220 	rsb	r2, r3, #32
   23434:	2a04      	cmp	r2, #4
   23436:	dd09      	ble.n	2344c <_dtoa_r+0x84c>
   23438:	9908      	ldr	r1, [sp, #32]
   2343a:	9a09      	ldr	r2, [sp, #36]	; 0x24
   2343c:	f1c3 031c 	rsb	r3, r3, #28
   23440:	4419      	add	r1, r3
   23442:	441a      	add	r2, r3
   23444:	9108      	str	r1, [sp, #32]
   23446:	441e      	add	r6, r3
   23448:	9209      	str	r2, [sp, #36]	; 0x24
   2344a:	e009      	b.n	23460 <_dtoa_r+0x860>
   2344c:	d008      	beq.n	23460 <_dtoa_r+0x860>
   2344e:	4613      	mov	r3, r2
   23450:	9808      	ldr	r0, [sp, #32]
   23452:	9909      	ldr	r1, [sp, #36]	; 0x24
   23454:	331c      	adds	r3, #28
   23456:	4418      	add	r0, r3
   23458:	4419      	add	r1, r3
   2345a:	9008      	str	r0, [sp, #32]
   2345c:	441e      	add	r6, r3
   2345e:	9109      	str	r1, [sp, #36]	; 0x24
   23460:	9a08      	ldr	r2, [sp, #32]
   23462:	2a00      	cmp	r2, #0
   23464:	dd04      	ble.n	23470 <_dtoa_r+0x870>
   23466:	4659      	mov	r1, fp
   23468:	4650      	mov	r0, sl
   2346a:	f000 ffe1 	bl	24430 <__lshift>
   2346e:	4683      	mov	fp, r0
   23470:	9b09      	ldr	r3, [sp, #36]	; 0x24
   23472:	2b00      	cmp	r3, #0
   23474:	dd05      	ble.n	23482 <_dtoa_r+0x882>
   23476:	4629      	mov	r1, r5
   23478:	4650      	mov	r0, sl
   2347a:	461a      	mov	r2, r3
   2347c:	f000 ffd8 	bl	24430 <__lshift>
   23480:	4605      	mov	r5, r0
   23482:	9814      	ldr	r0, [sp, #80]	; 0x50
   23484:	b1e0      	cbz	r0, 234c0 <_dtoa_r+0x8c0>
   23486:	4658      	mov	r0, fp
   23488:	4629      	mov	r1, r5
   2348a:	f001 f824 	bl	244d6 <__mcmp>
   2348e:	2800      	cmp	r0, #0
   23490:	da16      	bge.n	234c0 <_dtoa_r+0x8c0>
   23492:	4659      	mov	r1, fp
   23494:	4650      	mov	r0, sl
   23496:	220a      	movs	r2, #10
   23498:	2300      	movs	r3, #0
   2349a:	f000 fe11 	bl	240c0 <__multadd>
   2349e:	990f      	ldr	r1, [sp, #60]	; 0x3c
   234a0:	f109 39ff 	add.w	r9, r9, #4294967295
   234a4:	4683      	mov	fp, r0
   234a6:	b149      	cbz	r1, 234bc <_dtoa_r+0x8bc>
   234a8:	4621      	mov	r1, r4
   234aa:	220a      	movs	r2, #10
   234ac:	4650      	mov	r0, sl
   234ae:	2300      	movs	r3, #0
   234b0:	f000 fe06 	bl	240c0 <__multadd>
   234b4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   234b6:	4604      	mov	r4, r0
   234b8:	9207      	str	r2, [sp, #28]
   234ba:	e001      	b.n	234c0 <_dtoa_r+0x8c0>
   234bc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   234be:	9307      	str	r3, [sp, #28]
   234c0:	9807      	ldr	r0, [sp, #28]
   234c2:	2800      	cmp	r0, #0
   234c4:	dc29      	bgt.n	2351a <_dtoa_r+0x91a>
   234c6:	9924      	ldr	r1, [sp, #144]	; 0x90
   234c8:	2902      	cmp	r1, #2
   234ca:	dd26      	ble.n	2351a <_dtoa_r+0x91a>
   234cc:	b988      	cbnz	r0, 234f2 <_dtoa_r+0x8f2>
   234ce:	4629      	mov	r1, r5
   234d0:	2205      	movs	r2, #5
   234d2:	9b07      	ldr	r3, [sp, #28]
   234d4:	4650      	mov	r0, sl
   234d6:	f000 fdf3 	bl	240c0 <__multadd>
   234da:	4605      	mov	r5, r0
   234dc:	4629      	mov	r1, r5
   234de:	4658      	mov	r0, fp
   234e0:	f000 fff9 	bl	244d6 <__mcmp>
   234e4:	2800      	cmp	r0, #0
   234e6:	dc0e      	bgt.n	23506 <_dtoa_r+0x906>
   234e8:	e003      	b.n	234f2 <_dtoa_r+0x8f2>
   234ea:	9d0c      	ldr	r5, [sp, #48]	; 0x30
   234ec:	e000      	b.n	234f0 <_dtoa_r+0x8f0>
   234ee:	2500      	movs	r5, #0
   234f0:	462c      	mov	r4, r5
   234f2:	9f25      	ldr	r7, [sp, #148]	; 0x94
   234f4:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
   234f8:	ea6f 0907 	mvn.w	r9, r7
   234fc:	e00a      	b.n	23514 <_dtoa_r+0x914>
   234fe:	9d0c      	ldr	r5, [sp, #48]	; 0x30
   23500:	f8dd 9040 	ldr.w	r9, [sp, #64]	; 0x40
   23504:	462c      	mov	r4, r5
   23506:	9f0a      	ldr	r7, [sp, #40]	; 0x28
   23508:	2331      	movs	r3, #49	; 0x31
   2350a:	f107 0801 	add.w	r8, r7, #1
   2350e:	703b      	strb	r3, [r7, #0]
   23510:	f109 0901 	add.w	r9, r9, #1
   23514:	4627      	mov	r7, r4
   23516:	2400      	movs	r4, #0
   23518:	e107      	b.n	2372a <_dtoa_r+0xb2a>
   2351a:	980f      	ldr	r0, [sp, #60]	; 0x3c
   2351c:	2800      	cmp	r0, #0
   2351e:	f000 80bb 	beq.w	23698 <_dtoa_r+0xa98>
   23522:	2e00      	cmp	r6, #0
   23524:	dd05      	ble.n	23532 <_dtoa_r+0x932>
   23526:	4621      	mov	r1, r4
   23528:	4650      	mov	r0, sl
   2352a:	4632      	mov	r2, r6
   2352c:	f000 ff80 	bl	24430 <__lshift>
   23530:	4604      	mov	r4, r0
   23532:	b19f      	cbz	r7, 2355c <_dtoa_r+0x95c>
   23534:	6861      	ldr	r1, [r4, #4]
   23536:	4650      	mov	r0, sl
   23538:	f000 fd76 	bl	24028 <_Balloc>
   2353c:	6922      	ldr	r2, [r4, #16]
   2353e:	4606      	mov	r6, r0
   23540:	3202      	adds	r2, #2
   23542:	f104 010c 	add.w	r1, r4, #12
   23546:	0092      	lsls	r2, r2, #2
   23548:	300c      	adds	r0, #12
   2354a:	f7fb fb64 	bl	1ec16 <memcpy>
   2354e:	4650      	mov	r0, sl
   23550:	4631      	mov	r1, r6
   23552:	2201      	movs	r2, #1
   23554:	f000 ff6c 	bl	24430 <__lshift>
   23558:	4607      	mov	r7, r0
   2355a:	e000      	b.n	2355e <_dtoa_r+0x95e>
   2355c:	4627      	mov	r7, r4
   2355e:	9e0a      	ldr	r6, [sp, #40]	; 0x28
   23560:	4629      	mov	r1, r5
   23562:	4658      	mov	r0, fp
   23564:	f7ff faba 	bl	22adc <quorem>
   23568:	4621      	mov	r1, r4
   2356a:	f100 0c30 	add.w	ip, r0, #48	; 0x30
   2356e:	4680      	mov	r8, r0
   23570:	4658      	mov	r0, fp
   23572:	f8cd c008 	str.w	ip, [sp, #8]
   23576:	f000 ffae 	bl	244d6 <__mcmp>
   2357a:	463a      	mov	r2, r7
   2357c:	9008      	str	r0, [sp, #32]
   2357e:	4629      	mov	r1, r5
   23580:	4650      	mov	r0, sl
   23582:	f000 ffc5 	bl	24510 <__mdiff>
   23586:	68c3      	ldr	r3, [r0, #12]
   23588:	4602      	mov	r2, r0
   2358a:	f8dd c008 	ldr.w	ip, [sp, #8]
   2358e:	b94b      	cbnz	r3, 235a4 <_dtoa_r+0x9a4>
   23590:	4611      	mov	r1, r2
   23592:	4658      	mov	r0, fp
   23594:	9203      	str	r2, [sp, #12]
   23596:	f000 ff9e 	bl	244d6 <__mcmp>
   2359a:	9a03      	ldr	r2, [sp, #12]
   2359c:	4603      	mov	r3, r0
   2359e:	f8dd c008 	ldr.w	ip, [sp, #8]
   235a2:	e000      	b.n	235a6 <_dtoa_r+0x9a6>
   235a4:	2301      	movs	r3, #1
   235a6:	4650      	mov	r0, sl
   235a8:	4611      	mov	r1, r2
   235aa:	9303      	str	r3, [sp, #12]
   235ac:	f8cd c008 	str.w	ip, [sp, #8]
   235b0:	f000 fd6f 	bl	24092 <_Bfree>
   235b4:	9b03      	ldr	r3, [sp, #12]
   235b6:	f8dd c008 	ldr.w	ip, [sp, #8]
   235ba:	b963      	cbnz	r3, 235d6 <_dtoa_r+0x9d6>
   235bc:	9924      	ldr	r1, [sp, #144]	; 0x90
   235be:	b951      	cbnz	r1, 235d6 <_dtoa_r+0x9d6>
   235c0:	9804      	ldr	r0, [sp, #16]
   235c2:	f000 0201 	and.w	r2, r0, #1
   235c6:	b932      	cbnz	r2, 235d6 <_dtoa_r+0x9d6>
   235c8:	f1bc 0f39 	cmp.w	ip, #57	; 0x39
   235cc:	d035      	beq.n	2363a <_dtoa_r+0xa3a>
   235ce:	9b08      	ldr	r3, [sp, #32]
   235d0:	2b00      	cmp	r3, #0
   235d2:	dc24      	bgt.n	2361e <_dtoa_r+0xa1e>
   235d4:	e025      	b.n	23622 <_dtoa_r+0xa22>
   235d6:	9808      	ldr	r0, [sp, #32]
   235d8:	2800      	cmp	r0, #0
   235da:	da02      	bge.n	235e2 <_dtoa_r+0x9e2>
   235dc:	2b00      	cmp	r3, #0
   235de:	dc08      	bgt.n	235f2 <_dtoa_r+0x9f2>
   235e0:	e01f      	b.n	23622 <_dtoa_r+0xa22>
   235e2:	d123      	bne.n	2362c <_dtoa_r+0xa2c>
   235e4:	9924      	ldr	r1, [sp, #144]	; 0x90
   235e6:	bb09      	cbnz	r1, 2362c <_dtoa_r+0xa2c>
   235e8:	9804      	ldr	r0, [sp, #16]
   235ea:	f000 0201 	and.w	r2, r0, #1
   235ee:	b9ea      	cbnz	r2, 2362c <_dtoa_r+0xa2c>
   235f0:	e7f4      	b.n	235dc <_dtoa_r+0x9dc>
   235f2:	4659      	mov	r1, fp
   235f4:	2201      	movs	r2, #1
   235f6:	4650      	mov	r0, sl
   235f8:	f8cd c008 	str.w	ip, [sp, #8]
   235fc:	f000 ff18 	bl	24430 <__lshift>
   23600:	4629      	mov	r1, r5
   23602:	4683      	mov	fp, r0
   23604:	f000 ff67 	bl	244d6 <__mcmp>
   23608:	2800      	cmp	r0, #0
   2360a:	f8dd c008 	ldr.w	ip, [sp, #8]
   2360e:	dc03      	bgt.n	23618 <_dtoa_r+0xa18>
   23610:	d107      	bne.n	23622 <_dtoa_r+0xa22>
   23612:	f01c 0f01 	tst.w	ip, #1
   23616:	d004      	beq.n	23622 <_dtoa_r+0xa22>
   23618:	f1bc 0f39 	cmp.w	ip, #57	; 0x39
   2361c:	d00d      	beq.n	2363a <_dtoa_r+0xa3a>
   2361e:	f108 0c31 	add.w	ip, r8, #49	; 0x31
   23622:	f106 0801 	add.w	r8, r6, #1
   23626:	f886 c000 	strb.w	ip, [r6]
   2362a:	e07e      	b.n	2372a <_dtoa_r+0xb2a>
   2362c:	2b00      	cmp	r3, #0
   2362e:	f106 0801 	add.w	r8, r6, #1
   23632:	dd09      	ble.n	23648 <_dtoa_r+0xa48>
   23634:	f1bc 0f39 	cmp.w	ip, #57	; 0x39
   23638:	d103      	bne.n	23642 <_dtoa_r+0xa42>
   2363a:	2339      	movs	r3, #57	; 0x39
   2363c:	7033      	strb	r3, [r6, #0]
   2363e:	3601      	adds	r6, #1
   23640:	e05b      	b.n	236fa <_dtoa_r+0xafa>
   23642:	f10c 0301 	add.w	r3, ip, #1
   23646:	e068      	b.n	2371a <_dtoa_r+0xb1a>
   23648:	990a      	ldr	r1, [sp, #40]	; 0x28
   2364a:	9a07      	ldr	r2, [sp, #28]
   2364c:	ebc1 0308 	rsb	r3, r1, r8
   23650:	4646      	mov	r6, r8
   23652:	4293      	cmp	r3, r2
   23654:	f806 cc01 	strb.w	ip, [r6, #-1]
   23658:	d03c      	beq.n	236d4 <_dtoa_r+0xad4>
   2365a:	4659      	mov	r1, fp
   2365c:	220a      	movs	r2, #10
   2365e:	2300      	movs	r3, #0
   23660:	4650      	mov	r0, sl
   23662:	f000 fd2d 	bl	240c0 <__multadd>
   23666:	42bc      	cmp	r4, r7
   23668:	4683      	mov	fp, r0
   2366a:	4621      	mov	r1, r4
   2366c:	4650      	mov	r0, sl
   2366e:	f04f 020a 	mov.w	r2, #10
   23672:	f04f 0300 	mov.w	r3, #0
   23676:	d104      	bne.n	23682 <_dtoa_r+0xa82>
   23678:	f000 fd22 	bl	240c0 <__multadd>
   2367c:	4604      	mov	r4, r0
   2367e:	4607      	mov	r7, r0
   23680:	e76e      	b.n	23560 <_dtoa_r+0x960>
   23682:	f000 fd1d 	bl	240c0 <__multadd>
   23686:	4639      	mov	r1, r7
   23688:	4604      	mov	r4, r0
   2368a:	220a      	movs	r2, #10
   2368c:	4650      	mov	r0, sl
   2368e:	2300      	movs	r3, #0
   23690:	f000 fd16 	bl	240c0 <__multadd>
   23694:	4607      	mov	r7, r0
   23696:	e763      	b.n	23560 <_dtoa_r+0x960>
   23698:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
   2369a:	4658      	mov	r0, fp
   2369c:	4629      	mov	r1, r5
   2369e:	f7ff fa1d 	bl	22adc <quorem>
   236a2:	9f0a      	ldr	r7, [sp, #40]	; 0x28
   236a4:	f100 0c30 	add.w	ip, r0, #48	; 0x30
   236a8:	f807 c006 	strb.w	ip, [r7, r6]
   236ac:	9f07      	ldr	r7, [sp, #28]
   236ae:	3601      	adds	r6, #1
   236b0:	42be      	cmp	r6, r7
   236b2:	db07      	blt.n	236c4 <_dtoa_r+0xac4>
   236b4:	9e0a      	ldr	r6, [sp, #40]	; 0x28
   236b6:	2f01      	cmp	r7, #1
   236b8:	bfac      	ite	ge
   236ba:	19f6      	addge	r6, r6, r7
   236bc:	3601      	addlt	r6, #1
   236be:	4627      	mov	r7, r4
   236c0:	2400      	movs	r4, #0
   236c2:	e007      	b.n	236d4 <_dtoa_r+0xad4>
   236c4:	4659      	mov	r1, fp
   236c6:	4650      	mov	r0, sl
   236c8:	220a      	movs	r2, #10
   236ca:	2300      	movs	r3, #0
   236cc:	f000 fcf8 	bl	240c0 <__multadd>
   236d0:	4683      	mov	fp, r0
   236d2:	e7e2      	b.n	2369a <_dtoa_r+0xa9a>
   236d4:	4659      	mov	r1, fp
   236d6:	2201      	movs	r2, #1
   236d8:	4650      	mov	r0, sl
   236da:	f8cd c008 	str.w	ip, [sp, #8]
   236de:	f000 fea7 	bl	24430 <__lshift>
   236e2:	4629      	mov	r1, r5
   236e4:	4683      	mov	fp, r0
   236e6:	f000 fef6 	bl	244d6 <__mcmp>
   236ea:	2800      	cmp	r0, #0
   236ec:	f8dd c008 	ldr.w	ip, [sp, #8]
   236f0:	dc03      	bgt.n	236fa <_dtoa_r+0xafa>
   236f2:	d114      	bne.n	2371e <_dtoa_r+0xb1e>
   236f4:	f01c 0f01 	tst.w	ip, #1
   236f8:	d011      	beq.n	2371e <_dtoa_r+0xb1e>
   236fa:	f816 3c01 	ldrb.w	r3, [r6, #-1]
   236fe:	46b0      	mov	r8, r6
   23700:	2b39      	cmp	r3, #57	; 0x39
   23702:	f106 36ff 	add.w	r6, r6, #4294967295
   23706:	d107      	bne.n	23718 <_dtoa_r+0xb18>
   23708:	980a      	ldr	r0, [sp, #40]	; 0x28
   2370a:	42b0      	cmp	r0, r6
   2370c:	d1f5      	bne.n	236fa <_dtoa_r+0xafa>
   2370e:	2331      	movs	r3, #49	; 0x31
   23710:	f109 0901 	add.w	r9, r9, #1
   23714:	7003      	strb	r3, [r0, #0]
   23716:	e008      	b.n	2372a <_dtoa_r+0xb2a>
   23718:	3301      	adds	r3, #1
   2371a:	7033      	strb	r3, [r6, #0]
   2371c:	e005      	b.n	2372a <_dtoa_r+0xb2a>
   2371e:	46b0      	mov	r8, r6
   23720:	f818 3c01 	ldrb.w	r3, [r8, #-1]
   23724:	3e01      	subs	r6, #1
   23726:	2b30      	cmp	r3, #48	; 0x30
   23728:	d0f9      	beq.n	2371e <_dtoa_r+0xb1e>
   2372a:	4650      	mov	r0, sl
   2372c:	4629      	mov	r1, r5
   2372e:	f000 fcb0 	bl	24092 <_Bfree>
   23732:	b16f      	cbz	r7, 23750 <_dtoa_r+0xb50>
   23734:	b12c      	cbz	r4, 23742 <_dtoa_r+0xb42>
   23736:	42bc      	cmp	r4, r7
   23738:	d003      	beq.n	23742 <_dtoa_r+0xb42>
   2373a:	4650      	mov	r0, sl
   2373c:	4621      	mov	r1, r4
   2373e:	f000 fca8 	bl	24092 <_Bfree>
   23742:	4650      	mov	r0, sl
   23744:	4639      	mov	r1, r7
   23746:	f000 fca4 	bl	24092 <_Bfree>
   2374a:	e001      	b.n	23750 <_dtoa_r+0xb50>
   2374c:	f8dd 9040 	ldr.w	r9, [sp, #64]	; 0x40
   23750:	4650      	mov	r0, sl
   23752:	4659      	mov	r1, fp
   23754:	f000 fc9d 	bl	24092 <_Bfree>
   23758:	2300      	movs	r3, #0
   2375a:	9f26      	ldr	r7, [sp, #152]	; 0x98
   2375c:	f888 3000 	strb.w	r3, [r8]
   23760:	f109 0301 	add.w	r3, r9, #1
   23764:	603b      	str	r3, [r7, #0]
   23766:	9f28      	ldr	r7, [sp, #160]	; 0xa0
   23768:	b127      	cbz	r7, 23774 <_dtoa_r+0xb74>
   2376a:	f8c7 8000 	str.w	r8, [r7]
   2376e:	e001      	b.n	23774 <_dtoa_r+0xb74>
   23770:	4802      	ldr	r0, [pc, #8]	; (2377c <_dtoa_r+0xb7c>)
   23772:	e000      	b.n	23776 <_dtoa_r+0xb76>
   23774:	980a      	ldr	r0, [sp, #40]	; 0x28
   23776:	b01b      	add	sp, #108	; 0x6c
   23778:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2377c:	00026e1c 	.word	0x00026e1c

00023780 <__sflush_r>:
__sflush_r():
   23780:	898a      	ldrh	r2, [r1, #12]
   23782:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   23786:	4605      	mov	r5, r0
   23788:	0710      	lsls	r0, r2, #28
   2378a:	460c      	mov	r4, r1
   2378c:	d457      	bmi.n	2383e <__sflush_r+0xbe>
   2378e:	684b      	ldr	r3, [r1, #4]
   23790:	2b00      	cmp	r3, #0
   23792:	dc02      	bgt.n	2379a <__sflush_r+0x1a>
   23794:	6c0b      	ldr	r3, [r1, #64]	; 0x40
   23796:	2b00      	cmp	r3, #0
   23798:	dd18      	ble.n	237cc <__sflush_r+0x4c>
   2379a:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
   2379c:	b1b6      	cbz	r6, 237cc <__sflush_r+0x4c>
   2379e:	f402 5280 	and.w	r2, r2, #4096	; 0x1000
   237a2:	2300      	movs	r3, #0
   237a4:	b292      	uxth	r2, r2
   237a6:	682f      	ldr	r7, [r5, #0]
   237a8:	602b      	str	r3, [r5, #0]
   237aa:	b10a      	cbz	r2, 237b0 <__sflush_r+0x30>
   237ac:	6d62      	ldr	r2, [r4, #84]	; 0x54
   237ae:	e010      	b.n	237d2 <__sflush_r+0x52>
   237b0:	6a21      	ldr	r1, [r4, #32]
   237b2:	4628      	mov	r0, r5
   237b4:	2301      	movs	r3, #1
   237b6:	47b0      	blx	r6
   237b8:	1c41      	adds	r1, r0, #1
   237ba:	4602      	mov	r2, r0
   237bc:	d109      	bne.n	237d2 <__sflush_r+0x52>
   237be:	682b      	ldr	r3, [r5, #0]
   237c0:	b13b      	cbz	r3, 237d2 <__sflush_r+0x52>
   237c2:	2b1d      	cmp	r3, #29
   237c4:	d001      	beq.n	237ca <__sflush_r+0x4a>
   237c6:	2b16      	cmp	r3, #22
   237c8:	d146      	bne.n	23858 <__sflush_r+0xd8>
   237ca:	602f      	str	r7, [r5, #0]
   237cc:	2000      	movs	r0, #0
   237ce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   237d2:	89a3      	ldrh	r3, [r4, #12]
   237d4:	075b      	lsls	r3, r3, #29
   237d6:	d505      	bpl.n	237e4 <__sflush_r+0x64>
   237d8:	6863      	ldr	r3, [r4, #4]
   237da:	1ad2      	subs	r2, r2, r3
   237dc:	6b63      	ldr	r3, [r4, #52]	; 0x34
   237de:	b10b      	cbz	r3, 237e4 <__sflush_r+0x64>
   237e0:	6c23      	ldr	r3, [r4, #64]	; 0x40
   237e2:	1ad2      	subs	r2, r2, r3
   237e4:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
   237e6:	4628      	mov	r0, r5
   237e8:	6a21      	ldr	r1, [r4, #32]
   237ea:	2300      	movs	r3, #0
   237ec:	47b0      	blx	r6
   237ee:	1c46      	adds	r6, r0, #1
   237f0:	89a2      	ldrh	r2, [r4, #12]
   237f2:	d105      	bne.n	23800 <__sflush_r+0x80>
   237f4:	682b      	ldr	r3, [r5, #0]
   237f6:	b11b      	cbz	r3, 23800 <__sflush_r+0x80>
   237f8:	2b1d      	cmp	r3, #29
   237fa:	d001      	beq.n	23800 <__sflush_r+0x80>
   237fc:	2b16      	cmp	r3, #22
   237fe:	d119      	bne.n	23834 <__sflush_r+0xb4>
   23800:	2300      	movs	r3, #0
   23802:	6063      	str	r3, [r4, #4]
   23804:	6923      	ldr	r3, [r4, #16]
   23806:	04d1      	lsls	r1, r2, #19
   23808:	6023      	str	r3, [r4, #0]
   2380a:	d504      	bpl.n	23816 <__sflush_r+0x96>
   2380c:	1c42      	adds	r2, r0, #1
   2380e:	d101      	bne.n	23814 <__sflush_r+0x94>
   23810:	682b      	ldr	r3, [r5, #0]
   23812:	b903      	cbnz	r3, 23816 <__sflush_r+0x96>
   23814:	6560      	str	r0, [r4, #84]	; 0x54
   23816:	6b61      	ldr	r1, [r4, #52]	; 0x34
   23818:	602f      	str	r7, [r5, #0]
   2381a:	2900      	cmp	r1, #0
   2381c:	d0d6      	beq.n	237cc <__sflush_r+0x4c>
   2381e:	f104 0344 	add.w	r3, r4, #68	; 0x44
   23822:	4299      	cmp	r1, r3
   23824:	d002      	beq.n	2382c <__sflush_r+0xac>
   23826:	4628      	mov	r0, r5
   23828:	f7fb fe5a 	bl	1f4e0 <_free_r>
   2382c:	2000      	movs	r0, #0
   2382e:	6360      	str	r0, [r4, #52]	; 0x34
   23830:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   23834:	f042 0240 	orr.w	r2, r2, #64	; 0x40
   23838:	81a2      	strh	r2, [r4, #12]
   2383a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   2383e:	690e      	ldr	r6, [r1, #16]
   23840:	2e00      	cmp	r6, #0
   23842:	d0c3      	beq.n	237cc <__sflush_r+0x4c>
   23844:	680b      	ldr	r3, [r1, #0]
   23846:	600e      	str	r6, [r1, #0]
   23848:	ebc6 0803 	rsb	r8, r6, r3
   2384c:	0793      	lsls	r3, r2, #30
   2384e:	bf0c      	ite	eq
   23850:	694b      	ldreq	r3, [r1, #20]
   23852:	2300      	movne	r3, #0
   23854:	608b      	str	r3, [r1, #8]
   23856:	e012      	b.n	2387e <__sflush_r+0xfe>
   23858:	89a3      	ldrh	r3, [r4, #12]
   2385a:	f04f 30ff 	mov.w	r0, #4294967295
   2385e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   23862:	81a3      	strh	r3, [r4, #12]
   23864:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   23868:	6aa7      	ldr	r7, [r4, #40]	; 0x28
   2386a:	4628      	mov	r0, r5
   2386c:	6a21      	ldr	r1, [r4, #32]
   2386e:	4632      	mov	r2, r6
   23870:	4643      	mov	r3, r8
   23872:	47b8      	blx	r7
   23874:	2800      	cmp	r0, #0
   23876:	ddef      	ble.n	23858 <__sflush_r+0xd8>
   23878:	4406      	add	r6, r0
   2387a:	ebc0 0808 	rsb	r8, r0, r8
   2387e:	f1b8 0f00 	cmp.w	r8, #0
   23882:	dcf1      	bgt.n	23868 <__sflush_r+0xe8>
   23884:	e7a2      	b.n	237cc <__sflush_r+0x4c>
	...

00023888 <_fflush_r>:
_fflush_r():
   23888:	b538      	push	{r3, r4, r5, lr}
   2388a:	690b      	ldr	r3, [r1, #16]
   2388c:	4605      	mov	r5, r0
   2388e:	460c      	mov	r4, r1
   23890:	b1db      	cbz	r3, 238ca <_fflush_r+0x42>
   23892:	b118      	cbz	r0, 2389c <_fflush_r+0x14>
   23894:	6983      	ldr	r3, [r0, #24]
   23896:	b90b      	cbnz	r3, 2389c <_fflush_r+0x14>
   23898:	f7fb f8b0 	bl	1e9fc <__sinit>
   2389c:	4b0c      	ldr	r3, [pc, #48]	; (238d0 <_fflush_r+0x48>)
   2389e:	429c      	cmp	r4, r3
   238a0:	d101      	bne.n	238a6 <_fflush_r+0x1e>
   238a2:	686c      	ldr	r4, [r5, #4]
   238a4:	e008      	b.n	238b8 <_fflush_r+0x30>
   238a6:	4b0b      	ldr	r3, [pc, #44]	; (238d4 <_fflush_r+0x4c>)
   238a8:	429c      	cmp	r4, r3
   238aa:	d101      	bne.n	238b0 <_fflush_r+0x28>
   238ac:	68ac      	ldr	r4, [r5, #8]
   238ae:	e003      	b.n	238b8 <_fflush_r+0x30>
   238b0:	4b09      	ldr	r3, [pc, #36]	; (238d8 <_fflush_r+0x50>)
   238b2:	429c      	cmp	r4, r3
   238b4:	bf08      	it	eq
   238b6:	68ec      	ldreq	r4, [r5, #12]
   238b8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   238bc:	b12b      	cbz	r3, 238ca <_fflush_r+0x42>
   238be:	4628      	mov	r0, r5
   238c0:	4621      	mov	r1, r4
   238c2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   238c6:	f7ff bf5b 	b.w	23780 <__sflush_r>
   238ca:	2000      	movs	r0, #0
   238cc:	bd38      	pop	{r3, r4, r5, pc}
   238ce:	bf00      	nop
   238d0:	00027994 	.word	0x00027994
   238d4:	000279b4 	.word	0x000279b4
   238d8:	000279d4 	.word	0x000279d4

000238dc <fflush>:
fflush():
   238dc:	4601      	mov	r1, r0
   238de:	b920      	cbnz	r0, 238ea <fflush+0xe>
   238e0:	4b04      	ldr	r3, [pc, #16]	; (238f4 <fflush+0x18>)
   238e2:	4905      	ldr	r1, [pc, #20]	; (238f8 <fflush+0x1c>)
   238e4:	6818      	ldr	r0, [r3, #0]
   238e6:	f7fb b90f 	b.w	1eb08 <_fwalk_reent>
   238ea:	4b04      	ldr	r3, [pc, #16]	; (238fc <fflush+0x20>)
   238ec:	6818      	ldr	r0, [r3, #0]
   238ee:	f7ff bfcb 	b.w	23888 <_fflush_r>
   238f2:	bf00      	nop
   238f4:	000279f8 	.word	0x000279f8
   238f8:	00023889 	.word	0x00023889
   238fc:	2007c16c 	.word	0x2007c16c

00023900 <rshift>:
rshift():
   23900:	b5f0      	push	{r4, r5, r6, r7, lr}
   23902:	6906      	ldr	r6, [r0, #16]
   23904:	114b      	asrs	r3, r1, #5
   23906:	42b3      	cmp	r3, r6
   23908:	f100 0214 	add.w	r2, r0, #20
   2390c:	da26      	bge.n	2395c <rshift+0x5c>
   2390e:	f011 011f 	ands.w	r1, r1, #31
   23912:	eb02 0686 	add.w	r6, r2, r6, lsl #2
   23916:	eb02 0483 	add.w	r4, r2, r3, lsl #2
   2391a:	d101      	bne.n	23920 <rshift+0x20>
   2391c:	4613      	mov	r3, r2
   2391e:	e016      	b.n	2394e <rshift+0x4e>
   23920:	f852 5023 	ldr.w	r5, [r2, r3, lsl #2]
   23924:	f1c1 0c20 	rsb	ip, r1, #32
   23928:	40cd      	lsrs	r5, r1
   2392a:	3404      	adds	r4, #4
   2392c:	4613      	mov	r3, r2
   2392e:	42b4      	cmp	r4, r6
   23930:	d209      	bcs.n	23946 <rshift+0x46>
   23932:	6827      	ldr	r7, [r4, #0]
   23934:	fa07 f70c 	lsl.w	r7, r7, ip
   23938:	433d      	orrs	r5, r7
   2393a:	f843 5b04 	str.w	r5, [r3], #4
   2393e:	f854 5b04 	ldr.w	r5, [r4], #4
   23942:	40cd      	lsrs	r5, r1
   23944:	e7f3      	b.n	2392e <rshift+0x2e>
   23946:	601d      	str	r5, [r3, #0]
   23948:	b14d      	cbz	r5, 2395e <rshift+0x5e>
   2394a:	3304      	adds	r3, #4
   2394c:	e007      	b.n	2395e <rshift+0x5e>
   2394e:	42b4      	cmp	r4, r6
   23950:	d205      	bcs.n	2395e <rshift+0x5e>
   23952:	f854 1b04 	ldr.w	r1, [r4], #4
   23956:	f843 1b04 	str.w	r1, [r3], #4
   2395a:	e7f8      	b.n	2394e <rshift+0x4e>
   2395c:	4613      	mov	r3, r2
   2395e:	1a9b      	subs	r3, r3, r2
   23960:	109b      	asrs	r3, r3, #2
   23962:	6103      	str	r3, [r0, #16]
   23964:	b903      	cbnz	r3, 23968 <rshift+0x68>
   23966:	6143      	str	r3, [r0, #20]
   23968:	bdf0      	pop	{r4, r5, r6, r7, pc}

0002396a <__hexdig_fun>:
__hexdig_fun():
   2396a:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
   2396e:	2b09      	cmp	r3, #9
   23970:	d801      	bhi.n	23976 <__hexdig_fun+0xc>
   23972:	3820      	subs	r0, #32
   23974:	e00a      	b.n	2398c <__hexdig_fun+0x22>
   23976:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
   2397a:	2b05      	cmp	r3, #5
   2397c:	d801      	bhi.n	23982 <__hexdig_fun+0x18>
   2397e:	3847      	subs	r0, #71	; 0x47
   23980:	e004      	b.n	2398c <__hexdig_fun+0x22>
   23982:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
   23986:	2b05      	cmp	r3, #5
   23988:	d802      	bhi.n	23990 <__hexdig_fun+0x26>
   2398a:	3827      	subs	r0, #39	; 0x27
   2398c:	b2c0      	uxtb	r0, r0
   2398e:	4770      	bx	lr
   23990:	2000      	movs	r0, #0
   23992:	4770      	bx	lr

00023994 <__gethex>:
__gethex():
   23994:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23998:	b089      	sub	sp, #36	; 0x24
   2399a:	9105      	str	r1, [sp, #20]
   2399c:	9306      	str	r3, [sp, #24]
   2399e:	4690      	mov	r8, r2
   239a0:	9003      	str	r0, [sp, #12]
   239a2:	f000 fadf 	bl	23f64 <_localeconv_r>
   239a6:	6800      	ldr	r0, [r0, #0]
   239a8:	f04f 0b00 	mov.w	fp, #0
   239ac:	9004      	str	r0, [sp, #16]
   239ae:	f7fc f983 	bl	1fcb8 <strlen>
   239b2:	9b04      	ldr	r3, [sp, #16]
   239b4:	9905      	ldr	r1, [sp, #20]
   239b6:	4403      	add	r3, r0
   239b8:	f813 3c01 	ldrb.w	r3, [r3, #-1]
   239bc:	9002      	str	r0, [sp, #8]
   239be:	9307      	str	r3, [sp, #28]
   239c0:	680b      	ldr	r3, [r1, #0]
   239c2:	3302      	adds	r3, #2
   239c4:	461f      	mov	r7, r3
   239c6:	f813 0b01 	ldrb.w	r0, [r3], #1
   239ca:	2830      	cmp	r0, #48	; 0x30
   239cc:	d102      	bne.n	239d4 <__gethex+0x40>
   239ce:	f10b 0b01 	add.w	fp, fp, #1
   239d2:	e7f7      	b.n	239c4 <__gethex+0x30>
   239d4:	f7ff ffc9 	bl	2396a <__hexdig_fun>
   239d8:	4606      	mov	r6, r0
   239da:	b9f8      	cbnz	r0, 23a1c <__gethex+0x88>
   239dc:	4638      	mov	r0, r7
   239de:	9904      	ldr	r1, [sp, #16]
   239e0:	9a02      	ldr	r2, [sp, #8]
   239e2:	f7fc f993 	bl	1fd0c <strncmp>
   239e6:	2800      	cmp	r0, #0
   239e8:	d139      	bne.n	23a5e <__gethex+0xca>
   239ea:	9b02      	ldr	r3, [sp, #8]
   239ec:	9d02      	ldr	r5, [sp, #8]
   239ee:	5cf8      	ldrb	r0, [r7, r3]
   239f0:	443d      	add	r5, r7
   239f2:	f7ff ffba 	bl	2396a <__hexdig_fun>
   239f6:	2800      	cmp	r0, #0
   239f8:	d033      	beq.n	23a62 <__gethex+0xce>
   239fa:	462b      	mov	r3, r5
   239fc:	7818      	ldrb	r0, [r3, #0]
   239fe:	461f      	mov	r7, r3
   23a00:	2830      	cmp	r0, #48	; 0x30
   23a02:	f103 0301 	add.w	r3, r3, #1
   23a06:	d0f9      	beq.n	239fc <__gethex+0x68>
   23a08:	f7ff ffaf 	bl	2396a <__hexdig_fun>
   23a0c:	f1d0 0401 	rsbs	r4, r0, #1
   23a10:	bf38      	it	cc
   23a12:	2400      	movcc	r4, #0
   23a14:	462e      	mov	r6, r5
   23a16:	f04f 0b01 	mov.w	fp, #1
   23a1a:	e001      	b.n	23a20 <__gethex+0x8c>
   23a1c:	2400      	movs	r4, #0
   23a1e:	4626      	mov	r6, r4
   23a20:	46b9      	mov	r9, r7
   23a22:	464d      	mov	r5, r9
   23a24:	7828      	ldrb	r0, [r5, #0]
   23a26:	f109 0901 	add.w	r9, r9, #1
   23a2a:	f7ff ff9e 	bl	2396a <__hexdig_fun>
   23a2e:	2800      	cmp	r0, #0
   23a30:	d1f7      	bne.n	23a22 <__gethex+0x8e>
   23a32:	4628      	mov	r0, r5
   23a34:	9904      	ldr	r1, [sp, #16]
   23a36:	9a02      	ldr	r2, [sp, #8]
   23a38:	f7fc f968 	bl	1fd0c <strncmp>
   23a3c:	b958      	cbnz	r0, 23a56 <__gethex+0xc2>
   23a3e:	b95e      	cbnz	r6, 23a58 <__gethex+0xc4>
   23a40:	9e02      	ldr	r6, [sp, #8]
   23a42:	442e      	add	r6, r5
   23a44:	46b1      	mov	r9, r6
   23a46:	464d      	mov	r5, r9
   23a48:	7828      	ldrb	r0, [r5, #0]
   23a4a:	f109 0901 	add.w	r9, r9, #1
   23a4e:	f7ff ff8c 	bl	2396a <__hexdig_fun>
   23a52:	2800      	cmp	r0, #0
   23a54:	d1f7      	bne.n	23a46 <__gethex+0xb2>
   23a56:	b136      	cbz	r6, 23a66 <__gethex+0xd2>
   23a58:	1b76      	subs	r6, r6, r5
   23a5a:	00b6      	lsls	r6, r6, #2
   23a5c:	e003      	b.n	23a66 <__gethex+0xd2>
   23a5e:	463d      	mov	r5, r7
   23a60:	e000      	b.n	23a64 <__gethex+0xd0>
   23a62:	4606      	mov	r6, r0
   23a64:	2401      	movs	r4, #1
   23a66:	782b      	ldrb	r3, [r5, #0]
   23a68:	2b50      	cmp	r3, #80	; 0x50
   23a6a:	d001      	beq.n	23a70 <__gethex+0xdc>
   23a6c:	2b70      	cmp	r3, #112	; 0x70
   23a6e:	d134      	bne.n	23ada <__gethex+0x146>
   23a70:	786b      	ldrb	r3, [r5, #1]
   23a72:	2b2b      	cmp	r3, #43	; 0x2b
   23a74:	d005      	beq.n	23a82 <__gethex+0xee>
   23a76:	2b2d      	cmp	r3, #45	; 0x2d
   23a78:	d005      	beq.n	23a86 <__gethex+0xf2>
   23a7a:	f105 0901 	add.w	r9, r5, #1
   23a7e:	2100      	movs	r1, #0
   23a80:	e004      	b.n	23a8c <__gethex+0xf8>
   23a82:	2100      	movs	r1, #0
   23a84:	e000      	b.n	23a88 <__gethex+0xf4>
   23a86:	2101      	movs	r1, #1
   23a88:	f105 0902 	add.w	r9, r5, #2
   23a8c:	f899 0000 	ldrb.w	r0, [r9]
   23a90:	9101      	str	r1, [sp, #4]
   23a92:	f7ff ff6a 	bl	2396a <__hexdig_fun>
   23a96:	1e43      	subs	r3, r0, #1
   23a98:	b2db      	uxtb	r3, r3
   23a9a:	2b18      	cmp	r3, #24
   23a9c:	9901      	ldr	r1, [sp, #4]
   23a9e:	d81c      	bhi.n	23ada <__gethex+0x146>
   23aa0:	f1a0 0a10 	sub.w	sl, r0, #16
   23aa4:	f109 0301 	add.w	r3, r9, #1
   23aa8:	4699      	mov	r9, r3
   23aaa:	f899 0000 	ldrb.w	r0, [r9]
   23aae:	3301      	adds	r3, #1
   23ab0:	9101      	str	r1, [sp, #4]
   23ab2:	9300      	str	r3, [sp, #0]
   23ab4:	f7ff ff59 	bl	2396a <__hexdig_fun>
   23ab8:	1e42      	subs	r2, r0, #1
   23aba:	b2d2      	uxtb	r2, r2
   23abc:	2a18      	cmp	r2, #24
   23abe:	9901      	ldr	r1, [sp, #4]
   23ac0:	9b00      	ldr	r3, [sp, #0]
   23ac2:	d805      	bhi.n	23ad0 <__gethex+0x13c>
   23ac4:	220a      	movs	r2, #10
   23ac6:	fb02 0a0a 	mla	sl, r2, sl, r0
   23aca:	f1aa 0a10 	sub.w	sl, sl, #16
   23ace:	e7eb      	b.n	23aa8 <__gethex+0x114>
   23ad0:	b109      	cbz	r1, 23ad6 <__gethex+0x142>
   23ad2:	f1ca 0a00 	rsb	sl, sl, #0
   23ad6:	4456      	add	r6, sl
   23ad8:	e000      	b.n	23adc <__gethex+0x148>
   23ada:	46a9      	mov	r9, r5
   23adc:	9905      	ldr	r1, [sp, #20]
   23ade:	f8c1 9000 	str.w	r9, [r1]
   23ae2:	b12c      	cbz	r4, 23af0 <__gethex+0x15c>
   23ae4:	f1bb 0f00 	cmp.w	fp, #0
   23ae8:	bf0c      	ite	eq
   23aea:	2006      	moveq	r0, #6
   23aec:	2000      	movne	r0, #0
   23aee:	e17d      	b.n	23dec <__gethex+0x458>
   23af0:	1beb      	subs	r3, r5, r7
   23af2:	3b01      	subs	r3, #1
   23af4:	4621      	mov	r1, r4
   23af6:	2b07      	cmp	r3, #7
   23af8:	dd02      	ble.n	23b00 <__gethex+0x16c>
   23afa:	3101      	adds	r1, #1
   23afc:	105b      	asrs	r3, r3, #1
   23afe:	e7fa      	b.n	23af6 <__gethex+0x162>
   23b00:	9803      	ldr	r0, [sp, #12]
   23b02:	f000 fa91 	bl	24028 <_Balloc>
   23b06:	f04f 0900 	mov.w	r9, #0
   23b0a:	f100 0a14 	add.w	sl, r0, #20
   23b0e:	4604      	mov	r4, r0
   23b10:	4653      	mov	r3, sl
   23b12:	46cb      	mov	fp, r9
   23b14:	42bd      	cmp	r5, r7
   23b16:	d933      	bls.n	23b80 <__gethex+0x1ec>
   23b18:	1e6a      	subs	r2, r5, #1
   23b1a:	9205      	str	r2, [sp, #20]
   23b1c:	9907      	ldr	r1, [sp, #28]
   23b1e:	f815 2c01 	ldrb.w	r2, [r5, #-1]
   23b22:	428a      	cmp	r2, r1
   23b24:	d009      	beq.n	23b3a <__gethex+0x1a6>
   23b26:	f1bb 0f20 	cmp.w	fp, #32
   23b2a:	d117      	bne.n	23b5c <__gethex+0x1c8>
   23b2c:	f8c3 9000 	str.w	r9, [r3]
   23b30:	f04f 0900 	mov.w	r9, #0
   23b34:	3304      	adds	r3, #4
   23b36:	46cb      	mov	fp, r9
   23b38:	e010      	b.n	23b5c <__gethex+0x1c8>
   23b3a:	9a02      	ldr	r2, [sp, #8]
   23b3c:	9905      	ldr	r1, [sp, #20]
   23b3e:	f1c2 0c01 	rsb	ip, r2, #1
   23b42:	448c      	add	ip, r1
   23b44:	45bc      	cmp	ip, r7
   23b46:	d3ee      	bcc.n	23b26 <__gethex+0x192>
   23b48:	4660      	mov	r0, ip
   23b4a:	9904      	ldr	r1, [sp, #16]
   23b4c:	e88d 1008 	stmia.w	sp, {r3, ip}
   23b50:	f7fc f8dc 	bl	1fd0c <strncmp>
   23b54:	e89d 1008 	ldmia.w	sp, {r3, ip}
   23b58:	b180      	cbz	r0, 23b7c <__gethex+0x1e8>
   23b5a:	e7e4      	b.n	23b26 <__gethex+0x192>
   23b5c:	f815 0c01 	ldrb.w	r0, [r5, #-1]
   23b60:	9300      	str	r3, [sp, #0]
   23b62:	f7ff ff02 	bl	2396a <__hexdig_fun>
   23b66:	f000 000f 	and.w	r0, r0, #15
   23b6a:	fa00 f00b 	lsl.w	r0, r0, fp
   23b6e:	f8dd c014 	ldr.w	ip, [sp, #20]
   23b72:	9b00      	ldr	r3, [sp, #0]
   23b74:	ea49 0900 	orr.w	r9, r9, r0
   23b78:	f10b 0b04 	add.w	fp, fp, #4
   23b7c:	4665      	mov	r5, ip
   23b7e:	e7c9      	b.n	23b14 <__gethex+0x180>
   23b80:	f843 9b04 	str.w	r9, [r3], #4
   23b84:	ebca 0303 	rsb	r3, sl, r3
   23b88:	109b      	asrs	r3, r3, #2
   23b8a:	6123      	str	r3, [r4, #16]
   23b8c:	4648      	mov	r0, r9
   23b8e:	015f      	lsls	r7, r3, #5
   23b90:	f000 fb12 	bl	241b8 <__hi0bits>
   23b94:	f8d8 5000 	ldr.w	r5, [r8]
   23b98:	1a38      	subs	r0, r7, r0
   23b9a:	42a8      	cmp	r0, r5
   23b9c:	dd26      	ble.n	23bec <__gethex+0x258>
   23b9e:	1b47      	subs	r7, r0, r5
   23ba0:	4639      	mov	r1, r7
   23ba2:	4620      	mov	r0, r4
   23ba4:	f000 fe19 	bl	247da <__any_on>
   23ba8:	b1c8      	cbz	r0, 23bde <__gethex+0x24a>
   23baa:	1e7b      	subs	r3, r7, #1
   23bac:	f003 011f 	and.w	r1, r3, #31
   23bb0:	f04f 0901 	mov.w	r9, #1
   23bb4:	fa09 f101 	lsl.w	r1, r9, r1
   23bb8:	115a      	asrs	r2, r3, #5
   23bba:	f85a 2022 	ldr.w	r2, [sl, r2, lsl #2]
   23bbe:	4211      	tst	r1, r2
   23bc0:	d00e      	beq.n	23be0 <__gethex+0x24c>
   23bc2:	454b      	cmp	r3, r9
   23bc4:	dc02      	bgt.n	23bcc <__gethex+0x238>
   23bc6:	f04f 0902 	mov.w	r9, #2
   23bca:	e009      	b.n	23be0 <__gethex+0x24c>
   23bcc:	4620      	mov	r0, r4
   23bce:	1eb9      	subs	r1, r7, #2
   23bd0:	f000 fe03 	bl	247da <__any_on>
   23bd4:	2800      	cmp	r0, #0
   23bd6:	d0f6      	beq.n	23bc6 <__gethex+0x232>
   23bd8:	f04f 0903 	mov.w	r9, #3
   23bdc:	e000      	b.n	23be0 <__gethex+0x24c>
   23bde:	4681      	mov	r9, r0
   23be0:	4620      	mov	r0, r4
   23be2:	4639      	mov	r1, r7
   23be4:	f7ff fe8c 	bl	23900 <rshift>
   23be8:	443e      	add	r6, r7
   23bea:	e00c      	b.n	23c06 <__gethex+0x272>
   23bec:	da09      	bge.n	23c02 <__gethex+0x26e>
   23bee:	1a2f      	subs	r7, r5, r0
   23bf0:	4621      	mov	r1, r4
   23bf2:	9803      	ldr	r0, [sp, #12]
   23bf4:	463a      	mov	r2, r7
   23bf6:	f000 fc1b 	bl	24430 <__lshift>
   23bfa:	1bf6      	subs	r6, r6, r7
   23bfc:	4604      	mov	r4, r0
   23bfe:	f100 0a14 	add.w	sl, r0, #20
   23c02:	f04f 0900 	mov.w	r9, #0
   23c06:	f8d8 3008 	ldr.w	r3, [r8, #8]
   23c0a:	429e      	cmp	r6, r3
   23c0c:	dd08      	ble.n	23c20 <__gethex+0x28c>
   23c0e:	9803      	ldr	r0, [sp, #12]
   23c10:	4621      	mov	r1, r4
   23c12:	f000 fa3e 	bl	24092 <_Bfree>
   23c16:	9a12      	ldr	r2, [sp, #72]	; 0x48
   23c18:	2300      	movs	r3, #0
   23c1a:	6013      	str	r3, [r2, #0]
   23c1c:	20a3      	movs	r0, #163	; 0xa3
   23c1e:	e0e5      	b.n	23dec <__gethex+0x458>
   23c20:	f8d8 3004 	ldr.w	r3, [r8, #4]
   23c24:	429e      	cmp	r6, r3
   23c26:	da54      	bge.n	23cd2 <__gethex+0x33e>
   23c28:	1b9e      	subs	r6, r3, r6
   23c2a:	42ae      	cmp	r6, r5
   23c2c:	db2e      	blt.n	23c8c <__gethex+0x2f8>
   23c2e:	f8d8 300c 	ldr.w	r3, [r8, #12]
   23c32:	2b02      	cmp	r3, #2
   23c34:	d01a      	beq.n	23c6c <__gethex+0x2d8>
   23c36:	2b03      	cmp	r3, #3
   23c38:	d01c      	beq.n	23c74 <__gethex+0x2e0>
   23c3a:	2b01      	cmp	r3, #1
   23c3c:	d11d      	bne.n	23c7a <__gethex+0x2e6>
   23c3e:	42ae      	cmp	r6, r5
   23c40:	d11b      	bne.n	23c7a <__gethex+0x2e6>
   23c42:	2d01      	cmp	r5, #1
   23c44:	dc0b      	bgt.n	23c5e <__gethex+0x2ca>
   23c46:	f8d8 3004 	ldr.w	r3, [r8, #4]
   23c4a:	9906      	ldr	r1, [sp, #24]
   23c4c:	2062      	movs	r0, #98	; 0x62
   23c4e:	600b      	str	r3, [r1, #0]
   23c50:	2301      	movs	r3, #1
   23c52:	6123      	str	r3, [r4, #16]
   23c54:	f8ca 3000 	str.w	r3, [sl]
   23c58:	9b12      	ldr	r3, [sp, #72]	; 0x48
   23c5a:	601c      	str	r4, [r3, #0]
   23c5c:	e0c6      	b.n	23dec <__gethex+0x458>
   23c5e:	4620      	mov	r0, r4
   23c60:	1e69      	subs	r1, r5, #1
   23c62:	f000 fdba 	bl	247da <__any_on>
   23c66:	2800      	cmp	r0, #0
   23c68:	d1ed      	bne.n	23c46 <__gethex+0x2b2>
   23c6a:	e006      	b.n	23c7a <__gethex+0x2e6>
   23c6c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   23c6e:	2b00      	cmp	r3, #0
   23c70:	d0e9      	beq.n	23c46 <__gethex+0x2b2>
   23c72:	e002      	b.n	23c7a <__gethex+0x2e6>
   23c74:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   23c76:	2b00      	cmp	r3, #0
   23c78:	d1e5      	bne.n	23c46 <__gethex+0x2b2>
   23c7a:	9803      	ldr	r0, [sp, #12]
   23c7c:	4621      	mov	r1, r4
   23c7e:	f000 fa08 	bl	24092 <_Bfree>
   23c82:	9912      	ldr	r1, [sp, #72]	; 0x48
   23c84:	2300      	movs	r3, #0
   23c86:	600b      	str	r3, [r1, #0]
   23c88:	2050      	movs	r0, #80	; 0x50
   23c8a:	e0af      	b.n	23dec <__gethex+0x458>
   23c8c:	1e77      	subs	r7, r6, #1
   23c8e:	f1b9 0f00 	cmp.w	r9, #0
   23c92:	d107      	bne.n	23ca4 <__gethex+0x310>
   23c94:	2f00      	cmp	r7, #0
   23c96:	dd07      	ble.n	23ca8 <__gethex+0x314>
   23c98:	4620      	mov	r0, r4
   23c9a:	4639      	mov	r1, r7
   23c9c:	f000 fd9d 	bl	247da <__any_on>
   23ca0:	4681      	mov	r9, r0
   23ca2:	e001      	b.n	23ca8 <__gethex+0x314>
   23ca4:	f04f 0901 	mov.w	r9, #1
   23ca8:	117b      	asrs	r3, r7, #5
   23caa:	2201      	movs	r2, #1
   23cac:	f007 071f 	and.w	r7, r7, #31
   23cb0:	fa02 f707 	lsl.w	r7, r2, r7
   23cb4:	f85a 3023 	ldr.w	r3, [sl, r3, lsl #2]
   23cb8:	4631      	mov	r1, r6
   23cba:	421f      	tst	r7, r3
   23cbc:	4620      	mov	r0, r4
   23cbe:	bf18      	it	ne
   23cc0:	f049 0902 	orrne.w	r9, r9, #2
   23cc4:	1bad      	subs	r5, r5, r6
   23cc6:	f7ff fe1b 	bl	23900 <rshift>
   23cca:	2702      	movs	r7, #2
   23ccc:	f8d8 6004 	ldr.w	r6, [r8, #4]
   23cd0:	e000      	b.n	23cd4 <__gethex+0x340>
   23cd2:	2701      	movs	r7, #1
   23cd4:	f1b9 0f00 	cmp.w	r9, #0
   23cd8:	f000 8083 	beq.w	23de2 <__gethex+0x44e>
   23cdc:	f8d8 300c 	ldr.w	r3, [r8, #12]
   23ce0:	2b02      	cmp	r3, #2
   23ce2:	d00e      	beq.n	23d02 <__gethex+0x36e>
   23ce4:	2b03      	cmp	r3, #3
   23ce6:	d010      	beq.n	23d0a <__gethex+0x376>
   23ce8:	2b01      	cmp	r3, #1
   23cea:	d178      	bne.n	23dde <__gethex+0x44a>
   23cec:	f019 0f02 	tst.w	r9, #2
   23cf0:	d075      	beq.n	23dde <__gethex+0x44a>
   23cf2:	f8da 3000 	ldr.w	r3, [sl]
   23cf6:	ea49 0903 	orr.w	r9, r9, r3
   23cfa:	f019 0f01 	tst.w	r9, #1
   23cfe:	d107      	bne.n	23d10 <__gethex+0x37c>
   23d00:	e06d      	b.n	23dde <__gethex+0x44a>
   23d02:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   23d04:	f1c3 0301 	rsb	r3, r3, #1
   23d08:	9313      	str	r3, [sp, #76]	; 0x4c
   23d0a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   23d0c:	2b00      	cmp	r3, #0
   23d0e:	d066      	beq.n	23dde <__gethex+0x44a>
   23d10:	f8d4 9010 	ldr.w	r9, [r4, #16]
   23d14:	f104 0314 	add.w	r3, r4, #20
   23d18:	ea4f 0a89 	mov.w	sl, r9, lsl #2
   23d1c:	eb03 010a 	add.w	r1, r3, sl
   23d20:	4618      	mov	r0, r3
   23d22:	f853 2b04 	ldr.w	r2, [r3], #4
   23d26:	f1b2 3fff 	cmp.w	r2, #4294967295
   23d2a:	d002      	beq.n	23d32 <__gethex+0x39e>
   23d2c:	3201      	adds	r2, #1
   23d2e:	6002      	str	r2, [r0, #0]
   23d30:	e021      	b.n	23d76 <__gethex+0x3e2>
   23d32:	2200      	movs	r2, #0
   23d34:	428b      	cmp	r3, r1
   23d36:	f843 2c04 	str.w	r2, [r3, #-4]
   23d3a:	d3f1      	bcc.n	23d20 <__gethex+0x38c>
   23d3c:	68a3      	ldr	r3, [r4, #8]
   23d3e:	4599      	cmp	r9, r3
   23d40:	db12      	blt.n	23d68 <__gethex+0x3d4>
   23d42:	6861      	ldr	r1, [r4, #4]
   23d44:	9803      	ldr	r0, [sp, #12]
   23d46:	3101      	adds	r1, #1
   23d48:	f000 f96e 	bl	24028 <_Balloc>
   23d4c:	6922      	ldr	r2, [r4, #16]
   23d4e:	f104 010c 	add.w	r1, r4, #12
   23d52:	3202      	adds	r2, #2
   23d54:	4683      	mov	fp, r0
   23d56:	0092      	lsls	r2, r2, #2
   23d58:	300c      	adds	r0, #12
   23d5a:	f7fa ff5c 	bl	1ec16 <memcpy>
   23d5e:	4621      	mov	r1, r4
   23d60:	9803      	ldr	r0, [sp, #12]
   23d62:	f000 f996 	bl	24092 <_Bfree>
   23d66:	465c      	mov	r4, fp
   23d68:	6923      	ldr	r3, [r4, #16]
   23d6a:	1c5a      	adds	r2, r3, #1
   23d6c:	6122      	str	r2, [r4, #16]
   23d6e:	eb04 0383 	add.w	r3, r4, r3, lsl #2
   23d72:	2201      	movs	r2, #1
   23d74:	615a      	str	r2, [r3, #20]
   23d76:	2f02      	cmp	r7, #2
   23d78:	f104 0314 	add.w	r3, r4, #20
   23d7c:	d111      	bne.n	23da2 <__gethex+0x40e>
   23d7e:	f8d8 2000 	ldr.w	r2, [r8]
   23d82:	3a01      	subs	r2, #1
   23d84:	4295      	cmp	r5, r2
   23d86:	d127      	bne.n	23dd8 <__gethex+0x444>
   23d88:	116a      	asrs	r2, r5, #5
   23d8a:	2101      	movs	r1, #1
   23d8c:	f005 051f 	and.w	r5, r5, #31
   23d90:	fa01 f505 	lsl.w	r5, r1, r5
   23d94:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
   23d98:	421d      	tst	r5, r3
   23d9a:	bf0c      	ite	eq
   23d9c:	2702      	moveq	r7, #2
   23d9e:	460f      	movne	r7, r1
   23da0:	e01a      	b.n	23dd8 <__gethex+0x444>
   23da2:	6922      	ldr	r2, [r4, #16]
   23da4:	454a      	cmp	r2, r9
   23da6:	dd0a      	ble.n	23dbe <__gethex+0x42a>
   23da8:	4620      	mov	r0, r4
   23daa:	2101      	movs	r1, #1
   23dac:	f7ff fda8 	bl	23900 <rshift>
   23db0:	f8d8 3008 	ldr.w	r3, [r8, #8]
   23db4:	3601      	adds	r6, #1
   23db6:	429e      	cmp	r6, r3
   23db8:	f73f af29 	bgt.w	23c0e <__gethex+0x27a>
   23dbc:	e00b      	b.n	23dd6 <__gethex+0x442>
   23dbe:	f015 051f 	ands.w	r5, r5, #31
   23dc2:	d008      	beq.n	23dd6 <__gethex+0x442>
   23dc4:	4453      	add	r3, sl
   23dc6:	f853 0c04 	ldr.w	r0, [r3, #-4]
   23dca:	f000 f9f5 	bl	241b8 <__hi0bits>
   23dce:	f1c5 0520 	rsb	r5, r5, #32
   23dd2:	42a8      	cmp	r0, r5
   23dd4:	dbe8      	blt.n	23da8 <__gethex+0x414>
   23dd6:	2701      	movs	r7, #1
   23dd8:	f047 0720 	orr.w	r7, r7, #32
   23ddc:	e001      	b.n	23de2 <__gethex+0x44e>
   23dde:	f047 0710 	orr.w	r7, r7, #16
   23de2:	9b12      	ldr	r3, [sp, #72]	; 0x48
   23de4:	4638      	mov	r0, r7
   23de6:	601c      	str	r4, [r3, #0]
   23de8:	9b06      	ldr	r3, [sp, #24]
   23dea:	601e      	str	r6, [r3, #0]
   23dec:	b009      	add	sp, #36	; 0x24
   23dee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00023df2 <L_shift>:
L_shift():
   23df2:	f1c2 0208 	rsb	r2, r2, #8
   23df6:	0092      	lsls	r2, r2, #2
   23df8:	b570      	push	{r4, r5, r6, lr}
   23dfa:	f1c2 0420 	rsb	r4, r2, #32
   23dfe:	6805      	ldr	r5, [r0, #0]
   23e00:	f850 3f04 	ldr.w	r3, [r0, #4]!
   23e04:	fa03 f604 	lsl.w	r6, r3, r4
   23e08:	40d3      	lsrs	r3, r2
   23e0a:	4335      	orrs	r5, r6
   23e0c:	4288      	cmp	r0, r1
   23e0e:	f840 5c04 	str.w	r5, [r0, #-4]
   23e12:	6003      	str	r3, [r0, #0]
   23e14:	d3f3      	bcc.n	23dfe <L_shift+0xc>
   23e16:	bd70      	pop	{r4, r5, r6, pc}

00023e18 <__hexnan>:
__hexnan():
   23e18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23e1c:	680b      	ldr	r3, [r1, #0]
   23e1e:	b085      	sub	sp, #20
   23e20:	115e      	asrs	r6, r3, #5
   23e22:	9003      	str	r0, [sp, #12]
   23e24:	f013 031f 	ands.w	r3, r3, #31
   23e28:	eb02 0686 	add.w	r6, r2, r6, lsl #2
   23e2c:	9302      	str	r3, [sp, #8]
   23e2e:	9b03      	ldr	r3, [sp, #12]
   23e30:	bf18      	it	ne
   23e32:	3604      	addne	r6, #4
   23e34:	f1a6 0804 	sub.w	r8, r6, #4
   23e38:	4615      	mov	r5, r2
   23e3a:	f8d3 9000 	ldr.w	r9, [r3]
   23e3e:	2200      	movs	r2, #0
   23e40:	f846 2c04 	str.w	r2, [r6, #-4]
   23e44:	4647      	mov	r7, r8
   23e46:	4644      	mov	r4, r8
   23e48:	4692      	mov	sl, r2
   23e4a:	4693      	mov	fp, r2
   23e4c:	f899 1001 	ldrb.w	r1, [r9, #1]
   23e50:	2900      	cmp	r1, #0
   23e52:	d03a      	beq.n	23eca <__hexnan+0xb2>
   23e54:	4608      	mov	r0, r1
   23e56:	e88d 0006 	stmia.w	sp, {r1, r2}
   23e5a:	f7ff fd86 	bl	2396a <__hexdig_fun>
   23e5e:	e89d 0006 	ldmia.w	sp, {r1, r2}
   23e62:	b9d8      	cbnz	r0, 23e9c <__hexnan+0x84>
   23e64:	2920      	cmp	r1, #32
   23e66:	d812      	bhi.n	23e8e <__hexnan+0x76>
   23e68:	45da      	cmp	sl, fp
   23e6a:	da2b      	bge.n	23ec4 <__hexnan+0xac>
   23e6c:	42bc      	cmp	r4, r7
   23e6e:	d205      	bcs.n	23e7c <__hexnan+0x64>
   23e70:	2a07      	cmp	r2, #7
   23e72:	dc03      	bgt.n	23e7c <__hexnan+0x64>
   23e74:	4620      	mov	r0, r4
   23e76:	4639      	mov	r1, r7
   23e78:	f7ff ffbb 	bl	23df2 <L_shift>
   23e7c:	42ac      	cmp	r4, r5
   23e7e:	d920      	bls.n	23ec2 <__hexnan+0xaa>
   23e80:	1f27      	subs	r7, r4, #4
   23e82:	2200      	movs	r2, #0
   23e84:	f844 2c04 	str.w	r2, [r4, #-4]
   23e88:	46da      	mov	sl, fp
   23e8a:	463c      	mov	r4, r7
   23e8c:	e01a      	b.n	23ec4 <__hexnan+0xac>
   23e8e:	2929      	cmp	r1, #41	; 0x29
   23e90:	d14c      	bne.n	23f2c <__hexnan+0x114>
   23e92:	9b03      	ldr	r3, [sp, #12]
   23e94:	f109 0102 	add.w	r1, r9, #2
   23e98:	6019      	str	r1, [r3, #0]
   23e9a:	e016      	b.n	23eca <__hexnan+0xb2>
   23e9c:	3201      	adds	r2, #1
   23e9e:	2a08      	cmp	r2, #8
   23ea0:	f10b 0b01 	add.w	fp, fp, #1
   23ea4:	dd06      	ble.n	23eb4 <__hexnan+0x9c>
   23ea6:	42ac      	cmp	r4, r5
   23ea8:	d90c      	bls.n	23ec4 <__hexnan+0xac>
   23eaa:	2200      	movs	r2, #0
   23eac:	f844 2c04 	str.w	r2, [r4, #-4]
   23eb0:	3c04      	subs	r4, #4
   23eb2:	2201      	movs	r2, #1
   23eb4:	6821      	ldr	r1, [r4, #0]
   23eb6:	f000 000f 	and.w	r0, r0, #15
   23eba:	ea40 1101 	orr.w	r1, r0, r1, lsl #4
   23ebe:	6021      	str	r1, [r4, #0]
   23ec0:	e000      	b.n	23ec4 <__hexnan+0xac>
   23ec2:	2208      	movs	r2, #8
   23ec4:	f109 0901 	add.w	r9, r9, #1
   23ec8:	e7c0      	b.n	23e4c <__hexnan+0x34>
   23eca:	f1bb 0f00 	cmp.w	fp, #0
   23ece:	d02d      	beq.n	23f2c <__hexnan+0x114>
   23ed0:	42bc      	cmp	r4, r7
   23ed2:	d205      	bcs.n	23ee0 <__hexnan+0xc8>
   23ed4:	2a07      	cmp	r2, #7
   23ed6:	dc03      	bgt.n	23ee0 <__hexnan+0xc8>
   23ed8:	4620      	mov	r0, r4
   23eda:	4639      	mov	r1, r7
   23edc:	f7ff ff89 	bl	23df2 <L_shift>
   23ee0:	42ac      	cmp	r4, r5
   23ee2:	d90c      	bls.n	23efe <__hexnan+0xe6>
   23ee4:	462b      	mov	r3, r5
   23ee6:	f854 2b04 	ldr.w	r2, [r4], #4
   23eea:	4544      	cmp	r4, r8
   23eec:	f843 2b04 	str.w	r2, [r3], #4
   23ef0:	d9f9      	bls.n	23ee6 <__hexnan+0xce>
   23ef2:	2200      	movs	r2, #0
   23ef4:	f843 2b04 	str.w	r2, [r3], #4
   23ef8:	4543      	cmp	r3, r8
   23efa:	d9fa      	bls.n	23ef2 <__hexnan+0xda>
   23efc:	e00d      	b.n	23f1a <__hexnan+0x102>
   23efe:	9b02      	ldr	r3, [sp, #8]
   23f00:	b15b      	cbz	r3, 23f1a <__hexnan+0x102>
   23f02:	f1c3 0920 	rsb	r9, r3, #32
   23f06:	f04f 33ff 	mov.w	r3, #4294967295
   23f0a:	fa23 f909 	lsr.w	r9, r3, r9
   23f0e:	f856 3c04 	ldr.w	r3, [r6, #-4]
   23f12:	ea03 0309 	and.w	r3, r3, r9
   23f16:	f846 3c04 	str.w	r3, [r6, #-4]
   23f1a:	f856 3c04 	ldr.w	r3, [r6, #-4]
   23f1e:	3e04      	subs	r6, #4
   23f20:	b933      	cbnz	r3, 23f30 <__hexnan+0x118>
   23f22:	42b5      	cmp	r5, r6
   23f24:	d1f9      	bne.n	23f1a <__hexnan+0x102>
   23f26:	2301      	movs	r3, #1
   23f28:	602b      	str	r3, [r5, #0]
   23f2a:	e001      	b.n	23f30 <__hexnan+0x118>
   23f2c:	2004      	movs	r0, #4
   23f2e:	e000      	b.n	23f32 <__hexnan+0x11a>
   23f30:	2005      	movs	r0, #5
   23f32:	b005      	add	sp, #20
   23f34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00023f38 <_gettimeofday_r>:
_gettimeofday_r():
   23f38:	b538      	push	{r3, r4, r5, lr}
   23f3a:	4c07      	ldr	r4, [pc, #28]	; (23f58 <_gettimeofday_r+0x20>)
   23f3c:	2300      	movs	r3, #0
   23f3e:	4605      	mov	r5, r0
   23f40:	4608      	mov	r0, r1
   23f42:	4611      	mov	r1, r2
   23f44:	6023      	str	r3, [r4, #0]
   23f46:	f7ec fa57 	bl	103f8 <_gettimeofday>
   23f4a:	1c43      	adds	r3, r0, #1
   23f4c:	d102      	bne.n	23f54 <_gettimeofday_r+0x1c>
   23f4e:	6823      	ldr	r3, [r4, #0]
   23f50:	b103      	cbz	r3, 23f54 <_gettimeofday_r+0x1c>
   23f52:	602b      	str	r3, [r5, #0]
   23f54:	bd38      	pop	{r3, r4, r5, pc}
   23f56:	bf00      	nop
   23f58:	2007cad4 	.word	0x2007cad4

00023f5c <__gettzinfo>:
__gettzinfo():
   23f5c:	4800      	ldr	r0, [pc, #0]	; (23f60 <__gettzinfo+0x4>)
   23f5e:	4770      	bx	lr
   23f60:	2007c170 	.word	0x2007c170

00023f64 <_localeconv_r>:
_localeconv_r():
   23f64:	4800      	ldr	r0, [pc, #0]	; (23f68 <_localeconv_r+0x4>)
   23f66:	4770      	bx	lr
   23f68:	2007c1b0 	.word	0x2007c1b0

00023f6c <_lseek_r>:
_lseek_r():
   23f6c:	b538      	push	{r3, r4, r5, lr}
   23f6e:	4c07      	ldr	r4, [pc, #28]	; (23f8c <_lseek_r+0x20>)
   23f70:	4605      	mov	r5, r0
   23f72:	2000      	movs	r0, #0
   23f74:	6020      	str	r0, [r4, #0]
   23f76:	4608      	mov	r0, r1
   23f78:	4611      	mov	r1, r2
   23f7a:	461a      	mov	r2, r3
   23f7c:	f7ec fa38 	bl	103f0 <_lseek>
   23f80:	1c43      	adds	r3, r0, #1
   23f82:	d102      	bne.n	23f8a <_lseek_r+0x1e>
   23f84:	6823      	ldr	r3, [r4, #0]
   23f86:	b103      	cbz	r3, 23f8a <_lseek_r+0x1e>
   23f88:	602b      	str	r3, [r5, #0]
   23f8a:	bd38      	pop	{r3, r4, r5, pc}
   23f8c:	2007cad4 	.word	0x2007cad4

00023f90 <__smakebuf_r>:
__smakebuf_r():
   23f90:	b5f0      	push	{r4, r5, r6, r7, lr}
   23f92:	898b      	ldrh	r3, [r1, #12]
   23f94:	b091      	sub	sp, #68	; 0x44
   23f96:	079e      	lsls	r6, r3, #30
   23f98:	4605      	mov	r5, r0
   23f9a:	460c      	mov	r4, r1
   23f9c:	d425      	bmi.n	23fea <__smakebuf_r+0x5a>
   23f9e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   23fa2:	2900      	cmp	r1, #0
   23fa4:	da08      	bge.n	23fb8 <__smakebuf_r+0x28>
   23fa6:	89a3      	ldrh	r3, [r4, #12]
   23fa8:	2700      	movs	r7, #0
   23faa:	f013 0f80 	tst.w	r3, #128	; 0x80
   23fae:	bf14      	ite	ne
   23fb0:	2640      	movne	r6, #64	; 0x40
   23fb2:	f44f 6680 	moveq.w	r6, #1024	; 0x400
   23fb6:	e00d      	b.n	23fd4 <__smakebuf_r+0x44>
   23fb8:	aa01      	add	r2, sp, #4
   23fba:	f000 fd49 	bl	24a50 <_fstat_r>
   23fbe:	2800      	cmp	r0, #0
   23fc0:	dbf1      	blt.n	23fa6 <__smakebuf_r+0x16>
   23fc2:	9f02      	ldr	r7, [sp, #8]
   23fc4:	f44f 6680 	mov.w	r6, #1024	; 0x400
   23fc8:	f407 4770 	and.w	r7, r7, #61440	; 0xf000
   23fcc:	f5b7 5100 	subs.w	r1, r7, #8192	; 0x2000
   23fd0:	424f      	negs	r7, r1
   23fd2:	414f      	adcs	r7, r1
   23fd4:	4628      	mov	r0, r5
   23fd6:	4631      	mov	r1, r6
   23fd8:	f7fb faf4 	bl	1f5c4 <_malloc_r>
   23fdc:	b960      	cbnz	r0, 23ff8 <__smakebuf_r+0x68>
   23fde:	89a3      	ldrh	r3, [r4, #12]
   23fe0:	059a      	lsls	r2, r3, #22
   23fe2:	d41d      	bmi.n	24020 <__smakebuf_r+0x90>
   23fe4:	f043 0302 	orr.w	r3, r3, #2
   23fe8:	81a3      	strh	r3, [r4, #12]
   23fea:	f104 0347 	add.w	r3, r4, #71	; 0x47
   23fee:	6023      	str	r3, [r4, #0]
   23ff0:	6123      	str	r3, [r4, #16]
   23ff2:	2301      	movs	r3, #1
   23ff4:	6163      	str	r3, [r4, #20]
   23ff6:	e013      	b.n	24020 <__smakebuf_r+0x90>
   23ff8:	4b0a      	ldr	r3, [pc, #40]	; (24024 <__smakebuf_r+0x94>)
   23ffa:	62ab      	str	r3, [r5, #40]	; 0x28
   23ffc:	89a3      	ldrh	r3, [r4, #12]
   23ffe:	6020      	str	r0, [r4, #0]
   24000:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   24004:	81a3      	strh	r3, [r4, #12]
   24006:	6120      	str	r0, [r4, #16]
   24008:	6166      	str	r6, [r4, #20]
   2400a:	b14f      	cbz	r7, 24020 <__smakebuf_r+0x90>
   2400c:	4628      	mov	r0, r5
   2400e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   24012:	f000 fd2f 	bl	24a74 <_isatty_r>
   24016:	b118      	cbz	r0, 24020 <__smakebuf_r+0x90>
   24018:	89a3      	ldrh	r3, [r4, #12]
   2401a:	f043 0301 	orr.w	r3, r3, #1
   2401e:	81a3      	strh	r3, [r4, #12]
   24020:	b011      	add	sp, #68	; 0x44
   24022:	bdf0      	pop	{r4, r5, r6, r7, pc}
   24024:	0001e955 	.word	0x0001e955

00024028 <_Balloc>:
_Balloc():
   24028:	b570      	push	{r4, r5, r6, lr}
   2402a:	6a45      	ldr	r5, [r0, #36]	; 0x24
   2402c:	4604      	mov	r4, r0
   2402e:	460e      	mov	r6, r1
   24030:	b93d      	cbnz	r5, 24042 <_Balloc+0x1a>
   24032:	2010      	movs	r0, #16
   24034:	f7fa fdc2 	bl	1ebbc <malloc>
   24038:	6260      	str	r0, [r4, #36]	; 0x24
   2403a:	6045      	str	r5, [r0, #4]
   2403c:	6085      	str	r5, [r0, #8]
   2403e:	6005      	str	r5, [r0, #0]
   24040:	60c5      	str	r5, [r0, #12]
   24042:	6a65      	ldr	r5, [r4, #36]	; 0x24
   24044:	68eb      	ldr	r3, [r5, #12]
   24046:	b143      	cbz	r3, 2405a <_Balloc+0x32>
   24048:	6a63      	ldr	r3, [r4, #36]	; 0x24
   2404a:	68da      	ldr	r2, [r3, #12]
   2404c:	f852 0026 	ldr.w	r0, [r2, r6, lsl #2]
   24050:	b178      	cbz	r0, 24072 <_Balloc+0x4a>
   24052:	6801      	ldr	r1, [r0, #0]
   24054:	f842 1026 	str.w	r1, [r2, r6, lsl #2]
   24058:	e017      	b.n	2408a <_Balloc+0x62>
   2405a:	4620      	mov	r0, r4
   2405c:	2104      	movs	r1, #4
   2405e:	2221      	movs	r2, #33	; 0x21
   24060:	f000 fbdf 	bl	24822 <_calloc_r>
   24064:	6a63      	ldr	r3, [r4, #36]	; 0x24
   24066:	60e8      	str	r0, [r5, #12]
   24068:	68db      	ldr	r3, [r3, #12]
   2406a:	2b00      	cmp	r3, #0
   2406c:	d1ec      	bne.n	24048 <_Balloc+0x20>
   2406e:	2000      	movs	r0, #0
   24070:	bd70      	pop	{r4, r5, r6, pc}
   24072:	2101      	movs	r1, #1
   24074:	fa01 f506 	lsl.w	r5, r1, r6
   24078:	1d6a      	adds	r2, r5, #5
   2407a:	4620      	mov	r0, r4
   2407c:	0092      	lsls	r2, r2, #2
   2407e:	f000 fbd0 	bl	24822 <_calloc_r>
   24082:	2800      	cmp	r0, #0
   24084:	d0f3      	beq.n	2406e <_Balloc+0x46>
   24086:	6046      	str	r6, [r0, #4]
   24088:	6085      	str	r5, [r0, #8]
   2408a:	2200      	movs	r2, #0
   2408c:	6102      	str	r2, [r0, #16]
   2408e:	60c2      	str	r2, [r0, #12]
   24090:	bd70      	pop	{r4, r5, r6, pc}

00024092 <_Bfree>:
_Bfree():
   24092:	b570      	push	{r4, r5, r6, lr}
   24094:	6a44      	ldr	r4, [r0, #36]	; 0x24
   24096:	4606      	mov	r6, r0
   24098:	460d      	mov	r5, r1
   2409a:	b93c      	cbnz	r4, 240ac <_Bfree+0x1a>
   2409c:	2010      	movs	r0, #16
   2409e:	f7fa fd8d 	bl	1ebbc <malloc>
   240a2:	6270      	str	r0, [r6, #36]	; 0x24
   240a4:	6044      	str	r4, [r0, #4]
   240a6:	6084      	str	r4, [r0, #8]
   240a8:	6004      	str	r4, [r0, #0]
   240aa:	60c4      	str	r4, [r0, #12]
   240ac:	b13d      	cbz	r5, 240be <_Bfree+0x2c>
   240ae:	6a73      	ldr	r3, [r6, #36]	; 0x24
   240b0:	686a      	ldr	r2, [r5, #4]
   240b2:	68db      	ldr	r3, [r3, #12]
   240b4:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   240b8:	6029      	str	r1, [r5, #0]
   240ba:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
   240be:	bd70      	pop	{r4, r5, r6, pc}

000240c0 <__multadd>:
__multadd():
   240c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   240c4:	460c      	mov	r4, r1
   240c6:	461e      	mov	r6, r3
   240c8:	690d      	ldr	r5, [r1, #16]
   240ca:	4607      	mov	r7, r0
   240cc:	3114      	adds	r1, #20
   240ce:	2300      	movs	r3, #0
   240d0:	6808      	ldr	r0, [r1, #0]
   240d2:	3301      	adds	r3, #1
   240d4:	fa1f fc80 	uxth.w	ip, r0
   240d8:	0c00      	lsrs	r0, r0, #16
   240da:	fb02 6c0c 	mla	ip, r2, ip, r6
   240de:	4350      	muls	r0, r2
   240e0:	eb00 401c 	add.w	r0, r0, ip, lsr #16
   240e4:	fa1f fc8c 	uxth.w	ip, ip
   240e8:	0c06      	lsrs	r6, r0, #16
   240ea:	42ab      	cmp	r3, r5
   240ec:	eb0c 4000 	add.w	r0, ip, r0, lsl #16
   240f0:	f841 0b04 	str.w	r0, [r1], #4
   240f4:	dbec      	blt.n	240d0 <__multadd+0x10>
   240f6:	b1d6      	cbz	r6, 2412e <__multadd+0x6e>
   240f8:	68a3      	ldr	r3, [r4, #8]
   240fa:	429d      	cmp	r5, r3
   240fc:	db12      	blt.n	24124 <__multadd+0x64>
   240fe:	6861      	ldr	r1, [r4, #4]
   24100:	4638      	mov	r0, r7
   24102:	3101      	adds	r1, #1
   24104:	f7ff ff90 	bl	24028 <_Balloc>
   24108:	6922      	ldr	r2, [r4, #16]
   2410a:	f104 010c 	add.w	r1, r4, #12
   2410e:	3202      	adds	r2, #2
   24110:	4680      	mov	r8, r0
   24112:	0092      	lsls	r2, r2, #2
   24114:	300c      	adds	r0, #12
   24116:	f7fa fd7e 	bl	1ec16 <memcpy>
   2411a:	4621      	mov	r1, r4
   2411c:	4638      	mov	r0, r7
   2411e:	f7ff ffb8 	bl	24092 <_Bfree>
   24122:	4644      	mov	r4, r8
   24124:	eb04 0385 	add.w	r3, r4, r5, lsl #2
   24128:	3501      	adds	r5, #1
   2412a:	615e      	str	r6, [r3, #20]
   2412c:	6125      	str	r5, [r4, #16]
   2412e:	4620      	mov	r0, r4
   24130:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00024134 <__s2b>:
__s2b():
   24134:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   24138:	4614      	mov	r4, r2
   2413a:	4698      	mov	r8, r3
   2413c:	f103 0208 	add.w	r2, r3, #8
   24140:	2309      	movs	r3, #9
   24142:	460d      	mov	r5, r1
   24144:	fb92 f2f3 	sdiv	r2, r2, r3
   24148:	4606      	mov	r6, r0
   2414a:	2301      	movs	r3, #1
   2414c:	2100      	movs	r1, #0
   2414e:	429a      	cmp	r2, r3
   24150:	dd02      	ble.n	24158 <__s2b+0x24>
   24152:	005b      	lsls	r3, r3, #1
   24154:	3101      	adds	r1, #1
   24156:	e7fa      	b.n	2414e <__s2b+0x1a>
   24158:	4630      	mov	r0, r6
   2415a:	f7ff ff65 	bl	24028 <_Balloc>
   2415e:	9b08      	ldr	r3, [sp, #32]
   24160:	2c09      	cmp	r4, #9
   24162:	6143      	str	r3, [r0, #20]
   24164:	f04f 0301 	mov.w	r3, #1
   24168:	4601      	mov	r1, r0
   2416a:	6103      	str	r3, [r0, #16]
   2416c:	dd11      	ble.n	24192 <__s2b+0x5e>
   2416e:	f105 0909 	add.w	r9, r5, #9
   24172:	464f      	mov	r7, r9
   24174:	4425      	add	r5, r4
   24176:	f817 3b01 	ldrb.w	r3, [r7], #1
   2417a:	4630      	mov	r0, r6
   2417c:	220a      	movs	r2, #10
   2417e:	3b30      	subs	r3, #48	; 0x30
   24180:	f7ff ff9e 	bl	240c0 <__multadd>
   24184:	42af      	cmp	r7, r5
   24186:	4601      	mov	r1, r0
   24188:	d1f5      	bne.n	24176 <__s2b+0x42>
   2418a:	eb09 0704 	add.w	r7, r9, r4
   2418e:	3f08      	subs	r7, #8
   24190:	e002      	b.n	24198 <__s2b+0x64>
   24192:	f105 070a 	add.w	r7, r5, #10
   24196:	2409      	movs	r4, #9
   24198:	4625      	mov	r5, r4
   2419a:	4545      	cmp	r5, r8
   2419c:	da09      	bge.n	241b2 <__s2b+0x7e>
   2419e:	1b3b      	subs	r3, r7, r4
   241a0:	5d5b      	ldrb	r3, [r3, r5]
   241a2:	4630      	mov	r0, r6
   241a4:	220a      	movs	r2, #10
   241a6:	3b30      	subs	r3, #48	; 0x30
   241a8:	f7ff ff8a 	bl	240c0 <__multadd>
   241ac:	3501      	adds	r5, #1
   241ae:	4601      	mov	r1, r0
   241b0:	e7f3      	b.n	2419a <__s2b+0x66>
   241b2:	4608      	mov	r0, r1
   241b4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

000241b8 <__hi0bits>:
__hi0bits():
   241b8:	0c03      	lsrs	r3, r0, #16
   241ba:	041b      	lsls	r3, r3, #16
   241bc:	b913      	cbnz	r3, 241c4 <__hi0bits+0xc>
   241be:	0400      	lsls	r0, r0, #16
   241c0:	2310      	movs	r3, #16
   241c2:	e000      	b.n	241c6 <__hi0bits+0xe>
   241c4:	2300      	movs	r3, #0
   241c6:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
   241ca:	bf04      	itt	eq
   241cc:	0200      	lsleq	r0, r0, #8
   241ce:	3308      	addeq	r3, #8
   241d0:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
   241d4:	bf04      	itt	eq
   241d6:	0100      	lsleq	r0, r0, #4
   241d8:	3304      	addeq	r3, #4
   241da:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
   241de:	bf04      	itt	eq
   241e0:	0080      	lsleq	r0, r0, #2
   241e2:	3302      	addeq	r3, #2
   241e4:	2800      	cmp	r0, #0
   241e6:	db03      	blt.n	241f0 <__hi0bits+0x38>
   241e8:	0042      	lsls	r2, r0, #1
   241ea:	d503      	bpl.n	241f4 <__hi0bits+0x3c>
   241ec:	1c58      	adds	r0, r3, #1
   241ee:	4770      	bx	lr
   241f0:	4618      	mov	r0, r3
   241f2:	4770      	bx	lr
   241f4:	2020      	movs	r0, #32
   241f6:	4770      	bx	lr

000241f8 <__lo0bits>:
__lo0bits():
   241f8:	6803      	ldr	r3, [r0, #0]
   241fa:	f013 0207 	ands.w	r2, r3, #7
   241fe:	d00b      	beq.n	24218 <__lo0bits+0x20>
   24200:	07d9      	lsls	r1, r3, #31
   24202:	d422      	bmi.n	2424a <__lo0bits+0x52>
   24204:	079a      	lsls	r2, r3, #30
   24206:	d503      	bpl.n	24210 <__lo0bits+0x18>
   24208:	085b      	lsrs	r3, r3, #1
   2420a:	6003      	str	r3, [r0, #0]
   2420c:	2001      	movs	r0, #1
   2420e:	4770      	bx	lr
   24210:	089b      	lsrs	r3, r3, #2
   24212:	6003      	str	r3, [r0, #0]
   24214:	2002      	movs	r0, #2
   24216:	4770      	bx	lr
   24218:	b299      	uxth	r1, r3
   2421a:	b909      	cbnz	r1, 24220 <__lo0bits+0x28>
   2421c:	0c1b      	lsrs	r3, r3, #16
   2421e:	2210      	movs	r2, #16
   24220:	f013 0fff 	tst.w	r3, #255	; 0xff
   24224:	bf04      	itt	eq
   24226:	0a1b      	lsreq	r3, r3, #8
   24228:	3208      	addeq	r2, #8
   2422a:	0719      	lsls	r1, r3, #28
   2422c:	bf04      	itt	eq
   2422e:	091b      	lsreq	r3, r3, #4
   24230:	3204      	addeq	r2, #4
   24232:	0799      	lsls	r1, r3, #30
   24234:	bf04      	itt	eq
   24236:	089b      	lsreq	r3, r3, #2
   24238:	3202      	addeq	r2, #2
   2423a:	07d9      	lsls	r1, r3, #31
   2423c:	d402      	bmi.n	24244 <__lo0bits+0x4c>
   2423e:	085b      	lsrs	r3, r3, #1
   24240:	d005      	beq.n	2424e <__lo0bits+0x56>
   24242:	3201      	adds	r2, #1
   24244:	6003      	str	r3, [r0, #0]
   24246:	4610      	mov	r0, r2
   24248:	4770      	bx	lr
   2424a:	2000      	movs	r0, #0
   2424c:	4770      	bx	lr
   2424e:	2020      	movs	r0, #32
   24250:	4770      	bx	lr

00024252 <__i2b>:
__i2b():
   24252:	b510      	push	{r4, lr}
   24254:	460c      	mov	r4, r1
   24256:	2101      	movs	r1, #1
   24258:	f7ff fee6 	bl	24028 <_Balloc>
   2425c:	2201      	movs	r2, #1
   2425e:	6144      	str	r4, [r0, #20]
   24260:	6102      	str	r2, [r0, #16]
   24262:	bd10      	pop	{r4, pc}

00024264 <__multiply>:
__multiply():
   24264:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24268:	4616      	mov	r6, r2
   2426a:	6933      	ldr	r3, [r6, #16]
   2426c:	690a      	ldr	r2, [r1, #16]
   2426e:	b085      	sub	sp, #20
   24270:	429a      	cmp	r2, r3
   24272:	460d      	mov	r5, r1
   24274:	da01      	bge.n	2427a <__multiply+0x16>
   24276:	4635      	mov	r5, r6
   24278:	460e      	mov	r6, r1
   2427a:	f8d5 8010 	ldr.w	r8, [r5, #16]
   2427e:	6937      	ldr	r7, [r6, #16]
   24280:	68ab      	ldr	r3, [r5, #8]
   24282:	6869      	ldr	r1, [r5, #4]
   24284:	eb08 0407 	add.w	r4, r8, r7
   24288:	429c      	cmp	r4, r3
   2428a:	bfc8      	it	gt
   2428c:	3101      	addgt	r1, #1
   2428e:	f7ff fecb 	bl	24028 <_Balloc>
   24292:	f100 0314 	add.w	r3, r0, #20
   24296:	eb03 0184 	add.w	r1, r3, r4, lsl #2
   2429a:	9101      	str	r1, [sp, #4]
   2429c:	461a      	mov	r2, r3
   2429e:	f8dd a004 	ldr.w	sl, [sp, #4]
   242a2:	4552      	cmp	r2, sl
   242a4:	d203      	bcs.n	242ae <__multiply+0x4a>
   242a6:	2100      	movs	r1, #0
   242a8:	f842 1b04 	str.w	r1, [r2], #4
   242ac:	e7f7      	b.n	2429e <__multiply+0x3a>
   242ae:	f105 0114 	add.w	r1, r5, #20
   242b2:	f106 0214 	add.w	r2, r6, #20
   242b6:	eb01 0888 	add.w	r8, r1, r8, lsl #2
   242ba:	eb02 0787 	add.w	r7, r2, r7, lsl #2
   242be:	f8cd 8008 	str.w	r8, [sp, #8]
   242c2:	9703      	str	r7, [sp, #12]
   242c4:	9e03      	ldr	r6, [sp, #12]
   242c6:	4615      	mov	r5, r2
   242c8:	42b2      	cmp	r2, r6
   242ca:	d256      	bcs.n	2437a <__multiply+0x116>
   242cc:	f8b5 c000 	ldrh.w	ip, [r5]
   242d0:	3204      	adds	r2, #4
   242d2:	f1bc 0f00 	cmp.w	ip, #0
   242d6:	d025      	beq.n	24324 <__multiply+0xc0>
   242d8:	460f      	mov	r7, r1
   242da:	461d      	mov	r5, r3
   242dc:	2600      	movs	r6, #0
   242de:	f857 9b04 	ldr.w	r9, [r7], #4
   242e2:	f8d5 8000 	ldr.w	r8, [r5]
   242e6:	fa1f fb89 	uxth.w	fp, r9
   242ea:	fa1f fa88 	uxth.w	sl, r8
   242ee:	fb0c aa0b 	mla	sl, ip, fp, sl
   242f2:	ea4f 4919 	mov.w	r9, r9, lsr #16
   242f6:	ea4f 4818 	mov.w	r8, r8, lsr #16
   242fa:	fb0c 8809 	mla	r8, ip, r9, r8
   242fe:	44b2      	add	sl, r6
   24300:	eb08 481a 	add.w	r8, r8, sl, lsr #16
   24304:	fa1f fa8a 	uxth.w	sl, sl
   24308:	ea4a 4a08 	orr.w	sl, sl, r8, lsl #16
   2430c:	ea4f 4618 	mov.w	r6, r8, lsr #16
   24310:	f8dd 8008 	ldr.w	r8, [sp, #8]
   24314:	46ab      	mov	fp, r5
   24316:	45b8      	cmp	r8, r7
   24318:	f84b ab04 	str.w	sl, [fp], #4
   2431c:	d901      	bls.n	24322 <__multiply+0xbe>
   2431e:	465d      	mov	r5, fp
   24320:	e7dd      	b.n	242de <__multiply+0x7a>
   24322:	606e      	str	r6, [r5, #4]
   24324:	f832 8c02 	ldrh.w	r8, [r2, #-2]
   24328:	f1b8 0f00 	cmp.w	r8, #0
   2432c:	d023      	beq.n	24376 <__multiply+0x112>
   2432e:	681e      	ldr	r6, [r3, #0]
   24330:	460f      	mov	r7, r1
   24332:	461d      	mov	r5, r3
   24334:	f04f 0900 	mov.w	r9, #0
   24338:	f8b7 a000 	ldrh.w	sl, [r7]
   2433c:	f8b5 c002 	ldrh.w	ip, [r5, #2]
   24340:	b2b6      	uxth	r6, r6
   24342:	fb08 cc0a 	mla	ip, r8, sl, ip
   24346:	44e1      	add	r9, ip
   24348:	ea46 4609 	orr.w	r6, r6, r9, lsl #16
   2434c:	46ac      	mov	ip, r5
   2434e:	f84c 6b04 	str.w	r6, [ip], #4
   24352:	f857 6b04 	ldr.w	r6, [r7], #4
   24356:	f8b5 a004 	ldrh.w	sl, [r5, #4]
   2435a:	0c36      	lsrs	r6, r6, #16
   2435c:	fb08 a606 	mla	r6, r8, r6, sl
   24360:	f8dd a008 	ldr.w	sl, [sp, #8]
   24364:	eb06 4619 	add.w	r6, r6, r9, lsr #16
   24368:	4557      	cmp	r7, sl
   2436a:	ea4f 4916 	mov.w	r9, r6, lsr #16
   2436e:	d201      	bcs.n	24374 <__multiply+0x110>
   24370:	4665      	mov	r5, ip
   24372:	e7e1      	b.n	24338 <__multiply+0xd4>
   24374:	606e      	str	r6, [r5, #4]
   24376:	3304      	adds	r3, #4
   24378:	e7a4      	b.n	242c4 <__multiply+0x60>
   2437a:	9b01      	ldr	r3, [sp, #4]
   2437c:	2c00      	cmp	r4, #0
   2437e:	dc03      	bgt.n	24388 <__multiply+0x124>
   24380:	6104      	str	r4, [r0, #16]
   24382:	b005      	add	sp, #20
   24384:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24388:	f853 2d04 	ldr.w	r2, [r3, #-4]!
   2438c:	2a00      	cmp	r2, #0
   2438e:	d1f7      	bne.n	24380 <__multiply+0x11c>
   24390:	3c01      	subs	r4, #1
   24392:	e7f3      	b.n	2437c <__multiply+0x118>

00024394 <__pow5mult>:
__pow5mult():
   24394:	f012 0303 	ands.w	r3, r2, #3
   24398:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   2439c:	4605      	mov	r5, r0
   2439e:	460e      	mov	r6, r1
   243a0:	4617      	mov	r7, r2
   243a2:	d007      	beq.n	243b4 <__pow5mult+0x20>
   243a4:	4a21      	ldr	r2, [pc, #132]	; (2442c <__pow5mult+0x98>)
   243a6:	3b01      	subs	r3, #1
   243a8:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
   243ac:	2300      	movs	r3, #0
   243ae:	f7ff fe87 	bl	240c0 <__multadd>
   243b2:	4606      	mov	r6, r0
   243b4:	10bf      	asrs	r7, r7, #2
   243b6:	d035      	beq.n	24424 <__pow5mult+0x90>
   243b8:	6a6c      	ldr	r4, [r5, #36]	; 0x24
   243ba:	b93c      	cbnz	r4, 243cc <__pow5mult+0x38>
   243bc:	2010      	movs	r0, #16
   243be:	f7fa fbfd 	bl	1ebbc <malloc>
   243c2:	6268      	str	r0, [r5, #36]	; 0x24
   243c4:	6044      	str	r4, [r0, #4]
   243c6:	6084      	str	r4, [r0, #8]
   243c8:	6004      	str	r4, [r0, #0]
   243ca:	60c4      	str	r4, [r0, #12]
   243cc:	f8d5 8024 	ldr.w	r8, [r5, #36]	; 0x24
   243d0:	f8d8 4008 	ldr.w	r4, [r8, #8]
   243d4:	b97c      	cbnz	r4, 243f6 <__pow5mult+0x62>
   243d6:	4628      	mov	r0, r5
   243d8:	f240 2171 	movw	r1, #625	; 0x271
   243dc:	f7ff ff39 	bl	24252 <__i2b>
   243e0:	2300      	movs	r3, #0
   243e2:	f8c8 0008 	str.w	r0, [r8, #8]
   243e6:	4604      	mov	r4, r0
   243e8:	6003      	str	r3, [r0, #0]
   243ea:	e004      	b.n	243f6 <__pow5mult+0x62>
   243ec:	107f      	asrs	r7, r7, #1
   243ee:	d019      	beq.n	24424 <__pow5mult+0x90>
   243f0:	6820      	ldr	r0, [r4, #0]
   243f2:	b170      	cbz	r0, 24412 <__pow5mult+0x7e>
   243f4:	4604      	mov	r4, r0
   243f6:	07fb      	lsls	r3, r7, #31
   243f8:	d5f8      	bpl.n	243ec <__pow5mult+0x58>
   243fa:	4631      	mov	r1, r6
   243fc:	4622      	mov	r2, r4
   243fe:	4628      	mov	r0, r5
   24400:	f7ff ff30 	bl	24264 <__multiply>
   24404:	4631      	mov	r1, r6
   24406:	4680      	mov	r8, r0
   24408:	4628      	mov	r0, r5
   2440a:	f7ff fe42 	bl	24092 <_Bfree>
   2440e:	4646      	mov	r6, r8
   24410:	e7ec      	b.n	243ec <__pow5mult+0x58>
   24412:	4628      	mov	r0, r5
   24414:	4621      	mov	r1, r4
   24416:	4622      	mov	r2, r4
   24418:	f7ff ff24 	bl	24264 <__multiply>
   2441c:	2300      	movs	r3, #0
   2441e:	6020      	str	r0, [r4, #0]
   24420:	6003      	str	r3, [r0, #0]
   24422:	e7e7      	b.n	243f4 <__pow5mult+0x60>
   24424:	4630      	mov	r0, r6
   24426:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   2442a:	bf00      	nop
   2442c:	00027ce8 	.word	0x00027ce8

00024430 <__lshift>:
__lshift():
   24430:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   24434:	460c      	mov	r4, r1
   24436:	6923      	ldr	r3, [r4, #16]
   24438:	ea4f 1a62 	mov.w	sl, r2, asr #5
   2443c:	eb0a 0903 	add.w	r9, sl, r3
   24440:	6849      	ldr	r1, [r1, #4]
   24442:	68a3      	ldr	r3, [r4, #8]
   24444:	4680      	mov	r8, r0
   24446:	4615      	mov	r5, r2
   24448:	f109 0701 	add.w	r7, r9, #1
   2444c:	429f      	cmp	r7, r3
   2444e:	dd02      	ble.n	24456 <__lshift+0x26>
   24450:	3101      	adds	r1, #1
   24452:	005b      	lsls	r3, r3, #1
   24454:	e7fa      	b.n	2444c <__lshift+0x1c>
   24456:	4640      	mov	r0, r8
   24458:	f7ff fde6 	bl	24028 <_Balloc>
   2445c:	2300      	movs	r3, #0
   2445e:	4606      	mov	r6, r0
   24460:	f100 0214 	add.w	r2, r0, #20
   24464:	4553      	cmp	r3, sl
   24466:	da04      	bge.n	24472 <__lshift+0x42>
   24468:	2100      	movs	r1, #0
   2446a:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
   2446e:	3301      	adds	r3, #1
   24470:	e7f8      	b.n	24464 <__lshift+0x34>
   24472:	6920      	ldr	r0, [r4, #16]
   24474:	ea2a 71ea 	bic.w	r1, sl, sl, asr #31
   24478:	f104 0314 	add.w	r3, r4, #20
   2447c:	f015 0c1f 	ands.w	ip, r5, #31
   24480:	eb02 0181 	add.w	r1, r2, r1, lsl #2
   24484:	eb03 0e80 	add.w	lr, r3, r0, lsl #2
   24488:	d016      	beq.n	244b8 <__lshift+0x88>
   2448a:	f1cc 0a20 	rsb	sl, ip, #32
   2448e:	2500      	movs	r5, #0
   24490:	6818      	ldr	r0, [r3, #0]
   24492:	460a      	mov	r2, r1
   24494:	fa00 f00c 	lsl.w	r0, r0, ip
   24498:	4305      	orrs	r5, r0
   2449a:	f842 5b04 	str.w	r5, [r2], #4
   2449e:	f853 5b04 	ldr.w	r5, [r3], #4
   244a2:	4573      	cmp	r3, lr
   244a4:	fa25 f50a 	lsr.w	r5, r5, sl
   244a8:	d201      	bcs.n	244ae <__lshift+0x7e>
   244aa:	4611      	mov	r1, r2
   244ac:	e7f0      	b.n	24490 <__lshift+0x60>
   244ae:	604d      	str	r5, [r1, #4]
   244b0:	b145      	cbz	r5, 244c4 <__lshift+0x94>
   244b2:	f109 0702 	add.w	r7, r9, #2
   244b6:	e005      	b.n	244c4 <__lshift+0x94>
   244b8:	f853 2b04 	ldr.w	r2, [r3], #4
   244bc:	4573      	cmp	r3, lr
   244be:	f841 2b04 	str.w	r2, [r1], #4
   244c2:	d3f9      	bcc.n	244b8 <__lshift+0x88>
   244c4:	3f01      	subs	r7, #1
   244c6:	4640      	mov	r0, r8
   244c8:	6137      	str	r7, [r6, #16]
   244ca:	4621      	mov	r1, r4
   244cc:	f7ff fde1 	bl	24092 <_Bfree>
   244d0:	4630      	mov	r0, r6
   244d2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

000244d6 <__mcmp>:
__mcmp():
   244d6:	6902      	ldr	r2, [r0, #16]
   244d8:	690b      	ldr	r3, [r1, #16]
   244da:	b510      	push	{r4, lr}
   244dc:	1ad2      	subs	r2, r2, r3
   244de:	d113      	bne.n	24508 <__mcmp+0x32>
   244e0:	009c      	lsls	r4, r3, #2
   244e2:	3014      	adds	r0, #20
   244e4:	f101 0214 	add.w	r2, r1, #20
   244e8:	1903      	adds	r3, r0, r4
   244ea:	4422      	add	r2, r4
   244ec:	f853 4d04 	ldr.w	r4, [r3, #-4]!
   244f0:	f852 1d04 	ldr.w	r1, [r2, #-4]!
   244f4:	428c      	cmp	r4, r1
   244f6:	d003      	beq.n	24500 <__mcmp+0x2a>
   244f8:	d208      	bcs.n	2450c <__mcmp+0x36>
   244fa:	f04f 30ff 	mov.w	r0, #4294967295
   244fe:	bd10      	pop	{r4, pc}
   24500:	4298      	cmp	r0, r3
   24502:	d3f3      	bcc.n	244ec <__mcmp+0x16>
   24504:	2000      	movs	r0, #0
   24506:	bd10      	pop	{r4, pc}
   24508:	4610      	mov	r0, r2
   2450a:	bd10      	pop	{r4, pc}
   2450c:	2001      	movs	r0, #1
   2450e:	bd10      	pop	{r4, pc}

00024510 <__mdiff>:
__mdiff():
   24510:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   24514:	4606      	mov	r6, r0
   24516:	460c      	mov	r4, r1
   24518:	4608      	mov	r0, r1
   2451a:	4611      	mov	r1, r2
   2451c:	4615      	mov	r5, r2
   2451e:	f7ff ffda 	bl	244d6 <__mcmp>
   24522:	1e07      	subs	r7, r0, #0
   24524:	d108      	bne.n	24538 <__mdiff+0x28>
   24526:	4630      	mov	r0, r6
   24528:	4639      	mov	r1, r7
   2452a:	f7ff fd7d 	bl	24028 <_Balloc>
   2452e:	2301      	movs	r3, #1
   24530:	6103      	str	r3, [r0, #16]
   24532:	6147      	str	r7, [r0, #20]
   24534:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   24538:	db01      	blt.n	2453e <__mdiff+0x2e>
   2453a:	2700      	movs	r7, #0
   2453c:	e003      	b.n	24546 <__mdiff+0x36>
   2453e:	4623      	mov	r3, r4
   24540:	2701      	movs	r7, #1
   24542:	462c      	mov	r4, r5
   24544:	461d      	mov	r5, r3
   24546:	6861      	ldr	r1, [r4, #4]
   24548:	4630      	mov	r0, r6
   2454a:	f7ff fd6d 	bl	24028 <_Balloc>
   2454e:	6922      	ldr	r2, [r4, #16]
   24550:	692b      	ldr	r3, [r5, #16]
   24552:	3414      	adds	r4, #20
   24554:	f105 0614 	add.w	r6, r5, #20
   24558:	eb06 0a83 	add.w	sl, r6, r3, lsl #2
   2455c:	60c7      	str	r7, [r0, #12]
   2455e:	eb04 0c82 	add.w	ip, r4, r2, lsl #2
   24562:	f100 0314 	add.w	r3, r0, #20
   24566:	2100      	movs	r1, #0
   24568:	f854 7b04 	ldr.w	r7, [r4], #4
   2456c:	f856 9b04 	ldr.w	r9, [r6], #4
   24570:	fa1f f887 	uxth.w	r8, r7
   24574:	fa1f f589 	uxth.w	r5, r9
   24578:	4441      	add	r1, r8
   2457a:	ea4f 4919 	mov.w	r9, r9, lsr #16
   2457e:	ebc5 0801 	rsb	r8, r5, r1
   24582:	ebc9 4717 	rsb	r7, r9, r7, lsr #16
   24586:	eb07 4728 	add.w	r7, r7, r8, asr #16
   2458a:	fa1f f888 	uxth.w	r8, r8
   2458e:	1439      	asrs	r1, r7, #16
   24590:	45b2      	cmp	sl, r6
   24592:	ea48 4707 	orr.w	r7, r8, r7, lsl #16
   24596:	4625      	mov	r5, r4
   24598:	f843 7b04 	str.w	r7, [r3], #4
   2459c:	d8e4      	bhi.n	24568 <__mdiff+0x58>
   2459e:	4565      	cmp	r5, ip
   245a0:	d20d      	bcs.n	245be <__mdiff+0xae>
   245a2:	f855 4b04 	ldr.w	r4, [r5], #4
   245a6:	b2a6      	uxth	r6, r4
   245a8:	440e      	add	r6, r1
   245aa:	0c24      	lsrs	r4, r4, #16
   245ac:	eb04 4426 	add.w	r4, r4, r6, asr #16
   245b0:	b2b6      	uxth	r6, r6
   245b2:	1421      	asrs	r1, r4, #16
   245b4:	ea46 4404 	orr.w	r4, r6, r4, lsl #16
   245b8:	f843 4b04 	str.w	r4, [r3], #4
   245bc:	e7ef      	b.n	2459e <__mdiff+0x8e>
   245be:	f853 1d04 	ldr.w	r1, [r3, #-4]!
   245c2:	b909      	cbnz	r1, 245c8 <__mdiff+0xb8>
   245c4:	3a01      	subs	r2, #1
   245c6:	e7fa      	b.n	245be <__mdiff+0xae>
   245c8:	6102      	str	r2, [r0, #16]
   245ca:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

000245d0 <__ulp>:
__ulp():
   245d0:	4b0f      	ldr	r3, [pc, #60]	; (24610 <__ulp+0x40>)
   245d2:	400b      	ands	r3, r1
   245d4:	f1a3 7350 	sub.w	r3, r3, #54525952	; 0x3400000
   245d8:	2b00      	cmp	r3, #0
   245da:	dd01      	ble.n	245e0 <__ulp+0x10>
   245dc:	4619      	mov	r1, r3
   245de:	e009      	b.n	245f4 <__ulp+0x24>
   245e0:	425b      	negs	r3, r3
   245e2:	151b      	asrs	r3, r3, #20
   245e4:	2b13      	cmp	r3, #19
   245e6:	f04f 0100 	mov.w	r1, #0
   245ea:	dc05      	bgt.n	245f8 <__ulp+0x28>
   245ec:	f44f 2200 	mov.w	r2, #524288	; 0x80000
   245f0:	fa42 f103 	asr.w	r1, r2, r3
   245f4:	2000      	movs	r0, #0
   245f6:	4770      	bx	lr
   245f8:	2b32      	cmp	r3, #50	; 0x32
   245fa:	f04f 0201 	mov.w	r2, #1
   245fe:	bfda      	itte	le
   24600:	f1c3 0333 	rsble	r3, r3, #51	; 0x33
   24604:	fa02 f303 	lslle.w	r3, r2, r3
   24608:	4613      	movgt	r3, r2
   2460a:	4618      	mov	r0, r3
   2460c:	4770      	bx	lr
   2460e:	bf00      	nop
   24610:	7ff00000 	.word	0x7ff00000

00024614 <__b2d>:
__b2d():
   24614:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   24618:	6906      	ldr	r6, [r0, #16]
   2461a:	f100 0714 	add.w	r7, r0, #20
   2461e:	eb07 0686 	add.w	r6, r7, r6, lsl #2
   24622:	f856 4c04 	ldr.w	r4, [r6, #-4]
   24626:	4688      	mov	r8, r1
   24628:	4620      	mov	r0, r4
   2462a:	f7ff fdc5 	bl	241b8 <__hi0bits>
   2462e:	f1c0 0320 	rsb	r3, r0, #32
   24632:	280a      	cmp	r0, #10
   24634:	f1a6 0504 	sub.w	r5, r6, #4
   24638:	f8c8 3000 	str.w	r3, [r8]
   2463c:	dc14      	bgt.n	24668 <__b2d+0x54>
   2463e:	42bd      	cmp	r5, r7
   24640:	f1c0 010b 	rsb	r1, r0, #11
   24644:	bf88      	it	hi
   24646:	f856 5c08 	ldrhi.w	r5, [r6, #-8]
   2464a:	fa24 fc01 	lsr.w	ip, r4, r1
   2464e:	bf98      	it	ls
   24650:	2500      	movls	r5, #0
   24652:	3015      	adds	r0, #21
   24654:	fa25 f101 	lsr.w	r1, r5, r1
   24658:	4084      	lsls	r4, r0
   2465a:	f04c 537f 	orr.w	r3, ip, #1069547520	; 0x3fc00000
   2465e:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
   24662:	ea41 0204 	orr.w	r2, r1, r4
   24666:	e024      	b.n	246b2 <__b2d+0x9e>
   24668:	42bd      	cmp	r5, r7
   2466a:	bf86      	itte	hi
   2466c:	f1a6 0508 	subhi.w	r5, r6, #8
   24670:	f856 1c08 	ldrhi.w	r1, [r6, #-8]
   24674:	2100      	movls	r1, #0
   24676:	f1b0 060b 	subs.w	r6, r0, #11
   2467a:	d015      	beq.n	246a8 <__b2d+0x94>
   2467c:	40b4      	lsls	r4, r6
   2467e:	f1c0 002b 	rsb	r0, r0, #43	; 0x2b
   24682:	fa21 fc00 	lsr.w	ip, r1, r0
   24686:	f044 547f 	orr.w	r4, r4, #1069547520	; 0x3fc00000
   2468a:	f444 1440 	orr.w	r4, r4, #3145728	; 0x300000
   2468e:	42bd      	cmp	r5, r7
   24690:	ea44 030c 	orr.w	r3, r4, ip
   24694:	bf8c      	ite	hi
   24696:	f855 4c04 	ldrhi.w	r4, [r5, #-4]
   2469a:	2400      	movls	r4, #0
   2469c:	fa24 f000 	lsr.w	r0, r4, r0
   246a0:	40b1      	lsls	r1, r6
   246a2:	ea40 0201 	orr.w	r2, r0, r1
   246a6:	e004      	b.n	246b2 <__b2d+0x9e>
   246a8:	f044 537f 	orr.w	r3, r4, #1069547520	; 0x3fc00000
   246ac:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
   246b0:	460a      	mov	r2, r1
   246b2:	4610      	mov	r0, r2
   246b4:	4619      	mov	r1, r3
   246b6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

000246ba <__d2b>:
__d2b():
   246ba:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   246be:	2101      	movs	r1, #1
   246c0:	461d      	mov	r5, r3
   246c2:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
   246c6:	f8dd 802c 	ldr.w	r8, [sp, #44]	; 0x2c
   246ca:	4614      	mov	r4, r2
   246cc:	f7ff fcac 	bl	24028 <_Balloc>
   246d0:	f3c5 570a 	ubfx	r7, r5, #20, #11
   246d4:	4606      	mov	r6, r0
   246d6:	f3c5 0313 	ubfx	r3, r5, #0, #20
   246da:	b10f      	cbz	r7, 246e0 <__d2b+0x26>
   246dc:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   246e0:	9301      	str	r3, [sp, #4]
   246e2:	b1d4      	cbz	r4, 2471a <__d2b+0x60>
   246e4:	a802      	add	r0, sp, #8
   246e6:	f840 4d08 	str.w	r4, [r0, #-8]!
   246ea:	4668      	mov	r0, sp
   246ec:	f7ff fd84 	bl	241f8 <__lo0bits>
   246f0:	9b00      	ldr	r3, [sp, #0]
   246f2:	b148      	cbz	r0, 24708 <__d2b+0x4e>
   246f4:	9a01      	ldr	r2, [sp, #4]
   246f6:	f1c0 0120 	rsb	r1, r0, #32
   246fa:	fa02 f101 	lsl.w	r1, r2, r1
   246fe:	40c2      	lsrs	r2, r0
   24700:	430b      	orrs	r3, r1
   24702:	6173      	str	r3, [r6, #20]
   24704:	9201      	str	r2, [sp, #4]
   24706:	e000      	b.n	2470a <__d2b+0x50>
   24708:	6173      	str	r3, [r6, #20]
   2470a:	9b01      	ldr	r3, [sp, #4]
   2470c:	2b00      	cmp	r3, #0
   2470e:	bf0c      	ite	eq
   24710:	2401      	moveq	r4, #1
   24712:	2402      	movne	r4, #2
   24714:	61b3      	str	r3, [r6, #24]
   24716:	6134      	str	r4, [r6, #16]
   24718:	e007      	b.n	2472a <__d2b+0x70>
   2471a:	a801      	add	r0, sp, #4
   2471c:	f7ff fd6c 	bl	241f8 <__lo0bits>
   24720:	9b01      	ldr	r3, [sp, #4]
   24722:	2401      	movs	r4, #1
   24724:	6173      	str	r3, [r6, #20]
   24726:	6134      	str	r4, [r6, #16]
   24728:	3020      	adds	r0, #32
   2472a:	b13f      	cbz	r7, 2473c <__d2b+0x82>
   2472c:	f2a7 4733 	subw	r7, r7, #1075	; 0x433
   24730:	4407      	add	r7, r0
   24732:	f8c9 7000 	str.w	r7, [r9]
   24736:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
   2473a:	e00a      	b.n	24752 <__d2b+0x98>
   2473c:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
   24740:	eb06 0384 	add.w	r3, r6, r4, lsl #2
   24744:	f8c9 0000 	str.w	r0, [r9]
   24748:	6918      	ldr	r0, [r3, #16]
   2474a:	f7ff fd35 	bl	241b8 <__hi0bits>
   2474e:	ebc0 1044 	rsb	r0, r0, r4, lsl #5
   24752:	f8c8 0000 	str.w	r0, [r8]
   24756:	4630      	mov	r0, r6
   24758:	b003      	add	sp, #12
   2475a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0002475e <__ratio>:
__ratio():
   2475e:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
   24762:	460e      	mov	r6, r1
   24764:	4669      	mov	r1, sp
   24766:	4680      	mov	r8, r0
   24768:	f7ff ff54 	bl	24614 <__b2d>
   2476c:	460d      	mov	r5, r1
   2476e:	4604      	mov	r4, r0
   24770:	a901      	add	r1, sp, #4
   24772:	4630      	mov	r0, r6
   24774:	f7ff ff4e 	bl	24614 <__b2d>
   24778:	9f00      	ldr	r7, [sp, #0]
   2477a:	460b      	mov	r3, r1
   2477c:	9901      	ldr	r1, [sp, #4]
   2477e:	4602      	mov	r2, r0
   24780:	1a7f      	subs	r7, r7, r1
   24782:	f8d8 0010 	ldr.w	r0, [r8, #16]
   24786:	6931      	ldr	r1, [r6, #16]
   24788:	1a41      	subs	r1, r0, r1
   2478a:	eb07 1141 	add.w	r1, r7, r1, lsl #5
   2478e:	2900      	cmp	r1, #0
   24790:	bfcc      	ite	gt
   24792:	eb05 5501 	addgt.w	r5, r5, r1, lsl #20
   24796:	eba3 5301 	suble.w	r3, r3, r1, lsl #20
   2479a:	4620      	mov	r0, r4
   2479c:	4629      	mov	r1, r5
   2479e:	f7f9 f975 	bl	1da8c <__aeabi_ddiv>
   247a2:	b002      	add	sp, #8
   247a4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

000247a8 <__copybits>:
__copybits():
   247a8:	b510      	push	{r4, lr}
   247aa:	3901      	subs	r1, #1
   247ac:	f102 0314 	add.w	r3, r2, #20
   247b0:	1149      	asrs	r1, r1, #5
   247b2:	6912      	ldr	r2, [r2, #16]
   247b4:	3101      	adds	r1, #1
   247b6:	eb00 0181 	add.w	r1, r0, r1, lsl #2
   247ba:	eb03 0282 	add.w	r2, r3, r2, lsl #2
   247be:	4293      	cmp	r3, r2
   247c0:	d204      	bcs.n	247cc <__copybits+0x24>
   247c2:	f853 4b04 	ldr.w	r4, [r3], #4
   247c6:	f840 4b04 	str.w	r4, [r0], #4
   247ca:	e7f8      	b.n	247be <__copybits+0x16>
   247cc:	4288      	cmp	r0, r1
   247ce:	d203      	bcs.n	247d8 <__copybits+0x30>
   247d0:	2300      	movs	r3, #0
   247d2:	f840 3b04 	str.w	r3, [r0], #4
   247d6:	e7f9      	b.n	247cc <__copybits+0x24>
   247d8:	bd10      	pop	{r4, pc}

000247da <__any_on>:
__any_on():
   247da:	f100 0214 	add.w	r2, r0, #20
   247de:	6900      	ldr	r0, [r0, #16]
   247e0:	114b      	asrs	r3, r1, #5
   247e2:	4283      	cmp	r3, r0
   247e4:	b510      	push	{r4, lr}
   247e6:	dc0c      	bgt.n	24802 <__any_on+0x28>
   247e8:	da0c      	bge.n	24804 <__any_on+0x2a>
   247ea:	f011 011f 	ands.w	r1, r1, #31
   247ee:	d009      	beq.n	24804 <__any_on+0x2a>
   247f0:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
   247f4:	fa20 f401 	lsr.w	r4, r0, r1
   247f8:	fa04 f101 	lsl.w	r1, r4, r1
   247fc:	4281      	cmp	r1, r0
   247fe:	d10e      	bne.n	2481e <__any_on+0x44>
   24800:	e000      	b.n	24804 <__any_on+0x2a>
   24802:	4603      	mov	r3, r0
   24804:	eb02 0383 	add.w	r3, r2, r3, lsl #2
   24808:	4293      	cmp	r3, r2
   2480a:	4619      	mov	r1, r3
   2480c:	d905      	bls.n	2481a <__any_on+0x40>
   2480e:	f851 1c04 	ldr.w	r1, [r1, #-4]
   24812:	3b04      	subs	r3, #4
   24814:	2900      	cmp	r1, #0
   24816:	d0f7      	beq.n	24808 <__any_on+0x2e>
   24818:	e001      	b.n	2481e <__any_on+0x44>
   2481a:	2000      	movs	r0, #0
   2481c:	bd10      	pop	{r4, pc}
   2481e:	2001      	movs	r0, #1
   24820:	bd10      	pop	{r4, pc}

00024822 <_calloc_r>:
_calloc_r():
   24822:	b538      	push	{r3, r4, r5, lr}
   24824:	fb02 f401 	mul.w	r4, r2, r1
   24828:	4621      	mov	r1, r4
   2482a:	f7fa fecb 	bl	1f5c4 <_malloc_r>
   2482e:	4605      	mov	r5, r0
   24830:	b118      	cbz	r0, 2483a <_calloc_r+0x18>
   24832:	2100      	movs	r1, #0
   24834:	4622      	mov	r2, r4
   24836:	f7fa fa12 	bl	1ec5e <memset>
   2483a:	4628      	mov	r0, r5
   2483c:	bd38      	pop	{r3, r4, r5, pc}

0002483e <_realloc_r>:
_realloc_r():
   2483e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   24840:	4606      	mov	r6, r0
   24842:	4614      	mov	r4, r2
   24844:	460d      	mov	r5, r1
   24846:	b921      	cbnz	r1, 24852 <_realloc_r+0x14>
   24848:	4611      	mov	r1, r2
   2484a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
   2484e:	f7fa beb9 	b.w	1f5c4 <_malloc_r>
   24852:	b91a      	cbnz	r2, 2485c <_realloc_r+0x1e>
   24854:	f7fa fe44 	bl	1f4e0 <_free_r>
   24858:	4620      	mov	r0, r4
   2485a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   2485c:	f000 f91a 	bl	24a94 <_malloc_usable_size_r>
   24860:	42a0      	cmp	r0, r4
   24862:	d20e      	bcs.n	24882 <_realloc_r+0x44>
   24864:	4630      	mov	r0, r6
   24866:	4621      	mov	r1, r4
   24868:	f7fa feac 	bl	1f5c4 <_malloc_r>
   2486c:	4607      	mov	r7, r0
   2486e:	b150      	cbz	r0, 24886 <_realloc_r+0x48>
   24870:	4629      	mov	r1, r5
   24872:	4622      	mov	r2, r4
   24874:	f7fa f9cf 	bl	1ec16 <memcpy>
   24878:	4630      	mov	r0, r6
   2487a:	4629      	mov	r1, r5
   2487c:	f7fa fe30 	bl	1f4e0 <_free_r>
   24880:	e001      	b.n	24886 <_realloc_r+0x48>
   24882:	4628      	mov	r0, r5
   24884:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   24886:	4638      	mov	r0, r7
   24888:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0002488c <_read_r>:
_read_r():
   2488c:	b538      	push	{r3, r4, r5, lr}
   2488e:	4c07      	ldr	r4, [pc, #28]	; (248ac <_read_r+0x20>)
   24890:	4605      	mov	r5, r0
   24892:	2000      	movs	r0, #0
   24894:	6020      	str	r0, [r4, #0]
   24896:	4608      	mov	r0, r1
   24898:	4611      	mov	r1, r2
   2489a:	461a      	mov	r2, r3
   2489c:	f7eb fd7c 	bl	10398 <_read>
   248a0:	1c43      	adds	r3, r0, #1
   248a2:	d102      	bne.n	248aa <_read_r+0x1e>
   248a4:	6823      	ldr	r3, [r4, #0]
   248a6:	b103      	cbz	r3, 248aa <_read_r+0x1e>
   248a8:	602b      	str	r3, [r5, #0]
   248aa:	bd38      	pop	{r3, r4, r5, pc}
   248ac:	2007cad4 	.word	0x2007cad4

000248b0 <__fpclassifyd>:
__fpclassifyd():
   248b0:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
   248b4:	b510      	push	{r4, lr}
   248b6:	d100      	bne.n	248ba <__fpclassifyd+0xa>
   248b8:	b178      	cbz	r0, 248da <__fpclassifyd+0x2a>
   248ba:	4a0c      	ldr	r2, [pc, #48]	; (248ec <__fpclassifyd+0x3c>)
   248bc:	f5a3 1480 	sub.w	r4, r3, #1048576	; 0x100000
   248c0:	4294      	cmp	r4, r2
   248c2:	d90c      	bls.n	248de <__fpclassifyd+0x2e>
   248c4:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
   248c8:	d30b      	bcc.n	248e2 <__fpclassifyd+0x32>
   248ca:	4a09      	ldr	r2, [pc, #36]	; (248f0 <__fpclassifyd+0x40>)
   248cc:	4293      	cmp	r3, r2
   248ce:	d10a      	bne.n	248e6 <__fpclassifyd+0x36>
   248d0:	f1d0 0001 	rsbs	r0, r0, #1
   248d4:	bf38      	it	cc
   248d6:	2000      	movcc	r0, #0
   248d8:	bd10      	pop	{r4, pc}
   248da:	2002      	movs	r0, #2
   248dc:	bd10      	pop	{r4, pc}
   248de:	2004      	movs	r0, #4
   248e0:	bd10      	pop	{r4, pc}
   248e2:	2003      	movs	r0, #3
   248e4:	bd10      	pop	{r4, pc}
   248e6:	2000      	movs	r0, #0
   248e8:	bd10      	pop	{r4, pc}
   248ea:	bf00      	nop
   248ec:	7fdfffff 	.word	0x7fdfffff
   248f0:	7ff00000 	.word	0x7ff00000

000248f4 <__sccl>:
__sccl():
   248f4:	b5f0      	push	{r4, r5, r6, r7, lr}
   248f6:	780b      	ldrb	r3, [r1, #0]
   248f8:	2b5e      	cmp	r3, #94	; 0x5e
   248fa:	d002      	beq.n	24902 <__sccl+0xe>
   248fc:	1c4c      	adds	r4, r1, #1
   248fe:	2100      	movs	r1, #0
   24900:	e002      	b.n	24908 <__sccl+0x14>
   24902:	1c8c      	adds	r4, r1, #2
   24904:	784b      	ldrb	r3, [r1, #1]
   24906:	2101      	movs	r1, #1
   24908:	2200      	movs	r2, #0
   2490a:	5481      	strb	r1, [r0, r2]
   2490c:	3201      	adds	r2, #1
   2490e:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
   24912:	d1fa      	bne.n	2490a <__sccl+0x16>
   24914:	b90b      	cbnz	r3, 2491a <__sccl+0x26>
   24916:	1e65      	subs	r5, r4, #1
   24918:	e01b      	b.n	24952 <__sccl+0x5e>
   2491a:	f1c1 0701 	rsb	r7, r1, #1
   2491e:	b2fe      	uxtb	r6, r7
   24920:	54c6      	strb	r6, [r0, r3]
   24922:	1c62      	adds	r2, r4, #1
   24924:	f812 1c01 	ldrb.w	r1, [r2, #-1]
   24928:	1e55      	subs	r5, r2, #1
   2492a:	292d      	cmp	r1, #45	; 0x2d
   2492c:	4614      	mov	r4, r2
   2492e:	d004      	beq.n	2493a <__sccl+0x46>
   24930:	295d      	cmp	r1, #93	; 0x5d
   24932:	d00d      	beq.n	24950 <__sccl+0x5c>
   24934:	b169      	cbz	r1, 24952 <__sccl+0x5e>
   24936:	460b      	mov	r3, r1
   24938:	e7f1      	b.n	2491e <__sccl+0x2a>
   2493a:	7815      	ldrb	r5, [r2, #0]
   2493c:	2d5d      	cmp	r5, #93	; 0x5d
   2493e:	d0fa      	beq.n	24936 <__sccl+0x42>
   24940:	429d      	cmp	r5, r3
   24942:	dbf8      	blt.n	24936 <__sccl+0x42>
   24944:	3301      	adds	r3, #1
   24946:	42ab      	cmp	r3, r5
   24948:	54c6      	strb	r6, [r0, r3]
   2494a:	dbfb      	blt.n	24944 <__sccl+0x50>
   2494c:	3202      	adds	r2, #2
   2494e:	e7e9      	b.n	24924 <__sccl+0x30>
   24950:	4615      	mov	r5, r2
   24952:	4628      	mov	r0, r5
   24954:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

00024958 <nanf>:
nanf():
   24958:	4800      	ldr	r0, [pc, #0]	; (2495c <nanf+0x4>)
   2495a:	4770      	bx	lr
   2495c:	7fc00000 	.word	0x7fc00000

00024960 <_strtoul_r>:
_strtoul_r():
   24960:	4684      	mov	ip, r0
   24962:	483a      	ldr	r0, [pc, #232]	; (24a4c <_strtoul_r+0xec>)
   24964:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24968:	f8d0 8000 	ldr.w	r8, [r0]
   2496c:	460e      	mov	r6, r1
   2496e:	4634      	mov	r4, r6
   24970:	f814 5b01 	ldrb.w	r5, [r4], #1
   24974:	eb08 0005 	add.w	r0, r8, r5
   24978:	7840      	ldrb	r0, [r0, #1]
   2497a:	f000 0008 	and.w	r0, r0, #8
   2497e:	f000 07ff 	and.w	r7, r0, #255	; 0xff
   24982:	b108      	cbz	r0, 24988 <_strtoul_r+0x28>
   24984:	4626      	mov	r6, r4
   24986:	e7f2      	b.n	2496e <_strtoul_r+0xe>
   24988:	2d2d      	cmp	r5, #45	; 0x2d
   2498a:	d103      	bne.n	24994 <_strtoul_r+0x34>
   2498c:	1cb4      	adds	r4, r6, #2
   2498e:	7875      	ldrb	r5, [r6, #1]
   24990:	2701      	movs	r7, #1
   24992:	e003      	b.n	2499c <_strtoul_r+0x3c>
   24994:	2d2b      	cmp	r5, #43	; 0x2b
   24996:	bf04      	itt	eq
   24998:	7875      	ldrbeq	r5, [r6, #1]
   2499a:	1cb4      	addeq	r4, r6, #2
   2499c:	f033 0010 	bics.w	r0, r3, #16
   249a0:	d10d      	bne.n	249be <_strtoul_r+0x5e>
   249a2:	2d30      	cmp	r5, #48	; 0x30
   249a4:	d108      	bne.n	249b8 <_strtoul_r+0x58>
   249a6:	7820      	ldrb	r0, [r4, #0]
   249a8:	f000 00df 	and.w	r0, r0, #223	; 0xdf
   249ac:	2858      	cmp	r0, #88	; 0x58
   249ae:	d147      	bne.n	24a40 <_strtoul_r+0xe0>
   249b0:	7865      	ldrb	r5, [r4, #1]
   249b2:	2310      	movs	r3, #16
   249b4:	3402      	adds	r4, #2
   249b6:	e002      	b.n	249be <_strtoul_r+0x5e>
   249b8:	2b00      	cmp	r3, #0
   249ba:	bf08      	it	eq
   249bc:	230a      	moveq	r3, #10
   249be:	f04f 39ff 	mov.w	r9, #4294967295
   249c2:	fbb9 f9f3 	udiv	r9, r9, r3
   249c6:	fb03 fa09 	mul.w	sl, r3, r9
   249ca:	2600      	movs	r6, #0
   249cc:	ea6f 0a0a 	mvn.w	sl, sl
   249d0:	4630      	mov	r0, r6
   249d2:	eb08 0b05 	add.w	fp, r8, r5
   249d6:	f89b b001 	ldrb.w	fp, [fp, #1]
   249da:	f01b 0f04 	tst.w	fp, #4
   249de:	d001      	beq.n	249e4 <_strtoul_r+0x84>
   249e0:	3d30      	subs	r5, #48	; 0x30
   249e2:	e00b      	b.n	249fc <_strtoul_r+0x9c>
   249e4:	f01b 0b03 	ands.w	fp, fp, #3
   249e8:	d01a      	beq.n	24a20 <_strtoul_r+0xc0>
   249ea:	f1bb 0f01 	cmp.w	fp, #1
   249ee:	bf14      	ite	ne
   249f0:	f04f 0b57 	movne.w	fp, #87	; 0x57
   249f4:	f04f 0b37 	moveq.w	fp, #55	; 0x37
   249f8:	ebcb 0505 	rsb	r5, fp, r5
   249fc:	429d      	cmp	r5, r3
   249fe:	da0f      	bge.n	24a20 <_strtoul_r+0xc0>
   24a00:	2e00      	cmp	r6, #0
   24a02:	db08      	blt.n	24a16 <_strtoul_r+0xb6>
   24a04:	4548      	cmp	r0, r9
   24a06:	d806      	bhi.n	24a16 <_strtoul_r+0xb6>
   24a08:	d101      	bne.n	24a0e <_strtoul_r+0xae>
   24a0a:	4555      	cmp	r5, sl
   24a0c:	dc03      	bgt.n	24a16 <_strtoul_r+0xb6>
   24a0e:	fb03 5000 	mla	r0, r3, r0, r5
   24a12:	2601      	movs	r6, #1
   24a14:	e001      	b.n	24a1a <_strtoul_r+0xba>
   24a16:	f04f 36ff 	mov.w	r6, #4294967295
   24a1a:	f814 5b01 	ldrb.w	r5, [r4], #1
   24a1e:	e7d8      	b.n	249d2 <_strtoul_r+0x72>
   24a20:	2e00      	cmp	r6, #0
   24a22:	da05      	bge.n	24a30 <_strtoul_r+0xd0>
   24a24:	2322      	movs	r3, #34	; 0x22
   24a26:	f8cc 3000 	str.w	r3, [ip]
   24a2a:	f04f 30ff 	mov.w	r0, #4294967295
   24a2e:	e001      	b.n	24a34 <_strtoul_r+0xd4>
   24a30:	b107      	cbz	r7, 24a34 <_strtoul_r+0xd4>
   24a32:	4240      	negs	r0, r0
   24a34:	b142      	cbz	r2, 24a48 <_strtoul_r+0xe8>
   24a36:	b106      	cbz	r6, 24a3a <_strtoul_r+0xda>
   24a38:	1e61      	subs	r1, r4, #1
   24a3a:	6011      	str	r1, [r2, #0]
   24a3c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24a40:	2b00      	cmp	r3, #0
   24a42:	bf08      	it	eq
   24a44:	2308      	moveq	r3, #8
   24a46:	e7ba      	b.n	249be <_strtoul_r+0x5e>
   24a48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24a4c:	2007c108 	.word	0x2007c108

00024a50 <_fstat_r>:
_fstat_r():
   24a50:	b538      	push	{r3, r4, r5, lr}
   24a52:	4c07      	ldr	r4, [pc, #28]	; (24a70 <_fstat_r+0x20>)
   24a54:	2300      	movs	r3, #0
   24a56:	4605      	mov	r5, r0
   24a58:	4608      	mov	r0, r1
   24a5a:	4611      	mov	r1, r2
   24a5c:	6023      	str	r3, [r4, #0]
   24a5e:	f7eb fcb2 	bl	103c6 <_fstat>
   24a62:	1c43      	adds	r3, r0, #1
   24a64:	d102      	bne.n	24a6c <_fstat_r+0x1c>
   24a66:	6823      	ldr	r3, [r4, #0]
   24a68:	b103      	cbz	r3, 24a6c <_fstat_r+0x1c>
   24a6a:	602b      	str	r3, [r5, #0]
   24a6c:	bd38      	pop	{r3, r4, r5, pc}
   24a6e:	bf00      	nop
   24a70:	2007cad4 	.word	0x2007cad4

00024a74 <_isatty_r>:
_isatty_r():
   24a74:	b538      	push	{r3, r4, r5, lr}
   24a76:	4c06      	ldr	r4, [pc, #24]	; (24a90 <_isatty_r+0x1c>)
   24a78:	2300      	movs	r3, #0
   24a7a:	4605      	mov	r5, r0
   24a7c:	4608      	mov	r0, r1
   24a7e:	6023      	str	r3, [r4, #0]
   24a80:	f7eb fca4 	bl	103cc <_isatty>
   24a84:	1c43      	adds	r3, r0, #1
   24a86:	d102      	bne.n	24a8e <_isatty_r+0x1a>
   24a88:	6823      	ldr	r3, [r4, #0]
   24a8a:	b103      	cbz	r3, 24a8e <_isatty_r+0x1a>
   24a8c:	602b      	str	r3, [r5, #0]
   24a8e:	bd38      	pop	{r3, r4, r5, pc}
   24a90:	2007cad4 	.word	0x2007cad4

00024a94 <_malloc_usable_size_r>:
_malloc_usable_size_r():
   24a94:	f851 0c04 	ldr.w	r0, [r1, #-4]
   24a98:	2800      	cmp	r0, #0
   24a9a:	da02      	bge.n	24aa2 <_malloc_usable_size_r+0xe>
   24a9c:	3904      	subs	r1, #4
   24a9e:	580b      	ldr	r3, [r1, r0]
   24aa0:	4418      	add	r0, r3
   24aa2:	3804      	subs	r0, #4
   24aa4:	4770      	bx	lr
	...

00024aa8 <__gedf2>:
__gtdf2():
   24aa8:	f04f 3cff 	mov.w	ip, #4294967295
   24aac:	e006      	b.n	24abc <__cmpdf2+0x4>
   24aae:	bf00      	nop

00024ab0 <__ledf2>:
   24ab0:	f04f 0c01 	mov.w	ip, #1
   24ab4:	e002      	b.n	24abc <__cmpdf2+0x4>
   24ab6:	bf00      	nop

00024ab8 <__cmpdf2>:
   24ab8:	f04f 0c01 	mov.w	ip, #1
   24abc:	f84d cd04 	str.w	ip, [sp, #-4]!
   24ac0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   24ac4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   24ac8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   24acc:	bf18      	it	ne
   24ace:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
   24ad2:	d01b      	beq.n	24b0c <__cmpdf2+0x54>
   24ad4:	b001      	add	sp, #4
   24ad6:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
   24ada:	bf0c      	ite	eq
   24adc:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
   24ae0:	ea91 0f03 	teqne	r1, r3
   24ae4:	bf02      	ittt	eq
   24ae6:	ea90 0f02 	teqeq	r0, r2
   24aea:	2000      	moveq	r0, #0
   24aec:	4770      	bxeq	lr
   24aee:	f110 0f00 	cmn.w	r0, #0
   24af2:	ea91 0f03 	teq	r1, r3
   24af6:	bf58      	it	pl
   24af8:	4299      	cmppl	r1, r3
   24afa:	bf08      	it	eq
   24afc:	4290      	cmpeq	r0, r2
   24afe:	bf2c      	ite	cs
   24b00:	17d8      	asrcs	r0, r3, #31
   24b02:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
   24b06:	f040 0001 	orr.w	r0, r0, #1
   24b0a:	4770      	bx	lr
   24b0c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   24b10:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   24b14:	d102      	bne.n	24b1c <__cmpdf2+0x64>
   24b16:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
   24b1a:	d107      	bne.n	24b2c <__cmpdf2+0x74>
   24b1c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   24b20:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   24b24:	d1d6      	bne.n	24ad4 <__cmpdf2+0x1c>
   24b26:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
   24b2a:	d0d3      	beq.n	24ad4 <__cmpdf2+0x1c>
   24b2c:	f85d 0b04 	ldr.w	r0, [sp], #4
   24b30:	4770      	bx	lr
__cmpdf2():
   24b32:	bf00      	nop

00024b34 <__aeabi_cdrcmple>:
__aeabi_cdrcmple():
   24b34:	4684      	mov	ip, r0
   24b36:	4610      	mov	r0, r2
   24b38:	4662      	mov	r2, ip
   24b3a:	468c      	mov	ip, r1
   24b3c:	4619      	mov	r1, r3
   24b3e:	4663      	mov	r3, ip
   24b40:	e000      	b.n	24b44 <__aeabi_cdcmpeq>
   24b42:	bf00      	nop

00024b44 <__aeabi_cdcmpeq>:
   24b44:	b501      	push	{r0, lr}
   24b46:	f7ff ffb7 	bl	24ab8 <__cmpdf2>
   24b4a:	2800      	cmp	r0, #0
   24b4c:	bf48      	it	mi
   24b4e:	f110 0f00 	cmnmi.w	r0, #0
   24b52:	bd01      	pop	{r0, pc}

00024b54 <__aeabi_dcmpeq>:
__aeabi_dcmpeq():
   24b54:	f84d ed08 	str.w	lr, [sp, #-8]!
   24b58:	f7ff fff4 	bl	24b44 <__aeabi_cdcmpeq>
   24b5c:	bf0c      	ite	eq
   24b5e:	2001      	moveq	r0, #1
   24b60:	2000      	movne	r0, #0
   24b62:	f85d fb08 	ldr.w	pc, [sp], #8
   24b66:	bf00      	nop

00024b68 <__aeabi_dcmplt>:
__aeabi_dcmplt():
   24b68:	f84d ed08 	str.w	lr, [sp, #-8]!
   24b6c:	f7ff ffea 	bl	24b44 <__aeabi_cdcmpeq>
   24b70:	bf34      	ite	cc
   24b72:	2001      	movcc	r0, #1
   24b74:	2000      	movcs	r0, #0
   24b76:	f85d fb08 	ldr.w	pc, [sp], #8
   24b7a:	bf00      	nop

00024b7c <__aeabi_dcmple>:
__aeabi_dcmple():
   24b7c:	f84d ed08 	str.w	lr, [sp, #-8]!
   24b80:	f7ff ffe0 	bl	24b44 <__aeabi_cdcmpeq>
   24b84:	bf94      	ite	ls
   24b86:	2001      	movls	r0, #1
   24b88:	2000      	movhi	r0, #0
   24b8a:	f85d fb08 	ldr.w	pc, [sp], #8
   24b8e:	bf00      	nop

00024b90 <__aeabi_dcmpge>:
__aeabi_dcmpge():
   24b90:	f84d ed08 	str.w	lr, [sp, #-8]!
   24b94:	f7ff ffce 	bl	24b34 <__aeabi_cdrcmple>
   24b98:	bf94      	ite	ls
   24b9a:	2001      	movls	r0, #1
   24b9c:	2000      	movhi	r0, #0
   24b9e:	f85d fb08 	ldr.w	pc, [sp], #8
   24ba2:	bf00      	nop

00024ba4 <__aeabi_dcmpgt>:
__aeabi_dcmpgt():
   24ba4:	f84d ed08 	str.w	lr, [sp, #-8]!
   24ba8:	f7ff ffc4 	bl	24b34 <__aeabi_cdrcmple>
   24bac:	bf34      	ite	cc
   24bae:	2001      	movcc	r0, #1
   24bb0:	2000      	movcs	r0, #0
   24bb2:	f85d fb08 	ldr.w	pc, [sp], #8
   24bb6:	bf00      	nop

00024bb8 <__aeabi_d2iz>:
__fixdfsi():
   24bb8:	ea4f 0241 	mov.w	r2, r1, lsl #1
   24bbc:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
   24bc0:	d215      	bcs.n	24bee <__aeabi_d2iz+0x36>
   24bc2:	d511      	bpl.n	24be8 <__aeabi_d2iz+0x30>
   24bc4:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
   24bc8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
   24bcc:	d912      	bls.n	24bf4 <__aeabi_d2iz+0x3c>
   24bce:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   24bd2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   24bd6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
   24bda:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   24bde:	fa23 f002 	lsr.w	r0, r3, r2
   24be2:	bf18      	it	ne
   24be4:	4240      	negne	r0, r0
   24be6:	4770      	bx	lr
   24be8:	f04f 0000 	mov.w	r0, #0
   24bec:	4770      	bx	lr
   24bee:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
   24bf2:	d105      	bne.n	24c00 <__aeabi_d2iz+0x48>
   24bf4:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
   24bf8:	bf08      	it	eq
   24bfa:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
   24bfe:	4770      	bx	lr
   24c00:	f04f 0000 	mov.w	r0, #0
   24c04:	4770      	bx	lr
   24c06:	bf00      	nop
$d():
   24c08:	78656e55 	.word	0x78656e55
   24c0c:	74636570 	.word	0x74636570
   24c10:	63206465 	.word	0x63206465
   24c14:	206c6c61 	.word	0x206c6c61
   24c18:	6b206f74 	.word	0x6b206f74
   24c1c:	286c6c69 	.word	0x286c6c69
   24c20:	6e550029 	.word	0x6e550029
   24c24:	65707865 	.word	0x65707865
   24c28:	64657463 	.word	0x64657463
   24c2c:	6c616320 	.word	0x6c616320
   24c30:	6f74206c 	.word	0x6f74206c
   24c34:	69786520 	.word	0x69786520
   24c38:	00292874 	.word	0x00292874
   24c3c:	0002680b 	.word	0x0002680b
   24c40:	000252f8 	.word	0x000252f8
   24c44:	000252fc 	.word	0x000252fc
   24c48:	00025300 	.word	0x00025300
   24c4c:	00025304 	.word	0x00025304

00024c50 <logHandler(str&, CharDev&, void*)::__FUNCTION__>:
   24c50:	48676f6c 6c646e61 25007265 20733031     logHandler.%10s 
   24c60:	20617453 53207250 6b636174 55504320     Sta Pr Stack CPU
   24c70:	20202525 20202020 20202020 656d6954     %%          Time
   24c80:	614e000a 2500656d 20733031 25207325     ..Name.%10s %s %
   24c90:	25207532 25207535 25207534 20753031     2u %5u %4u %10u 
   24ca0:	000a7375 73303125 2d2d2d20 202d2d20     us..%10s --- -- 
   24cb0:	2d2d2d2d 3425202d 31252075 75207530     ----- %4u %10u u
   24cc0:	28000a53 7265766f 64616568 2a2a0029     S..(overhead).**
   24cd0:	52415720 474e494e 6e4f203a 7220796c      WARNING: Only r
   24ce0:	726f7065 20646574 73726966 75252074     eported first %u
   24cf0:	73617420 000a736b 00746573 20732a25      tasks..set.%*s 
   24d00:	25207525 75252075 20752520 25207525     %u %u %u %u %u %
   24d10:	75252075 756c6600 4c006873 7328676f     u %u.flush.Log(s
   24d20:	61682029 62206576 206e6565 73756c66     ) have been flus
   24d30:	00646568 00776172 4c2f2e2e 70415f35     hed.raw.../L5_Ap
   24d40:	63696c70 6f697461 6f732f6e 65637275     plication/source
   24d50:	646d632f 6e61685f 72656c64 61682f73     /cmd_handlers/ha
   24d60:	656c646e 632e7372 4c007070 6567676f     ndlers.cpp.Logge
   24d70:	7c203a64 0a7c7325 72724500 2520726f     d: |%s|..Error %
   24d80:	6f632075 6e697970 257c2067 2d207c73     u copying |%s| -
   24d90:	257c203e 000a7c73 696e6946 64656873     > |%s|..Finished
   24da0:	52202021 3a646165 20752520 732f624b     !  Read: %u Kb/s
   24db0:	202c6365 74697257 25203a65 624b2075     ec, Write: %u Kb
   24dc0:	6365732f 6e2d000a 6972706f 5000746e     /sec..-noprint.P
   24dd0:	73736572 6b206120 74207965 7270206f     ress a key to pr
   24de0:	20746e69 20656e6f 66667562 61207265     int one buffer a
   24df0:	20612074 656d6974 0a2e2e2e 69614600     t a time.....Fai
   24e00:	2064656c 6f206f74 3a6e6570 0a732520     led to open: %s.
   24e10:	65520a00 25206461 79622064 20736574     ..Read %d bytes 
   24e20:	64252040 2f624b20 00636573 49003a30     @ %d Kb/sec.0:.I
   24e30:	6c61766e 64206469 63657269 79726f74     nvalid directory
   24e40:	257c203a 28207c73 6f727245 69252072     : |%s| (Error %i
   24e50:	44000a29 63657269 79726f74 73696c20     )..Directory lis
   24e60:	676e6974 3a666f20 0a732520 6325000a     ting of: %s...%c
   24e70:	63256325 63256325 2f752520 75323025     %c%c%c%c %u/%02u
   24e80:	3230252f 30252075 253a7532 20753230     /%02u %02u:%02u 
   24e90:	6c303125 31252075 20007333 0a00202d     %10lu %13s. - ..
   24ea0:	20753425 656c6946 2c297328 30312520     %4u File(s), %10
   24eb0:	79622064 20736574 61746f74 34250a6c     d bytes total.%4
   24ec0:	69442064 29732872 25202c00 4b643031     d Dir(s)., %10dK
   24ed0:	74796220 66207365 0a656572 65724300      bytes free..Cre
   24ee0:	20657461 65726964 726f7463 25272079     ate directory '%
   24ef0:	3a202773 0a732520 6c654400 20657465     s' : %s..Delete 
   24f00:	27732527 25203a20 4d000a73 2065766f     '%s' : %s..Move 
   24f10:	27732527 203e2d20 27732527 25203a20     '%s' -> '%s' : %
   24f20:	55000a73 6c62616e 6f742065 65706f20     s..Unable to ope
   24f30:	2527206e 74202773 7277206f 20657469     n '%s' to write 
   24f40:	20656874 656c6966 6e45000a 68742064     the file..End th
   24f50:	69662065 6220656c 73752079 20676e69     e file by using 
   24f60:	63206325 61726168 72657463 2520202e     %c character.  %
   24f70:	73692069 65687420 6d697420 74756f65     i is the timeout
   24f80:	6f53000a 2c797272 206f6e20 6b636162     ..Sorry, no back
   24f90:	63617073 75732065 726f7070 283a2074     space support :(
   24fa0:	7245000a 20726f72 7563636f 64657272     ..Error occurred
   24fb0:	69687720 7720656c 69746972 7420676e      while writing t
   24fc0:	66206568 0a656c69 52524500 203a524f     he file..ERROR: 
   24fd0:	65766947 20656d20 72756f73 61206563     Give me source a
   24fe0:	6420646e 69747365 6974616e 64206e6f     nd destination d
   24ff0:	63657269 79726f74 70657320 74617261     irectory separat
   25000:	62206465 20612079 63617073 6e490065     ed by a space.In
   25010:	696c6176 65642064 6e697473 6f697461     valid destinatio
   25020:	6964206e 74636572 3a79726f 73257c20     n directory: |%s
   25030:	49000a7c 6c61766e 73206469 6372756f     |..Invalid sourc
   25040:	69642065 74636572 3a79726f 73257c20     e directory: |%s
   25050:	25000a7c 73252f73 706f4300 73252079     |..%s/%s.Copy %s
   25060:	203e2d20 3a207325 20642520 65747942      -> %s : %d Byte
   25070:	203a2073 000a7325 6d726f46 4f207461     s : %s..Format O
   25080:	6f46004b 74616d72 52524520 5300524f     K.Format ERROR.S
   25090:	61432044 6d206472 746e756f 45006465     D Card mounted.E
   250a0:	726f7272 756f6d20 6e69746e 44532067     rror mounting SD
   250b0:	72614320 6c460064 20687361 6e756f6d      Card.Flash moun
   250c0:	00646574 6f727245 6f6d2072 69746e75     ted.Error mounti
   250d0:	4620676e 6873616c 6d654d20 0079726f     ng Flash Memory.
   250e0:	6d726f66 73207461 6f660064 74616d72     format sd.format
   250f0:	616c6620 6d006873 746e756f 00647320      flash.mount sd.
   25100:	6e756f6d 6c662074 00687361 7261654c     mount flash.Lear
   25110:	676e696e 646f6d20 6e652065 656c6261     ning mode enable
   25120:	52450064 3a524f52 6d655320 6f687061     d.ERROR: Semapho
   25130:	77206572 4e207361 004c4c55 74697277     re was NULL.writ
   25140:	69640065 766f6373 25007265 2520732a     e.discover.%*s %
   25150:	25207830 25207830 654e0069 64206465     0x %0x %i.Need d
   25160:	63697665 6e612065 65722064 74736967     evice and regist
   25170:	61207265 65726464 52007373 20646165     er address.Read 
   25180:	74617473 66207375 206d6f72 69766564     status from devi
   25190:	30206563 32302578 25203a58 0a203a73     ce 0x%02X: %s: .
   251a0:	20202000 25783020 3a583230 25783020     .    0x%02X: 0x%
   251b0:	0a583230 732a2500 78302520 78302520     02X..%*s %0x %0x
   251c0:	78302520 65654e00 65642064 65636976      %0x.Need device
   251d0:	6572202c 74736967 61207265 65726464     , register addre
   251e0:	61207373 6420646e 00617461 746f7257     ss and data.Wrot
   251f0:	78302065 58323025 206f7420 30257830     e 0x%02X to 0x%0
   25200:	3a3a5832 30257830 000a5832 6f727245     2X::0x%02X..Erro
   25210:	72772072 6e697469 6f742067 76656420     r writing to dev
   25220:	20656369 0a782325 756f4600 6420646e     ice %#x..Found d
   25230:	63697665 69772065 61206874 65726464     evice with addre
   25240:	25207373 0a783423 616c4600 203a6873     ss %#4x..Flash: 
   25250:	252f7525 694c2075 203a6566 25256925     %u/%u Life: %i%%
   25260:	61702820 25206567 72772075 65747469      (page %u writte
   25270:	7525206e 6d697420 0a297365 616c4600     n %u times)..Fla
   25280:	203a6873 252f7525 54000a75 20706d65     sh: %u/%u..Temp 
   25290:	7525203a 0a75252e 6867694c 25203a74     : %u.%u.Light: %
   252a0:	69540a75 2020656d 3a202020 42732520     u.Time     : %sB
   252b0:	20746f6f 656d6954 3025203a 252f7532     oot Time: %02u/%
   252c0:	2f753230 2c753425 75323025 3230253a     02u/%4u,%02u:%02
   252d0:	30253a75 550a7532 30747261 74615720     u:%02u.Uart0 Wat
   252e0:	616d7265 3a736b72 2f752520 28207525     ermarks: %u/%u (
   252f0:	742f7872 000a2978 00594452 004b4c42     rx/tx)..RDY.BLK.
   25300:	00535553 004c4544 656c6946 656d616e     SUS.DEL.Filename
   25310:	6f687320 20646c75 6c206562 20737365      should be less 
   25320:	6e616874 20692520 72616863 25000a73     than %i chars..%
   25330:	25282073 79622075 29736574 6c697720     s (%u bytes) wil
   25340:	6562206c 6f727020 6d617267 2e64656d     l be programmed.
   25350:	6265520a 69746f6f 6e20676e 7420776f     .Rebooting now t
   25360:	7075206f 64617267 69662065 61776d72     o upgrade firmwa
   25370:	0a216572 6e55000a 656c6261 206f7420     re!...Unable to 
   25380:	6e65706f 73252720 4f000a27 46000a4b     open '%s'..OK..F
   25390:	20656c69 74697277 72652065 0a726f72     ile write error.
   253a0:	6d6f6300 0074696d 20732a25 38323125     .commit.%*s %128
   253b0:	69252073 00692520 66667562 25007265     s %i %i.buffer.%
   253c0:	2520732a 69252069 52524500 203a524f     *s %i %i.ERROR: 
   253d0:	2078614d 66667562 73207265 20657a69     Max buffer size 
   253e0:	25207369 79622069 0a736574 52524500     is %i bytes..ERR
   253f0:	203a524f 454d4954 0a54554f 65684300     OR: TIMEOUT..Che
   25400:	75736b63 6925206d 0303000a 254e0404     cksum %i......N%
   25410:	52203a75 78542f78 7452202c 764f2f65     u: Rx/Tx, Rte/Ov
   25420:	52202c74 69727465 4d2f6465 20687365     t, Retried/Mesh 
   25430:	72746552 2f646569 65706552 64657461     Retried/Repeated
   25440:	000a203a 20202020 2f753325 75332d25     : ..    %3u/%-3u
   25450:	2f752520 202c7525 252f7525 75252f75      %u/%u, %u/%u/%u
   25460:	6944000a 72616373 20646564 74732061     ..Discarded a st
   25470:	20656c61 65726977 7373656c 63617020     ale wireless pac
   25480:	0074656b 6f727245 65732072 6e69646e     ket.Error sendin
   25490:	61702067 74656b63 6863202c 206b6365     g packet, check 
   254a0:	61726170 6574656d 00217372 6f6d6552     parameters!.Remo
   254b0:	6e206574 2065646f 656d616e 0027203a     te node name: '.
   254c0:	65636552 64657669 65687420 6b636120     Received the ack
   254d0:	6c776f6e 6d676465 21746e65 63615000     nowledgment!.Pac
   254e0:	2074656b 746e6573 206f7420 62207325     ket sent to %s b
   254f0:	6e207475 4341206f 6572204b 76696563     ut no ACK receiv
   25500:	46006465 454c4941 65530044 64612074     ed.FAILED.Set ad
   25510:	73657264 6f742073 3a692520 0a732520     dress to %i: %s.
   25520:	2d2d2d00 2d2d2d2d 2d2d2d2d 2d2d2d2d     .---------------
   25530:	2d2d2d2d 2d2d2d2d 000a2d2d 74756f52     ----------..Rout
   25540:	20676e69 6c626174 69732065 6920657a     ing table size i
   25550:	69252073 207c000a 20545344 654e207c     s %i..| DST | Ne
   25560:	48207478 7c20504f 504f4820 0a7c2053     xt HOP | HOPS |.
   25570:	25207c00 7c206933 25202020 20206933     .| %3i |   %3i  
   25580:	207c2020 20693325 000a7c20 65636552       | %3i  |..Rece
   25590:	64657669 74616420 72662061 25206d6f     ived data from %
   255a0:	4e000a69 6164206f 72206174 69656365     i..No data recei
   255b0:	00646576 65727473 27006d61 65727473     ved.stream.'stre
   255c0:	3c206d61 72646461 6d3c203e 273e6773     am <addr> <msg>'
   255d0:	53203a20 61657274 2061206d 6d6d6f63      : Stream a comm
   255e0:	20646e61 61206f74 68746f6e 62207265     and to another b
   255f0:	6472616f 61727400 6566736e 74270072     oard.transfer.'t
   25600:	736e6172 20726566 6372733c 6c696620     ransfer <src fil
   25610:	6d616e65 3c203e65 20747364 656c6966     ename> <dst file
   25620:	656d616e 6e3c203e 72646461 3a20273e     name> <naddr>' :
   25630:	61725420 6566736e 20612072 656c6966      Transfer a file
   25640:	206f7420 746f6e61 20726568 72616f62      to another boar
   25650:	78720064 78722700 69743c20 6d5f656d     d.rx.'rx <time_m
   25660:	20273e73 6f50203a 66206c6c 6120726f     s>' : Poll for a
   25670:	63617020 0074656b 64646127 613c2072      packet.'addr <a
   25680:	3e726464 3a202020 74655320 65687420     ddr>   : Set the
   25690:	72697720 73656c65 64612073 73657264      wireless addres
   256a0:	72270073 6574756f 3a202773 65655320     s.'routes' : See
   256b0:	65687420 72697720 73656c65 6f722073      the wireless ro
   256c0:	73657475 63612700 613c206b 3e726464     utes.'ack <addr>
   256d0:	61643c20 273e6174 203a2020 646e6553      <data>'  : Send
   256e0:	70206120 656b6361 6e612074 61772064      a packet and wa
   256f0:	66207469 6120726f 6f6e6b63 64656c77     it for acknowled
   25700:	6e656d67 616e0074 27006b63 6b63616e     gment.nack.'nack
   25710:	64613c20 203e7264 7461643c 20273e61      <addr> <data>' 
   25720:	6553203a 6120646e 63617020 0074656b     : Send a packet.
   25730:	61747327 20277374 6553203a 68742065     'stats' : See th
   25740:	69772065 656c6572 73207373 73746174     e wireless stats
   25750:	6c656800 31250070 20733832 38323125     .help.%128s %128
   25760:	69252073 61725400 6566736e 73252072     s %i.Transfer %s
   25770:	3e2d2d20 3a692520 000a7325 656c6966      --> %i:%s..file
   25780:	66756220 20726566 69252030 5245000a      buffer 0 %i..ER
   25790:	3a524f52 65684320 75736b63 7845206d     ROR: Checksum Ex
   257a0:	74636570 25206465 63412069 6c617574     pected %i Actual
   257b0:	0a692520 6c696600 6f632065 74696d6d      %i..file commit
   257c0:	20732520 25206925 6f000a69 5245006b      %s %i %i..ok.ER
   257d0:	3a524f52 6d655220 2065746f 65646f6e     ROR: Remote node
   257e0:	64696420 746f6e20 6b636120 6c776f6e      did not acknowl
   257f0:	65676465 6c696620 72772065 20657469     edge file write 
   25800:	29732528 6553000a 2520746e 69252f69     (%s)..Sent %i/%i
   25810:	2020000a 65522020 76696563 25206465     ..    Received %
   25820:	79622069 20736574 7265766f 20692520     i bytes over %i 
   25830:	6b636170 0a737465 6f685700 2173706f     packets..Whoops!
   25840:	70412020 786f7270 74616d69 20796c65       Approximately 
   25850:	62206925 73657479 756f6320 6e20646c     %i bytes could n
   25860:	6220746f 72702065 65746e69 65622064     ot be printed be
   25870:	73756163 68742065 756f2065 74757074     cause the output
   25880:	61686320 6c656e6e 20736920 206f6f74      channel is too 
   25890:	776f6c73 5020202e 7361656c 6f662065     slow.  Please fo
   258a0:	776f6c6c 65687420 67757320 74736567     llow the suggest
   258b0:	736e6f69 20746120 656c6966 7325203a     ions at file: %s
   258c0:	6c206120 6c747469 69622065 62612074      a little bit ab
   258d0:	2065766f 6c696877 6f6c2065 6120706f     ove while loop a
   258e0:	696c2074 6e20656e 65626d75 69252072     t line number %i
   258f0:	2e2e000a 5f354c2f 6c707041 74616369     ..../L5_Applicat
   25900:	2f6e6f69 72756f73 632f6563 685f646d     ion/source/cmd_h
   25910:	6c646e61 2f737265 65726977 7373656c     andlers/wireless
   25920:	6e61685f 72656c64 70632e73 61500070     _handlers.cpp.Pa
   25930:	20657372 6f727265 74203a72 203a7972     rse error: try: 
   25940:	72747327 206d6165 6464613c 3c203e72     'stream <addr> <
   25950:	6d6d6f63 3e646e61 2d2d0027 2d2d2d2d     command>'.------
   25960:	2d2d2d2d 2d2d2d2d 2d2d2d2d 2d2d2d2d     ----------------
   25970:	2d2d2d2d 2d2d2d2d 2d2d2d2d 2d2d2d2d     ----------------
   25980:	2d2d2d2d 2d2d2d2d 2d2d2d2d 2d2d2d2d     ----------------
   25990:	2d2d2d2d 00424b00 5900424d 4e007365     ----.KB.MB.Yes.N
   259a0:	7325006f 4b4f203a 202d2d20 61706143     o.%s: OK -- Capa
   259b0:	79746963 352d2520 2c732564 61764120     city %-5d%s, Ava
   259c0:	62616c69 203a656c 75352d25 000a7325     ilable: %-5u%s..
   259d0:	203a7325 6f727245 726f2072 746f6e20     %s: Error or not
   259e0:	65727020 746e6573 4520202e 726f7272      present.  Error
   259f0:	69252320 6f4d202c 65746e75 25203a64      #%i, Mounted: %
   25a00:	44000a73 00656e6f 6f727245 6f440072     s..Done.Error.Do
   25a10:	0021656e 4f525245 50203a52 6973736f     ne!.ERROR: Possi
   25a20:	20656c62 726f6873 6e6f2074 41445320     ble short on SDA
   25a30:	20726f20 204c4353 65726977 32492820      or SCL wire (I2
   25a40:	21293243 52524500 203a524f 6c696146     C2)!.ERROR: Fail
   25a50:	74206465 6e69206f 61697469 657a696c     ed to initialize
   25a60:	72697720 73656c65 79530073 6d657473      wireless.System
   25a70:	6f6f4220 20402074 66332e25 7a684d20      Boot @ %.3f Mhz
   25a80:	7953000a 6d657473 62657220 65746f6f     ..System reboote
   25a90:	66612064 20726574 73617263 20202e68     d after crash.  
   25aa0:	656c6552 746e6176 666e6920 500a3a6f     Relevant info:.P
   25ab0:	30203a43 38302578 20202e58 203a524c     C: 0x%08X.  LR: 
   25ac0:	30257830 202e5838 52535020 7830203a     0x%08X.  PSR: 0x
   25ad0:	58383025 736f500a 6c626973 616c2065     %08X.Possible la
   25ae0:	72207473 696e6e75 4f20676e 61542053     st running OS Ta
   25af0:	203a6b73 27732527 4620000a 6873616c     sk: '%s'.. Flash
   25b00:	72450020 6e697361 6e612067 6f662064      .Erasing and fo
   25b10:	74616d72 676e6974 49505320 616c6620     rmatting SPI fla
   25b20:	202c6873 73696874 6e616320 6b617420     sh, this can tak
   25b30:	20612065 6c696877 2e2e2065 5300202e     e a while ... .S
   25b40:	46204950 4853414c 20736920 73736f70     PI FLASH is poss
   25b50:	796c6269 6d616420 64656761 61500021     ibly damaged!.Pa
   25b60:	73206567 3a657a69 0a752520 6d654d00     ge size: %u..Mem
   25b70:	69732020 203a657a 28207525 20776172       size: %u (raw 
   25b80:	65747962 000a2973 4f525245 41203a52     bytes)..ERROR: A
   25b90:	6c656363 74617265 206e6f69 736e6553     cceleration Sens
   25ba0:	4500726f 524f5252 6554203a 7265706d     or.ERROR: Temper
   25bb0:	72757461 65532065 726f736e 52524500     ature Sensor.ERR
   25bc0:	203a524f 65532d37 6e656d67 69442074     OR: 7-Segment Di
   25bd0:	616c7073 616e0079 00726464 20746553     splay.naddr.Set 
   25be0:	65726977 7373656c 646f6e20 64612065     wireless node ad
   25bf0:	73657264 6f742073 20692520 6d6f7266     dress to %i from
   25c00:	73252720 69662027 203a656c 000a7325      '%s' file: %s..
   25c10:	72616f42 44492064 3a736920 73252720     Board ID is: '%s
   25c20:	30282027 32302578 000a2958 65746e45     ' (0x%02X)..Ente
   25c30:	20612072 72616f62 44492064 34362820     r a board ID (64
   25c40:	61686320 6d207372 3a297861 36250020      chars max): .%6
   25c50:	42007334 6472616f 20444920 70206f74     4s.Board ID to p
   25c60:	72676f72 203a6d61 27732527 6e45000a     rogram: '%s'..En
   25c70:	20726574 20275927 63206f74 69666e6f     ter 'Y' to confi
   25c80:	202e6d72 414f4220 49204452 41432044     rm.  BOARD ID CA
   25c90:	544f4e4e 20454220 4e414843 20444547     NNOT BE CHANGED 
   25ca0:	20444e41 50205349 414d5245 544e454e     AND IS PERMANENT
   25cb0:	73332500 616f4200 49206472 6f6e2044     .%3s.Board ID no
   25cc0:	72702074 6172676f 64656d6d 756f5900     t programmed.You
   25cd0:	6e616320 6f727020 6d617267 50206120      can program a P
   25ce0:	414d5245 544e454e 20444920 7920666f     ERMANENT ID of y
   25cf0:	2072756f 72616f62 54002e64 6f64206f     our board..To do
   25d00:	69687420 68202c73 20646c6f 20315753      this, hold SW1 
   25d10:	20646e61 20345753 20646e61 65736572     and SW4 and rese
   25d20:	68742074 6f622065 2e647261 55504300     t the board..CPU
   25d30:	616c6620 61206873 7265746c 702f6465      flash altered/p
   25d40:	72676f72 656d6d61 6f632064 73746e75     rogrammed counts
   25d50:	7525203a 0a75252f 55504300 6f727020     : %u/%u..CPU pro
   25d60:	6d617267 2064656d 73616c66 6d282068     grammed flash (m
   25d70:	6d2f6e69 3a297861 4b752520 202d2062     in/max): %uKb - 
   25d80:	624b7525 614c000a 70207473 72676f72     %uKb..Last progr
   25d90:	696d6d61 7420676e 206b6f6f 6d207525     amming took %u m
   25da0:	43000a73 696c6c61 7920676e 2072756f     s..Calling your 
   25db0:	6e69616d 00002928                       main()..

00025db8 <typeinfo for scheduler_task>:
   25db8:	000277d8 00025dc0                       .w...]..

00025dc0 <typeinfo name for scheduler_task>:
   25dc0:	63733431 75646568 5f72656c 6b736174     14scheduler_task
	...

00025dd8 <vtable for scheduler_task>:
   25dd8:	00000000 00025db8 00012221 00012239     .....]..!"..9"..
   25de8:	0001222d 00012231 00012235 0001d225     -"..1"..5"..%...
   25df8:	04040303 00000000                       ........

00025e00 <vtable for terminalTask>:
   25e00:	00000000 00026360 00012285 000122d5     ....`c..."..."..
   25e10:	0001222d 0001224d 00012669 00012571     -"..M"..i&..q%..
   25e20:	6d726574 6c616e69 00200800 3a43504c     terminal.. .LPC:
   25e30:	20200020 6e694620 65687369 6e692064      .   Finished in
   25e40:	20752520 000a7375 6b736154 5550432f      %u us..Task/CPU
   25e50:	666e4920 20202e6f 20657355 666e6927      Info.  Use 'inf
   25e60:	3032206f 74202730 6567206f 50432074     o 200' to get CP
   25e70:	75642055 676e6972 30303220 6d00736d     U during 200ms.m
   25e80:	6e696d65 53006f66 6d206565 726f6d65     eminfo.See memor
   25e90:	6e692079 4f006f66 75707475 79732074     y info.Output sy
   25ea0:	6d657473 61656820 0068746c 6d697427     stem health.'tim
   25eb0:	74202765 6976206f 74207765 2e656d69     e' to view time.
   25ec0:	74272020 20656d69 20746573 44204d4d       'time set MM D
   25ed0:	59592044 48205959 4d4d2048 20535320     D YYYY HH MM SS 
   25ee0:	79616457 6f742027 74657320 6d697420     Wday' to set tim
   25ef0:	61630065 65520074 61206461 6c696620     e.cat.Read a fil
   25f00:	20202e65 203a7845 74616327 663a3020     e.  Ex: 'cat 0:f
   25f10:	2e656c69 27747874 20726f20 74616327     ile.txt' or 'cat
   25f20:	663a3020 2e656c69 20747874 706f6e2d      0:file.txt -nop
   25f30:	746e6972 6f742027 73657420 66692074     rint' to test if
   25f40:	6c696620 61632065 6562206e 61657220      file can be rea
   25f50:	6f430064 66207970 73656c69 6f726620     d.Copy files fro
   25f60:	6f742f6d 616c4620 532f6873 61432044     m/to Flash/SD Ca
   25f70:	202e6472 3a784520 70632720 663a3020     rd.  Ex: 'cp 0:f
   25f80:	2e656c69 20747874 69663a31 742e656c     ile.txt 1:file.t
   25f90:	00277478 00706364 79706f43 6c6c6120     xt'.dcp.Copy all
   25fa0:	6c696620 6f207365 20612066 65726964      files of a dire
   25fb0:	726f7463 6f742079 6f6e6120 72656874     ctory to another
   25fc0:	72696420 6f746365 202e7972 3a784520      directory.  Ex:
   25fd0:	63642720 3a302070 20637273 73643a31      'dcp 0:src 1:ds
   25fe0:	6c002774 73550073 6c272065 3a302073     t'.ls.Use 'ls 0:
   25ff0:	6f662027 6c462072 2c687361 20726f20     ' for Flash, or 
   26000:	20736c27 20273a31 20726f66 43204453     'ls 1:' for SD C
   26010:	00647261 69646b6d 72430072 65746165     ard.mkdir.Create
   26020:	64206120 63657269 79726f74 7845202e      a directory. Ex
   26030:	6d27203a 7269646b 73657420 6d002774     : 'mkdir test'.m
   26040:	65520076 656d616e 66206120 2e656c69     v.Rename a file.
   26050:	3a784520 6d722720 663a3020 2e656c69      Ex: 'rm 0:file.
   26060:	20747874 656e3a30 78742e77 57002774     txt 0:new.txt'.W
   26070:	65746972 6e206120 66207765 2e656c69     rite a new file.
   26080:	3a784520 666e2720 69663c20 742e656c      Ex: 'nf <file.t
   26090:	003e7478 52006d72 766f6d65 20612065     xt>.rm.Remove a 
   260a0:	656c6966 7845202e 7227203a 3a30206d     file. Ex: 'rm 0:
   260b0:	656c6966 7478742e 32690027 69270063     file.txt'.i2c.'i
   260c0:	72206332 20646165 31307830 30783020     2c read 0x01 0x0
   260d0:	633c2032 746e756f 3a20273e 61655220     2 <count>' : Rea
   260e0:	20207364 69766564 30206563 2c313078     ds  device 0x01,
   260f0:	646e6120 67657220 65747369 78302072      and register 0x
   26100:	270a3230 20633269 74697277 78302065     02.'i2c write 0x
   26110:	30203130 20323078 33307830 20202027     01 0x02 0x03'   
   26120:	7257203a 73657469 76656420 20656369     : Writes device 
   26130:	31307830 6572202c 78302067 202c3230     0x01, reg 0x02, 
   26140:	61746164 30783020 69270a33 64206332     data 0x03.'i2c d
   26150:	6f637369 27726576 44203a20 6f637369     iscover' : Disco
   26160:	20726576 20433249 69766564 00736563     ver I2C devices.
   26170:	726f7473 00656761 61726150 6574656d     storage.Paramete
   26180:	203a7372 726f6627 2074616d 2c276473     rs: 'format sd',
   26190:	6f662720 74616d72 616c6620 2c276873      'format flash',
   261a0:	6f6d2720 20746e75 2c276473 6f6d2720      'mount sd', 'mo
   261b0:	20746e75 73616c66 72002768 6f6f6265     unt flash'.reboo
   261c0:	65520074 746f6f62 68742073 79732065     t.Reboots the sy
   261d0:	6d657473 676f6c00 6f6c2700 683c2067     stem.log.'log <h
   261e0:	6f6c6c65 7420273e 6f6c206f 6e692067     ello>' to log in
   261f0:	202e6f66 6f6c2720 6c662067 27687375     fo.  'log flush'
   26200:	206f7420 73756c66 6f6c2068 6c007367      to flush logs.l
   26210:	6e726165 67654200 74206e69 656c206f     earn.Begin to le
   26220:	206e7261 63205249 7365646f 726f6620     arn IR codes for
   26230:	6d756e20 73726562 392d3020 65735500      numbers 0-9.Use
   26240:	69772720 656c6572 20277373 73206f74      'wireless' to s
   26250:	74206565 6e206568 65747365 6f632064     ee the nested co
   26260:	6e616d6d 47007364 61207465 6c696620     mmands.Get a fil
   26270:	73752065 20676e69 6c74656e 2e64616f     e using netload.
   26280:	20657865 6220726f 73752079 20676e69     exe or by using 
   26290:	20656874 6c6c6f66 6e69776f 72702067     the following pr
   262a0:	636f746f 0a3a6c6f 74697257 75622065     otocol:.Write bu
   262b0:	72656666 7562203a 72656666 666f3c20     ffer: buffer <of
   262c0:	74657366 6e3c203e 62206d75 73657479     fset> <num bytes
   262d0:	2e2e203e 72570a2e 20657469 66667562     > ....Write buff
   262e0:	74207265 6966206f 203a656c 6d6d6f63     er to file: comm
   262f0:	3c207469 656c6966 656d616e 663c203e     it <filename> <f
   26300:	20656c69 7366666f 203e7465 6d756e3c     ile offset> <num
   26310:	74796220 66207365 206d6f72 66667562      bytes from buff
   26320:	003e7265 616c6627 3c206873 656c6966     er>.'flash <file
   26330:	656d616e 5720273e 206c6c69 73616c66     name>' Will flas
   26340:	50432068 69772055 74206874 20736968     h CPU with this 
   26350:	2077656e 616e6962 66207972 00656c69     new binary file.

00026360 <typeinfo for terminalTask>:
   26360:	00027838 0002636c 00025db8              8x..lc...]..

0002636c <typeinfo name for terminalTask>:
   2636c:	65743231 6e696d72 61546c61 43006b73     12terminalTask.C
   2637c:	52544e4f 454c4c4f 4c415f52 4f43004c     ONTROLLER_ALL.CO
   2638c:	4f52544e 52454c4c 544f4d5f 4300524f     NTROLLER_MOTOR.C
   2639c:	52544e4f 454c4c4f 414d5f52 52455453     ONTROLLER_MASTER
   263ac:	4e4f4300 4c4f5254 5f52454c 534e4553     .CONTROLLER_SENS
   263bc:	4300524f 52544e4f 454c4c4f 45475f52     OR.CONTROLLER_GE
   263cc:	4f43004f 4f52544e 52454c4c 5f54425f     O.CONTROLLER_BT_
   263dc:	52444e41 0044494f 544e4f43 4c4c4f52     ANDROID.CONTROLL
   263ec:	495f5245 4f43004f 4f52544e 52454c4c     ER_IO.CONTROLLER
   263fc:	4d55445f 4d00594d 525f4753 54455345     _DUMMY.MSG_RESET
   2640c:	47534d00 574f505f 50555245 4e59535f     .MSG_POWERUP_SYN
   2641c:	47534d00 574f505f 50555245 4e59535f     .MSG_POWERUP_SYN
   2642c:	4b43415f 47534d00 574f505f 50555245     _ACK.MSG_POWERUP
   2643c:	4b43415f 47534d00 4145485f 45425452     _ACK.MSG_HEARTBE
   2644c:	4d005441 485f4753 54524145 54414542     AT.MSG_HEARTBEAT
   2645c:	4b43415f 47534d00 5349445f 45535f54     _ACK.MSG_DIST_SE
   2646c:	524f534e 5441445f 534d0041 544f5f47     NSOR_DATA.MSG_OT
   2647c:	5f524548 534e4553 445f524f 00415441     HER_SENSOR_DATA.
   2648c:	5f47534d 5f4f4547 44414548 5f474e49     MSG_GEO_HEADING_
   2649c:	41544144 47534d00 4f45475f 434f4c5f     DATA.MSG_GEO_LOC
   264ac:	4f495441 41445f4e 4d004154 535f4753     ATION_DATA.MSG_S
   264bc:	44454550 434e455f 5245444f 5441445f     PEED_ENCODER_DAT
   264cc:	534d0041 41435f47 41505f52 00455355     A.MSG_CAR_PAUSE.
   264dc:	5f47534d 5f524143 55534552 4d00454d     MSG_CAR_RESUME.M
   264ec:	435f4753 4b434548 4e494f50 45525f54     SG_CHECKPOINT_RE
   264fc:	53455551 534d0054 48435f47 504b4345     QUEST.MSG_CHECKP
   2650c:	544e494f 5441445f 534d0041 52445f47     OINT_DATA.MSG_DR
   2651c:	5f455649 45444f4d 47534d00 4550535f     IVE_MODE.MSG_SPE
   2652c:	445f4445 435f5249 414d4d4f 4d00444e     ED_DIR_COMMAND.M
   2653c:	465f4753 5f454552 5f4e5552 00524944     SG_FREE_RUN_DIR.
   2654c:	5f47534d 4f525245 534d0052 55445f47     MSG_ERROR.MSG_DU
   2655c:	00594d4d 45534552 65722054 76696563     MMY.RESET receiv
   2656c:	202c6465 6f626552 6e69746f 79532067     ed, Rebooting Sy
   2657c:	6d657473 2f2e2e00 415f354c 696c7070     stem.../L5_Appli
   2658c:	69746163 632f6e6f 635f6e61 6f6d6d6f     cation/can_commo
   2659c:	70632e6e 305b0070 32302578 43205d58     n.cpp.[0x%02X] C
   265ac:	745f4e41 61662078 64656c69 305b000a     AN_tx failed..[0
   265bc:	32302578 43205d58 725f4e41 61662078     x%02X] CAN_rx fa
   265cc:	64656c69 6e69000a 66667573 65696369     iled..insufficie
   265dc:	6220746e 65666675 6f742072 61657220     nt buffer to rea
   265ec:	6e692064 696d6f63 6d20676e 61737365     d incoming messa
   265fc:	63006567                                         ge.

000265ff <can_controller::can_recv(controller_id_t*, msg_id_t*, unsigned char*, unsigned short*)::__FUNCTION__>:
   265ff:	5f6e6163 76636572 6e616300                       can_recv.

00026608 <can_controller::can_send(controller_id_t, msg_id_t, unsigned char*, unsigned short)::__FUNCTION__>:
   26608:	5f6e6163 646e6573 00000000              can_send....

00026614 <typeinfo for debugTask>:
   26614:	00027838 00026620 00025db8              8x.. f...]..

00026620 <typeinfo name for debugTask>:
   26620:	62656439 61546775 00006b73 00000000     9debugTask......

00026630 <vtable for debugTask>:
   26630:	00000000 00026614 00012ff1 00013015     .....f.../...0..
   26640:	0001222d 00012231 00012235 00013225     -"..1"..5"..%2..

00026650 <vtable for canRxBufferTask>:
   26650:	00000000 00026684 00013009 0001303d     .....f...0..=0..
   26660:	0001222d 00012231 00012235 00013401     -"..1"..5"...4..

00026670 <typeinfo name for canRxBufferTask>:
   26670:	61633531 4278526e 65666675 73615472     15canRxBufferTas
   26680:	0000006b                                k...

00026684 <typeinfo for canRxBufferTask>:
   26684:	00027838 00026670 00025db8              8x..pf...]..

00026690 <vtable for canRxProcessTask>:
   26690:	00000000 0002675c 00012ffd 00013029     ....\g.../..)0..
   266a0:	0001222d 00012231 00012235 00013489     -"..1"..5"...4..
   266b0:	526e6163 66754278 54726566 006b7361     canRxBufferTask.
   266c0:	526e6163 6f725078 73736563 6b736154     canRxProcessTask
   266d0:	6f470a00 68632074 706b6365 746e696f     ..Got checkpoint
   266e0:	74616420 4e0a0061 72207765 6574756f      data..New route
   266f0:	6425203a 62656400 61546775 2e006b73     : %d.debugTask..
   26700:	354c2f2e 7070415f 6163696c 6e6f6974     ./L5_Application
   26710:	6e6f632f 6c6f7274 5f72656c 632e6f69     /controller_io.c
   26720:	6d007070 715f6773 65756575 6c756620     pp.msg_queue ful
   26730:	6d000a6c 715f6773 65756575 6c756620     l..msg_queue ful
   26740:	7572006c                                         l.

00026742 <canRxBufferTask::run(void*)::__FUNCTION__>:
   26742:	006e7572                                run.

00026746 <typeinfo name for canRxProcessTask>:
   26746:	61633631 5078526e 65636f72 61547373     16canRxProcessTa
   26756:	00006b73 78380000                                sk....

0002675c <typeinfo for canRxProcessTask>:
   2675c:	00027838 00026746 00025db8              8x..Fg...]..

00026768 <typeinfo for GLCD>:
   26768:	00027838 00026788 00025db8              8x...g...]..

00026774 <typeinfo for SWITCH>:
   26774:	00027838 00026780 00025db8              8x...g...]..

00026780 <typeinfo name for SWITCH>:
   26780:	49575336 00484354                       6SWITCH.

00026788 <typeinfo name for GLCD>:
   26788:	434c4734 00000044                       4GLCD...

00026790 <vtable for SWITCH>:
   26790:	00000000 00026774 00013699 000136bd     ....tg...6...6..
   267a0:	0001222d 00012231 00012235 00013679     -"..1"..5"..y6..

000267b0 <typeinfo name for LIGHT>:
   267b0:	47494c35 00005448                       5LIGHT..

000267b8 <vtable for GLCD>:
   267b8:	00000000 00026768 000136b1 000136e5     ....hg...6...6..
   267c8:	0001222d 00012231 00012235 00014471     -"..1"..5"..qD..

000267d8 <typeinfo for LIGHT>:
   267d8:	00027838 000267b0 00025db8 44434c47     8x...g...]..GLCD
   267e8:	2a2e2500 494c0066 00544847 54495753     .%.*f.LIGHT.SWIT
   267f8:	32004843 5000312e 45535541 52460020     CH.2.1.PAUSE .FR
   26808:	52204545 48004e55 20454d4f 00202020     EE RUN.HOME    .
   26818:	2050414d 00202020 4f545541 204e4f00     MAP    .AUTO.ON 
   26828:	464f0020 4f002046 20204646 53504700      .OFF .OFF  .GPS
   26838:	00464e20 5320310a 63746977 72702068      NF..1 Switch pr
   26848:	00737365 5320320a 63746977 72702068     ess..2 Switch pr
   26858:	00737365 00000000                       ess.....

00026860 <vtable for LIGHT>:
   26860:	00000000 000267d8 000136a5 000136d1     .....g...6...6..
   26870:	0001222d 00012231 00012235 00013d85     -"..1"..5"...=..
   26880:	4c4c4548 e7000a4f e7e7adde 65646f6e     HELLO.......node
	...

00026891 <LED_DISPLAY_CHARMAP>:
	...
   268b1:	00008600 00000000 00000000 00804000     .............@..
   268c1:	4f5b303f 077c6d66 0000677f 00000000     ?0[Ofm|..g......
   268d1:	397f7700 3d71793f 001f3076 3f000038     .w.9?yq=v0..8..?
   268e1:	6d000073 00003f00 00000000 00000000     s..m.?..........
   268f1:	397f7700 3d71793f 001f3076 3f000038     .w.9?yq=v0..8..?
   26901:	6d000073 00003f00 00000000 00000000     s..m.?..........
	...

00026912 <Tbl>:
   26912:	00fc00c7 00e200e9 00e000e4 00e700e5     ................
   26922:	00eb00ea 00ef00e8 00ec00ee 00c500c4     ................
   26932:	00e600c9 00f400c6 00f200f6 00f900fb     ................
   26942:	00d600ff 00a200dc 00a500a3 019220a7     ............. ..
   26952:	00ed00e1 00fa00f3 00d100f1 00ba00aa     ................
   26962:	231000bf 00bd00ac 00a100bc 00bb00ab     ...#............
   26972:	25922591 25022593 25612524 25562562     .%.%.%.%$%a%b%V%
   26982:	25632555 25572551 255c255d 2510255b     U%c%Q%W%]%\%[%.%
   26992:	25342514 251c252c 253c2500 255f255e     .%4%,%.%.%<%^%_%
   269a2:	2554255a 25662569 25502560 2567256c     Z%T%i%f%`%P%l%g%
   269b2:	25642568 25592565 25522558 256b2553     h%d%e%Y%X%R%S%k%
   269c2:	2518256a 2588250c 258c2584 25802590     j%.%.%.%.%.%.%.%
   269d2:	00df03b1 03c00393 03c303a3 03c400b5     ................
   269e2:	039803a6 03b403a9 03c6221e 222903b5     ........."....)"
   269f2:	00b12261 22642265 23212320 224800f7     a"..e"d" #!#..H"
   26a02:	221900b0 221a00b7 00b2207f 00a025a0     ..."...". ...%..

00026a12 <tbl_lower.5649>:
   26a12:	00620061 00640063 00660065 00680067     a.b.c.d.e.f.g.h.
   26a22:	006a0069 006c006b 006e006d 0070006f     i.j.k.l.m.n.o.p.
   26a32:	00720071 00740073 00760075 00780077     q.r.s.t.u.v.w.x.
   26a42:	007a0079 00a200a1 00a500a3 00af00ac     y.z.............
   26a52:	00e100e0 00e300e2 00e500e4 00e700e6     ................
   26a62:	00e900e8 00eb00ea 00ed00ec 00ef00ee     ................
   26a72:	00f100f0 00f300f2 00f500f4 00f800f6     ................
   26a82:	00fa00f9 00fc00fb 00fe00fd 010100ff     ................
   26a92:	01050103 01090107 010d010b 0111010f     ................
   26aa2:	01150113 01190117 011d011b 0121011f     ..............!.
   26ab2:	01250123 01290127 012d012b 0131012f     #.%.'.).+.-./.1.
   26ac2:	01350133 013a0137 013e013c 01420140     3.5.7.:.<.>.@.B.
   26ad2:	01460144 014b0148 014f014d 01530151     D.F.H.K.M.O.Q.S.
   26ae2:	01570155 015b0159 015f015d 01630161     U.W.Y.[.]._.a.c.
   26af2:	01670165 016b0169 016f016d 01730171     e.g.i.k.m.o.q.s.
   26b02:	01770175 017c017a 0192017e 03b203b1     u.w.z.|.~.......
   26b12:	03b403b3 03b603b5 03b803b7 03ba03b9     ................
   26b22:	03bc03bb 03be03bd 03c003bf 03c303c1     ................
   26b32:	03c503c4 03c703c6 03c903c8 043003ca     ..............0.
   26b42:	04320431 04340433 04360435 04380437     1.2.3.4.5.6.7.8.
   26b52:	043a0439 043c043b 043e043d 0440043f     9.:.;.<.=.>.?.@.
   26b62:	04420441 04440443 04460445 04480447     A.B.C.D.E.F.G.H.
   26b72:	044a0449 044c044b 044e044d 0451044f     I.J.K.L.M.N.O.Q.
   26b82:	04530452 04550454 04570456 04590458     R.S.T.U.V.W.X.Y.
   26b92:	045b045a 045e045c 2170045f 21722171     Z.[.\.^._.p!q!r!
   26ba2:	21742173 21762175 21782177 217a2179     s!t!u!v!w!x!y!z!
   26bb2:	217c217b 217e217d ff41217f ff43ff42     {!|!}!~!.!A.B.C.
   26bc2:	ff45ff44 ff47ff46 ff49ff48 ff4bff4a     D.E.F.G.H.I.J.K.
   26bd2:	ff4dff4c ff4fff4e ff51ff50 ff53ff52     L.M.N.O.P.Q.R.S.
   26be2:	ff55ff54 ff57ff56 ff59ff58 0000ff5a     T.U.V.W.X.Y.Z...

00026bf2 <tbl_upper.5650>:
   26bf2:	00420041 00440043 00460045 00480047     A.B.C.D.E.F.G.H.
   26c02:	004a0049 004c004b 004e004d 0050004f     I.J.K.L.M.N.O.P.
   26c12:	00520051 00540053 00560055 00580057     Q.R.S.T.U.V.W.X.
   26c22:	005a0059 ffe00021 ffe5ffe1 ffe3ffe2     Y.Z.!...........
   26c32:	00c100c0 00c300c2 00c500c4 00c700c6     ................
   26c42:	00c900c8 00cb00ca 00cd00cc 00cf00ce     ................
   26c52:	00d100d0 00d300d2 00d500d4 00d800d6     ................
   26c62:	00da00d9 00dc00db 00de00dd 01000178     ............x...
   26c72:	01040102 01080106 010c010a 0110010e     ................
   26c82:	01140112 01180116 011c011a 0120011e     .............. .
   26c92:	01240122 01280126 012c012a 0130012e     ".$.&.(.*.,...0.
   26ca2:	01340132 01390136 013d013b 0141013f     2.4.6.9.;.=.?.A.
   26cb2:	01450143 014a0147 014e014c 01520150     C.E.G.J.L.N.P.R.
   26cc2:	01560154 015a0158 015e015c 01620160     T.V.X.Z.\.^.`.b.
   26cd2:	01660164 016a0168 016e016c 01720170     d.f.h.j.l.n.p.r.
   26ce2:	01760174 017b0179 0191017d 03920391     t.v.y.{.}.......
   26cf2:	03940393 03960395 03980397 039a0399     ................
   26d02:	039c039b 039e039d 03a0039f 03a303a1     ................
   26d12:	03a503a4 03a703a6 03a903a8 041003aa     ................
   26d22:	04120411 04140413 04160415 04180417     ................
   26d32:	041a0419 041c041b 041e041d 0420041f     .............. .
   26d42:	04220421 04240423 04260425 04280427     !.".#.$.%.&.'.(.
   26d52:	042a0429 042c042b 042e042d 0401042f     ).*.+.,.-.../...
   26d62:	04030402 04050404 04070406 04090408     ................
   26d72:	040b040a 040e040c 2160040f 21622161     ..........`!a!b!
   26d82:	21642163 21662165 21682167 216a2169     c!d!e!f!g!h!i!j!
   26d92:	216c216b 216e216d ff21216f ff23ff22     k!l!m!n!o!!.".#.
   26da2:	ff25ff24 ff27ff26 ff29ff28 ff2bff2a     $.%.&.'.(.).*.+.
   26db2:	ff2dff2c ff2fff2e ff31ff30 ff33ff32     ,.-.../.0.1.2.3.
   26dc2:	ff35ff34 ff37ff36 ff39ff38 0000ff3a     4.5.6.7.8.9.:...
   26dd2:	c7ffff9f 009a8094 00000000                       ..........

00026ddc <CSWTCH.72>:
   26ddc:	00100000 00200000 00400000 00800000     ...... ...@.....

00026dec <cst.6222>:
   26dec:	40008000 10002000 40000800 10002000     ...@. .....@. ..
   26dfc:	04000800 2a220200 3f3e3c3a 2b007f7c     ......"*:<>?|..+
   26e0c:	5b3d3b2c feeb005d 44534d90 2e35534f     ,;=[]....MSDOS5.
   26e1c:	4f4e0030 4d414e20 20202045 54414620     0.NO NAME    FAT
   26e2c:	20203233 4f4e0020 4d414e20 20202045     32   .NO NAME   
   26e3c:	54414620 20202020 9a800020                        FAT     .

00026e46 <ExCvt>:
   26e46:	41909a80 808f418e 49454545 8f8e4949     ...A.A..EEEIII..
   26e56:	4f929290 55554f99 9b9a9959 9f9e9d9c     ...O.OUUY.......
   26e66:	554f4941 a7a6a5a5 abaaa9a8 afae21ac     AIOU.........!..
   26e76:	b3b2b1b0 b7b6b5b4 bbbab9b8 bfbebdbc     ................
   26e86:	c3c2c1c0 c7c6c5c4 cbcac9c8 cfcecdcc     ................
   26e96:	d3d2d1d0 d7d6d5d4 dbdad9d8 dfdedddc     ................
   26ea6:	e3e2e1e0 e7e6e5e4 ebeae9e8 efeeedec     ................
   26eb6:	f3f2f1f0 f7f6f5f4 fbfaf9f8 fffefdfc     ................

00026ec6 <LfnOfs>:
   26ec6:	07050301 12100e09 1c181614 0400001e              ..............

00026ed4 <vst.6221>:
   26ed4:	02000400 00800100 00200040 00080010     ........@. .....
   26ee4:	00020004 75530000 726f7070 20646574     ......Supported 
   26ef4:	6d6d6f43 73646e61 200a003a 73303125     Commands:.. %10s
   26f04:	25203a20 7332332e 2e2e2e20 25200a00      : %.32s ..... %
   26f14:	20733031 7325203a 27200a00 706c6568     10s : %s.. 'help
   26f24:	6f633c20 6e616d6d 20273e64 67206f74      <command>' to g
   26f34:	68207465 20706c65 6120666f 6d6f6320     et help of a com
   26f44:	646e616d 6c654800 6f6e2070 70732074     mand.Help not sp
   26f54:	66696365 20646569 20726f66 73696874     ecified for this
   26f64:	6d6f6320 646e616d 6d6f4300 646e616d      command.Command
   26f74:	766e4920 64696c61 5420202e 27207972      Invalid.  Try '
   26f84:	706c6568 6f632027 6e616d6d 0a0d0064     help' command...
   26f94:	6d6f4300 646e616d 69616620 2164656c     .Command failed!
   26fa4:	6f432020 6e616d6d 20732764 706c6568       Command's help
   26fb4:	3a736920 37250020 00002073 00027074      is: .%7s ..tp..
   26fc4:	00025e92 0002707c 00027081 6f6c3a30     .^..|p...p..0:lo
   26fd4:	73632e67 61460076 64656c69 6c696620     g.csv.Failed fil
   26fe4:	72772065 3a657469 72450020 20726f72     e write: .Error 
   26ff4:	77207525 69746972 6c20676e 6966676f     %u writing logfi
   27004:	202e656c 252f7525 72772075 65747469     le. %u/%u writte
   27014:	46202e6e 3a727470 0a752520 676f6c00     n. Fptr: %u..log
   27024:	00726567 4f525245 6c203a52 6567676f     ger.ERROR: logge
   27034:	6e692072 61697469 617a696c 6e6f6974     r initialization
   27044:	69616620 6572756c 2f642500 252c6425      failure.%d/%d,%
   27054:	3a643230 64323025 3230253a 75252c64     02d:%02d:%02d,%u
   27064:	2c73252c 252c7325 2c732573 002c7525     ,%s,%s,%s%s,%u,.
   27074:	61766e69 0064696c 6e726177 72726500     invalid.warn.err
   27084:	2a00726f 20002020 6b736174 6c616320     or.*  . task cal
   27094:	676e696c 73617420 746e456b 29287972     ling taskEntry()
   270a4:	726f6620 6c6c6120 73617420 2e20736b      for all tasks .
   270b4:	00202e2e 4520202a 20686361 6b736174     .. .*  Each task
   270c4:	6c697720 6874206c 65206e65 7265746e      will then enter
   270d4:	65687420 6e757220 6c202928 0a706f6f      the run() loop.
   270e4:	2d202000 46203e2d 454c4941 61742044     .  --> FAILED ta
   270f4:	6e456b73 28797274 52450029 3a524f52     skEntry().ERROR:
   27104:	6c694b20 676e696c 65724620 4f545265      Killing FreeRTO
   27114:	75642053 6f742065 72726520 7328726f     S due to error(s
   27124:	2d200029 46203e2d 554c4941 64204552     ). --> FAILURE d
   27134:	63657465 3b646574 73757320 646e6570     etected; suspend
   27144:	20676e69 73696874 73617420 2e2e206b     ing this task ..
   27154:	5245002e 3a524f52 204f4e20 6b736174     ..ERROR: NO task
   27164:	64612073 20646564 73207962 64656863     s added by sched
   27174:	72656c75 6464615f 7361745f 0029286b     uler_add_task().
   27184:	4320202a 74616572 20676e69 6b736174     *  Creating task
   27194:	2e2e2073 20000a2e 3e2d2d20 49414620     s .....  --> FAI
   271a4:	2044454c 73615478 6572436b 28657461     LED xTaskCreate(
   271b4:	52450029 3a524f52 65724320 6e697461     ).ERROR: Creatin
   271c4:	6f632067 69746e75 7320676e 70616d65     g counting semap
   271d4:	65726f68 20202a00 74696e49 696c6169     hore.*  Initiali
   271e4:	676e697a 73617420 2e20736b 000a2e2e     zing tasks .....
   271f4:	2d2d2020 4146203e 44454c49 696e6920       --> FAILED ini
   27204:	00292874 5320202a 74726174 20676e69     t().*  Starting 
   27214:	65686373 656c7564 2e2e2072 45000a2e     scheduler .....E
   27224:	524f5252 6f53203a 6e6f656d 696b2065     RROR: Someone ki
   27234:	64656c6c 65687420 68637320 6c756465     lled the schedul
   27244:	45007265 524f5252 6552203a 69737566     er.ERROR: Refusi
   27254:	7420676e 7473206f 20747261 7320534f     ng to start OS s
   27264:	64656863 72656c75 65756420 206f7420     cheduler due to 
   27274:	6f727265 29732872 00000000 40004000     error(s).....@.@
   27284:	40008000 40090000 40094000 17160201     ...@...@.@.@....

00027294 <typeinfo for SingletonTemplate<NordicStream>>:
   27294:	000277d8 0002729c                       .w...r..

0002729c <typeinfo name for SingletonTemplate<NordicStream>>:
   2729c:	69533731 656c676e 546e6f74 6c706d65     17SingletonTempl
   272ac:	49657461 6f4e3231 63696472 65727453     ateI12NordicStre
   272bc:	00456d61                                amE.

000272c0 <typeinfo name for NordicStream>:
   272c0:	6f4e3231 63696472 65727453 00006d61     12NordicStream..

000272d0 <vtable for NordicStream>:
   272d0:	00000000 000272f0 0001a741 0001a71f     .....r..A.......
   272e0:	0001a699 0001a6f9 0001a70d 00000000     ................

000272f0 <typeinfo for NordicStream>:
   272f0:	00027730 000272c0 00000000 00000002     0w...r..........
   27300:	00027410 00000002 00027294 00000002     .t.......r......

00027310 <typeinfo for SingletonTemplate<Uart0>>:
   27310:	000277d8 00027318                       .w...s..

00027318 <typeinfo name for SingletonTemplate<Uart0>>:
   27318:	69533731 656c676e 546e6f74 6c706d65     17SingletonTempl
   27328:	49657461 72615535 00453074              ateI5Uart0E.

00027334 <typeinfo for Uart0>:
   27334:	00027730 00027354 00000000 00000002     0w..Ts..........
   27344:	00027450 00000002 00027310 00000002     Pt.......s......

00027354 <typeinfo name for Uart0>:
   27354:	72615535 00003074 00000000              5Uart0......

00027360 <vtable for Uart0>:
   27360:	00000000 00027334 0001b117 0001b09d     ....4s..........
   27370:	0001b0f7 0001aaa1 0001aac7 00000000     ................

00027380 <typeinfo for SingletonTemplate<Uart3>>:
   27380:	000277d8 00027388                       .w...s..

00027388 <typeinfo name for SingletonTemplate<Uart3>>:
   27388:	69533731 656c676e 546e6f74 6c706d65     17SingletonTempl
   27398:	49657461 72615535 00453374              ateI5Uart3E.

000273a4 <typeinfo for Uart3>:
   273a4:	00027730 000273c4 00000000 00000002     0w...s..........
   273b4:	00027450 00000002 00027380 00000002     Pt.......s......

000273c4 <typeinfo name for Uart3>:
   273c4:	72615535 00003374 00000000              5Uart3......

000273d0 <vtable for Uart3>:
   273d0:	00000000 000273a4 0001b117 0001b09d     .....s..........
   273e0:	0001b0f7 0001ab5d 0001ab71 00000000     ....]...q.......

000273f0 <vtable for CharDev>:
   273f0:	00000000 00027410 0001d225 0001d225     .....t..%...%...
   27400:	0001abc5 0001abc9 0001abe1 00000000     ................

00027410 <typeinfo for CharDev>:
   27410:	000277d8 00027418                       .w...t..

00027418 <typeinfo name for CharDev>:
   27418:	61684337 76654472 61553700                       7CharDev.

00027421 <typeinfo name for UartDev>:
   27421:	72615537 76654474 00000000 00000000              7UartDev.......

00027430 <vtable for UartDev>:
   27430:	00000000 00027450 0001b117 0001b09d     ....Pt..........
   27440:	0001b0f7 0001aa8d 0001aab5 00000000     ................

00027450 <typeinfo for UartDev>:
   27450:	00027838 00027421 00027410              8x..!t...t..

0002745c <ucExpectedStackBytes.6438>:
   2745c:	a5a5a5a5 a5a5a5a5 a5a5a5a5 a5a5a5a5     ................
   2746c:	a5a5a5a5 454c4449 4c414800 474e4954     ....IDLE.HALTING
   2747c:	53595320 3a4d4554 61745320 6f206b63      SYSTEM: Stack o
   2748c:	66726576 20776f6c 74207962 3a6b7361     verflow by task:
   2749c:	540a0020 69207972 6572636e 6e697361      ..Try increasin
   274ac:	74732067 206b6361 6f6d656d 6f207972     g stack memory o
   274bc:	68742066 74207369 2e6b7361 4148000a     f this task...HA
   274cc:	4e49544c 59532047 4d455453 6f59203a     LTING SYSTEM: Yo
   274dc:	73207275 65747379 6172206d 756f206e     ur system ran ou
   274ec:	666f2074 6d656d20 2079726f 4d415228     t of memory (RAM
   274fc:	000a2129 74737953 50206d65 7265776f     )!..System Power
   2750c:	3a6e6f2d 6f6f4220 676e6974 2e2e2e20     -on: Booting ...
   2751c:	73795300 206d6574 73617243 52203a68     .System Crash: R
   2752c:	6f622d65 6e69746f 2e2e2067 6157002e     e-booting ....Wa
   2753c:	64686374 5320676f 65747379 6552206d     tchdog System Re
   2754c:	3a746573 6f6f4220 676e6974 2e2e2e20     set: Booting ...
   2755c:	656e5500 63657078 20646574 20525349     .Unexpected ISR 
   2756c:	6c6c6163 20746120 5f63706c 2e737973     call at lpc_sys.
   2757c:	654d0063 79726f6d 666e4920 616d726f     c.Memory Informa
   2758c:	6e6f6974 6c470a3a 6c61626f 65735520     tion:.Global Use
   2759c:	20202064 3525203a 616d0a64 636f6c6c     d   : %5d.malloc
   275ac:	65735520 20202064 3525203a 616d0a64      Used   : %5d.ma
   275bc:	636f6c6c 61764120 202e6c69 3525203a     lloc Avail. : %5
   275cc:	79530a64 6d657473 61764120 202e6c69     d.System Avail. 
   275dc:	3525203a 654e0a64 48207478 20706165     : %5d.Next Heap 
   275ec:	20727470 3a202020 25783020 0a583830     ptr    : 0x%08X.
   275fc:	7473614c 72627320 2029286b 20727470     Last sbrk() ptr 
   2760c:	30203a20 38302578 614c0a58 73207473      : 0x%08X.Last s
   2761c:	286b7262 69732029 3a20657a 0a752520     brk() size : %u.
   2762c:	206d754e 72627320 2029286b 6c6c6163     Num  sbrk() call
   2763c:	25203a73 25000a75 52492075 61772051     s: %u..%u IRQ wa
   2764c:	72742073 65676769 2c646572 74756220     s triggered, but
   2765c:	206f6e20 20515249 76726573 20656369      no IRQ service 
   2766c:	20736177 69666564 2164656e 4d4e000a     was defined!..NM
   2767c:	61462049 0a746c75 6d654d00 75614620     I Fault..Mem Fau
   2768c:	000a746c 20535542 6c756146 55000a74     lt..BUS Fault..U
   2769c:	65676173 75614620 000a746c 4d474244     sage Fault..DBGM
   276ac:	46204e4f 746c7561 5249000a 6f6e2051     ON Fault..IRQ no
   276bc:	65722074 74736967 64657265 616d0021     t registered!.ma
   276cc:	29286e69 6f687320 20646c75 6576656e     in() should neve
   276dc:	78652072 6f207469 6874206e 73207369     r exit on this s
   276ec:	65747379 00000a6d                       ystem...

000276f4 <typeinfo for __cxxabiv1::__vmi_class_type_info>:
   276f4:	00027838 00027700 00027800              8x...w...x..

00027700 <typeinfo name for __cxxabiv1::__vmi_class_type_info>:
   27700:	5f30314e 7878635f 76696261 5f313231     N10__cxxabiv121_
   27710:	696d765f 616c635f 745f7373 5f657079     _vmi_class_type_
   27720:	6f666e69 00000045                       infoE...

00027728 <vtable for __cxxabiv1::__vmi_class_type_info>:
   27728:	00000000 000276f4 0001cdc5 0001cdd9     .....v..........
   27738:	0001d269 0001d26d 0001d33d 0001d2bb     i...m...=.......
   27748:	0001d0fd 0001ce8d 0001cdeb 00000000     ................
   27758:	65727570 72697620 6c617574 74656d20     pure virtual met
   27768:	20646f68 6c6c6163 000a6465 656c6564     hod called..dele
   27778:	20646574 74726976 206c6175 6874656d     ted virtual meth
   27788:	6320646f 656c6c61 00000a64              od called...

00027794 <typeinfo for std::type_info>:
   27794:	000277d8 0002779c                       .w...w..

0002779c <typeinfo name for std::type_info>:
   2779c:	74397453 5f657079 6f666e69 00000000     St9type_info....
   277ac:	00000000                                ....

000277b0 <vtable for std::type_info>:
   277b0:	00000000 00027794 0001d25d 0001d275     .....w..]...u...
   277c0:	0001d269 0001d26d 0001d2b7 0001d271     i...m.......q...

000277d0 <vtable for __cxxabiv1::__class_type_info>:
   277d0:	00000000 00027800 0001d2fd 0001d311     .....x..........
   277e0:	0001d269 0001d26d 0001d33d 0001d2bb     i...m...=.......
   277f0:	0001d323 0001d363 0001d2ef 00000000     #...c...........

00027800 <typeinfo for __cxxabiv1::__class_type_info>:
   27800:	00027838 0002780c 00027794              8x...x...w..

0002780c <typeinfo name for __cxxabiv1::__class_type_info>:
   2780c:	5f30314e 7878635f 76696261 5f373131     N10__cxxabiv117_
   2781c:	616c635f 745f7373 5f657079 6f666e69     _class_type_info
   2782c:	00000045                                E...

00027830 <vtable for __cxxabiv1::__si_class_type_info>:
   27830:	00000000 00027860 0001d39d 0001d3b1     ....`x..........
   27840:	0001d269 0001d26d 0001d33d 0001d2bb     i...m...=.......
   27850:	0001d473 0001d3f7 0001d3c3 00000000     s...............

00027860 <typeinfo for __cxxabiv1::__si_class_type_info>:
   27860:	00027838 0002786c 00027800              8x..lx...x..

0002786c <typeinfo name for __cxxabiv1::__si_class_type_info>:
   2786c:	5f30314e 7878635f 76696261 5f303231     N10__cxxabiv120_
   2787c:	5f69735f 73616c63 79745f73 695f6570     _si_class_type_i
   2788c:	456f666e 20200000                                nfoE.

00027891 <_ctype_>:
   27891:	20202000 20202020 28282020 20282828     .         ((((( 
   278a1:	20202020 20202020 20202020 20202020                     
   278b1:	10108820 10101010 10101010 10101010      ...............
   278c1:	04040410 04040404 10040404 10101010     ................
   278d1:	41411010 41414141 01010101 01010101     ..AAAAAA........
   278e1:	01010101 01010101 01010101 10101010     ................
   278f1:	42421010 42424242 02020202 02020202     ..BBBBBB........
   27901:	02020202 02020202 02020202 10101010     ................
   27911:	00000020 00000000 00000000 00000000      ...............
	...

00027994 <__sf_fake_stdin>:
	...

000279b4 <__sf_fake_stdout>:
	...

000279d4 <__sf_fake_stderr>:
	...
   279f4:	00000043                                C...

000279f8 <_global_impure_ptr>:
   279f8:	2007c10c                                ... 

000279fc <_DAYS_BEFORE_MONTH>:
   279fc:	00000000 0000001f 0000003b 0000005a     ........;...Z...
   27a0c:	00000078 00000097 000000b5 000000d4     x...............
   27a1c:	000000f3 00000111 00000130 0000014e     ........0...N...

00027a2c <DAYS_IN_MONTH>:
   27a2c:	0000001f 0000001c 0000001f 0000001e     ................
   27a3c:	0000001f 0000001e 0000001f 0000001f     ................
   27a4c:	0000001e 0000001f 0000001e 0000001f     ................

00027a5c <mon_lengths>:
   27a5c:	0000001f 0000001c 0000001f 0000001e     ................
   27a6c:	0000001f 0000001e 0000001f 0000001f     ................
   27a7c:	0000001e 0000001f 0000001e 0000001f     ................
   27a8c:	0000001f 0000001d 0000001f 0000001e     ................
   27a9c:	0000001f 0000001e 0000001f 0000001f     ................
   27aac:	0000001e 0000001f 0000001e 0000001f     ................

00027abc <year_lengths>:
   27abc:	0000016d 0000016e 00000000              m...n.......

00027ac8 <tinytens>:
   27ac8:	97d889bc 3c9cd2b2 d5a8a733 3949f623     .......<3...#.I9
   27ad8:	44f4a73d 32a50ffd cf8c979d 255bba08     =..D...2......[%
   27ae8:	64ac6f43 11680628                       Co.d(.h.

00027af0 <fpi.5246>:
   27af0:	00000035 fffffbce 000003cb 00000001     5...............
   27b00:	00000000                                ....

00027b04 <fpinan.5282>:
   27b04:	00000034 fffffbce 000003cb 00000001     4...............
   27b14:	00000000 2b302d23 6c680020 6665004c     ....#-0+ .hlL.ef
   27b24:	47464567 464e4900 666e6900 4e414e00     gEFG.INF.inf.NAN
   27b34:	6e616e00 32313000 36353433 41393837     .nan.0123456789A
   27b44:	45444342 31300046 35343332 39383736     BCDEF.0123456789
   27b54:	64636261 65006665 00646c25 00027b7e     abcdef.e%ld.~{..
   27b64:	00027b81 00027b84 61462d41 3938662d     .{...{..A-Fa-f89
   27b74:	33323130 37363534 2d2b005d 00303000     01234567].+-.00.
   27b84:	25005878 2073332e 73332e25 20643325     xX.%.3s %.3s%3d 
   27b94:	64322e25 322e253a 2e253a64 25206432     %.2d:%.2d:%.2d %
   27ba4:	53000a64                                         d..

00027ba7 <day_name.4594>:
   27ba7:	4d6e7553 75546e6f 64655765 46756854     SunMonTueWedThuF
   27bb7:	61536972 6e614a74                                riSat

00027bbc <mon_name.4595>:
   27bbc:	466e614a 614d6265 72704172 4a79614d     JanFebMarAprMayJ
   27bcc:	754a6e75 6775416c 4f706553 6f4e7463     unJulAugSepOctNo
   27bdc:	63654476 69666e49 7974696e 4e614e00     vDecInfinity.NaN
   27bec:	534f5000 00005849 00000000              .POSIX......

00027bf8 <__mprec_tens>:
   27bf8:	00000000 3ff00000 00000000 40240000     .......?......$@
   27c08:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
   27c18:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
   27c28:	00000000 412e8480 00000000 416312d0     .......A......cA
   27c38:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
   27c48:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
   27c58:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
   27c68:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
   27c78:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
   27c88:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
   27c98:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
   27ca8:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
   27cb8:	79d99db4 44ea7843                       ...yCx.D

00027cc0 <__mprec_bigtens>:
   27cc0:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
   27cd0:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
   27ce0:	7f73bf3c 75154fdd                       <.s..O.u

00027ce8 <p05.5281>:
   27ce8:	00000005 00000019 0000007d              ........}...

00027cf4 <__init_array_start>:
   27cf4:	0001364d 	.word	0x0001364d
   27cf8:	000144fd 	.word	0x000144fd
